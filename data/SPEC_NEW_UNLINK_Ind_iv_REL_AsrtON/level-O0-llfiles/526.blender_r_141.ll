; ModuleID = 'blender/source/blender/blenkernel/intern/depsgraph.c'
source_filename = "blender/source/blender/blenkernel/intern/depsgraph.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.MeshElemMap = type opaque
%struct.BMesh = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type opaque
%struct.wmSubWindow = type opaque
%struct.wmGesture = type opaque
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type opaque
%struct.wmNotifier = type opaque
%struct.bContextDataResult = type opaque
%struct.wmTimer = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type { %struct.ListBase, %struct.GHash*, i32, i8, i32, i8 }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.DagNodeQueue = type { %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem*, i32, i32, %struct.DagNodeQueue* }
%struct.DagNodeQueueElem = type { %struct.DagNode*, %struct.DagNodeQueueElem* }
%struct.DagNode = type { i32, i16, float, float, float, i8*, i8*, i32, i32, i32, i64, i32, i32, i32, i32, i32, %struct.DagAdjList*, %struct.DagAdjList*, %struct.DagNode*, i32, i8, i16 }
%struct.DagAdjList = type { %struct.DagNode*, i16, i32, i32, i8*, %struct.DagAdjList* }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type opaque
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.BMEditMesh = type opaque
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.Camera = type { %struct.ID, %struct.AnimData*, i8, i8, i16, float, float, float, float, float, float, float, float, float, float, float, %struct.Ipo*, %struct.Object*, i8, [7 x i8] }
%struct.DupliObject = type { %struct.DupliObject*, %struct.DupliObject*, %struct.Object*, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], %struct.ParticleSystem* }
%struct.BoidRule = type { %struct.BoidRule*, %struct.BoidRule*, i32, i32, [32 x i8] }
%struct.BoidState = type { %struct.BoidState*, %struct.BoidState*, %struct.ListBase, %struct.ListBase, %struct.ListBase, [32 x i8], i32, i32, i32, float, i32, i32, float, float }
%struct.EffectorCache = type { %struct.EffectorCache*, %struct.EffectorCache*, %struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.SurfaceModifierData*, %struct.PartDeflect*, %struct.GuideEffectorData*, [4 x float], [3 x float], float, [3 x float], float, i32 }
%struct.SurfaceModifierData = type { %struct.ModifierData, %struct.MVert*, %struct.MVert*, %struct.DerivedMesh*, %struct.BVHTreeFromMesh*, i32, i32 }
%struct.BVHTreeFromMesh = type { %struct.BVHTree*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, %struct.MVert*, %struct.MEdge*, %struct.MFace*, i8, i8, i8, float, i8*, i8 }
%struct.BVHTreeNearest = type { i32, [3 x float], [3 x float], float, i32 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }
%struct.GuideEffectorData = type { [3 x float], float }
%struct.ParticleTarget = type { %struct.ParticleTarget*, %struct.ParticleTarget*, %struct.Object*, i32, i16, i16, float, float }
%struct.bFollowTrackConstraint = type { %struct.MovieClip*, [64 x i8], i32, i32, [64 x i8], %struct.Object*, %struct.Object* }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.BoidRuleGoalAvoid = type { %struct.BoidRule, %struct.Object*, i32, float, i32, i32 }
%struct.BoidRuleFollowLeader = type { %struct.BoidRule, %struct.Object*, [3 x float], [3 x float], float, float, i32, i32 }
%struct.TimeMarker = type { %struct.TimeMarker*, %struct.TimeMarker*, i32, [64 x i8], i32, %struct.Object* }
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.DagSceneLayer = type { %struct.DagSceneLayer*, %struct.DagSceneLayer*, %struct.Scene*, i32 }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.anon.0 = type { %struct.ID*, i8 }
%struct.NodeTreeIterStore = type { %struct.bNodeTree*, %struct.Scene*, %struct.Material*, %struct.Tex*, %struct.Lamp*, %struct.World*, %struct.FreestyleLineStyle* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bKinematicConstraint = type { %struct.Object*, i16, i16, i16, i16, [64 x i8], %struct.Object*, [64 x i8], float, float, float, [3 x float], i16, i16, float }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.DriverVar = type { %struct.DriverVar*, %struct.DriverVar*, [64 x i8], [8 x %struct.DriverTarget], i16, i16, float }
%struct.DriverTarget = type { %struct.ID*, i8*, [32 x i8], i16, i16, i32 }
%struct.NlaTrack = type { %struct.NlaTrack*, %struct.NlaTrack*, %struct.ListBase, i32, i32, [64 x i8] }
%struct.anon.1 = type { %struct.ID*, i8 }

@threaded_update_lock = internal global i32 0, align 4, !dbg !0
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [10 x i8] c"DAG queue\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"DAG queue elem3\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"DAG queue elem4\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"pushing null node\0A\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"DAG queue elem1\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"DAG queue elem2\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"return null\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"DAG root\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"DAG node\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"dag_add_node gh\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"DAG adj list\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"** %s %i %i-%i \00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"** %25s %2.2i-%2.2i \00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"node : %s col: %i\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"-- %s \00", align 1
@EditorsUpdateIDCb = internal global void (%struct.Main*, %struct.ID*)* null, align 8, !dbg !4590
@EditorsUpdateSceneCb = internal global void (%struct.Main*, %struct.Scene*, i32)* null, align 8, !dbg !4658
@.str.16 = private unnamed_addr constant [36 x i8] c"DAG zero... not allowed to happen!\0A\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.17 = private unnamed_addr constant [19 x i8] c"%s: id=%s flag=%d\0A\00", align 1
@__func__.DAG_id_tag_update_ex = private unnamed_addr constant [21 x i8] c"DAG_id_tag_update_ex\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"Parent Relation\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"Pose Constraint\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"IK Constraint\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"Root Bone Relation\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"cyclic %s\0A\00", align 1
@dag_print_dependencies = internal global i32 0, align 4, !dbg !4665
@.str.23 = private unnamed_addr constant [31 x i8] c"\0ADEPENDENCY RELATIONS for %s\0A\0A\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"Object-Data Relation\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"Parent\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"Vertex Parent\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"Bone Parent\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"Lattice Parent\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"Curve Parent\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"Duplivert\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"Proxy\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"Dupligroup\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"Camera DoF\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"Metaball\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"Curve Bevel\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"Curve Taper\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"Object Font\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Texture On Curve\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"Particle-Object Relation\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"Particle Targets\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"Particle Object Visualization\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"Particle Group Visualization\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"Particle Field\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"Boid Rule\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"Scene Relation\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"modifiers[\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"pose.bones[\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"Driver\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"data.\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"Field Collision\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"\0Aordered\0A\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"dag scene layer\00", align 1
@.str.54 = private unnamed_addr constant [28 x i8] c"Dependency cycle detected:\0A\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"%s depends on:\0A\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"  %s through %s\0A\00", align 1
@.str.57 = private unnamed_addr constant [32 x i8] c"  %s depends on %s through %s.\0A\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"null\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_init() #0 !dbg !4675 {
entry:
  call void @BLI_spin_init(i32* @threaded_update_lock), !dbg !4677
  ret void, !dbg !4678
}

declare dso_local void @BLI_spin_init(i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_exit() #0 !dbg !4679 {
entry:
  call void @BLI_spin_end(i32* @threaded_update_lock), !dbg !4680
  ret void, !dbg !4681
}

declare dso_local void @BLI_spin_end(i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNodeQueue* @queue_create(i32 %slots) #0 !dbg !4682 {
entry:
  %slots.addr = alloca i32, align 4
  %queue = alloca %struct.DagNodeQueue*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  %i = alloca i32, align 4
  store i32 %slots, i32* %slots.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slots.addr, metadata !4702, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue, metadata !4704, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !4706, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4708, metadata !DIExpression()), !dbg !4709
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4710
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !4710
  %1 = bitcast i8* %call to %struct.DagNodeQueue*, !dbg !4710
  store %struct.DagNodeQueue* %1, %struct.DagNodeQueue** %queue, align 8, !dbg !4711
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4712
  %call1 = call i8* %2(i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !4712
  %3 = bitcast i8* %call1 to %struct.DagNodeQueue*, !dbg !4712
  %4 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4713
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %4, i32 0, i32 4, !dbg !4714
  store %struct.DagNodeQueue* %3, %struct.DagNodeQueue** %freenodes, align 8, !dbg !4715
  %5 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4716
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %5, i32 0, i32 2, !dbg !4717
  store i32 0, i32* %count, align 8, !dbg !4718
  %6 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4719
  %maxlevel = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %6, i32 0, i32 3, !dbg !4720
  store i32 0, i32* %maxlevel, align 4, !dbg !4721
  %7 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4722
  %last = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %7, i32 0, i32 1, !dbg !4723
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %last, align 8, !dbg !4724
  %8 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4725
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %8, i32 0, i32 0, !dbg !4726
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %first, align 8, !dbg !4727
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4728
  %call2 = call i8* %9(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !4728
  %10 = bitcast i8* %call2 to %struct.DagNodeQueueElem*, !dbg !4728
  store %struct.DagNodeQueueElem* %10, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4729
  %11 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4730
  %node = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %11, i32 0, i32 0, !dbg !4731
  store %struct.DagNode* null, %struct.DagNode** %node, align 8, !dbg !4732
  %12 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4733
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %12, i32 0, i32 1, !dbg !4734
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next, align 8, !dbg !4735
  %13 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4736
  %14 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4737
  %freenodes3 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %14, i32 0, i32 4, !dbg !4738
  %15 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes3, align 8, !dbg !4738
  %last4 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %15, i32 0, i32 1, !dbg !4739
  store %struct.DagNodeQueueElem* %13, %struct.DagNodeQueueElem** %last4, align 8, !dbg !4740
  %16 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4741
  %freenodes5 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %16, i32 0, i32 4, !dbg !4742
  %17 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes5, align 8, !dbg !4742
  %first6 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %17, i32 0, i32 0, !dbg !4743
  store %struct.DagNodeQueueElem* %13, %struct.DagNodeQueueElem** %first6, align 8, !dbg !4744
  store i32 1, i32* %i, align 4, !dbg !4745
  br label %for.cond, !dbg !4747

for.cond:                                         ; preds = %for.inc, %entry
  %18 = load i32, i32* %i, align 4, !dbg !4748
  %19 = load i32, i32* %slots.addr, align 4, !dbg !4750
  %cmp = icmp slt i32 %18, %19, !dbg !4751
  br i1 %cmp, label %for.body, label %for.end, !dbg !4752

for.body:                                         ; preds = %for.cond
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4753
  %call7 = call i8* %20(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !4753
  %21 = bitcast i8* %call7 to %struct.DagNodeQueueElem*, !dbg !4753
  store %struct.DagNodeQueueElem* %21, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4755
  %22 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4756
  %node8 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %22, i32 0, i32 0, !dbg !4757
  store %struct.DagNode* null, %struct.DagNode** %node8, align 8, !dbg !4758
  %23 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4759
  %next9 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %23, i32 0, i32 1, !dbg !4760
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next9, align 8, !dbg !4761
  %24 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4762
  %25 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4763
  %freenodes10 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %25, i32 0, i32 4, !dbg !4764
  %26 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes10, align 8, !dbg !4764
  %last11 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %26, i32 0, i32 1, !dbg !4765
  %27 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last11, align 8, !dbg !4765
  %next12 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %27, i32 0, i32 1, !dbg !4766
  store %struct.DagNodeQueueElem* %24, %struct.DagNodeQueueElem** %next12, align 8, !dbg !4767
  %28 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4768
  %29 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4769
  %freenodes13 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %29, i32 0, i32 4, !dbg !4770
  %30 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes13, align 8, !dbg !4770
  %last14 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %30, i32 0, i32 1, !dbg !4771
  store %struct.DagNodeQueueElem* %28, %struct.DagNodeQueueElem** %last14, align 8, !dbg !4772
  br label %for.inc, !dbg !4773

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !4774
  %inc = add nsw i32 %31, 1, !dbg !4774
  store i32 %inc, i32* %i, align 4, !dbg !4774
  br label %for.cond, !dbg !4775, !llvm.loop !4776

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %slots.addr, align 4, !dbg !4778
  %33 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4779
  %freenodes15 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %33, i32 0, i32 4, !dbg !4780
  %34 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes15, align 8, !dbg !4780
  %count16 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %34, i32 0, i32 2, !dbg !4781
  store i32 %32, i32* %count16, align 8, !dbg !4782
  %35 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !4783
  ret %struct.DagNodeQueue* %35, !dbg !4784
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @queue_raz(%struct.DagNodeQueue* %queue) #0 !dbg !4785 {
entry:
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !4788, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !4790, metadata !DIExpression()), !dbg !4791
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4792
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !4793
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !4793
  store %struct.DagNodeQueueElem* %1, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4794
  %2 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4795
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %2, i32 0, i32 4, !dbg !4797
  %3 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes, align 8, !dbg !4797
  %last = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %3, i32 0, i32 1, !dbg !4798
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last, align 8, !dbg !4798
  %tobool = icmp ne %struct.DagNodeQueueElem* %4, null, !dbg !4795
  br i1 %tobool, label %if.then, label %if.else, !dbg !4799

if.then:                                          ; preds = %entry
  %5 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4800
  %6 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4801
  %freenodes1 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %6, i32 0, i32 4, !dbg !4802
  %7 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes1, align 8, !dbg !4802
  %last2 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %7, i32 0, i32 1, !dbg !4803
  %8 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last2, align 8, !dbg !4803
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %8, i32 0, i32 1, !dbg !4804
  store %struct.DagNodeQueueElem* %5, %struct.DagNodeQueueElem** %next, align 8, !dbg !4805
  br label %if.end, !dbg !4801

if.else:                                          ; preds = %entry
  %9 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4806
  %10 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4807
  %freenodes3 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %10, i32 0, i32 4, !dbg !4808
  %11 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes3, align 8, !dbg !4808
  %last4 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %11, i32 0, i32 1, !dbg !4809
  store %struct.DagNodeQueueElem* %9, %struct.DagNodeQueueElem** %last4, align 8, !dbg !4810
  %12 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4811
  %freenodes5 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %12, i32 0, i32 4, !dbg !4812
  %13 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes5, align 8, !dbg !4812
  %first6 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %13, i32 0, i32 0, !dbg !4813
  store %struct.DagNodeQueueElem* %9, %struct.DagNodeQueueElem** %first6, align 8, !dbg !4814
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4815
  %node = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %14, i32 0, i32 0, !dbg !4816
  store %struct.DagNode* null, %struct.DagNode** %node, align 8, !dbg !4817
  %15 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4818
  %freenodes7 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %15, i32 0, i32 4, !dbg !4819
  %16 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes7, align 8, !dbg !4819
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %16, i32 0, i32 2, !dbg !4820
  %17 = load i32, i32* %count, align 8, !dbg !4821
  %inc = add nsw i32 %17, 1, !dbg !4821
  store i32 %inc, i32* %count, align 8, !dbg !4821
  br label %while.cond, !dbg !4822

while.cond:                                       ; preds = %while.body, %if.end
  %18 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4823
  %next8 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %18, i32 0, i32 1, !dbg !4824
  %19 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next8, align 8, !dbg !4824
  %tobool9 = icmp ne %struct.DagNodeQueueElem* %19, null, !dbg !4822
  br i1 %tobool9, label %while.body, label %while.end, !dbg !4822

while.body:                                       ; preds = %while.cond
  %20 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4825
  %next10 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %20, i32 0, i32 1, !dbg !4827
  %21 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next10, align 8, !dbg !4827
  store %struct.DagNodeQueueElem* %21, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4828
  %22 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4829
  %node11 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %22, i32 0, i32 0, !dbg !4830
  store %struct.DagNode* null, %struct.DagNode** %node11, align 8, !dbg !4831
  %23 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4832
  %freenodes12 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %23, i32 0, i32 4, !dbg !4833
  %24 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes12, align 8, !dbg !4833
  %count13 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %24, i32 0, i32 2, !dbg !4834
  %25 = load i32, i32* %count13, align 8, !dbg !4835
  %inc14 = add nsw i32 %25, 1, !dbg !4835
  store i32 %inc14, i32* %count13, align 8, !dbg !4835
  br label %while.cond, !dbg !4822, !llvm.loop !4836

while.end:                                        ; preds = %while.cond
  %26 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4838
  %27 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4839
  %freenodes15 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %27, i32 0, i32 4, !dbg !4840
  %28 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes15, align 8, !dbg !4840
  %last16 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %28, i32 0, i32 1, !dbg !4841
  store %struct.DagNodeQueueElem* %26, %struct.DagNodeQueueElem** %last16, align 8, !dbg !4842
  %29 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4843
  %count17 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %29, i32 0, i32 2, !dbg !4844
  store i32 0, i32* %count17, align 8, !dbg !4845
  ret void, !dbg !4846
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @queue_delete(%struct.DagNodeQueue* %queue) #0 !dbg !4847 {
entry:
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  %temp = alloca %struct.DagNodeQueueElem*, align 8
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !4848, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !4850, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %temp, metadata !4852, metadata !DIExpression()), !dbg !4853
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4854
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !4855
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !4855
  store %struct.DagNodeQueueElem* %1, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4856
  br label %while.cond, !dbg !4857

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4858
  %tobool = icmp ne %struct.DagNodeQueueElem* %2, null, !dbg !4857
  br i1 %tobool, label %while.body, label %while.end, !dbg !4857

while.body:                                       ; preds = %while.cond
  %3 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4859
  store %struct.DagNodeQueueElem* %3, %struct.DagNodeQueueElem** %temp, align 8, !dbg !4861
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4862
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %4, i32 0, i32 1, !dbg !4863
  %5 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !4863
  store %struct.DagNodeQueueElem* %5, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4864
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4865
  %7 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %temp, align 8, !dbg !4866
  %8 = bitcast %struct.DagNodeQueueElem* %7 to i8*, !dbg !4866
  call void %6(i8* %8), !dbg !4865
  br label %while.cond, !dbg !4857, !llvm.loop !4867

while.end:                                        ; preds = %while.cond
  %9 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4869
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %9, i32 0, i32 4, !dbg !4870
  %10 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes, align 8, !dbg !4870
  %first1 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %10, i32 0, i32 0, !dbg !4871
  %11 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first1, align 8, !dbg !4871
  store %struct.DagNodeQueueElem* %11, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4872
  br label %while.cond2, !dbg !4873

while.cond2:                                      ; preds = %while.body4, %while.end
  %12 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4874
  %tobool3 = icmp ne %struct.DagNodeQueueElem* %12, null, !dbg !4873
  br i1 %tobool3, label %while.body4, label %while.end6, !dbg !4873

while.body4:                                      ; preds = %while.cond2
  %13 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4875
  store %struct.DagNodeQueueElem* %13, %struct.DagNodeQueueElem** %temp, align 8, !dbg !4877
  %14 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4878
  %next5 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %14, i32 0, i32 1, !dbg !4879
  %15 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next5, align 8, !dbg !4879
  store %struct.DagNodeQueueElem* %15, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4880
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4881
  %17 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %temp, align 8, !dbg !4882
  %18 = bitcast %struct.DagNodeQueueElem* %17 to i8*, !dbg !4882
  call void %16(i8* %18), !dbg !4881
  br label %while.cond2, !dbg !4873, !llvm.loop !4883

while.end6:                                       ; preds = %while.cond2
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4885
  %20 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4886
  %freenodes7 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %20, i32 0, i32 4, !dbg !4887
  %21 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes7, align 8, !dbg !4887
  %22 = bitcast %struct.DagNodeQueue* %21 to i8*, !dbg !4886
  call void %19(i8* %22), !dbg !4885
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4888
  %24 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4889
  %25 = bitcast %struct.DagNodeQueue* %24 to i8*, !dbg !4889
  call void %23(i8* %25), !dbg !4888
  ret void, !dbg !4890
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @push_queue(%struct.DagNodeQueue* %queue, %struct.DagNode* %node) #0 !dbg !4891 {
entry:
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  %i = alloca i32, align 4
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !4898, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4900, metadata !DIExpression()), !dbg !4901
  %0 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !4902
  %cmp = icmp eq %struct.DagNode* %0, null, !dbg !4904
  br i1 %cmp, label %if.then, label %if.end, !dbg !4905

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4906
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)), !dbg !4908
  br label %return, !dbg !4909

if.end:                                           ; preds = %entry
  %2 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4910
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %2, i32 0, i32 4, !dbg !4911
  %3 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes, align 8, !dbg !4911
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %3, i32 0, i32 0, !dbg !4912
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !4912
  store %struct.DagNodeQueueElem* %4, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4913
  %5 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4914
  %cmp1 = icmp ne %struct.DagNodeQueueElem* %5, null, !dbg !4916
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4917

if.then2:                                         ; preds = %if.end
  %6 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4918
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %6, i32 0, i32 1, !dbg !4920
  %7 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !4920
  %8 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4921
  %freenodes3 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %8, i32 0, i32 4, !dbg !4922
  %9 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes3, align 8, !dbg !4922
  %first4 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %9, i32 0, i32 0, !dbg !4923
  store %struct.DagNodeQueueElem* %7, %struct.DagNodeQueueElem** %first4, align 8, !dbg !4924
  %10 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4925
  %freenodes5 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %10, i32 0, i32 4, !dbg !4927
  %11 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes5, align 8, !dbg !4927
  %last = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %11, i32 0, i32 1, !dbg !4928
  %12 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last, align 8, !dbg !4928
  %13 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4929
  %cmp6 = icmp eq %struct.DagNodeQueueElem* %12, %13, !dbg !4930
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !4931

if.then7:                                         ; preds = %if.then2
  %14 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4932
  %freenodes8 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %14, i32 0, i32 4, !dbg !4934
  %15 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes8, align 8, !dbg !4934
  %last9 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %15, i32 0, i32 1, !dbg !4935
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %last9, align 8, !dbg !4936
  %16 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4937
  %freenodes10 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %16, i32 0, i32 4, !dbg !4938
  %17 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes10, align 8, !dbg !4938
  %first11 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %17, i32 0, i32 0, !dbg !4939
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %first11, align 8, !dbg !4940
  br label %if.end12, !dbg !4941

if.end12:                                         ; preds = %if.then7, %if.then2
  %18 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4942
  %freenodes13 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %18, i32 0, i32 4, !dbg !4943
  %19 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes13, align 8, !dbg !4943
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %19, i32 0, i32 2, !dbg !4944
  %20 = load i32, i32* %count, align 8, !dbg !4945
  %dec = add nsw i32 %20, -1, !dbg !4945
  store i32 %dec, i32* %count, align 8, !dbg !4945
  br label %if.end37, !dbg !4946

if.else:                                          ; preds = %if.end
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4947
  %call14 = call i8* %21(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)), !dbg !4947
  %22 = bitcast i8* %call14 to %struct.DagNodeQueueElem*, !dbg !4947
  store %struct.DagNodeQueueElem* %22, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4949
  %23 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4950
  %node15 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %23, i32 0, i32 0, !dbg !4951
  store %struct.DagNode* null, %struct.DagNode** %node15, align 8, !dbg !4952
  %24 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4953
  %next16 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %24, i32 0, i32 1, !dbg !4954
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next16, align 8, !dbg !4955
  %25 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4956
  %26 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4957
  %freenodes17 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %26, i32 0, i32 4, !dbg !4958
  %27 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes17, align 8, !dbg !4958
  %last18 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %27, i32 0, i32 1, !dbg !4959
  store %struct.DagNodeQueueElem* %25, %struct.DagNodeQueueElem** %last18, align 8, !dbg !4960
  %28 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4961
  %freenodes19 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %28, i32 0, i32 4, !dbg !4962
  %29 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes19, align 8, !dbg !4962
  %first20 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %29, i32 0, i32 0, !dbg !4963
  store %struct.DagNodeQueueElem* %25, %struct.DagNodeQueueElem** %first20, align 8, !dbg !4964
  store i32 1, i32* %i, align 4, !dbg !4965
  br label %for.cond, !dbg !4967

for.cond:                                         ; preds = %for.inc, %if.else
  %30 = load i32, i32* %i, align 4, !dbg !4968
  %cmp21 = icmp slt i32 %30, 50, !dbg !4970
  br i1 %cmp21, label %for.body, label %for.end, !dbg !4971

for.body:                                         ; preds = %for.cond
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4972
  %call22 = call i8* %31(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !4972
  %32 = bitcast i8* %call22 to %struct.DagNodeQueueElem*, !dbg !4972
  store %struct.DagNodeQueueElem* %32, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4974
  %33 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4975
  %node23 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %33, i32 0, i32 0, !dbg !4976
  store %struct.DagNode* null, %struct.DagNode** %node23, align 8, !dbg !4977
  %34 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4978
  %next24 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %34, i32 0, i32 1, !dbg !4979
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next24, align 8, !dbg !4980
  %35 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4981
  %36 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4982
  %freenodes25 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %36, i32 0, i32 4, !dbg !4983
  %37 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes25, align 8, !dbg !4983
  %last26 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %37, i32 0, i32 1, !dbg !4984
  %38 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last26, align 8, !dbg !4984
  %next27 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %38, i32 0, i32 1, !dbg !4985
  store %struct.DagNodeQueueElem* %35, %struct.DagNodeQueueElem** %next27, align 8, !dbg !4986
  %39 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !4987
  %40 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4988
  %freenodes28 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %40, i32 0, i32 4, !dbg !4989
  %41 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes28, align 8, !dbg !4989
  %last29 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %41, i32 0, i32 1, !dbg !4990
  store %struct.DagNodeQueueElem* %39, %struct.DagNodeQueueElem** %last29, align 8, !dbg !4991
  br label %for.inc, !dbg !4992

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4, !dbg !4993
  %inc = add nsw i32 %42, 1, !dbg !4993
  store i32 %inc, i32* %i, align 4, !dbg !4993
  br label %for.cond, !dbg !4994, !llvm.loop !4995

for.end:                                          ; preds = %for.cond
  %43 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !4997
  %freenodes30 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %43, i32 0, i32 4, !dbg !4998
  %44 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes30, align 8, !dbg !4998
  %count31 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %44, i32 0, i32 2, !dbg !4999
  store i32 50, i32* %count31, align 8, !dbg !5000
  %45 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5001
  %freenodes32 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %45, i32 0, i32 4, !dbg !5002
  %46 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes32, align 8, !dbg !5002
  %first33 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %46, i32 0, i32 0, !dbg !5003
  %47 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first33, align 8, !dbg !5003
  store %struct.DagNodeQueueElem* %47, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5004
  %48 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5005
  %next34 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %48, i32 0, i32 1, !dbg !5006
  %49 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next34, align 8, !dbg !5006
  %50 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5007
  %freenodes35 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %50, i32 0, i32 4, !dbg !5008
  %51 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes35, align 8, !dbg !5008
  %first36 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %51, i32 0, i32 0, !dbg !5009
  store %struct.DagNodeQueueElem* %49, %struct.DagNodeQueueElem** %first36, align 8, !dbg !5010
  br label %if.end37

if.end37:                                         ; preds = %for.end, %if.end12
  %52 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5011
  %next38 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %52, i32 0, i32 1, !dbg !5012
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next38, align 8, !dbg !5013
  %53 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !5014
  %54 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5015
  %node39 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %54, i32 0, i32 0, !dbg !5016
  store %struct.DagNode* %53, %struct.DagNode** %node39, align 8, !dbg !5017
  %55 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5018
  %last40 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %55, i32 0, i32 1, !dbg !5020
  %56 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last40, align 8, !dbg !5020
  %cmp41 = icmp ne %struct.DagNodeQueueElem* %56, null, !dbg !5021
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !5022

if.then42:                                        ; preds = %if.end37
  %57 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5023
  %58 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5024
  %last43 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %58, i32 0, i32 1, !dbg !5025
  %59 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last43, align 8, !dbg !5025
  %next44 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %59, i32 0, i32 1, !dbg !5026
  store %struct.DagNodeQueueElem* %57, %struct.DagNodeQueueElem** %next44, align 8, !dbg !5027
  br label %if.end45, !dbg !5024

if.end45:                                         ; preds = %if.then42, %if.end37
  %60 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5028
  %61 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5029
  %last46 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %61, i32 0, i32 1, !dbg !5030
  store %struct.DagNodeQueueElem* %60, %struct.DagNodeQueueElem** %last46, align 8, !dbg !5031
  %62 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5032
  %first47 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %62, i32 0, i32 0, !dbg !5034
  %63 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first47, align 8, !dbg !5034
  %cmp48 = icmp eq %struct.DagNodeQueueElem* %63, null, !dbg !5035
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !5036

if.then49:                                        ; preds = %if.end45
  %64 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5037
  %65 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5039
  %first50 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %65, i32 0, i32 0, !dbg !5040
  store %struct.DagNodeQueueElem* %64, %struct.DagNodeQueueElem** %first50, align 8, !dbg !5041
  br label %if.end51, !dbg !5042

if.end51:                                         ; preds = %if.then49, %if.end45
  %66 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5043
  %count52 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %66, i32 0, i32 2, !dbg !5044
  %67 = load i32, i32* %count52, align 8, !dbg !5045
  %inc53 = add nsw i32 %67, 1, !dbg !5045
  store i32 %inc53, i32* %count52, align 8, !dbg !5045
  br label %return, !dbg !5046

return:                                           ; preds = %if.end51, %if.then
  ret void, !dbg !5046
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @push_stack(%struct.DagNodeQueue* %queue, %struct.DagNode* %node) #0 !dbg !5047 {
entry:
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  %i = alloca i32, align 4
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !5048, metadata !DIExpression()), !dbg !5049
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !5052, metadata !DIExpression()), !dbg !5053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5054, metadata !DIExpression()), !dbg !5055
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5056
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 4, !dbg !5057
  %1 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes, align 8, !dbg !5057
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %1, i32 0, i32 0, !dbg !5058
  %2 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !5058
  store %struct.DagNodeQueueElem* %2, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5059
  %3 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5060
  %cmp = icmp ne %struct.DagNodeQueueElem* %3, null, !dbg !5062
  br i1 %cmp, label %if.then, label %if.else, !dbg !5063

if.then:                                          ; preds = %entry
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5064
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %4, i32 0, i32 1, !dbg !5066
  %5 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !5066
  %6 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5067
  %freenodes1 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %6, i32 0, i32 4, !dbg !5068
  %7 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes1, align 8, !dbg !5068
  %first2 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %7, i32 0, i32 0, !dbg !5069
  store %struct.DagNodeQueueElem* %5, %struct.DagNodeQueueElem** %first2, align 8, !dbg !5070
  %8 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5071
  %freenodes3 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %8, i32 0, i32 4, !dbg !5073
  %9 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes3, align 8, !dbg !5073
  %last = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %9, i32 0, i32 1, !dbg !5074
  %10 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last, align 8, !dbg !5074
  %11 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5075
  %cmp4 = icmp eq %struct.DagNodeQueueElem* %10, %11, !dbg !5076
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !5077

if.then5:                                         ; preds = %if.then
  %12 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5078
  %freenodes6 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %12, i32 0, i32 4, !dbg !5080
  %13 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes6, align 8, !dbg !5080
  %last7 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %13, i32 0, i32 1, !dbg !5081
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %last7, align 8, !dbg !5082
  %14 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5083
  %freenodes8 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %14, i32 0, i32 4, !dbg !5084
  %15 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes8, align 8, !dbg !5084
  %first9 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %15, i32 0, i32 0, !dbg !5085
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %first9, align 8, !dbg !5086
  br label %if.end, !dbg !5087

if.end:                                           ; preds = %if.then5, %if.then
  %16 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5088
  %freenodes10 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %16, i32 0, i32 4, !dbg !5089
  %17 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes10, align 8, !dbg !5089
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %17, i32 0, i32 2, !dbg !5090
  %18 = load i32, i32* %count, align 8, !dbg !5091
  %dec = add nsw i32 %18, -1, !dbg !5091
  store i32 %dec, i32* %count, align 8, !dbg !5091
  br label %if.end33, !dbg !5092

if.else:                                          ; preds = %entry
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5093
  %call = call i8* %19(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)), !dbg !5093
  %20 = bitcast i8* %call to %struct.DagNodeQueueElem*, !dbg !5093
  store %struct.DagNodeQueueElem* %20, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5095
  %21 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5096
  %node11 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %21, i32 0, i32 0, !dbg !5097
  store %struct.DagNode* null, %struct.DagNode** %node11, align 8, !dbg !5098
  %22 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5099
  %next12 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %22, i32 0, i32 1, !dbg !5100
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next12, align 8, !dbg !5101
  %23 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5102
  %24 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5103
  %freenodes13 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %24, i32 0, i32 4, !dbg !5104
  %25 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes13, align 8, !dbg !5104
  %last14 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %25, i32 0, i32 1, !dbg !5105
  store %struct.DagNodeQueueElem* %23, %struct.DagNodeQueueElem** %last14, align 8, !dbg !5106
  %26 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5107
  %freenodes15 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %26, i32 0, i32 4, !dbg !5108
  %27 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes15, align 8, !dbg !5108
  %first16 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %27, i32 0, i32 0, !dbg !5109
  store %struct.DagNodeQueueElem* %23, %struct.DagNodeQueueElem** %first16, align 8, !dbg !5110
  store i32 1, i32* %i, align 4, !dbg !5111
  br label %for.cond, !dbg !5113

for.cond:                                         ; preds = %for.inc, %if.else
  %28 = load i32, i32* %i, align 4, !dbg !5114
  %cmp17 = icmp slt i32 %28, 50, !dbg !5116
  br i1 %cmp17, label %for.body, label %for.end, !dbg !5117

for.body:                                         ; preds = %for.cond
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5118
  %call18 = call i8* %29(i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !5118
  %30 = bitcast i8* %call18 to %struct.DagNodeQueueElem*, !dbg !5118
  store %struct.DagNodeQueueElem* %30, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5120
  %31 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5121
  %node19 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %31, i32 0, i32 0, !dbg !5122
  store %struct.DagNode* null, %struct.DagNode** %node19, align 8, !dbg !5123
  %32 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5124
  %next20 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %32, i32 0, i32 1, !dbg !5125
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next20, align 8, !dbg !5126
  %33 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5127
  %34 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5128
  %freenodes21 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %34, i32 0, i32 4, !dbg !5129
  %35 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes21, align 8, !dbg !5129
  %last22 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %35, i32 0, i32 1, !dbg !5130
  %36 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last22, align 8, !dbg !5130
  %next23 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %36, i32 0, i32 1, !dbg !5131
  store %struct.DagNodeQueueElem* %33, %struct.DagNodeQueueElem** %next23, align 8, !dbg !5132
  %37 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5133
  %38 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5134
  %freenodes24 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %38, i32 0, i32 4, !dbg !5135
  %39 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes24, align 8, !dbg !5135
  %last25 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %39, i32 0, i32 1, !dbg !5136
  store %struct.DagNodeQueueElem* %37, %struct.DagNodeQueueElem** %last25, align 8, !dbg !5137
  br label %for.inc, !dbg !5138

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !5139
  %inc = add nsw i32 %40, 1, !dbg !5139
  store i32 %inc, i32* %i, align 4, !dbg !5139
  br label %for.cond, !dbg !5140, !llvm.loop !5141

for.end:                                          ; preds = %for.cond
  %41 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5143
  %freenodes26 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %41, i32 0, i32 4, !dbg !5144
  %42 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes26, align 8, !dbg !5144
  %count27 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %42, i32 0, i32 2, !dbg !5145
  store i32 50, i32* %count27, align 8, !dbg !5146
  %43 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5147
  %freenodes28 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %43, i32 0, i32 4, !dbg !5148
  %44 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes28, align 8, !dbg !5148
  %first29 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %44, i32 0, i32 0, !dbg !5149
  %45 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first29, align 8, !dbg !5149
  store %struct.DagNodeQueueElem* %45, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5150
  %46 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5151
  %next30 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %46, i32 0, i32 1, !dbg !5152
  %47 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next30, align 8, !dbg !5152
  %48 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5153
  %freenodes31 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %48, i32 0, i32 4, !dbg !5154
  %49 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes31, align 8, !dbg !5154
  %first32 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %49, i32 0, i32 0, !dbg !5155
  store %struct.DagNodeQueueElem* %47, %struct.DagNodeQueueElem** %first32, align 8, !dbg !5156
  br label %if.end33

if.end33:                                         ; preds = %for.end, %if.end
  %50 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5157
  %first34 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %50, i32 0, i32 0, !dbg !5158
  %51 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first34, align 8, !dbg !5158
  %52 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5159
  %next35 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %52, i32 0, i32 1, !dbg !5160
  store %struct.DagNodeQueueElem* %51, %struct.DagNodeQueueElem** %next35, align 8, !dbg !5161
  %53 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !5162
  %54 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5163
  %node36 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %54, i32 0, i32 0, !dbg !5164
  store %struct.DagNode* %53, %struct.DagNode** %node36, align 8, !dbg !5165
  %55 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5166
  %56 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5167
  %first37 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %56, i32 0, i32 0, !dbg !5168
  store %struct.DagNodeQueueElem* %55, %struct.DagNodeQueueElem** %first37, align 8, !dbg !5169
  %57 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5170
  %last38 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %57, i32 0, i32 1, !dbg !5172
  %58 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last38, align 8, !dbg !5172
  %cmp39 = icmp eq %struct.DagNodeQueueElem* %58, null, !dbg !5173
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !5174

if.then40:                                        ; preds = %if.end33
  %59 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5175
  %60 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5176
  %last41 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %60, i32 0, i32 1, !dbg !5177
  store %struct.DagNodeQueueElem* %59, %struct.DagNodeQueueElem** %last41, align 8, !dbg !5178
  br label %if.end42, !dbg !5176

if.end42:                                         ; preds = %if.then40, %if.end33
  %61 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5179
  %count43 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %61, i32 0, i32 2, !dbg !5180
  %62 = load i32, i32* %count43, align 8, !dbg !5181
  %inc44 = add nsw i32 %62, 1, !dbg !5181
  store i32 %inc44, i32* %count43, align 8, !dbg !5181
  ret void, !dbg !5182
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @pop_queue(%struct.DagNodeQueue* %queue) #0 !dbg !5183 {
entry:
  %retval = alloca %struct.DagNode*, align 8
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  %elem = alloca %struct.DagNodeQueueElem*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %elem, metadata !5188, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !5190, metadata !DIExpression()), !dbg !5191
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5192
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !5193
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !5193
  store %struct.DagNodeQueueElem* %1, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5194
  %2 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5195
  %tobool = icmp ne %struct.DagNodeQueueElem* %2, null, !dbg !5195
  br i1 %tobool, label %if.then, label %if.else, !dbg !5197

if.then:                                          ; preds = %entry
  %3 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5198
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %3, i32 0, i32 1, !dbg !5200
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !5200
  %5 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5201
  %first1 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %5, i32 0, i32 0, !dbg !5202
  store %struct.DagNodeQueueElem* %4, %struct.DagNodeQueueElem** %first1, align 8, !dbg !5203
  %6 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5204
  %last = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %6, i32 0, i32 1, !dbg !5206
  %7 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last, align 8, !dbg !5206
  %8 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5207
  %cmp = icmp eq %struct.DagNodeQueueElem* %7, %8, !dbg !5208
  br i1 %cmp, label %if.then2, label %if.end, !dbg !5209

if.then2:                                         ; preds = %if.then
  %9 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5210
  %last3 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %9, i32 0, i32 1, !dbg !5212
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %last3, align 8, !dbg !5213
  %10 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5214
  %first4 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %10, i32 0, i32 0, !dbg !5215
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %first4, align 8, !dbg !5216
  br label %if.end, !dbg !5217

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5218
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %11, i32 0, i32 2, !dbg !5219
  %12 = load i32, i32* %count, align 8, !dbg !5220
  %dec = add nsw i32 %12, -1, !dbg !5220
  store i32 %dec, i32* %count, align 8, !dbg !5220
  %13 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5221
  %freenodes = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %13, i32 0, i32 4, !dbg !5223
  %14 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes, align 8, !dbg !5223
  %last5 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %14, i32 0, i32 1, !dbg !5224
  %15 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last5, align 8, !dbg !5224
  %tobool6 = icmp ne %struct.DagNodeQueueElem* %15, null, !dbg !5221
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !5225

if.then7:                                         ; preds = %if.end
  %16 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5226
  %17 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5227
  %freenodes8 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %17, i32 0, i32 4, !dbg !5228
  %18 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes8, align 8, !dbg !5228
  %last9 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %18, i32 0, i32 1, !dbg !5229
  %19 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %last9, align 8, !dbg !5229
  %next10 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %19, i32 0, i32 1, !dbg !5230
  store %struct.DagNodeQueueElem* %16, %struct.DagNodeQueueElem** %next10, align 8, !dbg !5231
  br label %if.end11, !dbg !5227

if.end11:                                         ; preds = %if.then7, %if.end
  %20 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5232
  %21 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5233
  %freenodes12 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %21, i32 0, i32 4, !dbg !5234
  %22 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes12, align 8, !dbg !5234
  %last13 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %22, i32 0, i32 1, !dbg !5235
  store %struct.DagNodeQueueElem* %20, %struct.DagNodeQueueElem** %last13, align 8, !dbg !5236
  %23 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5237
  %freenodes14 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %23, i32 0, i32 4, !dbg !5239
  %24 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes14, align 8, !dbg !5239
  %first15 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %24, i32 0, i32 0, !dbg !5240
  %25 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first15, align 8, !dbg !5240
  %cmp16 = icmp eq %struct.DagNodeQueueElem* %25, null, !dbg !5241
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !5242

if.then17:                                        ; preds = %if.end11
  %26 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5243
  %27 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5244
  %freenodes18 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %27, i32 0, i32 4, !dbg !5245
  %28 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes18, align 8, !dbg !5245
  %first19 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %28, i32 0, i32 0, !dbg !5246
  store %struct.DagNodeQueueElem* %26, %struct.DagNodeQueueElem** %first19, align 8, !dbg !5247
  br label %if.end20, !dbg !5244

if.end20:                                         ; preds = %if.then17, %if.end11
  %29 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5248
  %node21 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %29, i32 0, i32 0, !dbg !5249
  %30 = load %struct.DagNode*, %struct.DagNode** %node21, align 8, !dbg !5249
  store %struct.DagNode* %30, %struct.DagNode** %node, align 8, !dbg !5250
  %31 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5251
  %node22 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %31, i32 0, i32 0, !dbg !5252
  store %struct.DagNode* null, %struct.DagNode** %node22, align 8, !dbg !5253
  %32 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %elem, align 8, !dbg !5254
  %next23 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %32, i32 0, i32 1, !dbg !5255
  store %struct.DagNodeQueueElem* null, %struct.DagNodeQueueElem** %next23, align 8, !dbg !5256
  %33 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5257
  %freenodes24 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %33, i32 0, i32 4, !dbg !5258
  %34 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %freenodes24, align 8, !dbg !5258
  %count25 = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %34, i32 0, i32 2, !dbg !5259
  %35 = load i32, i32* %count25, align 8, !dbg !5260
  %inc = add nsw i32 %35, 1, !dbg !5260
  store i32 %inc, i32* %count25, align 8, !dbg !5260
  %36 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5261
  store %struct.DagNode* %36, %struct.DagNode** %retval, align 8, !dbg !5262
  br label %return, !dbg !5262

if.else:                                          ; preds = %entry
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5263
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)), !dbg !5265
  store %struct.DagNode* null, %struct.DagNode** %retval, align 8, !dbg !5266
  br label %return, !dbg !5266

return:                                           ; preds = %if.else, %if.end20
  %38 = load %struct.DagNode*, %struct.DagNode** %retval, align 8, !dbg !5267
  ret %struct.DagNode* %38, !dbg !5267
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @get_top_node_queue(%struct.DagNodeQueue* %queue) #0 !dbg !5268 {
entry:
  %queue.addr = alloca %struct.DagNodeQueue*, align 8
  store %struct.DagNodeQueue* %queue, %struct.DagNodeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue.addr, align 8, !dbg !5271
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !5272
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !5272
  %node = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %1, i32 0, i32 0, !dbg !5273
  %2 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5273
  ret %struct.DagNode* %2, !dbg !5274
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagForest* @dag_init() #0 !dbg !5275 {
entry:
  %forest = alloca %struct.DagForest*, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest, metadata !5280, metadata !DIExpression()), !dbg !5281
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5282
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)), !dbg !5282
  %1 = bitcast i8* %call to %struct.DagForest*, !dbg !5282
  store %struct.DagForest* %1, %struct.DagForest** %forest, align 8, !dbg !5283
  %2 = load %struct.DagForest*, %struct.DagForest** %forest, align 8, !dbg !5284
  %ugly_hack_sorry = getelementptr inbounds %struct.DagForest, %struct.DagForest* %2, i32 0, i32 5, !dbg !5285
  store i8 1, i8* %ugly_hack_sorry, align 4, !dbg !5286
  %3 = load %struct.DagForest*, %struct.DagForest** %forest, align 8, !dbg !5287
  ret %struct.DagForest* %3, !dbg !5288
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagForest* @build_dag(%struct.Main* %bmain, %struct.Scene* %sce, i16 signext %mask) #0 !dbg !5289 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %mask.addr = alloca i16, align 2
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %node = alloca %struct.DagNode*, align 8
  %scenenode = alloca %struct.DagNode*, align 8
  %dag = alloca %struct.DagForest*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !5292, metadata !DIExpression()), !dbg !5293
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !5294, metadata !DIExpression()), !dbg !5295
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !5298, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5302, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !5304, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.declare(metadata %struct.DagNode** %scenenode, metadata !5306, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag, metadata !5308, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !5310, metadata !DIExpression()), !dbg !5313
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5314
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !5315
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !5315
  store %struct.DagForest* %1, %struct.DagForest** %dag, align 8, !dbg !5316
  %2 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5317
  %tobool = icmp ne %struct.DagForest* %2, null, !dbg !5317
  br i1 %tobool, label %if.then, label %if.else, !dbg !5319

if.then:                                          ; preds = %entry
  %3 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5320
  call void @free_forest(%struct.DagForest* %3), !dbg !5321
  br label %if.end, !dbg !5321

if.else:                                          ; preds = %entry
  %call = call %struct.DagForest* @dag_init(), !dbg !5322
  store %struct.DagForest* %call, %struct.DagForest** %dag, align 8, !dbg !5324
  %4 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5325
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5326
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 31, !dbg !5327
  store %struct.DagForest* %4, %struct.DagForest** %theDag1, align 8, !dbg !5328
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5329
  call void @BKE_main_id_tag_idcode(%struct.Main* %6, i16 signext 16717, i8 zeroext 0), !dbg !5330
  %7 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5331
  call void @BKE_main_id_tag_idcode(%struct.Main* %7, i16 signext 16716, i8 zeroext 0), !dbg !5332
  %8 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5333
  call void @BKE_main_id_tag_idcode(%struct.Main* %8, i16 signext 21063, i8 zeroext 0), !dbg !5334
  %9 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5335
  %10 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5336
  %11 = bitcast %struct.Scene* %10 to i8*, !dbg !5336
  %call2 = call %struct.DagNode* @dag_add_node(%struct.DagForest* %9, i8* %11), !dbg !5337
  store %struct.DagNode* %call2, %struct.DagNode** %scenenode, align 8, !dbg !5338
  %12 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5339
  %base3 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 5, !dbg !5341
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base3, i32 0, i32 0, !dbg !5342
  %13 = load i8*, i8** %first, align 8, !dbg !5342
  %14 = bitcast i8* %13 to %struct.Base*, !dbg !5339
  store %struct.Base* %14, %struct.Base** %base, align 8, !dbg !5343
  br label %for.cond, !dbg !5344

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5345
  %tobool4 = icmp ne %struct.Base* %15, null, !dbg !5347
  br i1 %tobool4, label %for.body, label %for.end, !dbg !5347

for.body:                                         ; preds = %for.cond
  %16 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5348
  %object = getelementptr inbounds %struct.Base, %struct.Base* %16, i32 0, i32 7, !dbg !5350
  %17 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !5350
  store %struct.Object* %17, %struct.Object** %ob, align 8, !dbg !5351
  %18 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5352
  %19 = load %struct.DagNode*, %struct.DagNode** %scenenode, align 8, !dbg !5353
  %20 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5354
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5355
  %22 = load i16, i16* %mask.addr, align 2, !dbg !5356
  %conv = sext i16 %22 to i32, !dbg !5356
  call void @build_dag_object(%struct.DagForest* %18, %struct.DagNode* %19, %struct.Scene* %20, %struct.Object* %21, i32 %conv), !dbg !5357
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5358
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 11, !dbg !5360
  %24 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !5360
  %tobool5 = icmp ne %struct.Object* %24, null, !dbg !5358
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !5361

if.then6:                                         ; preds = %for.body
  %25 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5362
  %26 = load %struct.DagNode*, %struct.DagNode** %scenenode, align 8, !dbg !5363
  %27 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5364
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5365
  %proxy7 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 11, !dbg !5366
  %29 = load %struct.Object*, %struct.Object** %proxy7, align 8, !dbg !5366
  %30 = load i16, i16* %mask.addr, align 2, !dbg !5367
  %conv8 = sext i16 %30 to i32, !dbg !5367
  call void @build_dag_object(%struct.DagForest* %25, %struct.DagNode* %26, %struct.Scene* %27, %struct.Object* %29, i32 %conv8), !dbg !5368
  br label %if.end9, !dbg !5368

if.end9:                                          ; preds = %if.then6, %for.body
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5369
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 112, !dbg !5371
  %32 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !5371
  %tobool10 = icmp ne %struct.Group* %32, null, !dbg !5369
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !5372

if.then11:                                        ; preds = %if.end9
  %33 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5373
  %34 = load %struct.DagNode*, %struct.DagNode** %scenenode, align 8, !dbg !5374
  %35 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5375
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5376
  %dup_group12 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 112, !dbg !5377
  %37 = load %struct.Group*, %struct.Group** %dup_group12, align 8, !dbg !5377
  %38 = load i16, i16* %mask.addr, align 2, !dbg !5378
  call void @build_dag_group(%struct.DagForest* %33, %struct.DagNode* %34, %struct.Scene* %35, %struct.Group* %37, i16 signext %38), !dbg !5379
  br label %if.end13, !dbg !5379

if.end13:                                         ; preds = %if.then11, %if.end9
  br label %for.inc, !dbg !5380

for.inc:                                          ; preds = %if.end13
  %39 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5381
  %next = getelementptr inbounds %struct.Base, %struct.Base* %39, i32 0, i32 0, !dbg !5382
  %40 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !5382
  store %struct.Base* %40, %struct.Base** %base, align 8, !dbg !5383
  br label %for.cond, !dbg !5384, !llvm.loop !5385

for.end:                                          ; preds = %for.cond
  %41 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5387
  call void @BKE_main_id_tag_idcode(%struct.Main* %41, i16 signext 21063, i8 zeroext 0), !dbg !5388
  %42 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5389
  %theDag14 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 31, !dbg !5391
  %43 = load %struct.DagForest*, %struct.DagForest** %theDag14, align 8, !dbg !5391
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %43, i32 0, i32 0, !dbg !5392
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !5393
  %44 = load i8*, i8** %first15, align 8, !dbg !5393
  %45 = bitcast i8* %44 to %struct.DagNode*, !dbg !5389
  store %struct.DagNode* %45, %struct.DagNode** %node, align 8, !dbg !5394
  br label %for.cond16, !dbg !5395

for.cond16:                                       ; preds = %for.inc41, %for.end
  %46 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5396
  %tobool17 = icmp ne %struct.DagNode* %46, null, !dbg !5398
  br i1 %tobool17, label %for.body18, label %for.end43, !dbg !5398

for.body18:                                       ; preds = %for.cond16
  %47 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5399
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %47, i32 0, i32 1, !dbg !5402
  %48 = load i16, i16* %type, align 4, !dbg !5402
  %conv19 = sext i16 %48 to i32, !dbg !5399
  %cmp = icmp eq i32 %conv19, 16975, !dbg !5403
  br i1 %cmp, label %if.then21, label %if.end40, !dbg !5404

if.then21:                                        ; preds = %for.body18
  %49 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5405
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %49, i32 0, i32 16, !dbg !5408
  %50 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !5408
  store %struct.DagAdjList* %50, %struct.DagAdjList** %itA, align 8, !dbg !5409
  br label %for.cond22, !dbg !5410

for.cond22:                                       ; preds = %for.inc35, %if.then21
  %51 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5411
  %tobool23 = icmp ne %struct.DagAdjList* %51, null, !dbg !5413
  br i1 %tobool23, label %for.body24, label %for.end37, !dbg !5413

for.body24:                                       ; preds = %for.cond22
  %52 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5414
  %node25 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %52, i32 0, i32 0, !dbg !5417
  %53 = load %struct.DagNode*, %struct.DagNode** %node25, align 8, !dbg !5417
  %type26 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %53, i32 0, i32 1, !dbg !5418
  %54 = load i16, i16* %type26, align 4, !dbg !5418
  %conv27 = sext i16 %54 to i32, !dbg !5414
  %cmp28 = icmp eq i32 %conv27, 16975, !dbg !5419
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !5420

if.then30:                                        ; preds = %for.body24
  %55 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5421
  %type31 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %55, i32 0, i32 1, !dbg !5423
  %56 = load i16, i16* %type31, align 8, !dbg !5423
  %conv32 = sext i16 %56 to i32, !dbg !5421
  %57 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5424
  %node33 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %57, i32 0, i32 0, !dbg !5425
  %58 = load %struct.DagNode*, %struct.DagNode** %node33, align 8, !dbg !5425
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %58, i32 0, i32 0, !dbg !5426
  %59 = load i32, i32* %color, align 8, !dbg !5427
  %or = or i32 %59, %conv32, !dbg !5427
  store i32 %or, i32* %color, align 8, !dbg !5427
  br label %if.end34, !dbg !5428

if.end34:                                         ; preds = %if.then30, %for.body24
  br label %for.inc35, !dbg !5429

for.inc35:                                        ; preds = %if.end34
  %60 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5430
  %next36 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %60, i32 0, i32 5, !dbg !5431
  %61 = load %struct.DagAdjList*, %struct.DagAdjList** %next36, align 8, !dbg !5431
  store %struct.DagAdjList* %61, %struct.DagAdjList** %itA, align 8, !dbg !5432
  br label %for.cond22, !dbg !5433, !llvm.loop !5434

for.end37:                                        ; preds = %for.cond22
  %62 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5436
  %customdata_mask = getelementptr inbounds %struct.DagNode, %struct.DagNode* %62, i32 0, i32 10, !dbg !5437
  %63 = load i64, i64* %customdata_mask, align 8, !dbg !5437
  %64 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5438
  %ob38 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %64, i32 0, i32 5, !dbg !5439
  %65 = load i8*, i8** %ob38, align 8, !dbg !5439
  %66 = bitcast i8* %65 to %struct.Object*, !dbg !5440
  %customdata_mask39 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 122, !dbg !5441
  store i64 %63, i64* %customdata_mask39, align 8, !dbg !5442
  br label %if.end40, !dbg !5443

if.end40:                                         ; preds = %for.end37, %for.body18
  br label %for.inc41, !dbg !5444

for.inc41:                                        ; preds = %if.end40
  %67 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5445
  %next42 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %67, i32 0, i32 18, !dbg !5446
  %68 = load %struct.DagNode*, %struct.DagNode** %next42, align 8, !dbg !5446
  store %struct.DagNode* %68, %struct.DagNode** %node, align 8, !dbg !5447
  br label %for.cond16, !dbg !5448, !llvm.loop !5449

for.end43:                                        ; preds = %for.cond16
  %69 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5451
  %theDag44 = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 31, !dbg !5453
  %70 = load %struct.DagForest*, %struct.DagForest** %theDag44, align 8, !dbg !5453
  %DagNode45 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %70, i32 0, i32 0, !dbg !5454
  %first46 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode45, i32 0, i32 0, !dbg !5455
  %71 = load i8*, i8** %first46, align 8, !dbg !5455
  %72 = bitcast i8* %71 to %struct.DagNode*, !dbg !5451
  store %struct.DagNode* %72, %struct.DagNode** %node, align 8, !dbg !5456
  br label %for.cond47, !dbg !5457

for.cond47:                                       ; preds = %for.inc76, %for.end43
  %73 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5458
  %tobool48 = icmp ne %struct.DagNode* %73, null, !dbg !5460
  br i1 %tobool48, label %for.body49, label %for.end78, !dbg !5460

for.body49:                                       ; preds = %for.cond47
  %74 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5461
  %type50 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %74, i32 0, i32 1, !dbg !5464
  %75 = load i16, i16* %type50, align 4, !dbg !5464
  %conv51 = sext i16 %75 to i32, !dbg !5461
  %cmp52 = icmp eq i32 %conv51, 16975, !dbg !5465
  br i1 %cmp52, label %if.then54, label %if.end75, !dbg !5466

if.then54:                                        ; preds = %for.body49
  %76 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5467
  %child55 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %76, i32 0, i32 16, !dbg !5470
  %77 = load %struct.DagAdjList*, %struct.DagAdjList** %child55, align 8, !dbg !5470
  store %struct.DagAdjList* %77, %struct.DagAdjList** %itA, align 8, !dbg !5471
  br label %for.cond56, !dbg !5472

for.cond56:                                       ; preds = %for.inc72, %if.then54
  %78 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5473
  %tobool57 = icmp ne %struct.DagAdjList* %78, null, !dbg !5475
  br i1 %tobool57, label %for.body58, label %for.end74, !dbg !5475

for.body58:                                       ; preds = %for.cond56
  %79 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5476
  %node59 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %79, i32 0, i32 0, !dbg !5479
  %80 = load %struct.DagNode*, %struct.DagNode** %node59, align 8, !dbg !5479
  %type60 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %80, i32 0, i32 1, !dbg !5480
  %81 = load i16, i16* %type60, align 4, !dbg !5480
  %conv61 = sext i16 %81 to i32, !dbg !5476
  %cmp62 = icmp eq i32 %conv61, 16975, !dbg !5481
  br i1 %cmp62, label %if.then64, label %if.end71, !dbg !5482

if.then64:                                        ; preds = %for.body58
  %82 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5483
  %node65 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %82, i32 0, i32 0, !dbg !5485
  %83 = load %struct.DagNode*, %struct.DagNode** %node65, align 8, !dbg !5485
  %color66 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %83, i32 0, i32 0, !dbg !5486
  %84 = load i32, i32* %color66, align 8, !dbg !5486
  %85 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5487
  %type67 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %85, i32 0, i32 1, !dbg !5488
  %86 = load i16, i16* %type67, align 8, !dbg !5489
  %conv68 = sext i16 %86 to i32, !dbg !5489
  %or69 = or i32 %conv68, %84, !dbg !5489
  %conv70 = trunc i32 %or69 to i16, !dbg !5489
  store i16 %conv70, i16* %type67, align 8, !dbg !5489
  br label %if.end71, !dbg !5490

if.end71:                                         ; preds = %if.then64, %for.body58
  br label %for.inc72, !dbg !5491

for.inc72:                                        ; preds = %if.end71
  %87 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5492
  %next73 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %87, i32 0, i32 5, !dbg !5493
  %88 = load %struct.DagAdjList*, %struct.DagAdjList** %next73, align 8, !dbg !5493
  store %struct.DagAdjList* %88, %struct.DagAdjList** %itA, align 8, !dbg !5494
  br label %for.cond56, !dbg !5495, !llvm.loop !5496

for.end74:                                        ; preds = %for.cond56
  br label %if.end75, !dbg !5498

if.end75:                                         ; preds = %for.end74, %for.body49
  br label %for.inc76, !dbg !5499

for.inc76:                                        ; preds = %if.end75
  %89 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5500
  %next77 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %89, i32 0, i32 18, !dbg !5501
  %90 = load %struct.DagNode*, %struct.DagNode** %next77, align 8, !dbg !5501
  store %struct.DagNode* %90, %struct.DagNode** %node, align 8, !dbg !5502
  br label %for.cond47, !dbg !5503, !llvm.loop !5504

for.end78:                                        ; preds = %for.cond47
  %91 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !5506
  ret %struct.DagForest* %91, !dbg !5507
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_forest(%struct.DagForest* %Dag) #0 !dbg !5508 {
entry:
  %Dag.addr = alloca %struct.DagForest*, align 8
  %tempN = alloca %struct.DagNode*, align 8
  %tempA = alloca %struct.DagAdjList*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %itN = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %Dag, %struct.DagForest** %Dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %Dag.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.declare(metadata %struct.DagNode** %tempN, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %tempA, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !5517, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.declare(metadata %struct.DagNode** %itN, metadata !5519, metadata !DIExpression()), !dbg !5520
  %0 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5521
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 0, !dbg !5522
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !5523
  %1 = load i8*, i8** %first, align 8, !dbg !5523
  %2 = bitcast i8* %1 to %struct.DagNode*, !dbg !5521
  store %struct.DagNode* %2, %struct.DagNode** %itN, align 8, !dbg !5520
  br label %while.cond, !dbg !5524

while.cond:                                       ; preds = %while.end8, %entry
  %3 = load %struct.DagNode*, %struct.DagNode** %itN, align 8, !dbg !5525
  %tobool = icmp ne %struct.DagNode* %3, null, !dbg !5524
  br i1 %tobool, label %while.body, label %while.end10, !dbg !5524

while.body:                                       ; preds = %while.cond
  %4 = load %struct.DagNode*, %struct.DagNode** %itN, align 8, !dbg !5526
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 16, !dbg !5528
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !5528
  store %struct.DagAdjList* %5, %struct.DagAdjList** %itA, align 8, !dbg !5529
  br label %while.cond1, !dbg !5530

while.cond1:                                      ; preds = %while.body3, %while.body
  %6 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5531
  %tobool2 = icmp ne %struct.DagAdjList* %6, null, !dbg !5530
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !5530

while.body3:                                      ; preds = %while.cond1
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5532
  store %struct.DagAdjList* %7, %struct.DagAdjList** %tempA, align 8, !dbg !5534
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5535
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 5, !dbg !5536
  %9 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !5536
  store %struct.DagAdjList* %9, %struct.DagAdjList** %itA, align 8, !dbg !5537
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5538
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %tempA, align 8, !dbg !5539
  %12 = bitcast %struct.DagAdjList* %11 to i8*, !dbg !5539
  call void %10(i8* %12), !dbg !5538
  br label %while.cond1, !dbg !5530, !llvm.loop !5540

while.end:                                        ; preds = %while.cond1
  %13 = load %struct.DagNode*, %struct.DagNode** %itN, align 8, !dbg !5542
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %13, i32 0, i32 17, !dbg !5543
  %14 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !5543
  store %struct.DagAdjList* %14, %struct.DagAdjList** %itA, align 8, !dbg !5544
  br label %while.cond4, !dbg !5545

while.cond4:                                      ; preds = %while.body6, %while.end
  %15 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5546
  %tobool5 = icmp ne %struct.DagAdjList* %15, null, !dbg !5545
  br i1 %tobool5, label %while.body6, label %while.end8, !dbg !5545

while.body6:                                      ; preds = %while.cond4
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5547
  store %struct.DagAdjList* %16, %struct.DagAdjList** %tempA, align 8, !dbg !5549
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !5550
  %next7 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %17, i32 0, i32 5, !dbg !5551
  %18 = load %struct.DagAdjList*, %struct.DagAdjList** %next7, align 8, !dbg !5551
  store %struct.DagAdjList* %18, %struct.DagAdjList** %itA, align 8, !dbg !5552
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5553
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %tempA, align 8, !dbg !5554
  %21 = bitcast %struct.DagAdjList* %20 to i8*, !dbg !5554
  call void %19(i8* %21), !dbg !5553
  br label %while.cond4, !dbg !5545, !llvm.loop !5555

while.end8:                                       ; preds = %while.cond4
  %22 = load %struct.DagNode*, %struct.DagNode** %itN, align 8, !dbg !5557
  store %struct.DagNode* %22, %struct.DagNode** %tempN, align 8, !dbg !5558
  %23 = load %struct.DagNode*, %struct.DagNode** %itN, align 8, !dbg !5559
  %next9 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %23, i32 0, i32 18, !dbg !5560
  %24 = load %struct.DagNode*, %struct.DagNode** %next9, align 8, !dbg !5560
  store %struct.DagNode* %24, %struct.DagNode** %itN, align 8, !dbg !5561
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5562
  %26 = load %struct.DagNode*, %struct.DagNode** %tempN, align 8, !dbg !5563
  %27 = bitcast %struct.DagNode* %26 to i8*, !dbg !5563
  call void %25(i8* %27), !dbg !5562
  br label %while.cond, !dbg !5524, !llvm.loop !5564

while.end10:                                      ; preds = %while.cond
  %28 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5566
  %nodeHash = getelementptr inbounds %struct.DagForest, %struct.DagForest* %28, i32 0, i32 1, !dbg !5567
  %29 = load %struct.GHash*, %struct.GHash** %nodeHash, align 8, !dbg !5567
  call void @BLI_ghash_free(%struct.GHash* %29, void (i8*)* null, void (i8*)* null), !dbg !5568
  %30 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5569
  %nodeHash11 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %30, i32 0, i32 1, !dbg !5570
  store %struct.GHash* null, %struct.GHash** %nodeHash11, align 8, !dbg !5571
  %31 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5572
  %DagNode12 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %31, i32 0, i32 0, !dbg !5573
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode12, i32 0, i32 0, !dbg !5574
  store i8* null, i8** %first13, align 8, !dbg !5575
  %32 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5576
  %DagNode14 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %32, i32 0, i32 0, !dbg !5577
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode14, i32 0, i32 1, !dbg !5578
  store i8* null, i8** %last, align 8, !dbg !5579
  %33 = load %struct.DagForest*, %struct.DagForest** %Dag.addr, align 8, !dbg !5580
  %numNodes = getelementptr inbounds %struct.DagForest, %struct.DagForest* %33, i32 0, i32 2, !dbg !5581
  store i32 0, i32* %numNodes, align 8, !dbg !5582
  ret void, !dbg !5583
}

declare dso_local void @BKE_main_id_tag_idcode(%struct.Main*, i16 signext, i8 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @dag_add_node(%struct.DagForest* %forest, i8* %fob) #0 !dbg !5584 {
entry:
  %forest.addr = alloca %struct.DagForest*, align 8
  %fob.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %forest, %struct.DagForest** %forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  store i8* %fob, i8** %fob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fob.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !5591, metadata !DIExpression()), !dbg !5592
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5593
  %call = call i8* %0(i64 120, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)), !dbg !5593
  %1 = bitcast i8* %call to %struct.DagNode*, !dbg !5593
  store %struct.DagNode* %1, %struct.DagNode** %node, align 8, !dbg !5594
  %2 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5595
  %tobool = icmp ne %struct.DagNode* %2, null, !dbg !5595
  br i1 %tobool, label %if.then, label %if.end19, !dbg !5597

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %fob.addr, align 8, !dbg !5598
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5600
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 5, !dbg !5601
  store i8* %3, i8** %ob, align 8, !dbg !5602
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5603
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 0, !dbg !5604
  store i32 0, i32* %color, align 8, !dbg !5605
  %6 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5606
  %ugly_hack_sorry = getelementptr inbounds %struct.DagForest, %struct.DagForest* %6, i32 0, i32 5, !dbg !5608
  %7 = load i8, i8* %ugly_hack_sorry, align 4, !dbg !5608
  %tobool1 = icmp ne i8 %7, 0, !dbg !5606
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5609

if.then2:                                         ; preds = %if.then
  %8 = load i8*, i8** %fob.addr, align 8, !dbg !5610
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !5610
  %name = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 4, !dbg !5610
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5610
  %10 = bitcast i8* %arraydecay to i16*, !dbg !5610
  %11 = load i16, i16* %10, align 8, !dbg !5610
  %12 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5611
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %12, i32 0, i32 1, !dbg !5612
  store i16 %11, i16* %type, align 4, !dbg !5613
  br label %if.end, !dbg !5611

if.end:                                           ; preds = %if.then2, %if.then
  %13 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5614
  %numNodes = getelementptr inbounds %struct.DagForest, %struct.DagForest* %13, i32 0, i32 2, !dbg !5616
  %14 = load i32, i32* %numNodes, align 8, !dbg !5616
  %tobool3 = icmp ne i32 %14, 0, !dbg !5614
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !5617

if.then4:                                         ; preds = %if.end
  %15 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5618
  %16 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5620
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %16, i32 0, i32 0, !dbg !5621
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 1, !dbg !5622
  %17 = load i8*, i8** %last, align 8, !dbg !5622
  %18 = bitcast i8* %17 to %struct.DagNode*, !dbg !5623
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %18, i32 0, i32 18, !dbg !5624
  store %struct.DagNode* %15, %struct.DagNode** %next, align 8, !dbg !5625
  %19 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5626
  %20 = bitcast %struct.DagNode* %19 to i8*, !dbg !5626
  %21 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5627
  %DagNode5 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %21, i32 0, i32 0, !dbg !5628
  %last6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode5, i32 0, i32 1, !dbg !5629
  store i8* %20, i8** %last6, align 8, !dbg !5630
  %22 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5631
  %numNodes7 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %22, i32 0, i32 2, !dbg !5632
  %23 = load i32, i32* %numNodes7, align 8, !dbg !5633
  %inc = add nsw i32 %23, 1, !dbg !5633
  store i32 %inc, i32* %numNodes7, align 8, !dbg !5633
  br label %if.end12, !dbg !5634

if.else:                                          ; preds = %if.end
  %24 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5635
  %25 = bitcast %struct.DagNode* %24 to i8*, !dbg !5635
  %26 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5637
  %DagNode8 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %26, i32 0, i32 0, !dbg !5638
  %last9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode8, i32 0, i32 1, !dbg !5639
  store i8* %25, i8** %last9, align 8, !dbg !5640
  %27 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5641
  %28 = bitcast %struct.DagNode* %27 to i8*, !dbg !5641
  %29 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5642
  %DagNode10 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %29, i32 0, i32 0, !dbg !5643
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode10, i32 0, i32 0, !dbg !5644
  store i8* %28, i8** %first, align 8, !dbg !5645
  %30 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5646
  %numNodes11 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %30, i32 0, i32 2, !dbg !5647
  store i32 1, i32* %numNodes11, align 8, !dbg !5648
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then4
  %31 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5649
  %nodeHash = getelementptr inbounds %struct.DagForest, %struct.DagForest* %31, i32 0, i32 1, !dbg !5651
  %32 = load %struct.GHash*, %struct.GHash** %nodeHash, align 8, !dbg !5651
  %tobool13 = icmp ne %struct.GHash* %32, null, !dbg !5649
  br i1 %tobool13, label %if.end17, label %if.then14, !dbg !5652

if.then14:                                        ; preds = %if.end12
  %call15 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)), !dbg !5653
  %33 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5654
  %nodeHash16 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %33, i32 0, i32 1, !dbg !5655
  store %struct.GHash* %call15, %struct.GHash** %nodeHash16, align 8, !dbg !5656
  br label %if.end17, !dbg !5654

if.end17:                                         ; preds = %if.then14, %if.end12
  %34 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !5657
  %nodeHash18 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %34, i32 0, i32 1, !dbg !5658
  %35 = load %struct.GHash*, %struct.GHash** %nodeHash18, align 8, !dbg !5658
  %36 = load i8*, i8** %fob.addr, align 8, !dbg !5659
  %37 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5660
  %38 = bitcast %struct.DagNode* %37 to i8*, !dbg !5660
  call void @BLI_ghash_insert(%struct.GHash* %35, i8* %36, i8* %38), !dbg !5661
  br label %if.end19, !dbg !5662

if.end19:                                         ; preds = %if.end17, %entry
  %39 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5663
  ret %struct.DagNode* %39, !dbg !5664
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_dag_object(%struct.DagForest* %dag, %struct.DagNode* %scenenode, %struct.Scene* %scene, %struct.Object* %ob, i32 %mask) #0 !dbg !5665 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %scenenode.addr = alloca %struct.DagNode*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mask.addr = alloca i32, align 4
  %con = alloca %struct.bConstraint*, align 8
  %node = alloca %struct.DagNode*, align 8
  %node2 = alloca %struct.DagNode*, align 8
  %node3 = alloca %struct.DagNode*, align 8
  %key = alloca %struct.Key*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %addtoroot = alloca i32, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %cu = alloca %struct.Curve*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %adt233 = alloca %struct.AnimData*, align 8
  %cam = alloca %struct.Camera*, align 8
  %mom = alloca %struct.Object*, align 8
  %cu257 = alloca %struct.Curve*, align 8
  %duplilist = alloca %struct.ListBase*, align 8
  %dob = alloca %struct.DupliObject*, align 8
  %a = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  %go327 = alloca %struct.GroupObject*, align 8
  %rule = alloca %struct.BoidRule*, align 8
  %state = alloca %struct.BoidState*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %effectors = alloca %struct.ListBase*, align 8
  %eff = alloca %struct.EffectorCache*, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %ruleob = alloca %struct.Object*, align 8
  %cti463 = alloca %struct.bConstraintTypeInfo*, align 8
  %targets465 = alloca %struct.ListBase, align 8
  %ct466 = alloca %struct.bConstraintTarget*, align 8
  %depends_on_camera = alloca i32, align 4
  %data490 = alloca %struct.bFollowTrackConstraint*, align 8
  %obt = alloca %struct.Object*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  store %struct.DagNode* %scenenode, %struct.DagNode** %scenenode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %scenenode.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !5678, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !5699, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node2, metadata !5701, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node3, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !5705, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5728, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.declare(metadata i32* %addtoroot, metadata !5732, metadata !DIExpression()), !dbg !5733
  store i32 1, i32* %addtoroot, align 4, !dbg !5733
  %0 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5734
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5735
  %2 = bitcast %struct.Object* %1 to i8*, !dbg !5735
  %call = call %struct.DagNode* @dag_get_node(%struct.DagForest* %0, i8* %2), !dbg !5736
  store %struct.DagNode* %call, %struct.DagNode** %node, align 8, !dbg !5737
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5738
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !5740
  %4 = load i8*, i8** %data, align 8, !dbg !5740
  %tobool = icmp ne i8* %4, null, !dbg !5741
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5742

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %mask.addr, align 4, !dbg !5743
  %and = and i32 %5, 2, !dbg !5744
  %tobool1 = icmp ne i32 %and, 0, !dbg !5744
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5745

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5746
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5748
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !5749
  %8 = load i8*, i8** %data2, align 8, !dbg !5749
  %call3 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %6, i8* %8), !dbg !5750
  store %struct.DagNode* %call3, %struct.DagNode** %node2, align 8, !dbg !5751
  %9 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5752
  %10 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5753
  %11 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !5754
  call void @dag_add_relation(%struct.DagForest* %9, %struct.DagNode* %10, %struct.DagNode* %11, i16 signext 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)), !dbg !5755
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5756
  %13 = bitcast %struct.Object* %12 to i8*, !dbg !5756
  %14 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !5757
  %first_ancestor = getelementptr inbounds %struct.DagNode, %struct.DagNode* %14, i32 0, i32 6, !dbg !5758
  store i8* %13, i8** %first_ancestor, align 8, !dbg !5759
  %15 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !5760
  %ancestor_count = getelementptr inbounds %struct.DagNode, %struct.DagNode* %15, i32 0, i32 7, !dbg !5761
  %16 = load i32, i32* %ancestor_count, align 8, !dbg !5762
  %add = add nsw i32 %16, 1, !dbg !5762
  store i32 %add, i32* %ancestor_count, align 8, !dbg !5762
  br label %if.end, !dbg !5763

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5764
  %customdata_mask = getelementptr inbounds %struct.DagNode, %struct.DagNode* %17, i32 0, i32 10, !dbg !5765
  store i64 0, i64* %customdata_mask, align 8, !dbg !5766
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5767
  %type = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 3, !dbg !5769
  %19 = load i16, i16* %type, align 8, !dbg !5769
  %conv = sext i16 %19 to i32, !dbg !5767
  %cmp = icmp eq i32 %conv, 25, !dbg !5770
  br i1 %cmp, label %if.then5, label %if.end77, !dbg !5771

if.then5:                                         ; preds = %if.end
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5772
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 18, !dbg !5775
  %21 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5775
  %tobool6 = icmp ne %struct.bPose* %21, null, !dbg !5772
  br i1 %tobool6, label %if.then7, label %if.end76, !dbg !5776

if.then7:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5777, metadata !DIExpression()), !dbg !5779
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5780
  %pose8 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 18, !dbg !5782
  %23 = load %struct.bPose*, %struct.bPose** %pose8, align 8, !dbg !5782
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %23, i32 0, i32 0, !dbg !5783
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !5784
  %24 = load i8*, i8** %first, align 8, !dbg !5784
  %25 = bitcast i8* %24 to %struct.bPoseChannel*, !dbg !5780
  store %struct.bPoseChannel* %25, %struct.bPoseChannel** %pchan, align 8, !dbg !5785
  br label %for.cond, !dbg !5786

for.cond:                                         ; preds = %for.inc73, %if.then7
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5787
  %tobool9 = icmp ne %struct.bPoseChannel* %26, null, !dbg !5789
  br i1 %tobool9, label %for.body, label %for.end75, !dbg !5789

for.body:                                         ; preds = %for.cond
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5790
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 3, !dbg !5793
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !5794
  %28 = load i8*, i8** %first10, align 8, !dbg !5794
  %29 = bitcast i8* %28 to %struct.bConstraint*, !dbg !5790
  store %struct.bConstraint* %29, %struct.bConstraint** %con, align 8, !dbg !5795
  br label %for.cond11, !dbg !5796

for.cond11:                                       ; preds = %for.inc70, %for.body
  %30 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5797
  %tobool12 = icmp ne %struct.bConstraint* %30, null, !dbg !5799
  br i1 %tobool12, label %for.body13, label %for.end72, !dbg !5799

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !5800, metadata !DIExpression()), !dbg !5866
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5867
  %call14 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %31), !dbg !5868
  store %struct.bConstraintTypeInfo* %call14, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5866
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !5869, metadata !DIExpression()), !dbg !5870
  %32 = bitcast %struct.ListBase* %targets to i8*, !dbg !5870
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false), !dbg !5870
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !5871, metadata !DIExpression()), !dbg !5874
  %33 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5875
  %tobool15 = icmp ne %struct.bConstraintTypeInfo* %33, null, !dbg !5875
  br i1 %tobool15, label %land.lhs.true16, label %if.end69, !dbg !5877

land.lhs.true16:                                  ; preds = %for.body13
  %34 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5878
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %34, i32 0, i32 8, !dbg !5879
  %35 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !5879
  %tobool17 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %35, null, !dbg !5878
  br i1 %tobool17, label %if.then18, label %if.end69, !dbg !5880

if.then18:                                        ; preds = %land.lhs.true16
  %36 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5881
  %get_constraint_targets19 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %36, i32 0, i32 8, !dbg !5883
  %37 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets19, align 8, !dbg !5883
  %38 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5884
  %call20 = call i32 %37(%struct.bConstraint* %38, %struct.ListBase* %targets), !dbg !5881
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !5885
  %39 = load i8*, i8** %first21, align 8, !dbg !5885
  %40 = bitcast i8* %39 to %struct.bConstraintTarget*, !dbg !5887
  store %struct.bConstraintTarget* %40, %struct.bConstraintTarget** %ct, align 8, !dbg !5888
  br label %for.cond22, !dbg !5889

for.cond22:                                       ; preds = %for.inc, %if.then18
  %41 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5890
  %tobool23 = icmp ne %struct.bConstraintTarget* %41, null, !dbg !5892
  br i1 %tobool23, label %for.body24, label %for.end, !dbg !5892

for.body24:                                       ; preds = %for.cond22
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5893
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 2, !dbg !5896
  %43 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !5896
  %tobool25 = icmp ne %struct.Object* %43, null, !dbg !5893
  br i1 %tobool25, label %land.lhs.true26, label %if.end64, !dbg !5897

land.lhs.true26:                                  ; preds = %for.body24
  %44 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5898
  %tar27 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %44, i32 0, i32 2, !dbg !5899
  %45 = load %struct.Object*, %struct.Object** %tar27, align 8, !dbg !5899
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5900
  %cmp28 = icmp ne %struct.Object* %45, %46, !dbg !5901
  br i1 %cmp28, label %if.then30, label %if.end64, !dbg !5902

if.then30:                                        ; preds = %land.lhs.true26
  %47 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5903
  %48 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5905
  %tar31 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %48, i32 0, i32 2, !dbg !5906
  %49 = load %struct.Object*, %struct.Object** %tar31, align 8, !dbg !5906
  %50 = bitcast %struct.Object* %49 to i8*, !dbg !5905
  %call32 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %47, i8* %50), !dbg !5907
  store %struct.DagNode* %call32, %struct.DagNode** %node3, align 8, !dbg !5908
  %51 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5909
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %51, i32 0, i32 3, !dbg !5911
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !5909
  %52 = load i8, i8* %arrayidx, align 8, !dbg !5909
  %tobool33 = icmp ne i8 %52, 0, !dbg !5909
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !5912

if.then34:                                        ; preds = %if.then30
  %53 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5913
  %54 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !5915
  %55 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5916
  %56 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5917
  %name = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %56, i32 0, i32 2, !dbg !5918
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5917
  call void @dag_add_relation(%struct.DagForest* %53, %struct.DagNode* %54, %struct.DagNode* %55, i16 signext 40, i8* %arraydecay), !dbg !5919
  %57 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5920
  %tar35 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %57, i32 0, i32 2, !dbg !5922
  %58 = load %struct.Object*, %struct.Object** %tar35, align 8, !dbg !5922
  %type36 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 3, !dbg !5923
  %59 = load i16, i16* %type36, align 8, !dbg !5923
  %conv37 = sext i16 %59 to i32, !dbg !5920
  %cmp38 = icmp eq i32 %conv37, 1, !dbg !5924
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !5925

if.then40:                                        ; preds = %if.then34
  %60 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !5926
  %customdata_mask41 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %60, i32 0, i32 10, !dbg !5927
  %61 = load i64, i64* %customdata_mask41, align 8, !dbg !5928
  %or = or i64 %61, 4, !dbg !5928
  store i64 %or, i64* %customdata_mask41, align 8, !dbg !5928
  br label %if.end42, !dbg !5926

if.end42:                                         ; preds = %if.then40, %if.then34
  br label %if.end63, !dbg !5929

if.else:                                          ; preds = %if.then30
  %62 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5930
  %type43 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %62, i32 0, i32 3, !dbg !5930
  %63 = load i16, i16* %type43, align 8, !dbg !5930
  %conv44 = sext i16 %63 to i32, !dbg !5930
  %cmp45 = icmp eq i32 %conv44, 4, !dbg !5930
  br i1 %cmp45, label %if.then56, label %lor.lhs.false, !dbg !5930

lor.lhs.false:                                    ; preds = %if.else
  %64 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5930
  %type47 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %64, i32 0, i32 3, !dbg !5930
  %65 = load i16, i16* %type47, align 8, !dbg !5930
  %conv48 = sext i16 %65 to i32, !dbg !5930
  %cmp49 = icmp eq i32 %conv48, 18, !dbg !5930
  br i1 %cmp49, label %if.then56, label %lor.lhs.false51, !dbg !5930

lor.lhs.false51:                                  ; preds = %lor.lhs.false
  %66 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5930
  %type52 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %66, i32 0, i32 3, !dbg !5930
  %67 = load i16, i16* %type52, align 8, !dbg !5930
  %conv53 = sext i16 %67 to i32, !dbg !5930
  %cmp54 = icmp eq i32 %conv53, 22, !dbg !5930
  br i1 %cmp54, label %if.then56, label %if.else59, !dbg !5932

if.then56:                                        ; preds = %lor.lhs.false51, %lor.lhs.false, %if.else
  %68 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5933
  %69 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !5934
  %70 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5935
  %71 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5936
  %name57 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %71, i32 0, i32 2, !dbg !5937
  %arraydecay58 = getelementptr inbounds [32 x i8], [32 x i8]* %name57, i64 0, i64 0, !dbg !5936
  call void @dag_add_relation(%struct.DagForest* %68, %struct.DagNode* %69, %struct.DagNode* %70, i16 signext 40, i8* %arraydecay58), !dbg !5938
  br label %if.end62, !dbg !5938

if.else59:                                        ; preds = %lor.lhs.false51
  %72 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5939
  %73 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !5940
  %74 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5941
  %75 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5942
  %name60 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %75, i32 0, i32 2, !dbg !5943
  %arraydecay61 = getelementptr inbounds [32 x i8], [32 x i8]* %name60, i64 0, i64 0, !dbg !5942
  call void @dag_add_relation(%struct.DagForest* %72, %struct.DagNode* %73, %struct.DagNode* %74, i16 signext 8, i8* %arraydecay61), !dbg !5944
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %if.then56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end42
  br label %if.end64, !dbg !5945

if.end64:                                         ; preds = %if.end63, %land.lhs.true26, %for.body24
  br label %for.inc, !dbg !5946

for.inc:                                          ; preds = %if.end64
  %76 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !5947
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %76, i32 0, i32 0, !dbg !5948
  %77 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !5948
  store %struct.bConstraintTarget* %77, %struct.bConstraintTarget** %ct, align 8, !dbg !5949
  br label %for.cond22, !dbg !5950, !llvm.loop !5951

for.end:                                          ; preds = %for.cond22
  %78 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5953
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %78, i32 0, i32 9, !dbg !5955
  %79 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !5955
  %tobool65 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %79, null, !dbg !5953
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !5956

if.then66:                                        ; preds = %for.end
  %80 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !5957
  %flush_constraint_targets67 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %80, i32 0, i32 9, !dbg !5958
  %81 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets67, align 8, !dbg !5958
  %82 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5959
  call void %81(%struct.bConstraint* %82, %struct.ListBase* %targets, i8 zeroext 1), !dbg !5957
  br label %if.end68, !dbg !5957

if.end68:                                         ; preds = %if.then66, %for.end
  br label %if.end69, !dbg !5960

if.end69:                                         ; preds = %if.end68, %land.lhs.true16, %for.body13
  br label %for.inc70, !dbg !5961

for.inc70:                                        ; preds = %if.end69
  %83 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !5962
  %next71 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %83, i32 0, i32 0, !dbg !5963
  %84 = load %struct.bConstraint*, %struct.bConstraint** %next71, align 8, !dbg !5963
  store %struct.bConstraint* %84, %struct.bConstraint** %con, align 8, !dbg !5964
  br label %for.cond11, !dbg !5965, !llvm.loop !5966

for.end72:                                        ; preds = %for.cond11
  br label %for.inc73, !dbg !5968

for.inc73:                                        ; preds = %for.end72
  %85 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5969
  %next74 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %85, i32 0, i32 0, !dbg !5970
  %86 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next74, align 8, !dbg !5970
  store %struct.bPoseChannel* %86, %struct.bPoseChannel** %pchan, align 8, !dbg !5971
  br label %for.cond, !dbg !5972, !llvm.loop !5973

for.end75:                                        ; preds = %for.cond
  br label %if.end76, !dbg !5975

if.end76:                                         ; preds = %for.end75, %if.then5
  br label %if.end77, !dbg !5976

if.end77:                                         ; preds = %if.end76, %if.end
  %87 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5977
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 1, !dbg !5979
  %88 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5979
  %tobool78 = icmp ne %struct.AnimData* %88, null, !dbg !5977
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !5980

if.then79:                                        ; preds = %if.end77
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5981
  %adt80 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 1, !dbg !5982
  %90 = load %struct.AnimData*, %struct.AnimData** %adt80, align 8, !dbg !5982
  %91 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !5983
  %92 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !5984
  %93 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5985
  %type81 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 3, !dbg !5986
  %94 = load i16, i16* %type81, align 8, !dbg !5986
  %conv82 = sext i16 %94 to i32, !dbg !5985
  %cmp83 = icmp eq i32 %conv82, 25, !dbg !5987
  %conv84 = zext i1 %cmp83 to i32, !dbg !5987
  call void @dag_add_driver_relation(%struct.AnimData* %90, %struct.DagForest* %91, %struct.DagNode* %92, i32 %conv84), !dbg !5988
  br label %if.end85, !dbg !5988

if.end85:                                         ; preds = %if.then79, %if.end77
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5989
  %call86 = call %struct.Key* @BKE_key_from_object(%struct.Object* %95), !dbg !5990
  store %struct.Key* %call86, %struct.Key** %key, align 8, !dbg !5991
  %96 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5992
  %tobool87 = icmp ne %struct.Key* %96, null, !dbg !5992
  br i1 %tobool87, label %land.lhs.true88, label %if.end93, !dbg !5994

land.lhs.true88:                                  ; preds = %if.end85
  %97 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5995
  %adt89 = getelementptr inbounds %struct.Key, %struct.Key* %97, i32 0, i32 1, !dbg !5996
  %98 = load %struct.AnimData*, %struct.AnimData** %adt89, align 8, !dbg !5996
  %tobool90 = icmp ne %struct.AnimData* %98, null, !dbg !5995
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !5997

if.then91:                                        ; preds = %land.lhs.true88
  %99 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5998
  %adt92 = getelementptr inbounds %struct.Key, %struct.Key* %99, i32 0, i32 1, !dbg !5999
  %100 = load %struct.AnimData*, %struct.AnimData** %adt92, align 8, !dbg !5999
  %101 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6000
  %102 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6001
  call void @dag_add_driver_relation(%struct.AnimData* %100, %struct.DagForest* %101, %struct.DagNode* %102, i32 1), !dbg !6002
  br label %if.end93, !dbg !6002

if.end93:                                         ; preds = %if.then91, %land.lhs.true88, %if.end85
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6003
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 26, !dbg !6005
  %first94 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !6006
  %104 = load i8*, i8** %first94, align 8, !dbg !6006
  %tobool95 = icmp ne i8* %104, null, !dbg !6003
  br i1 %tobool95, label %if.then96, label %if.end111, !dbg !6007

if.then96:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !6008, metadata !DIExpression()), !dbg !6011
  %105 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6012
  %modifiers97 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 26, !dbg !6014
  %first98 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers97, i32 0, i32 0, !dbg !6015
  %106 = load i8*, i8** %first98, align 8, !dbg !6015
  %107 = bitcast i8* %106 to %struct.ModifierData*, !dbg !6012
  store %struct.ModifierData* %107, %struct.ModifierData** %md, align 8, !dbg !6016
  br label %for.cond99, !dbg !6017

for.cond99:                                       ; preds = %for.inc108, %if.then96
  %108 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6018
  %tobool100 = icmp ne %struct.ModifierData* %108, null, !dbg !6020
  br i1 %tobool100, label %for.body101, label %for.end110, !dbg !6020

for.body101:                                      ; preds = %for.cond99
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !6021, metadata !DIExpression()), !dbg !6114
  %109 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6115
  %type102 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %109, i32 0, i32 2, !dbg !6116
  %110 = load i32, i32* %type102, align 8, !dbg !6116
  %call103 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %110), !dbg !6117
  store %struct.ModifierTypeInfo* %call103, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6114
  %111 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6118
  %updateDepgraph = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %111, i32 0, i32 16, !dbg !6120
  %112 = load void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)** %updateDepgraph, align 8, !dbg !6120
  %tobool104 = icmp ne void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)* %112, null, !dbg !6118
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !6121

if.then105:                                       ; preds = %for.body101
  %113 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6122
  %updateDepgraph106 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %113, i32 0, i32 16, !dbg !6123
  %114 = load void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)** %updateDepgraph106, align 8, !dbg !6123
  %115 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6124
  %116 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6125
  %117 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6126
  %118 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6127
  %119 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6128
  call void %114(%struct.ModifierData* %115, %struct.DagForest* %116, %struct.Scene* %117, %struct.Object* %118, %struct.DagNode* %119), !dbg !6122
  br label %if.end107, !dbg !6122

if.end107:                                        ; preds = %if.then105, %for.body101
  br label %for.inc108, !dbg !6129

for.inc108:                                       ; preds = %if.end107
  %120 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6130
  %next109 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %120, i32 0, i32 0, !dbg !6131
  %121 = load %struct.ModifierData*, %struct.ModifierData** %next109, align 8, !dbg !6131
  store %struct.ModifierData* %121, %struct.ModifierData** %md, align 8, !dbg !6132
  br label %for.cond99, !dbg !6133, !llvm.loop !6134

for.end110:                                       ; preds = %for.cond99
  br label %if.end111, !dbg !6136

if.end111:                                        ; preds = %for.end110, %if.end93
  %122 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6137
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 9, !dbg !6139
  %123 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !6139
  %tobool112 = icmp ne %struct.Object* %123, null, !dbg !6137
  br i1 %tobool112, label %if.then113, label %if.end155, !dbg !6140

if.then113:                                       ; preds = %if.end111
  %124 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6141
  %125 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6143
  %parent114 = getelementptr inbounds %struct.Object, %struct.Object* %125, i32 0, i32 9, !dbg !6144
  %126 = load %struct.Object*, %struct.Object** %parent114, align 8, !dbg !6144
  %127 = bitcast %struct.Object* %126 to i8*, !dbg !6143
  %call115 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %124, i8* %127), !dbg !6145
  store %struct.DagNode* %call115, %struct.DagNode** %node2, align 8, !dbg !6146
  %128 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6147
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 4, !dbg !6148
  %129 = load i16, i16* %partype, align 2, !dbg !6148
  %conv116 = sext i16 %129 to i32, !dbg !6147
  switch i32 %conv116, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb117
    i32 6, label %sw.bb117
    i32 7, label %sw.bb120
  ], !dbg !6149

sw.bb:                                            ; preds = %if.then113
  %130 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6150
  %131 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6152
  %132 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6153
  call void @dag_add_relation(%struct.DagForest* %130, %struct.DagNode* %131, %struct.DagNode* %132, i16 signext 36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0)), !dbg !6154
  br label %sw.epilog, !dbg !6155

sw.bb117:                                         ; preds = %if.then113, %if.then113
  %133 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6156
  %134 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6157
  %135 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6158
  call void @dag_add_relation(%struct.DagForest* %133, %struct.DagNode* %134, %struct.DagNode* %135, i16 signext 20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0)), !dbg !6159
  %136 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6160
  %customdata_mask118 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %136, i32 0, i32 10, !dbg !6161
  %137 = load i64, i64* %customdata_mask118, align 8, !dbg !6162
  %or119 = or i64 %137, 128, !dbg !6162
  store i64 %or119, i64* %customdata_mask118, align 8, !dbg !6162
  br label %sw.epilog, !dbg !6163

sw.bb120:                                         ; preds = %if.then113
  %138 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6164
  %139 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6165
  %140 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6166
  call void @dag_add_relation(%struct.DagForest* %138, %struct.DagNode* %139, %struct.DagNode* %140, i16 signext 20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)), !dbg !6167
  br label %sw.epilog, !dbg !6168

sw.default:                                       ; preds = %if.then113
  %141 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6169
  %parent121 = getelementptr inbounds %struct.Object, %struct.Object* %141, i32 0, i32 9, !dbg !6171
  %142 = load %struct.Object*, %struct.Object** %parent121, align 8, !dbg !6171
  %type122 = getelementptr inbounds %struct.Object, %struct.Object* %142, i32 0, i32 3, !dbg !6172
  %143 = load i16, i16* %type122, align 8, !dbg !6172
  %conv123 = sext i16 %143 to i32, !dbg !6169
  %cmp124 = icmp eq i32 %conv123, 22, !dbg !6173
  br i1 %cmp124, label %if.then126, label %if.else127, !dbg !6174

if.then126:                                       ; preds = %sw.default
  %144 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6175
  %145 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6176
  %146 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6177
  call void @dag_add_relation(%struct.DagForest* %144, %struct.DagNode* %145, %struct.DagNode* %146, i16 signext 36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)), !dbg !6178
  br label %if.end143, !dbg !6178

if.else127:                                       ; preds = %sw.default
  %147 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6179
  %parent128 = getelementptr inbounds %struct.Object, %struct.Object* %147, i32 0, i32 9, !dbg !6181
  %148 = load %struct.Object*, %struct.Object** %parent128, align 8, !dbg !6181
  %type129 = getelementptr inbounds %struct.Object, %struct.Object* %148, i32 0, i32 3, !dbg !6182
  %149 = load i16, i16* %type129, align 8, !dbg !6182
  %conv130 = sext i16 %149 to i32, !dbg !6179
  %cmp131 = icmp eq i32 %conv130, 2, !dbg !6183
  br i1 %cmp131, label %if.then133, label %if.else141, !dbg !6184

if.then133:                                       ; preds = %if.else127
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6185, metadata !DIExpression()), !dbg !6287
  %150 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6288
  %parent134 = getelementptr inbounds %struct.Object, %struct.Object* %150, i32 0, i32 9, !dbg !6289
  %151 = load %struct.Object*, %struct.Object** %parent134, align 8, !dbg !6289
  %data135 = getelementptr inbounds %struct.Object, %struct.Object* %151, i32 0, i32 19, !dbg !6290
  %152 = load i8*, i8** %data135, align 8, !dbg !6290
  %153 = bitcast i8* %152 to %struct.Curve*, !dbg !6288
  store %struct.Curve* %153, %struct.Curve** %cu, align 8, !dbg !6287
  %154 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6291
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %154, i32 0, i32 23, !dbg !6293
  %155 = load i32, i32* %flag, align 4, !dbg !6293
  %and136 = and i32 %155, 8, !dbg !6294
  %tobool137 = icmp ne i32 %and136, 0, !dbg !6294
  br i1 %tobool137, label %if.then138, label %if.else139, !dbg !6295

if.then138:                                       ; preds = %if.then133
  %156 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6296
  %157 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6297
  %158 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6298
  call void @dag_add_relation(%struct.DagForest* %156, %struct.DagNode* %157, %struct.DagNode* %158, i16 signext 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)), !dbg !6299
  br label %if.end140, !dbg !6299

if.else139:                                       ; preds = %if.then133
  %159 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6300
  %160 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6301
  %161 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6302
  call void @dag_add_relation(%struct.DagForest* %159, %struct.DagNode* %160, %struct.DagNode* %161, i16 signext 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)), !dbg !6303
  br label %if.end140

if.end140:                                        ; preds = %if.else139, %if.then138
  br label %if.end142, !dbg !6304

if.else141:                                       ; preds = %if.else127
  %162 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6305
  %163 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6306
  %164 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6307
  call void @dag_add_relation(%struct.DagForest* %162, %struct.DagNode* %163, %struct.DagNode* %164, i16 signext 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0)), !dbg !6308
  br label %if.end142

if.end142:                                        ; preds = %if.else141, %if.end140
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then126
  br label %sw.epilog, !dbg !6309

sw.epilog:                                        ; preds = %if.end143, %sw.bb120, %sw.bb117, %sw.bb
  %165 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6310
  %type144 = getelementptr inbounds %struct.Object, %struct.Object* %165, i32 0, i32 3, !dbg !6312
  %166 = load i16, i16* %type144, align 8, !dbg !6312
  %conv145 = sext i16 %166 to i32, !dbg !6310
  %cmp146 = icmp eq i32 %conv145, 5, !dbg !6313
  br i1 %cmp146, label %land.lhs.true148, label %if.end154, !dbg !6314

land.lhs.true148:                                 ; preds = %sw.epilog
  %167 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6315
  %parent149 = getelementptr inbounds %struct.Object, %struct.Object* %167, i32 0, i32 9, !dbg !6316
  %168 = load %struct.Object*, %struct.Object** %parent149, align 8, !dbg !6316
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %168, i32 0, i32 55, !dbg !6317
  %169 = load i16, i16* %transflag, align 8, !dbg !6317
  %conv150 = sext i16 %169 to i32, !dbg !6315
  %and151 = and i32 %conv150, 16, !dbg !6318
  %tobool152 = icmp ne i32 %and151, 0, !dbg !6318
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !6319

if.then153:                                       ; preds = %land.lhs.true148
  %170 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6320
  %171 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6322
  %172 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6323
  call void @dag_add_relation(%struct.DagForest* %170, %struct.DagNode* %171, %struct.DagNode* %172, i16 signext 36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)), !dbg !6324
  br label %if.end154, !dbg !6325

if.end154:                                        ; preds = %if.then153, %land.lhs.true148, %sw.epilog
  store i32 0, i32* %addtoroot, align 4, !dbg !6326
  br label %if.end155, !dbg !6327

if.end155:                                        ; preds = %if.end154, %if.end111
  %173 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6328
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %173, i32 0, i32 11, !dbg !6330
  %174 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !6330
  %tobool156 = icmp ne %struct.Object* %174, null, !dbg !6328
  br i1 %tobool156, label %if.then157, label %if.end160, !dbg !6331

if.then157:                                       ; preds = %if.end155
  %175 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6332
  %176 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6334
  %proxy158 = getelementptr inbounds %struct.Object, %struct.Object* %176, i32 0, i32 11, !dbg !6335
  %177 = load %struct.Object*, %struct.Object** %proxy158, align 8, !dbg !6335
  %178 = bitcast %struct.Object* %177 to i8*, !dbg !6334
  %call159 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %175, i8* %178), !dbg !6336
  store %struct.DagNode* %call159, %struct.DagNode** %node2, align 8, !dbg !6337
  %179 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6338
  %180 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6339
  %181 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6340
  call void @dag_add_relation(%struct.DagForest* %179, %struct.DagNode* %180, %struct.DagNode* %181, i16 signext 36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)), !dbg !6341
  br label %if.end160, !dbg !6342

if.end160:                                        ; preds = %if.then157, %if.end155
  %182 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6343
  %transflag161 = getelementptr inbounds %struct.Object, %struct.Object* %182, i32 0, i32 55, !dbg !6345
  %183 = load i16, i16* %transflag161, align 8, !dbg !6345
  %conv162 = sext i16 %183 to i32, !dbg !6343
  %and163 = and i32 %conv162, 2840, !dbg !6346
  %tobool164 = icmp ne i32 %and163, 0, !dbg !6346
  br i1 %tobool164, label %if.then165, label %if.end188, !dbg !6347

if.then165:                                       ; preds = %if.end160
  %184 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6348
  %transflag166 = getelementptr inbounds %struct.Object, %struct.Object* %184, i32 0, i32 55, !dbg !6351
  %185 = load i16, i16* %transflag166, align 8, !dbg !6351
  %conv167 = sext i16 %185 to i32, !dbg !6348
  %and168 = and i32 %conv167, 256, !dbg !6352
  %tobool169 = icmp ne i32 %and168, 0, !dbg !6352
  br i1 %tobool169, label %land.lhs.true170, label %if.end187, !dbg !6353

land.lhs.true170:                                 ; preds = %if.then165
  %186 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6354
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %186, i32 0, i32 112, !dbg !6355
  %187 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !6355
  %tobool171 = icmp ne %struct.Group* %187, null, !dbg !6354
  br i1 %tobool171, label %if.then172, label %if.end187, !dbg !6356

if.then172:                                       ; preds = %land.lhs.true170
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !6357, metadata !DIExpression()), !dbg !6359
  %188 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6360
  %dup_group173 = getelementptr inbounds %struct.Object, %struct.Object* %188, i32 0, i32 112, !dbg !6362
  %189 = load %struct.Group*, %struct.Group** %dup_group173, align 8, !dbg !6362
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %189, i32 0, i32 1, !dbg !6363
  %first174 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !6364
  %190 = load i8*, i8** %first174, align 8, !dbg !6364
  %191 = bitcast i8* %190 to %struct.GroupObject*, !dbg !6360
  store %struct.GroupObject* %191, %struct.GroupObject** %go, align 8, !dbg !6365
  br label %for.cond175, !dbg !6366

for.cond175:                                      ; preds = %for.inc184, %if.then172
  %192 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6367
  %tobool176 = icmp ne %struct.GroupObject* %192, null, !dbg !6369
  br i1 %tobool176, label %for.body177, label %for.end186, !dbg !6369

for.body177:                                      ; preds = %for.cond175
  %193 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6370
  %ob178 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %193, i32 0, i32 2, !dbg !6373
  %194 = load %struct.Object*, %struct.Object** %ob178, align 8, !dbg !6373
  %tobool179 = icmp ne %struct.Object* %194, null, !dbg !6370
  br i1 %tobool179, label %if.then180, label %if.end183, !dbg !6374

if.then180:                                       ; preds = %for.body177
  %195 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6375
  %196 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6377
  %ob181 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %196, i32 0, i32 2, !dbg !6378
  %197 = load %struct.Object*, %struct.Object** %ob181, align 8, !dbg !6378
  %198 = bitcast %struct.Object* %197 to i8*, !dbg !6377
  %call182 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %195, i8* %198), !dbg !6379
  store %struct.DagNode* %call182, %struct.DagNode** %node2, align 8, !dbg !6380
  %199 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6381
  %200 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6382
  %201 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6383
  call void @dag_add_relation(%struct.DagForest* %199, %struct.DagNode* %200, %struct.DagNode* %201, i16 signext 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0)), !dbg !6384
  br label %if.end183, !dbg !6385

if.end183:                                        ; preds = %if.then180, %for.body177
  br label %for.inc184, !dbg !6386

for.inc184:                                       ; preds = %if.end183
  %202 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !6387
  %next185 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %202, i32 0, i32 0, !dbg !6388
  %203 = load %struct.GroupObject*, %struct.GroupObject** %next185, align 8, !dbg !6388
  store %struct.GroupObject* %203, %struct.GroupObject** %go, align 8, !dbg !6389
  br label %for.cond175, !dbg !6390, !llvm.loop !6391

for.end186:                                       ; preds = %for.cond175
  br label %if.end187, !dbg !6393

if.end187:                                        ; preds = %for.end186, %land.lhs.true170, %if.then165
  br label %if.end188, !dbg !6394

if.end188:                                        ; preds = %if.end187, %if.end160
  %204 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6395
  %type189 = getelementptr inbounds %struct.Object, %struct.Object* %204, i32 0, i32 3, !dbg !6397
  %205 = load i16, i16* %type189, align 8, !dbg !6397
  %conv190 = sext i16 %205 to i32, !dbg !6395
  %cmp191 = icmp eq i32 %conv190, 1, !dbg !6398
  br i1 %cmp191, label %if.then203, label %lor.lhs.false193, !dbg !6399

lor.lhs.false193:                                 ; preds = %if.end188
  %206 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6400
  %type194 = getelementptr inbounds %struct.Object, %struct.Object* %206, i32 0, i32 3, !dbg !6401
  %207 = load i16, i16* %type194, align 8, !dbg !6401
  %conv195 = sext i16 %207 to i32, !dbg !6400
  %cmp196 = icmp eq i32 %conv195, 2, !dbg !6402
  br i1 %cmp196, label %if.then203, label %lor.lhs.false198, !dbg !6403

lor.lhs.false198:                                 ; preds = %lor.lhs.false193
  %208 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6404
  %type199 = getelementptr inbounds %struct.Object, %struct.Object* %208, i32 0, i32 3, !dbg !6405
  %209 = load i16, i16* %type199, align 8, !dbg !6405
  %conv200 = sext i16 %209 to i32, !dbg !6404
  %cmp201 = icmp eq i32 %conv200, 22, !dbg !6406
  br i1 %cmp201, label %if.then203, label %if.end229, !dbg !6407

if.then203:                                       ; preds = %lor.lhs.false198, %lor.lhs.false193, %if.end188
  %210 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6408
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %210, i32 0, i32 109, !dbg !6411
  %first204 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !6412
  %211 = load i8*, i8** %first204, align 8, !dbg !6412
  %tobool205 = icmp ne i8* %211, null, !dbg !6408
  br i1 %tobool205, label %if.then218, label %lor.lhs.false206, !dbg !6413

lor.lhs.false206:                                 ; preds = %if.then203
  %212 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6414
  %call207 = call zeroext i8 @modifiers_isModifierEnabled(%struct.Object* %212, i32 10), !dbg !6415
  %conv208 = zext i8 %call207 to i32, !dbg !6415
  %tobool209 = icmp ne i32 %conv208, 0, !dbg !6415
  br i1 %tobool209, label %if.then218, label %lor.lhs.false210, !dbg !6416

lor.lhs.false210:                                 ; preds = %lor.lhs.false206
  %213 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6417
  %call211 = call zeroext i8 @modifiers_isModifierEnabled(%struct.Object* %213, i32 22), !dbg !6418
  %conv212 = zext i8 %call211 to i32, !dbg !6418
  %tobool213 = icmp ne i32 %conv212, 0, !dbg !6418
  br i1 %tobool213, label %if.then218, label %lor.lhs.false214, !dbg !6419

lor.lhs.false214:                                 ; preds = %lor.lhs.false210
  %214 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6420
  %call215 = call zeroext i8 @modifiers_isModifierEnabled(%struct.Object* %214, i32 40), !dbg !6421
  %conv216 = zext i8 %call215 to i32, !dbg !6421
  %tobool217 = icmp ne i32 %conv216, 0, !dbg !6421
  br i1 %tobool217, label %if.then218, label %if.else219, !dbg !6422

if.then218:                                       ; preds = %lor.lhs.false214, %lor.lhs.false210, %lor.lhs.false206, %if.then203
  %215 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6423
  %216 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6425
  %217 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6426
  %218 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6427
  call void @dag_add_collision_field_relation(%struct.DagForest* %215, %struct.Scene* %216, %struct.Object* %217, %struct.DagNode* %218, i32 0, i8 zeroext 0), !dbg !6428
  br label %if.end228, !dbg !6429

if.else219:                                       ; preds = %lor.lhs.false214
  %219 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6430
  %call220 = call zeroext i8 @modifiers_isModifierEnabled(%struct.Object* %219, i32 31), !dbg !6432
  %tobool221 = icmp ne i8 %call220, 0, !dbg !6432
  br i1 %tobool221, label %if.then222, label %if.else223, !dbg !6433

if.then222:                                       ; preds = %if.else219
  %220 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6434
  %221 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6436
  %222 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6437
  %223 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6438
  call void @dag_add_collision_field_relation(%struct.DagForest* %220, %struct.Scene* %221, %struct.Object* %222, %struct.DagNode* %223, i32 13, i8 zeroext 0), !dbg !6439
  br label %if.end227, !dbg !6440

if.else223:                                       ; preds = %if.else219
  %224 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6441
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %224, i32 0, i32 128, !dbg !6443
  %225 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !6443
  %tobool224 = icmp ne %struct.RigidBodyOb* %225, null, !dbg !6441
  br i1 %tobool224, label %if.then225, label %if.end226, !dbg !6444

if.then225:                                       ; preds = %if.else223
  %226 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6445
  %227 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6447
  %228 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6448
  %229 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6449
  call void @dag_add_collision_field_relation(%struct.DagForest* %226, %struct.Scene* %227, %struct.Object* %228, %struct.DagNode* %229, i32 0, i8 zeroext 1), !dbg !6450
  br label %if.end226, !dbg !6451

if.end226:                                        ; preds = %if.then225, %if.else223
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.then222
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.then218
  br label %if.end229, !dbg !6452

if.end229:                                        ; preds = %if.end228, %lor.lhs.false198
  %230 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6453
  %data230 = getelementptr inbounds %struct.Object, %struct.Object* %230, i32 0, i32 19, !dbg !6455
  %231 = load i8*, i8** %data230, align 8, !dbg !6455
  %tobool231 = icmp ne i8* %231, null, !dbg !6453
  br i1 %tobool231, label %if.then232, label %if.end239, !dbg !6456

if.then232:                                       ; preds = %if.end229
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt233, metadata !6457, metadata !DIExpression()), !dbg !6461
  %232 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6462
  %data234 = getelementptr inbounds %struct.Object, %struct.Object* %232, i32 0, i32 19, !dbg !6463
  %233 = load i8*, i8** %data234, align 8, !dbg !6463
  %234 = bitcast i8* %233 to %struct.ID*, !dbg !6464
  %call235 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %234), !dbg !6465
  store %struct.AnimData* %call235, %struct.AnimData** %adt233, align 8, !dbg !6461
  %235 = load %struct.AnimData*, %struct.AnimData** %adt233, align 8, !dbg !6466
  %tobool236 = icmp ne %struct.AnimData* %235, null, !dbg !6466
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !6468

if.then237:                                       ; preds = %if.then232
  %236 = load %struct.AnimData*, %struct.AnimData** %adt233, align 8, !dbg !6469
  %237 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6470
  %238 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6471
  call void @dag_add_driver_relation(%struct.AnimData* %236, %struct.DagForest* %237, %struct.DagNode* %238, i32 1), !dbg !6472
  br label %if.end238, !dbg !6472

if.end238:                                        ; preds = %if.then237, %if.then232
  br label %if.end239, !dbg !6473

if.end239:                                        ; preds = %if.end238, %if.end229
  %239 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6474
  %type240 = getelementptr inbounds %struct.Object, %struct.Object* %239, i32 0, i32 3, !dbg !6475
  %240 = load i16, i16* %type240, align 8, !dbg !6475
  %conv241 = sext i16 %240 to i32, !dbg !6474
  switch i32 %conv241, label %sw.epilog299 [
    i32 11, label %sw.bb242
    i32 5, label %sw.bb249
    i32 2, label %sw.bb256
    i32 4, label %sw.bb256
  ], !dbg !6476

sw.bb242:                                         ; preds = %if.end239
  call void @llvm.dbg.declare(metadata %struct.Camera** %cam, metadata !6477, metadata !DIExpression()), !dbg !6480
  %241 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6481
  %data243 = getelementptr inbounds %struct.Object, %struct.Object* %241, i32 0, i32 19, !dbg !6482
  %242 = load i8*, i8** %data243, align 8, !dbg !6482
  %243 = bitcast i8* %242 to %struct.Camera*, !dbg !6483
  store %struct.Camera* %243, %struct.Camera** %cam, align 8, !dbg !6480
  %244 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !6484
  %dof_ob = getelementptr inbounds %struct.Camera, %struct.Camera* %244, i32 0, i32 17, !dbg !6486
  %245 = load %struct.Object*, %struct.Object** %dof_ob, align 8, !dbg !6486
  %tobool244 = icmp ne %struct.Object* %245, null, !dbg !6484
  br i1 %tobool244, label %if.then245, label %if.end248, !dbg !6487

if.then245:                                       ; preds = %sw.bb242
  %246 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6488
  %247 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !6490
  %dof_ob246 = getelementptr inbounds %struct.Camera, %struct.Camera* %247, i32 0, i32 17, !dbg !6491
  %248 = load %struct.Object*, %struct.Object** %dof_ob246, align 8, !dbg !6491
  %249 = bitcast %struct.Object* %248 to i8*, !dbg !6490
  %call247 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %246, i8* %249), !dbg !6492
  store %struct.DagNode* %call247, %struct.DagNode** %node2, align 8, !dbg !6493
  %250 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6494
  %251 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6495
  %252 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6496
  call void @dag_add_relation(%struct.DagForest* %250, %struct.DagNode* %251, %struct.DagNode* %252, i16 signext 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)), !dbg !6497
  br label %if.end248, !dbg !6498

if.end248:                                        ; preds = %if.then245, %sw.bb242
  br label %sw.epilog299, !dbg !6499

sw.bb249:                                         ; preds = %if.end239
  call void @llvm.dbg.declare(metadata %struct.Object** %mom, metadata !6500, metadata !DIExpression()), !dbg !6502
  %253 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6503
  %254 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6504
  %call250 = call %struct.Object* @BKE_mball_basis_find(%struct.Scene* %253, %struct.Object* %254), !dbg !6505
  store %struct.Object* %call250, %struct.Object** %mom, align 8, !dbg !6502
  %255 = load %struct.Object*, %struct.Object** %mom, align 8, !dbg !6506
  %256 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6508
  %cmp251 = icmp ne %struct.Object* %255, %256, !dbg !6509
  br i1 %cmp251, label %if.then253, label %if.end255, !dbg !6510

if.then253:                                       ; preds = %sw.bb249
  %257 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6511
  %258 = load %struct.Object*, %struct.Object** %mom, align 8, !dbg !6513
  %259 = bitcast %struct.Object* %258 to i8*, !dbg !6513
  %call254 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %257, i8* %259), !dbg !6514
  store %struct.DagNode* %call254, %struct.DagNode** %node2, align 8, !dbg !6515
  %260 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6516
  %261 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6517
  %262 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6518
  call void @dag_add_relation(%struct.DagForest* %260, %struct.DagNode* %261, %struct.DagNode* %262, i16 signext 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0)), !dbg !6519
  br label %if.end255, !dbg !6520

if.end255:                                        ; preds = %if.then253, %sw.bb249
  br label %sw.epilog299, !dbg !6521

sw.bb256:                                         ; preds = %if.end239, %if.end239
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu257, metadata !6522, metadata !DIExpression()), !dbg !6524
  %263 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6525
  %data258 = getelementptr inbounds %struct.Object, %struct.Object* %263, i32 0, i32 19, !dbg !6526
  %264 = load i8*, i8** %data258, align 8, !dbg !6526
  %265 = bitcast i8* %264 to %struct.Curve*, !dbg !6525
  store %struct.Curve* %265, %struct.Curve** %cu257, align 8, !dbg !6524
  %266 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6527
  %bevobj = getelementptr inbounds %struct.Curve, %struct.Curve* %266, i32 0, i32 5, !dbg !6529
  %267 = load %struct.Object*, %struct.Object** %bevobj, align 8, !dbg !6529
  %tobool259 = icmp ne %struct.Object* %267, null, !dbg !6527
  br i1 %tobool259, label %if.then260, label %if.end263, !dbg !6530

if.then260:                                       ; preds = %sw.bb256
  %268 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6531
  %269 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6533
  %bevobj261 = getelementptr inbounds %struct.Curve, %struct.Curve* %269, i32 0, i32 5, !dbg !6534
  %270 = load %struct.Object*, %struct.Object** %bevobj261, align 8, !dbg !6534
  %271 = bitcast %struct.Object* %270 to i8*, !dbg !6533
  %call262 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %268, i8* %271), !dbg !6535
  store %struct.DagNode* %call262, %struct.DagNode** %node2, align 8, !dbg !6536
  %272 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6537
  %273 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6538
  %274 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6539
  call void @dag_add_relation(%struct.DagForest* %272, %struct.DagNode* %273, %struct.DagNode* %274, i16 signext 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0)), !dbg !6540
  br label %if.end263, !dbg !6541

if.end263:                                        ; preds = %if.then260, %sw.bb256
  %275 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6542
  %taperobj = getelementptr inbounds %struct.Curve, %struct.Curve* %275, i32 0, i32 6, !dbg !6544
  %276 = load %struct.Object*, %struct.Object** %taperobj, align 8, !dbg !6544
  %tobool264 = icmp ne %struct.Object* %276, null, !dbg !6542
  br i1 %tobool264, label %if.then265, label %if.end268, !dbg !6545

if.then265:                                       ; preds = %if.end263
  %277 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6546
  %278 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6548
  %taperobj266 = getelementptr inbounds %struct.Curve, %struct.Curve* %278, i32 0, i32 6, !dbg !6549
  %279 = load %struct.Object*, %struct.Object** %taperobj266, align 8, !dbg !6549
  %280 = bitcast %struct.Object* %279 to i8*, !dbg !6548
  %call267 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %277, i8* %280), !dbg !6550
  store %struct.DagNode* %call267, %struct.DagNode** %node2, align 8, !dbg !6551
  %281 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6552
  %282 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6553
  %283 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6554
  call void @dag_add_relation(%struct.DagForest* %281, %struct.DagNode* %282, %struct.DagNode* %283, i16 signext 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0)), !dbg !6555
  br label %if.end268, !dbg !6556

if.end268:                                        ; preds = %if.then265, %if.end263
  %284 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6557
  %type269 = getelementptr inbounds %struct.Object, %struct.Object* %284, i32 0, i32 3, !dbg !6559
  %285 = load i16, i16* %type269, align 8, !dbg !6559
  %conv270 = sext i16 %285 to i32, !dbg !6557
  %cmp271 = icmp eq i32 %conv270, 4, !dbg !6560
  br i1 %cmp271, label %if.then273, label %if.end298, !dbg !6561

if.then273:                                       ; preds = %if.end268
  %286 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6562
  %family = getelementptr inbounds %struct.Curve, %struct.Curve* %286, i32 0, i32 54, !dbg !6565
  %arrayidx274 = getelementptr inbounds [64 x i8], [64 x i8]* %family, i64 0, i64 0, !dbg !6562
  %287 = load i8, i8* %arrayidx274, align 8, !dbg !6562
  %conv275 = zext i8 %287 to i32, !dbg !6562
  %cmp276 = icmp ne i32 %conv275, 10, !dbg !6566
  br i1 %cmp276, label %if.then278, label %if.end289, !dbg !6567

if.then278:                                       ; preds = %if.then273
  call void @llvm.dbg.declare(metadata %struct.ListBase** %duplilist, metadata !6568, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob, metadata !6571, metadata !DIExpression()), !dbg !6589
  %288 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6590
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %288, i32 0, i32 46, !dbg !6591
  %289 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !6591
  %290 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6592
  %291 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6593
  %call279 = call %struct.ListBase* @object_duplilist(%struct.EvaluationContext* %289, %struct.Scene* %290, %struct.Object* %291), !dbg !6594
  store %struct.ListBase* %call279, %struct.ListBase** %duplilist, align 8, !dbg !6595
  %292 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !6596
  %first280 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %292, i32 0, i32 0, !dbg !6598
  %293 = load i8*, i8** %first280, align 8, !dbg !6598
  %294 = bitcast i8* %293 to %struct.DupliObject*, !dbg !6596
  store %struct.DupliObject* %294, %struct.DupliObject** %dob, align 8, !dbg !6599
  br label %for.cond281, !dbg !6600

for.cond281:                                      ; preds = %for.inc286, %if.then278
  %295 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !6601
  %tobool282 = icmp ne %struct.DupliObject* %295, null, !dbg !6603
  br i1 %tobool282, label %for.body283, label %for.end288, !dbg !6603

for.body283:                                      ; preds = %for.cond281
  %296 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6604
  %297 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !6606
  %ob284 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %297, i32 0, i32 2, !dbg !6607
  %298 = load %struct.Object*, %struct.Object** %ob284, align 8, !dbg !6607
  %299 = bitcast %struct.Object* %298 to i8*, !dbg !6606
  %call285 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %296, i8* %299), !dbg !6608
  store %struct.DagNode* %call285, %struct.DagNode** %node2, align 8, !dbg !6609
  %300 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6610
  %301 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6611
  %302 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6612
  call void @dag_add_relation(%struct.DagForest* %300, %struct.DagNode* %301, %struct.DagNode* %302, i16 signext 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0)), !dbg !6613
  br label %for.inc286, !dbg !6614

for.inc286:                                       ; preds = %for.body283
  %303 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !6615
  %next287 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %303, i32 0, i32 0, !dbg !6616
  %304 = load %struct.DupliObject*, %struct.DupliObject** %next287, align 8, !dbg !6616
  store %struct.DupliObject* %304, %struct.DupliObject** %dob, align 8, !dbg !6617
  br label %for.cond281, !dbg !6618, !llvm.loop !6619

for.end288:                                       ; preds = %for.cond281
  %305 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !6621
  call void @free_object_duplilist(%struct.ListBase* %305), !dbg !6622
  br label %if.end289, !dbg !6623

if.end289:                                        ; preds = %for.end288, %if.then273
  %306 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6624
  %textoncurve = getelementptr inbounds %struct.Curve, %struct.Curve* %306, i32 0, i32 7, !dbg !6626
  %307 = load %struct.Object*, %struct.Object** %textoncurve, align 8, !dbg !6626
  %tobool290 = icmp ne %struct.Object* %307, null, !dbg !6624
  br i1 %tobool290, label %if.then291, label %if.end297, !dbg !6627

if.then291:                                       ; preds = %if.end289
  %308 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6628
  %309 = load %struct.Curve*, %struct.Curve** %cu257, align 8, !dbg !6630
  %textoncurve292 = getelementptr inbounds %struct.Curve, %struct.Curve* %309, i32 0, i32 7, !dbg !6631
  %310 = load %struct.Object*, %struct.Object** %textoncurve292, align 8, !dbg !6631
  %311 = bitcast %struct.Object* %310 to i8*, !dbg !6630
  %call293 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %308, i8* %311), !dbg !6632
  store %struct.DagNode* %call293, %struct.DagNode** %node2, align 8, !dbg !6633
  %312 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6634
  %eval_flags = getelementptr inbounds %struct.DagNode, %struct.DagNode* %312, i32 0, i32 21, !dbg !6635
  %313 = load i16, i16* %eval_flags, align 2, !dbg !6636
  %conv294 = sext i16 %313 to i32, !dbg !6636
  %or295 = or i32 %conv294, 1, !dbg !6636
  %conv296 = trunc i32 %or295 to i16, !dbg !6636
  store i16 %conv296, i16* %eval_flags, align 2, !dbg !6636
  %314 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6637
  %315 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6638
  %316 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6639
  call void @dag_add_relation(%struct.DagForest* %314, %struct.DagNode* %315, %struct.DagNode* %316, i16 signext 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)), !dbg !6640
  br label %if.end297, !dbg !6641

if.end297:                                        ; preds = %if.then291, %if.end289
  br label %if.end298, !dbg !6642

if.end298:                                        ; preds = %if.end297, %if.end268
  br label %sw.epilog299, !dbg !6643

sw.epilog299:                                     ; preds = %if.end239, %if.end298, %if.end255, %if.end248
  %317 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6644
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %317, i32 0, i32 31, !dbg !6646
  %318 = load i32, i32* %totcol, align 8, !dbg !6646
  %tobool300 = icmp ne i32 %318, 0, !dbg !6644
  br i1 %tobool300, label %if.then301, label %if.else314, !dbg !6647

if.then301:                                       ; preds = %sw.epilog299
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6648, metadata !DIExpression()), !dbg !6650
  store i32 1, i32* %a, align 4, !dbg !6651
  br label %for.cond302, !dbg !6653

for.cond302:                                      ; preds = %for.inc312, %if.then301
  %319 = load i32, i32* %a, align 4, !dbg !6654
  %320 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6656
  %totcol303 = getelementptr inbounds %struct.Object, %struct.Object* %320, i32 0, i32 31, !dbg !6657
  %321 = load i32, i32* %totcol303, align 8, !dbg !6657
  %cmp304 = icmp sle i32 %319, %321, !dbg !6658
  br i1 %cmp304, label %for.body306, label %for.end313, !dbg !6659

for.body306:                                      ; preds = %for.cond302
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !6660, metadata !DIExpression()), !dbg !6662
  %322 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6663
  %323 = load i32, i32* %a, align 4, !dbg !6664
  %conv307 = trunc i32 %323 to i16, !dbg !6664
  %call308 = call %struct.Material* @give_current_material(%struct.Object* %322, i16 signext %conv307), !dbg !6665
  store %struct.Material* %call308, %struct.Material** %ma, align 8, !dbg !6662
  %324 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6666
  %tobool309 = icmp ne %struct.Material* %324, null, !dbg !6666
  br i1 %tobool309, label %if.then310, label %if.end311, !dbg !6668

if.then310:                                       ; preds = %for.body306
  %325 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6669
  %326 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6671
  %327 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6672
  call void @dag_add_material_driver_relations(%struct.DagForest* %325, %struct.DagNode* %326, %struct.Material* %327), !dbg !6673
  br label %if.end311, !dbg !6674

if.end311:                                        ; preds = %if.then310, %for.body306
  br label %for.inc312, !dbg !6675

for.inc312:                                       ; preds = %if.end311
  %328 = load i32, i32* %a, align 4, !dbg !6676
  %inc = add nsw i32 %328, 1, !dbg !6676
  store i32 %inc, i32* %a, align 4, !dbg !6676
  br label %for.cond302, !dbg !6677, !llvm.loop !6678

for.end313:                                       ; preds = %for.cond302
  br label %if.end322, !dbg !6680

if.else314:                                       ; preds = %sw.epilog299
  %329 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6681
  %type315 = getelementptr inbounds %struct.Object, %struct.Object* %329, i32 0, i32 3, !dbg !6683
  %330 = load i16, i16* %type315, align 8, !dbg !6683
  %conv316 = sext i16 %330 to i32, !dbg !6681
  %cmp317 = icmp eq i32 %conv316, 10, !dbg !6684
  br i1 %cmp317, label %if.then319, label %if.end321, !dbg !6685

if.then319:                                       ; preds = %if.else314
  %331 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6686
  %332 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6688
  %333 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6689
  %data320 = getelementptr inbounds %struct.Object, %struct.Object* %333, i32 0, i32 19, !dbg !6690
  %334 = load i8*, i8** %data320, align 8, !dbg !6690
  %335 = bitcast i8* %334 to %struct.Lamp*, !dbg !6689
  call void @dag_add_lamp_driver_relations(%struct.DagForest* %331, %struct.DagNode* %332, %struct.Lamp* %335), !dbg !6691
  br label %if.end321, !dbg !6692

if.end321:                                        ; preds = %if.then319, %if.else314
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %for.end313
  %336 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6693
  %particlesystem323 = getelementptr inbounds %struct.Object, %struct.Object* %336, i32 0, i32 109, !dbg !6694
  %first324 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem323, i32 0, i32 0, !dbg !6695
  %337 = load i8*, i8** %first324, align 8, !dbg !6695
  %338 = bitcast i8* %337 to %struct.ParticleSystem*, !dbg !6693
  store %struct.ParticleSystem* %338, %struct.ParticleSystem** %psys, align 8, !dbg !6696
  %339 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6697
  %tobool325 = icmp ne %struct.ParticleSystem* %339, null, !dbg !6697
  br i1 %tobool325, label %if.then326, label %if.end457, !dbg !6699

if.then326:                                       ; preds = %if.end322
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go327, metadata !6700, metadata !DIExpression()), !dbg !6702
  br label %for.cond328, !dbg !6703

for.cond328:                                      ; preds = %for.inc454, %if.then326
  %340 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6704
  %tobool329 = icmp ne %struct.ParticleSystem* %340, null, !dbg !6707
  br i1 %tobool329, label %for.body330, label %for.end456, !dbg !6707

for.body330:                                      ; preds = %for.cond328
  call void @llvm.dbg.declare(metadata %struct.BoidRule** %rule, metadata !6708, metadata !DIExpression()), !dbg !6711
  store %struct.BoidRule* null, %struct.BoidRule** %rule, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata %struct.BoidState** %state, metadata !6712, metadata !DIExpression()), !dbg !6732
  store %struct.BoidState* null, %struct.BoidState** %state, align 8, !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !6733, metadata !DIExpression()), !dbg !6734
  %341 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6735
  %part331 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %341, i32 0, i32 2, !dbg !6736
  %342 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part331, align 8, !dbg !6736
  store %struct.ParticleSettings* %342, %struct.ParticleSettings** %part, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata %struct.ListBase** %effectors, metadata !6737, metadata !DIExpression()), !dbg !6738
  store %struct.ListBase* null, %struct.ListBase** %effectors, align 8, !dbg !6738
  call void @llvm.dbg.declare(metadata %struct.EffectorCache** %eff, metadata !6739, metadata !DIExpression()), !dbg !6823
  %343 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6824
  %344 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6825
  %345 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6826
  call void @dag_add_relation(%struct.DagForest* %343, %struct.DagNode* %344, %struct.DagNode* %345, i16 signext 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i64 0, i64 0)), !dbg !6827
  %346 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6828
  %347 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6830
  %call332 = call i32 @psys_check_enabled(%struct.Object* %346, %struct.ParticleSystem* %347), !dbg !6831
  %tobool333 = icmp ne i32 %call332, 0, !dbg !6831
  br i1 %tobool333, label %if.end335, label %if.then334, !dbg !6832

if.then334:                                       ; preds = %for.body330
  br label %for.inc454, !dbg !6833

if.end335:                                        ; preds = %for.body330
  %348 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6834
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %348, i32 0, i32 11, !dbg !6834
  %349 = load i16, i16* %phystype, align 8, !dbg !6834
  %conv336 = sext i16 %349 to i32, !dbg !6834
  %cmp337 = icmp eq i32 %conv336, 2, !dbg !6834
  br i1 %cmp337, label %if.then344, label %lor.lhs.false339, !dbg !6834

lor.lhs.false339:                                 ; preds = %if.end335
  %350 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6834
  %phystype340 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %350, i32 0, i32 11, !dbg !6834
  %351 = load i16, i16* %phystype340, align 8, !dbg !6834
  %conv341 = sext i16 %351 to i32, !dbg !6834
  %cmp342 = icmp eq i32 %conv341, 3, !dbg !6834
  br i1 %cmp342, label %if.then344, label %if.end365, !dbg !6836

if.then344:                                       ; preds = %lor.lhs.false339, %if.end335
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !6837, metadata !DIExpression()), !dbg !6852
  %352 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6853
  %targets345 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %352, i32 0, i32 17, !dbg !6854
  %first346 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets345, i32 0, i32 0, !dbg !6855
  %353 = load i8*, i8** %first346, align 8, !dbg !6855
  %354 = bitcast i8* %353 to %struct.ParticleTarget*, !dbg !6853
  store %struct.ParticleTarget* %354, %struct.ParticleTarget** %pt, align 8, !dbg !6852
  br label %for.cond347, !dbg !6856

for.cond347:                                      ; preds = %for.inc362, %if.then344
  %355 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6857
  %tobool348 = icmp ne %struct.ParticleTarget* %355, null, !dbg !6860
  br i1 %tobool348, label %for.body349, label %for.end364, !dbg !6860

for.body349:                                      ; preds = %for.cond347
  %356 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6861
  %ob350 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %356, i32 0, i32 2, !dbg !6864
  %357 = load %struct.Object*, %struct.Object** %ob350, align 8, !dbg !6864
  %tobool351 = icmp ne %struct.Object* %357, null, !dbg !6861
  br i1 %tobool351, label %land.lhs.true352, label %if.end361, !dbg !6865

land.lhs.true352:                                 ; preds = %for.body349
  %358 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6866
  %ob353 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %358, i32 0, i32 2, !dbg !6867
  %359 = load %struct.Object*, %struct.Object** %ob353, align 8, !dbg !6867
  %particlesystem354 = getelementptr inbounds %struct.Object, %struct.Object* %359, i32 0, i32 109, !dbg !6868
  %360 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6869
  %psys355 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %360, i32 0, i32 3, !dbg !6870
  %361 = load i32, i32* %psys355, align 8, !dbg !6870
  %sub = sub nsw i32 %361, 1, !dbg !6871
  %call356 = call i8* @BLI_findlink(%struct.ListBase* %particlesystem354, i32 %sub), !dbg !6872
  %tobool357 = icmp ne i8* %call356, null, !dbg !6872
  br i1 %tobool357, label %if.then358, label %if.end361, !dbg !6873

if.then358:                                       ; preds = %land.lhs.true352
  %362 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6874
  %363 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6876
  %ob359 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %363, i32 0, i32 2, !dbg !6877
  %364 = load %struct.Object*, %struct.Object** %ob359, align 8, !dbg !6877
  %365 = bitcast %struct.Object* %364 to i8*, !dbg !6876
  %call360 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %362, i8* %365), !dbg !6878
  store %struct.DagNode* %call360, %struct.DagNode** %node2, align 8, !dbg !6879
  %366 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6880
  %367 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6881
  %368 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6882
  call void @dag_add_relation(%struct.DagForest* %366, %struct.DagNode* %367, %struct.DagNode* %368, i16 signext 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)), !dbg !6883
  br label %if.end361, !dbg !6884

if.end361:                                        ; preds = %if.then358, %land.lhs.true352, %for.body349
  br label %for.inc362, !dbg !6885

for.inc362:                                       ; preds = %if.end361
  %369 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !6886
  %next363 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %369, i32 0, i32 0, !dbg !6887
  %370 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next363, align 8, !dbg !6887
  store %struct.ParticleTarget* %370, %struct.ParticleTarget** %pt, align 8, !dbg !6888
  br label %for.cond347, !dbg !6889, !llvm.loop !6890

for.end364:                                       ; preds = %for.cond347
  br label %if.end365, !dbg !6892

if.end365:                                        ; preds = %for.end364, %lor.lhs.false339
  %371 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6893
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %371, i32 0, i32 21, !dbg !6895
  %372 = load i16, i16* %ren_as, align 8, !dbg !6895
  %conv366 = sext i16 %372 to i32, !dbg !6893
  %cmp367 = icmp eq i32 %conv366, 7, !dbg !6896
  br i1 %cmp367, label %land.lhs.true369, label %if.end381, !dbg !6897

land.lhs.true369:                                 ; preds = %if.end365
  %373 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6898
  %dup_ob = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %373, i32 0, i32 125, !dbg !6899
  %374 = load %struct.Object*, %struct.Object** %dup_ob, align 8, !dbg !6899
  %tobool370 = icmp ne %struct.Object* %374, null, !dbg !6898
  br i1 %tobool370, label %if.then371, label %if.end381, !dbg !6900

if.then371:                                       ; preds = %land.lhs.true369
  %375 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6901
  %376 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6903
  %dup_ob372 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %376, i32 0, i32 125, !dbg !6904
  %377 = load %struct.Object*, %struct.Object** %dup_ob372, align 8, !dbg !6904
  %378 = bitcast %struct.Object* %377 to i8*, !dbg !6903
  %call373 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %375, i8* %378), !dbg !6905
  store %struct.DagNode* %call373, %struct.DagNode** %node2, align 8, !dbg !6906
  %379 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6907
  %380 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6908
  %381 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6909
  call void @dag_add_relation(%struct.DagForest* %379, %struct.DagNode* %380, %struct.DagNode* %381, i16 signext 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0)), !dbg !6910
  %382 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6911
  %dup_ob374 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %382, i32 0, i32 125, !dbg !6913
  %383 = load %struct.Object*, %struct.Object** %dup_ob374, align 8, !dbg !6913
  %type375 = getelementptr inbounds %struct.Object, %struct.Object* %383, i32 0, i32 3, !dbg !6914
  %384 = load i16, i16* %type375, align 8, !dbg !6914
  %conv376 = sext i16 %384 to i32, !dbg !6911
  %cmp377 = icmp eq i32 %conv376, 5, !dbg !6915
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !6916

if.then379:                                       ; preds = %if.then371
  %385 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6917
  %386 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6918
  %387 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6919
  call void @dag_add_relation(%struct.DagForest* %385, %struct.DagNode* %386, %struct.DagNode* %387, i16 signext 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0)), !dbg !6920
  br label %if.end380, !dbg !6920

if.end380:                                        ; preds = %if.then379, %if.then371
  br label %if.end381, !dbg !6921

if.end381:                                        ; preds = %if.end380, %land.lhs.true369, %if.end365
  %388 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6922
  %ren_as382 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %388, i32 0, i32 21, !dbg !6924
  %389 = load i16, i16* %ren_as382, align 8, !dbg !6924
  %conv383 = sext i16 %389 to i32, !dbg !6922
  %cmp384 = icmp eq i32 %conv383, 8, !dbg !6925
  br i1 %cmp384, label %land.lhs.true386, label %if.end401, !dbg !6926

land.lhs.true386:                                 ; preds = %if.end381
  %390 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6927
  %dup_group387 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %390, i32 0, i32 122, !dbg !6928
  %391 = load %struct.Group*, %struct.Group** %dup_group387, align 8, !dbg !6928
  %tobool388 = icmp ne %struct.Group* %391, null, !dbg !6927
  br i1 %tobool388, label %if.then389, label %if.end401, !dbg !6929

if.then389:                                       ; preds = %land.lhs.true386
  %392 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6930
  %dup_group390 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %392, i32 0, i32 122, !dbg !6933
  %393 = load %struct.Group*, %struct.Group** %dup_group390, align 8, !dbg !6933
  %gobject391 = getelementptr inbounds %struct.Group, %struct.Group* %393, i32 0, i32 1, !dbg !6934
  %first392 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject391, i32 0, i32 0, !dbg !6935
  %394 = load i8*, i8** %first392, align 8, !dbg !6935
  %395 = bitcast i8* %394 to %struct.GroupObject*, !dbg !6930
  store %struct.GroupObject* %395, %struct.GroupObject** %go327, align 8, !dbg !6936
  br label %for.cond393, !dbg !6937

for.cond393:                                      ; preds = %for.inc398, %if.then389
  %396 = load %struct.GroupObject*, %struct.GroupObject** %go327, align 8, !dbg !6938
  %tobool394 = icmp ne %struct.GroupObject* %396, null, !dbg !6940
  br i1 %tobool394, label %for.body395, label %for.end400, !dbg !6940

for.body395:                                      ; preds = %for.cond393
  %397 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6941
  %398 = load %struct.GroupObject*, %struct.GroupObject** %go327, align 8, !dbg !6943
  %ob396 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %398, i32 0, i32 2, !dbg !6944
  %399 = load %struct.Object*, %struct.Object** %ob396, align 8, !dbg !6944
  %400 = bitcast %struct.Object* %399 to i8*, !dbg !6943
  %call397 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %397, i8* %400), !dbg !6945
  store %struct.DagNode* %call397, %struct.DagNode** %node2, align 8, !dbg !6946
  %401 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6947
  %402 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6948
  %403 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6949
  call void @dag_add_relation(%struct.DagForest* %401, %struct.DagNode* %402, %struct.DagNode* %403, i16 signext 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0)), !dbg !6950
  br label %for.inc398, !dbg !6951

for.inc398:                                       ; preds = %for.body395
  %404 = load %struct.GroupObject*, %struct.GroupObject** %go327, align 8, !dbg !6952
  %next399 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %404, i32 0, i32 0, !dbg !6953
  %405 = load %struct.GroupObject*, %struct.GroupObject** %next399, align 8, !dbg !6953
  store %struct.GroupObject* %405, %struct.GroupObject** %go327, align 8, !dbg !6954
  br label %for.cond393, !dbg !6955, !llvm.loop !6956

for.end400:                                       ; preds = %for.cond393
  br label %if.end401, !dbg !6958

if.end401:                                        ; preds = %for.end400, %land.lhs.true386, %if.end381
  %406 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6959
  %407 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6960
  %408 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6961
  %409 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6962
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %409, i32 0, i32 4, !dbg !6963
  %410 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !6963
  %call402 = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %406, %struct.Object* %407, %struct.ParticleSystem* %408, %struct.EffectorWeights* %410, i8 zeroext 0), !dbg !6964
  store %struct.ListBase* %call402, %struct.ListBase** %effectors, align 8, !dbg !6965
  %411 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !6966
  %tobool403 = icmp ne %struct.ListBase* %411, null, !dbg !6966
  br i1 %tobool403, label %if.then404, label %if.end418, !dbg !6968

if.then404:                                       ; preds = %if.end401
  %412 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !6969
  %first405 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %412, i32 0, i32 0, !dbg !6972
  %413 = load i8*, i8** %first405, align 8, !dbg !6972
  %414 = bitcast i8* %413 to %struct.EffectorCache*, !dbg !6969
  store %struct.EffectorCache* %414, %struct.EffectorCache** %eff, align 8, !dbg !6973
  br label %for.cond406, !dbg !6974

for.cond406:                                      ; preds = %for.inc415, %if.then404
  %415 = load %struct.EffectorCache*, %struct.EffectorCache** %eff, align 8, !dbg !6975
  %tobool407 = icmp ne %struct.EffectorCache* %415, null, !dbg !6977
  br i1 %tobool407, label %for.body408, label %for.end417, !dbg !6977

for.body408:                                      ; preds = %for.cond406
  %416 = load %struct.EffectorCache*, %struct.EffectorCache** %eff, align 8, !dbg !6978
  %psys409 = getelementptr inbounds %struct.EffectorCache, %struct.EffectorCache* %416, i32 0, i32 4, !dbg !6981
  %417 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys409, align 8, !dbg !6981
  %tobool410 = icmp ne %struct.ParticleSystem* %417, null, !dbg !6978
  br i1 %tobool410, label %if.then411, label %if.end414, !dbg !6982

if.then411:                                       ; preds = %for.body408
  %418 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6983
  %419 = load %struct.EffectorCache*, %struct.EffectorCache** %eff, align 8, !dbg !6985
  %ob412 = getelementptr inbounds %struct.EffectorCache, %struct.EffectorCache* %419, i32 0, i32 3, !dbg !6986
  %420 = load %struct.Object*, %struct.Object** %ob412, align 8, !dbg !6986
  %421 = bitcast %struct.Object* %420 to i8*, !dbg !6985
  %call413 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %418, i8* %421), !dbg !6987
  store %struct.DagNode* %call413, %struct.DagNode** %node2, align 8, !dbg !6988
  %422 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !6989
  %423 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !6990
  %424 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !6991
  call void @dag_add_relation(%struct.DagForest* %422, %struct.DagNode* %423, %struct.DagNode* %424, i16 signext 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0)), !dbg !6992
  br label %if.end414, !dbg !6993

if.end414:                                        ; preds = %if.then411, %for.body408
  br label %for.inc415, !dbg !6994

for.inc415:                                       ; preds = %if.end414
  %425 = load %struct.EffectorCache*, %struct.EffectorCache** %eff, align 8, !dbg !6995
  %next416 = getelementptr inbounds %struct.EffectorCache, %struct.EffectorCache* %425, i32 0, i32 0, !dbg !6996
  %426 = load %struct.EffectorCache*, %struct.EffectorCache** %next416, align 8, !dbg !6996
  store %struct.EffectorCache* %426, %struct.EffectorCache** %eff, align 8, !dbg !6997
  br label %for.cond406, !dbg !6998, !llvm.loop !6999

for.end417:                                       ; preds = %for.cond406
  br label %if.end418, !dbg !7001

if.end418:                                        ; preds = %for.end417, %if.end401
  call void @pdEndEffectors(%struct.ListBase** %effectors), !dbg !7002
  %427 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7003
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %427, i32 0, i32 2, !dbg !7005
  %428 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !7005
  %tobool419 = icmp ne %struct.BoidSettings* %428, null, !dbg !7003
  br i1 %tobool419, label %if.then420, label %if.end453, !dbg !7006

if.then420:                                       ; preds = %if.end418
  %429 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7007
  %boids421 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %429, i32 0, i32 2, !dbg !7010
  %430 = load %struct.BoidSettings*, %struct.BoidSettings** %boids421, align 8, !dbg !7010
  %states = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %430, i32 0, i32 22, !dbg !7011
  %first422 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %states, i32 0, i32 0, !dbg !7012
  %431 = load i8*, i8** %first422, align 8, !dbg !7012
  %432 = bitcast i8* %431 to %struct.BoidState*, !dbg !7007
  store %struct.BoidState* %432, %struct.BoidState** %state, align 8, !dbg !7013
  br label %for.cond423, !dbg !7014

for.cond423:                                      ; preds = %for.inc450, %if.then420
  %433 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7015
  %tobool424 = icmp ne %struct.BoidState* %433, null, !dbg !7017
  br i1 %tobool424, label %for.body425, label %for.end452, !dbg !7017

for.body425:                                      ; preds = %for.cond423
  %434 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7018
  %rules = getelementptr inbounds %struct.BoidState, %struct.BoidState* %434, i32 0, i32 2, !dbg !7021
  %first426 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %rules, i32 0, i32 0, !dbg !7022
  %435 = load i8*, i8** %first426, align 8, !dbg !7022
  %436 = bitcast i8* %435 to %struct.BoidRule*, !dbg !7018
  store %struct.BoidRule* %436, %struct.BoidRule** %rule, align 8, !dbg !7023
  br label %for.cond427, !dbg !7024

for.cond427:                                      ; preds = %for.inc447, %for.body425
  %437 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7025
  %tobool428 = icmp ne %struct.BoidRule* %437, null, !dbg !7027
  br i1 %tobool428, label %for.body429, label %for.end449, !dbg !7027

for.body429:                                      ; preds = %for.cond427
  call void @llvm.dbg.declare(metadata %struct.Object** %ruleob, metadata !7028, metadata !DIExpression()), !dbg !7030
  store %struct.Object* null, %struct.Object** %ruleob, align 8, !dbg !7030
  %438 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7031
  %type430 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %438, i32 0, i32 2, !dbg !7033
  %439 = load i32, i32* %type430, align 8, !dbg !7033
  %cmp431 = icmp eq i32 %439, 2, !dbg !7034
  br i1 %cmp431, label %if.then433, label %if.else435, !dbg !7035

if.then433:                                       ; preds = %for.body429
  %440 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7036
  %441 = bitcast %struct.BoidRule* %440 to %struct.BoidRuleGoalAvoid*, !dbg !7037
  %ob434 = getelementptr inbounds %struct.BoidRuleGoalAvoid, %struct.BoidRuleGoalAvoid* %441, i32 0, i32 1, !dbg !7037
  %442 = load %struct.Object*, %struct.Object** %ob434, align 8, !dbg !7037
  store %struct.Object* %442, %struct.Object** %ruleob, align 8, !dbg !7038
  br label %if.end442, !dbg !7039

if.else435:                                       ; preds = %for.body429
  %443 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7040
  %type436 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %443, i32 0, i32 2, !dbg !7042
  %444 = load i32, i32* %type436, align 8, !dbg !7042
  %cmp437 = icmp eq i32 %444, 6, !dbg !7043
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !7044

if.then439:                                       ; preds = %if.else435
  %445 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7045
  %446 = bitcast %struct.BoidRule* %445 to %struct.BoidRuleFollowLeader*, !dbg !7046
  %ob440 = getelementptr inbounds %struct.BoidRuleFollowLeader, %struct.BoidRuleFollowLeader* %446, i32 0, i32 1, !dbg !7046
  %447 = load %struct.Object*, %struct.Object** %ob440, align 8, !dbg !7046
  store %struct.Object* %447, %struct.Object** %ruleob, align 8, !dbg !7047
  br label %if.end441, !dbg !7048

if.end441:                                        ; preds = %if.then439, %if.else435
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.then433
  %448 = load %struct.Object*, %struct.Object** %ruleob, align 8, !dbg !7049
  %tobool443 = icmp ne %struct.Object* %448, null, !dbg !7049
  br i1 %tobool443, label %if.then444, label %if.end446, !dbg !7051

if.then444:                                       ; preds = %if.end442
  %449 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7052
  %450 = load %struct.Object*, %struct.Object** %ruleob, align 8, !dbg !7054
  %451 = bitcast %struct.Object* %450 to i8*, !dbg !7054
  %call445 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %449, i8* %451), !dbg !7055
  store %struct.DagNode* %call445, %struct.DagNode** %node2, align 8, !dbg !7056
  %452 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7057
  %453 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7058
  %454 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7059
  call void @dag_add_relation(%struct.DagForest* %452, %struct.DagNode* %453, %struct.DagNode* %454, i16 signext 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0)), !dbg !7060
  br label %if.end446, !dbg !7061

if.end446:                                        ; preds = %if.then444, %if.end442
  br label %for.inc447, !dbg !7062

for.inc447:                                       ; preds = %if.end446
  %455 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7063
  %next448 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %455, i32 0, i32 0, !dbg !7064
  %456 = load %struct.BoidRule*, %struct.BoidRule** %next448, align 8, !dbg !7064
  store %struct.BoidRule* %456, %struct.BoidRule** %rule, align 8, !dbg !7065
  br label %for.cond427, !dbg !7066, !llvm.loop !7067

for.end449:                                       ; preds = %for.cond427
  br label %for.inc450, !dbg !7069

for.inc450:                                       ; preds = %for.end449
  %457 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7070
  %next451 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %457, i32 0, i32 0, !dbg !7071
  %458 = load %struct.BoidState*, %struct.BoidState** %next451, align 8, !dbg !7071
  store %struct.BoidState* %458, %struct.BoidState** %state, align 8, !dbg !7072
  br label %for.cond423, !dbg !7073, !llvm.loop !7074

for.end452:                                       ; preds = %for.cond423
  br label %if.end453, !dbg !7076

if.end453:                                        ; preds = %for.end452, %if.end418
  br label %for.inc454, !dbg !7077

for.inc454:                                       ; preds = %if.end453, %if.then334
  %459 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !7078
  %next455 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %459, i32 0, i32 0, !dbg !7079
  %460 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next455, align 8, !dbg !7079
  store %struct.ParticleSystem* %460, %struct.ParticleSystem** %psys, align 8, !dbg !7080
  br label %for.cond328, !dbg !7081, !llvm.loop !7082

for.end456:                                       ; preds = %for.cond328
  br label %if.end457, !dbg !7084

if.end457:                                        ; preds = %for.end456, %if.end322
  %461 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7085
  %constraints458 = getelementptr inbounds %struct.Object, %struct.Object* %461, i32 0, i32 106, !dbg !7087
  %first459 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints458, i32 0, i32 0, !dbg !7088
  %462 = load i8*, i8** %first459, align 8, !dbg !7088
  %463 = bitcast i8* %462 to %struct.bConstraint*, !dbg !7085
  store %struct.bConstraint* %463, %struct.bConstraint** %con, align 8, !dbg !7089
  br label %for.cond460, !dbg !7090

for.cond460:                                      ; preds = %for.inc602, %if.end457
  %464 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7091
  %tobool461 = icmp ne %struct.bConstraint* %464, null, !dbg !7093
  br i1 %tobool461, label %for.body462, label %for.end604, !dbg !7093

for.body462:                                      ; preds = %for.cond460
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti463, metadata !7094, metadata !DIExpression()), !dbg !7096
  %465 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7097
  %call464 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %465), !dbg !7098
  store %struct.bConstraintTypeInfo* %call464, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7096
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets465, metadata !7099, metadata !DIExpression()), !dbg !7100
  %466 = bitcast %struct.ListBase* %targets465 to i8*, !dbg !7100
  call void @llvm.memset.p0i8.i64(i8* align 8 %466, i8 0, i64 16, i1 false), !dbg !7100
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct466, metadata !7101, metadata !DIExpression()), !dbg !7102
  %467 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7103
  %tobool467 = icmp ne %struct.bConstraintTypeInfo* %467, null, !dbg !7103
  br i1 %tobool467, label %if.end469, label %if.then468, !dbg !7105

if.then468:                                       ; preds = %for.body462
  br label %for.inc602, !dbg !7106

if.end469:                                        ; preds = %for.body462
  %468 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7107
  %type470 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %468, i32 0, i32 0, !dbg !7107
  %469 = load i16, i16* %type470, align 8, !dbg !7107
  %conv471 = sext i16 %469 to i32, !dbg !7107
  %cmp472 = icmp eq i32 %conv471, 26, !dbg !7107
  br i1 %cmp472, label %if.then484, label %lor.lhs.false474, !dbg !7107

lor.lhs.false474:                                 ; preds = %if.end469
  %470 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7107
  %type475 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %470, i32 0, i32 0, !dbg !7107
  %471 = load i16, i16* %type475, align 8, !dbg !7107
  %conv476 = sext i16 %471 to i32, !dbg !7107
  %cmp477 = icmp eq i32 %conv476, 27, !dbg !7107
  br i1 %cmp477, label %if.then484, label %lor.lhs.false479, !dbg !7107

lor.lhs.false479:                                 ; preds = %lor.lhs.false474
  %472 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7107
  %type480 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %472, i32 0, i32 0, !dbg !7107
  %473 = load i16, i16* %type480, align 8, !dbg !7107
  %conv481 = sext i16 %473 to i32, !dbg !7107
  %cmp482 = icmp eq i32 %conv481, 28, !dbg !7107
  br i1 %cmp482, label %if.then484, label %if.else527, !dbg !7109

if.then484:                                       ; preds = %lor.lhs.false479, %lor.lhs.false474, %if.end469
  call void @llvm.dbg.declare(metadata i32* %depends_on_camera, metadata !7110, metadata !DIExpression()), !dbg !7112
  store i32 0, i32* %depends_on_camera, align 4, !dbg !7112
  %474 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7113
  %type485 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %474, i32 0, i32 0, !dbg !7115
  %475 = load i16, i16* %type485, align 8, !dbg !7115
  %conv486 = sext i16 %475 to i32, !dbg !7113
  %cmp487 = icmp eq i32 %conv486, 26, !dbg !7116
  br i1 %cmp487, label %if.then489, label %if.else510, !dbg !7117

if.then489:                                       ; preds = %if.then484
  call void @llvm.dbg.declare(metadata %struct.bFollowTrackConstraint** %data490, metadata !7118, metadata !DIExpression()), !dbg !7120
  %476 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7121
  %data491 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %476, i32 0, i32 2, !dbg !7122
  %477 = load i8*, i8** %data491, align 8, !dbg !7122
  %478 = bitcast i8* %477 to %struct.bFollowTrackConstraint*, !dbg !7123
  store %struct.bFollowTrackConstraint* %478, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7120
  %479 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7124
  %clip = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %479, i32 0, i32 0, !dbg !7126
  %480 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !7126
  %tobool492 = icmp ne %struct.MovieClip* %480, null, !dbg !7124
  br i1 %tobool492, label %land.lhs.true497, label %lor.lhs.false493, !dbg !7127

lor.lhs.false493:                                 ; preds = %if.then489
  %481 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7128
  %flag494 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %481, i32 0, i32 2, !dbg !7129
  %482 = load i32, i32* %flag494, align 8, !dbg !7129
  %and495 = and i32 %482, 1, !dbg !7130
  %tobool496 = icmp ne i32 %and495, 0, !dbg !7130
  br i1 %tobool496, label %land.lhs.true497, label %if.end502, !dbg !7131

land.lhs.true497:                                 ; preds = %lor.lhs.false493, %if.then489
  %483 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7132
  %track = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %483, i32 0, i32 1, !dbg !7133
  %arrayidx498 = getelementptr inbounds [64 x i8], [64 x i8]* %track, i64 0, i64 0, !dbg !7132
  %484 = load i8, i8* %arrayidx498, align 8, !dbg !7132
  %conv499 = zext i8 %484 to i32, !dbg !7132
  %tobool500 = icmp ne i32 %conv499, 0, !dbg !7132
  br i1 %tobool500, label %if.then501, label %if.end502, !dbg !7134

if.then501:                                       ; preds = %land.lhs.true497
  store i32 1, i32* %depends_on_camera, align 4, !dbg !7135
  br label %if.end502, !dbg !7136

if.end502:                                        ; preds = %if.then501, %land.lhs.true497, %lor.lhs.false493
  %485 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7137
  %depth_ob = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %485, i32 0, i32 6, !dbg !7139
  %486 = load %struct.Object*, %struct.Object** %depth_ob, align 8, !dbg !7139
  %tobool503 = icmp ne %struct.Object* %486, null, !dbg !7137
  br i1 %tobool503, label %if.then504, label %if.end509, !dbg !7140

if.then504:                                       ; preds = %if.end502
  %487 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7141
  %488 = load %struct.bFollowTrackConstraint*, %struct.bFollowTrackConstraint** %data490, align 8, !dbg !7143
  %depth_ob505 = getelementptr inbounds %struct.bFollowTrackConstraint, %struct.bFollowTrackConstraint* %488, i32 0, i32 6, !dbg !7144
  %489 = load %struct.Object*, %struct.Object** %depth_ob505, align 8, !dbg !7144
  %490 = bitcast %struct.Object* %489 to i8*, !dbg !7143
  %call506 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %487, i8* %490), !dbg !7145
  store %struct.DagNode* %call506, %struct.DagNode** %node2, align 8, !dbg !7146
  %491 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7147
  %492 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7148
  %493 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7149
  %494 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7150
  %name507 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %494, i32 0, i32 2, !dbg !7151
  %arraydecay508 = getelementptr inbounds [32 x i8], [32 x i8]* %name507, i64 0, i64 0, !dbg !7150
  call void @dag_add_relation(%struct.DagForest* %491, %struct.DagNode* %492, %struct.DagNode* %493, i16 signext 20, i8* %arraydecay508), !dbg !7152
  br label %if.end509, !dbg !7153

if.end509:                                        ; preds = %if.then504, %if.end502
  br label %if.end517, !dbg !7154

if.else510:                                       ; preds = %if.then484
  %495 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7155
  %type511 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %495, i32 0, i32 0, !dbg !7157
  %496 = load i16, i16* %type511, align 8, !dbg !7157
  %conv512 = sext i16 %496 to i32, !dbg !7155
  %cmp513 = icmp eq i32 %conv512, 28, !dbg !7158
  br i1 %cmp513, label %if.then515, label %if.end516, !dbg !7159

if.then515:                                       ; preds = %if.else510
  store i32 1, i32* %depends_on_camera, align 4, !dbg !7160
  br label %if.end516, !dbg !7161

if.end516:                                        ; preds = %if.then515, %if.else510
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %if.end509
  %497 = load i32, i32* %depends_on_camera, align 4, !dbg !7162
  %tobool518 = icmp ne i32 %497, 0, !dbg !7162
  br i1 %tobool518, label %land.lhs.true519, label %if.end526, !dbg !7164

land.lhs.true519:                                 ; preds = %if.end517
  %498 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7165
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %498, i32 0, i32 2, !dbg !7166
  %499 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7166
  %tobool520 = icmp ne %struct.Object* %499, null, !dbg !7165
  br i1 %tobool520, label %if.then521, label %if.end526, !dbg !7167

if.then521:                                       ; preds = %land.lhs.true519
  %500 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7168
  %501 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7170
  %camera522 = getelementptr inbounds %struct.Scene, %struct.Scene* %501, i32 0, i32 2, !dbg !7171
  %502 = load %struct.Object*, %struct.Object** %camera522, align 8, !dbg !7171
  %503 = bitcast %struct.Object* %502 to i8*, !dbg !7170
  %call523 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %500, i8* %503), !dbg !7172
  store %struct.DagNode* %call523, %struct.DagNode** %node2, align 8, !dbg !7173
  %504 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7174
  %505 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7175
  %506 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7176
  %507 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7177
  %name524 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %507, i32 0, i32 2, !dbg !7178
  %arraydecay525 = getelementptr inbounds [32 x i8], [32 x i8]* %name524, i64 0, i64 0, !dbg !7177
  call void @dag_add_relation(%struct.DagForest* %504, %struct.DagNode* %505, %struct.DagNode* %506, i16 signext 20, i8* %arraydecay525), !dbg !7179
  br label %if.end526, !dbg !7180

if.end526:                                        ; preds = %if.then521, %land.lhs.true519, %if.end517
  %508 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7181
  %509 = load %struct.DagNode*, %struct.DagNode** %scenenode.addr, align 8, !dbg !7182
  %510 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7183
  call void @dag_add_relation(%struct.DagForest* %508, %struct.DagNode* %509, %struct.DagNode* %510, i16 signext 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)), !dbg !7184
  store i32 0, i32* %addtoroot, align 4, !dbg !7185
  br label %if.end601, !dbg !7186

if.else527:                                       ; preds = %lor.lhs.false479
  %511 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7187
  %get_constraint_targets528 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %511, i32 0, i32 8, !dbg !7189
  %512 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets528, align 8, !dbg !7189
  %tobool529 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %512, null, !dbg !7187
  br i1 %tobool529, label %if.then530, label %if.end600, !dbg !7190

if.then530:                                       ; preds = %if.else527
  %513 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7191
  %get_constraint_targets531 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %513, i32 0, i32 8, !dbg !7193
  %514 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets531, align 8, !dbg !7193
  %515 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7194
  %call532 = call i32 %514(%struct.bConstraint* %515, %struct.ListBase* %targets465), !dbg !7191
  %first533 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets465, i32 0, i32 0, !dbg !7195
  %516 = load i8*, i8** %first533, align 8, !dbg !7195
  %517 = bitcast i8* %516 to %struct.bConstraintTarget*, !dbg !7197
  store %struct.bConstraintTarget* %517, %struct.bConstraintTarget** %ct466, align 8, !dbg !7198
  br label %for.cond534, !dbg !7199

for.cond534:                                      ; preds = %for.inc592, %if.then530
  %518 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct466, align 8, !dbg !7200
  %tobool535 = icmp ne %struct.bConstraintTarget* %518, null, !dbg !7202
  br i1 %tobool535, label %for.body536, label %for.end594, !dbg !7202

for.body536:                                      ; preds = %for.cond534
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !7203, metadata !DIExpression()), !dbg !7205
  %519 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct466, align 8, !dbg !7206
  %tar537 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %519, i32 0, i32 2, !dbg !7208
  %520 = load %struct.Object*, %struct.Object** %tar537, align 8, !dbg !7208
  %tobool538 = icmp ne %struct.Object* %520, null, !dbg !7206
  br i1 %tobool538, label %if.then539, label %if.else541, !dbg !7209

if.then539:                                       ; preds = %for.body536
  %521 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct466, align 8, !dbg !7210
  %tar540 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %521, i32 0, i32 2, !dbg !7211
  %522 = load %struct.Object*, %struct.Object** %tar540, align 8, !dbg !7211
  store %struct.Object* %522, %struct.Object** %obt, align 8, !dbg !7212
  br label %if.end542, !dbg !7213

if.else541:                                       ; preds = %for.body536
  br label %for.inc592, !dbg !7214

if.end542:                                        ; preds = %if.then539
  %523 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7215
  %524 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7216
  %525 = bitcast %struct.Object* %524 to i8*, !dbg !7216
  %call543 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %523, i8* %525), !dbg !7217
  store %struct.DagNode* %call543, %struct.DagNode** %node2, align 8, !dbg !7218
  %526 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7219
  %type544 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %526, i32 0, i32 3, !dbg !7219
  %527 = load i16, i16* %type544, align 8, !dbg !7219
  %conv545 = sext i16 %527 to i32, !dbg !7219
  %cmp546 = icmp eq i32 %conv545, 4, !dbg !7219
  br i1 %cmp546, label %if.then553, label %lor.lhs.false548, !dbg !7219

lor.lhs.false548:                                 ; preds = %if.end542
  %528 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7219
  %type549 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %528, i32 0, i32 3, !dbg !7219
  %529 = load i16, i16* %type549, align 8, !dbg !7219
  %conv550 = sext i16 %529 to i32, !dbg !7219
  %cmp551 = icmp eq i32 %conv550, 18, !dbg !7219
  br i1 %cmp551, label %if.then553, label %if.else556, !dbg !7221

if.then553:                                       ; preds = %lor.lhs.false548, %if.end542
  %530 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7222
  %531 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7223
  %532 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7224
  %533 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7225
  %name554 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %533, i32 0, i32 2, !dbg !7226
  %arraydecay555 = getelementptr inbounds [32 x i8], [32 x i8]* %name554, i64 0, i64 0, !dbg !7225
  call void @dag_add_relation(%struct.DagForest* %530, %struct.DagNode* %531, %struct.DagNode* %532, i16 signext 20, i8* %arraydecay555), !dbg !7227
  br label %if.end591, !dbg !7227

if.else556:                                       ; preds = %lor.lhs.false548
  %534 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7228
  %type557 = getelementptr inbounds %struct.Object, %struct.Object* %534, i32 0, i32 3, !dbg !7228
  %535 = load i16, i16* %type557, align 8, !dbg !7228
  %conv558 = sext i16 %535 to i32, !dbg !7228
  %cmp559 = icmp eq i32 %conv558, 25, !dbg !7228
  br i1 %cmp559, label %land.lhs.true571, label %lor.lhs.false561, !dbg !7228

lor.lhs.false561:                                 ; preds = %if.else556
  %536 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7228
  %type562 = getelementptr inbounds %struct.Object, %struct.Object* %536, i32 0, i32 3, !dbg !7228
  %537 = load i16, i16* %type562, align 8, !dbg !7228
  %conv563 = sext i16 %537 to i32, !dbg !7228
  %cmp564 = icmp eq i32 %conv563, 1, !dbg !7228
  br i1 %cmp564, label %land.lhs.true571, label %lor.lhs.false566, !dbg !7228

lor.lhs.false566:                                 ; preds = %lor.lhs.false561
  %538 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7228
  %type567 = getelementptr inbounds %struct.Object, %struct.Object* %538, i32 0, i32 3, !dbg !7228
  %539 = load i16, i16* %type567, align 8, !dbg !7228
  %conv568 = sext i16 %539 to i32, !dbg !7228
  %cmp569 = icmp eq i32 %conv568, 22, !dbg !7228
  br i1 %cmp569, label %land.lhs.true571, label %if.else587, !dbg !7231

land.lhs.true571:                                 ; preds = %lor.lhs.false566, %lor.lhs.false561, %if.else556
  %540 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct466, align 8, !dbg !7232
  %subtarget572 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %540, i32 0, i32 3, !dbg !7233
  %arrayidx573 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget572, i64 0, i64 0, !dbg !7232
  %541 = load i8, i8* %arrayidx573, align 8, !dbg !7232
  %conv574 = zext i8 %541 to i32, !dbg !7234
  %tobool575 = icmp ne i32 %conv574, 0, !dbg !7234
  br i1 %tobool575, label %if.then576, label %if.else587, !dbg !7235

if.then576:                                       ; preds = %land.lhs.true571
  %542 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7236
  %543 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7238
  %544 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7239
  %545 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7240
  %name577 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %545, i32 0, i32 2, !dbg !7241
  %arraydecay578 = getelementptr inbounds [32 x i8], [32 x i8]* %name577, i64 0, i64 0, !dbg !7240
  call void @dag_add_relation(%struct.DagForest* %542, %struct.DagNode* %543, %struct.DagNode* %544, i16 signext 20, i8* %arraydecay578), !dbg !7242
  %546 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7243
  %type579 = getelementptr inbounds %struct.Object, %struct.Object* %546, i32 0, i32 3, !dbg !7245
  %547 = load i16, i16* %type579, align 8, !dbg !7245
  %conv580 = sext i16 %547 to i32, !dbg !7243
  %cmp581 = icmp eq i32 %conv580, 1, !dbg !7246
  br i1 %cmp581, label %if.then583, label %if.end586, !dbg !7247

if.then583:                                       ; preds = %if.then576
  %548 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7248
  %customdata_mask584 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %548, i32 0, i32 10, !dbg !7249
  %549 = load i64, i64* %customdata_mask584, align 8, !dbg !7250
  %or585 = or i64 %549, 4, !dbg !7250
  store i64 %or585, i64* %customdata_mask584, align 8, !dbg !7250
  br label %if.end586, !dbg !7248

if.end586:                                        ; preds = %if.then583, %if.then576
  br label %if.end590, !dbg !7251

if.else587:                                       ; preds = %land.lhs.true571, %lor.lhs.false566
  %550 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7252
  %551 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7253
  %552 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7254
  %553 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7255
  %name588 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %553, i32 0, i32 2, !dbg !7256
  %arraydecay589 = getelementptr inbounds [32 x i8], [32 x i8]* %name588, i64 0, i64 0, !dbg !7255
  call void @dag_add_relation(%struct.DagForest* %550, %struct.DagNode* %551, %struct.DagNode* %552, i16 signext 4, i8* %arraydecay589), !dbg !7257
  br label %if.end590

if.end590:                                        ; preds = %if.else587, %if.end586
  br label %if.end591

if.end591:                                        ; preds = %if.end590, %if.then553
  store i32 0, i32* %addtoroot, align 4, !dbg !7258
  br label %for.inc592, !dbg !7259

for.inc592:                                       ; preds = %if.end591, %if.else541
  %554 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct466, align 8, !dbg !7260
  %next593 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %554, i32 0, i32 0, !dbg !7261
  %555 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next593, align 8, !dbg !7261
  store %struct.bConstraintTarget* %555, %struct.bConstraintTarget** %ct466, align 8, !dbg !7262
  br label %for.cond534, !dbg !7263, !llvm.loop !7264

for.end594:                                       ; preds = %for.cond534
  %556 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7266
  %flush_constraint_targets595 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %556, i32 0, i32 9, !dbg !7268
  %557 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets595, align 8, !dbg !7268
  %tobool596 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %557, null, !dbg !7266
  br i1 %tobool596, label %if.then597, label %if.end599, !dbg !7269

if.then597:                                       ; preds = %for.end594
  %558 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti463, align 8, !dbg !7270
  %flush_constraint_targets598 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %558, i32 0, i32 9, !dbg !7271
  %559 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets598, align 8, !dbg !7271
  %560 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7272
  call void %559(%struct.bConstraint* %560, %struct.ListBase* %targets465, i8 zeroext 1), !dbg !7270
  br label %if.end599, !dbg !7270

if.end599:                                        ; preds = %if.then597, %for.end594
  br label %if.end600, !dbg !7273

if.end600:                                        ; preds = %if.end599, %if.else527
  br label %if.end601

if.end601:                                        ; preds = %if.end600, %if.end526
  br label %for.inc602, !dbg !7274

for.inc602:                                       ; preds = %if.end601, %if.then468
  %561 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7275
  %next603 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %561, i32 0, i32 0, !dbg !7276
  %562 = load %struct.bConstraint*, %struct.bConstraint** %next603, align 8, !dbg !7276
  store %struct.bConstraint* %562, %struct.bConstraint** %con, align 8, !dbg !7277
  br label %for.cond460, !dbg !7278, !llvm.loop !7279

for.end604:                                       ; preds = %for.cond460
  %563 = load i32, i32* %addtoroot, align 4, !dbg !7281
  %cmp605 = icmp eq i32 %563, 1, !dbg !7283
  br i1 %cmp605, label %if.then607, label %if.end608, !dbg !7284

if.then607:                                       ; preds = %for.end604
  %564 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7285
  %565 = load %struct.DagNode*, %struct.DagNode** %scenenode.addr, align 8, !dbg !7286
  %566 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7287
  call void @dag_add_relation(%struct.DagForest* %564, %struct.DagNode* %565, %struct.DagNode* %566, i16 signext 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)), !dbg !7288
  br label %if.end608, !dbg !7288

if.end608:                                        ; preds = %if.then607, %for.end604
  ret void, !dbg !7289
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_dag_group(%struct.DagForest* %dag, %struct.DagNode* %scenenode, %struct.Scene* %scene, %struct.Group* %group, i16 signext %mask) #0 !dbg !7290 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %scenenode.addr = alloca %struct.DagNode*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %group.addr = alloca %struct.Group*, align 8
  %mask.addr = alloca i16, align 2
  %go = alloca %struct.GroupObject*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !7295, metadata !DIExpression()), !dbg !7296
  store %struct.DagNode* %scenenode, %struct.DagNode** %scenenode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %scenenode.addr, metadata !7297, metadata !DIExpression()), !dbg !7298
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7299, metadata !DIExpression()), !dbg !7300
  store %struct.Group* %group, %struct.Group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Group** %group.addr, metadata !7301, metadata !DIExpression()), !dbg !7302
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !7305, metadata !DIExpression()), !dbg !7306
  %0 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !7307
  %id = getelementptr inbounds %struct.Group, %struct.Group* %0, i32 0, i32 0, !dbg !7309
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !7310
  %1 = load i16, i16* %flag, align 2, !dbg !7310
  %conv = sext i16 %1 to i32, !dbg !7307
  %and = and i32 %conv, 1024, !dbg !7311
  %tobool = icmp ne i32 %and, 0, !dbg !7311
  br i1 %tobool, label %if.then, label %if.end, !dbg !7312

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7313

if.end:                                           ; preds = %entry
  %2 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !7314
  %id1 = getelementptr inbounds %struct.Group, %struct.Group* %2, i32 0, i32 0, !dbg !7315
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !7316
  %3 = load i16, i16* %flag2, align 2, !dbg !7317
  %conv3 = sext i16 %3 to i32, !dbg !7317
  %or = or i32 %conv3, 1024, !dbg !7317
  %conv4 = trunc i32 %or to i16, !dbg !7317
  store i16 %conv4, i16* %flag2, align 2, !dbg !7317
  %4 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !7318
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %4, i32 0, i32 1, !dbg !7320
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !7321
  %5 = load i8*, i8** %first, align 8, !dbg !7321
  %6 = bitcast i8* %5 to %struct.GroupObject*, !dbg !7318
  store %struct.GroupObject* %6, %struct.GroupObject** %go, align 8, !dbg !7322
  br label %for.cond, !dbg !7323

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7324
  %tobool5 = icmp ne %struct.GroupObject* %7, null, !dbg !7326
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7326

for.body:                                         ; preds = %for.cond
  %8 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7327
  %9 = load %struct.DagNode*, %struct.DagNode** %scenenode.addr, align 8, !dbg !7329
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7330
  %11 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7331
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %11, i32 0, i32 2, !dbg !7332
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7332
  %13 = load i16, i16* %mask.addr, align 2, !dbg !7333
  %conv6 = sext i16 %13 to i32, !dbg !7333
  call void @build_dag_object(%struct.DagForest* %8, %struct.DagNode* %9, %struct.Scene* %10, %struct.Object* %12, i32 %conv6), !dbg !7334
  %14 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7335
  %ob7 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %14, i32 0, i32 2, !dbg !7337
  %15 = load %struct.Object*, %struct.Object** %ob7, align 8, !dbg !7337
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 112, !dbg !7338
  %16 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !7338
  %tobool8 = icmp ne %struct.Group* %16, null, !dbg !7335
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !7339

if.then9:                                         ; preds = %for.body
  %17 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7340
  %18 = load %struct.DagNode*, %struct.DagNode** %scenenode.addr, align 8, !dbg !7341
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7342
  %20 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7343
  %ob10 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %20, i32 0, i32 2, !dbg !7344
  %21 = load %struct.Object*, %struct.Object** %ob10, align 8, !dbg !7344
  %dup_group11 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 112, !dbg !7345
  %22 = load %struct.Group*, %struct.Group** %dup_group11, align 8, !dbg !7345
  %23 = load i16, i16* %mask.addr, align 2, !dbg !7346
  call void @build_dag_group(%struct.DagForest* %17, %struct.DagNode* %18, %struct.Scene* %19, %struct.Group* %22, i16 signext %23), !dbg !7347
  br label %if.end12, !dbg !7347

if.end12:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !7348

for.inc:                                          ; preds = %if.end12
  %24 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !7349
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %24, i32 0, i32 0, !dbg !7350
  %25 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !7350
  store %struct.GroupObject* %25, %struct.GroupObject** %go, align 8, !dbg !7351
  br label %for.cond, !dbg !7352, !llvm.loop !7353

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7355
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @dag_find_node(%struct.DagForest* %forest, i8* %fob) #0 !dbg !7356 {
entry:
  %retval = alloca %struct.DagNode*, align 8
  %forest.addr = alloca %struct.DagForest*, align 8
  %fob.addr = alloca i8*, align 8
  store %struct.DagForest* %forest, %struct.DagForest** %forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest.addr, metadata !7357, metadata !DIExpression()), !dbg !7358
  store i8* %fob, i8** %fob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fob.addr, metadata !7359, metadata !DIExpression()), !dbg !7360
  %0 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7361
  %nodeHash = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 1, !dbg !7363
  %1 = load %struct.GHash*, %struct.GHash** %nodeHash, align 8, !dbg !7363
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !7361
  br i1 %tobool, label %if.then, label %if.end, !dbg !7364

if.then:                                          ; preds = %entry
  %2 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7365
  %nodeHash1 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %2, i32 0, i32 1, !dbg !7366
  %3 = load %struct.GHash*, %struct.GHash** %nodeHash1, align 8, !dbg !7366
  %4 = load i8*, i8** %fob.addr, align 8, !dbg !7367
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %3, i8* %4), !dbg !7368
  %5 = bitcast i8* %call to %struct.DagNode*, !dbg !7368
  store %struct.DagNode* %5, %struct.DagNode** %retval, align 8, !dbg !7369
  br label %return, !dbg !7369

if.end:                                           ; preds = %entry
  store %struct.DagNode* null, %struct.DagNode** %retval, align 8, !dbg !7370
  br label %return, !dbg !7370

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.DagNode*, %struct.DagNode** %retval, align 8, !dbg !7371
  ret %struct.DagNode* %6, !dbg !7371
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #1

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #1

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @dag_get_node(%struct.DagForest* %forest, i8* %fob) #0 !dbg !7372 {
entry:
  %forest.addr = alloca %struct.DagForest*, align 8
  %fob.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %forest, %struct.DagForest** %forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  store i8* %fob, i8** %fob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fob.addr, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !7377, metadata !DIExpression()), !dbg !7378
  %0 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7379
  %1 = load i8*, i8** %fob.addr, align 8, !dbg !7380
  %call = call %struct.DagNode* @dag_find_node(%struct.DagForest* %0, i8* %1), !dbg !7381
  store %struct.DagNode* %call, %struct.DagNode** %node, align 8, !dbg !7382
  %2 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7383
  %tobool = icmp ne %struct.DagNode* %2, null, !dbg !7383
  br i1 %tobool, label %if.end, label %if.then, !dbg !7385

if.then:                                          ; preds = %entry
  %3 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7386
  %4 = load i8*, i8** %fob.addr, align 8, !dbg !7387
  %call1 = call %struct.DagNode* @dag_add_node(%struct.DagForest* %3, i8* %4), !dbg !7388
  store %struct.DagNode* %call1, %struct.DagNode** %node, align 8, !dbg !7389
  br label %if.end, !dbg !7390

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7391
  ret %struct.DagNode* %5, !dbg !7392
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DagNode* @dag_get_sub_node(%struct.DagForest* %forest, i8* %fob) #0 !dbg !7393 {
entry:
  %forest.addr = alloca %struct.DagForest*, align 8
  %fob.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  %mainchild = alloca %struct.DagAdjList*, align 8
  %prev = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %forest, %struct.DagForest** %forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store i8* %fob, i8** %fob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fob.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %mainchild, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %prev, metadata !7402, metadata !DIExpression()), !dbg !7403
  store %struct.DagAdjList* null, %struct.DagAdjList** %prev, align 8, !dbg !7403
  %0 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7404
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 0, !dbg !7405
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !7406
  %1 = load i8*, i8** %first, align 8, !dbg !7406
  %2 = bitcast i8* %1 to %struct.DagNode*, !dbg !7407
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 16, !dbg !7408
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !7408
  store %struct.DagAdjList* %3, %struct.DagAdjList** %mainchild, align 8, !dbg !7409
  br label %while.cond, !dbg !7410

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7411
  %tobool = icmp ne %struct.DagAdjList* %4, null, !dbg !7410
  br i1 %tobool, label %while.body, label %while.end, !dbg !7410

while.body:                                       ; preds = %while.cond
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7412
  %node1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %5, i32 0, i32 0, !dbg !7415
  %6 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !7415
  %7 = load i8*, i8** %fob.addr, align 8, !dbg !7416
  %8 = bitcast i8* %7 to %struct.DagNode*, !dbg !7416
  %cmp = icmp eq %struct.DagNode* %6, %8, !dbg !7417
  br i1 %cmp, label %if.then, label %if.end, !dbg !7418

if.then:                                          ; preds = %while.body
  %9 = load %struct.DagAdjList*, %struct.DagAdjList** %prev, align 8, !dbg !7419
  %tobool2 = icmp ne %struct.DagAdjList* %9, null, !dbg !7419
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !7422

if.then3:                                         ; preds = %if.then
  %10 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7423
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %10, i32 0, i32 5, !dbg !7425
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !7425
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %prev, align 8, !dbg !7426
  %next4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %12, i32 0, i32 5, !dbg !7427
  store %struct.DagAdjList* %11, %struct.DagAdjList** %next4, align 8, !dbg !7428
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7429
  %14 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7430
  %15 = bitcast %struct.DagAdjList* %14 to i8*, !dbg !7430
  call void %13(i8* %15), !dbg !7429
  br label %while.end, !dbg !7431

if.else:                                          ; preds = %if.then
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7432
  %next5 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %16, i32 0, i32 5, !dbg !7434
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %next5, align 8, !dbg !7434
  %18 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7435
  %DagNode6 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %18, i32 0, i32 0, !dbg !7436
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode6, i32 0, i32 0, !dbg !7437
  %19 = load i8*, i8** %first7, align 8, !dbg !7437
  %20 = bitcast i8* %19 to %struct.DagNode*, !dbg !7438
  %child8 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %20, i32 0, i32 16, !dbg !7439
  store %struct.DagAdjList* %17, %struct.DagAdjList** %child8, align 8, !dbg !7440
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7441
  %22 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7442
  %23 = bitcast %struct.DagAdjList* %22 to i8*, !dbg !7442
  call void %21(i8* %23), !dbg !7441
  br label %while.end, !dbg !7443

if.end:                                           ; preds = %while.body
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7444
  store %struct.DagAdjList* %24, %struct.DagAdjList** %prev, align 8, !dbg !7445
  %25 = load %struct.DagAdjList*, %struct.DagAdjList** %mainchild, align 8, !dbg !7446
  %next9 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %25, i32 0, i32 5, !dbg !7447
  %26 = load %struct.DagAdjList*, %struct.DagAdjList** %next9, align 8, !dbg !7447
  store %struct.DagAdjList* %26, %struct.DagAdjList** %mainchild, align 8, !dbg !7448
  br label %while.cond, !dbg !7410, !llvm.loop !7449

while.end:                                        ; preds = %if.else, %if.then3, %while.cond
  %27 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7451
  %28 = load i8*, i8** %fob.addr, align 8, !dbg !7452
  %call = call %struct.DagNode* @dag_find_node(%struct.DagForest* %27, i8* %28), !dbg !7453
  store %struct.DagNode* %call, %struct.DagNode** %node, align 8, !dbg !7454
  %29 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7455
  %tobool10 = icmp ne %struct.DagNode* %29, null, !dbg !7455
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !7457

if.then11:                                        ; preds = %while.end
  %30 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7458
  %31 = load i8*, i8** %fob.addr, align 8, !dbg !7459
  %call12 = call %struct.DagNode* @dag_add_node(%struct.DagForest* %30, i8* %31), !dbg !7460
  store %struct.DagNode* %call12, %struct.DagNode** %node, align 8, !dbg !7461
  br label %if.end13, !dbg !7462

if.end13:                                         ; preds = %if.then11, %while.end
  %32 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7463
  ret %struct.DagNode* %32, !dbg !7464
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dag_add_relation(%struct.DagForest* %forest, %struct.DagNode* %fob1, %struct.DagNode* %fob2, i16 signext %rel, i8* %name) #0 !dbg !7465 {
entry:
  %forest.addr = alloca %struct.DagForest*, align 8
  %fob1.addr = alloca %struct.DagNode*, align 8
  %fob2.addr = alloca %struct.DagNode*, align 8
  %rel.addr = alloca i16, align 2
  %name.addr = alloca i8*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %forest, %struct.DagForest** %forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %forest.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  store %struct.DagNode* %fob1, %struct.DagNode** %fob1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %fob1.addr, metadata !7470, metadata !DIExpression()), !dbg !7471
  store %struct.DagNode* %fob2, %struct.DagNode** %fob2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %fob2.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  store i16 %rel, i16* %rel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rel.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !7478, metadata !DIExpression()), !dbg !7479
  %0 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7480
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %0, i32 0, i32 16, !dbg !7481
  %1 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !7481
  store %struct.DagAdjList* %1, %struct.DagAdjList** %itA, align 8, !dbg !7479
  %2 = load %struct.DagForest*, %struct.DagForest** %forest.addr, align 8, !dbg !7482
  %3 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7483
  %4 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7484
  %5 = load i16, i16* %rel.addr, align 2, !dbg !7485
  %6 = load i8*, i8** %name.addr, align 8, !dbg !7486
  call void @dag_add_parent_relation(%struct.DagForest* %2, %struct.DagNode* %3, %struct.DagNode* %4, i16 signext %5, i8* %6), !dbg !7487
  br label %while.cond, !dbg !7488

while.cond:                                       ; preds = %if.end, %entry
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7489
  %tobool = icmp ne %struct.DagAdjList* %7, null, !dbg !7488
  br i1 %tobool, label %while.body, label %while.end, !dbg !7488

while.body:                                       ; preds = %while.cond
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7490
  %node = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 0, !dbg !7493
  %9 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7493
  %10 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7494
  %cmp = icmp eq %struct.DagNode* %9, %10, !dbg !7495
  br i1 %cmp, label %if.then, label %if.end, !dbg !7496

if.then:                                          ; preds = %while.body
  %11 = load i16, i16* %rel.addr, align 2, !dbg !7497
  %conv = sext i16 %11 to i32, !dbg !7497
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7499
  %type = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %12, i32 0, i32 1, !dbg !7500
  %13 = load i16, i16* %type, align 8, !dbg !7501
  %conv1 = sext i16 %13 to i32, !dbg !7501
  %or = or i32 %conv1, %conv, !dbg !7501
  %conv2 = trunc i32 %or to i16, !dbg !7501
  store i16 %conv2, i16* %type, align 8, !dbg !7501
  %14 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7502
  %count = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %14, i32 0, i32 2, !dbg !7503
  %15 = load i32, i32* %count, align 4, !dbg !7504
  %add = add nsw i32 %15, 1, !dbg !7504
  store i32 %add, i32* %count, align 4, !dbg !7504
  br label %return, !dbg !7505

if.end:                                           ; preds = %while.body
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7506
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %16, i32 0, i32 5, !dbg !7507
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !7507
  store %struct.DagAdjList* %17, %struct.DagAdjList** %itA, align 8, !dbg !7508
  br label %while.cond, !dbg !7488, !llvm.loop !7509

while.end:                                        ; preds = %while.cond
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7511
  %call = call i8* %18(i64 40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)), !dbg !7511
  %19 = bitcast i8* %call to %struct.DagAdjList*, !dbg !7511
  store %struct.DagAdjList* %19, %struct.DagAdjList** %itA, align 8, !dbg !7512
  %20 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7513
  %21 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7514
  %node3 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %21, i32 0, i32 0, !dbg !7515
  store %struct.DagNode* %20, %struct.DagNode** %node3, align 8, !dbg !7516
  %22 = load i16, i16* %rel.addr, align 2, !dbg !7517
  %23 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7518
  %type4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %23, i32 0, i32 1, !dbg !7519
  store i16 %22, i16* %type4, align 8, !dbg !7520
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7521
  %count5 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %24, i32 0, i32 2, !dbg !7522
  store i32 1, i32* %count5, align 4, !dbg !7523
  %25 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7524
  %child6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %25, i32 0, i32 16, !dbg !7525
  %26 = load %struct.DagAdjList*, %struct.DagAdjList** %child6, align 8, !dbg !7525
  %27 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7526
  %next7 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %27, i32 0, i32 5, !dbg !7527
  store %struct.DagAdjList* %26, %struct.DagAdjList** %next7, align 8, !dbg !7528
  %28 = load i8*, i8** %name.addr, align 8, !dbg !7529
  %29 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7530
  %name8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %29, i32 0, i32 4, !dbg !7531
  store i8* %28, i8** %name8, align 8, !dbg !7532
  %30 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7533
  %31 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7534
  %child9 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %31, i32 0, i32 16, !dbg !7535
  store %struct.DagAdjList* %30, %struct.DagAdjList** %child9, align 8, !dbg !7536
  br label %return, !dbg !7537

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !7537
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_parent_relation(%struct.DagForest* %UNUSED_forest, %struct.DagNode* %fob1, %struct.DagNode* %fob2, i16 signext %rel, i8* %name) #0 !dbg !7538 {
entry:
  %UNUSED_forest.addr = alloca %struct.DagForest*, align 8
  %fob1.addr = alloca %struct.DagNode*, align 8
  %fob2.addr = alloca %struct.DagNode*, align 8
  %rel.addr = alloca i16, align 2
  %name.addr = alloca i8*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %UNUSED_forest, %struct.DagForest** %UNUSED_forest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %UNUSED_forest.addr, metadata !7539, metadata !DIExpression()), !dbg !7540
  store %struct.DagNode* %fob1, %struct.DagNode** %fob1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %fob1.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store %struct.DagNode* %fob2, %struct.DagNode** %fob2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %fob2.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  store i16 %rel, i16* %rel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rel.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !7549, metadata !DIExpression()), !dbg !7550
  %0 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7551
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %0, i32 0, i32 17, !dbg !7552
  %1 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !7552
  store %struct.DagAdjList* %1, %struct.DagAdjList** %itA, align 8, !dbg !7550
  br label %while.cond, !dbg !7553

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7554
  %tobool = icmp ne %struct.DagAdjList* %2, null, !dbg !7553
  br i1 %tobool, label %while.body, label %while.end, !dbg !7553

while.body:                                       ; preds = %while.cond
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7555
  %node = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %3, i32 0, i32 0, !dbg !7558
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7558
  %5 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7559
  %cmp = icmp eq %struct.DagNode* %4, %5, !dbg !7560
  br i1 %cmp, label %if.then, label %if.end, !dbg !7561

if.then:                                          ; preds = %while.body
  %6 = load i16, i16* %rel.addr, align 2, !dbg !7562
  %conv = sext i16 %6 to i32, !dbg !7562
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7564
  %type = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %7, i32 0, i32 1, !dbg !7565
  %8 = load i16, i16* %type, align 8, !dbg !7566
  %conv1 = sext i16 %8 to i32, !dbg !7566
  %or = or i32 %conv1, %conv, !dbg !7566
  %conv2 = trunc i32 %or to i16, !dbg !7566
  store i16 %conv2, i16* %type, align 8, !dbg !7566
  %9 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7567
  %count = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %9, i32 0, i32 2, !dbg !7568
  %10 = load i32, i32* %count, align 4, !dbg !7569
  %add = add nsw i32 %10, 1, !dbg !7569
  store i32 %add, i32* %count, align 4, !dbg !7569
  br label %return, !dbg !7570

if.end:                                           ; preds = %while.body
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7571
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %11, i32 0, i32 5, !dbg !7572
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !7572
  store %struct.DagAdjList* %12, %struct.DagAdjList** %itA, align 8, !dbg !7573
  br label %while.cond, !dbg !7553, !llvm.loop !7574

while.end:                                        ; preds = %while.cond
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7576
  %call = call i8* %13(i64 40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)), !dbg !7576
  %14 = bitcast i8* %call to %struct.DagAdjList*, !dbg !7576
  store %struct.DagAdjList* %14, %struct.DagAdjList** %itA, align 8, !dbg !7577
  %15 = load %struct.DagNode*, %struct.DagNode** %fob1.addr, align 8, !dbg !7578
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7579
  %node3 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %16, i32 0, i32 0, !dbg !7580
  store %struct.DagNode* %15, %struct.DagNode** %node3, align 8, !dbg !7581
  %17 = load i16, i16* %rel.addr, align 2, !dbg !7582
  %18 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7583
  %type4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %18, i32 0, i32 1, !dbg !7584
  store i16 %17, i16* %type4, align 8, !dbg !7585
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7586
  %count5 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %19, i32 0, i32 2, !dbg !7587
  store i32 1, i32* %count5, align 4, !dbg !7588
  %20 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7589
  %parent6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %20, i32 0, i32 17, !dbg !7590
  %21 = load %struct.DagAdjList*, %struct.DagAdjList** %parent6, align 8, !dbg !7590
  %22 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7591
  %next7 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %22, i32 0, i32 5, !dbg !7592
  store %struct.DagAdjList* %21, %struct.DagAdjList** %next7, align 8, !dbg !7593
  %23 = load i8*, i8** %name.addr, align 8, !dbg !7594
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7595
  %name8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %24, i32 0, i32 4, !dbg !7596
  store i8* %23, i8** %name8, align 8, !dbg !7597
  %25 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7598
  %26 = load %struct.DagNode*, %struct.DagNode** %fob2.addr, align 8, !dbg !7599
  %parent9 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %26, i32 0, i32 17, !dbg !7600
  store %struct.DagAdjList* %25, %struct.DagAdjList** %parent9, align 8, !dbg !7601
  br label %return, !dbg !7602

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !7602
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @graph_print_queue(%struct.DagNodeQueue* %nqueue) #0 !dbg !7603 {
entry:
  %nqueue.addr = alloca %struct.DagNodeQueue*, align 8
  %queueElem = alloca %struct.DagNodeQueueElem*, align 8
  store %struct.DagNodeQueue* %nqueue, %struct.DagNodeQueue** %nqueue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %nqueue.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %queueElem, metadata !7606, metadata !DIExpression()), !dbg !7607
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue.addr, align 8, !dbg !7608
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !7609
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !7609
  store %struct.DagNodeQueueElem* %1, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7610
  br label %while.cond, !dbg !7611

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7612
  %tobool = icmp ne %struct.DagNodeQueueElem* %2, null, !dbg !7611
  br i1 %tobool, label %while.body, label %while.end, !dbg !7611

while.body:                                       ; preds = %while.cond
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7613
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7615
  %node = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %4, i32 0, i32 0, !dbg !7616
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7616
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 5, !dbg !7617
  %6 = load i8*, i8** %ob, align 8, !dbg !7617
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !7618
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !7619
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7620
  %8 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7621
  %node1 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %8, i32 0, i32 0, !dbg !7622
  %9 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !7622
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 0, !dbg !7623
  %10 = load i32, i32* %color, align 8, !dbg !7623
  %11 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7624
  %node2 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %11, i32 0, i32 0, !dbg !7625
  %12 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7625
  %DFS_dvtm = getelementptr inbounds %struct.DagNode, %struct.DagNode* %12, i32 0, i32 14, !dbg !7626
  %13 = load i32, i32* %DFS_dvtm, align 4, !dbg !7626
  %14 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7627
  %node3 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %14, i32 0, i32 0, !dbg !7628
  %15 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !7628
  %DFS_fntm = getelementptr inbounds %struct.DagNode, %struct.DagNode* %15, i32 0, i32 15, !dbg !7629
  %16 = load i32, i32* %DFS_fntm, align 8, !dbg !7629
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* %arraydecay, i32 %10, i32 %13, i32 %16), !dbg !7630
  %17 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7631
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %17, i32 0, i32 1, !dbg !7632
  %18 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !7632
  store %struct.DagNodeQueueElem* %18, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7633
  br label %while.cond, !dbg !7611, !llvm.loop !7634

while.end:                                        ; preds = %while.cond
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7636
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @graph_print_queue_dist(%struct.DagNodeQueue* %nqueue) #0 !dbg !7639 {
entry:
  %nqueue.addr = alloca %struct.DagNodeQueue*, align 8
  %queueElem = alloca %struct.DagNodeQueueElem*, align 8
  %count = alloca i32, align 4
  store %struct.DagNodeQueue* %nqueue, %struct.DagNodeQueue** %nqueue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %nqueue.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueueElem** %queueElem, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7644, metadata !DIExpression()), !dbg !7645
  %0 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue.addr, align 8, !dbg !7646
  %first = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %0, i32 0, i32 0, !dbg !7647
  %1 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %first, align 8, !dbg !7647
  store %struct.DagNodeQueueElem* %1, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7648
  store i32 0, i32* %count, align 4, !dbg !7649
  br label %while.cond, !dbg !7650

while.cond:                                       ; preds = %while.end17, %entry
  %2 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7651
  %tobool = icmp ne %struct.DagNodeQueueElem* %2, null, !dbg !7650
  br i1 %tobool, label %while.body, label %while.end20, !dbg !7650

while.body:                                       ; preds = %while.cond
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7652
  %4 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7654
  %node = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %4, i32 0, i32 0, !dbg !7655
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7655
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 5, !dbg !7656
  %6 = load i8*, i8** %ob, align 8, !dbg !7656
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !7657
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !7658
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7659
  %8 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7660
  %node1 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %8, i32 0, i32 0, !dbg !7661
  %9 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !7661
  %DFS_dvtm = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 14, !dbg !7662
  %10 = load i32, i32* %DFS_dvtm, align 4, !dbg !7662
  %11 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7663
  %node2 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %11, i32 0, i32 0, !dbg !7664
  %12 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !7664
  %DFS_fntm = getelementptr inbounds %struct.DagNode, %struct.DagNode* %12, i32 0, i32 15, !dbg !7665
  %13 = load i32, i32* %DFS_fntm, align 8, !dbg !7665
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay, i32 %10, i32 %13), !dbg !7666
  br label %while.cond3, !dbg !7667

while.cond3:                                      ; preds = %while.body6, %while.body
  %14 = load i32, i32* %count, align 4, !dbg !7668
  %15 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7669
  %node4 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %15, i32 0, i32 0, !dbg !7670
  %16 = load %struct.DagNode*, %struct.DagNode** %node4, align 8, !dbg !7670
  %DFS_dvtm5 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 14, !dbg !7671
  %17 = load i32, i32* %DFS_dvtm5, align 4, !dbg !7671
  %sub = sub nsw i32 %17, 1, !dbg !7672
  %cmp = icmp slt i32 %14, %sub, !dbg !7673
  br i1 %cmp, label %while.body6, label %while.end, !dbg !7667

while.body6:                                      ; preds = %while.cond3
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7674
  %call7 = call i32 @fputc(i32 32, %struct._IO_FILE* %18), !dbg !7676
  %19 = load i32, i32* %count, align 4, !dbg !7677
  %inc = add nsw i32 %19, 1, !dbg !7677
  store i32 %inc, i32* %count, align 4, !dbg !7677
  br label %while.cond3, !dbg !7667, !llvm.loop !7678

while.end:                                        ; preds = %while.cond3
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7680
  %call8 = call i32 @fputc(i32 124, %struct._IO_FILE* %20), !dbg !7681
  br label %while.cond9, !dbg !7682

while.cond9:                                      ; preds = %while.body14, %while.end
  %21 = load i32, i32* %count, align 4, !dbg !7683
  %22 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7684
  %node10 = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %22, i32 0, i32 0, !dbg !7685
  %23 = load %struct.DagNode*, %struct.DagNode** %node10, align 8, !dbg !7685
  %DFS_fntm11 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %23, i32 0, i32 15, !dbg !7686
  %24 = load i32, i32* %DFS_fntm11, align 8, !dbg !7686
  %sub12 = sub nsw i32 %24, 2, !dbg !7687
  %cmp13 = icmp slt i32 %21, %sub12, !dbg !7688
  br i1 %cmp13, label %while.body14, label %while.end17, !dbg !7682

while.body14:                                     ; preds = %while.cond9
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7689
  %call15 = call i32 @fputc(i32 45, %struct._IO_FILE* %25), !dbg !7691
  %26 = load i32, i32* %count, align 4, !dbg !7692
  %inc16 = add nsw i32 %26, 1, !dbg !7692
  store i32 %inc16, i32* %count, align 4, !dbg !7692
  br label %while.cond9, !dbg !7682, !llvm.loop !7693

while.end17:                                      ; preds = %while.cond9
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7695
  %call18 = call i32 @fputc(i32 124, %struct._IO_FILE* %27), !dbg !7696
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7697
  %call19 = call i32 @fputc(i32 10, %struct._IO_FILE* %28), !dbg !7698
  store i32 0, i32* %count, align 4, !dbg !7699
  %29 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7700
  %next = getelementptr inbounds %struct.DagNodeQueueElem, %struct.DagNodeQueueElem* %29, i32 0, i32 1, !dbg !7701
  %30 = load %struct.DagNodeQueueElem*, %struct.DagNodeQueueElem** %next, align 8, !dbg !7701
  store %struct.DagNodeQueueElem* %30, %struct.DagNodeQueueElem** %queueElem, align 8, !dbg !7702
  br label %while.cond, !dbg !7650, !llvm.loop !7703

while.end20:                                      ; preds = %while.cond
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7705
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !7706
  ret void, !dbg !7707
}

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @graph_print_adj_list(%struct.DagForest* %dag) #0 !dbg !7708 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !7713, metadata !DIExpression()), !dbg !7714
  %0 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !7715
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 0, !dbg !7716
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !7717
  %1 = load i8*, i8** %first, align 8, !dbg !7717
  %2 = bitcast i8* %1 to %struct.DagNode*, !dbg !7715
  store %struct.DagNode* %2, %struct.DagNode** %node, align 8, !dbg !7718
  br label %while.cond, !dbg !7719

while.cond:                                       ; preds = %while.end, %entry
  %3 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7720
  %tobool = icmp ne %struct.DagNode* %3, null, !dbg !7719
  br i1 %tobool, label %while.body, label %while.end11, !dbg !7719

while.body:                                       ; preds = %while.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7721
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7723
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 5, !dbg !7724
  %6 = load i8*, i8** %ob, align 8, !dbg !7724
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !7725
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !7726
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7727
  %8 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7728
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %8, i32 0, i32 0, !dbg !7729
  %9 = load i32, i32* %color, align 8, !dbg !7729
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay, i32 %9), !dbg !7730
  %10 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7731
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %10, i32 0, i32 16, !dbg !7732
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !7732
  store %struct.DagAdjList* %11, %struct.DagAdjList** %itA, align 8, !dbg !7733
  br label %while.cond1, !dbg !7734

while.cond1:                                      ; preds = %while.body3, %while.body
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7735
  %tobool2 = icmp ne %struct.DagAdjList* %12, null, !dbg !7734
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !7734

while.body3:                                      ; preds = %while.cond1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7736
  %14 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7738
  %node4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %14, i32 0, i32 0, !dbg !7739
  %15 = load %struct.DagNode*, %struct.DagNode** %node4, align 8, !dbg !7739
  %ob5 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %15, i32 0, i32 5, !dbg !7740
  %16 = load i8*, i8** %ob5, align 8, !dbg !7740
  %17 = bitcast i8* %16 to %struct.ID*, !dbg !7741
  %name6 = getelementptr inbounds %struct.ID, %struct.ID* %17, i32 0, i32 4, !dbg !7742
  %arraydecay7 = getelementptr inbounds [66 x i8], [66 x i8]* %name6, i64 0, i64 0, !dbg !7743
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay7), !dbg !7744
  %18 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7745
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %18, i32 0, i32 5, !dbg !7746
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !7746
  store %struct.DagAdjList* %19, %struct.DagAdjList** %itA, align 8, !dbg !7747
  br label %while.cond1, !dbg !7734, !llvm.loop !7748

while.end:                                        ; preds = %while.cond1
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7750
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !7751
  %21 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7752
  %next10 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 18, !dbg !7753
  %22 = load %struct.DagNode*, %struct.DagNode** %next10, align 8, !dbg !7753
  store %struct.DagNode* %22, %struct.DagNode** %node, align 8, !dbg !7754
  br label %while.cond, !dbg !7719, !llvm.loop !7755

while.end11:                                      ; preds = %while.cond
  ret void, !dbg !7757
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_editors_update_cb(void (%struct.Main*, %struct.ID*)* %id_func, void (%struct.Main*, %struct.Scene*, i32)* %scene_func) #0 !dbg !7758 {
entry:
  %id_func.addr = alloca void (%struct.Main*, %struct.ID*)*, align 8
  %scene_func.addr = alloca void (%struct.Main*, %struct.Scene*, i32)*, align 8
  store void (%struct.Main*, %struct.ID*)* %id_func, void (%struct.Main*, %struct.ID*)** %id_func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.Main*, %struct.ID*)** %id_func.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  store void (%struct.Main*, %struct.Scene*, i32)* %scene_func, void (%struct.Main*, %struct.Scene*, i32)** %scene_func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.Main*, %struct.Scene*, i32)** %scene_func.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  %0 = load void (%struct.Main*, %struct.ID*)*, void (%struct.Main*, %struct.ID*)** %id_func.addr, align 8, !dbg !7765
  store void (%struct.Main*, %struct.ID*)* %0, void (%struct.Main*, %struct.ID*)** @EditorsUpdateIDCb, align 8, !dbg !7766
  %1 = load void (%struct.Main*, %struct.Scene*, i32)*, void (%struct.Main*, %struct.Scene*, i32)** %scene_func.addr, align 8, !dbg !7767
  store void (%struct.Main*, %struct.Scene*, i32)* %1, void (%struct.Main*, %struct.Scene*, i32)** @EditorsUpdateSceneCb, align 8, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_relations_tag_update(%struct.Main* %bmain) #0 !dbg !7770 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce = alloca %struct.Scene*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !7775, metadata !DIExpression()), !dbg !7776
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7777
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 11, !dbg !7779
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !7780
  %1 = load i8*, i8** %first, align 8, !dbg !7780
  %2 = bitcast i8* %1 to %struct.Scene*, !dbg !7777
  store %struct.Scene* %2, %struct.Scene** %sce, align 8, !dbg !7781
  br label %for.cond, !dbg !7782

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7783
  %tobool = icmp ne %struct.Scene* %3, null, !dbg !7785
  br i1 %tobool, label %for.body, label %for.end, !dbg !7785

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7786
  call void @dag_scene_free(%struct.Scene* %4), !dbg !7787
  br label %for.inc, !dbg !7787

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7788
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 0, !dbg !7789
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7790
  %6 = load i8*, i8** %next, align 8, !dbg !7790
  %7 = bitcast i8* %6 to %struct.Scene*, !dbg !7788
  store %struct.Scene* %7, %struct.Scene** %sce, align 8, !dbg !7791
  br label %for.cond, !dbg !7792, !llvm.loop !7793

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7795
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_scene_free(%struct.Scene* %sce) #0 !dbg !7796 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7801
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !7803
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !7803
  %tobool = icmp ne %struct.DagForest* %1, null, !dbg !7801
  br i1 %tobool, label %if.then, label %if.end, !dbg !7804

if.then:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7805
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 31, !dbg !7807
  %3 = load %struct.DagForest*, %struct.DagForest** %theDag1, align 8, !dbg !7807
  call void @free_forest(%struct.DagForest* %3), !dbg !7808
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7809
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7810
  %theDag2 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 31, !dbg !7811
  %6 = load %struct.DagForest*, %struct.DagForest** %theDag2, align 8, !dbg !7811
  %7 = bitcast %struct.DagForest* %6 to i8*, !dbg !7810
  call void %4(i8* %7), !dbg !7809
  %8 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7812
  %theDag3 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 31, !dbg !7813
  store %struct.DagForest* null, %struct.DagForest** %theDag3, align 8, !dbg !7814
  br label %if.end, !dbg !7815

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7816
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_scene_relations_rebuild(%struct.Main* %bmain, %struct.Scene* %sce) #0 !dbg !7817 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7820, metadata !DIExpression()), !dbg !7821
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7822, metadata !DIExpression()), !dbg !7823
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7824
  call void @dag_scene_free(%struct.Scene* %0), !dbg !7825
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7826
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7827
  call void @DAG_scene_relations_update(%struct.Main* %1, %struct.Scene* %2), !dbg !7828
  ret void, !dbg !7829
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_scene_relations_update(%struct.Main* %bmain, %struct.Scene* %sce) #0 !dbg !7830 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7831, metadata !DIExpression()), !dbg !7832
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7833, metadata !DIExpression()), !dbg !7834
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7835
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !7837
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !7837
  %tobool = icmp ne %struct.DagForest* %1, null, !dbg !7835
  br i1 %tobool, label %if.end, label %if.then, !dbg !7838

if.then:                                          ; preds = %entry
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7839
  %3 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7840
  call void @dag_scene_build(%struct.Main* %2, %struct.Scene* %3), !dbg !7841
  br label %if.end, !dbg !7841

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7842
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_scene_build(%struct.Main* %bmain, %struct.Scene* %sce) #0 !dbg !7843 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %node = alloca %struct.DagNode*, align 8
  %rootnode = alloca %struct.DagNode*, align 8
  %nqueue = alloca %struct.DagNodeQueue*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %time = alloca i32, align 4
  %skip = alloca i32, align 4
  %tempbase = alloca %struct.ListBase, align 8
  %base = alloca %struct.Base*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.declare(metadata %struct.DagNode** %rootnode, metadata !7850, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %nqueue, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !7854, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i32* %time, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !7858, metadata !DIExpression()), !dbg !7859
  store i32 0, i32* %skip, align 4, !dbg !7859
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tempbase, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @BLI_listbase_clear(%struct.ListBase* %tempbase), !dbg !7864
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7865
  %1 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7866
  %call = call %struct.DagForest* @build_dag(%struct.Main* %0, %struct.Scene* %1, i16 signext 61), !dbg !7867
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7868
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 31, !dbg !7869
  %3 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !7869
  call void @dag_check_cycle(%struct.DagForest* %3), !dbg !7870
  %call1 = call %struct.DagNodeQueue* @queue_create(i32 50), !dbg !7871
  store %struct.DagNodeQueue* %call1, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7872
  %4 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7873
  %theDag2 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 31, !dbg !7875
  %5 = load %struct.DagForest*, %struct.DagForest** %theDag2, align 8, !dbg !7875
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %5, i32 0, i32 0, !dbg !7876
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !7877
  %6 = load i8*, i8** %first, align 8, !dbg !7877
  %7 = bitcast i8* %6 to %struct.DagNode*, !dbg !7873
  store %struct.DagNode* %7, %struct.DagNode** %node, align 8, !dbg !7878
  br label %for.cond, !dbg !7879

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7880
  %tobool = icmp ne %struct.DagNode* %8, null, !dbg !7882
  br i1 %tobool, label %for.body, label %for.end, !dbg !7882

for.body:                                         ; preds = %for.cond
  %9 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7883
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 0, !dbg !7885
  store i32 0, i32* %color, align 8, !dbg !7886
  br label %for.inc, !dbg !7887

for.inc:                                          ; preds = %for.body
  %10 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7888
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %10, i32 0, i32 18, !dbg !7889
  %11 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !7889
  store %struct.DagNode* %11, %struct.DagNode** %node, align 8, !dbg !7890
  br label %for.cond, !dbg !7891, !llvm.loop !7892

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %time, align 4, !dbg !7894
  %12 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7895
  %theDag3 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 31, !dbg !7896
  %13 = load %struct.DagForest*, %struct.DagForest** %theDag3, align 8, !dbg !7896
  %DagNode4 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %13, i32 0, i32 0, !dbg !7897
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode4, i32 0, i32 0, !dbg !7898
  %14 = load i8*, i8** %first5, align 8, !dbg !7898
  %15 = bitcast i8* %14 to %struct.DagNode*, !dbg !7895
  store %struct.DagNode* %15, %struct.DagNode** %rootnode, align 8, !dbg !7899
  %16 = load %struct.DagNode*, %struct.DagNode** %rootnode, align 8, !dbg !7900
  %color6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 0, !dbg !7901
  store i32 1, i32* %color6, align 8, !dbg !7902
  %17 = load i32, i32* %time, align 4, !dbg !7903
  %inc = add nsw i32 %17, 1, !dbg !7903
  store i32 %inc, i32* %time, align 4, !dbg !7903
  %18 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7904
  %19 = load %struct.DagNode*, %struct.DagNode** %rootnode, align 8, !dbg !7905
  call void @push_stack(%struct.DagNodeQueue* %18, %struct.DagNode* %19), !dbg !7906
  br label %while.cond, !dbg !7907

while.cond:                                       ; preds = %if.end44, %for.end
  %20 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7908
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %20, i32 0, i32 2, !dbg !7909
  %21 = load i32, i32* %count, align 8, !dbg !7909
  %tobool7 = icmp ne i32 %21, 0, !dbg !7907
  br i1 %tobool7, label %while.body, label %while.end45, !dbg !7907

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %skip, align 4, !dbg !7910
  %22 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7912
  %call8 = call %struct.DagNode* @get_top_node_queue(%struct.DagNodeQueue* %22), !dbg !7913
  store %struct.DagNode* %call8, %struct.DagNode** %node, align 8, !dbg !7914
  %23 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7915
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %23, i32 0, i32 16, !dbg !7916
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !7916
  store %struct.DagAdjList* %24, %struct.DagAdjList** %itA, align 8, !dbg !7917
  br label %while.cond9, !dbg !7918

while.cond9:                                      ; preds = %if.end, %while.body
  %25 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7919
  %cmp = icmp ne %struct.DagAdjList* %25, null, !dbg !7920
  br i1 %cmp, label %while.body10, label %while.end, !dbg !7918

while.body10:                                     ; preds = %while.cond9
  %26 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7921
  %node11 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %26, i32 0, i32 0, !dbg !7924
  %27 = load %struct.DagNode*, %struct.DagNode** %node11, align 8, !dbg !7924
  %color12 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %27, i32 0, i32 0, !dbg !7925
  %28 = load i32, i32* %color12, align 8, !dbg !7925
  %cmp13 = icmp eq i32 %28, 0, !dbg !7926
  br i1 %cmp13, label %if.then, label %if.end, !dbg !7927

if.then:                                          ; preds = %while.body10
  %29 = load i32, i32* %time, align 4, !dbg !7928
  %30 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7930
  %node14 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %30, i32 0, i32 0, !dbg !7931
  %31 = load %struct.DagNode*, %struct.DagNode** %node14, align 8, !dbg !7931
  %DFS_dvtm = getelementptr inbounds %struct.DagNode, %struct.DagNode* %31, i32 0, i32 14, !dbg !7932
  store i32 %29, i32* %DFS_dvtm, align 4, !dbg !7933
  %32 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7934
  %node15 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %32, i32 0, i32 0, !dbg !7935
  %33 = load %struct.DagNode*, %struct.DagNode** %node15, align 8, !dbg !7935
  %color16 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %33, i32 0, i32 0, !dbg !7936
  store i32 1, i32* %color16, align 8, !dbg !7937
  %34 = load i32, i32* %time, align 4, !dbg !7938
  %inc17 = add nsw i32 %34, 1, !dbg !7938
  store i32 %inc17, i32* %time, align 4, !dbg !7938
  %35 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7939
  %36 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7940
  %node18 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %36, i32 0, i32 0, !dbg !7941
  %37 = load %struct.DagNode*, %struct.DagNode** %node18, align 8, !dbg !7941
  call void @push_stack(%struct.DagNodeQueue* %35, %struct.DagNode* %37), !dbg !7942
  store i32 1, i32* %skip, align 4, !dbg !7943
  br label %while.end, !dbg !7944

if.end:                                           ; preds = %while.body10
  %38 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !7945
  %next19 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %38, i32 0, i32 5, !dbg !7946
  %39 = load %struct.DagAdjList*, %struct.DagAdjList** %next19, align 8, !dbg !7946
  store %struct.DagAdjList* %39, %struct.DagAdjList** %itA, align 8, !dbg !7947
  br label %while.cond9, !dbg !7918, !llvm.loop !7948

while.end:                                        ; preds = %if.then, %while.cond9
  %40 = load i32, i32* %skip, align 4, !dbg !7950
  %tobool20 = icmp ne i32 %40, 0, !dbg !7950
  br i1 %tobool20, label %if.end44, label %if.then21, !dbg !7952

if.then21:                                        ; preds = %while.end
  %41 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7953
  %tobool22 = icmp ne %struct.DagNode* %41, null, !dbg !7953
  br i1 %tobool22, label %if.then23, label %if.end43, !dbg !7956

if.then23:                                        ; preds = %if.then21
  %42 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !7957
  %call24 = call %struct.DagNode* @pop_queue(%struct.DagNodeQueue* %42), !dbg !7959
  store %struct.DagNode* %call24, %struct.DagNode** %node, align 8, !dbg !7960
  %43 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7961
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %43, i32 0, i32 5, !dbg !7963
  %44 = load i8*, i8** %ob, align 8, !dbg !7963
  %45 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7964
  %46 = bitcast %struct.Scene* %45 to i8*, !dbg !7964
  %cmp25 = icmp eq i8* %44, %46, !dbg !7965
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7966

if.then26:                                        ; preds = %if.then23
  br label %while.end45, !dbg !7967

if.end27:                                         ; preds = %if.then23
  %47 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7968
  %color28 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %47, i32 0, i32 0, !dbg !7969
  store i32 2, i32* %color28, align 8, !dbg !7970
  %48 = load i32, i32* %time, align 4, !dbg !7971
  %inc29 = add nsw i32 %48, 1, !dbg !7971
  store i32 %inc29, i32* %time, align 4, !dbg !7971
  %49 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7972
  %base30 = getelementptr inbounds %struct.Scene, %struct.Scene* %49, i32 0, i32 5, !dbg !7973
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base30, i32 0, i32 0, !dbg !7974
  %50 = load i8*, i8** %first31, align 8, !dbg !7974
  %51 = bitcast i8* %50 to %struct.Base*, !dbg !7972
  store %struct.Base* %51, %struct.Base** %base, align 8, !dbg !7975
  br label %while.cond32, !dbg !7976

while.cond32:                                     ; preds = %while.body36, %if.end27
  %52 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7977
  %tobool33 = icmp ne %struct.Base* %52, null, !dbg !7977
  br i1 %tobool33, label %land.rhs, label %land.end, !dbg !7978

land.rhs:                                         ; preds = %while.cond32
  %53 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7979
  %object = getelementptr inbounds %struct.Base, %struct.Base* %53, i32 0, i32 7, !dbg !7980
  %54 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !7980
  %55 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !7981
  %ob34 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %55, i32 0, i32 5, !dbg !7982
  %56 = load i8*, i8** %ob34, align 8, !dbg !7982
  %57 = bitcast i8* %56 to %struct.Object*, !dbg !7981
  %cmp35 = icmp ne %struct.Object* %54, %57, !dbg !7983
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond32
  %58 = phi i1 [ false, %while.cond32 ], [ %cmp35, %land.rhs ], !dbg !7984
  br i1 %58, label %while.body36, label %while.end38, !dbg !7976

while.body36:                                     ; preds = %land.end
  %59 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7985
  %next37 = getelementptr inbounds %struct.Base, %struct.Base* %59, i32 0, i32 0, !dbg !7986
  %60 = load %struct.Base*, %struct.Base** %next37, align 8, !dbg !7986
  store %struct.Base* %60, %struct.Base** %base, align 8, !dbg !7987
  br label %while.cond32, !dbg !7976, !llvm.loop !7988

while.end38:                                      ; preds = %land.end
  %61 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7989
  %tobool39 = icmp ne %struct.Base* %61, null, !dbg !7989
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !7991

if.then40:                                        ; preds = %while.end38
  %62 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7992
  %base41 = getelementptr inbounds %struct.Scene, %struct.Scene* %62, i32 0, i32 5, !dbg !7994
  %63 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7995
  %64 = bitcast %struct.Base* %63 to i8*, !dbg !7995
  call void @BLI_remlink(%struct.ListBase* %base41, i8* %64), !dbg !7996
  %65 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !7997
  %66 = bitcast %struct.Base* %65 to i8*, !dbg !7997
  call void @BLI_addhead(%struct.ListBase* %tempbase, i8* %66), !dbg !7998
  br label %if.end42, !dbg !7999

if.end42:                                         ; preds = %if.then40, %while.end38
  br label %if.end43, !dbg !8000

if.end43:                                         ; preds = %if.end42, %if.then21
  br label %if.end44, !dbg !8001

if.end44:                                         ; preds = %if.end43, %while.end
  br label %while.cond, !dbg !7907, !llvm.loop !8002

while.end45:                                      ; preds = %if.then26, %while.cond
  %67 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8004
  %base46 = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 5, !dbg !8005
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base46, i32 0, i32 0, !dbg !8006
  %68 = load i8*, i8** %first47, align 8, !dbg !8006
  %69 = bitcast i8* %68 to %struct.Base*, !dbg !8004
  store %struct.Base* %69, %struct.Base** %base, align 8, !dbg !8007
  br label %while.cond48, !dbg !8008

while.cond48:                                     ; preds = %while.body50, %while.end45
  %70 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8009
  %tobool49 = icmp ne %struct.Base* %70, null, !dbg !8008
  br i1 %tobool49, label %while.body50, label %while.end56, !dbg !8008

while.body50:                                     ; preds = %while.cond48
  %71 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8010
  %base51 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 5, !dbg !8012
  %72 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8013
  %73 = bitcast %struct.Base* %72 to i8*, !dbg !8013
  call void @BLI_remlink(%struct.ListBase* %base51, i8* %73), !dbg !8014
  %74 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8015
  %75 = bitcast %struct.Base* %74 to i8*, !dbg !8015
  call void @BLI_addhead(%struct.ListBase* %tempbase, i8* %75), !dbg !8016
  %76 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8017
  %object52 = getelementptr inbounds %struct.Base, %struct.Base* %76, i32 0, i32 7, !dbg !8018
  %77 = load %struct.Object*, %struct.Object** %object52, align 8, !dbg !8018
  %id = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 0, !dbg !8019
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8020
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8017
  %call53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !8021
  %78 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8022
  %base54 = getelementptr inbounds %struct.Scene, %struct.Scene* %78, i32 0, i32 5, !dbg !8023
  %first55 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base54, i32 0, i32 0, !dbg !8024
  %79 = load i8*, i8** %first55, align 8, !dbg !8024
  %80 = bitcast i8* %79 to %struct.Base*, !dbg !8022
  store %struct.Base* %80, %struct.Base** %base, align 8, !dbg !8025
  br label %while.cond48, !dbg !8008, !llvm.loop !8026

while.end56:                                      ; preds = %while.cond48
  %81 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8028
  %base57 = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 5, !dbg !8029
  %82 = bitcast %struct.ListBase* %base57 to i8*, !dbg !8030
  %83 = bitcast %struct.ListBase* %tempbase to i8*, !dbg !8030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false), !dbg !8030
  %84 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !8031
  call void @queue_delete(%struct.DagNodeQueue* %84), !dbg !8032
  %85 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8033
  %86 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8034
  call void @scene_sort_groups(%struct.Main* %85, %struct.Scene* %86), !dbg !8035
  %87 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !8036
  %and = and i32 %87, 1, !dbg !8038
  %tobool58 = icmp ne i32 %and, 0, !dbg !8038
  br i1 %tobool58, label %if.then59, label %if.end74, !dbg !8039

if.then59:                                        ; preds = %while.end56
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0)), !dbg !8040
  %88 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8042
  %base61 = getelementptr inbounds %struct.Scene, %struct.Scene* %88, i32 0, i32 5, !dbg !8044
  %first62 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base61, i32 0, i32 0, !dbg !8045
  %89 = load i8*, i8** %first62, align 8, !dbg !8045
  %90 = bitcast i8* %89 to %struct.Base*, !dbg !8042
  store %struct.Base* %90, %struct.Base** %base, align 8, !dbg !8046
  br label %for.cond63, !dbg !8047

for.cond63:                                       ; preds = %for.inc71, %if.then59
  %91 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8048
  %tobool64 = icmp ne %struct.Base* %91, null, !dbg !8050
  br i1 %tobool64, label %for.body65, label %for.end73, !dbg !8050

for.body65:                                       ; preds = %for.cond63
  %92 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8051
  %object66 = getelementptr inbounds %struct.Base, %struct.Base* %92, i32 0, i32 7, !dbg !8053
  %93 = load %struct.Object*, %struct.Object** %object66, align 8, !dbg !8053
  %id67 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 0, !dbg !8054
  %name68 = getelementptr inbounds %struct.ID, %struct.ID* %id67, i32 0, i32 4, !dbg !8055
  %arraydecay69 = getelementptr inbounds [66 x i8], [66 x i8]* %name68, i64 0, i64 0, !dbg !8051
  %call70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay69), !dbg !8056
  br label %for.inc71, !dbg !8057

for.inc71:                                        ; preds = %for.body65
  %94 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8058
  %next72 = getelementptr inbounds %struct.Base, %struct.Base* %94, i32 0, i32 0, !dbg !8059
  %95 = load %struct.Base*, %struct.Base** %next72, align 8, !dbg !8059
  store %struct.Base* %95, %struct.Base** %base, align 8, !dbg !8060
  br label %for.cond63, !dbg !8061, !llvm.loop !8062

for.end73:                                        ; preds = %for.cond63
  br label %if.end74, !dbg !8064

if.end74:                                         ; preds = %for.end73, %while.end56
  %96 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8065
  %recalc = getelementptr inbounds %struct.Scene, %struct.Scene* %96, i32 0, i32 33, !dbg !8066
  %97 = load i16, i16* %recalc, align 2, !dbg !8067
  %conv = sext i16 %97 to i32, !dbg !8067
  %or = or i32 %conv, 1, !dbg !8067
  %conv75 = trunc i32 %or to i16, !dbg !8067
  store i16 %conv75, i16* %recalc, align 2, !dbg !8067
  %98 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8068
  %99 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8069
  call void @dag_invisible_dependencies_check_flush(%struct.Main* %98, %struct.Scene* %99), !dbg !8070
  ret void, !dbg !8071
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_scene_free(%struct.Scene* %sce) #0 !dbg !8072 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8073, metadata !DIExpression()), !dbg !8074
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8075
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !8077
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !8077
  %tobool = icmp ne %struct.DagForest* %1, null, !dbg !8075
  br i1 %tobool, label %if.then, label %if.end, !dbg !8078

if.then:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8079
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 31, !dbg !8081
  %3 = load %struct.DagForest*, %struct.DagForest** %theDag1, align 8, !dbg !8081
  call void @free_forest(%struct.DagForest* %3), !dbg !8082
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8083
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8084
  %theDag2 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 31, !dbg !8085
  %6 = load %struct.DagForest*, %struct.DagForest** %theDag2, align 8, !dbg !8085
  %7 = bitcast %struct.DagForest* %6 to i8*, !dbg !8084
  call void %4(i8* %7), !dbg !8083
  %8 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8086
  %theDag3 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 31, !dbg !8087
  store %struct.DagForest* null, %struct.DagForest** %theDag3, align 8, !dbg !8088
  br label %if.end, !dbg !8089

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8090
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_scene_flush_update(%struct.Main* %bmain, %struct.Scene* %sce, i32 %lay, i16 signext %time) #0 !dbg !8091 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %time.addr = alloca i16, align 2
  %firstnode = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %ob = alloca %struct.Object*, align 8
  %lasttime = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i16 %time, i16* %time.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %time.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata %struct.DagNode** %firstnode, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.declare(metadata i32* %lasttime, metadata !8108, metadata !DIExpression()), !dbg !8109
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8110
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !8112
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !8112
  %cmp = icmp eq %struct.DagForest* %1, null, !dbg !8113
  br i1 %cmp, label %if.then, label %if.end, !dbg !8114

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)), !dbg !8115
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8117
  %3 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8118
  call void @DAG_scene_relations_update(%struct.Main* %2, %struct.Scene* %3), !dbg !8119
  br label %if.end, !dbg !8120

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8121
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 31, !dbg !8122
  %5 = load %struct.DagForest*, %struct.DagForest** %theDag1, align 8, !dbg !8122
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %5, i32 0, i32 0, !dbg !8123
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !8124
  %6 = load i8*, i8** %first, align 8, !dbg !8124
  %7 = bitcast i8* %6 to %struct.DagNode*, !dbg !8121
  store %struct.DagNode* %7, %struct.DagNode** %firstnode, align 8, !dbg !8125
  %8 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8126
  %9 = load i32, i32* %lay.addr, align 4, !dbg !8127
  call void @dag_scene_flush_layers(%struct.Scene* %8, i32 %9), !dbg !8128
  %10 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8129
  %theDag2 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 31, !dbg !8130
  %11 = load %struct.DagForest*, %struct.DagForest** %theDag2, align 8, !dbg !8130
  %time3 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %11, i32 0, i32 4, !dbg !8131
  %12 = load i32, i32* %time3, align 8, !dbg !8132
  %inc = add nsw i32 %12, 1, !dbg !8132
  store i32 %inc, i32* %time3, align 8, !dbg !8132
  %13 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8133
  %theDag4 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 31, !dbg !8134
  %14 = load %struct.DagForest*, %struct.DagForest** %theDag4, align 8, !dbg !8134
  %time5 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %14, i32 0, i32 4, !dbg !8135
  %15 = load i32, i32* %time5, align 8, !dbg !8135
  store i32 %15, i32* %lasttime, align 4, !dbg !8136
  %16 = load %struct.DagNode*, %struct.DagNode** %firstnode, align 8, !dbg !8137
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 16, !dbg !8139
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !8139
  store %struct.DagAdjList* %17, %struct.DagAdjList** %itA, align 8, !dbg !8140
  br label %for.cond, !dbg !8141

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8142
  %tobool = icmp ne %struct.DagAdjList* %18, null, !dbg !8144
  br i1 %tobool, label %for.body, label %for.end, !dbg !8144

for.body:                                         ; preds = %for.cond
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8145
  %node = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %19, i32 0, i32 0, !dbg !8147
  %20 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !8147
  %lasttime6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %20, i32 0, i32 11, !dbg !8148
  %21 = load i32, i32* %lasttime6, align 8, !dbg !8148
  %22 = load i32, i32* %lasttime, align 4, !dbg !8149
  %cmp7 = icmp ne i32 %21, %22, !dbg !8150
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !8151

land.lhs.true:                                    ; preds = %for.body
  %23 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8152
  %node8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %23, i32 0, i32 0, !dbg !8153
  %24 = load %struct.DagNode*, %struct.DagNode** %node8, align 8, !dbg !8153
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %24, i32 0, i32 1, !dbg !8154
  %25 = load i16, i16* %type, align 4, !dbg !8154
  %conv = sext i16 %25 to i32, !dbg !8152
  %cmp9 = icmp eq i32 %conv, 16975, !dbg !8155
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !8156

if.then11:                                        ; preds = %land.lhs.true
  %26 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8157
  %27 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8158
  %node12 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %27, i32 0, i32 0, !dbg !8159
  %28 = load %struct.DagNode*, %struct.DagNode** %node12, align 8, !dbg !8159
  %29 = load i32, i32* %lay.addr, align 4, !dbg !8160
  %30 = load i32, i32* %lasttime, align 4, !dbg !8161
  call void @flush_update_node(%struct.Main* %26, %struct.DagNode* %28, i32 %29, i32 %30), !dbg !8162
  br label %if.end13, !dbg !8162

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8163

for.inc:                                          ; preds = %if.end13
  %31 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8164
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %31, i32 0, i32 5, !dbg !8165
  %32 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !8165
  store %struct.DagAdjList* %32, %struct.DagAdjList** %itA, align 8, !dbg !8166
  br label %for.cond, !dbg !8167, !llvm.loop !8168

for.end:                                          ; preds = %for.cond
  %33 = load i16, i16* %time.addr, align 2, !dbg !8170
  %tobool14 = icmp ne i16 %33, 0, !dbg !8170
  br i1 %tobool14, label %if.end55, label %if.then15, !dbg !8172

if.then15:                                        ; preds = %for.end
  %34 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8173
  %theDag16 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 31, !dbg !8175
  %35 = load %struct.DagForest*, %struct.DagForest** %theDag16, align 8, !dbg !8175
  %time17 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %35, i32 0, i32 4, !dbg !8176
  %36 = load i32, i32* %time17, align 8, !dbg !8177
  %inc18 = add nsw i32 %36, 1, !dbg !8177
  store i32 %inc18, i32* %time17, align 8, !dbg !8177
  %37 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8178
  %theDag19 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 31, !dbg !8179
  %38 = load %struct.DagForest*, %struct.DagForest** %theDag19, align 8, !dbg !8179
  %time20 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %38, i32 0, i32 4, !dbg !8180
  %39 = load i32, i32* %time20, align 8, !dbg !8180
  store i32 %39, i32* %lasttime, align 4, !dbg !8181
  %40 = load %struct.DagNode*, %struct.DagNode** %firstnode, align 8, !dbg !8182
  %child21 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %40, i32 0, i32 16, !dbg !8184
  %41 = load %struct.DagAdjList*, %struct.DagAdjList** %child21, align 8, !dbg !8184
  store %struct.DagAdjList* %41, %struct.DagAdjList** %itA, align 8, !dbg !8185
  br label %for.cond22, !dbg !8186

for.cond22:                                       ; preds = %for.inc52, %if.then15
  %42 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8187
  %tobool23 = icmp ne %struct.DagAdjList* %42, null, !dbg !8189
  br i1 %tobool23, label %for.body24, label %for.end54, !dbg !8189

for.body24:                                       ; preds = %for.cond22
  %43 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8190
  %node25 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %43, i32 0, i32 0, !dbg !8193
  %44 = load %struct.DagNode*, %struct.DagNode** %node25, align 8, !dbg !8193
  %lasttime26 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %44, i32 0, i32 11, !dbg !8194
  %45 = load i32, i32* %lasttime26, align 8, !dbg !8194
  %46 = load i32, i32* %lasttime, align 4, !dbg !8195
  %cmp27 = icmp ne i32 %45, %46, !dbg !8196
  br i1 %cmp27, label %land.lhs.true29, label %if.end51, !dbg !8197

land.lhs.true29:                                  ; preds = %for.body24
  %47 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8198
  %node30 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %47, i32 0, i32 0, !dbg !8199
  %48 = load %struct.DagNode*, %struct.DagNode** %node30, align 8, !dbg !8199
  %type31 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %48, i32 0, i32 1, !dbg !8200
  %49 = load i16, i16* %type31, align 4, !dbg !8200
  %conv32 = sext i16 %49 to i32, !dbg !8198
  %cmp33 = icmp eq i32 %conv32, 16975, !dbg !8201
  br i1 %cmp33, label %if.then35, label %if.end51, !dbg !8202

if.then35:                                        ; preds = %land.lhs.true29
  %50 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8203
  %node36 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %50, i32 0, i32 0, !dbg !8205
  %51 = load %struct.DagNode*, %struct.DagNode** %node36, align 8, !dbg !8205
  %ob37 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %51, i32 0, i32 5, !dbg !8206
  %52 = load i8*, i8** %ob37, align 8, !dbg !8206
  %53 = bitcast i8* %52 to %struct.Object*, !dbg !8207
  store %struct.Object* %53, %struct.Object** %ob, align 8, !dbg !8208
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8209
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 103, !dbg !8211
  %55 = load i8, i8* %recalc, align 1, !dbg !8211
  %conv38 = zext i8 %55 to i32, !dbg !8209
  %and = and i32 %conv38, 7, !dbg !8212
  %tobool39 = icmp ne i32 %and, 0, !dbg !8212
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !8213

if.then40:                                        ; preds = %if.then35
  %56 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8214
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8217
  %call41 = call i32 @BKE_ptcache_object_reset(%struct.Scene* %56, %struct.Object* %57, i32 0), !dbg !8218
  %tobool42 = icmp ne i32 %call41, 0, !dbg !8218
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !8219

if.then43:                                        ; preds = %if.then40
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8220
  %recalc44 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 103, !dbg !8222
  %59 = load i8, i8* %recalc44, align 1, !dbg !8223
  %conv45 = zext i8 %59 to i32, !dbg !8223
  %or = or i32 %conv45, 2, !dbg !8223
  %conv46 = trunc i32 %or to i8, !dbg !8223
  store i8 %conv46, i8* %recalc44, align 1, !dbg !8223
  %60 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8224
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8225
  %id = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 0, !dbg !8226
  call void @lib_id_recalc_data_tag(%struct.Main* %60, %struct.ID* %id), !dbg !8227
  br label %if.end47, !dbg !8228

if.end47:                                         ; preds = %if.then43, %if.then40
  %62 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8229
  %63 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8230
  %64 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8231
  %node48 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %64, i32 0, i32 0, !dbg !8232
  %65 = load %struct.DagNode*, %struct.DagNode** %node48, align 8, !dbg !8232
  %66 = load i32, i32* %lasttime, align 4, !dbg !8233
  %67 = load i32, i32* %lay.addr, align 4, !dbg !8234
  call void @flush_pointcache_reset(%struct.Main* %62, %struct.Scene* %63, %struct.DagNode* %65, i32 %66, i32 %67, i8 zeroext 1), !dbg !8235
  br label %if.end50, !dbg !8236

if.else:                                          ; preds = %if.then35
  %68 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8237
  %69 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8238
  %70 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8239
  %node49 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %70, i32 0, i32 0, !dbg !8240
  %71 = load %struct.DagNode*, %struct.DagNode** %node49, align 8, !dbg !8240
  %72 = load i32, i32* %lasttime, align 4, !dbg !8241
  %73 = load i32, i32* %lay.addr, align 4, !dbg !8242
  call void @flush_pointcache_reset(%struct.Main* %68, %struct.Scene* %69, %struct.DagNode* %71, i32 %72, i32 %73, i8 zeroext 0), !dbg !8243
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.end47
  br label %if.end51, !dbg !8244

if.end51:                                         ; preds = %if.end50, %land.lhs.true29, %for.body24
  br label %for.inc52, !dbg !8245

for.inc52:                                        ; preds = %if.end51
  %74 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8246
  %next53 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %74, i32 0, i32 5, !dbg !8247
  %75 = load %struct.DagAdjList*, %struct.DagAdjList** %next53, align 8, !dbg !8247
  store %struct.DagAdjList* %75, %struct.DagAdjList** %itA, align 8, !dbg !8248
  br label %for.cond22, !dbg !8249, !llvm.loop !8250

for.end54:                                        ; preds = %for.cond22
  br label %if.end55, !dbg !8252

if.end55:                                         ; preds = %for.end54, %for.end
  %76 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8253
  %77 = load i32, i32* %lay.addr, align 4, !dbg !8254
  call void @dag_tag_renderlayers(%struct.Scene* %76, i32 %77), !dbg !8255
  ret void, !dbg !8256
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_scene_flush_layers(%struct.Scene* %sce, i32 %lay) #0 !dbg !8257 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %node = alloca %struct.DagNode*, align 8
  %firstnode = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %base = alloca %struct.Base*, align 8
  %lasttime = alloca i32, align 4
  %m = alloca %struct.TimeMarker*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !8264, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata %struct.DagNode** %firstnode, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !8268, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.declare(metadata i32* %lasttime, metadata !8272, metadata !DIExpression()), !dbg !8273
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8274
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !8275
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !8275
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %1, i32 0, i32 0, !dbg !8276
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !8277
  %2 = load i8*, i8** %first, align 8, !dbg !8277
  %3 = bitcast i8* %2 to %struct.DagNode*, !dbg !8274
  store %struct.DagNode* %3, %struct.DagNode** %firstnode, align 8, !dbg !8278
  %4 = load %struct.DagNode*, %struct.DagNode** %firstnode, align 8, !dbg !8279
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 16, !dbg !8281
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !8281
  store %struct.DagAdjList* %5, %struct.DagAdjList** %itA, align 8, !dbg !8282
  br label %for.cond, !dbg !8283

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8284
  %tobool = icmp ne %struct.DagAdjList* %6, null, !dbg !8286
  br i1 %tobool, label %for.body, label %for.end, !dbg !8286

for.body:                                         ; preds = %for.cond
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8287
  %lay1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %7, i32 0, i32 3, !dbg !8288
  store i32 0, i32* %lay1, align 8, !dbg !8289
  br label %for.inc, !dbg !8287

for.inc:                                          ; preds = %for.body
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8290
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 5, !dbg !8291
  %9 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !8291
  store %struct.DagAdjList* %9, %struct.DagAdjList** %itA, align 8, !dbg !8292
  br label %for.cond, !dbg !8293, !llvm.loop !8294

for.end:                                          ; preds = %for.cond
  %10 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8296
  %theDag2 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 31, !dbg !8297
  %11 = load %struct.DagForest*, %struct.DagForest** %theDag2, align 8, !dbg !8297
  %time = getelementptr inbounds %struct.DagForest, %struct.DagForest* %11, i32 0, i32 4, !dbg !8298
  %12 = load i32, i32* %time, align 8, !dbg !8299
  %inc = add nsw i32 %12, 1, !dbg !8299
  store i32 %inc, i32* %time, align 8, !dbg !8299
  %13 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8300
  %theDag3 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 31, !dbg !8301
  %14 = load %struct.DagForest*, %struct.DagForest** %theDag3, align 8, !dbg !8301
  %time4 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %14, i32 0, i32 4, !dbg !8302
  %15 = load i32, i32* %time4, align 8, !dbg !8302
  store i32 %15, i32* %lasttime, align 4, !dbg !8303
  %16 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8304
  %base5 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 5, !dbg !8306
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base5, i32 0, i32 0, !dbg !8307
  %17 = load i8*, i8** %first6, align 8, !dbg !8307
  %18 = bitcast i8* %17 to %struct.Base*, !dbg !8304
  store %struct.Base* %18, %struct.Base** %base, align 8, !dbg !8308
  br label %for.cond7, !dbg !8309

for.cond7:                                        ; preds = %for.inc13, %for.end
  %19 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8310
  %tobool8 = icmp ne %struct.Base* %19, null, !dbg !8312
  br i1 %tobool8, label %for.body9, label %for.end15, !dbg !8312

for.body9:                                        ; preds = %for.cond7
  %20 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8313
  %theDag10 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 31, !dbg !8315
  %21 = load %struct.DagForest*, %struct.DagForest** %theDag10, align 8, !dbg !8315
  %22 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8316
  %object = getelementptr inbounds %struct.Base, %struct.Base* %22, i32 0, i32 7, !dbg !8317
  %23 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !8317
  %24 = bitcast %struct.Object* %23 to i8*, !dbg !8316
  %call = call %struct.DagNode* @dag_get_node(%struct.DagForest* %21, i8* %24), !dbg !8318
  store %struct.DagNode* %call, %struct.DagNode** %node, align 8, !dbg !8319
  %25 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8320
  %object11 = getelementptr inbounds %struct.Base, %struct.Base* %25, i32 0, i32 7, !dbg !8321
  %26 = load %struct.Object*, %struct.Object** %object11, align 8, !dbg !8321
  %lay12 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 52, !dbg !8322
  %27 = load i32, i32* %lay12, align 8, !dbg !8322
  %28 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !8323
  %scelay = getelementptr inbounds %struct.DagNode, %struct.DagNode* %28, i32 0, i32 9, !dbg !8324
  store i32 %27, i32* %scelay, align 8, !dbg !8325
  br label %for.inc13, !dbg !8326

for.inc13:                                        ; preds = %for.body9
  %29 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8327
  %next14 = getelementptr inbounds %struct.Base, %struct.Base* %29, i32 0, i32 0, !dbg !8328
  %30 = load %struct.Base*, %struct.Base** %next14, align 8, !dbg !8328
  store %struct.Base* %30, %struct.Base** %base, align 8, !dbg !8329
  br label %for.cond7, !dbg !8330, !llvm.loop !8331

for.end15:                                        ; preds = %for.cond7
  %31 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8333
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 2, !dbg !8335
  %32 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !8335
  %tobool16 = icmp ne %struct.Object* %32, null, !dbg !8333
  br i1 %tobool16, label %if.then, label %if.end, !dbg !8336

if.then:                                          ; preds = %for.end15
  %33 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8337
  %theDag17 = getelementptr inbounds %struct.Scene, %struct.Scene* %33, i32 0, i32 31, !dbg !8339
  %34 = load %struct.DagForest*, %struct.DagForest** %theDag17, align 8, !dbg !8339
  %35 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8340
  %camera18 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 2, !dbg !8341
  %36 = load %struct.Object*, %struct.Object** %camera18, align 8, !dbg !8341
  %37 = bitcast %struct.Object* %36 to i8*, !dbg !8340
  %call19 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %34, i8* %37), !dbg !8342
  store %struct.DagNode* %call19, %struct.DagNode** %node, align 8, !dbg !8343
  %38 = load i32, i32* %lay.addr, align 4, !dbg !8344
  %39 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !8345
  %scelay20 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %39, i32 0, i32 9, !dbg !8346
  %40 = load i32, i32* %scelay20, align 8, !dbg !8347
  %or = or i32 %40, %38, !dbg !8347
  store i32 %or, i32* %scelay20, align 8, !dbg !8347
  br label %if.end, !dbg !8348

if.end:                                           ; preds = %if.then, %for.end15
  call void @llvm.dbg.declare(metadata %struct.TimeMarker** %m, metadata !8349, metadata !DIExpression()), !dbg !8362
  %41 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8363
  %markers = getelementptr inbounds %struct.Scene, %struct.Scene* %41, i32 0, i32 24, !dbg !8365
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %markers, i32 0, i32 0, !dbg !8366
  %42 = load i8*, i8** %first21, align 8, !dbg !8366
  %43 = bitcast i8* %42 to %struct.TimeMarker*, !dbg !8363
  store %struct.TimeMarker* %43, %struct.TimeMarker** %m, align 8, !dbg !8367
  br label %for.cond22, !dbg !8368

for.cond22:                                       ; preds = %for.inc34, %if.end
  %44 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !8369
  %tobool23 = icmp ne %struct.TimeMarker* %44, null, !dbg !8371
  br i1 %tobool23, label %for.body24, label %for.end36, !dbg !8371

for.body24:                                       ; preds = %for.cond22
  %45 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !8372
  %camera25 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %45, i32 0, i32 5, !dbg !8375
  %46 = load %struct.Object*, %struct.Object** %camera25, align 8, !dbg !8375
  %tobool26 = icmp ne %struct.Object* %46, null, !dbg !8372
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !8376

if.then27:                                        ; preds = %for.body24
  %47 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8377
  %theDag28 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 31, !dbg !8379
  %48 = load %struct.DagForest*, %struct.DagForest** %theDag28, align 8, !dbg !8379
  %49 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !8380
  %camera29 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %49, i32 0, i32 5, !dbg !8381
  %50 = load %struct.Object*, %struct.Object** %camera29, align 8, !dbg !8381
  %51 = bitcast %struct.Object* %50 to i8*, !dbg !8380
  %call30 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %48, i8* %51), !dbg !8382
  store %struct.DagNode* %call30, %struct.DagNode** %node, align 8, !dbg !8383
  %52 = load i32, i32* %lay.addr, align 4, !dbg !8384
  %53 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !8385
  %scelay31 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %53, i32 0, i32 9, !dbg !8386
  %54 = load i32, i32* %scelay31, align 8, !dbg !8387
  %or32 = or i32 %54, %52, !dbg !8387
  store i32 %or32, i32* %scelay31, align 8, !dbg !8387
  br label %if.end33, !dbg !8388

if.end33:                                         ; preds = %if.then27, %for.body24
  br label %for.inc34, !dbg !8389

for.inc34:                                        ; preds = %if.end33
  %55 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !8390
  %next35 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %55, i32 0, i32 0, !dbg !8391
  %56 = load %struct.TimeMarker*, %struct.TimeMarker** %next35, align 8, !dbg !8391
  store %struct.TimeMarker* %56, %struct.TimeMarker** %m, align 8, !dbg !8392
  br label %for.cond22, !dbg !8393, !llvm.loop !8394

for.end36:                                        ; preds = %for.cond22
  %57 = load %struct.DagNode*, %struct.DagNode** %firstnode, align 8, !dbg !8396
  %child37 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %57, i32 0, i32 16, !dbg !8398
  %58 = load %struct.DagAdjList*, %struct.DagAdjList** %child37, align 8, !dbg !8398
  store %struct.DagAdjList* %58, %struct.DagAdjList** %itA, align 8, !dbg !8399
  br label %for.cond38, !dbg !8400

for.cond38:                                       ; preds = %for.inc50, %for.end36
  %59 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8401
  %tobool39 = icmp ne %struct.DagAdjList* %59, null, !dbg !8403
  br i1 %tobool39, label %for.body40, label %for.end52, !dbg !8403

for.body40:                                       ; preds = %for.cond38
  %60 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8404
  %node41 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %60, i32 0, i32 0, !dbg !8406
  %61 = load %struct.DagNode*, %struct.DagNode** %node41, align 8, !dbg !8406
  %lasttime42 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %61, i32 0, i32 11, !dbg !8407
  %62 = load i32, i32* %lasttime42, align 8, !dbg !8407
  %63 = load i32, i32* %lasttime, align 4, !dbg !8408
  %cmp = icmp ne i32 %62, %63, !dbg !8409
  br i1 %cmp, label %land.lhs.true, label %if.end49, !dbg !8410

land.lhs.true:                                    ; preds = %for.body40
  %64 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8411
  %node43 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %64, i32 0, i32 0, !dbg !8412
  %65 = load %struct.DagNode*, %struct.DagNode** %node43, align 8, !dbg !8412
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %65, i32 0, i32 1, !dbg !8413
  %66 = load i16, i16* %type, align 4, !dbg !8413
  %conv = sext i16 %66 to i32, !dbg !8411
  %cmp44 = icmp eq i32 %conv, 16975, !dbg !8414
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !8415

if.then46:                                        ; preds = %land.lhs.true
  %67 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8416
  %68 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8417
  %node47 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %68, i32 0, i32 0, !dbg !8418
  %69 = load %struct.DagNode*, %struct.DagNode** %node47, align 8, !dbg !8418
  %70 = load i32, i32* %lasttime, align 4, !dbg !8419
  %call48 = call i32 @flush_layer_node(%struct.Scene* %67, %struct.DagNode* %69, i32 %70), !dbg !8420
  br label %if.end49, !dbg !8420

if.end49:                                         ; preds = %if.then46, %land.lhs.true, %for.body40
  br label %for.inc50, !dbg !8421

for.inc50:                                        ; preds = %if.end49
  %71 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8422
  %next51 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %71, i32 0, i32 5, !dbg !8423
  %72 = load %struct.DagAdjList*, %struct.DagAdjList** %next51, align 8, !dbg !8423
  store %struct.DagAdjList* %72, %struct.DagAdjList** %itA, align 8, !dbg !8424
  br label %for.cond38, !dbg !8425, !llvm.loop !8426

for.end52:                                        ; preds = %for.cond38
  ret void, !dbg !8428
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_update_node(%struct.Main* %bmain, %struct.DagNode* %node, i32 %layer, i32 %curtime) #0 !dbg !8429 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %layer.addr = alloca i32, align 4
  %curtime.addr = alloca i32, align 4
  %itA = alloca %struct.DagAdjList*, align 8
  %ob = alloca %struct.Object*, align 8
  %obc = alloca %struct.Object*, align 8
  %oldflag = alloca i32, align 4
  %changed = alloca i8, align 1
  %all_layer = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8432, metadata !DIExpression()), !dbg !8433
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !8434, metadata !DIExpression()), !dbg !8435
  store i32 %layer, i32* %layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer.addr, metadata !8436, metadata !DIExpression()), !dbg !8437
  store i32 %curtime, i32* %curtime.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curtime.addr, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata %struct.Object** %obc, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %oldflag, metadata !8446, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !8448, metadata !DIExpression()), !dbg !8449
  store i8 0, i8* %changed, align 1, !dbg !8449
  call void @llvm.dbg.declare(metadata i32* %all_layer, metadata !8450, metadata !DIExpression()), !dbg !8451
  %0 = load i32, i32* %curtime.addr, align 4, !dbg !8452
  %1 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8453
  %lasttime = getelementptr inbounds %struct.DagNode, %struct.DagNode* %1, i32 0, i32 11, !dbg !8454
  store i32 %0, i32* %lasttime, align 8, !dbg !8455
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8456
  %ob1 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 5, !dbg !8457
  %3 = load i8*, i8** %ob1, align 8, !dbg !8457
  %4 = bitcast i8* %3 to %struct.Object*, !dbg !8456
  store %struct.Object* %4, %struct.Object** %ob, align 8, !dbg !8458
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8459
  %tobool = icmp ne %struct.Object* %5, null, !dbg !8459
  br i1 %tobool, label %land.lhs.true, label %if.end93, !dbg !8461

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8462
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 103, !dbg !8463
  %7 = load i8, i8* %recalc, align 1, !dbg !8463
  %conv = zext i8 %7 to i32, !dbg !8462
  %and = and i32 %conv, 7, !dbg !8464
  %tobool2 = icmp ne i32 %and, 0, !dbg !8464
  br i1 %tobool2, label %if.then, label %if.end93, !dbg !8465

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8466
  %scelay = getelementptr inbounds %struct.DagNode, %struct.DagNode* %8, i32 0, i32 9, !dbg !8468
  %9 = load i32, i32* %scelay, align 8, !dbg !8468
  store i32 %9, i32* %all_layer, align 4, !dbg !8469
  %10 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8470
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %10, i32 0, i32 16, !dbg !8472
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !8472
  store %struct.DagAdjList* %11, %struct.DagAdjList** %itA, align 8, !dbg !8473
  br label %for.cond, !dbg !8474

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8475
  %tobool3 = icmp ne %struct.DagAdjList* %12, null, !dbg !8477
  br i1 %tobool3, label %for.body, label %for.end, !dbg !8477

for.body:                                         ; preds = %for.cond
  %13 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8478
  %lay = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %13, i32 0, i32 3, !dbg !8480
  %14 = load i32, i32* %lay, align 8, !dbg !8480
  %15 = load i32, i32* %all_layer, align 4, !dbg !8481
  %or = or i32 %15, %14, !dbg !8481
  store i32 %or, i32* %all_layer, align 4, !dbg !8481
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8482
  %lay4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %16, i32 0, i32 3, !dbg !8484
  %17 = load i32, i32* %lay4, align 8, !dbg !8484
  %18 = load i32, i32* %layer.addr, align 4, !dbg !8485
  %and5 = and i32 %17, %18, !dbg !8486
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8486
  br i1 %tobool6, label %if.then7, label %if.end77, !dbg !8487

if.then7:                                         ; preds = %for.body
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8488
  %node8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %19, i32 0, i32 0, !dbg !8491
  %20 = load %struct.DagNode*, %struct.DagNode** %node8, align 8, !dbg !8491
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %20, i32 0, i32 1, !dbg !8492
  %21 = load i16, i16* %type, align 4, !dbg !8492
  %conv9 = sext i16 %21 to i32, !dbg !8488
  %cmp = icmp eq i32 %conv9, 16975, !dbg !8493
  br i1 %cmp, label %if.then11, label %if.end76, !dbg !8494

if.then11:                                        ; preds = %if.then7
  %22 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8495
  %node12 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %22, i32 0, i32 0, !dbg !8497
  %23 = load %struct.DagNode*, %struct.DagNode** %node12, align 8, !dbg !8497
  %ob13 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %23, i32 0, i32 5, !dbg !8498
  %24 = load i8*, i8** %ob13, align 8, !dbg !8498
  %25 = bitcast i8* %24 to %struct.Object*, !dbg !8495
  store %struct.Object* %25, %struct.Object** %obc, align 8, !dbg !8499
  %26 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8500
  %recalc14 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 103, !dbg !8501
  %27 = load i8, i8* %recalc14, align 1, !dbg !8501
  %conv15 = zext i8 %27 to i32, !dbg !8500
  store i32 %conv15, i32* %oldflag, align 4, !dbg !8502
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8503
  %recalc16 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 103, !dbg !8505
  %29 = load i8, i8* %recalc16, align 1, !dbg !8505
  %conv17 = zext i8 %29 to i32, !dbg !8503
  %and18 = and i32 %conv17, 1, !dbg !8506
  %tobool19 = icmp ne i32 %and18, 0, !dbg !8506
  br i1 %tobool19, label %if.then20, label %if.end41, !dbg !8507

if.then20:                                        ; preds = %if.then11
  %30 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8508
  %type21 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %30, i32 0, i32 1, !dbg !8511
  %31 = load i16, i16* %type21, align 8, !dbg !8511
  %conv22 = sext i16 %31 to i32, !dbg !8508
  %and23 = and i32 %conv22, 4, !dbg !8512
  %tobool24 = icmp ne i32 %and23, 0, !dbg !8512
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !8513

if.then25:                                        ; preds = %if.then20
  %32 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8514
  %recalc26 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 103, !dbg !8516
  %33 = load i8, i8* %recalc26, align 1, !dbg !8517
  %conv27 = zext i8 %33 to i32, !dbg !8517
  %or28 = or i32 %conv27, 1, !dbg !8517
  %conv29 = trunc i32 %or28 to i8, !dbg !8517
  store i8 %conv29, i8* %recalc26, align 1, !dbg !8517
  %34 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8518
  %35 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8519
  %id = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 0, !dbg !8520
  call void @lib_id_recalc_tag(%struct.Main* %34, %struct.ID* %id), !dbg !8521
  br label %if.end, !dbg !8522

if.end:                                           ; preds = %if.then25, %if.then20
  %36 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8523
  %type30 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %36, i32 0, i32 1, !dbg !8525
  %37 = load i16, i16* %type30, align 8, !dbg !8525
  %conv31 = sext i16 %37 to i32, !dbg !8523
  %and32 = and i32 %conv31, 8, !dbg !8526
  %tobool33 = icmp ne i32 %and32, 0, !dbg !8526
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !8527

if.then34:                                        ; preds = %if.end
  %38 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8528
  %recalc35 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 103, !dbg !8530
  %39 = load i8, i8* %recalc35, align 1, !dbg !8531
  %conv36 = zext i8 %39 to i32, !dbg !8531
  %or37 = or i32 %conv36, 2, !dbg !8531
  %conv38 = trunc i32 %or37 to i8, !dbg !8531
  store i8 %conv38, i8* %recalc35, align 1, !dbg !8531
  %40 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8532
  %41 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8533
  %id39 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 0, !dbg !8534
  call void @lib_id_recalc_data_tag(%struct.Main* %40, %struct.ID* %id39), !dbg !8535
  br label %if.end40, !dbg !8536

if.end40:                                         ; preds = %if.then34, %if.end
  br label %if.end41, !dbg !8537

if.end41:                                         ; preds = %if.end40, %if.then11
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8538
  %recalc42 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 103, !dbg !8540
  %43 = load i8, i8* %recalc42, align 1, !dbg !8540
  %conv43 = zext i8 %43 to i32, !dbg !8538
  %and44 = and i32 %conv43, 2, !dbg !8541
  %tobool45 = icmp ne i32 %and44, 0, !dbg !8541
  br i1 %tobool45, label %if.then46, label %if.end69, !dbg !8542

if.then46:                                        ; preds = %if.end41
  %44 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8543
  %type47 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %44, i32 0, i32 1, !dbg !8546
  %45 = load i16, i16* %type47, align 8, !dbg !8546
  %conv48 = sext i16 %45 to i32, !dbg !8543
  %and49 = and i32 %conv48, 16, !dbg !8547
  %tobool50 = icmp ne i32 %and49, 0, !dbg !8547
  br i1 %tobool50, label %if.then51, label %if.end57, !dbg !8548

if.then51:                                        ; preds = %if.then46
  %46 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8549
  %recalc52 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 103, !dbg !8551
  %47 = load i8, i8* %recalc52, align 1, !dbg !8552
  %conv53 = zext i8 %47 to i32, !dbg !8552
  %or54 = or i32 %conv53, 1, !dbg !8552
  %conv55 = trunc i32 %or54 to i8, !dbg !8552
  store i8 %conv55, i8* %recalc52, align 1, !dbg !8552
  %48 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8553
  %49 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8554
  %id56 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 0, !dbg !8555
  call void @lib_id_recalc_tag(%struct.Main* %48, %struct.ID* %id56), !dbg !8556
  br label %if.end57, !dbg !8557

if.end57:                                         ; preds = %if.then51, %if.then46
  %50 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8558
  %type58 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %50, i32 0, i32 1, !dbg !8560
  %51 = load i16, i16* %type58, align 8, !dbg !8560
  %conv59 = sext i16 %51 to i32, !dbg !8558
  %and60 = and i32 %conv59, 32, !dbg !8561
  %tobool61 = icmp ne i32 %and60, 0, !dbg !8561
  br i1 %tobool61, label %if.then62, label %if.end68, !dbg !8562

if.then62:                                        ; preds = %if.end57
  %52 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8563
  %recalc63 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 103, !dbg !8565
  %53 = load i8, i8* %recalc63, align 1, !dbg !8566
  %conv64 = zext i8 %53 to i32, !dbg !8566
  %or65 = or i32 %conv64, 2, !dbg !8566
  %conv66 = trunc i32 %or65 to i8, !dbg !8566
  store i8 %conv66, i8* %recalc63, align 1, !dbg !8566
  %54 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8567
  %55 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8568
  %id67 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 0, !dbg !8569
  call void @lib_id_recalc_data_tag(%struct.Main* %54, %struct.ID* %id67), !dbg !8570
  br label %if.end68, !dbg !8571

if.end68:                                         ; preds = %if.then62, %if.end57
  br label %if.end69, !dbg !8572

if.end69:                                         ; preds = %if.end68, %if.end41
  %56 = load i32, i32* %oldflag, align 4, !dbg !8573
  %57 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8575
  %recalc70 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 103, !dbg !8576
  %58 = load i8, i8* %recalc70, align 1, !dbg !8576
  %conv71 = zext i8 %58 to i32, !dbg !8575
  %cmp72 = icmp ne i32 %56, %conv71, !dbg !8577
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8578

if.then74:                                        ; preds = %if.end69
  store i8 1, i8* %changed, align 1, !dbg !8579
  br label %if.end75, !dbg !8580

if.end75:                                         ; preds = %if.then74, %if.end69
  br label %if.end76, !dbg !8581

if.end76:                                         ; preds = %if.end75, %if.then7
  br label %if.end77, !dbg !8582

if.end77:                                         ; preds = %if.end76, %for.body
  br label %for.inc, !dbg !8583

for.inc:                                          ; preds = %if.end77
  %59 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8584
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %59, i32 0, i32 5, !dbg !8585
  %60 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !8585
  store %struct.DagAdjList* %60, %struct.DagAdjList** %itA, align 8, !dbg !8586
  br label %for.cond, !dbg !8587, !llvm.loop !8588

for.end:                                          ; preds = %for.cond
  %61 = load i32, i32* %all_layer, align 4, !dbg !8590
  %62 = load i32, i32* %layer.addr, align 4, !dbg !8592
  %and78 = and i32 %61, %62, !dbg !8593
  %cmp79 = icmp eq i32 %and78, 0, !dbg !8594
  br i1 %cmp79, label %if.then81, label %if.end92, !dbg !8595

if.then81:                                        ; preds = %for.end
  %63 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8596
  %recalc82 = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 103, !dbg !8599
  %64 = load i8, i8* %recalc82, align 1, !dbg !8599
  %conv83 = zext i8 %64 to i32, !dbg !8596
  %and84 = and i32 %conv83, 2, !dbg !8600
  %tobool85 = icmp ne i32 %and84, 0, !dbg !8600
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !8601

if.then86:                                        ; preds = %if.then81
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8602
  call void @BKE_object_free_derived_caches(%struct.Object* %65), !dbg !8603
  br label %if.end87, !dbg !8603

if.end87:                                         ; preds = %if.then86, %if.then81
  %66 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8604
  %recalc88 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 103, !dbg !8605
  %67 = load i8, i8* %recalc88, align 1, !dbg !8606
  %conv89 = zext i8 %67 to i32, !dbg !8606
  %and90 = and i32 %conv89, -8, !dbg !8606
  %conv91 = trunc i32 %and90 to i8, !dbg !8606
  store i8 %conv91, i8* %recalc88, align 1, !dbg !8606
  br label %if.end92, !dbg !8607

if.end92:                                         ; preds = %if.end87, %for.end
  br label %if.end93, !dbg !8608

if.end93:                                         ; preds = %if.end92, %land.lhs.true, %entry
  %68 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8609
  %child94 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %68, i32 0, i32 16, !dbg !8611
  %69 = load %struct.DagAdjList*, %struct.DagAdjList** %child94, align 8, !dbg !8611
  store %struct.DagAdjList* %69, %struct.DagAdjList** %itA, align 8, !dbg !8612
  br label %for.cond95, !dbg !8613

for.cond95:                                       ; preds = %for.inc130, %if.end93
  %70 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8614
  %tobool96 = icmp ne %struct.DagAdjList* %70, null, !dbg !8616
  br i1 %tobool96, label %for.body97, label %for.end132, !dbg !8616

for.body97:                                       ; preds = %for.cond95
  %71 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8617
  %lay98 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %71, i32 0, i32 3, !dbg !8620
  %72 = load i32, i32* %lay98, align 8, !dbg !8620
  %73 = load i32, i32* %layer.addr, align 4, !dbg !8621
  %and99 = and i32 %72, %73, !dbg !8622
  %tobool100 = icmp ne i32 %and99, 0, !dbg !8622
  br i1 %tobool100, label %if.then101, label %if.end129, !dbg !8623

if.then101:                                       ; preds = %for.body97
  %74 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8624
  %node102 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %74, i32 0, i32 0, !dbg !8627
  %75 = load %struct.DagNode*, %struct.DagNode** %node102, align 8, !dbg !8627
  %type103 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %75, i32 0, i32 1, !dbg !8628
  %76 = load i16, i16* %type103, align 4, !dbg !8628
  %conv104 = sext i16 %76 to i32, !dbg !8624
  %cmp105 = icmp eq i32 %conv104, 16975, !dbg !8629
  br i1 %cmp105, label %if.then107, label %if.end128, !dbg !8630

if.then107:                                       ; preds = %if.then101
  %77 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8631
  %node108 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %77, i32 0, i32 0, !dbg !8633
  %78 = load %struct.DagNode*, %struct.DagNode** %node108, align 8, !dbg !8633
  %ob109 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %78, i32 0, i32 5, !dbg !8634
  %79 = load i8*, i8** %ob109, align 8, !dbg !8634
  %80 = bitcast i8* %79 to %struct.Object*, !dbg !8631
  store %struct.Object* %80, %struct.Object** %obc, align 8, !dbg !8635
  %81 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8636
  %recalc110 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 103, !dbg !8638
  %82 = load i8, i8* %recalc110, align 1, !dbg !8638
  %conv111 = zext i8 %82 to i32, !dbg !8636
  %and112 = and i32 %conv111, 7, !dbg !8639
  %cmp113 = icmp eq i32 %and112, 1, !dbg !8640
  br i1 %cmp113, label %if.then115, label %if.end127, !dbg !8641

if.then115:                                       ; preds = %if.then107
  %83 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8642
  %type116 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %83, i32 0, i32 1, !dbg !8645
  %84 = load i16, i16* %type116, align 8, !dbg !8645
  %conv117 = sext i16 %84 to i32, !dbg !8642
  %and118 = and i32 %conv117, 40, !dbg !8646
  %tobool119 = icmp ne i32 %and118, 0, !dbg !8646
  br i1 %tobool119, label %if.then120, label %if.end126, !dbg !8647

if.then120:                                       ; preds = %if.then115
  %85 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8648
  %recalc121 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 103, !dbg !8650
  %86 = load i8, i8* %recalc121, align 1, !dbg !8651
  %conv122 = zext i8 %86 to i32, !dbg !8651
  %or123 = or i32 %conv122, 2, !dbg !8651
  %conv124 = trunc i32 %or123 to i8, !dbg !8651
  store i8 %conv124, i8* %recalc121, align 1, !dbg !8651
  %87 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8652
  %88 = load %struct.Object*, %struct.Object** %obc, align 8, !dbg !8653
  %id125 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 0, !dbg !8654
  call void @lib_id_recalc_data_tag(%struct.Main* %87, %struct.ID* %id125), !dbg !8655
  br label %if.end126, !dbg !8656

if.end126:                                        ; preds = %if.then120, %if.then115
  br label %if.end127, !dbg !8657

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128, !dbg !8658

if.end128:                                        ; preds = %if.end127, %if.then101
  br label %if.end129, !dbg !8659

if.end129:                                        ; preds = %if.end128, %for.body97
  br label %for.inc130, !dbg !8660

for.inc130:                                       ; preds = %if.end129
  %89 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8661
  %next131 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %89, i32 0, i32 5, !dbg !8662
  %90 = load %struct.DagAdjList*, %struct.DagAdjList** %next131, align 8, !dbg !8662
  store %struct.DagAdjList* %90, %struct.DagAdjList** %itA, align 8, !dbg !8663
  br label %for.cond95, !dbg !8664, !llvm.loop !8665

for.end132:                                       ; preds = %for.cond95
  %91 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8667
  %child133 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %91, i32 0, i32 16, !dbg !8669
  %92 = load %struct.DagAdjList*, %struct.DagAdjList** %child133, align 8, !dbg !8669
  store %struct.DagAdjList* %92, %struct.DagAdjList** %itA, align 8, !dbg !8670
  br label %for.cond134, !dbg !8671

for.cond134:                                      ; preds = %for.inc146, %for.end132
  %93 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8672
  %tobool135 = icmp ne %struct.DagAdjList* %93, null, !dbg !8674
  br i1 %tobool135, label %for.body136, label %for.end148, !dbg !8674

for.body136:                                      ; preds = %for.cond134
  %94 = load i8, i8* %changed, align 1, !dbg !8675
  %conv137 = zext i8 %94 to i32, !dbg !8675
  %tobool138 = icmp ne i32 %conv137, 0, !dbg !8675
  br i1 %tobool138, label %if.then143, label %lor.lhs.false, !dbg !8678

lor.lhs.false:                                    ; preds = %for.body136
  %95 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8679
  %node139 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %95, i32 0, i32 0, !dbg !8680
  %96 = load %struct.DagNode*, %struct.DagNode** %node139, align 8, !dbg !8680
  %lasttime140 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %96, i32 0, i32 11, !dbg !8681
  %97 = load i32, i32* %lasttime140, align 8, !dbg !8681
  %98 = load i32, i32* %curtime.addr, align 4, !dbg !8682
  %cmp141 = icmp ne i32 %97, %98, !dbg !8683
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !8684

if.then143:                                       ; preds = %lor.lhs.false, %for.body136
  %99 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8685
  %100 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8686
  %node144 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %100, i32 0, i32 0, !dbg !8687
  %101 = load %struct.DagNode*, %struct.DagNode** %node144, align 8, !dbg !8687
  %102 = load i32, i32* %layer.addr, align 4, !dbg !8688
  %103 = load i32, i32* %curtime.addr, align 4, !dbg !8689
  call void @flush_update_node(%struct.Main* %99, %struct.DagNode* %101, i32 %102, i32 %103), !dbg !8690
  br label %if.end145, !dbg !8690

if.end145:                                        ; preds = %if.then143, %lor.lhs.false
  br label %for.inc146, !dbg !8691

for.inc146:                                       ; preds = %if.end145
  %104 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8692
  %next147 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %104, i32 0, i32 5, !dbg !8693
  %105 = load %struct.DagAdjList*, %struct.DagAdjList** %next147, align 8, !dbg !8693
  store %struct.DagAdjList* %105, %struct.DagAdjList** %itA, align 8, !dbg !8694
  br label %for.cond134, !dbg !8695, !llvm.loop !8696

for.end148:                                       ; preds = %for.cond134
  ret void, !dbg !8698
}

declare dso_local i32 @BKE_ptcache_object_reset(%struct.Scene*, %struct.Object*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @lib_id_recalc_data_tag(%struct.Main* %bmain, %struct.ID* %id) #0 !dbg !8699 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !8704
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 5, !dbg !8705
  %1 = load i16, i16* %flag, align 2, !dbg !8706
  %conv = sext i16 %1 to i32, !dbg !8706
  %or = or i32 %conv, 8192, !dbg !8706
  %conv1 = trunc i32 %or to i16, !dbg !8706
  store i16 %conv1, i16* %flag, align 2, !dbg !8706
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8707
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !8708
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !8708
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8708
  %4 = bitcast i8* %arraydecay to i16*, !dbg !8708
  %5 = load i16, i16* %4, align 8, !dbg !8708
  call void @DAG_id_type_tag(%struct.Main* %2, i16 signext %5), !dbg !8709
  ret void, !dbg !8710
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_pointcache_reset(%struct.Main* %bmain, %struct.Scene* %scene, %struct.DagNode* %node, i32 %curtime, i32 %lay, i8 zeroext %reset) #0 !dbg !8711 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %curtime.addr = alloca i32, align 4
  %lay.addr = alloca i32, align 4
  %reset.addr = alloca i8, align 1
  %itA = alloca %struct.DagAdjList*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8714, metadata !DIExpression()), !dbg !8715
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  store i32 %curtime, i32* %curtime.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curtime.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  store i8 %reset, i8* %reset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8728, metadata !DIExpression()), !dbg !8729
  %0 = load i32, i32* %curtime.addr, align 4, !dbg !8730
  %1 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8731
  %lasttime = getelementptr inbounds %struct.DagNode, %struct.DagNode* %1, i32 0, i32 11, !dbg !8732
  store i32 %0, i32* %lasttime, align 8, !dbg !8733
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !8734
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 16, !dbg !8736
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !8736
  store %struct.DagAdjList* %3, %struct.DagAdjList** %itA, align 8, !dbg !8737
  br label %for.cond, !dbg !8738

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8739
  %tobool = icmp ne %struct.DagAdjList* %4, null, !dbg !8741
  br i1 %tobool, label %for.body, label %for.end, !dbg !8741

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8742
  %node1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %5, i32 0, i32 0, !dbg !8745
  %6 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !8745
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %6, i32 0, i32 1, !dbg !8746
  %7 = load i16, i16* %type, align 4, !dbg !8746
  %conv = sext i16 %7 to i32, !dbg !8742
  %cmp = icmp eq i32 %conv, 16975, !dbg !8747
  br i1 %cmp, label %if.then, label %if.end30, !dbg !8748

if.then:                                          ; preds = %for.body
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8749
  %node3 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 0, !dbg !8752
  %9 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !8752
  %lasttime4 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 11, !dbg !8753
  %10 = load i32, i32* %lasttime4, align 8, !dbg !8753
  %11 = load i32, i32* %curtime.addr, align 4, !dbg !8754
  %cmp5 = icmp ne i32 %10, %11, !dbg !8755
  br i1 %cmp5, label %if.then7, label %if.end29, !dbg !8756

if.then7:                                         ; preds = %if.then
  %12 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8757
  %node8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %12, i32 0, i32 0, !dbg !8759
  %13 = load %struct.DagNode*, %struct.DagNode** %node8, align 8, !dbg !8759
  %ob9 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %13, i32 0, i32 5, !dbg !8760
  %14 = load i8*, i8** %ob9, align 8, !dbg !8760
  %15 = bitcast i8* %14 to %struct.Object*, !dbg !8761
  store %struct.Object* %15, %struct.Object** %ob, align 8, !dbg !8762
  %16 = load i8, i8* %reset.addr, align 1, !dbg !8763
  %conv10 = zext i8 %16 to i32, !dbg !8763
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !8763
  br i1 %tobool11, label %if.then14, label %lor.lhs.false, !dbg !8765

lor.lhs.false:                                    ; preds = %if.then7
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8766
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 103, !dbg !8767
  %18 = load i8, i8* %recalc, align 1, !dbg !8767
  %conv12 = zext i8 %18 to i32, !dbg !8766
  %and = and i32 %conv12, 7, !dbg !8768
  %tobool13 = icmp ne i32 %and, 0, !dbg !8768
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !8769

if.then14:                                        ; preds = %lor.lhs.false, %if.then7
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8770
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8773
  %call = call i32 @BKE_ptcache_object_reset(%struct.Scene* %19, %struct.Object* %20, i32 0), !dbg !8774
  %tobool15 = icmp ne i32 %call, 0, !dbg !8774
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !8775

if.then16:                                        ; preds = %if.then14
  %21 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8776
  %node17 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %21, i32 0, i32 0, !dbg !8779
  %22 = load %struct.DagNode*, %struct.DagNode** %node17, align 8, !dbg !8779
  %lay18 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %22, i32 0, i32 8, !dbg !8780
  %23 = load i32, i32* %lay18, align 4, !dbg !8780
  %24 = load i32, i32* %lay.addr, align 4, !dbg !8781
  %and19 = and i32 %23, %24, !dbg !8782
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8782
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !8783

if.then21:                                        ; preds = %if.then16
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8784
  %recalc22 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 103, !dbg !8786
  %26 = load i8, i8* %recalc22, align 1, !dbg !8787
  %conv23 = zext i8 %26 to i32, !dbg !8787
  %or = or i32 %conv23, 2, !dbg !8787
  %conv24 = trunc i32 %or to i8, !dbg !8787
  store i8 %conv24, i8* %recalc22, align 1, !dbg !8787
  %27 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8788
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8789
  %id = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 0, !dbg !8790
  call void @lib_id_recalc_data_tag(%struct.Main* %27, %struct.ID* %id), !dbg !8791
  br label %if.end, !dbg !8792

if.end:                                           ; preds = %if.then21, %if.then16
  br label %if.end25, !dbg !8793

if.end25:                                         ; preds = %if.end, %if.then14
  %29 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8794
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8795
  %31 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8796
  %node26 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %31, i32 0, i32 0, !dbg !8797
  %32 = load %struct.DagNode*, %struct.DagNode** %node26, align 8, !dbg !8797
  %33 = load i32, i32* %curtime.addr, align 4, !dbg !8798
  %34 = load i32, i32* %lay.addr, align 4, !dbg !8799
  call void @flush_pointcache_reset(%struct.Main* %29, %struct.Scene* %30, %struct.DagNode* %32, i32 %33, i32 %34, i8 zeroext 1), !dbg !8800
  br label %if.end28, !dbg !8801

if.else:                                          ; preds = %lor.lhs.false
  %35 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8802
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8803
  %37 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8804
  %node27 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %37, i32 0, i32 0, !dbg !8805
  %38 = load %struct.DagNode*, %struct.DagNode** %node27, align 8, !dbg !8805
  %39 = load i32, i32* %curtime.addr, align 4, !dbg !8806
  %40 = load i32, i32* %lay.addr, align 4, !dbg !8807
  call void @flush_pointcache_reset(%struct.Main* %35, %struct.Scene* %36, %struct.DagNode* %38, i32 %39, i32 %40, i8 zeroext 0), !dbg !8808
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end25
  br label %if.end29, !dbg !8809

if.end29:                                         ; preds = %if.end28, %if.then
  br label %if.end30, !dbg !8810

if.end30:                                         ; preds = %if.end29, %for.body
  br label %for.inc, !dbg !8811

for.inc:                                          ; preds = %if.end30
  %41 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !8812
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %41, i32 0, i32 5, !dbg !8813
  %42 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !8813
  store %struct.DagAdjList* %42, %struct.DagAdjList** %itA, align 8, !dbg !8814
  br label %for.cond, !dbg !8815, !llvm.loop !8816

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8818
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_tag_renderlayers(%struct.Scene* %sce, i32 %lay) #0 !dbg !8819 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  %base = alloca %struct.Base*, align 8
  %lay_changed = alloca i32, align 4
  %srl = alloca %struct.SceneRenderLayer*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8826
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 18, !dbg !8828
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !8828
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !8826
  br i1 %tobool, label %if.then, label %if.end27, !dbg !8829

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata i32* %lay_changed, metadata !8835, metadata !DIExpression()), !dbg !8836
  store i32 0, i32* %lay_changed, align 4, !dbg !8836
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8837
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 5, !dbg !8839
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !8840
  %3 = load i8*, i8** %first, align 8, !dbg !8840
  %4 = bitcast i8* %3 to %struct.Base*, !dbg !8837
  store %struct.Base* %4, %struct.Base** %base, align 8, !dbg !8841
  br label %for.cond, !dbg !8842

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8843
  %tobool2 = icmp ne %struct.Base* %5, null, !dbg !8845
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8845

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8846
  %lay3 = getelementptr inbounds %struct.Base, %struct.Base* %6, i32 0, i32 2, !dbg !8848
  %7 = load i32, i32* %lay3, align 8, !dbg !8848
  %8 = load i32, i32* %lay.addr, align 4, !dbg !8849
  %and = and i32 %7, %8, !dbg !8850
  %tobool4 = icmp ne i32 %and, 0, !dbg !8850
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !8851

if.then5:                                         ; preds = %for.body
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8852
  %object = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 7, !dbg !8854
  %10 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !8854
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 103, !dbg !8855
  %11 = load i8, i8* %recalc, align 1, !dbg !8855
  %tobool6 = icmp ne i8 %11, 0, !dbg !8852
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !8856

if.then7:                                         ; preds = %if.then5
  %12 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8857
  %lay8 = getelementptr inbounds %struct.Base, %struct.Base* %12, i32 0, i32 2, !dbg !8858
  %13 = load i32, i32* %lay8, align 8, !dbg !8858
  %14 = load i32, i32* %lay_changed, align 4, !dbg !8859
  %or = or i32 %14, %13, !dbg !8859
  store i32 %or, i32* %lay_changed, align 4, !dbg !8859
  br label %if.end, !dbg !8860

if.end:                                           ; preds = %if.then7, %if.then5
  br label %if.end9, !dbg !8855

if.end9:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8849

for.inc:                                          ; preds = %if.end9
  %15 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8861
  %next = getelementptr inbounds %struct.Base, %struct.Base* %15, i32 0, i32 0, !dbg !8862
  %16 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !8862
  store %struct.Base* %16, %struct.Base** %base, align 8, !dbg !8863
  br label %for.cond, !dbg !8864, !llvm.loop !8865

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8867
  %nodetree10 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 18, !dbg !8869
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree10, align 8, !dbg !8869
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 7, !dbg !8870
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8871
  %19 = load i8*, i8** %first11, align 8, !dbg !8871
  %20 = bitcast i8* %19 to %struct.bNode*, !dbg !8867
  store %struct.bNode* %20, %struct.bNode** %node, align 8, !dbg !8872
  br label %for.cond12, !dbg !8873

for.cond12:                                       ; preds = %for.inc24, %for.end
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8874
  %tobool13 = icmp ne %struct.bNode* %21, null, !dbg !8876
  br i1 %tobool13, label %for.body14, label %for.end26, !dbg !8876

for.body14:                                       ; preds = %for.cond12
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8877
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 20, !dbg !8880
  %23 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8880
  %24 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8881
  %25 = bitcast %struct.Scene* %24 to %struct.ID*, !dbg !8882
  %cmp = icmp eq %struct.ID* %23, %25, !dbg !8883
  br i1 %cmp, label %if.then15, label %if.end23, !dbg !8884

if.then15:                                        ; preds = %for.body14
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !8885, metadata !DIExpression()), !dbg !8917
  %26 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8918
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 22, !dbg !8919
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !8920
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8921
  %custom1 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 33, !dbg !8922
  %28 = load i16, i16* %custom1, align 8, !dbg !8922
  %conv = sext i16 %28 to i32, !dbg !8921
  %call = call i8* @BLI_findlink(%struct.ListBase* %layers, i32 %conv), !dbg !8923
  %29 = bitcast i8* %call to %struct.SceneRenderLayer*, !dbg !8923
  store %struct.SceneRenderLayer* %29, %struct.SceneRenderLayer** %srl, align 8, !dbg !8917
  %30 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !8924
  %tobool16 = icmp ne %struct.SceneRenderLayer* %30, null, !dbg !8924
  br i1 %tobool16, label %land.lhs.true, label %if.end22, !dbg !8926

land.lhs.true:                                    ; preds = %if.then15
  %31 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !8927
  %lay17 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %31, i32 0, i32 5, !dbg !8928
  %32 = load i32, i32* %lay17, align 8, !dbg !8928
  %33 = load i32, i32* %lay_changed, align 4, !dbg !8929
  %and18 = and i32 %32, %33, !dbg !8930
  %tobool19 = icmp ne i32 %and18, 0, !dbg !8930
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !8931

if.then20:                                        ; preds = %land.lhs.true
  %34 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8932
  %nodetree21 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 18, !dbg !8933
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree21, align 8, !dbg !8933
  %36 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8934
  call void @nodeUpdate(%struct.bNodeTree* %35, %struct.bNode* %36), !dbg !8935
  br label %if.end22, !dbg !8935

if.end22:                                         ; preds = %if.then20, %land.lhs.true, %if.then15
  br label %if.end23, !dbg !8936

if.end23:                                         ; preds = %if.end22, %for.body14
  br label %for.inc24, !dbg !8937

for.inc24:                                        ; preds = %if.end23
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8938
  %next25 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 0, !dbg !8939
  %38 = load %struct.bNode*, %struct.bNode** %next25, align 8, !dbg !8939
  store %struct.bNode* %38, %struct.bNode** %node, align 8, !dbg !8940
  br label %for.cond12, !dbg !8941, !llvm.loop !8942

for.end26:                                        ; preds = %for.cond12
  br label %if.end27, !dbg !8944

if.end27:                                         ; preds = %for.end26, %entry
  ret void, !dbg !8945
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_scene_update_flags(%struct.Main* %bmain, %struct.Scene* %scene, i32 %lay, i8 zeroext %do_time, i8 zeroext %do_invisible_flush) #0 !dbg !8946 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %do_time.addr = alloca i8, align 1
  %do_invisible_flush.addr = alloca i8, align 1
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %group = alloca %struct.Group*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  store i8 %do_time, i8* %do_time.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_time.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  store i8 %do_invisible_flush, i8* %do_invisible_flush.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_invisible_flush.addr, metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8959, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8961, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !8963, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !8965, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !8967, metadata !DIExpression()), !dbg !8968
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8969
  call void @BKE_main_id_tag_idcode(%struct.Main* %0, i16 signext 21063, i8 zeroext 0), !dbg !8970
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8971
  store %struct.Scene* %1, %struct.Scene** %sce_iter, align 8, !dbg !8971
  %call = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !8971
  store %struct.Base* %call, %struct.Base** %base, align 8, !dbg !8971
  br label %for.cond, !dbg !8971

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8973
  %tobool = icmp ne %struct.Base* %2, null, !dbg !8975
  br i1 %tobool, label %for.body, label %for.end, !dbg !8975

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8976
  %object = getelementptr inbounds %struct.Base, %struct.Base* %3, i32 0, i32 7, !dbg !8978
  %4 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !8978
  store %struct.Object* %4, %struct.Object** %ob, align 8, !dbg !8979
  %5 = load i8, i8* %do_time.addr, align 1, !dbg !8980
  %tobool1 = icmp ne i8 %5, 0, !dbg !8980
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8982

if.then:                                          ; preds = %for.body
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8983
  %7 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !8985
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8986
  call void @dag_object_time_update_flags(%struct.Main* %6, %struct.Scene* %7, %struct.Object* %8), !dbg !8987
  br label %if.end, !dbg !8988

if.end:                                           ; preds = %if.then, %for.body
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8989
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 112, !dbg !8991
  %10 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !8991
  %tobool2 = icmp ne %struct.Group* %10, null, !dbg !8989
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8992

if.then3:                                         ; preds = %if.end
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8993
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8994
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8995
  %dup_group4 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 112, !dbg !8996
  %14 = load %struct.Group*, %struct.Group** %dup_group4, align 8, !dbg !8996
  %15 = load i8, i8* %do_time.addr, align 1, !dbg !8997
  call void @dag_group_update_flags(%struct.Main* %11, %struct.Scene* %12, %struct.Group* %14, i8 zeroext %15), !dbg !8998
  br label %if.end5, !dbg !8998

if.end5:                                          ; preds = %if.then3, %if.end
  br label %for.inc, !dbg !8999

for.inc:                                          ; preds = %if.end5
  %16 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8973
  %call6 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %16), !dbg !8973
  store %struct.Base* %call6, %struct.Base** %base, align 8, !dbg !8973
  br label %for.cond, !dbg !9000, !llvm.loop !9001

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9003
  store %struct.Scene* %17, %struct.Scene** %sce_iter, align 8, !dbg !9005
  br label %for.cond7, !dbg !9006

for.cond7:                                        ; preds = %for.inc10, %for.end
  %18 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9007
  %tobool8 = icmp ne %struct.Scene* %18, null, !dbg !9009
  br i1 %tobool8, label %for.body9, label %for.end11, !dbg !9009

for.body9:                                        ; preds = %for.cond7
  %19 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9010
  %20 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9011
  %21 = load i32, i32* %lay.addr, align 4, !dbg !9012
  call void @DAG_scene_flush_update(%struct.Main* %19, %struct.Scene* %20, i32 %21, i16 signext 1), !dbg !9013
  br label %for.inc10, !dbg !9013

for.inc10:                                        ; preds = %for.body9
  %22 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9014
  %set = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 4, !dbg !9015
  %23 = load %struct.Scene*, %struct.Scene** %set, align 8, !dbg !9015
  store %struct.Scene* %23, %struct.Scene** %sce_iter, align 8, !dbg !9016
  br label %for.cond7, !dbg !9017, !llvm.loop !9018

for.end11:                                        ; preds = %for.cond7
  %24 = load i8, i8* %do_time.addr, align 1, !dbg !9020
  %tobool12 = icmp ne i8 %24, 0, !dbg !9020
  br i1 %tobool12, label %if.then13, label %if.end32, !dbg !9022

if.then13:                                        ; preds = %for.end11
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9023
  store %struct.Scene* %25, %struct.Scene** %sce_iter, align 8, !dbg !9023
  %call14 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !9023
  store %struct.Base* %call14, %struct.Base** %base, align 8, !dbg !9023
  br label %for.cond15, !dbg !9023

for.cond15:                                       ; preds = %for.inc25, %if.then13
  %26 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9026
  %tobool16 = icmp ne %struct.Base* %26, null, !dbg !9028
  br i1 %tobool16, label %for.body17, label %for.end27, !dbg !9028

for.body17:                                       ; preds = %for.cond15
  %27 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9029
  %object18 = getelementptr inbounds %struct.Base, %struct.Base* %27, i32 0, i32 7, !dbg !9031
  %28 = load %struct.Object*, %struct.Object** %object18, align 8, !dbg !9031
  store %struct.Object* %28, %struct.Object** %ob, align 8, !dbg !9032
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9033
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 103, !dbg !9035
  %30 = load i8, i8* %recalc, align 1, !dbg !9035
  %conv = zext i8 %30 to i32, !dbg !9033
  %and = and i32 %conv, 7, !dbg !9036
  %tobool19 = icmp ne i32 %and, 0, !dbg !9036
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !9037

if.then20:                                        ; preds = %for.body17
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9038
  %recalc21 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 103, !dbg !9039
  %32 = load i8, i8* %recalc21, align 1, !dbg !9040
  %conv22 = zext i8 %32 to i32, !dbg !9040
  %or = or i32 %conv22, 4, !dbg !9040
  %conv23 = trunc i32 %or to i8, !dbg !9040
  store i8 %conv23, i8* %recalc21, align 1, !dbg !9040
  br label %if.end24, !dbg !9038

if.end24:                                         ; preds = %if.then20, %for.body17
  br label %for.inc25, !dbg !9041

for.inc25:                                        ; preds = %if.end24
  %33 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9026
  %call26 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %33), !dbg !9026
  store %struct.Base* %call26, %struct.Base** %base, align 8, !dbg !9026
  br label %for.cond15, !dbg !9042, !llvm.loop !9043

for.end27:                                        ; preds = %for.cond15
  %34 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9045
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 2, !dbg !9047
  %35 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !9047
  %tobool28 = icmp ne %struct.Object* %35, null, !dbg !9045
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !9048

if.then29:                                        ; preds = %for.end27
  %36 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9049
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9050
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9051
  %camera30 = getelementptr inbounds %struct.Scene, %struct.Scene* %38, i32 0, i32 2, !dbg !9052
  %39 = load %struct.Object*, %struct.Object** %camera30, align 8, !dbg !9052
  call void @dag_object_time_update_flags(%struct.Main* %36, %struct.Scene* %37, %struct.Object* %39), !dbg !9053
  br label %if.end31, !dbg !9053

if.end31:                                         ; preds = %if.then29, %for.end27
  br label %if.end32, !dbg !9054

if.end32:                                         ; preds = %if.end31, %for.end11
  %40 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9055
  %group33 = getelementptr inbounds %struct.Main, %struct.Main* %40, i32 0, i32 32, !dbg !9057
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group33, i32 0, i32 0, !dbg !9058
  %41 = load i8*, i8** %first, align 8, !dbg !9058
  %42 = bitcast i8* %41 to %struct.Group*, !dbg !9055
  store %struct.Group* %42, %struct.Group** %group, align 8, !dbg !9059
  br label %for.cond34, !dbg !9060

for.cond34:                                       ; preds = %for.inc57, %if.end32
  %43 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !9061
  %tobool35 = icmp ne %struct.Group* %43, null, !dbg !9063
  br i1 %tobool35, label %for.body36, label %for.end60, !dbg !9063

for.body36:                                       ; preds = %for.cond34
  %44 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !9064
  %id = getelementptr inbounds %struct.Group, %struct.Group* %44, i32 0, i32 0, !dbg !9067
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !9068
  %45 = load i16, i16* %flag, align 2, !dbg !9068
  %conv37 = sext i16 %45 to i32, !dbg !9064
  %and38 = and i32 %conv37, 1024, !dbg !9069
  %tobool39 = icmp ne i32 %and38, 0, !dbg !9069
  br i1 %tobool39, label %if.then40, label %if.end56, !dbg !9070

if.then40:                                        ; preds = %for.body36
  %46 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !9071
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %46, i32 0, i32 1, !dbg !9074
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !9075
  %47 = load i8*, i8** %first41, align 8, !dbg !9075
  %48 = bitcast i8* %47 to %struct.GroupObject*, !dbg !9071
  store %struct.GroupObject* %48, %struct.GroupObject** %go, align 8, !dbg !9076
  br label %for.cond42, !dbg !9077

for.cond42:                                       ; preds = %for.inc49, %if.then40
  %49 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9078
  %tobool43 = icmp ne %struct.GroupObject* %49, null, !dbg !9080
  br i1 %tobool43, label %for.body44, label %for.end50, !dbg !9080

for.body44:                                       ; preds = %for.cond42
  %50 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9081
  %ob45 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %50, i32 0, i32 2, !dbg !9083
  %51 = load %struct.Object*, %struct.Object** %ob45, align 8, !dbg !9083
  %recalc46 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 103, !dbg !9084
  %52 = load i8, i8* %recalc46, align 1, !dbg !9084
  %conv47 = zext i8 %52 to i16, !dbg !9081
  %53 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9085
  %recalc48 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %53, i32 0, i32 4, !dbg !9086
  store i16 %conv47, i16* %recalc48, align 8, !dbg !9087
  br label %for.inc49, !dbg !9088

for.inc49:                                        ; preds = %for.body44
  %54 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9089
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %54, i32 0, i32 0, !dbg !9090
  %55 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !9090
  store %struct.GroupObject* %55, %struct.GroupObject** %go, align 8, !dbg !9091
  br label %for.cond42, !dbg !9092, !llvm.loop !9093

for.end50:                                        ; preds = %for.cond42
  %56 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !9095
  %id51 = getelementptr inbounds %struct.Group, %struct.Group* %56, i32 0, i32 0, !dbg !9096
  %flag52 = getelementptr inbounds %struct.ID, %struct.ID* %id51, i32 0, i32 5, !dbg !9097
  %57 = load i16, i16* %flag52, align 2, !dbg !9098
  %conv53 = sext i16 %57 to i32, !dbg !9098
  %and54 = and i32 %conv53, -1025, !dbg !9098
  %conv55 = trunc i32 %and54 to i16, !dbg !9098
  store i16 %conv55, i16* %flag52, align 2, !dbg !9098
  br label %if.end56, !dbg !9099

if.end56:                                         ; preds = %for.end50, %for.body36
  br label %for.inc57, !dbg !9100

for.inc57:                                        ; preds = %if.end56
  %58 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !9101
  %id58 = getelementptr inbounds %struct.Group, %struct.Group* %58, i32 0, i32 0, !dbg !9102
  %next59 = getelementptr inbounds %struct.ID, %struct.ID* %id58, i32 0, i32 0, !dbg !9103
  %59 = load i8*, i8** %next59, align 8, !dbg !9103
  %60 = bitcast i8* %59 to %struct.Group*, !dbg !9101
  store %struct.Group* %60, %struct.Group** %group, align 8, !dbg !9104
  br label %for.cond34, !dbg !9105, !llvm.loop !9106

for.end60:                                        ; preds = %for.cond34
  %61 = load i8, i8* %do_invisible_flush.addr, align 1, !dbg !9108
  %tobool61 = icmp ne i8 %61, 0, !dbg !9108
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !9110

if.then62:                                        ; preds = %for.end60
  %62 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9111
  %63 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9113
  call void @dag_invisible_dependencies_check_flush(%struct.Main* %62, %struct.Scene* %63), !dbg !9114
  br label %if.end63, !dbg !9115

if.end63:                                         ; preds = %if.then62, %for.end60
  ret void, !dbg !9116
}

declare dso_local %struct.Base* @_setlooper_base_step(%struct.Scene**, %struct.Base*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_object_time_update_flags(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !9117 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %adt117 = alloca %struct.AnimData*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9120, metadata !DIExpression()), !dbg !9121
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9122, metadata !DIExpression()), !dbg !9123
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9126
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 106, !dbg !9128
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !9129
  %1 = load i8*, i8** %first, align 8, !dbg !9129
  %tobool = icmp ne i8* %1, null, !dbg !9126
  br i1 %tobool, label %if.then, label %if.end43, !dbg !9130

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !9131, metadata !DIExpression()), !dbg !9133
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9134
  %constraints1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 106, !dbg !9136
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints1, i32 0, i32 0, !dbg !9137
  %3 = load i8*, i8** %first2, align 8, !dbg !9137
  %4 = bitcast i8* %3 to %struct.bConstraint*, !dbg !9134
  store %struct.bConstraint* %4, %struct.bConstraint** %con, align 8, !dbg !9138
  br label %for.cond, !dbg !9139

for.cond:                                         ; preds = %for.inc40, %if.then
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9140
  %tobool3 = icmp ne %struct.bConstraint* %5, null, !dbg !9142
  br i1 %tobool3, label %for.body, label %for.end42, !dbg !9142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !9143, metadata !DIExpression()), !dbg !9145
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9146
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %6), !dbg !9147
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9145
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !9148, metadata !DIExpression()), !dbg !9149
  %7 = bitcast %struct.ListBase* %targets to i8*, !dbg !9149
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false), !dbg !9149
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9150, metadata !DIExpression()), !dbg !9151
  %8 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9152
  %tobool4 = icmp ne %struct.bConstraintTypeInfo* %8, null, !dbg !9152
  br i1 %tobool4, label %if.then5, label %if.end39, !dbg !9154

if.then5:                                         ; preds = %for.body
  %9 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9155
  %type = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %9, i32 0, i32 0, !dbg !9155
  %10 = load i16, i16* %type, align 8, !dbg !9155
  %conv = sext i16 %10 to i32, !dbg !9155
  %cmp = icmp eq i32 %conv, 26, !dbg !9155
  br i1 %cmp, label %if.then16, label %lor.lhs.false, !dbg !9155

lor.lhs.false:                                    ; preds = %if.then5
  %11 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9155
  %type7 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %11, i32 0, i32 0, !dbg !9155
  %12 = load i16, i16* %type7, align 8, !dbg !9155
  %conv8 = sext i16 %12 to i32, !dbg !9155
  %cmp9 = icmp eq i32 %conv8, 27, !dbg !9155
  br i1 %cmp9, label %if.then16, label %lor.lhs.false11, !dbg !9155

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %13 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9155
  %type12 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %13, i32 0, i32 0, !dbg !9155
  %14 = load i16, i16* %type12, align 8, !dbg !9155
  %conv13 = sext i16 %14 to i32, !dbg !9155
  %cmp14 = icmp eq i32 %conv13, 28, !dbg !9155
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !9158

if.then16:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %if.then5
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9159
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 103, !dbg !9161
  %16 = load i8, i8* %recalc, align 1, !dbg !9162
  %conv17 = zext i8 %16 to i32, !dbg !9162
  %or = or i32 %conv17, 1, !dbg !9162
  %conv18 = trunc i32 %or to i8, !dbg !9162
  store i8 %conv18, i8* %recalc, align 1, !dbg !9162
  br label %if.end38, !dbg !9163

if.else:                                          ; preds = %lor.lhs.false11
  %17 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9164
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %17, i32 0, i32 8, !dbg !9166
  %18 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !9166
  %tobool19 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %18, null, !dbg !9164
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !9167

if.then20:                                        ; preds = %if.else
  %19 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9168
  %get_constraint_targets21 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %19, i32 0, i32 8, !dbg !9170
  %20 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets21, align 8, !dbg !9170
  %21 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9171
  %call22 = call i32 %20(%struct.bConstraint* %21, %struct.ListBase* %targets), !dbg !9168
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !9172
  %22 = load i8*, i8** %first23, align 8, !dbg !9172
  %23 = bitcast i8* %22 to %struct.bConstraintTarget*, !dbg !9174
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !9175
  br label %for.cond24, !dbg !9176

for.cond24:                                       ; preds = %for.inc, %if.then20
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9177
  %tobool25 = icmp ne %struct.bConstraintTarget* %24, null, !dbg !9179
  br i1 %tobool25, label %for.body26, label %for.end, !dbg !9179

for.body26:                                       ; preds = %for.cond24
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9180
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %25, i32 0, i32 2, !dbg !9183
  %26 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9183
  %tobool27 = icmp ne %struct.Object* %26, null, !dbg !9180
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !9184

if.then28:                                        ; preds = %for.body26
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9185
  %recalc29 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 103, !dbg !9187
  %28 = load i8, i8* %recalc29, align 1, !dbg !9188
  %conv30 = zext i8 %28 to i32, !dbg !9188
  %or31 = or i32 %conv30, 1, !dbg !9188
  %conv32 = trunc i32 %or31 to i8, !dbg !9188
  store i8 %conv32, i8* %recalc29, align 1, !dbg !9188
  br label %for.end, !dbg !9189

if.end:                                           ; preds = %for.body26
  br label %for.inc, !dbg !9190

for.inc:                                          ; preds = %if.end
  %29 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9191
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %29, i32 0, i32 0, !dbg !9192
  %30 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !9192
  store %struct.bConstraintTarget* %30, %struct.bConstraintTarget** %ct, align 8, !dbg !9193
  br label %for.cond24, !dbg !9194, !llvm.loop !9195

for.end:                                          ; preds = %if.then28, %for.cond24
  %31 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9197
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %31, i32 0, i32 9, !dbg !9199
  %32 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !9199
  %tobool33 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %32, null, !dbg !9197
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !9200

if.then34:                                        ; preds = %for.end
  %33 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9201
  %flush_constraint_targets35 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %33, i32 0, i32 9, !dbg !9202
  %34 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets35, align 8, !dbg !9202
  %35 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9203
  call void %34(%struct.bConstraint* %35, %struct.ListBase* %targets, i8 zeroext 1), !dbg !9201
  br label %if.end36, !dbg !9201

if.end36:                                         ; preds = %if.then34, %for.end
  br label %if.end37, !dbg !9204

if.end37:                                         ; preds = %if.end36, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then16
  br label %if.end39, !dbg !9205

if.end39:                                         ; preds = %if.end38, %for.body
  br label %for.inc40, !dbg !9206

for.inc40:                                        ; preds = %if.end39
  %36 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9207
  %next41 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %36, i32 0, i32 0, !dbg !9208
  %37 = load %struct.bConstraint*, %struct.bConstraint** %next41, align 8, !dbg !9208
  store %struct.bConstraint* %37, %struct.bConstraint** %con, align 8, !dbg !9209
  br label %for.cond, !dbg !9210, !llvm.loop !9211

for.end42:                                        ; preds = %for.cond
  br label %if.end43, !dbg !9213

if.end43:                                         ; preds = %for.end42, %entry
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9214
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 9, !dbg !9216
  %39 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !9216
  %tobool44 = icmp ne %struct.Object* %39, null, !dbg !9214
  br i1 %tobool44, label %if.then45, label %if.end63, !dbg !9217

if.then45:                                        ; preds = %if.end43
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9218
  %parent46 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 9, !dbg !9221
  %41 = load %struct.Object*, %struct.Object** %parent46, align 8, !dbg !9221
  %type47 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 3, !dbg !9222
  %42 = load i16, i16* %type47, align 8, !dbg !9222
  %conv48 = sext i16 %42 to i32, !dbg !9218
  %cmp49 = icmp eq i32 %conv48, 2, !dbg !9223
  br i1 %cmp49, label %if.then57, label %lor.lhs.false51, !dbg !9224

lor.lhs.false51:                                  ; preds = %if.then45
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9225
  %parent52 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 9, !dbg !9226
  %44 = load %struct.Object*, %struct.Object** %parent52, align 8, !dbg !9226
  %type53 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 3, !dbg !9227
  %45 = load i16, i16* %type53, align 8, !dbg !9227
  %conv54 = sext i16 %45 to i32, !dbg !9225
  %cmp55 = icmp eq i32 %conv54, 25, !dbg !9228
  br i1 %cmp55, label %if.then57, label %if.end62, !dbg !9229

if.then57:                                        ; preds = %lor.lhs.false51, %if.then45
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9230
  %recalc58 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 103, !dbg !9231
  %47 = load i8, i8* %recalc58, align 1, !dbg !9232
  %conv59 = zext i8 %47 to i32, !dbg !9232
  %or60 = or i32 %conv59, 1, !dbg !9232
  %conv61 = trunc i32 %or60 to i8, !dbg !9232
  store i8 %conv61, i8* %recalc58, align 1, !dbg !9232
  br label %if.end62, !dbg !9230

if.end62:                                         ; preds = %if.then57, %lor.lhs.false51
  br label %if.end63, !dbg !9233

if.end63:                                         ; preds = %if.end62, %if.end43
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9234
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 1, !dbg !9236
  %49 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9236
  %call64 = call signext i16 @animdata_use_time(%struct.AnimData* %49), !dbg !9237
  %tobool65 = icmp ne i16 %call64, 0, !dbg !9237
  br i1 %tobool65, label %if.then66, label %if.end74, !dbg !9238

if.then66:                                        ; preds = %if.end63
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9239
  %recalc67 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 103, !dbg !9241
  %51 = load i8, i8* %recalc67, align 1, !dbg !9242
  %conv68 = zext i8 %51 to i32, !dbg !9242
  %or69 = or i32 %conv68, 1, !dbg !9242
  %conv70 = trunc i32 %or69 to i8, !dbg !9242
  store i8 %conv70, i8* %recalc67, align 1, !dbg !9242
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9243
  %adt71 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 1, !dbg !9244
  %53 = load %struct.AnimData*, %struct.AnimData** %adt71, align 8, !dbg !9244
  %recalc72 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %53, i32 0, i32 8, !dbg !9245
  %54 = load i32, i32* %recalc72, align 4, !dbg !9246
  %or73 = or i32 %54, 2, !dbg !9246
  store i32 %or73, i32* %recalc72, align 4, !dbg !9246
  br label %if.end74, !dbg !9247

if.end74:                                         ; preds = %if.then66, %if.end63
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9248
  %adt75 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 1, !dbg !9250
  %56 = load %struct.AnimData*, %struct.AnimData** %adt75, align 8, !dbg !9250
  %tobool76 = icmp ne %struct.AnimData* %56, null, !dbg !9251
  br i1 %tobool76, label %land.lhs.true, label %if.end86, !dbg !9252

land.lhs.true:                                    ; preds = %if.end74
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9253
  %type77 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 3, !dbg !9254
  %58 = load i16, i16* %type77, align 8, !dbg !9254
  %conv78 = sext i16 %58 to i32, !dbg !9253
  %cmp79 = icmp eq i32 %conv78, 25, !dbg !9255
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !9256

if.then81:                                        ; preds = %land.lhs.true
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9257
  %recalc82 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 103, !dbg !9258
  %60 = load i8, i8* %recalc82, align 1, !dbg !9259
  %conv83 = zext i8 %60 to i32, !dbg !9259
  %or84 = or i32 %conv83, 2, !dbg !9259
  %conv85 = trunc i32 %or84 to i8, !dbg !9259
  store i8 %conv85, i8* %recalc82, align 1, !dbg !9259
  br label %if.end86, !dbg !9257

if.end86:                                         ; preds = %if.then81, %land.lhs.true, %if.end74
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9260
  %call87 = call i32 @object_modifiers_use_time(%struct.Object* %61), !dbg !9262
  %tobool88 = icmp ne i32 %call87, 0, !dbg !9262
  br i1 %tobool88, label %if.then89, label %if.end94, !dbg !9263

if.then89:                                        ; preds = %if.end86
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9264
  %recalc90 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 103, !dbg !9265
  %63 = load i8, i8* %recalc90, align 1, !dbg !9266
  %conv91 = zext i8 %63 to i32, !dbg !9266
  %or92 = or i32 %conv91, 2, !dbg !9266
  %conv93 = trunc i32 %or92 to i8, !dbg !9266
  store i8 %conv93, i8* %recalc90, align 1, !dbg !9266
  br label %if.end94, !dbg !9264

if.end94:                                         ; preds = %if.then89, %if.end86
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9267
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 18, !dbg !9269
  %65 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !9269
  %tobool95 = icmp ne %struct.bPose* %65, null, !dbg !9270
  br i1 %tobool95, label %land.lhs.true96, label %if.end105, !dbg !9271

land.lhs.true96:                                  ; preds = %if.end94
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9272
  %pose97 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 18, !dbg !9273
  %67 = load %struct.bPose*, %struct.bPose** %pose97, align 8, !dbg !9273
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %67, i32 0, i32 2, !dbg !9274
  %68 = load i16, i16* %flag, align 8, !dbg !9274
  %conv98 = sext i16 %68 to i32, !dbg !9272
  %and = and i32 %conv98, 8, !dbg !9275
  %tobool99 = icmp ne i32 %and, 0, !dbg !9275
  br i1 %tobool99, label %if.then100, label %if.end105, !dbg !9276

if.then100:                                       ; preds = %land.lhs.true96
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9277
  %recalc101 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 103, !dbg !9278
  %70 = load i8, i8* %recalc101, align 1, !dbg !9279
  %conv102 = zext i8 %70 to i32, !dbg !9279
  %or103 = or i32 %conv102, 2, !dbg !9279
  %conv104 = trunc i32 %or103 to i8, !dbg !9279
  store i8 %conv104, i8* %recalc101, align 1, !dbg !9279
  br label %if.end105, !dbg !9277

if.end105:                                        ; preds = %if.then100, %land.lhs.true96, %if.end94
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9280
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 128, !dbg !9282
  %72 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !9282
  %tobool106 = icmp ne %struct.RigidBodyOb* %72, null, !dbg !9280
  br i1 %tobool106, label %land.lhs.true107, label %if.end116, !dbg !9283

land.lhs.true107:                                 ; preds = %if.end105
  %73 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9284
  %call108 = call zeroext i8 @BKE_scene_check_rigidbody_active(%struct.Scene* %73), !dbg !9285
  %conv109 = zext i8 %call108 to i32, !dbg !9285
  %tobool110 = icmp ne i32 %conv109, 0, !dbg !9285
  br i1 %tobool110, label %if.then111, label %if.end116, !dbg !9286

if.then111:                                       ; preds = %land.lhs.true107
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9287
  %recalc112 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 103, !dbg !9288
  %75 = load i8, i8* %recalc112, align 1, !dbg !9289
  %conv113 = zext i8 %75 to i32, !dbg !9289
  %or114 = or i32 %conv113, 1, !dbg !9289
  %conv115 = trunc i32 %or114 to i8, !dbg !9289
  store i8 %conv115, i8* %recalc112, align 1, !dbg !9289
  br label %if.end116, !dbg !9287

if.end116:                                        ; preds = %if.then111, %land.lhs.true107, %if.end105
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt117, metadata !9290, metadata !DIExpression()), !dbg !9292
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9293
  %data = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 19, !dbg !9294
  %77 = load i8*, i8** %data, align 8, !dbg !9294
  %78 = bitcast i8* %77 to %struct.ID*, !dbg !9295
  %call118 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %78), !dbg !9296
  store %struct.AnimData* %call118, %struct.AnimData** %adt117, align 8, !dbg !9292
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !9297, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !9419, metadata !DIExpression()), !dbg !9469
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9470
  %type119 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 3, !dbg !9471
  %80 = load i16, i16* %type119, align 8, !dbg !9471
  %conv120 = sext i16 %80 to i32, !dbg !9470
  switch i32 %conv120, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb142
    i32 3, label %sw.bb142
    i32 4, label %sw.bb158
    i32 22, label %sw.bb173
    i32 5, label %sw.bb189
    i32 0, label %sw.bb199
  ], !dbg !9472

sw.bb:                                            ; preds = %if.end116
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9473
  %data121 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 19, !dbg !9475
  %82 = load i8*, i8** %data121, align 8, !dbg !9475
  %83 = bitcast i8* %82 to %struct.Mesh*, !dbg !9473
  store %struct.Mesh* %83, %struct.Mesh** %me, align 8, !dbg !9476
  %84 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9477
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %84, i32 0, i32 4, !dbg !9479
  %85 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !9479
  %tobool122 = icmp ne %struct.Key* %85, null, !dbg !9477
  br i1 %tobool122, label %if.then123, label %if.end133, !dbg !9480

if.then123:                                       ; preds = %sw.bb
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9481
  %shapeflag = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 114, !dbg !9484
  %87 = load i8, i8* %shapeflag, align 1, !dbg !9484
  %conv124 = zext i8 %87 to i32, !dbg !9481
  %and125 = and i32 %conv124, 1, !dbg !9485
  %tobool126 = icmp ne i32 %and125, 0, !dbg !9485
  br i1 %tobool126, label %if.end132, label %if.then127, !dbg !9486

if.then127:                                       ; preds = %if.then123
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9487
  %recalc128 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 103, !dbg !9489
  %89 = load i8, i8* %recalc128, align 1, !dbg !9490
  %conv129 = zext i8 %89 to i32, !dbg !9490
  %or130 = or i32 %conv129, 2, !dbg !9490
  %conv131 = trunc i32 %or130 to i8, !dbg !9490
  store i8 %conv131, i8* %recalc128, align 1, !dbg !9490
  br label %if.end132, !dbg !9491

if.end132:                                        ; preds = %if.then127, %if.then123
  br label %if.end133, !dbg !9492

if.end133:                                        ; preds = %if.end132, %sw.bb
  %90 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9493
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %90, i32 0, i32 109, !dbg !9495
  %first134 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !9496
  %91 = load i8*, i8** %first134, align 8, !dbg !9496
  %tobool135 = icmp ne i8* %91, null, !dbg !9493
  br i1 %tobool135, label %if.then136, label %if.end141, !dbg !9497

if.then136:                                       ; preds = %if.end133
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9498
  %recalc137 = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 103, !dbg !9499
  %93 = load i8, i8* %recalc137, align 1, !dbg !9500
  %conv138 = zext i8 %93 to i32, !dbg !9500
  %or139 = or i32 %conv138, 2, !dbg !9500
  %conv140 = trunc i32 %or139 to i8, !dbg !9500
  store i8 %conv140, i8* %recalc137, align 1, !dbg !9500
  br label %if.end141, !dbg !9498

if.end141:                                        ; preds = %if.then136, %if.end133
  br label %sw.epilog, !dbg !9501

sw.bb142:                                         ; preds = %if.end116, %if.end116
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9502
  %data143 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 19, !dbg !9503
  %95 = load i8*, i8** %data143, align 8, !dbg !9503
  %96 = bitcast i8* %95 to %struct.Curve*, !dbg !9502
  store %struct.Curve* %96, %struct.Curve** %cu, align 8, !dbg !9504
  %97 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9505
  %key144 = getelementptr inbounds %struct.Curve, %struct.Curve* %97, i32 0, i32 9, !dbg !9507
  %98 = load %struct.Key*, %struct.Key** %key144, align 8, !dbg !9507
  %tobool145 = icmp ne %struct.Key* %98, null, !dbg !9505
  br i1 %tobool145, label %if.then146, label %if.end157, !dbg !9508

if.then146:                                       ; preds = %sw.bb142
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9509
  %shapeflag147 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 114, !dbg !9512
  %100 = load i8, i8* %shapeflag147, align 1, !dbg !9512
  %conv148 = zext i8 %100 to i32, !dbg !9509
  %and149 = and i32 %conv148, 1, !dbg !9513
  %tobool150 = icmp ne i32 %and149, 0, !dbg !9513
  br i1 %tobool150, label %if.end156, label %if.then151, !dbg !9514

if.then151:                                       ; preds = %if.then146
  %101 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9515
  %recalc152 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 103, !dbg !9517
  %102 = load i8, i8* %recalc152, align 1, !dbg !9518
  %conv153 = zext i8 %102 to i32, !dbg !9518
  %or154 = or i32 %conv153, 2, !dbg !9518
  %conv155 = trunc i32 %or154 to i8, !dbg !9518
  store i8 %conv155, i8* %recalc152, align 1, !dbg !9518
  br label %if.end156, !dbg !9519

if.end156:                                        ; preds = %if.then151, %if.then146
  br label %if.end157, !dbg !9520

if.end157:                                        ; preds = %if.end156, %sw.bb142
  br label %sw.epilog, !dbg !9521

sw.bb158:                                         ; preds = %if.end116
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9522
  %data159 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 19, !dbg !9523
  %104 = load i8*, i8** %data159, align 8, !dbg !9523
  %105 = bitcast i8* %104 to %struct.Curve*, !dbg !9522
  store %struct.Curve* %105, %struct.Curve** %cu, align 8, !dbg !9524
  %106 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9525
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %106, i32 0, i32 3, !dbg !9527
  %call160 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %nurb), !dbg !9528
  %conv161 = zext i8 %call160 to i32, !dbg !9528
  %tobool162 = icmp ne i32 %conv161, 0, !dbg !9528
  br i1 %tobool162, label %land.lhs.true163, label %if.end172, !dbg !9529

land.lhs.true163:                                 ; preds = %sw.bb158
  %107 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9530
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %107, i32 0, i32 52, !dbg !9531
  %108 = load i8*, i8** %str, align 8, !dbg !9531
  %tobool164 = icmp ne i8* %108, null, !dbg !9530
  br i1 %tobool164, label %land.lhs.true165, label %if.end172, !dbg !9532

land.lhs.true165:                                 ; preds = %land.lhs.true163
  %109 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9533
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %109, i32 0, i32 55, !dbg !9534
  %110 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !9534
  %tobool166 = icmp ne %struct.VFont* %110, null, !dbg !9533
  br i1 %tobool166, label %if.then167, label %if.end172, !dbg !9535

if.then167:                                       ; preds = %land.lhs.true165
  %111 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9536
  %recalc168 = getelementptr inbounds %struct.Object, %struct.Object* %111, i32 0, i32 103, !dbg !9537
  %112 = load i8, i8* %recalc168, align 1, !dbg !9538
  %conv169 = zext i8 %112 to i32, !dbg !9538
  %or170 = or i32 %conv169, 2, !dbg !9538
  %conv171 = trunc i32 %or170 to i8, !dbg !9538
  store i8 %conv171, i8* %recalc168, align 1, !dbg !9538
  br label %if.end172, !dbg !9536

if.end172:                                        ; preds = %if.then167, %land.lhs.true165, %land.lhs.true163, %sw.bb158
  br label %sw.epilog, !dbg !9539

sw.bb173:                                         ; preds = %if.end116
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9540
  %data174 = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 19, !dbg !9541
  %114 = load i8*, i8** %data174, align 8, !dbg !9541
  %115 = bitcast i8* %114 to %struct.Lattice*, !dbg !9540
  store %struct.Lattice* %115, %struct.Lattice** %lt, align 8, !dbg !9542
  %116 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !9543
  %key175 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %116, i32 0, i32 23, !dbg !9545
  %117 = load %struct.Key*, %struct.Key** %key175, align 8, !dbg !9545
  %tobool176 = icmp ne %struct.Key* %117, null, !dbg !9543
  br i1 %tobool176, label %if.then177, label %if.end188, !dbg !9546

if.then177:                                       ; preds = %sw.bb173
  %118 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9547
  %shapeflag178 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 114, !dbg !9550
  %119 = load i8, i8* %shapeflag178, align 1, !dbg !9550
  %conv179 = zext i8 %119 to i32, !dbg !9547
  %and180 = and i32 %conv179, 1, !dbg !9551
  %tobool181 = icmp ne i32 %and180, 0, !dbg !9551
  br i1 %tobool181, label %if.end187, label %if.then182, !dbg !9552

if.then182:                                       ; preds = %if.then177
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9553
  %recalc183 = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 103, !dbg !9555
  %121 = load i8, i8* %recalc183, align 1, !dbg !9556
  %conv184 = zext i8 %121 to i32, !dbg !9556
  %or185 = or i32 %conv184, 2, !dbg !9556
  %conv186 = trunc i32 %or185 to i8, !dbg !9556
  store i8 %conv186, i8* %recalc183, align 1, !dbg !9556
  br label %if.end187, !dbg !9557

if.end187:                                        ; preds = %if.then182, %if.then177
  br label %if.end188, !dbg !9558

if.end188:                                        ; preds = %if.end187, %sw.bb173
  br label %sw.epilog, !dbg !9559

sw.bb189:                                         ; preds = %if.end116
  %122 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9560
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 55, !dbg !9562
  %123 = load i16, i16* %transflag, align 8, !dbg !9562
  %conv190 = sext i16 %123 to i32, !dbg !9560
  %and191 = and i32 %conv190, 2840, !dbg !9563
  %tobool192 = icmp ne i32 %and191, 0, !dbg !9563
  br i1 %tobool192, label %if.then193, label %if.end198, !dbg !9564

if.then193:                                       ; preds = %sw.bb189
  %124 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9565
  %recalc194 = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 103, !dbg !9566
  %125 = load i8, i8* %recalc194, align 1, !dbg !9567
  %conv195 = zext i8 %125 to i32, !dbg !9567
  %or196 = or i32 %conv195, 2, !dbg !9567
  %conv197 = trunc i32 %or196 to i8, !dbg !9567
  store i8 %conv197, i8* %recalc194, align 1, !dbg !9567
  br label %if.end198, !dbg !9565

if.end198:                                        ; preds = %if.then193, %sw.bb189
  br label %sw.epilog, !dbg !9568

sw.bb199:                                         ; preds = %if.end116
  %126 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9569
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %126, i32 0, i32 88, !dbg !9571
  %127 = load i8, i8* %empty_drawtype, align 1, !dbg !9571
  %conv200 = zext i8 %127 to i32, !dbg !9569
  %cmp201 = icmp eq i32 %conv200, 8, !dbg !9572
  br i1 %cmp201, label %land.lhs.true203, label %if.end216, !dbg !9573

land.lhs.true203:                                 ; preds = %sw.bb199
  %128 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9574
  %data204 = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 19, !dbg !9575
  %129 = load i8*, i8** %data204, align 8, !dbg !9575
  %tobool205 = icmp ne i8* %129, null, !dbg !9574
  br i1 %tobool205, label %if.then206, label %if.end216, !dbg !9576

if.then206:                                       ; preds = %land.lhs.true203
  %130 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9577
  %data207 = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 19, !dbg !9579
  %131 = load i8*, i8** %data207, align 8, !dbg !9579
  %132 = bitcast i8* %131 to %struct.Image*, !dbg !9577
  %call208 = call zeroext i8 @BKE_image_is_animated(%struct.Image* %132), !dbg !9580
  %tobool209 = icmp ne i8 %call208, 0, !dbg !9580
  br i1 %tobool209, label %if.then210, label %if.end215, !dbg !9581

if.then210:                                       ; preds = %if.then206
  %133 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9582
  %recalc211 = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 103, !dbg !9583
  %134 = load i8, i8* %recalc211, align 1, !dbg !9584
  %conv212 = zext i8 %134 to i32, !dbg !9584
  %or213 = or i32 %conv212, 2, !dbg !9584
  %conv214 = trunc i32 %or213 to i8, !dbg !9584
  store i8 %conv214, i8* %recalc211, align 1, !dbg !9584
  br label %if.end215, !dbg !9582

if.end215:                                        ; preds = %if.then210, %if.then206
  br label %if.end216, !dbg !9585

if.end216:                                        ; preds = %if.end215, %land.lhs.true203, %sw.bb199
  br label %sw.epilog, !dbg !9586

sw.epilog:                                        ; preds = %if.end116, %if.end216, %if.end198, %if.end188, %if.end172, %if.end157, %if.end141
  %135 = load %struct.AnimData*, %struct.AnimData** %adt117, align 8, !dbg !9587
  %call217 = call signext i16 @animdata_use_time(%struct.AnimData* %135), !dbg !9589
  %tobool218 = icmp ne i16 %call217, 0, !dbg !9589
  br i1 %tobool218, label %if.then219, label %if.end226, !dbg !9590

if.then219:                                       ; preds = %sw.epilog
  %136 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9591
  %recalc220 = getelementptr inbounds %struct.Object, %struct.Object* %136, i32 0, i32 103, !dbg !9593
  %137 = load i8, i8* %recalc220, align 1, !dbg !9594
  %conv221 = zext i8 %137 to i32, !dbg !9594
  %or222 = or i32 %conv221, 2, !dbg !9594
  %conv223 = trunc i32 %or222 to i8, !dbg !9594
  store i8 %conv223, i8* %recalc220, align 1, !dbg !9594
  %138 = load %struct.AnimData*, %struct.AnimData** %adt117, align 8, !dbg !9595
  %recalc224 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %138, i32 0, i32 8, !dbg !9596
  %139 = load i32, i32* %recalc224, align 4, !dbg !9597
  %or225 = or i32 %139, 2, !dbg !9597
  store i32 %or225, i32* %recalc224, align 4, !dbg !9597
  br label %if.end226, !dbg !9598

if.end226:                                        ; preds = %if.then219, %sw.epilog
  %140 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9599
  %particlesystem227 = getelementptr inbounds %struct.Object, %struct.Object* %140, i32 0, i32 109, !dbg !9601
  %first228 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem227, i32 0, i32 0, !dbg !9602
  %141 = load i8*, i8** %first228, align 8, !dbg !9602
  %tobool229 = icmp ne i8* %141, null, !dbg !9599
  br i1 %tobool229, label %if.then230, label %if.end247, !dbg !9603

if.then230:                                       ; preds = %if.end226
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9604, metadata !DIExpression()), !dbg !9606
  %142 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9607
  %particlesystem231 = getelementptr inbounds %struct.Object, %struct.Object* %142, i32 0, i32 109, !dbg !9608
  %first232 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem231, i32 0, i32 0, !dbg !9609
  %143 = load i8*, i8** %first232, align 8, !dbg !9609
  %144 = bitcast i8* %143 to %struct.ParticleSystem*, !dbg !9607
  store %struct.ParticleSystem* %144, %struct.ParticleSystem** %psys, align 8, !dbg !9606
  br label %for.cond233, !dbg !9610

for.cond233:                                      ; preds = %for.inc244, %if.then230
  %145 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9611
  %tobool234 = icmp ne %struct.ParticleSystem* %145, null, !dbg !9614
  br i1 %tobool234, label %for.body235, label %for.end246, !dbg !9614

for.body235:                                      ; preds = %for.cond233
  %146 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9615
  %147 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9618
  %call236 = call i32 @psys_check_enabled(%struct.Object* %146, %struct.ParticleSystem* %147), !dbg !9619
  %tobool237 = icmp ne i32 %call236, 0, !dbg !9619
  br i1 %tobool237, label %if.then238, label %if.end243, !dbg !9620

if.then238:                                       ; preds = %for.body235
  %148 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9621
  %recalc239 = getelementptr inbounds %struct.Object, %struct.Object* %148, i32 0, i32 103, !dbg !9623
  %149 = load i8, i8* %recalc239, align 1, !dbg !9624
  %conv240 = zext i8 %149 to i32, !dbg !9624
  %or241 = or i32 %conv240, 2, !dbg !9624
  %conv242 = trunc i32 %or241 to i8, !dbg !9624
  store i8 %conv242, i8* %recalc239, align 1, !dbg !9624
  br label %for.end246, !dbg !9625

if.end243:                                        ; preds = %for.body235
  br label %for.inc244, !dbg !9626

for.inc244:                                       ; preds = %if.end243
  %150 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9627
  %next245 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %150, i32 0, i32 0, !dbg !9628
  %151 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next245, align 8, !dbg !9628
  store %struct.ParticleSystem* %151, %struct.ParticleSystem** %psys, align 8, !dbg !9629
  br label %for.cond233, !dbg !9630, !llvm.loop !9631

for.end246:                                       ; preds = %if.then238, %for.cond233
  br label %if.end247, !dbg !9633

if.end247:                                        ; preds = %for.end246, %if.end226
  %152 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9634
  %recalc248 = getelementptr inbounds %struct.Object, %struct.Object* %152, i32 0, i32 103, !dbg !9636
  %153 = load i8, i8* %recalc248, align 1, !dbg !9636
  %conv249 = zext i8 %153 to i32, !dbg !9634
  %and250 = and i32 %conv249, 1, !dbg !9637
  %tobool251 = icmp ne i32 %and250, 0, !dbg !9637
  br i1 %tobool251, label %if.then252, label %if.end253, !dbg !9638

if.then252:                                       ; preds = %if.end247
  %154 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9639
  %155 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9640
  %id = getelementptr inbounds %struct.Object, %struct.Object* %155, i32 0, i32 0, !dbg !9641
  call void @lib_id_recalc_tag(%struct.Main* %154, %struct.ID* %id), !dbg !9642
  br label %if.end253, !dbg !9642

if.end253:                                        ; preds = %if.then252, %if.end247
  %156 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9643
  %recalc254 = getelementptr inbounds %struct.Object, %struct.Object* %156, i32 0, i32 103, !dbg !9645
  %157 = load i8, i8* %recalc254, align 1, !dbg !9645
  %conv255 = zext i8 %157 to i32, !dbg !9643
  %and256 = and i32 %conv255, 2, !dbg !9646
  %tobool257 = icmp ne i32 %and256, 0, !dbg !9646
  br i1 %tobool257, label %if.then258, label %if.end260, !dbg !9647

if.then258:                                       ; preds = %if.end253
  %158 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9648
  %159 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9649
  %id259 = getelementptr inbounds %struct.Object, %struct.Object* %159, i32 0, i32 0, !dbg !9650
  call void @lib_id_recalc_data_tag(%struct.Main* %158, %struct.ID* %id259), !dbg !9651
  br label %if.end260, !dbg !9651

if.end260:                                        ; preds = %if.then258, %if.end253
  ret void, !dbg !9652
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_group_update_flags(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Group* %group, i8 zeroext %do_time) #0 !dbg !9653 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %group.addr = alloca %struct.Group*, align 8
  %do_time.addr = alloca i8, align 1
  %go = alloca %struct.GroupObject*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9656, metadata !DIExpression()), !dbg !9657
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store %struct.Group* %group, %struct.Group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Group** %group.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store i8 %do_time, i8* %do_time.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_time.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !9664, metadata !DIExpression()), !dbg !9665
  %0 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !9666
  %id = getelementptr inbounds %struct.Group, %struct.Group* %0, i32 0, i32 0, !dbg !9668
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !9669
  %1 = load i16, i16* %flag, align 2, !dbg !9669
  %conv = sext i16 %1 to i32, !dbg !9666
  %and = and i32 %conv, 1024, !dbg !9670
  %tobool = icmp ne i32 %and, 0, !dbg !9670
  br i1 %tobool, label %if.then, label %if.end, !dbg !9671

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9672

if.end:                                           ; preds = %entry
  %2 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !9673
  %id1 = getelementptr inbounds %struct.Group, %struct.Group* %2, i32 0, i32 0, !dbg !9674
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !9675
  %3 = load i16, i16* %flag2, align 2, !dbg !9676
  %conv3 = sext i16 %3 to i32, !dbg !9676
  %or = or i32 %conv3, 1024, !dbg !9676
  %conv4 = trunc i32 %or to i16, !dbg !9676
  store i16 %conv4, i16* %flag2, align 2, !dbg !9676
  %4 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !9677
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %4, i32 0, i32 1, !dbg !9679
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !9680
  %5 = load i8*, i8** %first, align 8, !dbg !9680
  %6 = bitcast i8* %5 to %struct.GroupObject*, !dbg !9677
  store %struct.GroupObject* %6, %struct.GroupObject** %go, align 8, !dbg !9681
  br label %for.cond, !dbg !9682

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9683
  %tobool5 = icmp ne %struct.GroupObject* %7, null, !dbg !9685
  br i1 %tobool5, label %for.body, label %for.end, !dbg !9685

for.body:                                         ; preds = %for.cond
  %8 = load i8, i8* %do_time.addr, align 1, !dbg !9686
  %tobool6 = icmp ne i8 %8, 0, !dbg !9686
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9689

if.then7:                                         ; preds = %for.body
  %9 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9690
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9691
  %11 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9692
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %11, i32 0, i32 2, !dbg !9693
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9693
  call void @dag_object_time_update_flags(%struct.Main* %9, %struct.Scene* %10, %struct.Object* %12), !dbg !9694
  br label %if.end8, !dbg !9694

if.end8:                                          ; preds = %if.then7, %for.body
  %13 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9695
  %ob9 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %13, i32 0, i32 2, !dbg !9697
  %14 = load %struct.Object*, %struct.Object** %ob9, align 8, !dbg !9697
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 112, !dbg !9698
  %15 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !9698
  %tobool10 = icmp ne %struct.Group* %15, null, !dbg !9695
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !9699

if.then11:                                        ; preds = %if.end8
  %16 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9700
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9701
  %18 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9702
  %ob12 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %18, i32 0, i32 2, !dbg !9703
  %19 = load %struct.Object*, %struct.Object** %ob12, align 8, !dbg !9703
  %dup_group13 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 112, !dbg !9704
  %20 = load %struct.Group*, %struct.Group** %dup_group13, align 8, !dbg !9704
  %21 = load i8, i8* %do_time.addr, align 1, !dbg !9705
  call void @dag_group_update_flags(%struct.Main* %16, %struct.Scene* %17, %struct.Group* %20, i8 zeroext %21), !dbg !9706
  br label %if.end14, !dbg !9706

if.end14:                                         ; preds = %if.then11, %if.end8
  br label %for.inc, !dbg !9707

for.inc:                                          ; preds = %if.end14
  %22 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9708
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %22, i32 0, i32 0, !dbg !9709
  %23 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !9709
  store %struct.GroupObject* %23, %struct.GroupObject** %go, align 8, !dbg !9710
  br label %for.cond, !dbg !9711, !llvm.loop !9712

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_invisible_dependencies_check_flush(%struct.Main* %bmain, %struct.Scene* %scene) #0 !dbg !9715 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9720
  %call = call i32 @DAG_id_type_tagged(%struct.Main* %0, i16 signext 16975), !dbg !9722
  %tobool = icmp ne i32 %call, 0, !dbg !9722
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9723

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9724
  %call1 = call i32 @DAG_id_type_tagged(%struct.Main* %1, i16 signext 17741), !dbg !9725
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9725
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !9726

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9727
  %call4 = call i32 @DAG_id_type_tagged(%struct.Main* %2, i16 signext 21827), !dbg !9728
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9728
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !9729

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %3 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9730
  %call7 = call i32 @DAG_id_type_tagged(%struct.Main* %3, i16 signext 16973), !dbg !9731
  %tobool8 = icmp ne i32 %call7, 0, !dbg !9731
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !9732

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9733
  %call10 = call i32 @DAG_id_type_tagged(%struct.Main* %4, i16 signext 21580), !dbg !9734
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9734
  br i1 %tobool11, label %if.then, label %if.end, !dbg !9735

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9736
  call void @dag_invisible_dependencies_flush(%struct.Scene* %5), !dbg !9738
  br label %if.end, !dbg !9739

if.end:                                           ; preds = %if.then, %lor.lhs.false9
  ret void, !dbg !9740
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_on_visible_update(%struct.Main* %bmain, i8 zeroext %do_time) #0 !dbg !9741 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %do_time.addr = alloca i8, align 1
  %listbase = alloca %struct.ListBase, align 8
  %dsl = alloca %struct.DagSceneLayer*, align 8
  %scene = alloca %struct.Scene*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %node = alloca %struct.DagNode*, align 8
  %lay = alloca i32, align 4
  %oblay = alloca i32, align 4
  %mask74 = alloca %struct.Mask*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i8 %do_time, i8* %do_time.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_time.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.declare(metadata %struct.ListBase* %listbase, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata %struct.DagSceneLayer** %dsl, metadata !9750, metadata !DIExpression()), !dbg !9760
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9761
  call void @dag_current_scene_layers(%struct.Main* %0, %struct.ListBase* %listbase), !dbg !9762
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %listbase, i32 0, i32 0, !dbg !9763
  %1 = load i8*, i8** %first, align 8, !dbg !9763
  %2 = bitcast i8* %1 to %struct.DagSceneLayer*, !dbg !9765
  store %struct.DagSceneLayer* %2, %struct.DagSceneLayer** %dsl, align 8, !dbg !9766
  br label %for.cond, !dbg !9767

for.cond:                                         ; preds = %for.inc69, %entry
  %3 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !9768
  %tobool = icmp ne %struct.DagSceneLayer* %3, null, !dbg !9770
  br i1 %tobool, label %for.body, label %for.end70, !dbg !9770

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9771, metadata !DIExpression()), !dbg !9773
  %4 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !9774
  %scene1 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %4, i32 0, i32 2, !dbg !9775
  %5 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !9775
  store %struct.Scene* %5, %struct.Scene** %scene, align 8, !dbg !9773
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !9776, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9778, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !9782, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !9784, metadata !DIExpression()), !dbg !9785
  %6 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !9786
  %layer = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %6, i32 0, i32 3, !dbg !9787
  %7 = load i32, i32* %layer, align 8, !dbg !9787
  store i32 %7, i32* %lay, align 4, !dbg !9785
  call void @llvm.dbg.declare(metadata i32* %oblay, metadata !9788, metadata !DIExpression()), !dbg !9789
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9790
  store %struct.Scene* %8, %struct.Scene** %sce_iter, align 8, !dbg !9792
  br label %for.cond2, !dbg !9793

for.cond2:                                        ; preds = %for.inc, %for.body
  %9 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9794
  %tobool3 = icmp ne %struct.Scene* %9, null, !dbg !9796
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !9796

for.body4:                                        ; preds = %for.cond2
  %10 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9797
  %11 = load i32, i32* %lay, align 4, !dbg !9798
  call void @dag_scene_flush_layers(%struct.Scene* %10, i32 %11), !dbg !9799
  br label %for.inc, !dbg !9799

for.inc:                                          ; preds = %for.body4
  %12 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9800
  %set = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 4, !dbg !9801
  %13 = load %struct.Scene*, %struct.Scene** %set, align 8, !dbg !9801
  store %struct.Scene* %13, %struct.Scene** %sce_iter, align 8, !dbg !9802
  br label %for.cond2, !dbg !9803, !llvm.loop !9804

for.end:                                          ; preds = %for.cond2
  %14 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9806
  call void @BKE_main_id_tag_idcode(%struct.Main* %14, i16 signext 21063, i8 zeroext 0), !dbg !9807
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9808
  store %struct.Scene* %15, %struct.Scene** %sce_iter, align 8, !dbg !9808
  %call = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !9808
  store %struct.Base* %call, %struct.Base** %base, align 8, !dbg !9808
  br label %for.cond5, !dbg !9808

for.cond5:                                        ; preds = %for.inc64, %for.end
  %16 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9810
  %tobool6 = icmp ne %struct.Base* %16, null, !dbg !9812
  br i1 %tobool6, label %for.body7, label %for.end66, !dbg !9812

for.body7:                                        ; preds = %for.cond5
  %17 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9813
  %object = getelementptr inbounds %struct.Base, %struct.Base* %17, i32 0, i32 7, !dbg !9815
  %18 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9815
  store %struct.Object* %18, %struct.Object** %ob, align 8, !dbg !9816
  %19 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9817
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 31, !dbg !9818
  %20 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !9818
  %tobool8 = icmp ne %struct.DagForest* %20, null, !dbg !9819
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !9819

cond.true:                                        ; preds = %for.body7
  %21 = load %struct.Scene*, %struct.Scene** %sce_iter, align 8, !dbg !9820
  %theDag9 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 31, !dbg !9821
  %22 = load %struct.DagForest*, %struct.DagForest** %theDag9, align 8, !dbg !9821
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9822
  %24 = bitcast %struct.Object* %23 to i8*, !dbg !9822
  %call10 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %22, i8* %24), !dbg !9823
  br label %cond.end, !dbg !9819

cond.false:                                       ; preds = %for.body7
  br label %cond.end, !dbg !9819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.DagNode* [ %call10, %cond.true ], [ null, %cond.false ], !dbg !9819
  store %struct.DagNode* %cond, %struct.DagNode** %node, align 8, !dbg !9824
  %25 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !9825
  %tobool11 = icmp ne %struct.DagNode* %25, null, !dbg !9826
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !9826

cond.true12:                                      ; preds = %cond.end
  %26 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !9827
  %lay13 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %26, i32 0, i32 8, !dbg !9828
  %27 = load i32, i32* %lay13, align 4, !dbg !9828
  br label %cond.end16, !dbg !9826

cond.false14:                                     ; preds = %cond.end
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9829
  %lay15 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 52, !dbg !9830
  %29 = load i32, i32* %lay15, align 8, !dbg !9830
  br label %cond.end16, !dbg !9826

cond.end16:                                       ; preds = %cond.false14, %cond.true12
  %cond17 = phi i32 [ %27, %cond.true12 ], [ %29, %cond.false14 ], !dbg !9826
  store i32 %cond17, i32* %oblay, align 4, !dbg !9831
  %30 = load i32, i32* %oblay, align 4, !dbg !9832
  %31 = load i32, i32* %lay, align 4, !dbg !9834
  %and = and i32 %30, %31, !dbg !9835
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9836
  %lay_updated = getelementptr inbounds %struct.Scene, %struct.Scene* %32, i32 0, i32 14, !dbg !9837
  %33 = load i32, i32* %lay_updated, align 8, !dbg !9837
  %neg = xor i32 %33, -1, !dbg !9838
  %and18 = and i32 %and, %neg, !dbg !9839
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9839
  br i1 %tobool19, label %if.then, label %if.end63, !dbg !9840

if.then:                                          ; preds = %cond.end16
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 3, !dbg !9841
  %35 = load i16, i16* %type, align 8, !dbg !9841
  %conv = sext i16 %35 to i32, !dbg !9841
  %cmp = icmp eq i32 %conv, 1, !dbg !9841
  br i1 %cmp, label %if.then45, label %lor.lhs.false, !dbg !9841

lor.lhs.false:                                    ; preds = %if.then
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !9841
  %37 = load i16, i16* %type21, align 8, !dbg !9841
  %conv22 = sext i16 %37 to i32, !dbg !9841
  %cmp23 = icmp eq i32 %conv22, 2, !dbg !9841
  br i1 %cmp23, label %if.then45, label %lor.lhs.false25, !dbg !9841

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type26 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 3, !dbg !9841
  %39 = load i16, i16* %type26, align 8, !dbg !9841
  %conv27 = sext i16 %39 to i32, !dbg !9841
  %cmp28 = icmp eq i32 %conv27, 3, !dbg !9841
  br i1 %cmp28, label %if.then45, label %lor.lhs.false30, !dbg !9841

lor.lhs.false30:                                  ; preds = %lor.lhs.false25
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type31 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 3, !dbg !9841
  %41 = load i16, i16* %type31, align 8, !dbg !9841
  %conv32 = sext i16 %41 to i32, !dbg !9841
  %cmp33 = icmp eq i32 %conv32, 4, !dbg !9841
  br i1 %cmp33, label %if.then45, label %lor.lhs.false35, !dbg !9841

lor.lhs.false35:                                  ; preds = %lor.lhs.false30
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type36 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 3, !dbg !9841
  %43 = load i16, i16* %type36, align 8, !dbg !9841
  %conv37 = sext i16 %43 to i32, !dbg !9841
  %cmp38 = icmp eq i32 %conv37, 5, !dbg !9841
  br i1 %cmp38, label %if.then45, label %lor.lhs.false40, !dbg !9841

lor.lhs.false40:                                  ; preds = %lor.lhs.false35
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9841
  %type41 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 3, !dbg !9841
  %45 = load i16, i16* %type41, align 8, !dbg !9841
  %conv42 = sext i16 %45 to i32, !dbg !9841
  %cmp43 = icmp eq i32 %conv42, 22, !dbg !9841
  br i1 %cmp43, label %if.then45, label %if.end, !dbg !9844

if.then45:                                        ; preds = %lor.lhs.false40, %lor.lhs.false35, %lor.lhs.false30, %lor.lhs.false25, %lor.lhs.false, %if.then
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9845
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 103, !dbg !9847
  %47 = load i8, i8* %recalc, align 1, !dbg !9848
  %conv46 = zext i8 %47 to i32, !dbg !9848
  %or = or i32 %conv46, 2, !dbg !9848
  %conv47 = trunc i32 %or to i8, !dbg !9848
  store i8 %conv47, i8* %recalc, align 1, !dbg !9848
  %48 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9849
  %49 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9850
  %id = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 0, !dbg !9851
  call void @lib_id_recalc_tag(%struct.Main* %48, %struct.ID* %id), !dbg !9852
  br label %if.end, !dbg !9853

if.end:                                           ; preds = %if.then45, %lor.lhs.false40
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9854
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 11, !dbg !9856
  %51 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !9856
  %tobool48 = icmp ne %struct.Object* %51, null, !dbg !9854
  br i1 %tobool48, label %land.lhs.true, label %if.end58, !dbg !9857

land.lhs.true:                                    ; preds = %if.end
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9858
  %proxy_group = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 12, !dbg !9859
  %53 = load %struct.Object*, %struct.Object** %proxy_group, align 8, !dbg !9859
  %cmp49 = icmp eq %struct.Object* %53, null, !dbg !9860
  br i1 %cmp49, label %if.then51, label %if.end58, !dbg !9861

if.then51:                                        ; preds = %land.lhs.true
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9862
  %proxy52 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 11, !dbg !9864
  %55 = load %struct.Object*, %struct.Object** %proxy52, align 8, !dbg !9864
  %recalc53 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 103, !dbg !9865
  %56 = load i8, i8* %recalc53, align 1, !dbg !9866
  %conv54 = zext i8 %56 to i32, !dbg !9866
  %or55 = or i32 %conv54, 2, !dbg !9866
  %conv56 = trunc i32 %or55 to i8, !dbg !9866
  store i8 %conv56, i8* %recalc53, align 1, !dbg !9866
  %57 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9867
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9868
  %id57 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 0, !dbg !9869
  call void @lib_id_recalc_tag(%struct.Main* %57, %struct.ID* %id57), !dbg !9870
  br label %if.end58, !dbg !9871

if.end58:                                         ; preds = %if.then51, %land.lhs.true, %if.end
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9872
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 112, !dbg !9874
  %60 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !9874
  %tobool59 = icmp ne %struct.Group* %60, null, !dbg !9872
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !9875

if.then60:                                        ; preds = %if.end58
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9876
  %dup_group61 = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 112, !dbg !9877
  %62 = load %struct.Group*, %struct.Group** %dup_group61, align 8, !dbg !9877
  call void @dag_group_on_visible_update(%struct.Group* %62), !dbg !9878
  br label %if.end62, !dbg !9878

if.end62:                                         ; preds = %if.then60, %if.end58
  br label %if.end63, !dbg !9879

if.end63:                                         ; preds = %if.end62, %cond.end16
  br label %for.inc64, !dbg !9880

for.inc64:                                        ; preds = %if.end63
  %63 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9810
  %call65 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %63), !dbg !9810
  store %struct.Base* %call65, %struct.Base** %base, align 8, !dbg !9810
  br label %for.cond5, !dbg !9881, !llvm.loop !9882

for.end66:                                        ; preds = %for.cond5
  %64 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9884
  call void @BKE_main_id_tag_idcode(%struct.Main* %64, i16 signext 21063, i8 zeroext 0), !dbg !9885
  %65 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9886
  %66 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9887
  %67 = load i32, i32* %lay, align 4, !dbg !9888
  %68 = load i8, i8* %do_time.addr, align 1, !dbg !9889
  call void @DAG_scene_update_flags(%struct.Main* %65, %struct.Scene* %66, i32 %67, i8 zeroext %68, i8 zeroext 1), !dbg !9890
  %69 = load i32, i32* %lay, align 4, !dbg !9891
  %70 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9892
  %lay_updated67 = getelementptr inbounds %struct.Scene, %struct.Scene* %70, i32 0, i32 14, !dbg !9893
  %71 = load i32, i32* %lay_updated67, align 8, !dbg !9894
  %or68 = or i32 %71, %69, !dbg !9894
  store i32 %or68, i32* %lay_updated67, align 8, !dbg !9894
  br label %for.inc69, !dbg !9895

for.inc69:                                        ; preds = %for.end66
  %72 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !9896
  %next = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %72, i32 0, i32 0, !dbg !9897
  %73 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %next, align 8, !dbg !9897
  store %struct.DagSceneLayer* %73, %struct.DagSceneLayer** %dsl, align 8, !dbg !9898
  br label %for.cond, !dbg !9899, !llvm.loop !9900

for.end70:                                        ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %listbase), !dbg !9902
  %74 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9903
  call void @DAG_id_type_tag(%struct.Main* %74, i16 signext 16975), !dbg !9904
  %75 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9905
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %75, i32 0, i32 43, !dbg !9907
  %first71 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !9908
  %76 = load i8*, i8** %first71, align 8, !dbg !9908
  %tobool72 = icmp ne i8* %76, null, !dbg !9905
  br i1 %tobool72, label %if.then73, label %if.end85, !dbg !9909

if.then73:                                        ; preds = %for.end70
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask74, metadata !9910, metadata !DIExpression()), !dbg !9926
  %77 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9927
  %mask75 = getelementptr inbounds %struct.Main, %struct.Main* %77, i32 0, i32 43, !dbg !9929
  %first76 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask75, i32 0, i32 0, !dbg !9930
  %78 = load i8*, i8** %first76, align 8, !dbg !9930
  %79 = bitcast i8* %78 to %struct.Mask*, !dbg !9927
  store %struct.Mask* %79, %struct.Mask** %mask74, align 8, !dbg !9931
  br label %for.cond77, !dbg !9932

for.cond77:                                       ; preds = %for.inc81, %if.then73
  %80 = load %struct.Mask*, %struct.Mask** %mask74, align 8, !dbg !9933
  %tobool78 = icmp ne %struct.Mask* %80, null, !dbg !9935
  br i1 %tobool78, label %for.body79, label %for.end84, !dbg !9935

for.body79:                                       ; preds = %for.cond77
  %81 = load %struct.Mask*, %struct.Mask** %mask74, align 8, !dbg !9936
  %id80 = getelementptr inbounds %struct.Mask, %struct.Mask* %81, i32 0, i32 0, !dbg !9938
  call void @DAG_id_tag_update(%struct.ID* %id80, i16 signext 0), !dbg !9939
  br label %for.inc81, !dbg !9940

for.inc81:                                        ; preds = %for.body79
  %82 = load %struct.Mask*, %struct.Mask** %mask74, align 8, !dbg !9941
  %id82 = getelementptr inbounds %struct.Mask, %struct.Mask* %82, i32 0, i32 0, !dbg !9942
  %next83 = getelementptr inbounds %struct.ID, %struct.ID* %id82, i32 0, i32 0, !dbg !9943
  %83 = load i8*, i8** %next83, align 8, !dbg !9943
  %84 = bitcast i8* %83 to %struct.Mask*, !dbg !9941
  store %struct.Mask* %84, %struct.Mask** %mask74, align 8, !dbg !9944
  br label %for.cond77, !dbg !9945, !llvm.loop !9946

for.end84:                                        ; preds = %for.cond77
  br label %if.end85, !dbg !9948

if.end85:                                         ; preds = %for.end84, %for.end70
  ret void, !dbg !9949
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_current_scene_layers(%struct.Main* %bmain, %struct.ListBase* %lb) #0 !dbg !9950 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %scene9 = alloca %struct.Scene*, align 8
  %dsl = alloca %struct.DagSceneLayer*, align 8
  %dsl38 = alloca %struct.DagSceneLayer*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9953, metadata !DIExpression()), !dbg !9954
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !9957, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !9961, metadata !DIExpression()), !dbg !9964
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !9965
  call void @BLI_listbase_clear(%struct.ListBase* %0), !dbg !9966
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9967
  %wm1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 40, !dbg !9969
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm1, i32 0, i32 0, !dbg !9970
  %2 = load i8*, i8** %first, align 8, !dbg !9970
  %3 = bitcast i8* %2 to %struct.wmWindowManager*, !dbg !9967
  store %struct.wmWindowManager* %3, %struct.wmWindowManager** %wm, align 8, !dbg !9971
  %tobool = icmp ne %struct.wmWindowManager* %3, null, !dbg !9971
  br i1 %tobool, label %if.then, label %if.else37, !dbg !9972

if.then:                                          ; preds = %entry
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9973
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 11, !dbg !9975
  call void @BKE_main_id_flag_listbase(%struct.ListBase* %scene, i16 signext 1024, i8 zeroext 1), !dbg !9976
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9977
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %5, i32 0, i32 3, !dbg !9979
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !9980
  %6 = load i8*, i8** %first2, align 8, !dbg !9980
  %7 = bitcast i8* %6 to %struct.wmWindow*, !dbg !9977
  store %struct.wmWindow* %7, %struct.wmWindow** %win, align 8, !dbg !9981
  br label %for.cond, !dbg !9982

for.cond:                                         ; preds = %for.inc34, %if.then
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !9983
  %tobool3 = icmp ne %struct.wmWindow* %8, null, !dbg !9985
  br i1 %tobool3, label %for.body, label %for.end36, !dbg !9985

for.body:                                         ; preds = %for.cond
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !9986
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 3, !dbg !9989
  %10 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !9989
  %tobool4 = icmp ne %struct.bScreen* %10, null, !dbg !9986
  br i1 %tobool4, label %land.lhs.true, label %if.end33, !dbg !9990

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !9991
  %screen5 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %11, i32 0, i32 3, !dbg !9992
  %12 = load %struct.bScreen*, %struct.bScreen** %screen5, align 8, !dbg !9992
  %scene6 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %12, i32 0, i32 5, !dbg !9993
  %13 = load %struct.Scene*, %struct.Scene** %scene6, align 8, !dbg !9993
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 31, !dbg !9994
  %14 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !9994
  %tobool7 = icmp ne %struct.DagForest* %14, null, !dbg !9991
  br i1 %tobool7, label %if.then8, label %if.end33, !dbg !9995

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene9, metadata !9996, metadata !DIExpression()), !dbg !9998
  %15 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !9999
  %screen10 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %15, i32 0, i32 3, !dbg !10000
  %16 = load %struct.bScreen*, %struct.bScreen** %screen10, align 8, !dbg !10000
  %scene11 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %16, i32 0, i32 5, !dbg !10001
  %17 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !10001
  store %struct.Scene* %17, %struct.Scene** %scene9, align 8, !dbg !9998
  call void @llvm.dbg.declare(metadata %struct.DagSceneLayer** %dsl, metadata !10002, metadata !DIExpression()), !dbg !10003
  %18 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10004
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 0, !dbg !10006
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !10007
  %19 = load i16, i16* %flag, align 2, !dbg !10007
  %conv = sext i16 %19 to i32, !dbg !10004
  %and = and i32 %conv, 1024, !dbg !10008
  %tobool12 = icmp ne i32 %and, 0, !dbg !10008
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !10009

if.then13:                                        ; preds = %if.then8
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10010
  %call = call i8* %20(i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i64 0, i64 0)), !dbg !10010
  %21 = bitcast i8* %call to %struct.DagSceneLayer*, !dbg !10010
  store %struct.DagSceneLayer* %21, %struct.DagSceneLayer** %dsl, align 8, !dbg !10012
  %22 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10013
  %23 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10014
  %24 = bitcast %struct.DagSceneLayer* %23 to i8*, !dbg !10014
  call void @BLI_addtail(%struct.ListBase* %22, i8* %24), !dbg !10015
  %25 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10016
  %26 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10017
  %scene14 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %26, i32 0, i32 2, !dbg !10018
  store %struct.Scene* %25, %struct.Scene** %scene14, align 8, !dbg !10019
  %27 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10020
  %screen15 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %27, i32 0, i32 3, !dbg !10021
  %28 = load %struct.bScreen*, %struct.bScreen** %screen15, align 8, !dbg !10021
  %29 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10022
  %call16 = call i32 @BKE_screen_visible_layers(%struct.bScreen* %28, %struct.Scene* %29), !dbg !10023
  %30 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10024
  %layer = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %30, i32 0, i32 3, !dbg !10025
  store i32 %call16, i32* %layer, align 8, !dbg !10026
  %31 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10027
  %id17 = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 0, !dbg !10028
  %flag18 = getelementptr inbounds %struct.ID, %struct.ID* %id17, i32 0, i32 5, !dbg !10029
  %32 = load i16, i16* %flag18, align 2, !dbg !10030
  %conv19 = sext i16 %32 to i32, !dbg !10030
  %and20 = and i32 %conv19, -1025, !dbg !10030
  %conv21 = trunc i32 %and20 to i16, !dbg !10030
  store i16 %conv21, i16* %flag18, align 2, !dbg !10030
  br label %if.end32, !dbg !10031

if.else:                                          ; preds = %if.then8
  %33 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10032
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %33, i32 0, i32 0, !dbg !10035
  %34 = load i8*, i8** %first22, align 8, !dbg !10035
  %35 = bitcast i8* %34 to %struct.DagSceneLayer*, !dbg !10032
  store %struct.DagSceneLayer* %35, %struct.DagSceneLayer** %dsl, align 8, !dbg !10036
  br label %for.cond23, !dbg !10037

for.cond23:                                       ; preds = %for.inc, %if.else
  %36 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10038
  %tobool24 = icmp ne %struct.DagSceneLayer* %36, null, !dbg !10040
  br i1 %tobool24, label %for.body25, label %for.end, !dbg !10040

for.body25:                                       ; preds = %for.cond23
  %37 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10041
  %scene26 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %37, i32 0, i32 2, !dbg !10044
  %38 = load %struct.Scene*, %struct.Scene** %scene26, align 8, !dbg !10044
  %39 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10045
  %cmp = icmp eq %struct.Scene* %38, %39, !dbg !10046
  br i1 %cmp, label %if.then28, label %if.end, !dbg !10047

if.then28:                                        ; preds = %for.body25
  %40 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10048
  %screen29 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %40, i32 0, i32 3, !dbg !10050
  %41 = load %struct.bScreen*, %struct.bScreen** %screen29, align 8, !dbg !10050
  %42 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10051
  %call30 = call i32 @BKE_screen_visible_layers(%struct.bScreen* %41, %struct.Scene* %42), !dbg !10052
  %43 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10053
  %layer31 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %43, i32 0, i32 3, !dbg !10054
  %44 = load i32, i32* %layer31, align 8, !dbg !10055
  %or = or i32 %44, %call30, !dbg !10055
  store i32 %or, i32* %layer31, align 8, !dbg !10055
  br label %for.end, !dbg !10056

if.end:                                           ; preds = %for.body25
  br label %for.inc, !dbg !10057

for.inc:                                          ; preds = %if.end
  %45 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10058
  %next = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %45, i32 0, i32 0, !dbg !10059
  %46 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %next, align 8, !dbg !10059
  store %struct.DagSceneLayer* %46, %struct.DagSceneLayer** %dsl, align 8, !dbg !10060
  br label %for.cond23, !dbg !10061, !llvm.loop !10062

for.end:                                          ; preds = %if.then28, %for.cond23
  br label %if.end32

if.end32:                                         ; preds = %for.end, %if.then13
  br label %if.end33, !dbg !10064

if.end33:                                         ; preds = %if.end32, %land.lhs.true, %for.body
  br label %for.inc34, !dbg !10065

for.inc34:                                        ; preds = %if.end33
  %47 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10066
  %next35 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %47, i32 0, i32 0, !dbg !10067
  %48 = load %struct.wmWindow*, %struct.wmWindow** %next35, align 8, !dbg !10067
  store %struct.wmWindow* %48, %struct.wmWindow** %win, align 8, !dbg !10068
  br label %for.cond, !dbg !10069, !llvm.loop !10070

for.end36:                                        ; preds = %for.cond
  br label %if.end45, !dbg !10072

if.else37:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.DagSceneLayer** %dsl38, metadata !10073, metadata !DIExpression()), !dbg !10075
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10076
  %call39 = call i8* %49(i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i64 0, i64 0)), !dbg !10076
  %50 = bitcast i8* %call39 to %struct.DagSceneLayer*, !dbg !10076
  store %struct.DagSceneLayer* %50, %struct.DagSceneLayer** %dsl38, align 8, !dbg !10075
  %51 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10077
  %52 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl38, align 8, !dbg !10078
  %53 = bitcast %struct.DagSceneLayer* %52 to i8*, !dbg !10078
  call void @BLI_addtail(%struct.ListBase* %51, i8* %53), !dbg !10079
  %54 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10080
  %scene40 = getelementptr inbounds %struct.Main, %struct.Main* %54, i32 0, i32 11, !dbg !10081
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene40, i32 0, i32 0, !dbg !10082
  %55 = load i8*, i8** %first41, align 8, !dbg !10082
  %56 = bitcast i8* %55 to %struct.Scene*, !dbg !10080
  %57 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl38, align 8, !dbg !10083
  %scene42 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %57, i32 0, i32 2, !dbg !10084
  store %struct.Scene* %56, %struct.Scene** %scene42, align 8, !dbg !10085
  %58 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl38, align 8, !dbg !10086
  %scene43 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %58, i32 0, i32 2, !dbg !10087
  %59 = load %struct.Scene*, %struct.Scene** %scene43, align 8, !dbg !10087
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 12, !dbg !10088
  %60 = load i32, i32* %lay, align 8, !dbg !10088
  %61 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl38, align 8, !dbg !10089
  %layer44 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %61, i32 0, i32 3, !dbg !10090
  store i32 %60, i32* %layer44, align 8, !dbg !10091
  br label %if.end45

if.end45:                                         ; preds = %if.else37, %for.end36
  ret void, !dbg !10092
}

; Function Attrs: noinline nounwind uwtable
define internal void @lib_id_recalc_tag(%struct.Main* %bmain, %struct.ID* %id) #0 !dbg !10093 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10098
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 5, !dbg !10099
  %1 = load i16, i16* %flag, align 2, !dbg !10100
  %conv = sext i16 %1 to i32, !dbg !10100
  %or = or i32 %conv, 4096, !dbg !10100
  %conv1 = trunc i32 %or to i16, !dbg !10100
  store i16 %conv1, i16* %flag, align 2, !dbg !10100
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10101
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10102
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !10102
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !10102
  %4 = bitcast i8* %arraydecay to i16*, !dbg !10102
  %5 = load i16, i16* %4, align 8, !dbg !10102
  call void @DAG_id_type_tag(%struct.Main* %2, i16 signext %5), !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_group_on_visible_update(%struct.Group* %group) #0 !dbg !10105 {
entry:
  %group.addr = alloca %struct.Group*, align 8
  %go = alloca %struct.GroupObject*, align 8
  store %struct.Group* %group, %struct.Group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Group** %group.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !10110, metadata !DIExpression()), !dbg !10111
  %0 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !10112
  %id = getelementptr inbounds %struct.Group, %struct.Group* %0, i32 0, i32 0, !dbg !10114
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !10115
  %1 = load i16, i16* %flag, align 2, !dbg !10115
  %conv = sext i16 %1 to i32, !dbg !10112
  %and = and i32 %conv, 1024, !dbg !10116
  %tobool = icmp ne i32 %and, 0, !dbg !10116
  br i1 %tobool, label %if.then, label %if.end, !dbg !10117

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !10118

if.end:                                           ; preds = %entry
  %2 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !10119
  %id1 = getelementptr inbounds %struct.Group, %struct.Group* %2, i32 0, i32 0, !dbg !10120
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !10121
  %3 = load i16, i16* %flag2, align 2, !dbg !10122
  %conv3 = sext i16 %3 to i32, !dbg !10122
  %or = or i32 %conv3, 1024, !dbg !10122
  %conv4 = trunc i32 %or to i16, !dbg !10122
  store i16 %conv4, i16* %flag2, align 2, !dbg !10122
  %4 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !10123
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %4, i32 0, i32 1, !dbg !10125
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !10126
  %5 = load i8*, i8** %first, align 8, !dbg !10126
  %6 = bitcast i8* %5 to %struct.GroupObject*, !dbg !10123
  store %struct.GroupObject* %6, %struct.GroupObject** %go, align 8, !dbg !10127
  br label %for.cond, !dbg !10128

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10129
  %tobool5 = icmp ne %struct.GroupObject* %7, null, !dbg !10131
  br i1 %tobool5, label %for.body, label %for.end, !dbg !10131

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %8, i32 0, i32 2, !dbg !10132
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10132
  %type = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !10132
  %10 = load i16, i16* %type, align 8, !dbg !10132
  %conv6 = sext i16 %10 to i32, !dbg !10132
  %cmp = icmp eq i32 %conv6, 1, !dbg !10132
  br i1 %cmp, label %if.then37, label %lor.lhs.false, !dbg !10132

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob8 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %11, i32 0, i32 2, !dbg !10132
  %12 = load %struct.Object*, %struct.Object** %ob8, align 8, !dbg !10132
  %type9 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !10132
  %13 = load i16, i16* %type9, align 8, !dbg !10132
  %conv10 = sext i16 %13 to i32, !dbg !10132
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !10132
  br i1 %cmp11, label %if.then37, label %lor.lhs.false13, !dbg !10132

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %14 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob14 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %14, i32 0, i32 2, !dbg !10132
  %15 = load %struct.Object*, %struct.Object** %ob14, align 8, !dbg !10132
  %type15 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 3, !dbg !10132
  %16 = load i16, i16* %type15, align 8, !dbg !10132
  %conv16 = sext i16 %16 to i32, !dbg !10132
  %cmp17 = icmp eq i32 %conv16, 3, !dbg !10132
  br i1 %cmp17, label %if.then37, label %lor.lhs.false19, !dbg !10132

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %17 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob20 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %17, i32 0, i32 2, !dbg !10132
  %18 = load %struct.Object*, %struct.Object** %ob20, align 8, !dbg !10132
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 3, !dbg !10132
  %19 = load i16, i16* %type21, align 8, !dbg !10132
  %conv22 = sext i16 %19 to i32, !dbg !10132
  %cmp23 = icmp eq i32 %conv22, 4, !dbg !10132
  br i1 %cmp23, label %if.then37, label %lor.lhs.false25, !dbg !10132

lor.lhs.false25:                                  ; preds = %lor.lhs.false19
  %20 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob26 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %20, i32 0, i32 2, !dbg !10132
  %21 = load %struct.Object*, %struct.Object** %ob26, align 8, !dbg !10132
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 3, !dbg !10132
  %22 = load i16, i16* %type27, align 8, !dbg !10132
  %conv28 = sext i16 %22 to i32, !dbg !10132
  %cmp29 = icmp eq i32 %conv28, 5, !dbg !10132
  br i1 %cmp29, label %if.then37, label %lor.lhs.false31, !dbg !10132

lor.lhs.false31:                                  ; preds = %lor.lhs.false25
  %23 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10132
  %ob32 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %23, i32 0, i32 2, !dbg !10132
  %24 = load %struct.Object*, %struct.Object** %ob32, align 8, !dbg !10132
  %type33 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 3, !dbg !10132
  %25 = load i16, i16* %type33, align 8, !dbg !10132
  %conv34 = sext i16 %25 to i32, !dbg !10132
  %cmp35 = icmp eq i32 %conv34, 22, !dbg !10132
  br i1 %cmp35, label %if.then37, label %if.end50, !dbg !10135

if.then37:                                        ; preds = %lor.lhs.false31, %lor.lhs.false25, %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false, %for.body
  %26 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10136
  %ob38 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %26, i32 0, i32 2, !dbg !10138
  %27 = load %struct.Object*, %struct.Object** %ob38, align 8, !dbg !10138
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 103, !dbg !10139
  %28 = load i8, i8* %recalc, align 1, !dbg !10140
  %conv39 = zext i8 %28 to i32, !dbg !10140
  %or40 = or i32 %conv39, 2, !dbg !10140
  %conv41 = trunc i32 %or40 to i8, !dbg !10140
  store i8 %conv41, i8* %recalc, align 1, !dbg !10140
  %29 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10141
  %ob42 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %29, i32 0, i32 2, !dbg !10142
  %30 = load %struct.Object*, %struct.Object** %ob42, align 8, !dbg !10142
  %id43 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 0, !dbg !10143
  %flag44 = getelementptr inbounds %struct.ID, %struct.ID* %id43, i32 0, i32 5, !dbg !10144
  %31 = load i16, i16* %flag44, align 2, !dbg !10145
  %conv45 = sext i16 %31 to i32, !dbg !10145
  %or46 = or i32 %conv45, 1024, !dbg !10145
  %conv47 = trunc i32 %or46 to i16, !dbg !10145
  store i16 %conv47, i16* %flag44, align 2, !dbg !10145
  %32 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10146
  %33 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10147
  %ob48 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %33, i32 0, i32 2, !dbg !10148
  %34 = load %struct.Object*, %struct.Object** %ob48, align 8, !dbg !10148
  %id49 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 0, !dbg !10149
  call void @lib_id_recalc_tag(%struct.Main* %32, %struct.ID* %id49), !dbg !10150
  br label %if.end50, !dbg !10151

if.end50:                                         ; preds = %if.then37, %lor.lhs.false31
  %35 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10152
  %ob51 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %35, i32 0, i32 2, !dbg !10154
  %36 = load %struct.Object*, %struct.Object** %ob51, align 8, !dbg !10154
  %proxy_from = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 13, !dbg !10155
  %37 = load %struct.Object*, %struct.Object** %proxy_from, align 8, !dbg !10155
  %tobool52 = icmp ne %struct.Object* %37, null, !dbg !10152
  br i1 %tobool52, label %if.then53, label %if.end67, !dbg !10156

if.then53:                                        ; preds = %if.end50
  %38 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10157
  %ob54 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %38, i32 0, i32 2, !dbg !10159
  %39 = load %struct.Object*, %struct.Object** %ob54, align 8, !dbg !10159
  %recalc55 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 103, !dbg !10160
  %40 = load i8, i8* %recalc55, align 1, !dbg !10161
  %conv56 = zext i8 %40 to i32, !dbg !10161
  %or57 = or i32 %conv56, 1, !dbg !10161
  %conv58 = trunc i32 %or57 to i8, !dbg !10161
  store i8 %conv58, i8* %recalc55, align 1, !dbg !10161
  %41 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10162
  %ob59 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %41, i32 0, i32 2, !dbg !10163
  %42 = load %struct.Object*, %struct.Object** %ob59, align 8, !dbg !10163
  %id60 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 0, !dbg !10164
  %flag61 = getelementptr inbounds %struct.ID, %struct.ID* %id60, i32 0, i32 5, !dbg !10165
  %43 = load i16, i16* %flag61, align 2, !dbg !10166
  %conv62 = sext i16 %43 to i32, !dbg !10166
  %or63 = or i32 %conv62, 1024, !dbg !10166
  %conv64 = trunc i32 %or63 to i16, !dbg !10166
  store i16 %conv64, i16* %flag61, align 2, !dbg !10166
  %44 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10167
  %45 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10168
  %ob65 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %45, i32 0, i32 2, !dbg !10169
  %46 = load %struct.Object*, %struct.Object** %ob65, align 8, !dbg !10169
  %id66 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 0, !dbg !10170
  call void @lib_id_recalc_tag(%struct.Main* %44, %struct.ID* %id66), !dbg !10171
  br label %if.end67, !dbg !10172

if.end67:                                         ; preds = %if.then53, %if.end50
  %47 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10173
  %ob68 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %47, i32 0, i32 2, !dbg !10175
  %48 = load %struct.Object*, %struct.Object** %ob68, align 8, !dbg !10175
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 112, !dbg !10176
  %49 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !10176
  %tobool69 = icmp ne %struct.Group* %49, null, !dbg !10173
  br i1 %tobool69, label %if.then70, label %if.end73, !dbg !10177

if.then70:                                        ; preds = %if.end67
  %50 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10178
  %ob71 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %50, i32 0, i32 2, !dbg !10179
  %51 = load %struct.Object*, %struct.Object** %ob71, align 8, !dbg !10179
  %dup_group72 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 112, !dbg !10180
  %52 = load %struct.Group*, %struct.Group** %dup_group72, align 8, !dbg !10180
  call void @dag_group_on_visible_update(%struct.Group* %52), !dbg !10181
  br label %if.end73, !dbg !10181

if.end73:                                         ; preds = %if.then70, %if.end67
  br label %for.inc, !dbg !10182

for.inc:                                          ; preds = %if.end73
  %53 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10183
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %53, i32 0, i32 0, !dbg !10184
  %54 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !10184
  store %struct.GroupObject* %54, %struct.GroupObject** %go, align 8, !dbg !10185
  br label %for.cond, !dbg !10186, !llvm.loop !10187

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10189
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_id_type_tag(%struct.Main* %bmain, i16 signext %idtype) #0 !dbg !10190 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %idtype.addr = alloca i16, align 2
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  %0 = load i16, i16* %idtype.addr, align 2, !dbg !10197
  %conv = sext i16 %0 to i32, !dbg !10197
  %cmp = icmp eq i32 %conv, 21582, !dbg !10199
  br i1 %cmp, label %if.then, label %if.end, !dbg !10200

if.then:                                          ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10201
  call void @DAG_id_type_tag(%struct.Main* %1, i16 signext 16717), !dbg !10203
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10204
  call void @DAG_id_type_tag(%struct.Main* %2, i16 signext 17748), !dbg !10205
  %3 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10206
  call void @DAG_id_type_tag(%struct.Main* %3, i16 signext 16716), !dbg !10207
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10208
  call void @DAG_id_type_tag(%struct.Main* %4, i16 signext 20311), !dbg !10209
  %5 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10210
  call void @DAG_id_type_tag(%struct.Main* %5, i16 signext 17235), !dbg !10211
  br label %if.end, !dbg !10212

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10213
  %id_tag_update = getelementptr inbounds %struct.Main, %struct.Main* %6, i32 0, i32 45, !dbg !10214
  %7 = bitcast i16* %idtype.addr to i8*, !dbg !10215
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10215
  %8 = load i8, i8* %arrayidx, align 2, !dbg !10215
  %idxprom = zext i8 %8 to i64, !dbg !10213
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update, i64 0, i64 %idxprom, !dbg !10213
  store i8 1, i8* %arrayidx2, align 1, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_id_tag_update(%struct.ID* %id, i16 signext %flag) #0 !dbg !10218 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %flag.addr = alloca i16, align 2
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10225
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10226
  %2 = load i16, i16* %flag.addr, align 2, !dbg !10227
  call void @DAG_id_tag_update_ex(%struct.Main* %0, %struct.ID* %1, i16 signext %2), !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_ids_flush_tagged(%struct.Main* %bmain) #0 !dbg !10230 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %listbase = alloca %struct.ListBase, align 8
  %dsl = alloca %struct.DagSceneLayer*, align 8
  %lbarray = alloca [35 x %struct.ListBase*], align 16
  %a = alloca i32, align 4
  %do_flush = alloca i8, align 1
  %lb = alloca %struct.ListBase*, align 8
  %id = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata %struct.ListBase* %listbase, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata %struct.DagSceneLayer** %dsl, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata [35 x %struct.ListBase*]* %lbarray, metadata !10237, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata i8* %do_flush, metadata !10244, metadata !DIExpression()), !dbg !10245
  store i8 0, i8* %do_flush, align 1, !dbg !10245
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10246
  call void @dag_current_scene_layers(%struct.Main* %0, %struct.ListBase* %listbase), !dbg !10247
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %listbase), !dbg !10248
  %tobool = icmp ne i8 %call, 0, !dbg !10248
  br i1 %tobool, label %if.then, label %if.end, !dbg !10250

if.then:                                          ; preds = %entry
  br label %return, !dbg !10251

if.end:                                           ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10252
  %arraydecay = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 0, !dbg !10253
  %call1 = call i32 @set_listbasepointers(%struct.Main* %1, %struct.ListBase** %arraydecay), !dbg !10254
  store i32 %call1, i32* %a, align 4, !dbg !10255
  br label %while.cond, !dbg !10256

while.cond:                                       ; preds = %if.end21, %if.end
  %2 = load i32, i32* %a, align 4, !dbg !10257
  %dec = add nsw i32 %2, -1, !dbg !10257
  store i32 %dec, i32* %a, align 4, !dbg !10257
  %tobool2 = icmp ne i32 %2, 0, !dbg !10256
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10256

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !10258, metadata !DIExpression()), !dbg !10260
  %3 = load i32, i32* %a, align 4, !dbg !10261
  %idxprom = sext i32 %3 to i64, !dbg !10262
  %arrayidx = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 %idxprom, !dbg !10262
  %4 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !10262
  store %struct.ListBase* %4, %struct.ListBase** %lb, align 8, !dbg !10260
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !10263, metadata !DIExpression()), !dbg !10264
  %5 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !10265
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !10266
  %6 = load i8*, i8** %first, align 8, !dbg !10266
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !10265
  store %struct.ID* %7, %struct.ID** %id, align 8, !dbg !10264
  %8 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10267
  %tobool3 = icmp ne %struct.ID* %8, null, !dbg !10267
  br i1 %tobool3, label %land.lhs.true, label %if.end21, !dbg !10269

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10270
  %id_tag_update = getelementptr inbounds %struct.Main, %struct.Main* %9, i32 0, i32 45, !dbg !10271
  %10 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10272
  %name = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 4, !dbg !10273
  %arrayidx4 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !10272
  %11 = load i8, i8* %arrayidx4, align 8, !dbg !10272
  %idxprom5 = zext i8 %11 to i64, !dbg !10270
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update, i64 0, i64 %idxprom5, !dbg !10270
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !10270
  %conv = zext i8 %12 to i32, !dbg !10270
  %tobool7 = icmp ne i32 %conv, 0, !dbg !10270
  br i1 %tobool7, label %if.then8, label %if.end21, !dbg !10274

if.then8:                                         ; preds = %land.lhs.true
  br label %for.cond, !dbg !10275

for.cond:                                         ; preds = %for.inc18, %if.then8
  %13 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10277
  %tobool9 = icmp ne %struct.ID* %13, null, !dbg !10280
  br i1 %tobool9, label %for.body, label %for.end20, !dbg !10280

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10281
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %14, i32 0, i32 5, !dbg !10284
  %15 = load i16, i16* %flag, align 2, !dbg !10284
  %conv10 = sext i16 %15 to i32, !dbg !10281
  %and = and i32 %conv10, 12288, !dbg !10285
  %tobool11 = icmp ne i32 %and, 0, !dbg !10285
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !10286

if.then12:                                        ; preds = %for.body
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %listbase, i32 0, i32 0, !dbg !10287
  %16 = load i8*, i8** %first13, align 8, !dbg !10287
  %17 = bitcast i8* %16 to %struct.DagSceneLayer*, !dbg !10290
  store %struct.DagSceneLayer* %17, %struct.DagSceneLayer** %dsl, align 8, !dbg !10291
  br label %for.cond14, !dbg !10292

for.cond14:                                       ; preds = %for.inc, %if.then12
  %18 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10293
  %tobool15 = icmp ne %struct.DagSceneLayer* %18, null, !dbg !10295
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !10295

for.body16:                                       ; preds = %for.cond14
  %19 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10296
  %20 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10297
  %scene = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %20, i32 0, i32 2, !dbg !10298
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10298
  %22 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10299
  call void @dag_id_flush_update(%struct.Main* %19, %struct.Scene* %21, %struct.ID* %22), !dbg !10300
  br label %for.inc, !dbg !10300

for.inc:                                          ; preds = %for.body16
  %23 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10301
  %next = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %23, i32 0, i32 0, !dbg !10302
  %24 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %next, align 8, !dbg !10302
  store %struct.DagSceneLayer* %24, %struct.DagSceneLayer** %dsl, align 8, !dbg !10303
  br label %for.cond14, !dbg !10304, !llvm.loop !10305

for.end:                                          ; preds = %for.cond14
  store i8 1, i8* %do_flush, align 1, !dbg !10307
  br label %if.end17, !dbg !10308

if.end17:                                         ; preds = %for.end, %for.body
  br label %for.inc18, !dbg !10309

for.inc18:                                        ; preds = %if.end17
  %25 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10310
  %next19 = getelementptr inbounds %struct.ID, %struct.ID* %25, i32 0, i32 0, !dbg !10311
  %26 = load i8*, i8** %next19, align 8, !dbg !10311
  %27 = bitcast i8* %26 to %struct.ID*, !dbg !10310
  store %struct.ID* %27, %struct.ID** %id, align 8, !dbg !10312
  br label %for.cond, !dbg !10313, !llvm.loop !10314

for.end20:                                        ; preds = %for.cond
  br label %if.end21, !dbg !10316

if.end21:                                         ; preds = %for.end20, %land.lhs.true, %while.body
  br label %while.cond, !dbg !10256, !llvm.loop !10317

while.end:                                        ; preds = %while.cond
  %28 = load i8, i8* %do_flush, align 1, !dbg !10319
  %tobool22 = icmp ne i8 %28, 0, !dbg !10319
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !10321

if.then23:                                        ; preds = %while.end
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %listbase, i32 0, i32 0, !dbg !10322
  %29 = load i8*, i8** %first24, align 8, !dbg !10322
  %30 = bitcast i8* %29 to %struct.DagSceneLayer*, !dbg !10325
  store %struct.DagSceneLayer* %30, %struct.DagSceneLayer** %dsl, align 8, !dbg !10326
  br label %for.cond25, !dbg !10327

for.cond25:                                       ; preds = %for.inc29, %if.then23
  %31 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10328
  %tobool26 = icmp ne %struct.DagSceneLayer* %31, null, !dbg !10330
  br i1 %tobool26, label %for.body27, label %for.end31, !dbg !10330

for.body27:                                       ; preds = %for.cond25
  %32 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10331
  %33 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10332
  %scene28 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %33, i32 0, i32 2, !dbg !10333
  %34 = load %struct.Scene*, %struct.Scene** %scene28, align 8, !dbg !10333
  %35 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10334
  %layer = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %35, i32 0, i32 3, !dbg !10335
  %36 = load i32, i32* %layer, align 8, !dbg !10335
  call void @DAG_scene_flush_update(%struct.Main* %32, %struct.Scene* %34, i32 %36, i16 signext 0), !dbg !10336
  br label %for.inc29, !dbg !10336

for.inc29:                                        ; preds = %for.body27
  %37 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !10337
  %next30 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %37, i32 0, i32 0, !dbg !10338
  %38 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %next30, align 8, !dbg !10338
  store %struct.DagSceneLayer* %38, %struct.DagSceneLayer** %dsl, align 8, !dbg !10339
  br label %for.cond25, !dbg !10340, !llvm.loop !10341

for.end31:                                        ; preds = %for.cond25
  br label %if.end32, !dbg !10343

if.end32:                                         ; preds = %for.end31, %while.end
  call void @BLI_freelistN(%struct.ListBase* %listbase), !dbg !10344
  br label %return, !dbg !10345

return:                                           ; preds = %if.end32, %if.then
  ret void, !dbg !10345
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !10346 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10354
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10355
  %1 = load i8*, i8** %first, align 8, !dbg !10355
  %cmp = icmp eq i8* %1, null, !dbg !10356
  %conv = zext i1 %cmp to i32, !dbg !10356
  %conv1 = trunc i32 %conv to i8, !dbg !10357
  ret i8 %conv1, !dbg !10358
}

declare dso_local i32 @set_listbasepointers(%struct.Main*, %struct.ListBase**) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_id_flush_update(%struct.Main* %bmain, %struct.Scene* %sce, %struct.ID* %id) #0 !dbg !10359 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %obt = alloca %struct.Object*, align 8
  %ob = alloca %struct.Object*, align 8
  %idtype = alloca i16, align 2
  %data80 = alloca %struct.anon.0, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %mtexp = alloca %struct.MTex**, align 8
  %mtex = alloca %struct.MTex*, align 8
  %a = alloca i32, align 4
  %key = alloca %struct.Key*, align 8
  %psys181 = alloca %struct.ParticleSystem*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %node = alloca %struct.bNode*, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %parent_id = alloca %struct.ID*, align 8
  %node299 = alloca %struct.bNode*, align 8
  %node324 = alloca %struct.bNode*, align 8
  %clip349 = alloca %struct.MovieClip*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10370, metadata !DIExpression()), !dbg !10371
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !10371
  call void @llvm.dbg.declare(metadata i16* %idtype, metadata !10372, metadata !DIExpression()), !dbg !10373
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10374
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !10374
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !10374
  %1 = bitcast i8* %arraydecay to i16*, !dbg !10374
  %2 = load i16, i16* %1, align 8, !dbg !10374
  %conv = sext i16 %2 to i32, !dbg !10374
  %cmp = icmp eq i32 %conv, 16975, !dbg !10376
  br i1 %cmp, label %if.then, label %if.end17, !dbg !10377

if.then:                                          ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10378
  %4 = bitcast %struct.ID* %3 to %struct.Object*, !dbg !10380
  store %struct.Object* %4, %struct.Object** %ob, align 8, !dbg !10381
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10382
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10383
  %call = call i32 @BKE_ptcache_object_reset(%struct.Scene* %5, %struct.Object* %6, i32 0), !dbg !10384
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10385
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 103, !dbg !10387
  %8 = load i8, i8* %recalc, align 1, !dbg !10387
  %conv2 = zext i8 %8 to i32, !dbg !10385
  %and = and i32 %conv2, 7, !dbg !10388
  %tobool = icmp ne i32 %and, 0, !dbg !10388
  br i1 %tobool, label %if.then3, label %if.end, !dbg !10389

if.then3:                                         ; preds = %if.then
  %9 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10390
  %10 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10392
  %name4 = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 4, !dbg !10392
  %arraydecay5 = getelementptr inbounds [66 x i8], [66 x i8]* %name4, i64 0, i64 0, !dbg !10392
  %11 = bitcast i8* %arraydecay5 to i16*, !dbg !10392
  %12 = load i16, i16* %11, align 8, !dbg !10392
  call void @DAG_id_type_tag(%struct.Main* %9, i16 signext %12), !dbg !10393
  br label %if.end, !dbg !10394

if.end:                                           ; preds = %if.then3, %if.then
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10395
  %recalc6 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 103, !dbg !10397
  %14 = load i8, i8* %recalc6, align 1, !dbg !10397
  %conv7 = zext i8 %14 to i32, !dbg !10395
  %and8 = and i32 %conv7, 2, !dbg !10398
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10398
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !10399

if.then10:                                        ; preds = %if.end
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10400
  %data = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !10402
  %16 = load i8*, i8** %data, align 8, !dbg !10402
  %17 = bitcast i8* %16 to %struct.ID*, !dbg !10400
  store %struct.ID* %17, %struct.ID** %id.addr, align 8, !dbg !10403
  %18 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10404
  %tobool11 = icmp ne %struct.ID* %18, null, !dbg !10404
  br i1 %tobool11, label %land.lhs.true, label %if.end15, !dbg !10406

land.lhs.true:                                    ; preds = %if.then10
  %19 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10407
  %us = getelementptr inbounds %struct.ID, %struct.ID* %19, i32 0, i32 6, !dbg !10408
  %20 = load i32, i32* %us, align 4, !dbg !10408
  %cmp12 = icmp sle i32 %20, 1, !dbg !10409
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !10410

if.then14:                                        ; preds = %land.lhs.true
  %21 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10411
  %22 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10413
  call void @dag_editors_id_update(%struct.Main* %21, %struct.ID* %22), !dbg !10414
  store %struct.ID* null, %struct.ID** %id.addr, align 8, !dbg !10415
  br label %if.end15, !dbg !10416

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %if.then10
  br label %if.end16, !dbg !10417

if.end16:                                         ; preds = %if.end15, %if.end
  br label %if.end17, !dbg !10418

if.end17:                                         ; preds = %if.end16, %entry
  %23 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10419
  %tobool18 = icmp ne %struct.ID* %23, null, !dbg !10419
  br i1 %tobool18, label %if.then19, label %if.end357, !dbg !10421

if.then19:                                        ; preds = %if.end17
  %24 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10422
  %name20 = getelementptr inbounds %struct.ID, %struct.ID* %24, i32 0, i32 4, !dbg !10422
  %arraydecay21 = getelementptr inbounds [66 x i8], [66 x i8]* %name20, i64 0, i64 0, !dbg !10422
  %25 = bitcast i8* %arraydecay21 to i16*, !dbg !10422
  %26 = load i16, i16* %25, align 8, !dbg !10422
  store i16 %26, i16* %idtype, align 2, !dbg !10424
  %27 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv22 = sext i16 %27 to i32, !dbg !10425
  %cmp23 = icmp eq i32 %conv22, 17741, !dbg !10425
  br i1 %cmp23, label %if.then52, label %lor.lhs.false, !dbg !10425

lor.lhs.false:                                    ; preds = %if.then19
  %28 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv25 = sext i16 %28 to i32, !dbg !10425
  %cmp26 = icmp eq i32 %conv25, 21827, !dbg !10425
  br i1 %cmp26, label %if.then52, label %lor.lhs.false28, !dbg !10425

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %29 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv29 = sext i16 %29 to i32, !dbg !10425
  %cmp30 = icmp eq i32 %conv29, 16973, !dbg !10425
  br i1 %cmp30, label %if.then52, label %lor.lhs.false32, !dbg !10425

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %30 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv33 = sext i16 %30 to i32, !dbg !10425
  %cmp34 = icmp eq i32 %conv33, 16716, !dbg !10425
  br i1 %cmp34, label %if.then52, label %lor.lhs.false36, !dbg !10425

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %31 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv37 = sext i16 %31 to i32, !dbg !10425
  %cmp38 = icmp eq i32 %conv37, 19283, !dbg !10425
  br i1 %cmp38, label %if.then52, label %lor.lhs.false40, !dbg !10425

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %32 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv41 = sext i16 %32 to i32, !dbg !10425
  %cmp42 = icmp eq i32 %conv41, 16707, !dbg !10425
  br i1 %cmp42, label %if.then52, label %lor.lhs.false44, !dbg !10425

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %33 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv45 = sext i16 %33 to i32, !dbg !10425
  %cmp46 = icmp eq i32 %conv45, 21580, !dbg !10425
  br i1 %cmp46, label %if.then52, label %lor.lhs.false48, !dbg !10425

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %34 = load i16, i16* %idtype, align 2, !dbg !10425
  %conv49 = sext i16 %34 to i32, !dbg !10425
  %cmp50 = icmp eq i32 %conv49, 21057, !dbg !10425
  br i1 %cmp50, label %if.then52, label %if.end70, !dbg !10427

if.then52:                                        ; preds = %lor.lhs.false48, %lor.lhs.false44, %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false, %if.then19
  %35 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10428
  %object = getelementptr inbounds %struct.Main, %struct.Main* %35, i32 0, i32 13, !dbg !10431
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !10432
  %36 = load i8*, i8** %first, align 8, !dbg !10432
  %37 = bitcast i8* %36 to %struct.Object*, !dbg !10428
  store %struct.Object* %37, %struct.Object** %obt, align 8, !dbg !10433
  br label %for.cond, !dbg !10434

for.cond:                                         ; preds = %for.inc, %if.then52
  %38 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10435
  %tobool53 = icmp ne %struct.Object* %38, null, !dbg !10437
  br i1 %tobool53, label %for.body, label %for.end, !dbg !10437

for.body:                                         ; preds = %for.cond
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10438
  %tobool54 = icmp ne %struct.Object* %39, null, !dbg !10438
  br i1 %tobool54, label %land.lhs.true55, label %land.lhs.true58, !dbg !10441

land.lhs.true55:                                  ; preds = %for.body
  %40 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10442
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10443
  %cmp56 = icmp eq %struct.Object* %40, %41, !dbg !10444
  br i1 %cmp56, label %if.end68, label %land.lhs.true58, !dbg !10445

land.lhs.true58:                                  ; preds = %land.lhs.true55, %for.body
  %42 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10446
  %data59 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !10447
  %43 = load i8*, i8** %data59, align 8, !dbg !10447
  %44 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10448
  %45 = bitcast %struct.ID* %44 to i8*, !dbg !10448
  %cmp60 = icmp eq i8* %43, %45, !dbg !10449
  br i1 %cmp60, label %if.then62, label %if.end68, !dbg !10450

if.then62:                                        ; preds = %land.lhs.true58
  %46 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10451
  %recalc63 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 103, !dbg !10453
  %47 = load i8, i8* %recalc63, align 1, !dbg !10454
  %conv64 = zext i8 %47 to i32, !dbg !10454
  %or = or i32 %conv64, 2, !dbg !10454
  %conv65 = trunc i32 %or to i8, !dbg !10454
  store i8 %conv65, i8* %recalc63, align 1, !dbg !10454
  %48 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10455
  %49 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10456
  %id66 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 0, !dbg !10457
  call void @lib_id_recalc_data_tag(%struct.Main* %48, %struct.ID* %id66), !dbg !10458
  %50 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10459
  %51 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10460
  %call67 = call i32 @BKE_ptcache_object_reset(%struct.Scene* %50, %struct.Object* %51, i32 0), !dbg !10461
  br label %if.end68, !dbg !10462

if.end68:                                         ; preds = %if.then62, %land.lhs.true58, %land.lhs.true55
  br label %for.inc, !dbg !10463

for.inc:                                          ; preds = %if.end68
  %52 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10464
  %id69 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 0, !dbg !10465
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id69, i32 0, i32 0, !dbg !10466
  %53 = load i8*, i8** %next, align 8, !dbg !10466
  %54 = bitcast i8* %53 to %struct.Object*, !dbg !10464
  store %struct.Object* %54, %struct.Object** %obt, align 8, !dbg !10467
  br label %for.cond, !dbg !10468, !llvm.loop !10469

for.end:                                          ; preds = %for.cond
  br label %if.end70, !dbg !10471

if.end70:                                         ; preds = %for.end, %lor.lhs.false48
  %55 = load i16, i16* %idtype, align 2, !dbg !10472
  %conv71 = sext i16 %55 to i32, !dbg !10472
  %cmp72 = icmp eq i32 %conv71, 17748, !dbg !10474
  br i1 %cmp72, label %if.then74, label %if.end146, !dbg !10475

if.then74:                                        ; preds = %if.end70
  %56 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10476
  %object75 = getelementptr inbounds %struct.Main, %struct.Main* %56, i32 0, i32 13, !dbg !10479
  %first76 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object75, i32 0, i32 0, !dbg !10480
  %57 = load i8*, i8** %first76, align 8, !dbg !10480
  %58 = bitcast i8* %57 to %struct.Object*, !dbg !10476
  store %struct.Object* %58, %struct.Object** %obt, align 8, !dbg !10481
  br label %for.cond77, !dbg !10482

for.cond77:                                       ; preds = %for.inc142, %if.then74
  %59 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10483
  %tobool78 = icmp ne %struct.Object* %59, null, !dbg !10485
  br i1 %tobool78, label %for.body79, label %for.end145, !dbg !10485

for.body79:                                       ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata %struct.anon.0* %data80, metadata !10486, metadata !DIExpression()), !dbg !10492
  %60 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10493
  %id81 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data80, i32 0, i32 0, !dbg !10494
  store %struct.ID* %60, %struct.ID** %id81, align 8, !dbg !10495
  %is_dependent = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data80, i32 0, i32 1, !dbg !10496
  store i8 0, i8* %is_dependent, align 8, !dbg !10497
  %61 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10498
  %62 = bitcast %struct.anon.0* %data80 to i8*, !dbg !10499
  call void @modifiers_foreachIDLink(%struct.Object* %61, void (i8*, %struct.Object*, %struct.ID**)* @dag_id_flush_update__isDependentTexture, i8* %62), !dbg !10500
  %is_dependent82 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data80, i32 0, i32 1, !dbg !10501
  %63 = load i8, i8* %is_dependent82, align 8, !dbg !10501
  %tobool83 = icmp ne i8 %63, 0, !dbg !10503
  br i1 %tobool83, label %if.then84, label %if.end90, !dbg !10504

if.then84:                                        ; preds = %for.body79
  %64 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10505
  %recalc85 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 103, !dbg !10507
  %65 = load i8, i8* %recalc85, align 1, !dbg !10508
  %conv86 = zext i8 %65 to i32, !dbg !10508
  %or87 = or i32 %conv86, 2, !dbg !10508
  %conv88 = trunc i32 %or87 to i8, !dbg !10508
  store i8 %conv88, i8* %recalc85, align 1, !dbg !10508
  %66 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10509
  %67 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10510
  %id89 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 0, !dbg !10511
  call void @lib_id_recalc_data_tag(%struct.Main* %66, %struct.ID* %id89), !dbg !10512
  br label %if.end90, !dbg !10513

if.end90:                                         ; preds = %if.then84, %for.body79
  %68 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10514
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 109, !dbg !10516
  %first91 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !10517
  %69 = load i8*, i8** %first91, align 8, !dbg !10517
  %tobool92 = icmp ne i8* %69, null, !dbg !10514
  br i1 %tobool92, label %if.then93, label %if.end141, !dbg !10518

if.then93:                                        ; preds = %if.end90
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !10519, metadata !DIExpression()), !dbg !10521
  %70 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10522
  %particlesystem94 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 109, !dbg !10523
  %first95 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem94, i32 0, i32 0, !dbg !10524
  %71 = load i8*, i8** %first95, align 8, !dbg !10524
  %72 = bitcast i8* %71 to %struct.ParticleSystem*, !dbg !10522
  store %struct.ParticleSystem* %72, %struct.ParticleSystem** %psys, align 8, !dbg !10521
  call void @llvm.dbg.declare(metadata %struct.MTex*** %mtexp, metadata !10525, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10532, metadata !DIExpression()), !dbg !10533
  br label %for.cond96, !dbg !10534

for.cond96:                                       ; preds = %for.inc138, %if.then93
  %73 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10535
  %tobool97 = icmp ne %struct.ParticleSystem* %73, null, !dbg !10538
  br i1 %tobool97, label %for.body98, label %for.end140, !dbg !10538

for.body98:                                       ; preds = %for.cond96
  %74 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10539
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %74, i32 0, i32 2, !dbg !10541
  %75 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10541
  %mtex99 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %75, i32 0, i32 121, !dbg !10542
  %arraydecay100 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex99, i64 0, i64 0, !dbg !10539
  store %struct.MTex** %arraydecay100, %struct.MTex*** %mtexp, align 8, !dbg !10543
  store i32 0, i32* %a, align 4, !dbg !10544
  br label %for.cond101, !dbg !10546

for.cond101:                                      ; preds = %for.inc136, %for.body98
  %76 = load i32, i32* %a, align 4, !dbg !10547
  %cmp102 = icmp slt i32 %76, 18, !dbg !10549
  br i1 %cmp102, label %for.body104, label %for.end137, !dbg !10550

for.body104:                                      ; preds = %for.cond101
  %77 = load %struct.MTex**, %struct.MTex*** %mtexp, align 8, !dbg !10551
  %78 = load %struct.MTex*, %struct.MTex** %77, align 8, !dbg !10553
  store %struct.MTex* %78, %struct.MTex** %mtex, align 8, !dbg !10554
  %79 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10555
  %tobool105 = icmp ne %struct.MTex* %79, null, !dbg !10555
  br i1 %tobool105, label %land.lhs.true106, label %if.end135, !dbg !10557

land.lhs.true106:                                 ; preds = %for.body104
  %80 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10558
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %80, i32 0, i32 5, !dbg !10559
  %81 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10559
  %82 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10560
  %83 = bitcast %struct.ID* %82 to %struct.Tex*, !dbg !10561
  %cmp107 = icmp eq %struct.Tex* %81, %83, !dbg !10562
  br i1 %cmp107, label %if.then109, label %if.end135, !dbg !10563

if.then109:                                       ; preds = %land.lhs.true106
  %84 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10564
  %recalc110 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 103, !dbg !10566
  %85 = load i8, i8* %recalc110, align 1, !dbg !10567
  %conv111 = zext i8 %85 to i32, !dbg !10567
  %or112 = or i32 %conv111, 2, !dbg !10567
  %conv113 = trunc i32 %or112 to i8, !dbg !10567
  store i8 %conv113, i8* %recalc110, align 1, !dbg !10567
  %86 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10568
  %87 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10569
  %id114 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 0, !dbg !10570
  call void @lib_id_recalc_data_tag(%struct.Main* %86, %struct.ID* %id114), !dbg !10571
  %88 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10572
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %88, i32 0, i32 1, !dbg !10574
  %89 = load i16, i16* %mapto, align 2, !dbg !10574
  %conv115 = sext i16 %89 to i32, !dbg !10572
  %and116 = and i32 %conv115, 15, !dbg !10575
  %tobool117 = icmp ne i32 %and116, 0, !dbg !10575
  br i1 %tobool117, label %if.then118, label %if.end123, !dbg !10576

if.then118:                                       ; preds = %if.then109
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10577
  %recalc119 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 31, !dbg !10578
  %91 = load i16, i16* %recalc119, align 4, !dbg !10579
  %conv120 = sext i16 %91 to i32, !dbg !10579
  %or121 = or i32 %conv120, 16, !dbg !10579
  %conv122 = trunc i32 %or121 to i16, !dbg !10579
  store i16 %conv122, i16* %recalc119, align 4, !dbg !10579
  br label %if.end123, !dbg !10577

if.end123:                                        ; preds = %if.then118, %if.then109
  %92 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10580
  %mapto124 = getelementptr inbounds %struct.MTex, %struct.MTex* %92, i32 0, i32 1, !dbg !10582
  %93 = load i16, i16* %mapto124, align 2, !dbg !10582
  %conv125 = sext i16 %93 to i32, !dbg !10580
  %and126 = and i32 %conv125, 912, !dbg !10583
  %tobool127 = icmp ne i32 %and126, 0, !dbg !10583
  br i1 %tobool127, label %if.then128, label %if.end133, !dbg !10584

if.then128:                                       ; preds = %if.end123
  %94 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10585
  %recalc129 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %94, i32 0, i32 31, !dbg !10586
  %95 = load i16, i16* %recalc129, align 4, !dbg !10587
  %conv130 = sext i16 %95 to i32, !dbg !10587
  %or131 = or i32 %conv130, 64, !dbg !10587
  %conv132 = trunc i32 %or131 to i16, !dbg !10587
  store i16 %conv132, i16* %recalc129, align 4, !dbg !10587
  br label %if.end133, !dbg !10585

if.end133:                                        ; preds = %if.then128, %if.end123
  %96 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10588
  %97 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10589
  %call134 = call i32 @BKE_ptcache_object_reset(%struct.Scene* %96, %struct.Object* %97, i32 0), !dbg !10590
  br label %if.end135, !dbg !10591

if.end135:                                        ; preds = %if.end133, %land.lhs.true106, %for.body104
  br label %for.inc136, !dbg !10592

for.inc136:                                       ; preds = %if.end135
  %98 = load i32, i32* %a, align 4, !dbg !10593
  %inc = add nsw i32 %98, 1, !dbg !10593
  store i32 %inc, i32* %a, align 4, !dbg !10593
  %99 = load %struct.MTex**, %struct.MTex*** %mtexp, align 8, !dbg !10594
  %incdec.ptr = getelementptr inbounds %struct.MTex*, %struct.MTex** %99, i32 1, !dbg !10594
  store %struct.MTex** %incdec.ptr, %struct.MTex*** %mtexp, align 8, !dbg !10594
  br label %for.cond101, !dbg !10595, !llvm.loop !10596

for.end137:                                       ; preds = %for.cond101
  br label %for.inc138, !dbg !10598

for.inc138:                                       ; preds = %for.end137
  %100 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10599
  %next139 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %100, i32 0, i32 0, !dbg !10600
  %101 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next139, align 8, !dbg !10600
  store %struct.ParticleSystem* %101, %struct.ParticleSystem** %psys, align 8, !dbg !10601
  br label %for.cond96, !dbg !10602, !llvm.loop !10603

for.end140:                                       ; preds = %for.cond96
  br label %if.end141, !dbg !10605

if.end141:                                        ; preds = %for.end140, %if.end90
  br label %for.inc142, !dbg !10606

for.inc142:                                       ; preds = %if.end141
  %102 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10607
  %id143 = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 0, !dbg !10608
  %next144 = getelementptr inbounds %struct.ID, %struct.ID* %id143, i32 0, i32 0, !dbg !10609
  %103 = load i8*, i8** %next144, align 8, !dbg !10609
  %104 = bitcast i8* %103 to %struct.Object*, !dbg !10607
  store %struct.Object* %104, %struct.Object** %obt, align 8, !dbg !10610
  br label %for.cond77, !dbg !10611, !llvm.loop !10612

for.end145:                                       ; preds = %for.cond77
  br label %if.end146, !dbg !10614

if.end146:                                        ; preds = %for.end145, %if.end70
  %105 = load i16, i16* %idtype, align 2, !dbg !10615
  %conv147 = sext i16 %105 to i32, !dbg !10615
  %cmp148 = icmp eq i32 %conv147, 17739, !dbg !10617
  br i1 %cmp148, label %if.then150, label %if.end176, !dbg !10618

if.then150:                                       ; preds = %if.end146
  %106 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10619
  %object151 = getelementptr inbounds %struct.Main, %struct.Main* %106, i32 0, i32 13, !dbg !10622
  %first152 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object151, i32 0, i32 0, !dbg !10623
  %107 = load i8*, i8** %first152, align 8, !dbg !10623
  %108 = bitcast i8* %107 to %struct.Object*, !dbg !10619
  store %struct.Object* %108, %struct.Object** %obt, align 8, !dbg !10624
  br label %for.cond153, !dbg !10625

for.cond153:                                      ; preds = %for.inc172, %if.then150
  %109 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10626
  %tobool154 = icmp ne %struct.Object* %109, null, !dbg !10628
  br i1 %tobool154, label %for.body155, label %for.end175, !dbg !10628

for.body155:                                      ; preds = %for.cond153
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !10629, metadata !DIExpression()), !dbg !10631
  %110 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10632
  %call156 = call %struct.Key* @BKE_key_from_object(%struct.Object* %110), !dbg !10633
  store %struct.Key* %call156, %struct.Key** %key, align 8, !dbg !10631
  %111 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10634
  %tobool157 = icmp ne %struct.Object* %111, null, !dbg !10634
  br i1 %tobool157, label %land.lhs.true158, label %land.lhs.true161, !dbg !10636

land.lhs.true158:                                 ; preds = %for.body155
  %112 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10637
  %113 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10638
  %cmp159 = icmp eq %struct.Object* %112, %113, !dbg !10639
  br i1 %cmp159, label %if.end171, label %land.lhs.true161, !dbg !10640

land.lhs.true161:                                 ; preds = %land.lhs.true158, %for.body155
  %114 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !10641
  %115 = bitcast %struct.Key* %114 to %struct.ID*, !dbg !10642
  %116 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10643
  %cmp162 = icmp eq %struct.ID* %115, %116, !dbg !10644
  br i1 %cmp162, label %if.then164, label %if.end171, !dbg !10645

if.then164:                                       ; preds = %land.lhs.true161
  %117 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10646
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %117, i32 0, i32 53, !dbg !10648
  %118 = load i16, i16* %flag, align 4, !dbg !10649
  %conv165 = sext i16 %118 to i32, !dbg !10649
  %or166 = or i32 %conv165, 3, !dbg !10649
  %conv167 = trunc i32 %or166 to i16, !dbg !10649
  store i16 %conv167, i16* %flag, align 4, !dbg !10649
  %119 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10650
  %120 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10651
  %id168 = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 0, !dbg !10652
  call void @lib_id_recalc_tag(%struct.Main* %119, %struct.ID* %id168), !dbg !10653
  %121 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10654
  %122 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10655
  %id169 = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 0, !dbg !10656
  call void @lib_id_recalc_data_tag(%struct.Main* %121, %struct.ID* %id169), !dbg !10657
  %123 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10658
  %124 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10659
  %call170 = call i32 @BKE_ptcache_object_reset(%struct.Scene* %123, %struct.Object* %124, i32 0), !dbg !10660
  br label %if.end171, !dbg !10661

if.end171:                                        ; preds = %if.then164, %land.lhs.true161, %land.lhs.true158
  br label %for.inc172, !dbg !10662

for.inc172:                                       ; preds = %if.end171
  %125 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10663
  %id173 = getelementptr inbounds %struct.Object, %struct.Object* %125, i32 0, i32 0, !dbg !10664
  %next174 = getelementptr inbounds %struct.ID, %struct.ID* %id173, i32 0, i32 0, !dbg !10665
  %126 = load i8*, i8** %next174, align 8, !dbg !10665
  %127 = bitcast i8* %126 to %struct.Object*, !dbg !10663
  store %struct.Object* %127, %struct.Object** %obt, align 8, !dbg !10666
  br label %for.cond153, !dbg !10667, !llvm.loop !10668

for.end175:                                       ; preds = %for.cond153
  br label %if.end176, !dbg !10670

if.end176:                                        ; preds = %for.end175, %if.end146
  %128 = load i16, i16* %idtype, align 2, !dbg !10671
  %conv177 = sext i16 %128 to i32, !dbg !10671
  %cmp178 = icmp eq i32 %conv177, 16720, !dbg !10673
  br i1 %cmp178, label %if.then180, label %if.end206, !dbg !10674

if.then180:                                       ; preds = %if.end176
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys181, metadata !10675, metadata !DIExpression()), !dbg !10677
  %129 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10678
  %object182 = getelementptr inbounds %struct.Main, %struct.Main* %129, i32 0, i32 13, !dbg !10680
  %first183 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object182, i32 0, i32 0, !dbg !10681
  %130 = load i8*, i8** %first183, align 8, !dbg !10681
  %131 = bitcast i8* %130 to %struct.Object*, !dbg !10678
  store %struct.Object* %131, %struct.Object** %obt, align 8, !dbg !10682
  br label %for.cond184, !dbg !10683

for.cond184:                                      ; preds = %for.inc202, %if.then180
  %132 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10684
  %tobool185 = icmp ne %struct.Object* %132, null, !dbg !10686
  br i1 %tobool185, label %for.body186, label %for.end205, !dbg !10686

for.body186:                                      ; preds = %for.cond184
  %133 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10687
  %particlesystem187 = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 109, !dbg !10689
  %first188 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem187, i32 0, i32 0, !dbg !10690
  %134 = load i8*, i8** %first188, align 8, !dbg !10690
  %135 = bitcast i8* %134 to %struct.ParticleSystem*, !dbg !10687
  store %struct.ParticleSystem* %135, %struct.ParticleSystem** %psys181, align 8, !dbg !10691
  br label %for.cond189, !dbg !10692

for.cond189:                                      ; preds = %for.inc199, %for.body186
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys181, align 8, !dbg !10693
  %tobool190 = icmp ne %struct.ParticleSystem* %136, null, !dbg !10695
  br i1 %tobool190, label %for.body191, label %for.end201, !dbg !10695

for.body191:                                      ; preds = %for.cond189
  %137 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys181, align 8, !dbg !10696
  %part192 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %137, i32 0, i32 2, !dbg !10698
  %138 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part192, align 8, !dbg !10698
  %id193 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %138, i32 0, i32 0, !dbg !10699
  %139 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10700
  %cmp194 = icmp eq %struct.ID* %id193, %139, !dbg !10701
  br i1 %cmp194, label %if.then196, label %if.end198, !dbg !10702

if.then196:                                       ; preds = %for.body191
  %140 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10703
  %141 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10704
  %call197 = call i32 @BKE_ptcache_object_reset(%struct.Scene* %140, %struct.Object* %141, i32 0), !dbg !10705
  br label %if.end198, !dbg !10705

if.end198:                                        ; preds = %if.then196, %for.body191
  br label %for.inc199, !dbg !10700

for.inc199:                                       ; preds = %if.end198
  %142 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys181, align 8, !dbg !10706
  %next200 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %142, i32 0, i32 0, !dbg !10707
  %143 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next200, align 8, !dbg !10707
  store %struct.ParticleSystem* %143, %struct.ParticleSystem** %psys181, align 8, !dbg !10708
  br label %for.cond189, !dbg !10709, !llvm.loop !10710

for.end201:                                       ; preds = %for.cond189
  br label %for.inc202, !dbg !10711

for.inc202:                                       ; preds = %for.end201
  %144 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10712
  %id203 = getelementptr inbounds %struct.Object, %struct.Object* %144, i32 0, i32 0, !dbg !10713
  %next204 = getelementptr inbounds %struct.ID, %struct.ID* %id203, i32 0, i32 0, !dbg !10714
  %145 = load i8*, i8** %next204, align 8, !dbg !10714
  %146 = bitcast i8* %145 to %struct.Object*, !dbg !10712
  store %struct.Object* %146, %struct.Object** %obt, align 8, !dbg !10715
  br label %for.cond184, !dbg !10716, !llvm.loop !10717

for.end205:                                       ; preds = %for.cond184
  br label %if.end206, !dbg !10719

if.end206:                                        ; preds = %for.end205, %if.end176
  %147 = load i16, i16* %idtype, align 2, !dbg !10720
  %conv207 = sext i16 %147 to i32, !dbg !10720
  %cmp208 = icmp eq i32 %conv207, 16717, !dbg !10720
  br i1 %cmp208, label %if.then214, label %lor.lhs.false210, !dbg !10720

lor.lhs.false210:                                 ; preds = %if.end206
  %148 = load i16, i16* %idtype, align 2, !dbg !10720
  %conv211 = sext i16 %148 to i32, !dbg !10720
  %cmp212 = icmp eq i32 %conv211, 17748, !dbg !10720
  br i1 %cmp212, label %if.then214, label %if.end225, !dbg !10722

if.then214:                                       ; preds = %lor.lhs.false210, %if.end206
  %149 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10723
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %149, i32 0, i32 6, !dbg !10725
  %150 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !10725
  %tobool215 = icmp ne %struct.Base* %150, null, !dbg !10723
  br i1 %tobool215, label %cond.true, label %cond.false, !dbg !10723

cond.true:                                        ; preds = %if.then214
  %151 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10726
  %basact216 = getelementptr inbounds %struct.Scene, %struct.Scene* %151, i32 0, i32 6, !dbg !10727
  %152 = load %struct.Base*, %struct.Base** %basact216, align 8, !dbg !10727
  %object217 = getelementptr inbounds %struct.Base, %struct.Base* %152, i32 0, i32 7, !dbg !10728
  %153 = load %struct.Object*, %struct.Object** %object217, align 8, !dbg !10728
  br label %cond.end, !dbg !10723

cond.false:                                       ; preds = %if.then214
  br label %cond.end, !dbg !10723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %153, %cond.true ], [ null, %cond.false ], !dbg !10723
  store %struct.Object* %cond, %struct.Object** %obt, align 8, !dbg !10729
  %154 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10730
  %tobool218 = icmp ne %struct.Object* %154, null, !dbg !10730
  br i1 %tobool218, label %land.lhs.true219, label %if.end224, !dbg !10732

land.lhs.true219:                                 ; preds = %cond.end
  %155 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10733
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %155, i32 0, i32 27, !dbg !10734
  %156 = load i32, i32* %mode, align 8, !dbg !10734
  %and220 = and i32 %156, 16, !dbg !10735
  %tobool221 = icmp ne i32 %and220, 0, !dbg !10735
  br i1 %tobool221, label %if.then222, label %if.end224, !dbg !10736

if.then222:                                       ; preds = %land.lhs.true219
  %157 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10737
  %158 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10739
  call void @BKE_texpaint_slots_refresh_object(%struct.Scene* %157, %struct.Object* %158), !dbg !10740
  %159 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10741
  %160 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10742
  %call223 = call zeroext i8 @BKE_paint_proj_mesh_data_check(%struct.Scene* %159, %struct.Object* %160, i8* null, i8* null, i8* null, i8* null), !dbg !10743
  %161 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10744
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %161, i32 0, i32 120, !dbg !10745
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !10745
  call void @GPU_drawobject_free(%struct.DerivedMesh* %162), !dbg !10746
  br label %if.end224, !dbg !10747

if.end224:                                        ; preds = %if.then222, %land.lhs.true219, %cond.end
  br label %if.end225, !dbg !10748

if.end225:                                        ; preds = %if.end224, %lor.lhs.false210
  %163 = load i16, i16* %idtype, align 2, !dbg !10749
  %conv226 = sext i16 %163 to i32, !dbg !10749
  %cmp227 = icmp eq i32 %conv226, 17229, !dbg !10751
  br i1 %cmp227, label %if.then229, label %if.end284, !dbg !10752

if.then229:                                       ; preds = %if.end225
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !10753, metadata !DIExpression()), !dbg !10755
  %164 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10756
  %165 = bitcast %struct.ID* %164 to %struct.MovieClip*, !dbg !10757
  store %struct.MovieClip* %165, %struct.MovieClip** %clip, align 8, !dbg !10755
  %166 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !10758
  %tracking = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %166, i32 0, i32 11, !dbg !10759
  call void @BKE_tracking_dopesheet_tag_update(%struct.MovieTracking* %tracking), !dbg !10760
  %167 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10761
  %object230 = getelementptr inbounds %struct.Main, %struct.Main* %167, i32 0, i32 13, !dbg !10763
  %first231 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object230, i32 0, i32 0, !dbg !10764
  %168 = load i8*, i8** %first231, align 8, !dbg !10764
  %169 = bitcast i8* %168 to %struct.Object*, !dbg !10761
  store %struct.Object* %169, %struct.Object** %obt, align 8, !dbg !10765
  br label %for.cond232, !dbg !10766

for.cond232:                                      ; preds = %for.inc263, %if.then229
  %170 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10767
  %tobool233 = icmp ne %struct.Object* %170, null, !dbg !10769
  br i1 %tobool233, label %for.body234, label %for.end266, !dbg !10769

for.body234:                                      ; preds = %for.cond232
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !10770, metadata !DIExpression()), !dbg !10772
  %171 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10773
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %171, i32 0, i32 106, !dbg !10775
  %first235 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !10776
  %172 = load i8*, i8** %first235, align 8, !dbg !10776
  %173 = bitcast i8* %172 to %struct.bConstraint*, !dbg !10773
  store %struct.bConstraint* %173, %struct.bConstraint** %con, align 8, !dbg !10777
  br label %for.cond236, !dbg !10778

for.cond236:                                      ; preds = %for.inc260, %for.body234
  %174 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !10779
  %tobool237 = icmp ne %struct.bConstraint* %174, null, !dbg !10781
  br i1 %tobool237, label %for.body238, label %for.end262, !dbg !10781

for.body238:                                      ; preds = %for.cond236
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !10782, metadata !DIExpression()), !dbg !10784
  %175 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !10785
  %call239 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %175), !dbg !10786
  store %struct.bConstraintTypeInfo* %call239, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !10784
  %176 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !10787
  %type = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %176, i32 0, i32 0, !dbg !10787
  %177 = load i16, i16* %type, align 8, !dbg !10787
  %conv240 = sext i16 %177 to i32, !dbg !10787
  %cmp241 = icmp eq i32 %conv240, 26, !dbg !10787
  br i1 %cmp241, label %if.then253, label %lor.lhs.false243, !dbg !10787

lor.lhs.false243:                                 ; preds = %for.body238
  %178 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !10787
  %type244 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %178, i32 0, i32 0, !dbg !10787
  %179 = load i16, i16* %type244, align 8, !dbg !10787
  %conv245 = sext i16 %179 to i32, !dbg !10787
  %cmp246 = icmp eq i32 %conv245, 27, !dbg !10787
  br i1 %cmp246, label %if.then253, label %lor.lhs.false248, !dbg !10787

lor.lhs.false248:                                 ; preds = %lor.lhs.false243
  %180 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !10787
  %type249 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %180, i32 0, i32 0, !dbg !10787
  %181 = load i16, i16* %type249, align 8, !dbg !10787
  %conv250 = sext i16 %181 to i32, !dbg !10787
  %cmp251 = icmp eq i32 %conv250, 28, !dbg !10787
  br i1 %cmp251, label %if.then253, label %if.end259, !dbg !10789

if.then253:                                       ; preds = %lor.lhs.false248, %lor.lhs.false243, %for.body238
  %182 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10790
  %recalc254 = getelementptr inbounds %struct.Object, %struct.Object* %182, i32 0, i32 103, !dbg !10792
  %183 = load i8, i8* %recalc254, align 1, !dbg !10793
  %conv255 = zext i8 %183 to i32, !dbg !10793
  %or256 = or i32 %conv255, 1, !dbg !10793
  %conv257 = trunc i32 %or256 to i8, !dbg !10793
  store i8 %conv257, i8* %recalc254, align 1, !dbg !10793
  %184 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !10794
  %185 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10795
  %id258 = getelementptr inbounds %struct.Object, %struct.Object* %185, i32 0, i32 0, !dbg !10796
  call void @lib_id_recalc_tag(%struct.Main* %184, %struct.ID* %id258), !dbg !10797
  br label %for.end262, !dbg !10798

if.end259:                                        ; preds = %lor.lhs.false248
  br label %for.inc260, !dbg !10799

for.inc260:                                       ; preds = %if.end259
  %186 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !10800
  %next261 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %186, i32 0, i32 0, !dbg !10801
  %187 = load %struct.bConstraint*, %struct.bConstraint** %next261, align 8, !dbg !10801
  store %struct.bConstraint* %187, %struct.bConstraint** %con, align 8, !dbg !10802
  br label %for.cond236, !dbg !10803, !llvm.loop !10804

for.end262:                                       ; preds = %if.then253, %for.cond236
  br label %for.inc263, !dbg !10806

for.inc263:                                       ; preds = %for.end262
  %188 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !10807
  %id264 = getelementptr inbounds %struct.Object, %struct.Object* %188, i32 0, i32 0, !dbg !10808
  %next265 = getelementptr inbounds %struct.ID, %struct.ID* %id264, i32 0, i32 0, !dbg !10809
  %189 = load i8*, i8** %next265, align 8, !dbg !10809
  %190 = bitcast i8* %189 to %struct.Object*, !dbg !10807
  store %struct.Object* %190, %struct.Object** %obt, align 8, !dbg !10810
  br label %for.cond232, !dbg !10811, !llvm.loop !10812

for.end266:                                       ; preds = %for.cond232
  %191 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10814
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %191, i32 0, i32 18, !dbg !10816
  %192 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10816
  %tobool267 = icmp ne %struct.bNodeTree* %192, null, !dbg !10814
  br i1 %tobool267, label %if.then268, label %if.end283, !dbg !10817

if.then268:                                       ; preds = %for.end266
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !10818, metadata !DIExpression()), !dbg !10820
  %193 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10821
  %nodetree269 = getelementptr inbounds %struct.Scene, %struct.Scene* %193, i32 0, i32 18, !dbg !10823
  %194 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree269, align 8, !dbg !10823
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %194, i32 0, i32 7, !dbg !10824
  %first270 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !10825
  %195 = load i8*, i8** %first270, align 8, !dbg !10825
  %196 = bitcast i8* %195 to %struct.bNode*, !dbg !10821
  store %struct.bNode* %196, %struct.bNode** %node, align 8, !dbg !10826
  br label %for.cond271, !dbg !10827

for.cond271:                                      ; preds = %for.inc280, %if.then268
  %197 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10828
  %tobool272 = icmp ne %struct.bNode* %197, null, !dbg !10830
  br i1 %tobool272, label %for.body273, label %for.end282, !dbg !10830

for.body273:                                      ; preds = %for.cond271
  %198 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10831
  %id274 = getelementptr inbounds %struct.bNode, %struct.bNode* %198, i32 0, i32 20, !dbg !10834
  %199 = load %struct.ID*, %struct.ID** %id274, align 8, !dbg !10834
  %200 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !10835
  %cmp275 = icmp eq %struct.ID* %199, %200, !dbg !10836
  br i1 %cmp275, label %if.then277, label %if.end279, !dbg !10837

if.then277:                                       ; preds = %for.body273
  %201 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !10838
  %nodetree278 = getelementptr inbounds %struct.Scene, %struct.Scene* %201, i32 0, i32 18, !dbg !10840
  %202 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree278, align 8, !dbg !10840
  %203 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10841
  call void @nodeUpdate(%struct.bNodeTree* %202, %struct.bNode* %203), !dbg !10842
  br label %if.end279, !dbg !10843

if.end279:                                        ; preds = %if.then277, %for.body273
  br label %for.inc280, !dbg !10844

for.inc280:                                       ; preds = %if.end279
  %204 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10845
  %next281 = getelementptr inbounds %struct.bNode, %struct.bNode* %204, i32 0, i32 0, !dbg !10846
  %205 = load %struct.bNode*, %struct.bNode** %next281, align 8, !dbg !10846
  store %struct.bNode* %205, %struct.bNode** %node, align 8, !dbg !10847
  br label %for.cond271, !dbg !10848, !llvm.loop !10849

for.end282:                                       ; preds = %for.cond271
  br label %if.end283, !dbg !10851

if.end283:                                        ; preds = %for.end282, %for.end266
  br label %if.end284, !dbg !10852

if.end284:                                        ; preds = %if.end283, %if.end225
  %206 = load i16, i16* %idtype, align 2, !dbg !10853
  %conv285 = sext i16 %206 to i32, !dbg !10853
  %cmp286 = icmp eq i32 %conv285, 19785, !dbg !10855
  br i1 %cmp286, label %if.then288, label %if.end316, !dbg !10856

if.then288:                                       ; preds = %if.end284
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !10857, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !11002, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata %struct.ID** %parent_id, metadata !11003, metadata !DIExpression()), !dbg !11001
  %207 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11001
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %207), !dbg !11001
  br label %while.cond, !dbg !11001

while.cond:                                       ; preds = %if.end315, %if.then288
  %call289 = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %parent_id), !dbg !11001
  %conv290 = zext i8 %call289 to i32, !dbg !11001
  %cmp291 = icmp eq i32 %conv290, 1, !dbg !11001
  br i1 %cmp291, label %while.body, label %while.end, !dbg !11001

while.body:                                       ; preds = %while.cond
  %208 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11004
  %tobool293 = icmp ne %struct.bNodeTree* %208, null, !dbg !11004
  br i1 %tobool293, label %if.then294, label %if.end315, !dbg !11007

if.then294:                                       ; preds = %while.body
  %209 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11008
  %type295 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %209, i32 0, i32 9, !dbg !11012
  %210 = load i32, i32* %type295, align 8, !dbg !11012
  %cmp296 = icmp eq i32 %210, 0, !dbg !11013
  br i1 %cmp296, label %if.then298, label %if.end314, !dbg !11014

if.then298:                                       ; preds = %if.then294
  call void @llvm.dbg.declare(metadata %struct.bNode** %node299, metadata !11015, metadata !DIExpression()), !dbg !11017
  %211 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11018
  %nodes300 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %211, i32 0, i32 7, !dbg !11020
  %first301 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes300, i32 0, i32 0, !dbg !11021
  %212 = load i8*, i8** %first301, align 8, !dbg !11021
  %213 = bitcast i8* %212 to %struct.bNode*, !dbg !11018
  store %struct.bNode* %213, %struct.bNode** %node299, align 8, !dbg !11022
  br label %for.cond302, !dbg !11023

for.cond302:                                      ; preds = %for.inc311, %if.then298
  %214 = load %struct.bNode*, %struct.bNode** %node299, align 8, !dbg !11024
  %tobool303 = icmp ne %struct.bNode* %214, null, !dbg !11026
  br i1 %tobool303, label %for.body304, label %for.end313, !dbg !11026

for.body304:                                      ; preds = %for.cond302
  %215 = load %struct.bNode*, %struct.bNode** %node299, align 8, !dbg !11027
  %id305 = getelementptr inbounds %struct.bNode, %struct.bNode* %215, i32 0, i32 20, !dbg !11030
  %216 = load %struct.ID*, %struct.ID** %id305, align 8, !dbg !11030
  %217 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11031
  %cmp306 = icmp eq %struct.ID* %216, %217, !dbg !11032
  br i1 %cmp306, label %if.then308, label %if.end310, !dbg !11033

if.then308:                                       ; preds = %for.body304
  %218 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11034
  %219 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11036
  %id309 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %219, i32 0, i32 0, !dbg !11037
  call void @lib_id_recalc_tag(%struct.Main* %218, %struct.ID* %id309), !dbg !11038
  br label %for.end313, !dbg !11039

if.end310:                                        ; preds = %for.body304
  br label %for.inc311, !dbg !11040

for.inc311:                                       ; preds = %if.end310
  %220 = load %struct.bNode*, %struct.bNode** %node299, align 8, !dbg !11041
  %next312 = getelementptr inbounds %struct.bNode, %struct.bNode* %220, i32 0, i32 0, !dbg !11042
  %221 = load %struct.bNode*, %struct.bNode** %next312, align 8, !dbg !11042
  store %struct.bNode* %221, %struct.bNode** %node299, align 8, !dbg !11043
  br label %for.cond302, !dbg !11044, !llvm.loop !11045

for.end313:                                       ; preds = %if.then308, %for.cond302
  br label %if.end314, !dbg !11047

if.end314:                                        ; preds = %for.end313, %if.then294
  br label %if.end315, !dbg !11048

if.end315:                                        ; preds = %if.end314, %while.body
  br label %while.cond, !dbg !11001, !llvm.loop !11049

while.end:                                        ; preds = %while.cond
  br label %if.end316, !dbg !11051

if.end316:                                        ; preds = %while.end, %if.end284
  %222 = load i16, i16* %idtype, align 2, !dbg !11052
  %conv317 = sext i16 %222 to i32, !dbg !11052
  %cmp318 = icmp eq i32 %conv317, 21325, !dbg !11054
  br i1 %cmp318, label %if.then320, label %if.end341, !dbg !11055

if.then320:                                       ; preds = %if.end316
  %223 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11056
  %nodetree321 = getelementptr inbounds %struct.Scene, %struct.Scene* %223, i32 0, i32 18, !dbg !11059
  %224 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree321, align 8, !dbg !11059
  %tobool322 = icmp ne %struct.bNodeTree* %224, null, !dbg !11056
  br i1 %tobool322, label %if.then323, label %if.end340, !dbg !11060

if.then323:                                       ; preds = %if.then320
  call void @llvm.dbg.declare(metadata %struct.bNode** %node324, metadata !11061, metadata !DIExpression()), !dbg !11063
  %225 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11064
  %nodetree325 = getelementptr inbounds %struct.Scene, %struct.Scene* %225, i32 0, i32 18, !dbg !11066
  %226 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree325, align 8, !dbg !11066
  %nodes326 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %226, i32 0, i32 7, !dbg !11067
  %first327 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes326, i32 0, i32 0, !dbg !11068
  %227 = load i8*, i8** %first327, align 8, !dbg !11068
  %228 = bitcast i8* %227 to %struct.bNode*, !dbg !11064
  store %struct.bNode* %228, %struct.bNode** %node324, align 8, !dbg !11069
  br label %for.cond328, !dbg !11070

for.cond328:                                      ; preds = %for.inc337, %if.then323
  %229 = load %struct.bNode*, %struct.bNode** %node324, align 8, !dbg !11071
  %tobool329 = icmp ne %struct.bNode* %229, null, !dbg !11073
  br i1 %tobool329, label %for.body330, label %for.end339, !dbg !11073

for.body330:                                      ; preds = %for.cond328
  %230 = load %struct.bNode*, %struct.bNode** %node324, align 8, !dbg !11074
  %id331 = getelementptr inbounds %struct.bNode, %struct.bNode* %230, i32 0, i32 20, !dbg !11077
  %231 = load %struct.ID*, %struct.ID** %id331, align 8, !dbg !11077
  %232 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11078
  %cmp332 = icmp eq %struct.ID* %231, %232, !dbg !11079
  br i1 %cmp332, label %if.then334, label %if.end336, !dbg !11080

if.then334:                                       ; preds = %for.body330
  %233 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11081
  %nodetree335 = getelementptr inbounds %struct.Scene, %struct.Scene* %233, i32 0, i32 18, !dbg !11083
  %234 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree335, align 8, !dbg !11083
  %235 = load %struct.bNode*, %struct.bNode** %node324, align 8, !dbg !11084
  call void @nodeUpdate(%struct.bNodeTree* %234, %struct.bNode* %235), !dbg !11085
  br label %if.end336, !dbg !11086

if.end336:                                        ; preds = %if.then334, %for.body330
  br label %for.inc337, !dbg !11087

for.inc337:                                       ; preds = %if.end336
  %236 = load %struct.bNode*, %struct.bNode** %node324, align 8, !dbg !11088
  %next338 = getelementptr inbounds %struct.bNode, %struct.bNode* %236, i32 0, i32 0, !dbg !11089
  %237 = load %struct.bNode*, %struct.bNode** %next338, align 8, !dbg !11089
  store %struct.bNode* %237, %struct.bNode** %node324, align 8, !dbg !11090
  br label %for.cond328, !dbg !11091, !llvm.loop !11092

for.end339:                                       ; preds = %for.cond328
  br label %if.end340, !dbg !11094

if.end340:                                        ; preds = %for.end339, %if.then320
  br label %if.end341, !dbg !11095

if.end341:                                        ; preds = %if.end340, %if.end316
  %238 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11096
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %238, i32 0, i32 2, !dbg !11098
  %239 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !11098
  %tobool342 = icmp ne %struct.Object* %239, null, !dbg !11096
  br i1 %tobool342, label %land.lhs.true343, label %if.end356, !dbg !11099

land.lhs.true343:                                 ; preds = %if.end341
  %240 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11100
  %camera344 = getelementptr inbounds %struct.Scene, %struct.Scene* %240, i32 0, i32 2, !dbg !11101
  %241 = load %struct.Object*, %struct.Object** %camera344, align 8, !dbg !11101
  %id345 = getelementptr inbounds %struct.Object, %struct.Object* %241, i32 0, i32 0, !dbg !11102
  %242 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11103
  %cmp346 = icmp eq %struct.ID* %id345, %242, !dbg !11104
  br i1 %cmp346, label %if.then348, label %if.end356, !dbg !11105

if.then348:                                       ; preds = %land.lhs.true343
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip349, metadata !11106, metadata !DIExpression()), !dbg !11108
  %243 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11109
  %244 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11110
  %camera350 = getelementptr inbounds %struct.Scene, %struct.Scene* %244, i32 0, i32 2, !dbg !11111
  %245 = load %struct.Object*, %struct.Object** %camera350, align 8, !dbg !11111
  %call351 = call %struct.MovieClip* @BKE_object_movieclip_get(%struct.Scene* %243, %struct.Object* %245, i8 zeroext 1), !dbg !11112
  store %struct.MovieClip* %call351, %struct.MovieClip** %clip349, align 8, !dbg !11108
  %246 = load %struct.MovieClip*, %struct.MovieClip** %clip349, align 8, !dbg !11113
  %tobool352 = icmp ne %struct.MovieClip* %246, null, !dbg !11113
  br i1 %tobool352, label %if.then353, label %if.end355, !dbg !11115

if.then353:                                       ; preds = %if.then348
  %247 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11116
  %248 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11117
  %249 = load %struct.MovieClip*, %struct.MovieClip** %clip349, align 8, !dbg !11118
  %id354 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %249, i32 0, i32 0, !dbg !11119
  call void @dag_id_flush_update(%struct.Main* %247, %struct.Scene* %248, %struct.ID* %id354), !dbg !11120
  br label %if.end355, !dbg !11120

if.end355:                                        ; preds = %if.then353, %if.then348
  br label %if.end356, !dbg !11121

if.end356:                                        ; preds = %if.end355, %land.lhs.true343, %if.end341
  %250 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11122
  %251 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11123
  call void @dag_editors_id_update(%struct.Main* %250, %struct.ID* %251), !dbg !11124
  br label %if.end357, !dbg !11125

if.end357:                                        ; preds = %if.end356, %if.end17
  ret void, !dbg !11126
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_ids_check_recalc(%struct.Main* %bmain, %struct.Scene* %scene, i8 zeroext %time) #0 !dbg !11127 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %time.addr = alloca i8, align 1
  %lbarray = alloca [35 x %struct.ListBase*], align 16
  %a = alloca i32, align 4
  %updated = alloca i8, align 1
  %lb = alloca %struct.ListBase*, align 8
  %id = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11132, metadata !DIExpression()), !dbg !11133
  store i8 %time, i8* %time.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %time.addr, metadata !11134, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.declare(metadata [35 x %struct.ListBase*]* %lbarray, metadata !11136, metadata !DIExpression()), !dbg !11137
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11138, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.declare(metadata i8* %updated, metadata !11140, metadata !DIExpression()), !dbg !11141
  store i8 0, i8* %updated, align 1, !dbg !11141
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11142
  %arraydecay = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 0, !dbg !11143
  %call = call i32 @set_listbasepointers(%struct.Main* %0, %struct.ListBase** %arraydecay), !dbg !11144
  store i32 %call, i32* %a, align 4, !dbg !11145
  br label %while.cond, !dbg !11146

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %a, align 4, !dbg !11147
  %dec = add nsw i32 %1, -1, !dbg !11147
  store i32 %dec, i32* %a, align 4, !dbg !11147
  %tobool = icmp ne i32 %1, 0, !dbg !11146
  br i1 %tobool, label %while.body, label %while.end, !dbg !11146

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !11148, metadata !DIExpression()), !dbg !11150
  %2 = load i32, i32* %a, align 4, !dbg !11151
  %idxprom = sext i32 %2 to i64, !dbg !11152
  %arrayidx = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 %idxprom, !dbg !11152
  %3 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !11152
  store %struct.ListBase* %3, %struct.ListBase** %lb, align 8, !dbg !11150
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !11153, metadata !DIExpression()), !dbg !11154
  %4 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !11155
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !11156
  %5 = load i8*, i8** %first, align 8, !dbg !11156
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !11155
  store %struct.ID* %6, %struct.ID** %id, align 8, !dbg !11154
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11157
  %tobool1 = icmp ne %struct.ID* %7, null, !dbg !11157
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !11159

land.lhs.true:                                    ; preds = %while.body
  %8 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11160
  %id_tag_update = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 45, !dbg !11161
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11162
  %name = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 4, !dbg !11163
  %arrayidx2 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !11162
  %10 = load i8, i8* %arrayidx2, align 8, !dbg !11162
  %idxprom3 = zext i8 %10 to i64, !dbg !11160
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update, i64 0, i64 %idxprom3, !dbg !11160
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !11160
  %conv = zext i8 %11 to i32, !dbg !11160
  %tobool5 = icmp ne i32 %conv, 0, !dbg !11160
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11164

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %updated, align 1, !dbg !11165
  br label %while.end, !dbg !11167

if.end:                                           ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !11146, !llvm.loop !11168

while.end:                                        ; preds = %if.then, %while.cond
  %12 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11170
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11171
  %14 = load i8, i8* %updated, align 1, !dbg !11172
  %conv6 = zext i8 %14 to i32, !dbg !11172
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !11172
  br i1 %tobool7, label %lor.end, label %lor.rhs, !dbg !11173

lor.rhs:                                          ; preds = %while.end
  %15 = load i8, i8* %time.addr, align 1, !dbg !11174
  %conv8 = zext i8 %15 to i32, !dbg !11174
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !11173
  br label %lor.end, !dbg !11173

lor.end:                                          ; preds = %lor.rhs, %while.end
  %16 = phi i1 [ true, %while.end ], [ %tobool9, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32, !dbg !11173
  call void @dag_editors_scene_update(%struct.Main* %12, %struct.Scene* %13, i32 %lor.ext), !dbg !11175
  ret void, !dbg !11176
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_editors_scene_update(%struct.Main* %bmain, %struct.Scene* %scene, i32 %updated) #0 !dbg !11177 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %updated.addr = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !11178, metadata !DIExpression()), !dbg !11179
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11180, metadata !DIExpression()), !dbg !11181
  store i32 %updated, i32* %updated.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %updated.addr, metadata !11182, metadata !DIExpression()), !dbg !11183
  %0 = load void (%struct.Main*, %struct.Scene*, i32)*, void (%struct.Main*, %struct.Scene*, i32)** @EditorsUpdateSceneCb, align 8, !dbg !11184
  %tobool = icmp ne void (%struct.Main*, %struct.Scene*, i32)* %0, null, !dbg !11184
  br i1 %tobool, label %if.then, label %if.end, !dbg !11186

if.then:                                          ; preds = %entry
  %1 = load void (%struct.Main*, %struct.Scene*, i32)*, void (%struct.Main*, %struct.Scene*, i32)** @EditorsUpdateSceneCb, align 8, !dbg !11187
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11188
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11189
  %4 = load i32, i32* %updated.addr, align 4, !dbg !11190
  call void %1(%struct.Main* %2, %struct.Scene* %3, i32 %4), !dbg !11187
  br label %if.end, !dbg !11187

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11191
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_ids_clear_recalc(%struct.Main* %bmain) #0 !dbg !11192 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %lbarray = alloca [35 x %struct.ListBase*], align 16
  %ntree = alloca %struct.bNodeTree*, align 8
  %a = alloca i32, align 4
  %have_updated_objects = alloca i8, align 1
  %listbase = alloca %struct.ListBase, align 8
  %dsl = alloca %struct.DagSceneLayer*, align 8
  %scene = alloca %struct.Scene*, align 8
  %node = alloca %struct.DagNode*, align 8
  %object = alloca %struct.Object*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %id = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  call void @llvm.dbg.declare(metadata [35 x %struct.ListBase*]* %lbarray, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11199, metadata !DIExpression()), !dbg !11200
  call void @llvm.dbg.declare(metadata i8* %have_updated_objects, metadata !11201, metadata !DIExpression()), !dbg !11202
  store i8 0, i8* %have_updated_objects, align 1, !dbg !11202
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11203
  %call = call i32 @DAG_id_type_tagged(%struct.Main* %0, i16 signext 16975), !dbg !11205
  %tobool = icmp ne i32 %call, 0, !dbg !11205
  br i1 %tobool, label %if.then, label %if.end19, !dbg !11206

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase* %listbase, metadata !11207, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.declare(metadata %struct.DagSceneLayer** %dsl, metadata !11210, metadata !DIExpression()), !dbg !11211
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11212
  call void @dag_current_scene_layers(%struct.Main* %1, %struct.ListBase* %listbase), !dbg !11213
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %listbase, i32 0, i32 0, !dbg !11214
  %2 = load i8*, i8** %first, align 8, !dbg !11214
  %3 = bitcast i8* %2 to %struct.DagSceneLayer*, !dbg !11216
  store %struct.DagSceneLayer* %3, %struct.DagSceneLayer** %dsl, align 8, !dbg !11217
  br label %for.cond, !dbg !11218

for.cond:                                         ; preds = %for.inc16, %if.then
  %4 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !11219
  %tobool1 = icmp ne %struct.DagSceneLayer* %4, null, !dbg !11221
  br i1 %tobool1, label %for.body, label %for.end18, !dbg !11221

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11222, metadata !DIExpression()), !dbg !11224
  %5 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !11225
  %scene2 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %5, i32 0, i32 2, !dbg !11226
  %6 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !11226
  store %struct.Scene* %6, %struct.Scene** %scene, align 8, !dbg !11224
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !11227, metadata !DIExpression()), !dbg !11228
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11229
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 31, !dbg !11231
  %8 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !11231
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %8, i32 0, i32 0, !dbg !11232
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !11233
  %9 = load i8*, i8** %first3, align 8, !dbg !11233
  %10 = bitcast i8* %9 to %struct.DagNode*, !dbg !11229
  store %struct.DagNode* %10, %struct.DagNode** %node, align 8, !dbg !11234
  br label %for.cond4, !dbg !11235

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11236
  %cmp = icmp ne %struct.DagNode* %11, null, !dbg !11238
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11239

land.rhs:                                         ; preds = %for.cond4
  %12 = load i8, i8* %have_updated_objects, align 1, !dbg !11240
  %conv = zext i8 %12 to i32, !dbg !11240
  %cmp5 = icmp eq i32 %conv, 0, !dbg !11241
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond4
  %13 = phi i1 [ false, %for.cond4 ], [ %cmp5, %land.rhs ], !dbg !11242
  br i1 %13, label %for.body7, label %for.end, !dbg !11243

for.body7:                                        ; preds = %land.end
  %14 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11244
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %14, i32 0, i32 1, !dbg !11247
  %15 = load i16, i16* %type, align 4, !dbg !11247
  %conv8 = sext i16 %15 to i32, !dbg !11244
  %cmp9 = icmp eq i32 %conv8, 16975, !dbg !11248
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !11249

if.then11:                                        ; preds = %for.body7
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !11250, metadata !DIExpression()), !dbg !11252
  %16 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11253
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 5, !dbg !11254
  %17 = load i8*, i8** %ob, align 8, !dbg !11254
  %18 = bitcast i8* %17 to %struct.Object*, !dbg !11255
  store %struct.Object* %18, %struct.Object** %object, align 8, !dbg !11252
  %19 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !11256
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 103, !dbg !11258
  %20 = load i8, i8* %recalc, align 1, !dbg !11258
  %conv12 = zext i8 %20 to i32, !dbg !11256
  %and = and i32 %conv12, 7, !dbg !11259
  %tobool13 = icmp ne i32 %and, 0, !dbg !11259
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !11260

if.then14:                                        ; preds = %if.then11
  store i8 1, i8* %have_updated_objects, align 1, !dbg !11261
  br label %for.end, !dbg !11263

if.end:                                           ; preds = %if.then11
  br label %if.end15, !dbg !11264

if.end15:                                         ; preds = %if.end, %for.body7
  br label %for.inc, !dbg !11265

for.inc:                                          ; preds = %if.end15
  %21 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11266
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 18, !dbg !11267
  %22 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !11267
  store %struct.DagNode* %22, %struct.DagNode** %node, align 8, !dbg !11268
  br label %for.cond4, !dbg !11269, !llvm.loop !11270

for.end:                                          ; preds = %if.then14, %land.end
  br label %for.inc16, !dbg !11272

for.inc16:                                        ; preds = %for.end
  %23 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %dsl, align 8, !dbg !11273
  %next17 = getelementptr inbounds %struct.DagSceneLayer, %struct.DagSceneLayer* %23, i32 0, i32 0, !dbg !11274
  %24 = load %struct.DagSceneLayer*, %struct.DagSceneLayer** %next17, align 8, !dbg !11274
  store %struct.DagSceneLayer* %24, %struct.DagSceneLayer** %dsl, align 8, !dbg !11275
  br label %for.cond, !dbg !11276, !llvm.loop !11277

for.end18:                                        ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %listbase), !dbg !11279
  br label %if.end19, !dbg !11280

if.end19:                                         ; preds = %for.end18, %entry
  %25 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11281
  %arraydecay = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 0, !dbg !11282
  %call20 = call i32 @set_listbasepointers(%struct.Main* %25, %struct.ListBase** %arraydecay), !dbg !11283
  store i32 %call20, i32* %a, align 4, !dbg !11284
  br label %while.cond, !dbg !11285

while.cond:                                       ; preds = %if.end60, %if.end19
  %26 = load i32, i32* %a, align 4, !dbg !11286
  %dec = add nsw i32 %26, -1, !dbg !11286
  store i32 %dec, i32* %a, align 4, !dbg !11286
  %tobool21 = icmp ne i32 %26, 0, !dbg !11285
  br i1 %tobool21, label %while.body, label %while.end, !dbg !11285

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !11287, metadata !DIExpression()), !dbg !11289
  %27 = load i32, i32* %a, align 4, !dbg !11290
  %idxprom = sext i32 %27 to i64, !dbg !11291
  %arrayidx = getelementptr inbounds [35 x %struct.ListBase*], [35 x %struct.ListBase*]* %lbarray, i64 0, i64 %idxprom, !dbg !11291
  %28 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !11291
  store %struct.ListBase* %28, %struct.ListBase** %lb, align 8, !dbg !11289
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !11292, metadata !DIExpression()), !dbg !11293
  %29 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !11294
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %29, i32 0, i32 0, !dbg !11295
  %30 = load i8*, i8** %first22, align 8, !dbg !11295
  %31 = bitcast i8* %30 to %struct.ID*, !dbg !11294
  store %struct.ID* %31, %struct.ID** %id, align 8, !dbg !11293
  %32 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11296
  %tobool23 = icmp ne %struct.ID* %32, null, !dbg !11296
  br i1 %tobool23, label %land.lhs.true, label %if.end60, !dbg !11298

land.lhs.true:                                    ; preds = %while.body
  %33 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11299
  %id_tag_update = getelementptr inbounds %struct.Main, %struct.Main* %33, i32 0, i32 45, !dbg !11300
  %34 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11301
  %name = getelementptr inbounds %struct.ID, %struct.ID* %34, i32 0, i32 4, !dbg !11302
  %arrayidx24 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !11301
  %35 = load i8, i8* %arrayidx24, align 8, !dbg !11301
  %idxprom25 = zext i8 %35 to i64, !dbg !11299
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update, i64 0, i64 %idxprom25, !dbg !11299
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !11299
  %conv27 = zext i8 %36 to i32, !dbg !11299
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !11299
  br i1 %tobool28, label %if.then29, label %if.end60, !dbg !11303

if.then29:                                        ; preds = %land.lhs.true
  br label %for.cond30, !dbg !11304

for.cond30:                                       ; preds = %for.inc57, %if.then29
  %37 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11306
  %tobool31 = icmp ne %struct.ID* %37, null, !dbg !11309
  br i1 %tobool31, label %for.body32, label %for.end59, !dbg !11309

for.body32:                                       ; preds = %for.cond30
  %38 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11310
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %38, i32 0, i32 5, !dbg !11313
  %39 = load i16, i16* %flag, align 2, !dbg !11313
  %conv33 = sext i16 %39 to i32, !dbg !11310
  %and34 = and i32 %conv33, 12288, !dbg !11314
  %tobool35 = icmp ne i32 %and34, 0, !dbg !11314
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !11315

if.then36:                                        ; preds = %for.body32
  %40 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11316
  %flag37 = getelementptr inbounds %struct.ID, %struct.ID* %40, i32 0, i32 5, !dbg !11317
  %41 = load i16, i16* %flag37, align 2, !dbg !11318
  %conv38 = sext i16 %41 to i32, !dbg !11318
  %and39 = and i32 %conv38, -12289, !dbg !11318
  %conv40 = trunc i32 %and39 to i16, !dbg !11318
  store i16 %conv40, i16* %flag37, align 2, !dbg !11318
  br label %if.end41, !dbg !11316

if.end41:                                         ; preds = %if.then36, %for.body32
  %42 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11319
  %call42 = call %struct.bNodeTree* @ntreeFromID(%struct.ID* %42), !dbg !11320
  store %struct.bNodeTree* %call42, %struct.bNodeTree** %ntree, align 8, !dbg !11321
  %43 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11322
  %tobool43 = icmp ne %struct.bNodeTree* %43, null, !dbg !11322
  br i1 %tobool43, label %land.lhs.true44, label %if.end56, !dbg !11324

land.lhs.true44:                                  ; preds = %if.end41
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11325
  %id45 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %44, i32 0, i32 0, !dbg !11326
  %flag46 = getelementptr inbounds %struct.ID, %struct.ID* %id45, i32 0, i32 5, !dbg !11327
  %45 = load i16, i16* %flag46, align 2, !dbg !11327
  %conv47 = sext i16 %45 to i32, !dbg !11325
  %and48 = and i32 %conv47, 12288, !dbg !11328
  %tobool49 = icmp ne i32 %and48, 0, !dbg !11328
  br i1 %tobool49, label %if.then50, label %if.end56, !dbg !11329

if.then50:                                        ; preds = %land.lhs.true44
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !11330
  %id51 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %46, i32 0, i32 0, !dbg !11331
  %flag52 = getelementptr inbounds %struct.ID, %struct.ID* %id51, i32 0, i32 5, !dbg !11332
  %47 = load i16, i16* %flag52, align 2, !dbg !11333
  %conv53 = sext i16 %47 to i32, !dbg !11333
  %and54 = and i32 %conv53, -12289, !dbg !11333
  %conv55 = trunc i32 %and54 to i16, !dbg !11333
  store i16 %conv55, i16* %flag52, align 2, !dbg !11333
  br label %if.end56, !dbg !11330

if.end56:                                         ; preds = %if.then50, %land.lhs.true44, %if.end41
  br label %for.inc57, !dbg !11334

for.inc57:                                        ; preds = %if.end56
  %48 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11335
  %next58 = getelementptr inbounds %struct.ID, %struct.ID* %48, i32 0, i32 0, !dbg !11336
  %49 = load i8*, i8** %next58, align 8, !dbg !11336
  %50 = bitcast i8* %49 to %struct.ID*, !dbg !11335
  store %struct.ID* %50, %struct.ID** %id, align 8, !dbg !11337
  br label %for.cond30, !dbg !11338, !llvm.loop !11339

for.end59:                                        ; preds = %for.cond30
  br label %if.end60, !dbg !11341

if.end60:                                         ; preds = %for.end59, %land.lhs.true, %while.body
  br label %while.cond, !dbg !11285, !llvm.loop !11342

while.end:                                        ; preds = %while.cond
  %51 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11344
  %id_tag_update61 = getelementptr inbounds %struct.Main, %struct.Main* %51, i32 0, i32 45, !dbg !11345
  %arraydecay62 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update61, i64 0, i64 0, !dbg !11346
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay62, i8 0, i64 256, i1 false), !dbg !11346
  %52 = load i8, i8* %have_updated_objects, align 1, !dbg !11347
  %tobool63 = icmp ne i8 %52, 0, !dbg !11347
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !11349

if.then64:                                        ; preds = %while.end
  %53 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11350
  call void @DAG_id_type_tag(%struct.Main* %53, i16 signext 16975), !dbg !11352
  br label %if.end65, !dbg !11353

if.end65:                                         ; preds = %if.then64, %while.end
  ret void, !dbg !11354
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DAG_id_type_tagged(%struct.Main* %bmain, i16 signext %idtype) #0 !dbg !11355 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %idtype.addr = alloca i16, align 2
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11362
  %id_tag_update = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 45, !dbg !11363
  %1 = bitcast i16* %idtype.addr to i8*, !dbg !11364
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11364
  %2 = load i8, i8* %arrayidx, align 2, !dbg !11364
  %idxprom = zext i8 %2 to i64, !dbg !11362
  %arrayidx1 = getelementptr inbounds [256 x i8], [256 x i8]* %id_tag_update, i64 0, i64 %idxprom, !dbg !11362
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !11362
  %conv = zext i8 %3 to i32, !dbg !11362
  ret i32 %conv, !dbg !11365
}

declare dso_local %struct.bNodeTree* @ntreeFromID(%struct.ID*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_id_tag_update_ex(%struct.Main* %bmain, %struct.ID* %id, i16 signext %flag) #0 !dbg !11366 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %flag.addr = alloca i16, align 2
  %ob = alloca %struct.Object*, align 8
  %idtype = alloca i16, align 2
  %psys = alloca %struct.ParticleSystem*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !11369, metadata !DIExpression()), !dbg !11370
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !11371, metadata !DIExpression()), !dbg !11372
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !11373, metadata !DIExpression()), !dbg !11374
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11375
  %cmp = icmp eq %struct.ID* %0, null, !dbg !11377
  br i1 %cmp, label %if.then, label %if.end, !dbg !11378

if.then:                                          ; preds = %entry
  br label %if.end102, !dbg !11379

if.end:                                           ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !11380
  %and = and i32 %1, 256, !dbg !11382
  %tobool = icmp ne i32 %and, 0, !dbg !11382
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !11383

if.then1:                                         ; preds = %if.end
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11384
  %name = getelementptr inbounds %struct.ID, %struct.ID* %2, i32 0, i32 4, !dbg !11386
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !11384
  %3 = load i16, i16* %flag.addr, align 2, !dbg !11387
  %conv = sext i16 %3 to i32, !dbg !11387
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.DAG_id_tag_update_ex, i64 0, i64 0), i8* %arraydecay, i32 %conv), !dbg !11388
  br label %if.end2, !dbg !11389

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load i16, i16* %flag.addr, align 2, !dbg !11390
  %tobool3 = icmp ne i16 %4, 0, !dbg !11390
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !11392

if.then4:                                         ; preds = %if.end2
  %5 = load i16, i16* %flag.addr, align 2, !dbg !11393
  %conv5 = sext i16 %5 to i32, !dbg !11393
  %and6 = and i32 %conv5, 1, !dbg !11396
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11396
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !11397

if.then8:                                         ; preds = %if.then4
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11398
  %7 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11399
  call void @lib_id_recalc_tag(%struct.Main* %6, %struct.ID* %7), !dbg !11400
  br label %if.end9, !dbg !11400

if.end9:                                          ; preds = %if.then8, %if.then4
  %8 = load i16, i16* %flag.addr, align 2, !dbg !11401
  %conv10 = sext i16 %8 to i32, !dbg !11401
  %and11 = and i32 %conv10, 250, !dbg !11403
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11403
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11404

if.then13:                                        ; preds = %if.end9
  %9 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11405
  %10 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11406
  call void @lib_id_recalc_data_tag(%struct.Main* %9, %struct.ID* %10), !dbg !11407
  br label %if.end14, !dbg !11407

if.end14:                                         ; preds = %if.then13, %if.end9
  br label %if.end15, !dbg !11408

if.else:                                          ; preds = %if.end2
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11409
  %12 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11410
  call void @lib_id_recalc_tag(%struct.Main* %11, %struct.ID* %12), !dbg !11411
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end14
  %13 = load i16, i16* %flag.addr, align 2, !dbg !11412
  %tobool16 = icmp ne i16 %13, 0, !dbg !11412
  br i1 %tobool16, label %if.then17, label %if.end102, !dbg !11414

if.then17:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11415, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.declare(metadata i16* %idtype, metadata !11418, metadata !DIExpression()), !dbg !11419
  %14 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11420
  %name18 = getelementptr inbounds %struct.ID, %struct.ID* %14, i32 0, i32 4, !dbg !11420
  %arraydecay19 = getelementptr inbounds [66 x i8], [66 x i8]* %name18, i64 0, i64 0, !dbg !11420
  %15 = bitcast i8* %arraydecay19 to i16*, !dbg !11420
  %16 = load i16, i16* %15, align 8, !dbg !11420
  store i16 %16, i16* %idtype, align 2, !dbg !11419
  %17 = load i16, i16* %idtype, align 2, !dbg !11421
  %conv20 = sext i16 %17 to i32, !dbg !11421
  %cmp21 = icmp eq i32 %conv20, 16975, !dbg !11423
  br i1 %cmp21, label %if.then23, label %if.else28, !dbg !11424

if.then23:                                        ; preds = %if.then17
  %18 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11425
  %19 = bitcast %struct.ID* %18 to %struct.Object*, !dbg !11427
  store %struct.Object* %19, %struct.Object** %ob, align 8, !dbg !11428
  %20 = load i16, i16* %flag.addr, align 2, !dbg !11429
  %conv24 = sext i16 %20 to i32, !dbg !11429
  %and25 = and i32 %conv24, 7, !dbg !11430
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11431
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 103, !dbg !11432
  %22 = load i8, i8* %recalc, align 1, !dbg !11433
  %conv26 = zext i8 %22 to i32, !dbg !11433
  %or = or i32 %conv26, %and25, !dbg !11433
  %conv27 = trunc i32 %or to i8, !dbg !11433
  store i8 %conv27, i8* %recalc, align 1, !dbg !11433
  br label %if.end101, !dbg !11434

if.else28:                                        ; preds = %if.then17
  %23 = load i16, i16* %idtype, align 2, !dbg !11435
  %conv29 = sext i16 %23 to i32, !dbg !11435
  %cmp30 = icmp eq i32 %conv29, 16720, !dbg !11437
  br i1 %cmp30, label %if.then32, label %if.else61, !dbg !11438

if.then32:                                        ; preds = %if.else28
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !11439, metadata !DIExpression()), !dbg !11441
  %24 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11442
  %object = getelementptr inbounds %struct.Main, %struct.Main* %24, i32 0, i32 13, !dbg !11444
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !11445
  %25 = load i8*, i8** %first, align 8, !dbg !11445
  %26 = bitcast i8* %25 to %struct.Object*, !dbg !11442
  store %struct.Object* %26, %struct.Object** %ob, align 8, !dbg !11446
  br label %for.cond, !dbg !11447

for.cond:                                         ; preds = %for.inc57, %if.then32
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11448
  %tobool33 = icmp ne %struct.Object* %27, null, !dbg !11450
  br i1 %tobool33, label %for.body, label %for.end60, !dbg !11450

for.body:                                         ; preds = %for.cond
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11451
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 109, !dbg !11454
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !11455
  %29 = load i8*, i8** %first34, align 8, !dbg !11455
  %30 = bitcast i8* %29 to %struct.ParticleSystem*, !dbg !11451
  store %struct.ParticleSystem* %30, %struct.ParticleSystem** %psys, align 8, !dbg !11456
  br label %for.cond35, !dbg !11457

for.cond35:                                       ; preds = %for.inc, %for.body
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11458
  %tobool36 = icmp ne %struct.ParticleSystem* %31, null, !dbg !11460
  br i1 %tobool36, label %for.body37, label %for.end, !dbg !11460

for.body37:                                       ; preds = %for.cond35
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11461
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %32, i32 0, i32 2, !dbg !11464
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11464
  %id38 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 0, !dbg !11465
  %34 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11466
  %cmp39 = icmp eq %struct.ID* %id38, %34, !dbg !11467
  br i1 %cmp39, label %if.then41, label %if.end56, !dbg !11468

if.then41:                                        ; preds = %for.body37
  %35 = load i16, i16* %flag.addr, align 2, !dbg !11469
  %conv42 = sext i16 %35 to i32, !dbg !11469
  %and43 = and i32 %conv42, 7, !dbg !11471
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11472
  %recalc44 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 103, !dbg !11473
  %37 = load i8, i8* %recalc44, align 1, !dbg !11474
  %conv45 = zext i8 %37 to i32, !dbg !11474
  %or46 = or i32 %conv45, %and43, !dbg !11474
  %conv47 = trunc i32 %or46 to i8, !dbg !11474
  store i8 %conv47, i8* %recalc44, align 1, !dbg !11474
  %38 = load i16, i16* %flag.addr, align 2, !dbg !11475
  %conv48 = sext i16 %38 to i32, !dbg !11475
  %and49 = and i32 %conv48, 248, !dbg !11476
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11477
  %recalc50 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 31, !dbg !11478
  %40 = load i16, i16* %recalc50, align 4, !dbg !11479
  %conv51 = sext i16 %40 to i32, !dbg !11479
  %or52 = or i32 %conv51, %and49, !dbg !11479
  %conv53 = trunc i32 %or52 to i16, !dbg !11479
  store i16 %conv53, i16* %recalc50, align 4, !dbg !11479
  %41 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11480
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11481
  %id54 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 0, !dbg !11482
  call void @lib_id_recalc_tag(%struct.Main* %41, %struct.ID* %id54), !dbg !11483
  %43 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11484
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11485
  %id55 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 0, !dbg !11486
  call void @lib_id_recalc_data_tag(%struct.Main* %43, %struct.ID* %id55), !dbg !11487
  br label %if.end56, !dbg !11488

if.end56:                                         ; preds = %if.then41, %for.body37
  br label %for.inc, !dbg !11489

for.inc:                                          ; preds = %if.end56
  %45 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11490
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %45, i32 0, i32 0, !dbg !11491
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !11491
  store %struct.ParticleSystem* %46, %struct.ParticleSystem** %psys, align 8, !dbg !11492
  br label %for.cond35, !dbg !11493, !llvm.loop !11494

for.end:                                          ; preds = %for.cond35
  br label %for.inc57, !dbg !11496

for.inc57:                                        ; preds = %for.end
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11497
  %id58 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 0, !dbg !11498
  %next59 = getelementptr inbounds %struct.ID, %struct.ID* %id58, i32 0, i32 0, !dbg !11499
  %48 = load i8*, i8** %next59, align 8, !dbg !11499
  %49 = bitcast i8* %48 to %struct.Object*, !dbg !11497
  store %struct.Object* %49, %struct.Object** %ob, align 8, !dbg !11500
  br label %for.cond, !dbg !11501, !llvm.loop !11502

for.end60:                                        ; preds = %for.cond
  br label %if.end100, !dbg !11504

if.else61:                                        ; preds = %if.else28
  %50 = load i16, i16* %idtype, align 2, !dbg !11505
  %conv62 = sext i16 %50 to i32, !dbg !11505
  %cmp63 = icmp eq i32 %conv62, 18006, !dbg !11507
  br i1 %cmp63, label %if.then65, label %if.else98, !dbg !11508

if.then65:                                        ; preds = %if.else61
  %51 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !11509
  %object66 = getelementptr inbounds %struct.Main, %struct.Main* %51, i32 0, i32 13, !dbg !11512
  %first67 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object66, i32 0, i32 0, !dbg !11513
  %52 = load i8*, i8** %first67, align 8, !dbg !11513
  %53 = bitcast i8* %52 to %struct.Object*, !dbg !11509
  store %struct.Object* %53, %struct.Object** %ob, align 8, !dbg !11514
  br label %for.cond68, !dbg !11515

for.cond68:                                       ; preds = %for.inc94, %if.then65
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11516
  %tobool69 = icmp ne %struct.Object* %54, null, !dbg !11518
  br i1 %tobool69, label %for.body70, label %for.end97, !dbg !11518

for.body70:                                       ; preds = %for.cond68
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11519
  %type = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 3, !dbg !11522
  %56 = load i16, i16* %type, align 8, !dbg !11522
  %conv71 = sext i16 %56 to i32, !dbg !11519
  %cmp72 = icmp eq i32 %conv71, 4, !dbg !11523
  br i1 %cmp72, label %if.then74, label %if.end93, !dbg !11524

if.then74:                                        ; preds = %for.body70
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !11525, metadata !DIExpression()), !dbg !11527
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11528
  %data = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 19, !dbg !11529
  %58 = load i8*, i8** %data, align 8, !dbg !11529
  %59 = bitcast i8* %58 to %struct.Curve*, !dbg !11528
  store %struct.Curve* %59, %struct.Curve** %cu, align 8, !dbg !11527
  %60 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11530
  %61 = bitcast %struct.ID* %60 to %struct.VFont*, !dbg !11530
  %62 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !11530
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %62, i32 0, i32 55, !dbg !11530
  %63 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !11530
  %cmp75 = icmp eq %struct.VFont* %61, %63, !dbg !11530
  br i1 %cmp75, label %if.then85, label %lor.lhs.false, !dbg !11530

lor.lhs.false:                                    ; preds = %if.then74
  %64 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11530
  %65 = bitcast %struct.ID* %64 to %struct.VFont*, !dbg !11530
  %66 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !11530
  %vfontb = getelementptr inbounds %struct.Curve, %struct.Curve* %66, i32 0, i32 56, !dbg !11530
  %67 = load %struct.VFont*, %struct.VFont** %vfontb, align 8, !dbg !11530
  %cmp77 = icmp eq %struct.VFont* %65, %67, !dbg !11530
  br i1 %cmp77, label %if.then85, label %lor.lhs.false79, !dbg !11530

lor.lhs.false79:                                  ; preds = %lor.lhs.false
  %68 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11530
  %69 = bitcast %struct.ID* %68 to %struct.VFont*, !dbg !11530
  %70 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !11530
  %vfonti = getelementptr inbounds %struct.Curve, %struct.Curve* %70, i32 0, i32 57, !dbg !11530
  %71 = load %struct.VFont*, %struct.VFont** %vfonti, align 8, !dbg !11530
  %cmp80 = icmp eq %struct.VFont* %69, %71, !dbg !11530
  br i1 %cmp80, label %if.then85, label %lor.lhs.false82, !dbg !11530

lor.lhs.false82:                                  ; preds = %lor.lhs.false79
  %72 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !11530
  %73 = bitcast %struct.ID* %72 to %struct.VFont*, !dbg !11530
  %74 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !11530
  %vfontbi = getelementptr inbounds %struct.Curve, %struct.Curve* %74, i32 0, i32 58, !dbg !11530
  %75 = load %struct.VFont*, %struct.VFont** %vfontbi, align 8, !dbg !11530
  %cmp83 = icmp eq %struct.VFont* %73, %75, !dbg !11530
  br i1 %cmp83, label %if.then85, label %if.end92, !dbg !11532

if.then85:                                        ; preds = %lor.lhs.false82, %lor.lhs.false79, %lor.lhs.false, %if.then74
  %76 = load i16, i16* %flag.addr, align 2, !dbg !11533
  %conv86 = sext i16 %76 to i32, !dbg !11533
  %and87 = and i32 %conv86, 7, !dbg !11535
  %77 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11536
  %recalc88 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 103, !dbg !11537
  %78 = load i8, i8* %recalc88, align 1, !dbg !11538
  %conv89 = zext i8 %78 to i32, !dbg !11538
  %or90 = or i32 %conv89, %and87, !dbg !11538
  %conv91 = trunc i32 %or90 to i8, !dbg !11538
  store i8 %conv91, i8* %recalc88, align 1, !dbg !11538
  br label %if.end92, !dbg !11539

if.end92:                                         ; preds = %if.then85, %lor.lhs.false82
  br label %if.end93, !dbg !11540

if.end93:                                         ; preds = %if.end92, %for.body70
  br label %for.inc94, !dbg !11541

for.inc94:                                        ; preds = %if.end93
  %79 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11542
  %id95 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 0, !dbg !11543
  %next96 = getelementptr inbounds %struct.ID, %struct.ID* %id95, i32 0, i32 0, !dbg !11544
  %80 = load i8*, i8** %next96, align 8, !dbg !11544
  %81 = bitcast i8* %80 to %struct.Object*, !dbg !11542
  store %struct.Object* %81, %struct.Object** %ob, align 8, !dbg !11545
  br label %for.cond68, !dbg !11546, !llvm.loop !11547

for.end97:                                        ; preds = %for.cond68
  br label %if.end99, !dbg !11549

if.else98:                                        ; preds = %if.else61
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %for.end97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %for.end60
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then23
  br label %if.end102, !dbg !11550

if.end102:                                        ; preds = %if.then, %if.end101, %if.end15
  ret void, !dbg !11551
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_pose_sort(%struct.Object* %ob) #0 !dbg !11552 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pose = alloca %struct.bPose*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %node = alloca %struct.DagNode*, align 8
  %node2 = alloca %struct.DagNode*, align 8
  %node3 = alloca %struct.DagNode*, align 8
  %rootnode = alloca %struct.DagNode*, align 8
  %dag = alloca %struct.DagForest*, align 8
  %nqueue = alloca %struct.DagNodeQueue*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %tempbase = alloca %struct.ListBase, align 8
  %skip = alloca i32, align 4
  %addtoroot = alloca i32, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %target = alloca %struct.bPoseChannel*, align 8
  %data = alloca %struct.bKinematicConstraint*, align 8
  %parchan = alloca %struct.bPoseChannel*, align 8
  %segcount = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11555, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !11557, metadata !DIExpression()), !dbg !11560
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11561
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !11562
  %1 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !11562
  store %struct.bPose* %1, %struct.bPose** %pose, align 8, !dbg !11560
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !11565, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !11567, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node2, metadata !11569, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node3, metadata !11571, metadata !DIExpression()), !dbg !11572
  call void @llvm.dbg.declare(metadata %struct.DagNode** %rootnode, metadata !11573, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag, metadata !11575, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %nqueue, metadata !11577, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !11579, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tempbase, metadata !11581, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i32 0, i32* %skip, align 4, !dbg !11584
  %call = call %struct.DagForest* @dag_init(), !dbg !11585
  store %struct.DagForest* %call, %struct.DagForest** %dag, align 8, !dbg !11586
  %2 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11587
  %ugly_hack_sorry = getelementptr inbounds %struct.DagForest, %struct.DagForest* %2, i32 0, i32 5, !dbg !11588
  store i8 0, i8* %ugly_hack_sorry, align 4, !dbg !11589
  %3 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11590
  %call2 = call %struct.DagNode* @dag_add_node(%struct.DagForest* %3, i8* null), !dbg !11591
  store %struct.DagNode* %call2, %struct.DagNode** %rootnode, align 8, !dbg !11592
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11593
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %4, i32 0, i32 0, !dbg !11595
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !11596
  %5 = load i8*, i8** %first, align 8, !dbg !11596
  %6 = bitcast i8* %5 to %struct.bPoseChannel*, !dbg !11593
  store %struct.bPoseChannel* %6, %struct.bPoseChannel** %pchan, align 8, !dbg !11597
  br label %for.cond, !dbg !11598

for.cond:                                         ; preds = %for.inc65, %entry
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11599
  %tobool = icmp ne %struct.bPoseChannel* %7, null, !dbg !11601
  br i1 %tobool, label %for.body, label %for.end67, !dbg !11601

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %addtoroot, metadata !11602, metadata !DIExpression()), !dbg !11604
  store i32 1, i32* %addtoroot, align 4, !dbg !11604
  %8 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11605
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11606
  %10 = bitcast %struct.bPoseChannel* %9 to i8*, !dbg !11606
  %call3 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %8, i8* %10), !dbg !11607
  store %struct.DagNode* %call3, %struct.DagNode** %node, align 8, !dbg !11608
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11609
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 13, !dbg !11611
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !11611
  %tobool4 = icmp ne %struct.bPoseChannel* %12, null, !dbg !11609
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11612

if.then:                                          ; preds = %for.body
  %13 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11613
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11615
  %parent5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 13, !dbg !11616
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent5, align 8, !dbg !11616
  %16 = bitcast %struct.bPoseChannel* %15 to i8*, !dbg !11615
  %call6 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %13, i8* %16), !dbg !11617
  store %struct.DagNode* %call6, %struct.DagNode** %node2, align 8, !dbg !11618
  %17 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11619
  %18 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !11620
  %19 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11621
  call void @dag_add_relation(%struct.DagForest* %17, %struct.DagNode* %18, %struct.DagNode* %19, i16 signext 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0)), !dbg !11622
  store i32 0, i32* %addtoroot, align 4, !dbg !11623
  br label %if.end, !dbg !11624

if.end:                                           ; preds = %if.then, %for.body
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11625
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 3, !dbg !11627
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !11628
  %21 = load i8*, i8** %first7, align 8, !dbg !11628
  %22 = bitcast i8* %21 to %struct.bConstraint*, !dbg !11625
  store %struct.bConstraint* %22, %struct.bConstraint** %con, align 8, !dbg !11629
  br label %for.cond8, !dbg !11630

for.cond8:                                        ; preds = %for.inc58, %if.end
  %23 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11631
  %tobool9 = icmp ne %struct.bConstraint* %23, null, !dbg !11633
  br i1 %tobool9, label %for.body10, label %for.end60, !dbg !11633

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !11634, metadata !DIExpression()), !dbg !11636
  %24 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11637
  %call11 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %24), !dbg !11638
  store %struct.bConstraintTypeInfo* %call11, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11636
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !11639, metadata !DIExpression()), !dbg !11640
  %25 = bitcast %struct.ListBase* %targets to i8*, !dbg !11640
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false), !dbg !11640
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !11641, metadata !DIExpression()), !dbg !11642
  %26 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11643
  %tobool12 = icmp ne %struct.bConstraintTypeInfo* %26, null, !dbg !11643
  br i1 %tobool12, label %land.lhs.true, label %if.end57, !dbg !11645

land.lhs.true:                                    ; preds = %for.body10
  %27 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11646
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %27, i32 0, i32 8, !dbg !11647
  %28 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !11647
  %tobool13 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %28, null, !dbg !11646
  br i1 %tobool13, label %if.then14, label %if.end57, !dbg !11648

if.then14:                                        ; preds = %land.lhs.true
  %29 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11649
  %get_constraint_targets15 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %29, i32 0, i32 8, !dbg !11651
  %30 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets15, align 8, !dbg !11651
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11652
  %call16 = call i32 %30(%struct.bConstraint* %31, %struct.ListBase* %targets), !dbg !11649
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !11653
  %32 = load i8*, i8** %first17, align 8, !dbg !11653
  %33 = bitcast i8* %32 to %struct.bConstraintTarget*, !dbg !11655
  store %struct.bConstraintTarget* %33, %struct.bConstraintTarget** %ct, align 8, !dbg !11656
  br label %for.cond18, !dbg !11657

for.cond18:                                       ; preds = %for.inc, %if.then14
  %34 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11658
  %tobool19 = icmp ne %struct.bConstraintTarget* %34, null, !dbg !11660
  br i1 %tobool19, label %for.body20, label %for.end, !dbg !11660

for.body20:                                       ; preds = %for.cond18
  %35 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11661
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %35, i32 0, i32 2, !dbg !11664
  %36 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !11664
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11665
  %cmp = icmp eq %struct.Object* %36, %37, !dbg !11666
  br i1 %cmp, label %land.lhs.true21, label %if.end52, !dbg !11667

land.lhs.true21:                                  ; preds = %for.body20
  %38 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11668
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %38, i32 0, i32 3, !dbg !11669
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !11668
  %39 = load i8, i8* %arrayidx, align 8, !dbg !11668
  %conv = zext i8 %39 to i32, !dbg !11668
  %tobool22 = icmp ne i32 %conv, 0, !dbg !11668
  br i1 %tobool22, label %if.then23, label %if.end52, !dbg !11670

if.then23:                                        ; preds = %land.lhs.true21
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %target, metadata !11671, metadata !DIExpression()), !dbg !11673
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11674
  %pose24 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 18, !dbg !11675
  %41 = load %struct.bPose*, %struct.bPose** %pose24, align 8, !dbg !11675
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11676
  %subtarget25 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %42, i32 0, i32 3, !dbg !11677
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget25, i64 0, i64 0, !dbg !11676
  %call26 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %41, i8* %arraydecay), !dbg !11678
  store %struct.bPoseChannel* %call26, %struct.bPoseChannel** %target, align 8, !dbg !11673
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %target, align 8, !dbg !11679
  %tobool27 = icmp ne %struct.bPoseChannel* %43, null, !dbg !11679
  br i1 %tobool27, label %if.then28, label %if.end51, !dbg !11681

if.then28:                                        ; preds = %if.then23
  %44 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11682
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %target, align 8, !dbg !11684
  %46 = bitcast %struct.bPoseChannel* %45 to i8*, !dbg !11684
  %call29 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %44, i8* %46), !dbg !11685
  store %struct.DagNode* %call29, %struct.DagNode** %node2, align 8, !dbg !11686
  %47 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11687
  %48 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !11688
  %49 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11689
  call void @dag_add_relation(%struct.DagForest* %47, %struct.DagNode* %48, %struct.DagNode* %49, i16 signext 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)), !dbg !11690
  %50 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11691
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %50, i32 0, i32 3, !dbg !11693
  %51 = load i16, i16* %type, align 8, !dbg !11693
  %conv30 = sext i16 %51 to i32, !dbg !11691
  %cmp31 = icmp eq i32 %conv30, 3, !dbg !11694
  br i1 %cmp31, label %if.then33, label %if.end50, !dbg !11695

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.bKinematicConstraint** %data, metadata !11696, metadata !DIExpression()), !dbg !11698
  %52 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11699
  %data34 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %52, i32 0, i32 2, !dbg !11700
  %53 = load i8*, i8** %data34, align 8, !dbg !11700
  %54 = bitcast i8* %53 to %struct.bKinematicConstraint*, !dbg !11701
  store %struct.bKinematicConstraint* %54, %struct.bKinematicConstraint** %data, align 8, !dbg !11698
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %parchan, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata i32* %segcount, metadata !11704, metadata !DIExpression()), !dbg !11705
  store i32 0, i32* %segcount, align 4, !dbg !11705
  %55 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !11706
  %flag = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %55, i32 0, i32 2, !dbg !11708
  %56 = load i16, i16* %flag, align 2, !dbg !11708
  %conv35 = sext i16 %56 to i32, !dbg !11706
  %and = and i32 %conv35, 1, !dbg !11709
  %tobool36 = icmp ne i32 %and, 0, !dbg !11709
  br i1 %tobool36, label %if.else, label %if.then37, !dbg !11710

if.then37:                                        ; preds = %if.then33
  %57 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11711
  %parent38 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %57, i32 0, i32 13, !dbg !11712
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent38, align 8, !dbg !11712
  store %struct.bPoseChannel* %58, %struct.bPoseChannel** %parchan, align 8, !dbg !11713
  br label %if.end39, !dbg !11714

if.else:                                          ; preds = %if.then33
  %59 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11715
  store %struct.bPoseChannel* %59, %struct.bPoseChannel** %parchan, align 8, !dbg !11716
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then37
  br label %while.cond, !dbg !11717

while.cond:                                       ; preds = %if.end48, %if.end39
  %60 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !11718
  %tobool40 = icmp ne %struct.bPoseChannel* %60, null, !dbg !11717
  br i1 %tobool40, label %while.body, label %while.end, !dbg !11717

while.body:                                       ; preds = %while.cond
  %61 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11719
  %62 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !11721
  %63 = bitcast %struct.bPoseChannel* %62 to i8*, !dbg !11721
  %call41 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %61, i8* %63), !dbg !11722
  store %struct.DagNode* %call41, %struct.DagNode** %node3, align 8, !dbg !11723
  %64 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11724
  %65 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !11725
  %66 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !11726
  call void @dag_add_relation(%struct.DagForest* %64, %struct.DagNode* %65, %struct.DagNode* %66, i16 signext 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)), !dbg !11727
  %67 = load i32, i32* %segcount, align 4, !dbg !11728
  %inc = add nsw i32 %67, 1, !dbg !11728
  store i32 %inc, i32* %segcount, align 4, !dbg !11728
  %68 = load i32, i32* %segcount, align 4, !dbg !11729
  %69 = load %struct.bKinematicConstraint*, %struct.bKinematicConstraint** %data, align 8, !dbg !11731
  %rootbone = getelementptr inbounds %struct.bKinematicConstraint, %struct.bKinematicConstraint* %69, i32 0, i32 3, !dbg !11732
  %70 = load i16, i16* %rootbone, align 4, !dbg !11732
  %conv42 = sext i16 %70 to i32, !dbg !11731
  %cmp43 = icmp eq i32 %68, %conv42, !dbg !11733
  br i1 %cmp43, label %if.then47, label %lor.lhs.false, !dbg !11734

lor.lhs.false:                                    ; preds = %while.body
  %71 = load i32, i32* %segcount, align 4, !dbg !11735
  %cmp45 = icmp sgt i32 %71, 255, !dbg !11736
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11737

if.then47:                                        ; preds = %lor.lhs.false, %while.body
  br label %while.end, !dbg !11738

if.end48:                                         ; preds = %lor.lhs.false
  %72 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !11739
  %parent49 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %72, i32 0, i32 13, !dbg !11740
  %73 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent49, align 8, !dbg !11740
  store %struct.bPoseChannel* %73, %struct.bPoseChannel** %parchan, align 8, !dbg !11741
  br label %while.cond, !dbg !11717, !llvm.loop !11742

while.end:                                        ; preds = %if.then47, %while.cond
  br label %if.end50, !dbg !11744

if.end50:                                         ; preds = %while.end, %if.then28
  br label %if.end51, !dbg !11745

if.end51:                                         ; preds = %if.end50, %if.then23
  br label %if.end52, !dbg !11746

if.end52:                                         ; preds = %if.end51, %land.lhs.true21, %for.body20
  br label %for.inc, !dbg !11747

for.inc:                                          ; preds = %if.end52
  %74 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !11748
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %74, i32 0, i32 0, !dbg !11749
  %75 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !11749
  store %struct.bConstraintTarget* %75, %struct.bConstraintTarget** %ct, align 8, !dbg !11750
  br label %for.cond18, !dbg !11751, !llvm.loop !11752

for.end:                                          ; preds = %for.cond18
  %76 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11754
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %76, i32 0, i32 9, !dbg !11756
  %77 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !11756
  %tobool53 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %77, null, !dbg !11754
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !11757

if.then54:                                        ; preds = %for.end
  %78 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !11758
  %flush_constraint_targets55 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %78, i32 0, i32 9, !dbg !11759
  %79 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets55, align 8, !dbg !11759
  %80 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11760
  call void %79(%struct.bConstraint* %80, %struct.ListBase* %targets, i8 zeroext 1), !dbg !11758
  br label %if.end56, !dbg !11758

if.end56:                                         ; preds = %if.then54, %for.end
  br label %if.end57, !dbg !11761

if.end57:                                         ; preds = %if.end56, %land.lhs.true, %for.body10
  br label %for.inc58, !dbg !11762

for.inc58:                                        ; preds = %if.end57
  %81 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !11763
  %next59 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %81, i32 0, i32 0, !dbg !11764
  %82 = load %struct.bConstraint*, %struct.bConstraint** %next59, align 8, !dbg !11764
  store %struct.bConstraint* %82, %struct.bConstraint** %con, align 8, !dbg !11765
  br label %for.cond8, !dbg !11766, !llvm.loop !11767

for.end60:                                        ; preds = %for.cond8
  %83 = load i32, i32* %addtoroot, align 4, !dbg !11769
  %cmp61 = icmp eq i32 %83, 1, !dbg !11771
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !11772

if.then63:                                        ; preds = %for.end60
  %84 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11773
  %85 = load %struct.DagNode*, %struct.DagNode** %rootnode, align 8, !dbg !11775
  %86 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11776
  call void @dag_add_relation(%struct.DagForest* %84, %struct.DagNode* %85, %struct.DagNode* %86, i16 signext 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0)), !dbg !11777
  br label %if.end64, !dbg !11778

if.end64:                                         ; preds = %if.then63, %for.end60
  br label %for.inc65, !dbg !11779

for.inc65:                                        ; preds = %if.end64
  %87 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11780
  %next66 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %87, i32 0, i32 0, !dbg !11781
  %88 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next66, align 8, !dbg !11781
  store %struct.bPoseChannel* %88, %struct.bPoseChannel** %pchan, align 8, !dbg !11782
  br label %for.cond, !dbg !11783, !llvm.loop !11784

for.end67:                                        ; preds = %for.cond
  %89 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11786
  call void @dag_check_cycle(%struct.DagForest* %89), !dbg !11787
  call void @BLI_listbase_clear(%struct.ListBase* %tempbase), !dbg !11788
  %call68 = call %struct.DagNodeQueue* @queue_create(i32 50), !dbg !11789
  store %struct.DagNodeQueue* %call68, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11790
  %90 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11791
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %90, i32 0, i32 0, !dbg !11793
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !11794
  %91 = load i8*, i8** %first69, align 8, !dbg !11794
  %92 = bitcast i8* %91 to %struct.DagNode*, !dbg !11791
  store %struct.DagNode* %92, %struct.DagNode** %node, align 8, !dbg !11795
  br label %for.cond70, !dbg !11796

for.cond70:                                       ; preds = %for.inc73, %for.end67
  %93 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11797
  %tobool71 = icmp ne %struct.DagNode* %93, null, !dbg !11799
  br i1 %tobool71, label %for.body72, label %for.end75, !dbg !11799

for.body72:                                       ; preds = %for.cond70
  %94 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11800
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %94, i32 0, i32 0, !dbg !11801
  store i32 0, i32* %color, align 8, !dbg !11802
  br label %for.inc73, !dbg !11800

for.inc73:                                        ; preds = %for.body72
  %95 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11803
  %next74 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %95, i32 0, i32 18, !dbg !11804
  %96 = load %struct.DagNode*, %struct.DagNode** %next74, align 8, !dbg !11804
  store %struct.DagNode* %96, %struct.DagNode** %node, align 8, !dbg !11805
  br label %for.cond70, !dbg !11806, !llvm.loop !11807

for.end75:                                        ; preds = %for.cond70
  %97 = load %struct.DagNode*, %struct.DagNode** %rootnode, align 8, !dbg !11809
  %color76 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %97, i32 0, i32 0, !dbg !11810
  store i32 1, i32* %color76, align 8, !dbg !11811
  %98 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11812
  %99 = load %struct.DagNode*, %struct.DagNode** %rootnode, align 8, !dbg !11813
  call void @push_stack(%struct.DagNodeQueue* %98, %struct.DagNode* %99), !dbg !11814
  br label %while.cond77, !dbg !11815

while.cond77:                                     ; preds = %if.end111, %for.end75
  %100 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11816
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %100, i32 0, i32 2, !dbg !11817
  %101 = load i32, i32* %count, align 8, !dbg !11817
  %tobool78 = icmp ne i32 %101, 0, !dbg !11815
  br i1 %tobool78, label %while.body79, label %while.end112, !dbg !11815

while.body79:                                     ; preds = %while.cond77
  store i32 0, i32* %skip, align 4, !dbg !11818
  %102 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11820
  %call80 = call %struct.DagNode* @get_top_node_queue(%struct.DagNodeQueue* %102), !dbg !11821
  store %struct.DagNode* %call80, %struct.DagNode** %node, align 8, !dbg !11822
  %103 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11823
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %103, i32 0, i32 16, !dbg !11824
  %104 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !11824
  store %struct.DagAdjList* %104, %struct.DagAdjList** %itA, align 8, !dbg !11825
  br label %while.cond81, !dbg !11826

while.cond81:                                     ; preds = %if.end93, %while.body79
  %105 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !11827
  %cmp82 = icmp ne %struct.DagAdjList* %105, null, !dbg !11828
  br i1 %cmp82, label %while.body84, label %while.end95, !dbg !11826

while.body84:                                     ; preds = %while.cond81
  %106 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !11829
  %node85 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %106, i32 0, i32 0, !dbg !11832
  %107 = load %struct.DagNode*, %struct.DagNode** %node85, align 8, !dbg !11832
  %color86 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %107, i32 0, i32 0, !dbg !11833
  %108 = load i32, i32* %color86, align 8, !dbg !11833
  %cmp87 = icmp eq i32 %108, 0, !dbg !11834
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !11835

if.then89:                                        ; preds = %while.body84
  %109 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !11836
  %node90 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %109, i32 0, i32 0, !dbg !11838
  %110 = load %struct.DagNode*, %struct.DagNode** %node90, align 8, !dbg !11838
  %color91 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %110, i32 0, i32 0, !dbg !11839
  store i32 1, i32* %color91, align 8, !dbg !11840
  %111 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11841
  %112 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !11842
  %node92 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %112, i32 0, i32 0, !dbg !11843
  %113 = load %struct.DagNode*, %struct.DagNode** %node92, align 8, !dbg !11843
  call void @push_stack(%struct.DagNodeQueue* %111, %struct.DagNode* %113), !dbg !11844
  store i32 1, i32* %skip, align 4, !dbg !11845
  br label %while.end95, !dbg !11846

if.end93:                                         ; preds = %while.body84
  %114 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !11847
  %next94 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %114, i32 0, i32 5, !dbg !11848
  %115 = load %struct.DagAdjList*, %struct.DagAdjList** %next94, align 8, !dbg !11848
  store %struct.DagAdjList* %115, %struct.DagAdjList** %itA, align 8, !dbg !11849
  br label %while.cond81, !dbg !11826, !llvm.loop !11850

while.end95:                                      ; preds = %if.then89, %while.cond81
  %116 = load i32, i32* %skip, align 4, !dbg !11852
  %tobool96 = icmp ne i32 %116, 0, !dbg !11852
  br i1 %tobool96, label %if.end111, label %if.then97, !dbg !11854

if.then97:                                        ; preds = %while.end95
  %117 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11855
  %tobool98 = icmp ne %struct.DagNode* %117, null, !dbg !11855
  br i1 %tobool98, label %if.then99, label %if.end110, !dbg !11858

if.then99:                                        ; preds = %if.then97
  %118 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11859
  %call100 = call %struct.DagNode* @pop_queue(%struct.DagNodeQueue* %118), !dbg !11861
  store %struct.DagNode* %call100, %struct.DagNode** %node, align 8, !dbg !11862
  %119 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11863
  %ob101 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %119, i32 0, i32 5, !dbg !11865
  %120 = load i8*, i8** %ob101, align 8, !dbg !11865
  %cmp102 = icmp eq i8* %120, null, !dbg !11866
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !11867

if.then104:                                       ; preds = %if.then99
  br label %while.end112, !dbg !11868

if.end105:                                        ; preds = %if.then99
  %121 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11869
  %color106 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %121, i32 0, i32 0, !dbg !11870
  store i32 2, i32* %color106, align 8, !dbg !11871
  %122 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11872
  %chanbase107 = getelementptr inbounds %struct.bPose, %struct.bPose* %122, i32 0, i32 0, !dbg !11873
  %123 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11874
  %ob108 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %123, i32 0, i32 5, !dbg !11875
  %124 = load i8*, i8** %ob108, align 8, !dbg !11875
  call void @BLI_remlink(%struct.ListBase* %chanbase107, i8* %124), !dbg !11876
  %125 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11877
  %ob109 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %125, i32 0, i32 5, !dbg !11878
  %126 = load i8*, i8** %ob109, align 8, !dbg !11878
  call void @BLI_addhead(%struct.ListBase* %tempbase, i8* %126), !dbg !11879
  br label %if.end110, !dbg !11880

if.end110:                                        ; preds = %if.end105, %if.then97
  br label %if.end111, !dbg !11881

if.end111:                                        ; preds = %if.end110, %while.end95
  br label %while.cond77, !dbg !11815, !llvm.loop !11882

while.end112:                                     ; preds = %if.then104, %while.cond77
  br label %while.cond113, !dbg !11884

while.cond113:                                    ; preds = %while.body117, %while.end112
  %127 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11885
  %chanbase114 = getelementptr inbounds %struct.bPose, %struct.bPose* %127, i32 0, i32 0, !dbg !11886
  %first115 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase114, i32 0, i32 0, !dbg !11887
  %128 = load i8*, i8** %first115, align 8, !dbg !11887
  %tobool116 = icmp ne i8* %128, null, !dbg !11884
  br i1 %tobool116, label %while.body117, label %while.end123, !dbg !11884

while.body117:                                    ; preds = %while.cond113
  %129 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11888
  %chanbase118 = getelementptr inbounds %struct.bPose, %struct.bPose* %129, i32 0, i32 0, !dbg !11890
  %first119 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase118, i32 0, i32 0, !dbg !11891
  %130 = load i8*, i8** %first119, align 8, !dbg !11891
  %131 = bitcast i8* %130 to %struct.bPoseChannel*, !dbg !11888
  store %struct.bPoseChannel* %131, %struct.bPoseChannel** %pchan, align 8, !dbg !11892
  %132 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11893
  %chanbase120 = getelementptr inbounds %struct.bPose, %struct.bPose* %132, i32 0, i32 0, !dbg !11894
  %133 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11895
  %134 = bitcast %struct.bPoseChannel* %133 to i8*, !dbg !11895
  call void @BLI_remlink(%struct.ListBase* %chanbase120, i8* %134), !dbg !11896
  %135 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11897
  %136 = bitcast %struct.bPoseChannel* %135 to i8*, !dbg !11897
  call void @BLI_addhead(%struct.ListBase* %tempbase, i8* %136), !dbg !11898
  %137 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !11899
  %name = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %137, i32 0, i32 4, !dbg !11900
  %arraydecay121 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11899
  %call122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay121), !dbg !11901
  br label %while.cond113, !dbg !11884, !llvm.loop !11902

while.end123:                                     ; preds = %while.cond113
  %138 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !11904
  %chanbase124 = getelementptr inbounds %struct.bPose, %struct.bPose* %138, i32 0, i32 0, !dbg !11905
  %139 = bitcast %struct.ListBase* %chanbase124 to i8*, !dbg !11906
  %140 = bitcast %struct.ListBase* %tempbase to i8*, !dbg !11906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false), !dbg !11906
  %141 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %nqueue, align 8, !dbg !11907
  call void @queue_delete(%struct.DagNodeQueue* %141), !dbg !11908
  %142 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11909
  call void @free_forest(%struct.DagForest* %142), !dbg !11910
  %143 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11911
  %144 = load %struct.DagForest*, %struct.DagForest** %dag, align 8, !dbg !11912
  %145 = bitcast %struct.DagForest* %144 to i8*, !dbg !11912
  call void %143(i8* %145), !dbg !11911
  ret void, !dbg !11913
}

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #1

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_check_cycle(%struct.DagForest* %dag) #0 !dbg !11914 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !11917, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !11919, metadata !DIExpression()), !dbg !11920
  %0 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11921
  %is_acyclic = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 3, !dbg !11922
  store i8 1, i8* %is_acyclic, align 4, !dbg !11923
  %1 = load i32, i32* @dag_print_dependencies, align 4, !dbg !11924
  %tobool = icmp ne i32 %1, 0, !dbg !11924
  br i1 %tobool, label %if.then, label %if.end, !dbg !11926

if.then:                                          ; preds = %entry
  %2 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11927
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %2, i32 0, i32 0, !dbg !11929
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !11930
  %3 = load i8*, i8** %first, align 8, !dbg !11930
  %4 = bitcast i8* %3 to %struct.DagNode*, !dbg !11927
  store %struct.DagNode* %4, %struct.DagNode** %node, align 8, !dbg !11931
  br label %for.cond, !dbg !11932

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11933
  %tobool1 = icmp ne %struct.DagNode* %5, null, !dbg !11935
  br i1 %tobool1, label %for.body, label %for.end, !dbg !11935

for.body:                                         ; preds = %for.cond
  %6 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11936
  %7 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11937
  call void @dag_node_print_dependencies(%struct.DagForest* %6, %struct.DagNode* %7), !dbg !11938
  br label %for.inc, !dbg !11938

for.inc:                                          ; preds = %for.body
  %8 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11939
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %8, i32 0, i32 18, !dbg !11940
  %9 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !11940
  store %struct.DagNode* %9, %struct.DagNode** %node, align 8, !dbg !11941
  br label %for.cond, !dbg !11942, !llvm.loop !11943

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !11944

if.end:                                           ; preds = %for.end, %entry
  %10 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11945
  %DagNode2 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %10, i32 0, i32 0, !dbg !11947
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode2, i32 0, i32 0, !dbg !11948
  %11 = load i8*, i8** %first3, align 8, !dbg !11948
  %12 = bitcast i8* %11 to %struct.DagNode*, !dbg !11945
  store %struct.DagNode* %12, %struct.DagNode** %node, align 8, !dbg !11949
  br label %for.cond4, !dbg !11950

for.cond4:                                        ; preds = %for.inc7, %if.end
  %13 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11951
  %tobool5 = icmp ne %struct.DagNode* %13, null, !dbg !11953
  br i1 %tobool5, label %for.body6, label %for.end9, !dbg !11953

for.body6:                                        ; preds = %for.cond4
  %14 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11954
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %14, i32 0, i32 0, !dbg !11955
  store i32 0, i32* %color, align 8, !dbg !11956
  br label %for.inc7, !dbg !11954

for.inc7:                                         ; preds = %for.body6
  %15 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11957
  %next8 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %15, i32 0, i32 18, !dbg !11958
  %16 = load %struct.DagNode*, %struct.DagNode** %next8, align 8, !dbg !11958
  store %struct.DagNode* %16, %struct.DagNode** %node, align 8, !dbg !11959
  br label %for.cond4, !dbg !11960, !llvm.loop !11961

for.end9:                                         ; preds = %for.cond4
  %17 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11963
  %DagNode10 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %17, i32 0, i32 0, !dbg !11965
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode10, i32 0, i32 0, !dbg !11966
  %18 = load i8*, i8** %first11, align 8, !dbg !11966
  %19 = bitcast i8* %18 to %struct.DagNode*, !dbg !11963
  store %struct.DagNode* %19, %struct.DagNode** %node, align 8, !dbg !11967
  br label %for.cond12, !dbg !11968

for.cond12:                                       ; preds = %for.inc18, %for.end9
  %20 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11969
  %tobool13 = icmp ne %struct.DagNode* %20, null, !dbg !11971
  br i1 %tobool13, label %for.body14, label %for.end20, !dbg !11971

for.body14:                                       ; preds = %for.cond12
  %21 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11972
  %color15 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 0, !dbg !11975
  %22 = load i32, i32* %color15, align 8, !dbg !11975
  %cmp = icmp eq i32 %22, 0, !dbg !11976
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !11977

if.then16:                                        ; preds = %for.body14
  %23 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11978
  %call = call i32 @dag_node_recurs_level(%struct.DagNode* %23, i32 0), !dbg !11980
  %24 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11981
  %ancestor_count = getelementptr inbounds %struct.DagNode, %struct.DagNode* %24, i32 0, i32 7, !dbg !11982
  store i32 %call, i32* %ancestor_count, align 8, !dbg !11983
  br label %if.end17, !dbg !11984

if.end17:                                         ; preds = %if.then16, %for.body14
  br label %for.inc18, !dbg !11985

for.inc18:                                        ; preds = %if.end17
  %25 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11986
  %next19 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %25, i32 0, i32 18, !dbg !11987
  %26 = load %struct.DagNode*, %struct.DagNode** %next19, align 8, !dbg !11987
  store %struct.DagNode* %26, %struct.DagNode** %node, align 8, !dbg !11988
  br label %for.cond12, !dbg !11989, !llvm.loop !11990

for.end20:                                        ; preds = %for.cond12
  %27 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !11992
  %DagNode21 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %27, i32 0, i32 0, !dbg !11994
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode21, i32 0, i32 0, !dbg !11995
  %28 = load i8*, i8** %first22, align 8, !dbg !11995
  %29 = bitcast i8* %28 to %struct.DagNode*, !dbg !11992
  store %struct.DagNode* %29, %struct.DagNode** %node, align 8, !dbg !11996
  br label %for.cond23, !dbg !11997

for.cond23:                                       ; preds = %for.inc47, %for.end20
  %30 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !11998
  %tobool24 = icmp ne %struct.DagNode* %30, null, !dbg !12000
  br i1 %tobool24, label %for.body25, label %for.end49, !dbg !12000

for.body25:                                       ; preds = %for.cond23
  %31 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12001
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %31, i32 0, i32 17, !dbg !12004
  %32 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !12004
  store %struct.DagAdjList* %32, %struct.DagAdjList** %itA, align 8, !dbg !12005
  br label %for.cond26, !dbg !12006

for.cond26:                                       ; preds = %for.inc44, %for.body25
  %33 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12007
  %tobool27 = icmp ne %struct.DagAdjList* %33, null, !dbg !12009
  br i1 %tobool27, label %for.body28, label %for.end46, !dbg !12009

for.body28:                                       ; preds = %for.cond26
  %34 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12010
  %node29 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %34, i32 0, i32 0, !dbg !12013
  %35 = load %struct.DagNode*, %struct.DagNode** %node29, align 8, !dbg !12013
  %ancestor_count30 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %35, i32 0, i32 7, !dbg !12014
  %36 = load i32, i32* %ancestor_count30, align 8, !dbg !12014
  %37 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12015
  %ancestor_count31 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %37, i32 0, i32 7, !dbg !12016
  %38 = load i32, i32* %ancestor_count31, align 8, !dbg !12016
  %cmp32 = icmp sgt i32 %36, %38, !dbg !12017
  br i1 %cmp32, label %if.then33, label %if.end43, !dbg !12018

if.then33:                                        ; preds = %for.body28
  %39 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12019
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %39, i32 0, i32 5, !dbg !12022
  %40 = load i8*, i8** %ob, align 8, !dbg !12022
  %tobool34 = icmp ne i8* %40, null, !dbg !12019
  br i1 %tobool34, label %land.lhs.true, label %if.end42, !dbg !12023

land.lhs.true:                                    ; preds = %if.then33
  %41 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12024
  %node35 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %41, i32 0, i32 0, !dbg !12025
  %42 = load %struct.DagNode*, %struct.DagNode** %node35, align 8, !dbg !12025
  %ob36 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %42, i32 0, i32 5, !dbg !12026
  %43 = load i8*, i8** %ob36, align 8, !dbg !12026
  %tobool37 = icmp ne i8* %43, null, !dbg !12024
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !12027

if.then38:                                        ; preds = %land.lhs.true
  %44 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12028
  %is_acyclic39 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %44, i32 0, i32 3, !dbg !12030
  store i8 0, i8* %is_acyclic39, align 4, !dbg !12031
  %call40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.54, i64 0, i64 0)), !dbg !12032
  %45 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12033
  %46 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12034
  %node41 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %46, i32 0, i32 0, !dbg !12035
  %47 = load %struct.DagNode*, %struct.DagNode** %node41, align 8, !dbg !12035
  %48 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12036
  %49 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12037
  %name = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %49, i32 0, i32 4, !dbg !12038
  %50 = load i8*, i8** %name, align 8, !dbg !12038
  call void @dag_node_print_dependency_cycle(%struct.DagForest* %45, %struct.DagNode* %47, %struct.DagNode* %48, i8* %50), !dbg !12039
  br label %if.end42, !dbg !12040

if.end42:                                         ; preds = %if.then38, %land.lhs.true, %if.then33
  br label %if.end43, !dbg !12041

if.end43:                                         ; preds = %if.end42, %for.body28
  br label %for.inc44, !dbg !12042

for.inc44:                                        ; preds = %if.end43
  %51 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12043
  %next45 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %51, i32 0, i32 5, !dbg !12044
  %52 = load %struct.DagAdjList*, %struct.DagAdjList** %next45, align 8, !dbg !12044
  store %struct.DagAdjList* %52, %struct.DagAdjList** %itA, align 8, !dbg !12045
  br label %for.cond26, !dbg !12046, !llvm.loop !12047

for.end46:                                        ; preds = %for.cond26
  br label %for.inc47, !dbg !12049

for.inc47:                                        ; preds = %for.end46
  %53 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12050
  %next48 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %53, i32 0, i32 18, !dbg !12051
  %54 = load %struct.DagNode*, %struct.DagNode** %next48, align 8, !dbg !12051
  store %struct.DagNode* %54, %struct.DagNode** %node, align 8, !dbg !12052
  br label %for.cond23, !dbg !12053, !llvm.loop !12054

for.end49:                                        ; preds = %for.cond23
  %55 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12056
  %DagNode50 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %55, i32 0, i32 0, !dbg !12058
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode50, i32 0, i32 0, !dbg !12059
  %56 = load i8*, i8** %first51, align 8, !dbg !12059
  %57 = bitcast i8* %56 to %struct.DagNode*, !dbg !12056
  store %struct.DagNode* %57, %struct.DagNode** %node, align 8, !dbg !12060
  br label %for.cond52, !dbg !12061

for.cond52:                                       ; preds = %for.inc61, %for.end49
  %58 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12062
  %tobool53 = icmp ne %struct.DagNode* %58, null, !dbg !12064
  br i1 %tobool53, label %for.body54, label %for.end63, !dbg !12064

for.body54:                                       ; preds = %for.cond52
  br label %while.cond, !dbg !12065

while.cond:                                       ; preds = %while.body, %for.body54
  %59 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12067
  %parent55 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %59, i32 0, i32 17, !dbg !12068
  %60 = load %struct.DagAdjList*, %struct.DagAdjList** %parent55, align 8, !dbg !12068
  %tobool56 = icmp ne %struct.DagAdjList* %60, null, !dbg !12065
  br i1 %tobool56, label %while.body, label %while.end, !dbg !12065

while.body:                                       ; preds = %while.cond
  %61 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12069
  %parent57 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %61, i32 0, i32 17, !dbg !12071
  %62 = load %struct.DagAdjList*, %struct.DagAdjList** %parent57, align 8, !dbg !12071
  %next58 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %62, i32 0, i32 5, !dbg !12072
  %63 = load %struct.DagAdjList*, %struct.DagAdjList** %next58, align 8, !dbg !12072
  store %struct.DagAdjList* %63, %struct.DagAdjList** %itA, align 8, !dbg !12073
  %64 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12074
  %65 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12075
  %parent59 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %65, i32 0, i32 17, !dbg !12076
  %66 = load %struct.DagAdjList*, %struct.DagAdjList** %parent59, align 8, !dbg !12076
  %67 = bitcast %struct.DagAdjList* %66 to i8*, !dbg !12075
  call void %64(i8* %67), !dbg !12074
  %68 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12077
  %69 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12078
  %parent60 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %69, i32 0, i32 17, !dbg !12079
  store %struct.DagAdjList* %68, %struct.DagAdjList** %parent60, align 8, !dbg !12080
  br label %while.cond, !dbg !12065, !llvm.loop !12081

while.end:                                        ; preds = %while.cond
  br label %for.inc61, !dbg !12083

for.inc61:                                        ; preds = %while.end
  %70 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12084
  %next62 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %70, i32 0, i32 18, !dbg !12085
  %71 = load %struct.DagNode*, %struct.DagNode** %next62, align 8, !dbg !12085
  store %struct.DagNode* %71, %struct.DagNode** %node, align 8, !dbg !12086
  br label %for.cond52, !dbg !12087, !llvm.loop !12088

for.end63:                                        ; preds = %for.cond52
  ret void, !dbg !12090
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !12091 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12094, metadata !DIExpression()), !dbg !12095
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12096
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !12097
  store i8* null, i8** %last, align 8, !dbg !12098
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12099
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !12100
  store i8* null, i8** %first, align 8, !dbg !12101
  ret void, !dbg !12102
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #1

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_threaded_update_begin(%struct.Scene* %scene, void (i8*, i8*)* %func, i8* %user_data) #0 !dbg !12103 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %func.addr = alloca void (i8*, i8*)*, align 8
  %user_data.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12109, metadata !DIExpression()), !dbg !12110
  store void (i8*, i8*)* %func, void (i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %func.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !12115, metadata !DIExpression()), !dbg !12116
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12117
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !12119
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !12119
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %1, i32 0, i32 0, !dbg !12120
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !12121
  %2 = load i8*, i8** %first, align 8, !dbg !12121
  %3 = bitcast i8* %2 to %struct.DagNode*, !dbg !12117
  store %struct.DagNode* %3, %struct.DagNode** %node, align 8, !dbg !12122
  br label %for.cond, !dbg !12123

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12124
  %tobool = icmp ne %struct.DagNode* %4, null, !dbg !12126
  br i1 %tobool, label %for.body, label %for.end, !dbg !12126

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12127
  %num_pending_parents = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 19, !dbg !12129
  store i32 0, i32* %num_pending_parents, align 8, !dbg !12130
  %6 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12131
  %scheduled = getelementptr inbounds %struct.DagNode, %struct.DagNode* %6, i32 0, i32 20, !dbg !12132
  store i8 0, i8* %scheduled, align 4, !dbg !12133
  br label %for.inc, !dbg !12134

for.inc:                                          ; preds = %for.body
  %7 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12135
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %7, i32 0, i32 18, !dbg !12136
  %8 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !12136
  store %struct.DagNode* %8, %struct.DagNode** %node, align 8, !dbg !12137
  br label %for.cond, !dbg !12138, !llvm.loop !12139

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12141
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 31, !dbg !12143
  %10 = load %struct.DagForest*, %struct.DagForest** %theDag1, align 8, !dbg !12143
  %DagNode2 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %10, i32 0, i32 0, !dbg !12144
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode2, i32 0, i32 0, !dbg !12145
  %11 = load i8*, i8** %first3, align 8, !dbg !12145
  %12 = bitcast i8* %11 to %struct.DagNode*, !dbg !12141
  store %struct.DagNode* %12, %struct.DagNode** %node, align 8, !dbg !12146
  br label %for.cond4, !dbg !12147

for.cond4:                                        ; preds = %for.inc16, %for.end
  %13 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12148
  %tobool5 = icmp ne %struct.DagNode* %13, null, !dbg !12150
  br i1 %tobool5, label %for.body6, label %for.end18, !dbg !12150

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !12151, metadata !DIExpression()), !dbg !12153
  %14 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12154
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %14, i32 0, i32 16, !dbg !12156
  %15 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !12156
  store %struct.DagAdjList* %15, %struct.DagAdjList** %itA, align 8, !dbg !12157
  br label %for.cond7, !dbg !12158

for.cond7:                                        ; preds = %for.inc13, %for.body6
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12159
  %tobool8 = icmp ne %struct.DagAdjList* %16, null, !dbg !12161
  br i1 %tobool8, label %for.body9, label %for.end15, !dbg !12161

for.body9:                                        ; preds = %for.cond7
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12162
  %node10 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %17, i32 0, i32 0, !dbg !12165
  %18 = load %struct.DagNode*, %struct.DagNode** %node10, align 8, !dbg !12165
  %19 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12166
  %cmp = icmp ne %struct.DagNode* %18, %19, !dbg !12167
  br i1 %cmp, label %if.then, label %if.end, !dbg !12168

if.then:                                          ; preds = %for.body9
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12169
  %node11 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %20, i32 0, i32 0, !dbg !12171
  %21 = load %struct.DagNode*, %struct.DagNode** %node11, align 8, !dbg !12171
  %num_pending_parents12 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 19, !dbg !12172
  %22 = load i32, i32* %num_pending_parents12, align 8, !dbg !12173
  %inc = add i32 %22, 1, !dbg !12173
  store i32 %inc, i32* %num_pending_parents12, align 8, !dbg !12173
  br label %if.end, !dbg !12174

if.end:                                           ; preds = %if.then, %for.body9
  br label %for.inc13, !dbg !12175

for.inc13:                                        ; preds = %if.end
  %23 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12176
  %next14 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %23, i32 0, i32 5, !dbg !12177
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %next14, align 8, !dbg !12177
  store %struct.DagAdjList* %24, %struct.DagAdjList** %itA, align 8, !dbg !12178
  br label %for.cond7, !dbg !12179, !llvm.loop !12180

for.end15:                                        ; preds = %for.cond7
  br label %for.inc16, !dbg !12182

for.inc16:                                        ; preds = %for.end15
  %25 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12183
  %next17 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %25, i32 0, i32 18, !dbg !12184
  %26 = load %struct.DagNode*, %struct.DagNode** %next17, align 8, !dbg !12184
  store %struct.DagNode* %26, %struct.DagNode** %node, align 8, !dbg !12185
  br label %for.cond4, !dbg !12186, !llvm.loop !12187

for.end18:                                        ; preds = %for.cond4
  call void @BLI_spin_lock(i32* @threaded_update_lock), !dbg !12189
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12190
  %theDag19 = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 31, !dbg !12192
  %28 = load %struct.DagForest*, %struct.DagForest** %theDag19, align 8, !dbg !12192
  %DagNode20 = getelementptr inbounds %struct.DagForest, %struct.DagForest* %28, i32 0, i32 0, !dbg !12193
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode20, i32 0, i32 0, !dbg !12194
  %29 = load i8*, i8** %first21, align 8, !dbg !12194
  %30 = bitcast i8* %29 to %struct.DagNode*, !dbg !12190
  store %struct.DagNode* %30, %struct.DagNode** %node, align 8, !dbg !12195
  br label %for.cond22, !dbg !12196

for.cond22:                                       ; preds = %for.inc30, %for.end18
  %31 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12197
  %tobool23 = icmp ne %struct.DagNode* %31, null, !dbg !12199
  br i1 %tobool23, label %for.body24, label %for.end32, !dbg !12199

for.body24:                                       ; preds = %for.cond22
  %32 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12200
  %num_pending_parents25 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %32, i32 0, i32 19, !dbg !12203
  %33 = load i32, i32* %num_pending_parents25, align 8, !dbg !12203
  %cmp26 = icmp eq i32 %33, 0, !dbg !12204
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !12205

if.then27:                                        ; preds = %for.body24
  %34 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12206
  %scheduled28 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %34, i32 0, i32 20, !dbg !12208
  store i8 1, i8* %scheduled28, align 4, !dbg !12209
  %35 = load void (i8*, i8*)*, void (i8*, i8*)** %func.addr, align 8, !dbg !12210
  %36 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12211
  %37 = bitcast %struct.DagNode* %36 to i8*, !dbg !12211
  %38 = load i8*, i8** %user_data.addr, align 8, !dbg !12212
  call void %35(i8* %37, i8* %38), !dbg !12210
  br label %if.end29, !dbg !12213

if.end29:                                         ; preds = %if.then27, %for.body24
  br label %for.inc30, !dbg !12214

for.inc30:                                        ; preds = %if.end29
  %39 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12215
  %next31 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %39, i32 0, i32 18, !dbg !12216
  %40 = load %struct.DagNode*, %struct.DagNode** %next31, align 8, !dbg !12216
  store %struct.DagNode* %40, %struct.DagNode** %node, align 8, !dbg !12217
  br label %for.cond22, !dbg !12218, !llvm.loop !12219

for.end32:                                        ; preds = %for.cond22
  call void @BLI_spin_unlock(i32* @threaded_update_lock), !dbg !12221
  ret void, !dbg !12222
}

declare dso_local void @BLI_spin_lock(i32*) #1

declare dso_local void @BLI_spin_unlock(i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_threaded_update_handle_node_updated(i8* %node_v, void (i8*, i8*)* %func, i8* %user_data) #0 !dbg !12223 {
entry:
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !12226, metadata !DIExpression()), !dbg !12232
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !12239, metadata !DIExpression()), !dbg !12240
  %node_v.addr = alloca i8*, align 8
  %func.addr = alloca void (i8*, i8*)*, align 8
  %user_data.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %child_node = alloca %struct.DagNode*, align 8
  %need_schedule = alloca i8, align 1
  store i8* %node_v, i8** %node_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %node_v.addr, metadata !12241, metadata !DIExpression()), !dbg !12242
  store void (i8*, i8*)* %func, void (i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %func.addr, metadata !12243, metadata !DIExpression()), !dbg !12244
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !12245, metadata !DIExpression()), !dbg !12246
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !12247, metadata !DIExpression()), !dbg !12248
  %0 = load i8*, i8** %node_v.addr, align 8, !dbg !12249
  %1 = bitcast i8* %0 to %struct.DagNode*, !dbg !12249
  store %struct.DagNode* %1, %struct.DagNode** %node, align 8, !dbg !12248
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !12250, metadata !DIExpression()), !dbg !12251
  %2 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12252
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 16, !dbg !12253
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !12253
  store %struct.DagAdjList* %3, %struct.DagAdjList** %itA, align 8, !dbg !12254
  br label %for.cond, !dbg !12255

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12256
  %tobool = icmp ne %struct.DagAdjList* %4, null, !dbg !12257
  br i1 %tobool, label %for.body, label %for.end, !dbg !12257

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DagNode** %child_node, metadata !12258, metadata !DIExpression()), !dbg !12259
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12260
  %node1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %5, i32 0, i32 0, !dbg !12261
  %6 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !12261
  store %struct.DagNode* %6, %struct.DagNode** %child_node, align 8, !dbg !12259
  %7 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12262
  %8 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12263
  %cmp = icmp ne %struct.DagNode* %7, %8, !dbg !12264
  br i1 %cmp, label %if.then, label %if.end12, !dbg !12265

if.then:                                          ; preds = %for.body
  %9 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12266
  %num_pending_parents = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 19, !dbg !12267
  store i32* %num_pending_parents, i32** %p.addr.i, align 8
  store i32 1, i32* %x.addr.i, align 4
  %10 = load i32*, i32** %p.addr.i, align 8, !dbg !12268
  %11 = load i32, i32* %10, align 4, !dbg !12269
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !12270
  %sub.i = sub i32 %11, %12, !dbg !12271
  %13 = load i32*, i32** %p.addr.i, align 8, !dbg !12272
  store i32 %sub.i, i32* %13, align 4, !dbg !12273
  %14 = load i32*, i32** %p.addr.i, align 8, !dbg !12274
  %15 = load i32, i32* %14, align 4, !dbg !12275
  %16 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12276
  %num_pending_parents2 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 19, !dbg !12278
  %17 = load i32, i32* %num_pending_parents2, align 8, !dbg !12278
  %cmp3 = icmp eq i32 %17, 0, !dbg !12279
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !12280

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8* %need_schedule, metadata !12281, metadata !DIExpression()), !dbg !12283
  call void @BLI_spin_lock(i32* @threaded_update_lock), !dbg !12284
  %18 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12285
  %scheduled = getelementptr inbounds %struct.DagNode, %struct.DagNode* %18, i32 0, i32 20, !dbg !12286
  %19 = load i8, i8* %scheduled, align 4, !dbg !12286
  %conv = zext i8 %19 to i32, !dbg !12285
  %cmp5 = icmp eq i32 %conv, 0, !dbg !12287
  %conv6 = zext i1 %cmp5 to i32, !dbg !12287
  %conv7 = trunc i32 %conv6 to i8, !dbg !12285
  store i8 %conv7, i8* %need_schedule, align 1, !dbg !12288
  %20 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12289
  %scheduled8 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %20, i32 0, i32 20, !dbg !12290
  store i8 1, i8* %scheduled8, align 4, !dbg !12291
  call void @BLI_spin_unlock(i32* @threaded_update_lock), !dbg !12292
  %21 = load i8, i8* %need_schedule, align 1, !dbg !12293
  %tobool9 = icmp ne i8 %21, 0, !dbg !12293
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !12295

if.then10:                                        ; preds = %if.then4
  %22 = load void (i8*, i8*)*, void (i8*, i8*)** %func.addr, align 8, !dbg !12296
  %23 = load %struct.DagNode*, %struct.DagNode** %child_node, align 8, !dbg !12298
  %24 = bitcast %struct.DagNode* %23 to i8*, !dbg !12298
  %25 = load i8*, i8** %user_data.addr, align 8, !dbg !12299
  call void %22(i8* %24, i8* %25), !dbg !12296
  br label %if.end, !dbg !12300

if.end:                                           ; preds = %if.then10, %if.then4
  br label %if.end11, !dbg !12301

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !12302

if.end12:                                         ; preds = %if.end11, %for.body
  br label %for.inc, !dbg !12303

for.inc:                                          ; preds = %if.end12
  %26 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !12304
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %26, i32 0, i32 5, !dbg !12305
  %27 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !12305
  store %struct.DagAdjList* %27, %struct.DagAdjList** %itA, align 8, !dbg !12306
  br label %for.cond, !dbg !12307, !llvm.loop !12308

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12310
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DAG_print_dependencies(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !12311 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !12312, metadata !DIExpression()), !dbg !12313
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12314, metadata !DIExpression()), !dbg !12315
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12316, metadata !DIExpression()), !dbg !12317
  store i32 1, i32* @dag_print_dependencies, align 4, !dbg !12318
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12319
  %tobool = icmp ne %struct.Object* %0, null, !dbg !12319
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !12321

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12322
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 27, !dbg !12323
  %2 = load i32, i32* %mode, align 8, !dbg !12323
  %and = and i32 %2, 64, !dbg !12324
  %tobool1 = icmp ne i32 %and, 0, !dbg !12324
  br i1 %tobool1, label %if.then, label %if.else, !dbg !12325

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12326
  %id = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 0, !dbg !12328
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !12329
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !12326
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !12330
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i8* %add.ptr), !dbg !12331
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12332
  call void @DAG_pose_sort(%struct.Object* %4), !dbg !12333
  br label %if.end, !dbg !12334

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12335
  %id2 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 0, !dbg !12337
  %name3 = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 4, !dbg !12338
  %arraydecay4 = getelementptr inbounds [66 x i8], [66 x i8]* %name3, i64 0, i64 0, !dbg !12335
  %add.ptr5 = getelementptr inbounds i8, i8* %arraydecay4, i64 2, !dbg !12339
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i8* %add.ptr5), !dbg !12340
  %6 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !12341
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12342
  call void @DAG_scene_relations_rebuild(%struct.Main* %6, %struct.Scene* %7), !dbg !12343
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* @dag_print_dependencies, align 4, !dbg !12344
  ret void, !dbg !12345
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @DAG_get_node_object(i8* %node_v) #0 !dbg !12346 {
entry:
  %retval = alloca %struct.Object*, align 8
  %node_v.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store i8* %node_v, i8** %node_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %node_v.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !12351, metadata !DIExpression()), !dbg !12352
  %0 = load i8*, i8** %node_v.addr, align 8, !dbg !12353
  %1 = bitcast i8* %0 to %struct.DagNode*, !dbg !12353
  store %struct.DagNode* %1, %struct.DagNode** %node, align 8, !dbg !12352
  %2 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12354
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 1, !dbg !12356
  %3 = load i16, i16* %type, align 4, !dbg !12356
  %conv = sext i16 %3 to i32, !dbg !12354
  %cmp = icmp eq i32 %conv, 16975, !dbg !12357
  br i1 %cmp, label %if.then, label %if.end, !dbg !12358

if.then:                                          ; preds = %entry
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12359
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 5, !dbg !12361
  %5 = load i8*, i8** %ob, align 8, !dbg !12361
  %6 = bitcast i8* %5 to %struct.Object*, !dbg !12359
  store %struct.Object* %6, %struct.Object** %retval, align 8, !dbg !12362
  br label %return, !dbg !12362

if.end:                                           ; preds = %entry
  store %struct.Object* null, %struct.Object** %retval, align 8, !dbg !12363
  br label %return, !dbg !12363

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.Object*, %struct.Object** %retval, align 8, !dbg !12364
  ret %struct.Object* %7, !dbg !12364
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DAG_get_node_name(%struct.Scene* %scene, i8* %node_v) #0 !dbg !12365 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %node_v.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12368, metadata !DIExpression()), !dbg !12369
  store i8* %node_v, i8** %node_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %node_v.addr, metadata !12370, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !12372, metadata !DIExpression()), !dbg !12373
  %0 = load i8*, i8** %node_v.addr, align 8, !dbg !12374
  %1 = bitcast i8* %0 to %struct.DagNode*, !dbg !12374
  store %struct.DagNode* %1, %struct.DagNode** %node, align 8, !dbg !12373
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12375
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 31, !dbg !12376
  %3 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !12376
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12377
  %call = call i8* @dag_node_name(%struct.DagForest* %3, %struct.DagNode* %4), !dbg !12378
  ret i8* %call, !dbg !12379
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @dag_node_name(%struct.DagForest* %dag, %struct.DagNode* %node) #0 !dbg !12380 {
entry:
  %retval = alloca i8*, align 8
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  %0 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12387
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %0, i32 0, i32 5, !dbg !12389
  %1 = load i8*, i8** %ob, align 8, !dbg !12389
  %cmp = icmp eq i8* %1, null, !dbg !12390
  br i1 %cmp, label %if.then, label %if.else, !dbg !12391

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8** %retval, align 8, !dbg !12392
  br label %return, !dbg !12392

if.else:                                          ; preds = %entry
  %2 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12393
  %ugly_hack_sorry = getelementptr inbounds %struct.DagForest, %struct.DagForest* %2, i32 0, i32 5, !dbg !12395
  %3 = load i8, i8* %ugly_hack_sorry, align 4, !dbg !12395
  %tobool = icmp ne i8 %3, 0, !dbg !12393
  br i1 %tobool, label %if.then1, label %if.else3, !dbg !12396

if.then1:                                         ; preds = %if.else
  %4 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12397
  %ob2 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 5, !dbg !12398
  %5 = load i8*, i8** %ob2, align 8, !dbg !12398
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !12399
  %name = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 4, !dbg !12400
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !12401
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !12402
  store i8* %add.ptr, i8** %retval, align 8, !dbg !12403
  br label %return, !dbg !12403

if.else3:                                         ; preds = %if.else
  %7 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12404
  %ob4 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %7, i32 0, i32 5, !dbg !12405
  %8 = load i8*, i8** %ob4, align 8, !dbg !12405
  %9 = bitcast i8* %8 to %struct.bPoseChannel*, !dbg !12406
  %name5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 4, !dbg !12407
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %name5, i64 0, i64 0, !dbg !12408
  store i8* %arraydecay6, i8** %retval, align 8, !dbg !12409
  br label %return, !dbg !12409

return:                                           ; preds = %if.else3, %if.then1, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !12410
  ret i8* %10, !dbg !12410
}

; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @DAG_get_eval_flags_for_object(%struct.Scene* %scene, i8* %object) #0 !dbg !12411 {
entry:
  %retval = alloca i16, align 2
  %scene.addr = alloca %struct.Scene*, align 8
  %object.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12414, metadata !DIExpression()), !dbg !12415
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12416, metadata !DIExpression()), !dbg !12417
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !12418, metadata !DIExpression()), !dbg !12419
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12420
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !12422
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !12422
  %cmp = icmp eq %struct.DagForest* %1, null, !dbg !12423
  br i1 %cmp, label %if.then, label %if.end, !dbg !12424

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !12425
  br label %return, !dbg !12425

if.end:                                           ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12427
  %theDag1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 31, !dbg !12428
  %3 = load %struct.DagForest*, %struct.DagForest** %theDag1, align 8, !dbg !12428
  %4 = load i8*, i8** %object.addr, align 8, !dbg !12429
  %call = call %struct.DagNode* @dag_find_node(%struct.DagForest* %3, i8* %4), !dbg !12430
  store %struct.DagNode* %call, %struct.DagNode** %node, align 8, !dbg !12431
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12432
  %tobool = icmp ne %struct.DagNode* %5, null, !dbg !12432
  br i1 %tobool, label %if.then2, label %if.else, !dbg !12434

if.then2:                                         ; preds = %if.end
  %6 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !12435
  %eval_flags = getelementptr inbounds %struct.DagNode, %struct.DagNode* %6, i32 0, i32 21, !dbg !12437
  %7 = load i16, i16* %eval_flags, align 2, !dbg !12437
  store i16 %7, i16* %retval, align 2, !dbg !12438
  br label %return, !dbg !12438

if.else:                                          ; preds = %if.end
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12439
  %set = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 4, !dbg !12442
  %9 = load %struct.Scene*, %struct.Scene** %set, align 8, !dbg !12442
  %tobool3 = icmp ne %struct.Scene* %9, null, !dbg !12439
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !12443

if.then4:                                         ; preds = %if.else
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12444
  %set5 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 4, !dbg !12446
  %11 = load %struct.Scene*, %struct.Scene** %set5, align 8, !dbg !12446
  %12 = load i8*, i8** %object.addr, align 8, !dbg !12447
  %call6 = call signext i16 @DAG_get_eval_flags_for_object(%struct.Scene* %11, i8* %12), !dbg !12448
  store i16 %call6, i16* %retval, align 2, !dbg !12449
  br label %return, !dbg !12449

if.end7:                                          ; preds = %if.else
  store i16 0, i16* %retval, align 2, !dbg !12450
  br label %return, !dbg !12450

return:                                           ; preds = %if.end7, %if.then4, %if.then2, %if.then
  %13 = load i16, i16* %retval, align 2, !dbg !12451
  ret i16 %13, !dbg !12451
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @DAG_is_acyclic(%struct.Scene* %scene) #0 !dbg !12452 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12455, metadata !DIExpression()), !dbg !12456
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12457
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !12458
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !12458
  %is_acyclic = getelementptr inbounds %struct.DagForest, %struct.DagForest* %1, i32 0, i32 3, !dbg !12459
  %2 = load i8, i8* %is_acyclic, align 4, !dbg !12459
  ret i8 %2, !dbg !12460
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_driver_relation(%struct.AnimData* %adt, %struct.DagForest* %dag, %struct.DagNode* %node, i32 %isdata) #0 !dbg !12461 {
entry:
  %adt.addr = alloca %struct.AnimData*, align 8
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %isdata.addr = alloca i32, align 4
  %fcu = alloca %struct.FCurve*, align 8
  %node1 = alloca %struct.DagNode*, align 8
  %driver = alloca %struct.ChannelDriver*, align 8
  %dvar = alloca %struct.DriverVar*, align 8
  %isdata_fcu = alloca i32, align 4
  %dtar = alloca %struct.DriverTarget*, align 8
  %tarIndex = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !12464, metadata !DIExpression()), !dbg !12465
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12466, metadata !DIExpression()), !dbg !12467
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12468, metadata !DIExpression()), !dbg !12469
  store i32 %isdata, i32* %isdata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isdata.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !12472, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node1, metadata !12536, metadata !DIExpression()), !dbg !12537
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !12538
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %0, i32 0, i32 5, !dbg !12540
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !12541
  %1 = load i8*, i8** %first, align 8, !dbg !12541
  %2 = bitcast i8* %1 to %struct.FCurve*, !dbg !12538
  store %struct.FCurve* %2, %struct.FCurve** %fcu, align 8, !dbg !12542
  br label %for.cond, !dbg !12543

for.cond:                                         ; preds = %for.inc59, %entry
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !12544
  %tobool = icmp ne %struct.FCurve* %3, null, !dbg !12546
  br i1 %tobool, label %for.body, label %for.end61, !dbg !12546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver, metadata !12547, metadata !DIExpression()), !dbg !12549
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !12550
  %driver1 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %4, i32 0, i32 3, !dbg !12551
  %5 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver1, align 8, !dbg !12551
  store %struct.ChannelDriver* %5, %struct.ChannelDriver** %driver, align 8, !dbg !12549
  call void @llvm.dbg.declare(metadata %struct.DriverVar** %dvar, metadata !12552, metadata !DIExpression()), !dbg !12575
  call void @llvm.dbg.declare(metadata i32* %isdata_fcu, metadata !12576, metadata !DIExpression()), !dbg !12577
  %6 = load i32, i32* %isdata.addr, align 4, !dbg !12578
  %tobool2 = icmp ne i32 %6, 0, !dbg !12579
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !12580

lor.rhs:                                          ; preds = %for.body
  %7 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !12581
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %7, i32 0, i32 12, !dbg !12582
  %8 = load i8*, i8** %rna_path, align 8, !dbg !12582
  %tobool3 = icmp ne i8* %8, null, !dbg !12581
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !12583

land.rhs:                                         ; preds = %lor.rhs
  %9 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !12584
  %rna_path4 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %9, i32 0, i32 12, !dbg !12585
  %10 = load i8*, i8** %rna_path4, align 8, !dbg !12585
  %call = call i8* @strstr(i8* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #5, !dbg !12586
  %tobool5 = icmp ne i8* %call, null, !dbg !12583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %11 = phi i1 [ false, %lor.rhs ], [ %tobool5, %land.rhs ], !dbg !12587
  br label %lor.end, !dbg !12580

lor.end:                                          ; preds = %land.end, %for.body
  %12 = phi i1 [ true, %for.body ], [ %11, %land.end ]
  %lor.ext = zext i1 %12 to i32, !dbg !12580
  store i32 %lor.ext, i32* %isdata_fcu, align 4, !dbg !12577
  %13 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !12588
  %variables = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %13, i32 0, i32 0, !dbg !12590
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %variables, i32 0, i32 0, !dbg !12591
  %14 = load i8*, i8** %first6, align 8, !dbg !12591
  %15 = bitcast i8* %14 to %struct.DriverVar*, !dbg !12588
  store %struct.DriverVar* %15, %struct.DriverVar** %dvar, align 8, !dbg !12592
  br label %for.cond7, !dbg !12593

for.cond7:                                        ; preds = %for.inc57, %lor.end
  %16 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !12594
  %tobool8 = icmp ne %struct.DriverVar* %16, null, !dbg !12596
  br i1 %tobool8, label %for.body9, label %for.end58, !dbg !12596

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.DriverTarget** %dtar, metadata !12597, metadata !DIExpression()), !dbg !12601
  %17 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !12601
  %targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %17, i32 0, i32 3, !dbg !12601
  %arrayidx = getelementptr inbounds [8 x %struct.DriverTarget], [8 x %struct.DriverTarget]* %targets, i64 0, i64 0, !dbg !12601
  store %struct.DriverTarget* %arrayidx, %struct.DriverTarget** %dtar, align 8, !dbg !12601
  call void @llvm.dbg.declare(metadata i32* %tarIndex, metadata !12602, metadata !DIExpression()), !dbg !12601
  store i32 0, i32* %tarIndex, align 4, !dbg !12601
  br label %for.cond10, !dbg !12601

for.cond10:                                       ; preds = %for.inc, %for.body9
  %18 = load i32, i32* %tarIndex, align 4, !dbg !12603
  %19 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !12603
  %num_targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %19, i32 0, i32 4, !dbg !12603
  %20 = load i16, i16* %num_targets, align 8, !dbg !12603
  %conv = sext i16 %20 to i32, !dbg !12603
  %cmp = icmp slt i32 %18, %conv, !dbg !12603
  br i1 %cmp, label %for.body12, label %for.end, !dbg !12606

for.body12:                                       ; preds = %for.cond10
  %21 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12607
  %id = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %21, i32 0, i32 0, !dbg !12610
  %22 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !12610
  %tobool13 = icmp ne %struct.ID* %22, null, !dbg !12607
  br i1 %tobool13, label %if.then, label %if.end56, !dbg !12611

if.then:                                          ; preds = %for.body12
  %23 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12612
  %id14 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %23, i32 0, i32 0, !dbg !12612
  %24 = load %struct.ID*, %struct.ID** %id14, align 8, !dbg !12612
  %name = getelementptr inbounds %struct.ID, %struct.ID* %24, i32 0, i32 4, !dbg !12612
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !12612
  %25 = bitcast i8* %arraydecay to i16*, !dbg !12612
  %26 = load i16, i16* %25, align 8, !dbg !12612
  %conv15 = sext i16 %26 to i32, !dbg !12612
  %cmp16 = icmp eq i32 %conv15, 16975, !dbg !12615
  br i1 %cmp16, label %if.then18, label %if.end55, !dbg !12616

if.then18:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12617, metadata !DIExpression()), !dbg !12619
  %27 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12620
  %id19 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %27, i32 0, i32 0, !dbg !12621
  %28 = load %struct.ID*, %struct.ID** %id19, align 8, !dbg !12621
  %29 = bitcast %struct.ID* %28 to %struct.Object*, !dbg !12622
  store %struct.Object* %29, %struct.Object** %ob, align 8, !dbg !12619
  %30 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12623
  %31 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12624
  %id20 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %31, i32 0, i32 0, !dbg !12625
  %32 = load %struct.ID*, %struct.ID** %id20, align 8, !dbg !12625
  %33 = bitcast %struct.ID* %32 to i8*, !dbg !12624
  %call21 = call %struct.DagNode* @dag_get_node(%struct.DagForest* %30, i8* %33), !dbg !12626
  store %struct.DagNode* %call21, %struct.DagNode** %node1, align 8, !dbg !12627
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12628
  %type = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 3, !dbg !12630
  %35 = load i16, i16* %type, align 8, !dbg !12630
  %conv22 = sext i16 %35 to i32, !dbg !12628
  %cmp23 = icmp eq i32 %conv22, 25, !dbg !12631
  br i1 %cmp23, label %land.lhs.true, label %if.else, !dbg !12632

land.lhs.true:                                    ; preds = %if.then18
  %36 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12633
  %rna_path25 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %36, i32 0, i32 1, !dbg !12634
  %37 = load i8*, i8** %rna_path25, align 8, !dbg !12634
  %tobool26 = icmp ne i8* %37, null, !dbg !12635
  br i1 %tobool26, label %land.lhs.true27, label %lor.lhs.false, !dbg !12636

land.lhs.true27:                                  ; preds = %land.lhs.true
  %38 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12637
  %rna_path28 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %38, i32 0, i32 1, !dbg !12638
  %39 = load i8*, i8** %rna_path28, align 8, !dbg !12638
  %call29 = call i8* @strstr(i8* %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0)) #5, !dbg !12639
  %tobool30 = icmp ne i8* %call29, null, !dbg !12639
  br i1 %tobool30, label %if.then37, label %lor.lhs.false, !dbg !12640

lor.lhs.false:                                    ; preds = %land.lhs.true27, %land.lhs.true
  %40 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12641
  %flag = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %40, i32 0, i32 4, !dbg !12642
  %41 = load i16, i16* %flag, align 2, !dbg !12642
  %conv31 = sext i16 %41 to i32, !dbg !12641
  %and = and i32 %conv31, 1, !dbg !12643
  %tobool32 = icmp ne i32 %and, 0, !dbg !12643
  br i1 %tobool32, label %land.lhs.true33, label %if.else, !dbg !12644

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %42 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12645
  %pchan_name = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %42, i32 0, i32 2, !dbg !12646
  %arrayidx34 = getelementptr inbounds [32 x i8], [32 x i8]* %pchan_name, i64 0, i64 0, !dbg !12645
  %43 = load i8, i8* %arrayidx34, align 8, !dbg !12645
  %conv35 = zext i8 %43 to i32, !dbg !12647
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !12647
  br i1 %tobool36, label %if.then37, label %if.else, !dbg !12648

if.then37:                                        ; preds = %land.lhs.true33, %land.lhs.true27
  %44 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12649
  %45 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !12651
  %46 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12652
  %47 = load i32, i32* %isdata_fcu, align 4, !dbg !12653
  %tobool38 = icmp ne i32 %47, 0, !dbg !12653
  %48 = zext i1 %tobool38 to i64, !dbg !12653
  %cond = select i1 %tobool38, i32 32, i32 16, !dbg !12653
  %conv39 = trunc i32 %cond to i16, !dbg !12653
  call void @dag_add_relation(%struct.DagForest* %44, %struct.DagNode* %45, %struct.DagNode* %46, i16 signext %conv39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0)), !dbg !12654
  br label %if.end54, !dbg !12655

if.else:                                          ; preds = %land.lhs.true33, %lor.lhs.false, %if.then18
  %49 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12656
  %rna_path40 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %49, i32 0, i32 1, !dbg !12658
  %50 = load i8*, i8** %rna_path40, align 8, !dbg !12658
  %tobool41 = icmp ne i8* %50, null, !dbg !12656
  br i1 %tobool41, label %land.lhs.true42, label %if.else50, !dbg !12659

land.lhs.true42:                                  ; preds = %if.else
  %51 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12660
  %rna_path43 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %51, i32 0, i32 1, !dbg !12661
  %52 = load i8*, i8** %rna_path43, align 8, !dbg !12661
  %call44 = call i8* @strstr(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)) #5, !dbg !12662
  %tobool45 = icmp ne i8* %call44, null, !dbg !12662
  br i1 %tobool45, label %if.then46, label %if.else50, !dbg !12663

if.then46:                                        ; preds = %land.lhs.true42
  %53 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12664
  %54 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !12665
  %55 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12666
  %56 = load i32, i32* %isdata_fcu, align 4, !dbg !12667
  %tobool47 = icmp ne i32 %56, 0, !dbg !12667
  %57 = zext i1 %tobool47 to i64, !dbg !12667
  %cond48 = select i1 %tobool47, i32 32, i32 16, !dbg !12667
  %conv49 = trunc i32 %cond48 to i16, !dbg !12667
  call void @dag_add_relation(%struct.DagForest* %53, %struct.DagNode* %54, %struct.DagNode* %55, i16 signext %conv49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0)), !dbg !12668
  br label %if.end, !dbg !12668

if.else50:                                        ; preds = %land.lhs.true42, %if.else
  %58 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12669
  %59 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !12670
  %60 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12671
  %61 = load i32, i32* %isdata_fcu, align 4, !dbg !12672
  %tobool51 = icmp ne i32 %61, 0, !dbg !12672
  %62 = zext i1 %tobool51 to i64, !dbg !12672
  %cond52 = select i1 %tobool51, i32 8, i32 4, !dbg !12672
  %conv53 = trunc i32 %cond52 to i16, !dbg !12672
  call void @dag_add_relation(%struct.DagForest* %58, %struct.DagNode* %59, %struct.DagNode* %60, i16 signext %conv53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0)), !dbg !12673
  br label %if.end

if.end:                                           ; preds = %if.else50, %if.then46
  br label %if.end54

if.end54:                                         ; preds = %if.end, %if.then37
  br label %if.end55, !dbg !12674

if.end55:                                         ; preds = %if.end54, %if.then
  br label %if.end56, !dbg !12675

if.end56:                                         ; preds = %if.end55, %for.body12
  br label %for.inc, !dbg !12676

for.inc:                                          ; preds = %if.end56
  %63 = load i32, i32* %tarIndex, align 4, !dbg !12603
  %inc = add nsw i32 %63, 1, !dbg !12603
  store i32 %inc, i32* %tarIndex, align 4, !dbg !12603
  %64 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !12603
  %incdec.ptr = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %64, i32 1, !dbg !12603
  store %struct.DriverTarget* %incdec.ptr, %struct.DriverTarget** %dtar, align 8, !dbg !12603
  br label %for.cond10, !dbg !12603, !llvm.loop !12677

for.end:                                          ; preds = %for.cond10
  br label %for.inc57, !dbg !12679

for.inc57:                                        ; preds = %for.end
  %65 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !12680
  %next = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %65, i32 0, i32 0, !dbg !12681
  %66 = load %struct.DriverVar*, %struct.DriverVar** %next, align 8, !dbg !12681
  store %struct.DriverVar* %66, %struct.DriverVar** %dvar, align 8, !dbg !12682
  br label %for.cond7, !dbg !12683, !llvm.loop !12684

for.end58:                                        ; preds = %for.cond7
  br label %for.inc59, !dbg !12686

for.inc59:                                        ; preds = %for.end58
  %67 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !12687
  %next60 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %67, i32 0, i32 0, !dbg !12688
  %68 = load %struct.FCurve*, %struct.FCurve** %next60, align 8, !dbg !12688
  store %struct.FCurve* %68, %struct.FCurve** %fcu, align 8, !dbg !12689
  br label %for.cond, !dbg !12690, !llvm.loop !12691

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !12693
}

declare dso_local %struct.Key* @BKE_key_from_object(%struct.Object*) #1

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #1

declare dso_local zeroext i8 @modifiers_isModifierEnabled(%struct.Object*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_collision_field_relation(%struct.DagForest* %dag, %struct.Scene* %scene, %struct.Object* %ob, %struct.DagNode* %node, i32 %skip_forcefield, i8 zeroext %no_collision) #0 !dbg !12694 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %skip_forcefield.addr = alloca i32, align 4
  %no_collision.addr = alloca i8, align 1
  %base = alloca %struct.Base*, align 8
  %particle_system = alloca %struct.ParticleSystem*, align 8
  %effector_weights = alloca %struct.EffectorWeights*, align 8
  %group_object = alloca %struct.GroupObject*, align 8
  %ob1 = alloca %struct.Object*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12699, metadata !DIExpression()), !dbg !12700
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12703, metadata !DIExpression()), !dbg !12704
  store i32 %skip_forcefield, i32* %skip_forcefield.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip_forcefield.addr, metadata !12705, metadata !DIExpression()), !dbg !12706
  store i8 %no_collision, i8* %no_collision.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_collision.addr, metadata !12707, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !12709, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %particle_system, metadata !12711, metadata !DIExpression()), !dbg !12712
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12713
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 109, !dbg !12715
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !12716
  %1 = load i8*, i8** %first, align 8, !dbg !12716
  %2 = bitcast i8* %1 to %struct.ParticleSystem*, !dbg !12713
  store %struct.ParticleSystem* %2, %struct.ParticleSystem** %particle_system, align 8, !dbg !12717
  br label %for.cond, !dbg !12718

for.cond:                                         ; preds = %for.inc14, %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %particle_system, align 8, !dbg !12719
  %tobool = icmp ne %struct.ParticleSystem* %3, null, !dbg !12721
  br i1 %tobool, label %for.body, label %for.end16, !dbg !12721

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.EffectorWeights** %effector_weights, metadata !12722, metadata !DIExpression()), !dbg !12726
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %particle_system, align 8, !dbg !12727
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 2, !dbg !12728
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12728
  %effector_weights1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 4, !dbg !12729
  %6 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights1, align 8, !dbg !12729
  store %struct.EffectorWeights* %6, %struct.EffectorWeights** %effector_weights, align 8, !dbg !12726
  %7 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !12730
  %group = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %7, i32 0, i32 0, !dbg !12732
  %8 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !12732
  %tobool2 = icmp ne %struct.Group* %8, null, !dbg !12730
  br i1 %tobool2, label %if.then, label %if.end13, !dbg !12733

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %group_object, metadata !12734, metadata !DIExpression()), !dbg !12736
  %9 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !12737
  %group3 = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %9, i32 0, i32 0, !dbg !12739
  %10 = load %struct.Group*, %struct.Group** %group3, align 8, !dbg !12739
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %10, i32 0, i32 1, !dbg !12740
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !12741
  %11 = load i8*, i8** %first4, align 8, !dbg !12741
  %12 = bitcast i8* %11 to %struct.GroupObject*, !dbg !12737
  store %struct.GroupObject* %12, %struct.GroupObject** %group_object, align 8, !dbg !12742
  br label %for.cond5, !dbg !12743

for.cond5:                                        ; preds = %for.inc, %if.then
  %13 = load %struct.GroupObject*, %struct.GroupObject** %group_object, align 8, !dbg !12744
  %tobool6 = icmp ne %struct.GroupObject* %13, null, !dbg !12746
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12746

for.body7:                                        ; preds = %for.cond5
  %14 = load %struct.GroupObject*, %struct.GroupObject** %group_object, align 8, !dbg !12747
  %ob8 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %14, i32 0, i32 2, !dbg !12750
  %15 = load %struct.Object*, %struct.Object** %ob8, align 8, !dbg !12750
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 52, !dbg !12751
  %16 = load i32, i32* %lay, align 8, !dbg !12751
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12752
  %lay9 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 52, !dbg !12753
  %18 = load i32, i32* %lay9, align 8, !dbg !12753
  %and = and i32 %16, %18, !dbg !12754
  %tobool10 = icmp ne i32 %and, 0, !dbg !12754
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !12755

if.then11:                                        ; preds = %for.body7
  %19 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12756
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12758
  %21 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12759
  %22 = load %struct.GroupObject*, %struct.GroupObject** %group_object, align 8, !dbg !12760
  %ob12 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %22, i32 0, i32 2, !dbg !12761
  %23 = load %struct.Object*, %struct.Object** %ob12, align 8, !dbg !12761
  %24 = load i32, i32* %skip_forcefield.addr, align 4, !dbg !12762
  %25 = load i8, i8* %no_collision.addr, align 1, !dbg !12763
  call void @check_and_create_collision_relation(%struct.DagForest* %19, %struct.Object* %20, %struct.DagNode* %21, %struct.Object* %23, i32 %24, i8 zeroext %25), !dbg !12764
  br label %if.end, !dbg !12765

if.end:                                           ; preds = %if.then11, %for.body7
  br label %for.inc, !dbg !12766

for.inc:                                          ; preds = %if.end
  %26 = load %struct.GroupObject*, %struct.GroupObject** %group_object, align 8, !dbg !12767
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %26, i32 0, i32 0, !dbg !12768
  %27 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !12768
  store %struct.GroupObject* %27, %struct.GroupObject** %group_object, align 8, !dbg !12769
  br label %for.cond5, !dbg !12770, !llvm.loop !12771

for.end:                                          ; preds = %for.cond5
  br label %if.end13, !dbg !12773

if.end13:                                         ; preds = %for.end, %for.body
  br label %for.inc14, !dbg !12774

for.inc14:                                        ; preds = %if.end13
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %particle_system, align 8, !dbg !12775
  %next15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %28, i32 0, i32 0, !dbg !12776
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next15, align 8, !dbg !12776
  store %struct.ParticleSystem* %29, %struct.ParticleSystem** %particle_system, align 8, !dbg !12777
  br label %for.cond, !dbg !12778, !llvm.loop !12779

for.end16:                                        ; preds = %for.cond
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12781
  %base17 = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 5, !dbg !12783
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base17, i32 0, i32 0, !dbg !12784
  %31 = load i8*, i8** %first18, align 8, !dbg !12784
  %32 = bitcast i8* %31 to %struct.Base*, !dbg !12781
  store %struct.Base* %32, %struct.Base** %base, align 8, !dbg !12785
  br label %for.cond19, !dbg !12786

for.cond19:                                       ; preds = %for.inc28, %for.end16
  %33 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12787
  %tobool20 = icmp ne %struct.Base* %33, null, !dbg !12789
  br i1 %tobool20, label %for.body21, label %for.end30, !dbg !12789

for.body21:                                       ; preds = %for.cond19
  %34 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12790
  %lay22 = getelementptr inbounds %struct.Base, %struct.Base* %34, i32 0, i32 2, !dbg !12793
  %35 = load i32, i32* %lay22, align 8, !dbg !12793
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12794
  %lay23 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 52, !dbg !12795
  %37 = load i32, i32* %lay23, align 8, !dbg !12795
  %and24 = and i32 %35, %37, !dbg !12796
  %tobool25 = icmp ne i32 %and24, 0, !dbg !12796
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !12797

if.then26:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata %struct.Object** %ob1, metadata !12798, metadata !DIExpression()), !dbg !12800
  %38 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12801
  %object = getelementptr inbounds %struct.Base, %struct.Base* %38, i32 0, i32 7, !dbg !12802
  %39 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12802
  store %struct.Object* %39, %struct.Object** %ob1, align 8, !dbg !12800
  %40 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12803
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12804
  %42 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12805
  %43 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !12806
  %44 = load i32, i32* %skip_forcefield.addr, align 4, !dbg !12807
  %45 = load i8, i8* %no_collision.addr, align 1, !dbg !12808
  call void @check_and_create_collision_relation(%struct.DagForest* %40, %struct.Object* %41, %struct.DagNode* %42, %struct.Object* %43, i32 %44, i8 zeroext %45), !dbg !12809
  br label %if.end27, !dbg !12810

if.end27:                                         ; preds = %if.then26, %for.body21
  br label %for.inc28, !dbg !12811

for.inc28:                                        ; preds = %if.end27
  %46 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12812
  %next29 = getelementptr inbounds %struct.Base, %struct.Base* %46, i32 0, i32 0, !dbg !12813
  %47 = load %struct.Base*, %struct.Base** %next29, align 8, !dbg !12813
  store %struct.Base* %47, %struct.Base** %base, align 8, !dbg !12814
  br label %for.cond19, !dbg !12815, !llvm.loop !12816

for.end30:                                        ; preds = %for.cond19
  ret void, !dbg !12818
}

declare dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID*) #1

declare dso_local %struct.Object* @BKE_mball_basis_find(%struct.Scene*, %struct.Object*) #1

declare dso_local %struct.ListBase* @object_duplilist(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*) #1

declare dso_local void @free_object_duplilist(%struct.ListBase*) #1

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_material_driver_relations(%struct.DagForest* %dag, %struct.DagNode* %node, %struct.Material* %ma) #0 !dbg !12819 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12824, metadata !DIExpression()), !dbg !12825
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !12826, metadata !DIExpression()), !dbg !12827
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12828
  %id = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 0, !dbg !12830
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !12831
  %1 = load i16, i16* %flag, align 2, !dbg !12831
  %conv = sext i16 %1 to i32, !dbg !12828
  %and = and i32 %conv, 1024, !dbg !12832
  %tobool = icmp ne i32 %and, 0, !dbg !12832
  br i1 %tobool, label %if.then, label %if.end, !dbg !12833

if.then:                                          ; preds = %entry
  br label %return, !dbg !12834

if.end:                                           ; preds = %entry
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12835
  %id1 = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 0, !dbg !12836
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !12837
  %3 = load i16, i16* %flag2, align 2, !dbg !12838
  %conv3 = sext i16 %3 to i32, !dbg !12838
  %or = or i32 %conv3, 1024, !dbg !12838
  %conv4 = trunc i32 %or to i16, !dbg !12838
  store i16 %conv4, i16* %flag2, align 2, !dbg !12838
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12839
  %adt = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 1, !dbg !12841
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !12841
  %tobool5 = icmp ne %struct.AnimData* %5, null, !dbg !12839
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !12842

if.then6:                                         ; preds = %if.end
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12843
  %adt7 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 1, !dbg !12844
  %7 = load %struct.AnimData*, %struct.AnimData** %adt7, align 8, !dbg !12844
  %8 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12845
  %9 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12846
  call void @dag_add_driver_relation(%struct.AnimData* %7, %struct.DagForest* %8, %struct.DagNode* %9, i32 1), !dbg !12847
  br label %if.end8, !dbg !12847

if.end8:                                          ; preds = %if.then6, %if.end
  %10 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12848
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 103, !dbg !12850
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !12850
  %tobool9 = icmp ne %struct.bNodeTree* %11, null, !dbg !12848
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !12851

if.then10:                                        ; preds = %if.end8
  %12 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12852
  %13 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12853
  %14 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12854
  %nodetree11 = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 103, !dbg !12855
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree11, align 8, !dbg !12855
  call void @dag_add_shader_nodetree_driver_relations(%struct.DagForest* %12, %struct.DagNode* %13, %struct.bNodeTree* %15), !dbg !12856
  br label %if.end12, !dbg !12856

if.end12:                                         ; preds = %if.then10, %if.end8
  %16 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !12857
  %id13 = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 0, !dbg !12858
  %flag14 = getelementptr inbounds %struct.ID, %struct.ID* %id13, i32 0, i32 5, !dbg !12859
  %17 = load i16, i16* %flag14, align 2, !dbg !12860
  %conv15 = sext i16 %17 to i32, !dbg !12860
  %and16 = and i32 %conv15, -1025, !dbg !12860
  %conv17 = trunc i32 %and16 to i16, !dbg !12860
  store i16 %conv17, i16* %flag14, align 2, !dbg !12860
  br label %return, !dbg !12861

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !12861
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_lamp_driver_relations(%struct.DagForest* %dag, %struct.DagNode* %node, %struct.Lamp* %la) #0 !dbg !12862 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %la.addr = alloca %struct.Lamp*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12865, metadata !DIExpression()), !dbg !12866
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12867, metadata !DIExpression()), !dbg !12868
  store %struct.Lamp* %la, %struct.Lamp** %la.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Lamp** %la.addr, metadata !12869, metadata !DIExpression()), !dbg !12870
  %0 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12871
  %id = getelementptr inbounds %struct.Lamp, %struct.Lamp* %0, i32 0, i32 0, !dbg !12873
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !12874
  %1 = load i16, i16* %flag, align 2, !dbg !12874
  %conv = sext i16 %1 to i32, !dbg !12871
  %and = and i32 %conv, 1024, !dbg !12875
  %tobool = icmp ne i32 %and, 0, !dbg !12875
  br i1 %tobool, label %if.then, label %if.end, !dbg !12876

if.then:                                          ; preds = %entry
  br label %return, !dbg !12877

if.end:                                           ; preds = %entry
  %2 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12878
  %id1 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %2, i32 0, i32 0, !dbg !12879
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !12880
  %3 = load i16, i16* %flag2, align 2, !dbg !12881
  %conv3 = sext i16 %3 to i32, !dbg !12881
  %or = or i32 %conv3, 1024, !dbg !12881
  %conv4 = trunc i32 %or to i16, !dbg !12881
  store i16 %conv4, i16* %flag2, align 2, !dbg !12881
  %4 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12882
  %adt = getelementptr inbounds %struct.Lamp, %struct.Lamp* %4, i32 0, i32 1, !dbg !12884
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !12884
  %tobool5 = icmp ne %struct.AnimData* %5, null, !dbg !12882
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !12885

if.then6:                                         ; preds = %if.end
  %6 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12886
  %adt7 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %6, i32 0, i32 1, !dbg !12887
  %7 = load %struct.AnimData*, %struct.AnimData** %adt7, align 8, !dbg !12887
  %8 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12888
  %9 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12889
  call void @dag_add_driver_relation(%struct.AnimData* %7, %struct.DagForest* %8, %struct.DagNode* %9, i32 1), !dbg !12890
  br label %if.end8, !dbg !12890

if.end8:                                          ; preds = %if.then6, %if.end
  %10 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12891
  %nodetree = getelementptr inbounds %struct.Lamp, %struct.Lamp* %10, i32 0, i32 74, !dbg !12893
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !12893
  %tobool9 = icmp ne %struct.bNodeTree* %11, null, !dbg !12891
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !12894

if.then10:                                        ; preds = %if.end8
  %12 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12895
  %13 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12896
  %14 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12897
  %nodetree11 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %14, i32 0, i32 74, !dbg !12898
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree11, align 8, !dbg !12898
  call void @dag_add_shader_nodetree_driver_relations(%struct.DagForest* %12, %struct.DagNode* %13, %struct.bNodeTree* %15), !dbg !12899
  br label %if.end12, !dbg !12899

if.end12:                                         ; preds = %if.then10, %if.end8
  %16 = load %struct.Lamp*, %struct.Lamp** %la.addr, align 8, !dbg !12900
  %id13 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %16, i32 0, i32 0, !dbg !12901
  %flag14 = getelementptr inbounds %struct.ID, %struct.ID* %id13, i32 0, i32 5, !dbg !12902
  %17 = load i16, i16* %flag14, align 2, !dbg !12903
  %conv15 = sext i16 %17 to i32, !dbg !12903
  %and16 = and i32 %conv15, -1025, !dbg !12903
  %conv17 = trunc i32 %and16 to i16, !dbg !12903
  store i16 %conv17, i16* %flag14, align 2, !dbg !12903
  br label %return, !dbg !12904

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !12904
}

declare dso_local i32 @psys_check_enabled(%struct.Object*, %struct.ParticleSystem*) #1

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #1

declare dso_local %struct.ListBase* @pdInitEffectors(%struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.EffectorWeights*, i8 zeroext) #1

declare dso_local void @pdEndEffectors(%struct.ListBase**) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @check_and_create_collision_relation(%struct.DagForest* %dag, %struct.Object* %ob, %struct.DagNode* %node, %struct.Object* %ob1, i32 %skip_forcefield, i8 zeroext %no_collision) #0 !dbg !12905 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %ob1.addr = alloca %struct.Object*, align 8
  %skip_forcefield.addr = alloca i32, align 4
  %no_collision.addr = alloca i8, align 1
  %node2 = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12912, metadata !DIExpression()), !dbg !12913
  store %struct.Object* %ob1, %struct.Object** %ob1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob1.addr, metadata !12914, metadata !DIExpression()), !dbg !12915
  store i32 %skip_forcefield, i32* %skip_forcefield.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip_forcefield.addr, metadata !12916, metadata !DIExpression()), !dbg !12917
  store i8 %no_collision, i8* %no_collision.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_collision.addr, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node2, metadata !12920, metadata !DIExpression()), !dbg !12921
  %0 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12922
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 110, !dbg !12924
  %1 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !12924
  %tobool = icmp ne %struct.PartDeflect* %1, null, !dbg !12922
  br i1 %tobool, label %land.lhs.true, label %if.end25, !dbg !12925

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12926
  %pd1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 110, !dbg !12927
  %3 = load %struct.PartDeflect*, %struct.PartDeflect** %pd1, align 8, !dbg !12927
  %deflect = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %3, i32 0, i32 1, !dbg !12928
  %4 = load i16, i16* %deflect, align 4, !dbg !12928
  %conv = sext i16 %4 to i32, !dbg !12926
  %tobool2 = icmp ne i32 %conv, 0, !dbg !12926
  br i1 %tobool2, label %land.lhs.true6, label %lor.lhs.false, !dbg !12929

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12930
  %pd3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 110, !dbg !12931
  %6 = load %struct.PartDeflect*, %struct.PartDeflect** %pd3, align 8, !dbg !12931
  %forcefield = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %6, i32 0, i32 2, !dbg !12932
  %7 = load i16, i16* %forcefield, align 2, !dbg !12932
  %conv4 = sext i16 %7 to i32, !dbg !12930
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !12930
  br i1 %tobool5, label %land.lhs.true6, label %if.end25, !dbg !12933

land.lhs.true6:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %8 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12934
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12935
  %cmp = icmp ne %struct.Object* %8, %9, !dbg !12936
  br i1 %cmp, label %if.then, label %if.end25, !dbg !12937

if.then:                                          ; preds = %land.lhs.true6
  %10 = load i32, i32* %skip_forcefield.addr, align 4, !dbg !12938
  %tobool8 = icmp ne i32 %10, 0, !dbg !12938
  br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false15, !dbg !12941

land.lhs.true9:                                   ; preds = %if.then
  %11 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12942
  %pd10 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 110, !dbg !12943
  %12 = load %struct.PartDeflect*, %struct.PartDeflect** %pd10, align 8, !dbg !12943
  %forcefield11 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %12, i32 0, i32 2, !dbg !12944
  %13 = load i16, i16* %forcefield11, align 2, !dbg !12944
  %conv12 = sext i16 %13 to i32, !dbg !12942
  %14 = load i32, i32* %skip_forcefield.addr, align 4, !dbg !12945
  %cmp13 = icmp eq i32 %conv12, %14, !dbg !12946
  br i1 %cmp13, label %if.then24, label %lor.lhs.false15, !dbg !12947

lor.lhs.false15:                                  ; preds = %land.lhs.true9, %if.then
  %15 = load i8, i8* %no_collision.addr, align 1, !dbg !12948
  %conv16 = zext i8 %15 to i32, !dbg !12948
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !12948
  br i1 %tobool17, label %land.lhs.true18, label %if.end, !dbg !12949

land.lhs.true18:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12950
  %pd19 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 110, !dbg !12951
  %17 = load %struct.PartDeflect*, %struct.PartDeflect** %pd19, align 8, !dbg !12951
  %forcefield20 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %17, i32 0, i32 2, !dbg !12952
  %18 = load i16, i16* %forcefield20, align 2, !dbg !12952
  %conv21 = sext i16 %18 to i32, !dbg !12950
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !12953
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !12954

if.then24:                                        ; preds = %land.lhs.true18, %land.lhs.true9
  br label %if.end25, !dbg !12955

if.end:                                           ; preds = %land.lhs.true18, %lor.lhs.false15
  %19 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12956
  %20 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !12957
  %21 = bitcast %struct.Object* %20 to i8*, !dbg !12957
  %call = call %struct.DagNode* @dag_get_node(%struct.DagForest* %19, i8* %21), !dbg !12958
  store %struct.DagNode* %call, %struct.DagNode** %node2, align 8, !dbg !12959
  %22 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12960
  %23 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !12961
  %24 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12962
  call void @dag_add_relation(%struct.DagForest* %22, %struct.DagNode* %23, %struct.DagNode* %24, i16 signext 40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i64 0, i64 0)), !dbg !12963
  br label %if.end25, !dbg !12964

if.end25:                                         ; preds = %if.then24, %if.end, %land.lhs.true6, %lor.lhs.false, %entry
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_add_shader_nodetree_driver_relations(%struct.DagForest* %dag, %struct.DagNode* %node, %struct.bNodeTree* %ntree) #0 !dbg !12966 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %n = alloca %struct.bNode*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !12973, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.declare(metadata %struct.bNode** %n, metadata !12975, metadata !DIExpression()), !dbg !12976
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !12977
  %adt = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 1, !dbg !12979
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !12979
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !12977
  br i1 %tobool, label %if.then, label %if.end, !dbg !12980

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !12981
  %adt1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 1, !dbg !12983
  %3 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !12983
  %4 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !12984
  %5 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !12985
  call void @dag_add_driver_relation(%struct.AnimData* %3, %struct.DagForest* %4, %struct.DagNode* %5, i32 1), !dbg !12986
  br label %if.end, !dbg !12987

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !12988
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 7, !dbg !12990
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !12991
  %7 = load i8*, i8** %first, align 8, !dbg !12991
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !12988
  store %struct.bNode* %8, %struct.bNode** %n, align 8, !dbg !12992
  br label %for.cond, !dbg !12993

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !12994
  %tobool2 = icmp ne %struct.bNode* %9, null, !dbg !12996
  br i1 %tobool2, label %for.body, label %for.end, !dbg !12996

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !12997
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !13000
  %11 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !13000
  %tobool3 = icmp ne %struct.ID* %11, null, !dbg !12997
  br i1 %tobool3, label %if.then4, label %if.end16, !dbg !13001

if.then4:                                         ; preds = %for.body
  %12 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !13002
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 20, !dbg !13002
  %13 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !13002
  %name = getelementptr inbounds %struct.ID, %struct.ID* %13, i32 0, i32 4, !dbg !13002
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !13002
  %14 = bitcast i8* %arraydecay to i16*, !dbg !13002
  %15 = load i16, i16* %14, align 8, !dbg !13002
  %conv = sext i16 %15 to i32, !dbg !13002
  %cmp = icmp eq i32 %conv, 16717, !dbg !13005
  br i1 %cmp, label %if.then7, label %if.else, !dbg !13006

if.then7:                                         ; preds = %if.then4
  %16 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13007
  %17 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13009
  %18 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !13010
  %id8 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 20, !dbg !13011
  %19 = load %struct.ID*, %struct.ID** %id8, align 8, !dbg !13011
  %20 = bitcast %struct.ID* %19 to %struct.Material*, !dbg !13012
  call void @dag_add_material_driver_relations(%struct.DagForest* %16, %struct.DagNode* %17, %struct.Material* %20), !dbg !13013
  br label %if.end15, !dbg !13014

if.else:                                          ; preds = %if.then4
  %21 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !13015
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 8, !dbg !13017
  %22 = load i16, i16* %type, align 4, !dbg !13017
  %conv9 = sext i16 %22 to i32, !dbg !13015
  %cmp10 = icmp eq i32 %conv9, 2, !dbg !13018
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !13019

if.then12:                                        ; preds = %if.else
  %23 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13020
  %24 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13022
  %25 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !13023
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 20, !dbg !13024
  %26 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !13024
  %27 = bitcast %struct.ID* %26 to %struct.bNodeTree*, !dbg !13025
  call void @dag_add_shader_nodetree_driver_relations(%struct.DagForest* %23, %struct.DagNode* %24, %struct.bNodeTree* %27), !dbg !13026
  br label %if.end14, !dbg !13027

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then7
  br label %if.end16, !dbg !13028

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !13029

for.inc:                                          ; preds = %if.end16
  %28 = load %struct.bNode*, %struct.bNode** %n, align 8, !dbg !13030
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 0, !dbg !13031
  %29 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !13031
  store %struct.bNode* %29, %struct.bNode** %n, align 8, !dbg !13032
  br label %for.cond, !dbg !13033, !llvm.loop !13034

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13036
}

; Function Attrs: noinline nounwind uwtable
define internal void @scene_sort_groups(%struct.Main* %bmain, %struct.Scene* %sce) #0 !dbg !13037 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %group = alloca %struct.Group*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %ob = alloca %struct.Object*, align 8
  %listb = alloca %struct.ListBase, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !13044, metadata !DIExpression()), !dbg !13045
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !13046, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !13048, metadata !DIExpression()), !dbg !13049
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !13050
  %object = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 13, !dbg !13052
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !13053
  %1 = load i8*, i8** %first, align 8, !dbg !13053
  %2 = bitcast i8* %1 to %struct.Object*, !dbg !13050
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !13054
  br label %for.cond, !dbg !13055

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13056
  %tobool = icmp ne %struct.Object* %3, null, !dbg !13058
  br i1 %tobool, label %for.body, label %for.end, !dbg !13058

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13059
  %id = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 0, !dbg !13061
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !13062
  %5 = load i16, i16* %flag, align 2, !dbg !13063
  %conv = sext i16 %5 to i32, !dbg !13063
  %and = and i32 %conv, -1025, !dbg !13063
  %conv1 = trunc i32 %and to i16, !dbg !13063
  store i16 %conv1, i16* %flag, align 2, !dbg !13063
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13064
  %id2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !13065
  %newid = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 2, !dbg !13066
  store %struct.ID* null, %struct.ID** %newid, align 8, !dbg !13067
  br label %for.inc, !dbg !13068

for.inc:                                          ; preds = %for.body
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13069
  %id3 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 0, !dbg !13070
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 0, !dbg !13071
  %8 = load i8*, i8** %next, align 8, !dbg !13071
  %9 = bitcast i8* %8 to %struct.Object*, !dbg !13069
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !13072
  br label %for.cond, !dbg !13073, !llvm.loop !13074

for.end:                                          ; preds = %for.cond
  %10 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !13076
  %base4 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 5, !dbg !13078
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base4, i32 0, i32 0, !dbg !13079
  %11 = load i8*, i8** %first5, align 8, !dbg !13079
  %12 = bitcast i8* %11 to %struct.Base*, !dbg !13076
  store %struct.Base* %12, %struct.Base** %base, align 8, !dbg !13080
  br label %for.cond6, !dbg !13081

for.cond6:                                        ; preds = %for.inc14, %for.end
  %13 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13082
  %tobool7 = icmp ne %struct.Base* %13, null, !dbg !13084
  br i1 %tobool7, label %for.body8, label %for.end16, !dbg !13084

for.body8:                                        ; preds = %for.cond6
  %14 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13085
  %object9 = getelementptr inbounds %struct.Base, %struct.Base* %14, i32 0, i32 7, !dbg !13086
  %15 = load %struct.Object*, %struct.Object** %object9, align 8, !dbg !13086
  %id10 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !13087
  %flag11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 5, !dbg !13088
  %16 = load i16, i16* %flag11, align 2, !dbg !13089
  %conv12 = sext i16 %16 to i32, !dbg !13089
  %or = or i32 %conv12, 1024, !dbg !13089
  %conv13 = trunc i32 %or to i16, !dbg !13089
  store i16 %conv13, i16* %flag11, align 2, !dbg !13089
  br label %for.inc14, !dbg !13085

for.inc14:                                        ; preds = %for.body8
  %17 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13090
  %next15 = getelementptr inbounds %struct.Base, %struct.Base* %17, i32 0, i32 0, !dbg !13091
  %18 = load %struct.Base*, %struct.Base** %next15, align 8, !dbg !13091
  store %struct.Base* %18, %struct.Base** %base, align 8, !dbg !13092
  br label %for.cond6, !dbg !13093, !llvm.loop !13094

for.end16:                                        ; preds = %for.cond6
  %19 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !13096
  %group17 = getelementptr inbounds %struct.Main, %struct.Main* %19, i32 0, i32 32, !dbg !13098
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group17, i32 0, i32 0, !dbg !13099
  %20 = load i8*, i8** %first18, align 8, !dbg !13099
  %21 = bitcast i8* %20 to %struct.Group*, !dbg !13096
  store %struct.Group* %21, %struct.Group** %group, align 8, !dbg !13100
  br label %for.cond19, !dbg !13101

for.cond19:                                       ; preds = %for.inc72, %for.end16
  %22 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13102
  %tobool20 = icmp ne %struct.Group* %22, null, !dbg !13104
  br i1 %tobool20, label %for.body21, label %for.end75, !dbg !13104

for.body21:                                       ; preds = %for.cond19
  %23 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13105
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %23, i32 0, i32 1, !dbg !13108
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !13109
  %24 = load i8*, i8** %first22, align 8, !dbg !13109
  %25 = bitcast i8* %24 to %struct.GroupObject*, !dbg !13105
  store %struct.GroupObject* %25, %struct.GroupObject** %go, align 8, !dbg !13110
  br label %for.cond23, !dbg !13111

for.cond23:                                       ; preds = %for.inc32, %for.body21
  %26 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13112
  %tobool24 = icmp ne %struct.GroupObject* %26, null, !dbg !13114
  br i1 %tobool24, label %for.body25, label %for.end34, !dbg !13114

for.body25:                                       ; preds = %for.cond23
  %27 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13115
  %ob26 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %27, i32 0, i32 2, !dbg !13118
  %28 = load %struct.Object*, %struct.Object** %ob26, align 8, !dbg !13118
  %id27 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 0, !dbg !13119
  %flag28 = getelementptr inbounds %struct.ID, %struct.ID* %id27, i32 0, i32 5, !dbg !13120
  %29 = load i16, i16* %flag28, align 2, !dbg !13120
  %conv29 = sext i16 %29 to i32, !dbg !13115
  %and30 = and i32 %conv29, 1024, !dbg !13121
  %cmp = icmp eq i32 %and30, 0, !dbg !13122
  br i1 %cmp, label %if.then, label %if.end, !dbg !13123

if.then:                                          ; preds = %for.body25
  br label %for.end34, !dbg !13124

if.end:                                           ; preds = %for.body25
  br label %for.inc32, !dbg !13125

for.inc32:                                        ; preds = %if.end
  %30 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13126
  %next33 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %30, i32 0, i32 0, !dbg !13127
  %31 = load %struct.GroupObject*, %struct.GroupObject** %next33, align 8, !dbg !13127
  store %struct.GroupObject* %31, %struct.GroupObject** %go, align 8, !dbg !13128
  br label %for.cond23, !dbg !13129, !llvm.loop !13130

for.end34:                                        ; preds = %if.then, %for.cond23
  %32 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13132
  %cmp35 = icmp eq %struct.GroupObject* %32, null, !dbg !13134
  br i1 %cmp35, label %if.then37, label %if.end71, !dbg !13135

if.then37:                                        ; preds = %for.end34
  call void @llvm.dbg.declare(metadata %struct.ListBase* %listb, metadata !13136, metadata !DIExpression()), !dbg !13138
  %33 = bitcast %struct.ListBase* %listb to i8*, !dbg !13138
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false), !dbg !13138
  %34 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13139
  %gobject38 = getelementptr inbounds %struct.Group, %struct.Group* %34, i32 0, i32 1, !dbg !13141
  %first39 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject38, i32 0, i32 0, !dbg !13142
  %35 = load i8*, i8** %first39, align 8, !dbg !13142
  %36 = bitcast i8* %35 to %struct.GroupObject*, !dbg !13139
  store %struct.GroupObject* %36, %struct.GroupObject** %go, align 8, !dbg !13143
  br label %for.cond40, !dbg !13144

for.cond40:                                       ; preds = %for.inc46, %if.then37
  %37 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13145
  %tobool41 = icmp ne %struct.GroupObject* %37, null, !dbg !13147
  br i1 %tobool41, label %for.body42, label %for.end48, !dbg !13147

for.body42:                                       ; preds = %for.cond40
  %38 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13148
  %39 = bitcast %struct.GroupObject* %38 to %struct.ID*, !dbg !13149
  %40 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13150
  %ob43 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %40, i32 0, i32 2, !dbg !13151
  %41 = load %struct.Object*, %struct.Object** %ob43, align 8, !dbg !13151
  %id44 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 0, !dbg !13152
  %newid45 = getelementptr inbounds %struct.ID, %struct.ID* %id44, i32 0, i32 2, !dbg !13153
  store %struct.ID* %39, %struct.ID** %newid45, align 8, !dbg !13154
  br label %for.inc46, !dbg !13150

for.inc46:                                        ; preds = %for.body42
  %42 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13155
  %next47 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %42, i32 0, i32 0, !dbg !13156
  %43 = load %struct.GroupObject*, %struct.GroupObject** %next47, align 8, !dbg !13156
  store %struct.GroupObject* %43, %struct.GroupObject** %go, align 8, !dbg !13157
  br label %for.cond40, !dbg !13158, !llvm.loop !13159

for.end48:                                        ; preds = %for.cond40
  %44 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !13161
  %base49 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 5, !dbg !13163
  %first50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base49, i32 0, i32 0, !dbg !13164
  %45 = load i8*, i8** %first50, align 8, !dbg !13164
  %46 = bitcast i8* %45 to %struct.Base*, !dbg !13161
  store %struct.Base* %46, %struct.Base** %base, align 8, !dbg !13165
  br label %for.cond51, !dbg !13166

for.cond51:                                       ; preds = %for.inc67, %for.end48
  %47 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13167
  %tobool52 = icmp ne %struct.Base* %47, null, !dbg !13169
  br i1 %tobool52, label %for.body53, label %for.end69, !dbg !13169

for.body53:                                       ; preds = %for.cond51
  %48 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13170
  %object54 = getelementptr inbounds %struct.Base, %struct.Base* %48, i32 0, i32 7, !dbg !13173
  %49 = load %struct.Object*, %struct.Object** %object54, align 8, !dbg !13173
  %id55 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 0, !dbg !13174
  %newid56 = getelementptr inbounds %struct.ID, %struct.ID* %id55, i32 0, i32 2, !dbg !13175
  %50 = load %struct.ID*, %struct.ID** %newid56, align 8, !dbg !13175
  %tobool57 = icmp ne %struct.ID* %50, null, !dbg !13170
  br i1 %tobool57, label %if.then58, label %if.end66, !dbg !13176

if.then58:                                        ; preds = %for.body53
  %51 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13177
  %object59 = getelementptr inbounds %struct.Base, %struct.Base* %51, i32 0, i32 7, !dbg !13179
  %52 = load %struct.Object*, %struct.Object** %object59, align 8, !dbg !13179
  %id60 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 0, !dbg !13180
  %newid61 = getelementptr inbounds %struct.ID, %struct.ID* %id60, i32 0, i32 2, !dbg !13181
  %53 = load %struct.ID*, %struct.ID** %newid61, align 8, !dbg !13181
  %54 = bitcast %struct.ID* %53 to %struct.GroupObject*, !dbg !13182
  store %struct.GroupObject* %54, %struct.GroupObject** %go, align 8, !dbg !13183
  %55 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13184
  %object62 = getelementptr inbounds %struct.Base, %struct.Base* %55, i32 0, i32 7, !dbg !13185
  %56 = load %struct.Object*, %struct.Object** %object62, align 8, !dbg !13185
  %id63 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 0, !dbg !13186
  %newid64 = getelementptr inbounds %struct.ID, %struct.ID* %id63, i32 0, i32 2, !dbg !13187
  store %struct.ID* null, %struct.ID** %newid64, align 8, !dbg !13188
  %57 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13189
  %gobject65 = getelementptr inbounds %struct.Group, %struct.Group* %57, i32 0, i32 1, !dbg !13190
  %58 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13191
  %59 = bitcast %struct.GroupObject* %58 to i8*, !dbg !13191
  call void @BLI_remlink(%struct.ListBase* %gobject65, i8* %59), !dbg !13192
  %60 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !13193
  %61 = bitcast %struct.GroupObject* %60 to i8*, !dbg !13193
  call void @BLI_addtail(%struct.ListBase* %listb, i8* %61), !dbg !13194
  br label %if.end66, !dbg !13195

if.end66:                                         ; preds = %if.then58, %for.body53
  br label %for.inc67, !dbg !13196

for.inc67:                                        ; preds = %if.end66
  %62 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !13197
  %next68 = getelementptr inbounds %struct.Base, %struct.Base* %62, i32 0, i32 0, !dbg !13198
  %63 = load %struct.Base*, %struct.Base** %next68, align 8, !dbg !13198
  store %struct.Base* %63, %struct.Base** %base, align 8, !dbg !13199
  br label %for.cond51, !dbg !13200, !llvm.loop !13201

for.end69:                                        ; preds = %for.cond51
  %64 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13203
  %gobject70 = getelementptr inbounds %struct.Group, %struct.Group* %64, i32 0, i32 1, !dbg !13204
  %65 = bitcast %struct.ListBase* %gobject70 to i8*, !dbg !13205
  %66 = bitcast %struct.ListBase* %listb to i8*, !dbg !13205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false), !dbg !13205
  br label %if.end71, !dbg !13206

if.end71:                                         ; preds = %for.end69, %for.end34
  br label %for.inc72, !dbg !13207

for.inc72:                                        ; preds = %if.end71
  %67 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !13208
  %id73 = getelementptr inbounds %struct.Group, %struct.Group* %67, i32 0, i32 0, !dbg !13209
  %next74 = getelementptr inbounds %struct.ID, %struct.ID* %id73, i32 0, i32 0, !dbg !13210
  %68 = load i8*, i8** %next74, align 8, !dbg !13210
  %69 = bitcast i8* %68 to %struct.Group*, !dbg !13208
  store %struct.Group* %69, %struct.Group** %group, align 8, !dbg !13211
  br label %for.cond19, !dbg !13212, !llvm.loop !13213

for.end75:                                        ; preds = %for.cond19
  ret void, !dbg !13215
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @flush_layer_node(%struct.Scene* %sce, %struct.DagNode* %node, i32 %curtime) #0 !dbg !13216 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %curtime.addr = alloca i32, align 4
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !13219, metadata !DIExpression()), !dbg !13220
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !13221, metadata !DIExpression()), !dbg !13222
  store i32 %curtime, i32* %curtime.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curtime.addr, metadata !13223, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !13225, metadata !DIExpression()), !dbg !13226
  %0 = load i32, i32* %curtime.addr, align 4, !dbg !13227
  %1 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13228
  %lasttime = getelementptr inbounds %struct.DagNode, %struct.DagNode* %1, i32 0, i32 11, !dbg !13229
  store i32 %0, i32* %lasttime, align 8, !dbg !13230
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13231
  %scelay = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 9, !dbg !13232
  %3 = load i32, i32* %scelay, align 8, !dbg !13232
  %4 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13233
  %lay = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 8, !dbg !13234
  store i32 %3, i32* %lay, align 4, !dbg !13235
  %5 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13236
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 16, !dbg !13238
  %6 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !13238
  store %struct.DagAdjList* %6, %struct.DagAdjList** %itA, align 8, !dbg !13239
  br label %for.cond, !dbg !13240

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13241
  %tobool = icmp ne %struct.DagAdjList* %7, null, !dbg !13243
  br i1 %tobool, label %for.body, label %for.end, !dbg !13243

for.body:                                         ; preds = %for.cond
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13244
  %node1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 0, !dbg !13247
  %9 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !13247
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %9, i32 0, i32 1, !dbg !13248
  %10 = load i16, i16* %type, align 4, !dbg !13248
  %conv = sext i16 %10 to i32, !dbg !13244
  %cmp = icmp eq i32 %conv, 16975, !dbg !13249
  br i1 %cmp, label %if.then, label %if.end15, !dbg !13250

if.then:                                          ; preds = %for.body
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13251
  %node3 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %11, i32 0, i32 0, !dbg !13254
  %12 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !13254
  %lasttime4 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %12, i32 0, i32 11, !dbg !13255
  %13 = load i32, i32* %lasttime4, align 8, !dbg !13255
  %14 = load i32, i32* %curtime.addr, align 4, !dbg !13256
  %cmp5 = icmp ne i32 %13, %14, !dbg !13257
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13258

if.then7:                                         ; preds = %if.then
  %15 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !13259
  %16 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13261
  %node8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %16, i32 0, i32 0, !dbg !13262
  %17 = load %struct.DagNode*, %struct.DagNode** %node8, align 8, !dbg !13262
  %18 = load i32, i32* %curtime.addr, align 4, !dbg !13263
  %call = call i32 @flush_layer_node(%struct.Scene* %15, %struct.DagNode* %17, i32 %18), !dbg !13264
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13265
  %lay9 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %19, i32 0, i32 3, !dbg !13266
  store i32 %call, i32* %lay9, align 8, !dbg !13267
  br label %if.end, !dbg !13268

if.else:                                          ; preds = %if.then
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13269
  %node10 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %20, i32 0, i32 0, !dbg !13271
  %21 = load %struct.DagNode*, %struct.DagNode** %node10, align 8, !dbg !13271
  %lay11 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 8, !dbg !13272
  %22 = load i32, i32* %lay11, align 4, !dbg !13272
  %23 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13273
  %lay12 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %23, i32 0, i32 3, !dbg !13274
  store i32 %22, i32* %lay12, align 8, !dbg !13275
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %24 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13276
  %lay13 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %24, i32 0, i32 3, !dbg !13277
  %25 = load i32, i32* %lay13, align 8, !dbg !13277
  %26 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13278
  %lay14 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %26, i32 0, i32 8, !dbg !13279
  %27 = load i32, i32* %lay14, align 4, !dbg !13280
  %or = or i32 %27, %25, !dbg !13280
  store i32 %or, i32* %lay14, align 4, !dbg !13280
  br label %if.end15, !dbg !13281

if.end15:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !13282

for.inc:                                          ; preds = %if.end15
  %28 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13283
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %28, i32 0, i32 5, !dbg !13284
  %29 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !13284
  store %struct.DagAdjList* %29, %struct.DagAdjList** %itA, align 8, !dbg !13285
  br label %for.cond, !dbg !13286, !llvm.loop !13287

for.end:                                          ; preds = %for.cond
  %30 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13289
  %lay16 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %30, i32 0, i32 8, !dbg !13290
  %31 = load i32, i32* %lay16, align 4, !dbg !13290
  ret i32 %31, !dbg !13291
}

declare dso_local void @BKE_object_free_derived_caches(%struct.Object*) #1

declare dso_local void @nodeUpdate(%struct.bNodeTree*, %struct.bNode*) #1

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @animdata_use_time(%struct.AnimData* %adt) #0 !dbg !13292 {
entry:
  %retval = alloca i16, align 2
  %adt.addr = alloca %struct.AnimData*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !13295, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !13297, metadata !DIExpression()), !dbg !13309
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13310
  %cmp = icmp eq %struct.AnimData* %0, null, !dbg !13312
  br i1 %cmp, label %if.then, label %if.end, !dbg !13313

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !13314
  br label %return, !dbg !13314

if.end:                                           ; preds = %entry
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13315
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %1, i32 0, i32 0, !dbg !13317
  %2 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !13317
  %tobool = icmp ne %struct.bAction* %2, null, !dbg !13315
  br i1 %tobool, label %land.lhs.true, label %if.end4, !dbg !13318

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13319
  %action1 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 0, !dbg !13320
  %4 = load %struct.bAction*, %struct.bAction** %action1, align 8, !dbg !13320
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %4, i32 0, i32 1, !dbg !13321
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !13322
  %5 = load i8*, i8** %first, align 8, !dbg !13322
  %tobool2 = icmp ne i8* %5, null, !dbg !13319
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13323

if.then3:                                         ; preds = %land.lhs.true
  store i16 1, i16* %retval, align 2, !dbg !13324
  br label %return, !dbg !13324

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13325
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 3, !dbg !13327
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !13328
  %7 = load i8*, i8** %first5, align 8, !dbg !13328
  %8 = bitcast i8* %7 to %struct.NlaTrack*, !dbg !13325
  store %struct.NlaTrack* %8, %struct.NlaTrack** %nlt, align 8, !dbg !13329
  br label %for.cond, !dbg !13330

for.cond:                                         ; preds = %for.inc, %if.end4
  %9 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !13331
  %tobool6 = icmp ne %struct.NlaTrack* %9, null, !dbg !13333
  br i1 %tobool6, label %for.body, label %for.end, !dbg !13333

for.body:                                         ; preds = %for.cond
  %10 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !13334
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %10, i32 0, i32 2, !dbg !13337
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strips, i32 0, i32 0, !dbg !13338
  %11 = load i8*, i8** %first7, align 8, !dbg !13338
  %tobool8 = icmp ne i8* %11, null, !dbg !13334
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13339

if.then9:                                         ; preds = %for.body
  store i16 1, i16* %retval, align 2, !dbg !13340
  br label %return, !dbg !13340

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !13341

for.inc:                                          ; preds = %if.end10
  %12 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !13342
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %12, i32 0, i32 0, !dbg !13343
  %13 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !13343
  store %struct.NlaTrack* %13, %struct.NlaTrack** %nlt, align 8, !dbg !13344
  br label %for.cond, !dbg !13345, !llvm.loop !13346

for.end:                                          ; preds = %for.cond
  %14 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13348
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %14, i32 0, i32 5, !dbg !13350
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !13351
  %15 = load i8*, i8** %first11, align 8, !dbg !13351
  %tobool12 = icmp ne i8* %15, null, !dbg !13348
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13352

if.then13:                                        ; preds = %for.end
  store i16 1, i16* %retval, align 2, !dbg !13353
  br label %return, !dbg !13353

if.end14:                                         ; preds = %for.end
  store i16 0, i16* %retval, align 2, !dbg !13354
  br label %return, !dbg !13354

return:                                           ; preds = %if.end14, %if.then13, %if.then9, %if.then3, %if.then
  %16 = load i16, i16* %retval, align 2, !dbg !13355
  ret i16 %16, !dbg !13355
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @object_modifiers_use_time(%struct.Object* %ob) #0 !dbg !13356 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %adt4 = alloca %struct.AnimData*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13359, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !13361, metadata !DIExpression()), !dbg !13362
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13363
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 26, !dbg !13365
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !13366
  %1 = load i8*, i8** %first, align 8, !dbg !13366
  %2 = bitcast i8* %1 to %struct.ModifierData*, !dbg !13363
  store %struct.ModifierData* %2, %struct.ModifierData** %md, align 8, !dbg !13367
  br label %for.cond, !dbg !13368

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !13369
  %tobool = icmp ne %struct.ModifierData* %3, null, !dbg !13371
  br i1 %tobool, label %for.body, label %for.end, !dbg !13371

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !13372
  %call = call zeroext i8 @modifier_dependsOnTime(%struct.ModifierData* %4), !dbg !13374
  %tobool1 = icmp ne i8 %call, 0, !dbg !13374
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13375

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !13376
  br label %return, !dbg !13376

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13377

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !13378
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %5, i32 0, i32 0, !dbg !13379
  %6 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !13379
  store %struct.ModifierData* %6, %struct.ModifierData** %md, align 8, !dbg !13380
  br label %for.cond, !dbg !13381, !llvm.loop !13382

for.end:                                          ; preds = %for.cond
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13384
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 1, !dbg !13386
  %8 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !13386
  %tobool2 = icmp ne %struct.AnimData* %8, null, !dbg !13384
  br i1 %tobool2, label %if.then3, label %if.end38, !dbg !13387

if.then3:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt4, metadata !13388, metadata !DIExpression()), !dbg !13390
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13391
  %adt5 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 1, !dbg !13392
  %10 = load %struct.AnimData*, %struct.AnimData** %adt5, align 8, !dbg !13392
  store %struct.AnimData* %10, %struct.AnimData** %adt4, align 8, !dbg !13390
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !13393, metadata !DIExpression()), !dbg !13394
  %11 = load %struct.AnimData*, %struct.AnimData** %adt4, align 8, !dbg !13395
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %11, i32 0, i32 0, !dbg !13397
  %12 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !13397
  %tobool6 = icmp ne %struct.bAction* %12, null, !dbg !13395
  br i1 %tobool6, label %if.then7, label %if.end22, !dbg !13398

if.then7:                                         ; preds = %if.then3
  %13 = load %struct.AnimData*, %struct.AnimData** %adt4, align 8, !dbg !13399
  %action8 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %13, i32 0, i32 0, !dbg !13402
  %14 = load %struct.bAction*, %struct.bAction** %action8, align 8, !dbg !13402
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %14, i32 0, i32 1, !dbg !13403
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !13404
  %15 = load i8*, i8** %first9, align 8, !dbg !13404
  %16 = bitcast i8* %15 to %struct.FCurve*, !dbg !13399
  store %struct.FCurve* %16, %struct.FCurve** %fcu, align 8, !dbg !13405
  br label %for.cond10, !dbg !13406

for.cond10:                                       ; preds = %for.inc19, %if.then7
  %17 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13407
  %tobool11 = icmp ne %struct.FCurve* %17, null, !dbg !13409
  br i1 %tobool11, label %for.body12, label %for.end21, !dbg !13409

for.body12:                                       ; preds = %for.cond10
  %18 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13410
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %18, i32 0, i32 12, !dbg !13413
  %19 = load i8*, i8** %rna_path, align 8, !dbg !13413
  %tobool13 = icmp ne i8* %19, null, !dbg !13410
  br i1 %tobool13, label %land.lhs.true, label %if.end18, !dbg !13414

land.lhs.true:                                    ; preds = %for.body12
  %20 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13415
  %rna_path14 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %20, i32 0, i32 12, !dbg !13416
  %21 = load i8*, i8** %rna_path14, align 8, !dbg !13416
  %call15 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #5, !dbg !13417
  %tobool16 = icmp ne i8* %call15, null, !dbg !13417
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !13418

if.then17:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !13419
  br label %return, !dbg !13419

if.end18:                                         ; preds = %land.lhs.true, %for.body12
  br label %for.inc19, !dbg !13420

for.inc19:                                        ; preds = %if.end18
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13421
  %next20 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %22, i32 0, i32 0, !dbg !13422
  %23 = load %struct.FCurve*, %struct.FCurve** %next20, align 8, !dbg !13422
  store %struct.FCurve* %23, %struct.FCurve** %fcu, align 8, !dbg !13423
  br label %for.cond10, !dbg !13424, !llvm.loop !13425

for.end21:                                        ; preds = %for.cond10
  br label %if.end22, !dbg !13427

if.end22:                                         ; preds = %for.end21, %if.then3
  %24 = load %struct.AnimData*, %struct.AnimData** %adt4, align 8, !dbg !13428
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %24, i32 0, i32 5, !dbg !13430
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !13431
  %25 = load i8*, i8** %first23, align 8, !dbg !13431
  %26 = bitcast i8* %25 to %struct.FCurve*, !dbg !13428
  store %struct.FCurve* %26, %struct.FCurve** %fcu, align 8, !dbg !13432
  br label %for.cond24, !dbg !13433

for.cond24:                                       ; preds = %for.inc35, %if.end22
  %27 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13434
  %tobool25 = icmp ne %struct.FCurve* %27, null, !dbg !13436
  br i1 %tobool25, label %for.body26, label %for.end37, !dbg !13436

for.body26:                                       ; preds = %for.cond24
  %28 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13437
  %rna_path27 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %28, i32 0, i32 12, !dbg !13440
  %29 = load i8*, i8** %rna_path27, align 8, !dbg !13440
  %tobool28 = icmp ne i8* %29, null, !dbg !13437
  br i1 %tobool28, label %land.lhs.true29, label %if.end34, !dbg !13441

land.lhs.true29:                                  ; preds = %for.body26
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13442
  %rna_path30 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %30, i32 0, i32 12, !dbg !13443
  %31 = load i8*, i8** %rna_path30, align 8, !dbg !13443
  %call31 = call i8* @strstr(i8* %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #5, !dbg !13444
  %tobool32 = icmp ne i8* %call31, null, !dbg !13444
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !13445

if.then33:                                        ; preds = %land.lhs.true29
  store i32 1, i32* %retval, align 4, !dbg !13446
  br label %return, !dbg !13446

if.end34:                                         ; preds = %land.lhs.true29, %for.body26
  br label %for.inc35, !dbg !13447

for.inc35:                                        ; preds = %if.end34
  %32 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13448
  %next36 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %32, i32 0, i32 0, !dbg !13449
  %33 = load %struct.FCurve*, %struct.FCurve** %next36, align 8, !dbg !13449
  store %struct.FCurve* %33, %struct.FCurve** %fcu, align 8, !dbg !13450
  br label %for.cond24, !dbg !13451, !llvm.loop !13452

for.end37:                                        ; preds = %for.cond24
  br label %if.end38, !dbg !13454

if.end38:                                         ; preds = %for.end37, %for.end
  store i32 0, i32* %retval, align 4, !dbg !13455
  br label %return, !dbg !13455

return:                                           ; preds = %if.end38, %if.then33, %if.then17, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !13456
  ret i32 %34, !dbg !13456
}

declare dso_local zeroext i8 @BKE_scene_check_rigidbody_active(%struct.Scene*) #1

declare dso_local zeroext i8 @BKE_image_is_animated(%struct.Image*) #1

declare dso_local zeroext i8 @modifier_dependsOnTime(%struct.ModifierData*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_invisible_dependencies_flush(%struct.Scene* %scene) #0 !dbg !13457 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %root_node = alloca %struct.DagNode*, align 8
  %node = alloca %struct.DagNode*, align 8
  %queue = alloca %struct.DagNodeQueue*, align 8
  %current_node = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  %skip = alloca i8, align 1
  %current_object = alloca %struct.Object*, align 8
  %object = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.declare(metadata %struct.DagNode** %root_node, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13462
  %theDag = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 31, !dbg !13463
  %1 = load %struct.DagForest*, %struct.DagForest** %theDag, align 8, !dbg !13463
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %1, i32 0, i32 0, !dbg !13464
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !13465
  %2 = load i8*, i8** %first, align 8, !dbg !13465
  %3 = bitcast i8* %2 to %struct.DagNode*, !dbg !13462
  store %struct.DagNode* %3, %struct.DagNode** %root_node, align 8, !dbg !13461
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !13466, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.declare(metadata %struct.DagNodeQueue** %queue, metadata !13468, metadata !DIExpression()), !dbg !13469
  %4 = load %struct.DagNode*, %struct.DagNode** %root_node, align 8, !dbg !13470
  store %struct.DagNode* %4, %struct.DagNode** %node, align 8, !dbg !13472
  br label %for.cond, !dbg !13473

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13474
  %cmp = icmp ne %struct.DagNode* %5, null, !dbg !13476
  br i1 %cmp, label %for.body, label %for.end, !dbg !13477

for.body:                                         ; preds = %for.cond
  %6 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13478
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %6, i32 0, i32 0, !dbg !13480
  store i32 0, i32* %color, align 8, !dbg !13481
  br label %for.inc, !dbg !13482

for.inc:                                          ; preds = %for.body
  %7 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13483
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %7, i32 0, i32 18, !dbg !13484
  %8 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !13484
  store %struct.DagNode* %8, %struct.DagNode** %node, align 8, !dbg !13485
  br label %for.cond, !dbg !13486, !llvm.loop !13487

for.end:                                          ; preds = %for.cond
  %call = call %struct.DagNodeQueue* @queue_create(i32 50), !dbg !13489
  store %struct.DagNodeQueue* %call, %struct.DagNodeQueue** %queue, align 8, !dbg !13490
  %9 = load %struct.DagNode*, %struct.DagNode** %root_node, align 8, !dbg !13491
  store %struct.DagNode* %9, %struct.DagNode** %node, align 8, !dbg !13493
  br label %for.cond1, !dbg !13494

for.cond1:                                        ; preds = %for.inc57, %for.end
  %10 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13495
  %cmp2 = icmp ne %struct.DagNode* %10, null, !dbg !13497
  br i1 %cmp2, label %for.body3, label %for.end59, !dbg !13498

for.body3:                                        ; preds = %for.cond1
  %11 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13499
  %color4 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %11, i32 0, i32 0, !dbg !13502
  %12 = load i32, i32* %color4, align 8, !dbg !13502
  %cmp5 = icmp eq i32 %12, 0, !dbg !13503
  br i1 %cmp5, label %if.then, label %if.end56, !dbg !13504

if.then:                                          ; preds = %for.body3
  %13 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13505
  %14 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13507
  call void @push_stack(%struct.DagNodeQueue* %13, %struct.DagNode* %14), !dbg !13508
  %15 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13509
  %color6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %15, i32 0, i32 0, !dbg !13510
  store i32 1, i32* %color6, align 8, !dbg !13511
  br label %while.cond, !dbg !13512

while.cond:                                       ; preds = %if.end55, %if.then
  %16 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13513
  %count = getelementptr inbounds %struct.DagNodeQueue, %struct.DagNodeQueue* %16, i32 0, i32 2, !dbg !13514
  %17 = load i32, i32* %count, align 8, !dbg !13514
  %tobool = icmp ne i32 %17, 0, !dbg !13512
  br i1 %tobool, label %while.body, label %while.end, !dbg !13512

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.DagNode** %current_node, metadata !13515, metadata !DIExpression()), !dbg !13517
  %18 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13518
  %call7 = call %struct.DagNode* @get_top_node_queue(%struct.DagNodeQueue* %18), !dbg !13519
  store %struct.DagNode* %call7, %struct.DagNode** %current_node, align 8, !dbg !13517
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !13520, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.declare(metadata i8* %skip, metadata !13522, metadata !DIExpression()), !dbg !13523
  store i8 0, i8* %skip, align 1, !dbg !13523
  %19 = load %struct.DagNode*, %struct.DagNode** %current_node, align 8, !dbg !13524
  %child = getelementptr inbounds %struct.DagNode, %struct.DagNode* %19, i32 0, i32 16, !dbg !13526
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %child, align 8, !dbg !13526
  store %struct.DagAdjList* %20, %struct.DagAdjList** %itA, align 8, !dbg !13527
  br label %for.cond8, !dbg !13528

for.cond8:                                        ; preds = %for.inc18, %while.body
  %21 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13529
  %tobool9 = icmp ne %struct.DagAdjList* %21, null, !dbg !13531
  br i1 %tobool9, label %for.body10, label %for.end20, !dbg !13531

for.body10:                                       ; preds = %for.cond8
  %22 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13532
  %node11 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %22, i32 0, i32 0, !dbg !13535
  %23 = load %struct.DagNode*, %struct.DagNode** %node11, align 8, !dbg !13535
  %color12 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %23, i32 0, i32 0, !dbg !13536
  %24 = load i32, i32* %color12, align 8, !dbg !13536
  %cmp13 = icmp eq i32 %24, 0, !dbg !13537
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !13538

if.then14:                                        ; preds = %for.body10
  %25 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13539
  %node15 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %25, i32 0, i32 0, !dbg !13541
  %26 = load %struct.DagNode*, %struct.DagNode** %node15, align 8, !dbg !13541
  %color16 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %26, i32 0, i32 0, !dbg !13542
  store i32 1, i32* %color16, align 8, !dbg !13543
  %27 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13544
  %28 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13545
  %node17 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %28, i32 0, i32 0, !dbg !13546
  %29 = load %struct.DagNode*, %struct.DagNode** %node17, align 8, !dbg !13546
  call void @push_stack(%struct.DagNodeQueue* %27, %struct.DagNode* %29), !dbg !13547
  store i8 1, i8* %skip, align 1, !dbg !13548
  br label %for.end20, !dbg !13549

if.end:                                           ; preds = %for.body10
  br label %for.inc18, !dbg !13550

for.inc18:                                        ; preds = %if.end
  %30 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13551
  %next19 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %30, i32 0, i32 5, !dbg !13552
  %31 = load %struct.DagAdjList*, %struct.DagAdjList** %next19, align 8, !dbg !13552
  store %struct.DagAdjList* %31, %struct.DagAdjList** %itA, align 8, !dbg !13553
  br label %for.cond8, !dbg !13554, !llvm.loop !13555

for.end20:                                        ; preds = %if.then14, %for.cond8
  %32 = load i8, i8* %skip, align 1, !dbg !13557
  %tobool21 = icmp ne i8 %32, 0, !dbg !13557
  br i1 %tobool21, label %if.end55, label %if.then22, !dbg !13559

if.then22:                                        ; preds = %for.end20
  %33 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13560
  %call23 = call %struct.DagNode* @pop_queue(%struct.DagNodeQueue* %33), !dbg !13562
  store %struct.DagNode* %call23, %struct.DagNode** %current_node, align 8, !dbg !13563
  %34 = load %struct.DagNode*, %struct.DagNode** %current_node, align 8, !dbg !13564
  %type = getelementptr inbounds %struct.DagNode, %struct.DagNode* %34, i32 0, i32 1, !dbg !13566
  %35 = load i16, i16* %type, align 4, !dbg !13566
  %conv = sext i16 %35 to i32, !dbg !13564
  %cmp24 = icmp eq i32 %conv, 16975, !dbg !13567
  br i1 %cmp24, label %if.then26, label %if.end53, !dbg !13568

if.then26:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.Object** %current_object, metadata !13569, metadata !DIExpression()), !dbg !13571
  %36 = load %struct.DagNode*, %struct.DagNode** %current_node, align 8, !dbg !13572
  %ob = getelementptr inbounds %struct.DagNode, %struct.DagNode* %36, i32 0, i32 5, !dbg !13573
  %37 = load i8*, i8** %ob, align 8, !dbg !13573
  %38 = bitcast i8* %37 to %struct.Object*, !dbg !13572
  store %struct.Object* %38, %struct.Object** %current_object, align 8, !dbg !13571
  %39 = load %struct.Object*, %struct.Object** %current_object, align 8, !dbg !13574
  %call27 = call zeroext i8 @check_object_needs_evaluation(%struct.Object* %39), !dbg !13576
  %tobool28 = icmp ne i8 %call27, 0, !dbg !13576
  br i1 %tobool28, label %if.then29, label %if.end52, !dbg !13577

if.then29:                                        ; preds = %if.then26
  %40 = load %struct.DagNode*, %struct.DagNode** %current_node, align 8, !dbg !13578
  %child30 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %40, i32 0, i32 16, !dbg !13581
  %41 = load %struct.DagAdjList*, %struct.DagAdjList** %child30, align 8, !dbg !13581
  store %struct.DagAdjList* %41, %struct.DagAdjList** %itA, align 8, !dbg !13582
  br label %for.cond31, !dbg !13583

for.cond31:                                       ; preds = %for.inc49, %if.then29
  %42 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13584
  %tobool32 = icmp ne %struct.DagAdjList* %42, null, !dbg !13586
  br i1 %tobool32, label %for.body33, label %for.end51, !dbg !13586

for.body33:                                       ; preds = %for.cond31
  %43 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13587
  %node34 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %43, i32 0, i32 0, !dbg !13590
  %44 = load %struct.DagNode*, %struct.DagNode** %node34, align 8, !dbg !13590
  %type35 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %44, i32 0, i32 1, !dbg !13591
  %45 = load i16, i16* %type35, align 4, !dbg !13591
  %conv36 = sext i16 %45 to i32, !dbg !13587
  %cmp37 = icmp eq i32 %conv36, 16975, !dbg !13592
  br i1 %cmp37, label %if.then39, label %if.end48, !dbg !13593

if.then39:                                        ; preds = %for.body33
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !13594, metadata !DIExpression()), !dbg !13596
  %46 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13597
  %node40 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %46, i32 0, i32 0, !dbg !13598
  %47 = load %struct.DagNode*, %struct.DagNode** %node40, align 8, !dbg !13598
  %ob41 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %47, i32 0, i32 5, !dbg !13599
  %48 = load i8*, i8** %ob41, align 8, !dbg !13599
  %49 = bitcast i8* %48 to %struct.Object*, !dbg !13597
  store %struct.Object* %49, %struct.Object** %object, align 8, !dbg !13596
  %50 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13600
  %call42 = call zeroext i8 @check_object_tagged_for_update(%struct.Object* %50), !dbg !13602
  %tobool43 = icmp ne i8 %call42, 0, !dbg !13602
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !13603

if.then44:                                        ; preds = %if.then39
  %51 = load %struct.Object*, %struct.Object** %current_object, align 8, !dbg !13604
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 103, !dbg !13606
  %52 = load i8, i8* %recalc, align 1, !dbg !13607
  %conv45 = zext i8 %52 to i32, !dbg !13607
  %or = or i32 %conv45, 3, !dbg !13607
  %conv46 = trunc i32 %or to i8, !dbg !13607
  store i8 %conv46, i8* %recalc, align 1, !dbg !13607
  br label %if.end47, !dbg !13608

if.end47:                                         ; preds = %if.then44, %if.then39
  br label %if.end48, !dbg !13609

if.end48:                                         ; preds = %if.end47, %for.body33
  br label %for.inc49, !dbg !13610

for.inc49:                                        ; preds = %if.end48
  %53 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13611
  %next50 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %53, i32 0, i32 5, !dbg !13612
  %54 = load %struct.DagAdjList*, %struct.DagAdjList** %next50, align 8, !dbg !13612
  store %struct.DagAdjList* %54, %struct.DagAdjList** %itA, align 8, !dbg !13613
  br label %for.cond31, !dbg !13614, !llvm.loop !13615

for.end51:                                        ; preds = %for.cond31
  br label %if.end52, !dbg !13617

if.end52:                                         ; preds = %for.end51, %if.then26
  br label %if.end53, !dbg !13618

if.end53:                                         ; preds = %if.end52, %if.then22
  %55 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13619
  %color54 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %55, i32 0, i32 0, !dbg !13620
  store i32 2, i32* %color54, align 8, !dbg !13621
  br label %if.end55, !dbg !13622

if.end55:                                         ; preds = %if.end53, %for.end20
  br label %while.cond, !dbg !13512, !llvm.loop !13623

while.end:                                        ; preds = %while.cond
  br label %if.end56, !dbg !13625

if.end56:                                         ; preds = %while.end, %for.body3
  br label %for.inc57, !dbg !13626

for.inc57:                                        ; preds = %if.end56
  %56 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13627
  %next58 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %56, i32 0, i32 18, !dbg !13628
  %57 = load %struct.DagNode*, %struct.DagNode** %next58, align 8, !dbg !13628
  store %struct.DagNode* %57, %struct.DagNode** %node, align 8, !dbg !13629
  br label %for.cond1, !dbg !13630, !llvm.loop !13631

for.end59:                                        ; preds = %for.cond1
  %58 = load %struct.DagNodeQueue*, %struct.DagNodeQueue** %queue, align 8, !dbg !13633
  call void @queue_delete(%struct.DagNodeQueue* %58), !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_object_needs_evaluation(%struct.Object* %object) #0 !dbg !13636 {
entry:
  %retval = alloca i8, align 1
  %object.addr = alloca %struct.Object*, align 8
  store %struct.Object* %object, %struct.Object** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %object.addr, metadata !13639, metadata !DIExpression()), !dbg !13640
  %0 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13641
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 103, !dbg !13643
  %1 = load i8, i8* %recalc, align 1, !dbg !13643
  %conv = zext i8 %1 to i32, !dbg !13641
  %and = and i32 %conv, 7, !dbg !13644
  %tobool = icmp ne i32 %and, 0, !dbg !13644
  br i1 %tobool, label %if.then, label %if.end, !dbg !13645

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13646
  br label %return, !dbg !13646

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13648
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !13650
  %3 = load i16, i16* %type, align 8, !dbg !13650
  %conv1 = sext i16 %3 to i32, !dbg !13648
  %cmp = icmp eq i32 %conv1, 1, !dbg !13651
  br i1 %cmp, label %if.then3, label %if.else, !dbg !13652

if.then3:                                         ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13653
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 120, !dbg !13655
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !13655
  %cmp4 = icmp eq %struct.DerivedMesh* %5, null, !dbg !13656
  %conv5 = zext i1 %cmp4 to i32, !dbg !13656
  %conv6 = trunc i32 %conv5 to i8, !dbg !13653
  store i8 %conv6, i8* %retval, align 1, !dbg !13657
  br label %return, !dbg !13657

if.else:                                          ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13658
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !13658
  %7 = load i16, i16* %type7, align 8, !dbg !13658
  %conv8 = sext i16 %7 to i32, !dbg !13658
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !13658
  br i1 %cmp9, label %if.then30, label %lor.lhs.false, !dbg !13658

lor.lhs.false:                                    ; preds = %if.else
  %8 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13658
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !13658
  %9 = load i16, i16* %type11, align 8, !dbg !13658
  %conv12 = sext i16 %9 to i32, !dbg !13658
  %cmp13 = icmp eq i32 %conv12, 3, !dbg !13658
  br i1 %cmp13, label %if.then30, label %lor.lhs.false15, !dbg !13658

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13658
  %type16 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !13658
  %11 = load i16, i16* %type16, align 8, !dbg !13658
  %conv17 = sext i16 %11 to i32, !dbg !13658
  %cmp18 = icmp eq i32 %conv17, 4, !dbg !13658
  br i1 %cmp18, label %if.then30, label %lor.lhs.false20, !dbg !13658

lor.lhs.false20:                                  ; preds = %lor.lhs.false15
  %12 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13658
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !13658
  %13 = load i16, i16* %type21, align 8, !dbg !13658
  %conv22 = sext i16 %13 to i32, !dbg !13658
  %cmp23 = icmp eq i32 %conv22, 5, !dbg !13658
  br i1 %cmp23, label %if.then30, label %lor.lhs.false25, !dbg !13658

lor.lhs.false25:                                  ; preds = %lor.lhs.false20
  %14 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13658
  %type26 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 3, !dbg !13658
  %15 = load i16, i16* %type26, align 8, !dbg !13658
  %conv27 = sext i16 %15 to i32, !dbg !13658
  %cmp28 = icmp eq i32 %conv27, 22, !dbg !13658
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !13660

if.then30:                                        ; preds = %lor.lhs.false25, %lor.lhs.false20, %lor.lhs.false15, %lor.lhs.false, %if.else
  %16 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13661
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 118, !dbg !13663
  %17 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !13663
  %cmp31 = icmp eq %struct.CurveCache* %17, null, !dbg !13664
  %conv32 = zext i1 %cmp31 to i32, !dbg !13664
  %conv33 = trunc i32 %conv32 to i8, !dbg !13661
  store i8 %conv33, i8* %retval, align 1, !dbg !13665
  br label %return, !dbg !13665

if.end34:                                         ; preds = %lor.lhs.false25
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  store i8 0, i8* %retval, align 1, !dbg !13666
  br label %return, !dbg !13666

return:                                           ; preds = %if.end35, %if.then30, %if.then3, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !13667
  ret i8 %18, !dbg !13667
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_object_tagged_for_update(%struct.Object* %object) #0 !dbg !13668 {
entry:
  %retval = alloca i8, align 1
  %object.addr = alloca %struct.Object*, align 8
  %data_id = alloca %struct.ID*, align 8
  store %struct.Object* %object, %struct.Object** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %object.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  %0 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13671
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 103, !dbg !13673
  %1 = load i8, i8* %recalc, align 1, !dbg !13673
  %conv = zext i8 %1 to i32, !dbg !13671
  %and = and i32 %conv, 7, !dbg !13674
  %tobool = icmp ne i32 %and, 0, !dbg !13674
  br i1 %tobool, label %if.then, label %if.end, !dbg !13675

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !13676
  br label %return, !dbg !13676

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !13678
  %3 = load i16, i16* %type, align 8, !dbg !13678
  %conv1 = sext i16 %3 to i32, !dbg !13678
  %cmp = icmp eq i32 %conv1, 1, !dbg !13678
  br i1 %cmp, label %if.then27, label %lor.lhs.false, !dbg !13678

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !13678
  %5 = load i16, i16* %type3, align 8, !dbg !13678
  %conv4 = sext i16 %5 to i32, !dbg !13678
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !13678
  br i1 %cmp5, label %if.then27, label %lor.lhs.false7, !dbg !13678

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %6 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type8 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !13678
  %7 = load i16, i16* %type8, align 8, !dbg !13678
  %conv9 = sext i16 %7 to i32, !dbg !13678
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !13678
  br i1 %cmp10, label %if.then27, label %lor.lhs.false12, !dbg !13678

lor.lhs.false12:                                  ; preds = %lor.lhs.false7
  %8 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type13 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !13678
  %9 = load i16, i16* %type13, align 8, !dbg !13678
  %conv14 = sext i16 %9 to i32, !dbg !13678
  %cmp15 = icmp eq i32 %conv14, 4, !dbg !13678
  br i1 %cmp15, label %if.then27, label %lor.lhs.false17, !dbg !13678

lor.lhs.false17:                                  ; preds = %lor.lhs.false12
  %10 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type18 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !13678
  %11 = load i16, i16* %type18, align 8, !dbg !13678
  %conv19 = sext i16 %11 to i32, !dbg !13678
  %cmp20 = icmp eq i32 %conv19, 5, !dbg !13678
  br i1 %cmp20, label %if.then27, label %lor.lhs.false22, !dbg !13678

lor.lhs.false22:                                  ; preds = %lor.lhs.false17
  %12 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13678
  %type23 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !13678
  %13 = load i16, i16* %type23, align 8, !dbg !13678
  %conv24 = sext i16 %13 to i32, !dbg !13678
  %cmp25 = icmp eq i32 %conv24, 22, !dbg !13678
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !13680

if.then27:                                        ; preds = %lor.lhs.false22, %lor.lhs.false17, %lor.lhs.false12, %lor.lhs.false7, %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.ID** %data_id, metadata !13681, metadata !DIExpression()), !dbg !13683
  %14 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !13684
  %data = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !13685
  %15 = load i8*, i8** %data, align 8, !dbg !13685
  %16 = bitcast i8* %15 to %struct.ID*, !dbg !13684
  store %struct.ID* %16, %struct.ID** %data_id, align 8, !dbg !13683
  %17 = load %struct.ID*, %struct.ID** %data_id, align 8, !dbg !13686
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %17, i32 0, i32 5, !dbg !13687
  %18 = load i16, i16* %flag, align 2, !dbg !13687
  %conv28 = sext i16 %18 to i32, !dbg !13686
  %and29 = and i32 %conv28, 12288, !dbg !13688
  %cmp30 = icmp ne i32 %and29, 0, !dbg !13689
  %conv31 = zext i1 %cmp30 to i32, !dbg !13689
  %conv32 = trunc i32 %conv31 to i8, !dbg !13690
  store i8 %conv32, i8* %retval, align 1, !dbg !13691
  br label %return, !dbg !13691

if.end33:                                         ; preds = %lor.lhs.false22
  store i8 0, i8* %retval, align 1, !dbg !13692
  br label %return, !dbg !13692

return:                                           ; preds = %if.end33, %if.then27, %if.then
  %19 = load i8, i8* %retval, align 1, !dbg !13693
  ret i8 %19, !dbg !13693
}

declare dso_local void @BKE_main_id_flag_listbase(%struct.ListBase*, i16 signext, i8 zeroext) #1

declare dso_local i32 @BKE_screen_visible_layers(%struct.bScreen*, %struct.Scene*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_editors_id_update(%struct.Main* %bmain, %struct.ID* %id) #0 !dbg !13694 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !13695, metadata !DIExpression()), !dbg !13696
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !13697, metadata !DIExpression()), !dbg !13698
  %0 = load void (%struct.Main*, %struct.ID*)*, void (%struct.Main*, %struct.ID*)** @EditorsUpdateIDCb, align 8, !dbg !13699
  %tobool = icmp ne void (%struct.Main*, %struct.ID*)* %0, null, !dbg !13699
  br i1 %tobool, label %if.then, label %if.end, !dbg !13701

if.then:                                          ; preds = %entry
  %1 = load void (%struct.Main*, %struct.ID*)*, void (%struct.Main*, %struct.ID*)** @EditorsUpdateIDCb, align 8, !dbg !13702
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !13703
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !13704
  call void %1(%struct.Main* %2, %struct.ID* %3), !dbg !13702
  br label %if.end, !dbg !13702

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13705
}

declare dso_local void @modifiers_foreachIDLink(%struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_id_flush_update__isDependentTexture(i8* %userData, %struct.Object* %UNUSED_ob, %struct.ID** %idpoin) #0 !dbg !13706 {
entry:
  %userData.addr = alloca i8*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  %data = alloca %struct.anon.1*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !13710, metadata !DIExpression()), !dbg !13711
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.declare(metadata %struct.anon.1** %data, metadata !13716, metadata !DIExpression()), !dbg !13722
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !13723
  %1 = bitcast i8* %0 to %struct.anon.1*, !dbg !13723
  store %struct.anon.1* %1, %struct.anon.1** %data, align 8, !dbg !13722
  %2 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !13724
  %3 = load %struct.ID*, %struct.ID** %2, align 8, !dbg !13726
  %tobool = icmp ne %struct.ID* %3, null, !dbg !13726
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !13727

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !13728
  %5 = load %struct.ID*, %struct.ID** %4, align 8, !dbg !13728
  %name = getelementptr inbounds %struct.ID, %struct.ID* %5, i32 0, i32 4, !dbg !13728
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !13728
  %6 = bitcast i8* %arraydecay to i16*, !dbg !13728
  %7 = load i16, i16* %6, align 8, !dbg !13728
  %conv = sext i16 %7 to i32, !dbg !13728
  %cmp = icmp eq i32 %conv, 17748, !dbg !13729
  br i1 %cmp, label %if.then, label %if.end5, !dbg !13730

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !13731
  %id = getelementptr inbounds %struct.anon.1, %struct.anon.1* %8, i32 0, i32 0, !dbg !13734
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !13734
  %10 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !13735
  %11 = load %struct.ID*, %struct.ID** %10, align 8, !dbg !13736
  %cmp2 = icmp eq %struct.ID* %9, %11, !dbg !13737
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !13738

if.then4:                                         ; preds = %if.then
  %12 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !13739
  %is_dependent = getelementptr inbounds %struct.anon.1, %struct.anon.1* %12, i32 0, i32 1, !dbg !13740
  store i8 1, i8* %is_dependent, align 8, !dbg !13741
  br label %if.end, !dbg !13739

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !13742

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !13743
}

declare dso_local void @BKE_texpaint_slots_refresh_object(%struct.Scene*, %struct.Object*) #1

declare dso_local zeroext i8 @BKE_paint_proj_mesh_data_check(%struct.Scene*, %struct.Object*, i8*, i8*, i8*, i8*) #1

declare dso_local void @GPU_drawobject_free(%struct.DerivedMesh*) #1

declare dso_local void @BKE_tracking_dopesheet_tag_update(%struct.MovieTracking*) #1

declare dso_local void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore*, %struct.Main*) #1

declare dso_local zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore*, %struct.bNodeTree**, %struct.ID**) #1

declare dso_local %struct.MovieClip* @BKE_object_movieclip_get(%struct.Scene*, %struct.Object*, i8 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dag_node_print_dependencies(%struct.DagForest* %dag, %struct.DagNode* %node) #0 !dbg !13744 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !13751, metadata !DIExpression()), !dbg !13752
  %0 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13753
  %1 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13754
  %call = call i8* @dag_node_name(%struct.DagForest* %0, %struct.DagNode* %1), !dbg !13755
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0), i8* %call), !dbg !13756
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13757
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 17, !dbg !13759
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !13759
  store %struct.DagAdjList* %3, %struct.DagAdjList** %itA, align 8, !dbg !13760
  br label %for.cond, !dbg !13761

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13762
  %tobool = icmp ne %struct.DagAdjList* %4, null, !dbg !13764
  br i1 %tobool, label %for.body, label %for.end, !dbg !13764

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13765
  %6 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13766
  %node2 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %6, i32 0, i32 0, !dbg !13767
  %7 = load %struct.DagNode*, %struct.DagNode** %node2, align 8, !dbg !13767
  %call3 = call i8* @dag_node_name(%struct.DagForest* %5, %struct.DagNode* %7), !dbg !13768
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13769
  %name = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 4, !dbg !13770
  %9 = load i8*, i8** %name, align 8, !dbg !13770
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0), i8* %call3, i8* %9), !dbg !13771
  br label %for.inc, !dbg !13771

for.inc:                                          ; preds = %for.body
  %10 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13772
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %10, i32 0, i32 5, !dbg !13773
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !13773
  store %struct.DagAdjList* %11, %struct.DagAdjList** %itA, align 8, !dbg !13774
  br label %for.cond, !dbg !13775, !llvm.loop !13776

for.end:                                          ; preds = %for.cond
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !13778
  ret void, !dbg !13779
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dag_node_recurs_level(%struct.DagNode* %node, i32 %level) #0 !dbg !13780 {
entry:
  %node.addr = alloca %struct.DagNode*, align 8
  %level.addr = alloca i32, align 4
  %itA = alloca %struct.DagAdjList*, align 8
  %newlevel = alloca i32, align 4
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !13783, metadata !DIExpression()), !dbg !13784
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !13785, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !13787, metadata !DIExpression()), !dbg !13788
  call void @llvm.dbg.declare(metadata i32* %newlevel, metadata !13789, metadata !DIExpression()), !dbg !13790
  %0 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13791
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %0, i32 0, i32 0, !dbg !13792
  store i32 2, i32* %color, align 8, !dbg !13793
  %1 = load i32, i32* %level.addr, align 4, !dbg !13794
  %inc = add nsw i32 %1, 1, !dbg !13794
  store i32 %inc, i32* %level.addr, align 4, !dbg !13794
  store i32 %inc, i32* %newlevel, align 4, !dbg !13795
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13796
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 17, !dbg !13798
  %3 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !13798
  store %struct.DagAdjList* %3, %struct.DagAdjList** %itA, align 8, !dbg !13799
  br label %for.cond, !dbg !13800

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13801
  %tobool = icmp ne %struct.DagAdjList* %4, null, !dbg !13803
  br i1 %tobool, label %for.body, label %for.end, !dbg !13803

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13804
  %node1 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %5, i32 0, i32 0, !dbg !13807
  %6 = load %struct.DagNode*, %struct.DagNode** %node1, align 8, !dbg !13807
  %color2 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %6, i32 0, i32 0, !dbg !13808
  %7 = load i32, i32* %color2, align 8, !dbg !13808
  %cmp = icmp eq i32 %7, 0, !dbg !13809
  br i1 %cmp, label %if.then, label %if.else, !dbg !13810

if.then:                                          ; preds = %for.body
  %8 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13811
  %node3 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %8, i32 0, i32 0, !dbg !13813
  %9 = load %struct.DagNode*, %struct.DagNode** %node3, align 8, !dbg !13813
  %10 = load i32, i32* %level.addr, align 4, !dbg !13814
  %call = call i32 @dag_node_recurs_level(%struct.DagNode* %9, i32 %10), !dbg !13815
  %11 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13816
  %node4 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %11, i32 0, i32 0, !dbg !13817
  %12 = load %struct.DagNode*, %struct.DagNode** %node4, align 8, !dbg !13817
  %ancestor_count = getelementptr inbounds %struct.DagNode, %struct.DagNode* %12, i32 0, i32 7, !dbg !13818
  store i32 %call, i32* %ancestor_count, align 8, !dbg !13819
  %13 = load i32, i32* %newlevel, align 4, !dbg !13820
  %14 = load i32, i32* %level.addr, align 4, !dbg !13820
  %15 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13820
  %node5 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %15, i32 0, i32 0, !dbg !13820
  %16 = load %struct.DagNode*, %struct.DagNode** %node5, align 8, !dbg !13820
  %ancestor_count6 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %16, i32 0, i32 7, !dbg !13820
  %17 = load i32, i32* %ancestor_count6, align 8, !dbg !13820
  %add = add nsw i32 %14, %17, !dbg !13820
  %cmp7 = icmp sgt i32 %13, %add, !dbg !13820
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !13820

cond.true:                                        ; preds = %if.then
  %18 = load i32, i32* %newlevel, align 4, !dbg !13820
  br label %cond.end, !dbg !13820

cond.false:                                       ; preds = %if.then
  %19 = load i32, i32* %level.addr, align 4, !dbg !13820
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13820
  %node8 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %20, i32 0, i32 0, !dbg !13820
  %21 = load %struct.DagNode*, %struct.DagNode** %node8, align 8, !dbg !13820
  %ancestor_count9 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %21, i32 0, i32 7, !dbg !13820
  %22 = load i32, i32* %ancestor_count9, align 8, !dbg !13820
  %add10 = add nsw i32 %19, %22, !dbg !13820
  br label %cond.end, !dbg !13820

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %add10, %cond.false ], !dbg !13820
  store i32 %cond, i32* %newlevel, align 4, !dbg !13821
  br label %if.end, !dbg !13822

if.else:                                          ; preds = %for.body
  %23 = load i32, i32* %newlevel, align 4, !dbg !13823
  %24 = load i32, i32* %level.addr, align 4, !dbg !13823
  %25 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13823
  %node11 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %25, i32 0, i32 0, !dbg !13823
  %26 = load %struct.DagNode*, %struct.DagNode** %node11, align 8, !dbg !13823
  %ancestor_count12 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %26, i32 0, i32 7, !dbg !13823
  %27 = load i32, i32* %ancestor_count12, align 8, !dbg !13823
  %add13 = add nsw i32 %24, %27, !dbg !13823
  %cmp14 = icmp sgt i32 %23, %add13, !dbg !13823
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !13823

cond.true15:                                      ; preds = %if.else
  %28 = load i32, i32* %newlevel, align 4, !dbg !13823
  br label %cond.end20, !dbg !13823

cond.false16:                                     ; preds = %if.else
  %29 = load i32, i32* %level.addr, align 4, !dbg !13823
  %30 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13823
  %node17 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %30, i32 0, i32 0, !dbg !13823
  %31 = load %struct.DagNode*, %struct.DagNode** %node17, align 8, !dbg !13823
  %ancestor_count18 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %31, i32 0, i32 7, !dbg !13823
  %32 = load i32, i32* %ancestor_count18, align 8, !dbg !13823
  %add19 = add nsw i32 %29, %32, !dbg !13823
  br label %cond.end20, !dbg !13823

cond.end20:                                       ; preds = %cond.false16, %cond.true15
  %cond21 = phi i32 [ %28, %cond.true15 ], [ %add19, %cond.false16 ], !dbg !13823
  store i32 %cond21, i32* %newlevel, align 4, !dbg !13824
  br label %if.end

if.end:                                           ; preds = %cond.end20, %cond.end
  br label %for.inc, !dbg !13825

for.inc:                                          ; preds = %if.end
  %33 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13826
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %33, i32 0, i32 5, !dbg !13827
  %34 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !13827
  store %struct.DagAdjList* %34, %struct.DagAdjList** %itA, align 8, !dbg !13828
  br label %for.cond, !dbg !13829, !llvm.loop !13830

for.end:                                          ; preds = %for.cond
  %35 = load i32, i32* %newlevel, align 4, !dbg !13832
  ret i32 %35, !dbg !13833
}

; Function Attrs: noinline nounwind uwtable
define internal void @dag_node_print_dependency_cycle(%struct.DagForest* %dag, %struct.DagNode* %startnode, %struct.DagNode* %endnode, i8* %name) #0 !dbg !13834 {
entry:
  %dag.addr = alloca %struct.DagForest*, align 8
  %startnode.addr = alloca %struct.DagNode*, align 8
  %endnode.addr = alloca %struct.DagNode*, align 8
  %name.addr = alloca i8*, align 8
  %node = alloca %struct.DagNode*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !13837, metadata !DIExpression()), !dbg !13838
  store %struct.DagNode* %startnode, %struct.DagNode** %startnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %startnode.addr, metadata !13839, metadata !DIExpression()), !dbg !13840
  store %struct.DagNode* %endnode, %struct.DagNode** %endnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %endnode.addr, metadata !13841, metadata !DIExpression()), !dbg !13842
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13843, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node, metadata !13845, metadata !DIExpression()), !dbg !13846
  %0 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13847
  %DagNode = getelementptr inbounds %struct.DagForest, %struct.DagForest* %0, i32 0, i32 0, !dbg !13849
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %DagNode, i32 0, i32 0, !dbg !13850
  %1 = load i8*, i8** %first, align 8, !dbg !13850
  %2 = bitcast i8* %1 to %struct.DagNode*, !dbg !13847
  store %struct.DagNode* %2, %struct.DagNode** %node, align 8, !dbg !13851
  br label %for.cond, !dbg !13852

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13853
  %tobool = icmp ne %struct.DagNode* %3, null, !dbg !13855
  br i1 %tobool, label %for.body, label %for.end, !dbg !13855

for.body:                                         ; preds = %for.cond
  %4 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13856
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %4, i32 0, i32 0, !dbg !13857
  store i32 0, i32* %color, align 8, !dbg !13858
  br label %for.inc, !dbg !13856

for.inc:                                          ; preds = %for.body
  %5 = load %struct.DagNode*, %struct.DagNode** %node, align 8, !dbg !13859
  %next = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 18, !dbg !13860
  %6 = load %struct.DagNode*, %struct.DagNode** %next, align 8, !dbg !13860
  store %struct.DagNode* %6, %struct.DagNode** %node, align 8, !dbg !13861
  br label %for.cond, !dbg !13862, !llvm.loop !13863

for.end:                                          ; preds = %for.cond
  %7 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13865
  %8 = load %struct.DagNode*, %struct.DagNode** %endnode.addr, align 8, !dbg !13866
  %call = call i8* @dag_node_name(%struct.DagForest* %7, %struct.DagNode* %8), !dbg !13867
  %9 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13868
  %10 = load %struct.DagNode*, %struct.DagNode** %startnode.addr, align 8, !dbg !13869
  %call1 = call i8* @dag_node_name(%struct.DagForest* %9, %struct.DagNode* %10), !dbg !13870
  %11 = load i8*, i8** %name.addr, align 8, !dbg !13871
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57, i64 0, i64 0), i8* %call, i8* %call1, i8* %11), !dbg !13872
  %12 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13873
  %13 = load %struct.DagNode*, %struct.DagNode** %startnode.addr, align 8, !dbg !13874
  %14 = load %struct.DagNode*, %struct.DagNode** %endnode.addr, align 8, !dbg !13875
  %call3 = call i32 @dag_node_print_dependency_recurs(%struct.DagForest* %12, %struct.DagNode* %13, %struct.DagNode* %14), !dbg !13876
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !13877
  ret void, !dbg !13878
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dag_node_print_dependency_recurs(%struct.DagForest* %dag, %struct.DagNode* %node, %struct.DagNode* %endnode) #0 !dbg !13879 {
entry:
  %retval = alloca i32, align 4
  %dag.addr = alloca %struct.DagForest*, align 8
  %node.addr = alloca %struct.DagNode*, align 8
  %endnode.addr = alloca %struct.DagNode*, align 8
  %itA = alloca %struct.DagAdjList*, align 8
  store %struct.DagForest* %dag, %struct.DagForest** %dag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagForest** %dag.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  store %struct.DagNode* %node, %struct.DagNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %node.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  store %struct.DagNode* %endnode, %struct.DagNode** %endnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DagNode** %endnode.addr, metadata !13886, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.declare(metadata %struct.DagAdjList** %itA, metadata !13888, metadata !DIExpression()), !dbg !13889
  %0 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13890
  %color = getelementptr inbounds %struct.DagNode, %struct.DagNode* %0, i32 0, i32 0, !dbg !13892
  %1 = load i32, i32* %color, align 8, !dbg !13892
  %cmp = icmp eq i32 %1, 2, !dbg !13893
  br i1 %cmp, label %if.then, label %if.end, !dbg !13894

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13895
  br label %return, !dbg !13895

if.end:                                           ; preds = %entry
  %2 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13896
  %color1 = getelementptr inbounds %struct.DagNode, %struct.DagNode* %2, i32 0, i32 0, !dbg !13897
  store i32 2, i32* %color1, align 8, !dbg !13898
  %3 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13899
  %4 = load %struct.DagNode*, %struct.DagNode** %endnode.addr, align 8, !dbg !13901
  %cmp2 = icmp eq %struct.DagNode* %3, %4, !dbg !13902
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13903

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !13904
  br label %return, !dbg !13904

if.end4:                                          ; preds = %if.end
  %5 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13905
  %parent = getelementptr inbounds %struct.DagNode, %struct.DagNode* %5, i32 0, i32 17, !dbg !13907
  %6 = load %struct.DagAdjList*, %struct.DagAdjList** %parent, align 8, !dbg !13907
  store %struct.DagAdjList* %6, %struct.DagAdjList** %itA, align 8, !dbg !13908
  br label %for.cond, !dbg !13909

for.cond:                                         ; preds = %for.inc, %if.end4
  %7 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13910
  %tobool = icmp ne %struct.DagAdjList* %7, null, !dbg !13912
  br i1 %tobool, label %for.body, label %for.end, !dbg !13912

for.body:                                         ; preds = %for.cond
  %8 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13913
  %9 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13916
  %node5 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %9, i32 0, i32 0, !dbg !13917
  %10 = load %struct.DagNode*, %struct.DagNode** %node5, align 8, !dbg !13917
  %11 = load %struct.DagNode*, %struct.DagNode** %endnode.addr, align 8, !dbg !13918
  %call = call i32 @dag_node_print_dependency_recurs(%struct.DagForest* %8, %struct.DagNode* %10, %struct.DagNode* %11), !dbg !13919
  %tobool6 = icmp ne i32 %call, 0, !dbg !13919
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !13920

if.then7:                                         ; preds = %for.body
  %12 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13921
  %13 = load %struct.DagNode*, %struct.DagNode** %node.addr, align 8, !dbg !13923
  %call8 = call i8* @dag_node_name(%struct.DagForest* %12, %struct.DagNode* %13), !dbg !13924
  %14 = load %struct.DagForest*, %struct.DagForest** %dag.addr, align 8, !dbg !13925
  %15 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13926
  %node9 = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %15, i32 0, i32 0, !dbg !13927
  %16 = load %struct.DagNode*, %struct.DagNode** %node9, align 8, !dbg !13927
  %call10 = call i8* @dag_node_name(%struct.DagForest* %14, %struct.DagNode* %16), !dbg !13928
  %17 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13929
  %name = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %17, i32 0, i32 4, !dbg !13930
  %18 = load i8*, i8** %name, align 8, !dbg !13930
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57, i64 0, i64 0), i8* %call8, i8* %call10, i8* %18), !dbg !13931
  store i32 1, i32* %retval, align 4, !dbg !13932
  br label %return, !dbg !13932

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !13933

for.inc:                                          ; preds = %if.end12
  %19 = load %struct.DagAdjList*, %struct.DagAdjList** %itA, align 8, !dbg !13934
  %next = getelementptr inbounds %struct.DagAdjList, %struct.DagAdjList* %19, i32 0, i32 5, !dbg !13935
  %20 = load %struct.DagAdjList*, %struct.DagAdjList** %next, align 8, !dbg !13935
  store %struct.DagAdjList* %20, %struct.DagAdjList** %itA, align 8, !dbg !13936
  br label %for.cond, !dbg !13937, !llvm.loop !13938

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !13940
  br label %return, !dbg !13940

return:                                           ; preds = %for.end, %if.then7, %if.then3, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !13941
  ret i32 %21, !dbg !13941
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4671, !4672, !4673}
!llvm.ident = !{!4674}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "threaded_update_lock", scope: !2, file: !3, line: 91, type: !4667, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !347, globals: !4589, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/depsgraph.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !39, !46, !59, !71, !104, !121, !131, !175, !184, !196, !202, !217, !270, !288, !292, !305, !310, !318, !323, !333, !337}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 61, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/blenkernel/depsgraph_private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38}
!36 = !DIEnumerator(name: "DAG_WHITE", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "DAG_GRAY", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "DAG_BLACK", value: 2, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 519, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !{!42, !43, !44, !45}
!42 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!44 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 339, baseType: !7, size: 32, elements: !47)
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!48 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!54 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!58 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !60, line: 123, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!61 = !{!62, !63, !64, !65, !66, !67, !68, !69, !70}
!62 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!65 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!66 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!68 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!69 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!70 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !72, line: 461, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!74 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!79 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!80 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!81 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!82 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!83 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!84 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!85 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!86 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!87 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!88 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!89 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!90 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!91 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!92 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!93 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!94 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!95 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!96 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!97 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!98 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!99 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!100 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!101 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!102 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!103 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eKinematic_Flags", file: !72, line: 658, baseType: !7, size: 32, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120}
!106 = !DIEnumerator(name: "CONSTRAINT_IK_TIP", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "CONSTRAINT_IK_ROT", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "CONSTRAINT_IK_AUTO", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "CONSTRAINT_IK_TEMP", value: 8, isUnsigned: true)
!110 = !DIEnumerator(name: "CONSTRAINT_IK_STRETCH", value: 16, isUnsigned: true)
!111 = !DIEnumerator(name: "CONSTRAINT_IK_POS", value: 32, isUnsigned: true)
!112 = !DIEnumerator(name: "CONSTRAINT_IK_SETANGLE", value: 64, isUnsigned: true)
!113 = !DIEnumerator(name: "CONSTRAINT_IK_GETANGLE", value: 128, isUnsigned: true)
!114 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_X", value: 256, isUnsigned: true)
!115 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Y", value: 512, isUnsigned: true)
!116 = !DIEnumerator(name: "CONSTRAINT_IK_NO_POS_Z", value: 1024, isUnsigned: true)
!117 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_X", value: 2048, isUnsigned: true)
!118 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Y", value: 4096, isUnsigned: true)
!119 = !DIEnumerator(name: "CONSTRAINT_IK_NO_ROT_Z", value: 8192, isUnsigned: true)
!120 = !DIEnumerator(name: "CONSTRAINT_IK_TARGETAXIS", value: 16384, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !40, line: 666, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125, !126, !127, !128, !129, !130}
!123 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!128 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!129 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!130 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !132, line: 76, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!134 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!140 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!141 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!142 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!143 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!144 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!145 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!146 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!147 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!148 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!149 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!150 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!151 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!152 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!153 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!154 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!155 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!156 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!157 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!158 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!159 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!160 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!161 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!162 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!163 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!164 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!165 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!166 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!167 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!168 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!169 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!170 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!171 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!172 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!173 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!174 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !176, line: 47, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!177 = !{!178, !179, !180, !181, !182, !183}
!178 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!183 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !176, line: 73, baseType: !7, size: 32, elements: !185)
!185 = !{!186, !187, !188, !189, !190, !191, !192, !193, !194, !195}
!186 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!190 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!191 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!192 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!193 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!194 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!195 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !176, line: 110, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201}
!198 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!199 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!200 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!201 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!202 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 394, baseType: !7, size: 32, elements: !203)
!203 = !{!204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216}
!204 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!205 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!206 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!207 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!208 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!210 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!211 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!212 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!213 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!214 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!215 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!216 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !218, line: 35, baseType: !7, size: 32, elements: !219)
!218 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!219 = !{!220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269}
!220 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!221 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!222 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!223 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!224 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!225 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!226 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!227 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!228 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!229 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!230 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!231 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!232 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!233 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!234 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!235 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!236 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!237 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!238 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!239 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!240 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!241 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!242 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!243 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!244 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!245 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!246 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!247 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!248 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!249 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!250 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!251 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!252 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!253 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!254 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!255 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!256 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!257 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!258 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!259 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!260 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!261 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!262 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!263 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!264 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!265 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!266 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!267 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!268 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!269 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PFieldType", file: !271, line: 42, baseType: !7, size: 32, elements: !272)
!271 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!272 = !{!273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287}
!273 = !DIEnumerator(name: "PFIELD_NULL", value: 0, isUnsigned: true)
!274 = !DIEnumerator(name: "PFIELD_FORCE", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "PFIELD_VORTEX", value: 2, isUnsigned: true)
!276 = !DIEnumerator(name: "PFIELD_MAGNET", value: 3, isUnsigned: true)
!277 = !DIEnumerator(name: "PFIELD_WIND", value: 4, isUnsigned: true)
!278 = !DIEnumerator(name: "PFIELD_GUIDE", value: 5, isUnsigned: true)
!279 = !DIEnumerator(name: "PFIELD_TEXTURE", value: 6, isUnsigned: true)
!280 = !DIEnumerator(name: "PFIELD_HARMONIC", value: 7, isUnsigned: true)
!281 = !DIEnumerator(name: "PFIELD_CHARGE", value: 8, isUnsigned: true)
!282 = !DIEnumerator(name: "PFIELD_LENNARDJ", value: 9, isUnsigned: true)
!283 = !DIEnumerator(name: "PFIELD_BOID", value: 10, isUnsigned: true)
!284 = !DIEnumerator(name: "PFIELD_TURBULENCE", value: 11, isUnsigned: true)
!285 = !DIEnumerator(name: "PFIELD_DRAG", value: 12, isUnsigned: true)
!286 = !DIEnumerator(name: "PFIELD_SMOKEFLOW", value: 13, isUnsigned: true)
!287 = !DIEnumerator(name: "NUM_PFIELD_TYPES", value: 14, isUnsigned: true)
!288 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !289, line: 69, baseType: !7, size: 32, elements: !290)
!289 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!290 = !{!291}
!291 = !DIEnumerator(name: "DAG_EVAL_NEED_CURVE_PATH", value: 1, isUnsigned: true)
!292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BoidRuleType", file: !293, line: 37, baseType: !7, size: 32, elements: !294)
!293 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!294 = !{!295, !296, !297, !298, !299, !300, !301, !302, !303, !304}
!295 = !DIEnumerator(name: "eBoidRuleType_None", value: 0, isUnsigned: true)
!296 = !DIEnumerator(name: "eBoidRuleType_Goal", value: 1, isUnsigned: true)
!297 = !DIEnumerator(name: "eBoidRuleType_Avoid", value: 2, isUnsigned: true)
!298 = !DIEnumerator(name: "eBoidRuleType_AvoidCollision", value: 3, isUnsigned: true)
!299 = !DIEnumerator(name: "eBoidRuleType_Separate", value: 4, isUnsigned: true)
!300 = !DIEnumerator(name: "eBoidRuleType_Flock", value: 5, isUnsigned: true)
!301 = !DIEnumerator(name: "eBoidRuleType_FollowLeader", value: 6, isUnsigned: true)
!302 = !DIEnumerator(name: "eBoidRuleType_AverageSpeed", value: 7, isUnsigned: true)
!303 = !DIEnumerator(name: "eBoidRuleType_Fight", value: 8, isUnsigned: true)
!304 = !DIEnumerator(name: "NUM_BOID_RULE_TYPES", value: 9, isUnsigned: true)
!305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFollowTrack_Flags", file: !72, line: 801, baseType: !7, size: 32, elements: !306)
!306 = !{!307, !308, !309}
!307 = !DIEnumerator(name: "FOLLOWTRACK_ACTIVECLIP", value: 1, isUnsigned: true)
!308 = !DIEnumerator(name: "FOLLOWTRACK_USE_3D_POSITION", value: 2, isUnsigned: true)
!309 = !DIEnumerator(name: "FOLLOWTRACK_USE_UNDISTORTION", value: 4, isUnsigned: true)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDriverTarget_Flag", file: !311, line: 282, baseType: !7, size: 32, elements: !312)
!311 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!312 = !{!313, !314, !315, !316, !317}
!313 = !DIEnumerator(name: "DTAR_FLAG_STRUCT_REF", value: 1, isUnsigned: true)
!314 = !DIEnumerator(name: "DTAR_FLAG_ID_OB_ONLY", value: 2, isUnsigned: true)
!315 = !DIEnumerator(name: "DTAR_FLAG_LOCALSPACE", value: 4, isUnsigned: true)
!316 = !DIEnumerator(name: "DTAR_FLAG_LOCAL_CONSTS", value: 8, isUnsigned: true)
!317 = !DIEnumerator(name: "DTAR_FLAG_INVALID", value: 16, isUnsigned: true)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !311, line: 899, baseType: !7, size: 32, elements: !319)
!319 = !{!320, !321, !322}
!320 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!321 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!322 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePose_Flags", file: !324, line: 360, baseType: !7, size: 32, elements: !325)
!324 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!325 = !{!326, !327, !328, !329, !330, !331, !332}
!326 = !DIEnumerator(name: "POSE_RECALC", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "POSE_LOCKED", value: 2, isUnsigned: true)
!328 = !DIEnumerator(name: "POSE_DO_UNLOCK", value: 4, isUnsigned: true)
!329 = !DIEnumerator(name: "POSE_CONSTRAINTS_TIMEDEPEND", value: 8, isUnsigned: true)
!330 = !DIEnumerator(name: "POSE_RECALCPATHS", value: 16, isUnsigned: true)
!331 = !DIEnumerator(name: "POSE_WAS_REBUILT", value: 32, isUnsigned: true)
!332 = !DIEnumerator(name: "POSE_GAME_ENGINE", value: 64, isUnsigned: true)
!333 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 626, baseType: !7, size: 32, elements: !334)
!334 = !{!335, !336}
!335 = !DIEnumerator(name: "OB_SHAPE_LOCK", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "OB_SHAPE_EDIT_MODE", value: 4, isUnsigned: true)
!337 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 460, baseType: !7, size: 32, elements: !338)
!338 = !{!339, !340, !341, !342, !343, !344, !345, !346}
!339 = !DIEnumerator(name: "OB_ARROWS", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "OB_PLAINAXES", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "OB_CIRCLE", value: 3, isUnsigned: true)
!342 = !DIEnumerator(name: "OB_SINGLE_ARROW", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "OB_CUBE", value: 5, isUnsigned: true)
!344 = !DIEnumerator(name: "OB_EMPTY_SPHERE", value: 6, isUnsigned: true)
!345 = !DIEnumerator(name: "OB_EMPTY_CONE", value: 7, isUnsigned: true)
!346 = !DIEnumerator(name: "OB_EMPTY_IMAGE", value: 8, isUnsigned: true)
!347 = !{!348, !349, !1255, !4396, !368, !4397, !4435, !4437, !4456, !4481, !4500, !4512, !4523, !4525, !4527, !4538, !4540, !4542}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !40, line: 295, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !40, line: 115, size: 11392, elements: !352)
!352 = !{!353, !424, !493, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2848, !2850, !2851, !2890, !2891, !2892, !2893, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3261, !4353, !4354, !4355, !4356, !4357, !4358, !4361, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4374, !4377, !4380, !4381, !4384, !4385}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !351, file: !40, line: 116, baseType: !354, size: 960)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !355, line: 130, baseType: !356)
!355 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !355, line: 117, size: 960, elements: !357)
!357 = !{!358, !359, !360, !362, !382, !386, !388, !390, !391, !392}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !356, file: !355, line: 118, baseType: !348, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !356, file: !355, line: 118, baseType: !348, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !356, file: !355, line: 119, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !356, file: !355, line: 120, baseType: !363, size: 64, offset: 192)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !355, line: 136, size: 17600, elements: !365)
!365 = !{!366, !367, !369, !372, !377, !378, !379}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !364, file: !355, line: 137, baseType: !354, size: 960)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !364, file: !355, line: 138, baseType: !368, size: 64, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !364, file: !355, line: 139, baseType: !370, size: 64, offset: 1024)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !355, line: 43, flags: DIFlagFwdDecl)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !364, file: !355, line: 140, baseType: !373, size: 8192, offset: 1088)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 8192, elements: !375)
!374 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!375 = !{!376}
!376 = !DISubrange(count: 1024)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !364, file: !355, line: 141, baseType: !373, size: 8192, offset: 9280)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !364, file: !355, line: 148, baseType: !363, size: 64, offset: 17472)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !364, file: !355, line: 150, baseType: !380, size: 64, offset: 17536)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !355, line: 45, flags: DIFlagFwdDecl)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !356, file: !355, line: 121, baseType: !383, size: 528, offset: 256)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 528, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 66)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !356, file: !355, line: 126, baseType: !387, size: 16, offset: 784)
!387 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !356, file: !355, line: 127, baseType: !389, size: 32, offset: 800)
!389 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !356, file: !355, line: 128, baseType: !389, size: 32, offset: 832)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !356, file: !355, line: 128, baseType: !389, size: 32, offset: 864)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !356, file: !355, line: 129, baseType: !393, size: 64, offset: 896)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !355, line: 75, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !355, line: 62, size: 1024, elements: !396)
!396 = !{!397, !399, !400, !401, !402, !403, !407, !408, !422, !423}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !395, file: !355, line: 63, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !395, file: !355, line: 63, baseType: !398, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !395, file: !355, line: 64, baseType: !374, size: 8, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !395, file: !355, line: 64, baseType: !374, size: 8, offset: 136)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !395, file: !355, line: 65, baseType: !387, size: 16, offset: 144)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !395, file: !355, line: 66, baseType: !404, size: 512, offset: 160)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 512, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !395, file: !355, line: 67, baseType: !389, size: 32, offset: 672)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !395, file: !355, line: 69, baseType: !409, size: 256, offset: 704)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !355, line: 60, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !355, line: 48, size: 256, elements: !411)
!411 = !{!412, !413, !420, !421}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !410, file: !355, line: 49, baseType: !348, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !410, file: !355, line: 58, baseType: !414, size: 128, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !415, line: 71, baseType: !416)
!415 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !415, line: 69, size: 128, elements: !417)
!417 = !{!418, !419}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !416, file: !415, line: 70, baseType: !348, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !416, file: !415, line: 70, baseType: !348, size: 64, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !410, file: !355, line: 59, baseType: !389, size: 32, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !410, file: !355, line: 59, baseType: !389, size: 32, offset: 224)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !395, file: !355, line: 70, baseType: !389, size: 32, offset: 960)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !395, file: !355, line: 74, baseType: !389, size: 32, offset: 992)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !351, file: !40, line: 117, baseType: !425, size: 64, offset: 960)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !311, line: 838, size: 768, elements: !427)
!427 = !{!428, !442, !443, !453, !454, !486, !487, !488, !489, !490, !491, !492}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !426, file: !311, line: 840, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !324, line: 499, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !324, line: 486, size: 1600, elements: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !431, file: !324, line: 487, baseType: !354, size: 960)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !431, file: !324, line: 489, baseType: !414, size: 128, offset: 960)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !431, file: !324, line: 490, baseType: !414, size: 128, offset: 1088)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !431, file: !324, line: 491, baseType: !414, size: 128, offset: 1216)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !431, file: !324, line: 492, baseType: !414, size: 128, offset: 1344)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !431, file: !324, line: 494, baseType: !389, size: 32, offset: 1472)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !431, file: !324, line: 495, baseType: !389, size: 32, offset: 1504)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !431, file: !324, line: 497, baseType: !389, size: 32, offset: 1536)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !431, file: !324, line: 498, baseType: !389, size: 32, offset: 1568)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !426, file: !311, line: 844, baseType: !429, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !426, file: !311, line: 848, baseType: !444, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !311, line: 549, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !311, line: 544, size: 320, elements: !447)
!447 = !{!448, !450, !451, !452}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !446, file: !311, line: 545, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !446, file: !311, line: 545, baseType: !449, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !446, file: !311, line: 547, baseType: !429, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !446, file: !311, line: 548, baseType: !414, size: 128, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !426, file: !311, line: 851, baseType: !414, size: 128, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !426, file: !311, line: 853, baseType: !455, size: 64, offset: 320)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !311, line: 594, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !311, line: 561, size: 1664, elements: !458)
!458 = !{!459, !461, !462, !463, !464, !465, !466, !467, !468, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !457, file: !311, line: 562, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !457, file: !311, line: 562, baseType: !460, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !457, file: !311, line: 564, baseType: !414, size: 128, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !457, file: !311, line: 565, baseType: !429, size: 64, offset: 256)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !457, file: !311, line: 566, baseType: !444, size: 64, offset: 320)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !457, file: !311, line: 568, baseType: !414, size: 128, offset: 384)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !457, file: !311, line: 569, baseType: !414, size: 128, offset: 512)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !457, file: !311, line: 571, baseType: !404, size: 512, offset: 640)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !457, file: !311, line: 573, baseType: !469, size: 32, offset: 1152)
!469 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !457, file: !311, line: 574, baseType: !469, size: 32, offset: 1184)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !457, file: !311, line: 576, baseType: !469, size: 32, offset: 1216)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !457, file: !311, line: 576, baseType: !469, size: 32, offset: 1248)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !457, file: !311, line: 577, baseType: !469, size: 32, offset: 1280)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !457, file: !311, line: 577, baseType: !469, size: 32, offset: 1312)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !457, file: !311, line: 579, baseType: !469, size: 32, offset: 1344)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !457, file: !311, line: 580, baseType: !469, size: 32, offset: 1376)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !457, file: !311, line: 582, baseType: !469, size: 32, offset: 1408)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !457, file: !311, line: 582, baseType: !469, size: 32, offset: 1440)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !457, file: !311, line: 583, baseType: !387, size: 16, offset: 1472)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !457, file: !311, line: 585, baseType: !387, size: 16, offset: 1488)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !457, file: !311, line: 586, baseType: !387, size: 16, offset: 1504)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !457, file: !311, line: 588, baseType: !387, size: 16, offset: 1520)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !457, file: !311, line: 590, baseType: !348, size: 64, offset: 1536)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !457, file: !311, line: 592, baseType: !389, size: 32, offset: 1600)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !457, file: !311, line: 593, baseType: !389, size: 32, offset: 1632)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !426, file: !311, line: 858, baseType: !414, size: 128, offset: 384)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !426, file: !311, line: 859, baseType: !414, size: 128, offset: 512)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !426, file: !311, line: 862, baseType: !389, size: 32, offset: 640)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !426, file: !311, line: 863, baseType: !389, size: 32, offset: 672)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !426, file: !311, line: 866, baseType: !387, size: 16, offset: 704)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !426, file: !311, line: 867, baseType: !387, size: 16, offset: 720)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !426, file: !311, line: 868, baseType: !469, size: 32, offset: 736)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !351, file: !40, line: 119, baseType: !494, size: 64, offset: 1024)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !496, line: 155, size: 1856, elements: !497)
!496 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!497 = !{!498, !2737, !2745, !2754, !2760, !2761, !2762, !2764, !2784, !2785, !2789, !2793, !2794, !2795, !2796, !2799, !2802, !2803, !2804, !2805, !2806, !2808, !2809, !2810, !2811, !2812, !2816, !2817, !2820, !2823, !2824, !2825, !2826}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !495, file: !496, line: 157, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !218, line: 717, size: 960, elements: !501)
!501 = !{!502, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !500, file: !218, line: 718, baseType: !503, size: 896)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !218, line: 110, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !218, line: 99, size: 896, elements: !505)
!505 = !{!506, !508, !509, !510, !511, !512, !513, !514, !2729}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !504, file: !218, line: 100, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !504, file: !218, line: 100, baseType: !507, size: 64, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !504, file: !218, line: 102, baseType: !389, size: 32, offset: 128)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !504, file: !218, line: 102, baseType: !389, size: 32, offset: 160)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !504, file: !218, line: 103, baseType: !389, size: 32, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !504, file: !218, line: 103, baseType: !389, size: 32, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !504, file: !218, line: 104, baseType: !404, size: 512, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !504, file: !218, line: 107, baseType: !515, size: 64, offset: 768)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !517, line: 1216, size: 39680, elements: !518)
!517 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!518 = !{!519, !520, !521, !523, !1782, !1783, !1784, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1811, !2143, !2146, !2388, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2418, !2419, !2420, !2421, !2422, !2430, !2496, !2503, !2504, !2511, !2716, !2722, !2723, !2724, !2725, !2726}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !516, file: !517, line: 1217, baseType: !354, size: 960)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !516, file: !517, line: 1218, baseType: !425, size: 64, offset: 960)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !516, file: !517, line: 1220, baseType: !522, size: 64, offset: 1024)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !516, file: !517, line: 1221, baseType: !524, size: 64, offset: 1088)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !526, line: 52, size: 4224, elements: !527)
!526 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!527 = !{!528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !597, !598, !602, !1777, !1778, !1779, !1780, !1781}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !525, file: !526, line: 53, baseType: !354, size: 960)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !525, file: !526, line: 54, baseType: !425, size: 64, offset: 960)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !525, file: !526, line: 56, baseType: !387, size: 16, offset: 1024)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !525, file: !526, line: 56, baseType: !387, size: 16, offset: 1040)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !525, file: !526, line: 57, baseType: !387, size: 16, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !525, file: !526, line: 57, baseType: !387, size: 16, offset: 1072)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !525, file: !526, line: 59, baseType: !469, size: 32, offset: 1088)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !525, file: !526, line: 59, baseType: !469, size: 32, offset: 1120)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !525, file: !526, line: 59, baseType: !469, size: 32, offset: 1152)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !525, file: !526, line: 60, baseType: !469, size: 32, offset: 1184)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !525, file: !526, line: 60, baseType: !469, size: 32, offset: 1216)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !525, file: !526, line: 60, baseType: !469, size: 32, offset: 1248)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !525, file: !526, line: 61, baseType: !469, size: 32, offset: 1280)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !525, file: !526, line: 61, baseType: !469, size: 32, offset: 1312)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !525, file: !526, line: 61, baseType: !469, size: 32, offset: 1344)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !525, file: !526, line: 68, baseType: !469, size: 32, offset: 1376)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !525, file: !526, line: 68, baseType: !469, size: 32, offset: 1408)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !525, file: !526, line: 68, baseType: !469, size: 32, offset: 1440)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !525, file: !526, line: 69, baseType: !469, size: 32, offset: 1472)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !525, file: !526, line: 69, baseType: !469, size: 32, offset: 1504)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !525, file: !526, line: 74, baseType: !469, size: 32, offset: 1536)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !525, file: !526, line: 79, baseType: !469, size: 32, offset: 1568)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !525, file: !526, line: 81, baseType: !387, size: 16, offset: 1600)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !525, file: !526, line: 91, baseType: !387, size: 16, offset: 1616)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !525, file: !526, line: 92, baseType: !387, size: 16, offset: 1632)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !525, file: !526, line: 93, baseType: !387, size: 16, offset: 1648)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !525, file: !526, line: 94, baseType: !387, size: 16, offset: 1664)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !525, file: !526, line: 94, baseType: !387, size: 16, offset: 1680)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !525, file: !526, line: 94, baseType: !387, size: 16, offset: 1696)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !525, file: !526, line: 94, baseType: !387, size: 16, offset: 1712)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !525, file: !526, line: 96, baseType: !469, size: 32, offset: 1728)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !525, file: !526, line: 96, baseType: !469, size: 32, offset: 1760)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !525, file: !526, line: 96, baseType: !469, size: 32, offset: 1792)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !525, file: !526, line: 96, baseType: !469, size: 32, offset: 1824)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !525, file: !526, line: 98, baseType: !469, size: 32, offset: 1856)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !525, file: !526, line: 98, baseType: !469, size: 32, offset: 1888)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !525, file: !526, line: 98, baseType: !469, size: 32, offset: 1920)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !525, file: !526, line: 98, baseType: !469, size: 32, offset: 1952)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !525, file: !526, line: 99, baseType: !469, size: 32, offset: 1984)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !525, file: !526, line: 99, baseType: !469, size: 32, offset: 2016)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !525, file: !526, line: 100, baseType: !469, size: 32, offset: 2048)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !525, file: !526, line: 100, baseType: !469, size: 32, offset: 2080)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !525, file: !526, line: 103, baseType: !387, size: 16, offset: 2112)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !525, file: !526, line: 103, baseType: !387, size: 16, offset: 2128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !525, file: !526, line: 103, baseType: !387, size: 16, offset: 2144)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !525, file: !526, line: 103, baseType: !387, size: 16, offset: 2160)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !525, file: !526, line: 106, baseType: !469, size: 32, offset: 2176)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !525, file: !526, line: 106, baseType: !469, size: 32, offset: 2208)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !525, file: !526, line: 106, baseType: !469, size: 32, offset: 2240)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !525, file: !526, line: 106, baseType: !469, size: 32, offset: 2272)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !525, file: !526, line: 107, baseType: !387, size: 16, offset: 2304)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !525, file: !526, line: 107, baseType: !387, size: 16, offset: 2320)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !525, file: !526, line: 107, baseType: !387, size: 16, offset: 2336)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !525, file: !526, line: 107, baseType: !387, size: 16, offset: 2352)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !525, file: !526, line: 108, baseType: !469, size: 32, offset: 2368)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !525, file: !526, line: 108, baseType: !469, size: 32, offset: 2400)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !525, file: !526, line: 109, baseType: !469, size: 32, offset: 2432)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !525, file: !526, line: 109, baseType: !469, size: 32, offset: 2464)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !525, file: !526, line: 110, baseType: !469, size: 32, offset: 2496)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !525, file: !526, line: 110, baseType: !469, size: 32, offset: 2528)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !525, file: !526, line: 110, baseType: !469, size: 32, offset: 2560)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !525, file: !526, line: 111, baseType: !387, size: 16, offset: 2592)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !525, file: !526, line: 111, baseType: !387, size: 16, offset: 2608)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !525, file: !526, line: 112, baseType: !387, size: 16, offset: 2624)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !525, file: !526, line: 112, baseType: !387, size: 16, offset: 2640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !525, file: !526, line: 112, baseType: !387, size: 16, offset: 2656)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !525, file: !526, line: 115, baseType: !387, size: 16, offset: 2672)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !525, file: !526, line: 118, baseType: !596, size: 64, offset: 2688)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !525, file: !526, line: 118, baseType: !596, size: 64, offset: 2752)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !525, file: !526, line: 121, baseType: !599, size: 64, offset: 2816)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !601, line: 46, flags: DIFlagFwdDecl)
!601 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!602 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !525, file: !526, line: 122, baseType: !603, size: 1152, offset: 2880)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 1152, elements: !1775)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !601, line: 57, size: 2496, elements: !606)
!606 = !{!607, !608, !609, !610, !611, !612, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !605, file: !601, line: 59, baseType: !387, size: 16)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !605, file: !601, line: 59, baseType: !387, size: 16, offset: 16)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !605, file: !601, line: 59, baseType: !387, size: 16, offset: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !605, file: !601, line: 59, baseType: !387, size: 16, offset: 48)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !605, file: !601, line: 60, baseType: !522, size: 64, offset: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !605, file: !601, line: 61, baseType: !613, size: 64, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !601, line: 202, size: 3328, elements: !615)
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !685, !1484, !1485, !1562, !1588, !1616, !1617, !1685, !1706, !1714, !1715}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !614, file: !601, line: 203, baseType: !354, size: 960)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !614, file: !601, line: 204, baseType: !425, size: 64, offset: 960)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !614, file: !601, line: 206, baseType: !469, size: 32, offset: 1024)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !614, file: !601, line: 206, baseType: !469, size: 32, offset: 1056)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1088)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1120)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1152)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1184)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1216)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !614, file: !601, line: 207, baseType: !469, size: 32, offset: 1248)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !614, file: !601, line: 208, baseType: !469, size: 32, offset: 1280)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !614, file: !601, line: 208, baseType: !469, size: 32, offset: 1312)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !614, file: !601, line: 211, baseType: !469, size: 32, offset: 1344)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !614, file: !601, line: 211, baseType: !469, size: 32, offset: 1376)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !614, file: !601, line: 211, baseType: !469, size: 32, offset: 1408)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !614, file: !601, line: 211, baseType: !469, size: 32, offset: 1440)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !614, file: !601, line: 211, baseType: !469, size: 32, offset: 1472)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !614, file: !601, line: 214, baseType: !469, size: 32, offset: 1504)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !614, file: !601, line: 214, baseType: !469, size: 32, offset: 1536)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !614, file: !601, line: 217, baseType: !469, size: 32, offset: 1568)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !614, file: !601, line: 218, baseType: !469, size: 32, offset: 1600)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !614, file: !601, line: 219, baseType: !469, size: 32, offset: 1632)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !614, file: !601, line: 220, baseType: !469, size: 32, offset: 1664)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !614, file: !601, line: 221, baseType: !469, size: 32, offset: 1696)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !614, file: !601, line: 222, baseType: !387, size: 16, offset: 1728)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !614, file: !601, line: 222, baseType: !387, size: 16, offset: 1744)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !614, file: !601, line: 224, baseType: !387, size: 16, offset: 1760)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !614, file: !601, line: 224, baseType: !387, size: 16, offset: 1776)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !614, file: !601, line: 227, baseType: !387, size: 16, offset: 1792)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !614, file: !601, line: 227, baseType: !387, size: 16, offset: 1808)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !614, file: !601, line: 229, baseType: !387, size: 16, offset: 1824)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !614, file: !601, line: 229, baseType: !387, size: 16, offset: 1840)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !614, file: !601, line: 230, baseType: !387, size: 16, offset: 1856)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !614, file: !601, line: 230, baseType: !387, size: 16, offset: 1872)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !614, file: !601, line: 232, baseType: !469, size: 32, offset: 1888)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !614, file: !601, line: 232, baseType: !469, size: 32, offset: 1920)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !614, file: !601, line: 232, baseType: !469, size: 32, offset: 1952)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !614, file: !601, line: 232, baseType: !469, size: 32, offset: 1984)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !614, file: !601, line: 233, baseType: !389, size: 32, offset: 2016)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !614, file: !601, line: 234, baseType: !389, size: 32, offset: 2048)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !614, file: !601, line: 235, baseType: !387, size: 16, offset: 2080)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !614, file: !601, line: 235, baseType: !387, size: 16, offset: 2096)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !614, file: !601, line: 236, baseType: !387, size: 16, offset: 2112)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !614, file: !601, line: 239, baseType: !387, size: 16, offset: 2128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !614, file: !601, line: 240, baseType: !389, size: 32, offset: 2144)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !614, file: !601, line: 241, baseType: !389, size: 32, offset: 2176)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !614, file: !601, line: 241, baseType: !389, size: 32, offset: 2208)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !614, file: !601, line: 241, baseType: !389, size: 32, offset: 2240)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !614, file: !601, line: 243, baseType: !469, size: 32, offset: 2272)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !614, file: !601, line: 243, baseType: !469, size: 32, offset: 2304)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !614, file: !601, line: 244, baseType: !469, size: 32, offset: 2336)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !614, file: !601, line: 246, baseType: !668, size: 320, offset: 2368)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !669, line: 50, size: 320, elements: !670)
!669 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!670 = !{!671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !668, file: !669, line: 51, baseType: !515, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !668, file: !669, line: 53, baseType: !389, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !668, file: !669, line: 54, baseType: !389, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !668, file: !669, line: 55, baseType: !389, size: 32, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !668, file: !669, line: 55, baseType: !389, size: 32, offset: 160)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !668, file: !669, line: 56, baseType: !374, size: 8, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !668, file: !669, line: 56, baseType: !374, size: 8, offset: 200)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !668, file: !669, line: 57, baseType: !374, size: 8, offset: 208)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !668, file: !669, line: 57, baseType: !374, size: 8, offset: 216)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !668, file: !669, line: 59, baseType: !387, size: 16, offset: 224)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !668, file: !669, line: 59, baseType: !387, size: 16, offset: 240)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !668, file: !669, line: 59, baseType: !387, size: 16, offset: 256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !668, file: !669, line: 61, baseType: !387, size: 16, offset: 272)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !668, file: !669, line: 63, baseType: !389, size: 32, offset: 288)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !614, file: !601, line: 248, baseType: !686, size: 64, offset: 2688)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !688, line: 328, size: 3456, elements: !689)
!688 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!689 = !{!690, !691, !692, !1430, !1431, !1432, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1462, !1463, !1464, !1467, !1471, !1475, !1479, !1480, !1481, !1482, !1483}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !687, file: !688, line: 329, baseType: !354, size: 960)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !687, file: !688, line: 330, baseType: !425, size: 64, offset: 960)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !687, file: !688, line: 332, baseType: !693, size: 64, offset: 1024)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !695, line: 283, size: 4096, elements: !696)
!695 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!696 = !{!697, !698, !699, !700, !704, !705, !709, !1399, !1407, !1411, !1417, !1421, !1422, !1423, !1424, !1428, !1429}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !694, file: !695, line: 284, baseType: !389, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !694, file: !695, line: 285, baseType: !404, size: 512, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !694, file: !695, line: 287, baseType: !404, size: 512, offset: 544)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !694, file: !695, line: 288, baseType: !701, size: 2048, offset: 1056)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 2048, elements: !702)
!702 = !{!703}
!703 = !DISubrange(count: 256)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !694, file: !695, line: 289, baseType: !389, size: 32, offset: 3104)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !694, file: !695, line: 292, baseType: !706, size: 64, offset: 3136)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !686}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !694, file: !695, line: 293, baseType: !710, size: 64, offset: 3200)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{null, !686, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !688, line: 167, size: 3712, elements: !715)
!715 = !{!716, !717, !718, !719, !720, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !714, file: !688, line: 168, baseType: !713, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !714, file: !688, line: 168, baseType: !713, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !714, file: !688, line: 168, baseType: !713, size: 64, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !714, file: !688, line: 170, baseType: !393, size: 64, offset: 192)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !714, file: !688, line: 172, baseType: !721, size: 64, offset: 256)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !695, line: 144, size: 6016, elements: !723)
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !907, !908, !909, !1263, !1267, !1271, !1272, !1279, !1283, !1287, !1288, !1289, !1290, !1294, !1295, !1299, !1303, !1307, !1311, !1315, !1319, !1323, !1324, !1331, !1333, !1342, !1351}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !722, file: !695, line: 145, baseType: !348, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !722, file: !695, line: 145, baseType: !348, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !722, file: !695, line: 146, baseType: !387, size: 16, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !722, file: !695, line: 148, baseType: !404, size: 512, offset: 144)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !722, file: !695, line: 149, baseType: !389, size: 32, offset: 672)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !722, file: !695, line: 151, baseType: !404, size: 512, offset: 704)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !722, file: !695, line: 152, baseType: !701, size: 2048, offset: 1216)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !722, file: !695, line: 153, baseType: !389, size: 32, offset: 3264)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !722, file: !695, line: 155, baseType: !469, size: 32, offset: 3296)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !722, file: !695, line: 155, baseType: !469, size: 32, offset: 3328)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !722, file: !695, line: 155, baseType: !469, size: 32, offset: 3360)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !722, file: !695, line: 156, baseType: !469, size: 32, offset: 3392)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !722, file: !695, line: 156, baseType: !469, size: 32, offset: 3424)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !722, file: !695, line: 156, baseType: !469, size: 32, offset: 3456)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !722, file: !695, line: 157, baseType: !387, size: 16, offset: 3488)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !722, file: !695, line: 157, baseType: !387, size: 16, offset: 3504)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !722, file: !695, line: 157, baseType: !387, size: 16, offset: 3520)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !722, file: !695, line: 160, baseType: !742, size: 64, offset: 3584)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !695, line: 109, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !695, line: 98, size: 1408, elements: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !906}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !744, file: !695, line: 99, baseType: !389, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !744, file: !695, line: 99, baseType: !389, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !744, file: !695, line: 100, baseType: !404, size: 512, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !744, file: !695, line: 101, baseType: !469, size: 32, offset: 576)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !744, file: !695, line: 101, baseType: !469, size: 32, offset: 608)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !744, file: !695, line: 101, baseType: !469, size: 32, offset: 640)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !744, file: !695, line: 101, baseType: !469, size: 32, offset: 672)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !744, file: !695, line: 102, baseType: !469, size: 32, offset: 704)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !744, file: !695, line: 102, baseType: !469, size: 32, offset: 736)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !744, file: !695, line: 103, baseType: !389, size: 32, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !744, file: !695, line: 104, baseType: !389, size: 32, offset: 800)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !744, file: !695, line: 107, baseType: !758, size: 64, offset: 832)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !688, line: 87, size: 2816, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !885}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !759, file: !688, line: 88, baseType: !758, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !759, file: !688, line: 88, baseType: !758, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !759, file: !688, line: 88, baseType: !758, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !759, file: !688, line: 90, baseType: !393, size: 64, offset: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !759, file: !688, line: 92, baseType: !404, size: 512, offset: 256)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !759, file: !688, line: 94, baseType: !404, size: 512, offset: 768)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !759, file: !688, line: 99, baseType: !348, size: 64, offset: 1280)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !759, file: !688, line: 101, baseType: !387, size: 16, offset: 1344)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !759, file: !688, line: 101, baseType: !387, size: 16, offset: 1360)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !759, file: !688, line: 102, baseType: !387, size: 16, offset: 1376)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !759, file: !688, line: 103, baseType: !387, size: 16, offset: 1392)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !759, file: !688, line: 104, baseType: !773, size: 64, offset: 1408)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !695, line: 114, size: 1600, elements: !775)
!775 = !{!776, !777, !801, !805, !809, !813, !817, !821, !822, !826, !855, !856, !857}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !774, file: !695, line: 115, baseType: !404, size: 512)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !774, file: !695, line: 117, baseType: !778, size: 64, offset: 512)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !781, !784, !787, !787, !799}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !783, line: 51, flags: DIFlagFwdDecl)
!783 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !786, line: 46, flags: DIFlagFwdDecl)
!786 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !789, line: 55, size: 192, elements: !790)
!789 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!790 = !{!791, !795, !798}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !788, file: !789, line: 58, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !788, file: !789, line: 56, size: 64, elements: !793)
!793 = !{!794}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !792, file: !789, line: 57, baseType: !348, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !788, file: !789, line: 60, baseType: !796, size: 64, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !688, line: 335, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !788, file: !789, line: 61, baseType: !348, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !774, file: !695, line: 118, baseType: !802, size: 64, offset: 576)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !781, !787, !787, !596}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !774, file: !695, line: 120, baseType: !806, size: 64, offset: 640)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{null, !781, !784, !787}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !774, file: !695, line: 121, baseType: !810, size: 64, offset: 704)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{null, !781, !787, !596}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !774, file: !695, line: 122, baseType: !814, size: 64, offset: 768)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !686, !758, !796}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !774, file: !695, line: 123, baseType: !818, size: 64, offset: 832)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !686, !758, !713, !758, !799}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !774, file: !695, line: 124, baseType: !818, size: 64, offset: 896)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !774, file: !695, line: 125, baseType: !823, size: 64, offset: 960)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !686, !758, !713, !758}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !774, file: !695, line: 128, baseType: !827, size: 256, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !789, line: 436, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !789, line: 430, size: 256, elements: !829)
!829 = !{!830, !831, !834, !850}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !828, file: !789, line: 431, baseType: !348, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !828, file: !789, line: 432, baseType: !832, size: 64, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !789, line: 417, baseType: !797)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !828, file: !789, line: 433, baseType: !835, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !789, line: 408, baseType: !836)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!389, !781, !787, !839, !841}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !789, line: 38, flags: DIFlagFwdDecl)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !789, line: 348, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !789, line: 337, size: 256, elements: !844)
!844 = !{!845, !846, !847, !848, !849}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !843, file: !789, line: 339, baseType: !348, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !843, file: !789, line: 342, baseType: !839, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !843, file: !789, line: 345, baseType: !389, size: 32, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !843, file: !789, line: 347, baseType: !389, size: 32, offset: 160)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !843, file: !789, line: 347, baseType: !389, size: 32, offset: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !828, file: !789, line: 434, baseType: !851, size: 64, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !789, line: 409, baseType: !852)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{null, !348}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !774, file: !695, line: 129, baseType: !827, size: 256, offset: 1280)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !774, file: !695, line: 132, baseType: !389, size: 32, offset: 1536)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !774, file: !695, line: 132, baseType: !389, size: 32, offset: 1568)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !759, file: !688, line: 105, baseType: !404, size: 512, offset: 1472)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !759, file: !688, line: 107, baseType: !469, size: 32, offset: 1984)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !759, file: !688, line: 107, baseType: !469, size: 32, offset: 2016)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !759, file: !688, line: 109, baseType: !348, size: 64, offset: 2048)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !759, file: !688, line: 112, baseType: !387, size: 16, offset: 2112)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !759, file: !688, line: 114, baseType: !387, size: 16, offset: 2128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !759, file: !688, line: 115, baseType: !389, size: 32, offset: 2144)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !759, file: !688, line: 117, baseType: !348, size: 64, offset: 2176)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !759, file: !688, line: 122, baseType: !389, size: 32, offset: 2240)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !759, file: !688, line: 124, baseType: !389, size: 32, offset: 2272)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !759, file: !688, line: 126, baseType: !758, size: 64, offset: 2304)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !759, file: !688, line: 128, baseType: !870, size: 64, offset: 2368)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !688, line: 298, size: 448, elements: !872)
!872 = !{!873, !874, !875, !878, !879, !882, !883, !884}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !688, line: 299, baseType: !870, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !871, file: !688, line: 299, baseType: !870, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !871, file: !688, line: 301, baseType: !876, size: 64, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !688, line: 218, baseType: !714)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !871, file: !688, line: 301, baseType: !876, size: 64, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !871, file: !688, line: 302, baseType: !880, size: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !688, line: 132, baseType: !759)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !871, file: !688, line: 302, baseType: !880, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !871, file: !688, line: 304, baseType: !389, size: 32, offset: 384)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !871, file: !688, line: 305, baseType: !389, size: 32, offset: 416)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !759, file: !688, line: 131, baseType: !886, size: 384, offset: 2432)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !688, line: 73, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !688, line: 62, size: 384, elements: !888)
!888 = !{!889, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !887, file: !688, line: 63, baseType: !890, size: 128)
!890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 128, elements: !891)
!891 = !{!892}
!892 = !DISubrange(count: 4)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !887, file: !688, line: 64, baseType: !469, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !887, file: !688, line: 64, baseType: !469, size: 32, offset: 160)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !887, file: !688, line: 65, baseType: !348, size: 64, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !887, file: !688, line: 66, baseType: !387, size: 16, offset: 256)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !887, file: !688, line: 67, baseType: !387, size: 16, offset: 272)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !887, file: !688, line: 68, baseType: !387, size: 16, offset: 288)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !887, file: !688, line: 69, baseType: !387, size: 16, offset: 304)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !887, file: !688, line: 70, baseType: !387, size: 16, offset: 320)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !887, file: !688, line: 71, baseType: !387, size: 16, offset: 336)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !887, file: !688, line: 72, baseType: !903, size: 32, offset: 352)
!903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !387, size: 32, elements: !904)
!904 = !{!905}
!905 = !DISubrange(count: 2)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !744, file: !695, line: 108, baseType: !404, size: 512, offset: 896)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !722, file: !695, line: 160, baseType: !742, size: 64, offset: 3648)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !722, file: !695, line: 162, baseType: !404, size: 512, offset: 3712)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !722, file: !695, line: 165, baseType: !910, size: 64, offset: 4224)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{null, !913, !915, !1257, !686, !713, !1259}
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !786, line: 230, size: 3072, elements: !917)
!917 = !{!918, !919, !920, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1256}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !916, file: !786, line: 231, baseType: !915, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !916, file: !786, line: 231, baseType: !915, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !916, file: !786, line: 233, baseType: !921, size: 1280, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !922, line: 71, baseType: !923)
!922 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !922, line: 40, size: 1280, elements: !924)
!924 = !{!925, !934, !935, !943, !944, !945, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !968}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !923, file: !922, line: 41, baseType: !926, size: 128)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !927, line: 95, baseType: !928)
!927 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !927, line: 92, size: 128, elements: !929)
!929 = !{!930, !931, !932, !933}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !928, file: !927, line: 93, baseType: !469, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !928, file: !927, line: 93, baseType: !469, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !928, file: !927, line: 94, baseType: !469, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !928, file: !927, line: 94, baseType: !469, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !923, file: !922, line: 41, baseType: !926, size: 128, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !923, file: !922, line: 42, baseType: !936, size: 128, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !927, line: 89, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !927, line: 86, size: 128, elements: !938)
!938 = !{!939, !940, !941, !942}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !937, file: !927, line: 87, baseType: !389, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !937, file: !927, line: 87, baseType: !389, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !937, file: !927, line: 88, baseType: !389, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !937, file: !927, line: 88, baseType: !389, size: 32, offset: 96)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !923, file: !922, line: 42, baseType: !936, size: 128, offset: 384)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !923, file: !922, line: 43, baseType: !936, size: 128, offset: 512)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !923, file: !922, line: 45, baseType: !946, size: 64, offset: 640)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 64, elements: !904)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !923, file: !922, line: 45, baseType: !946, size: 64, offset: 704)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !923, file: !922, line: 46, baseType: !469, size: 32, offset: 768)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !923, file: !922, line: 46, baseType: !469, size: 32, offset: 800)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !923, file: !922, line: 48, baseType: !387, size: 16, offset: 832)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !923, file: !922, line: 49, baseType: !387, size: 16, offset: 848)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !923, file: !922, line: 51, baseType: !387, size: 16, offset: 864)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !923, file: !922, line: 52, baseType: !387, size: 16, offset: 880)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !923, file: !922, line: 53, baseType: !387, size: 16, offset: 896)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !923, file: !922, line: 55, baseType: !387, size: 16, offset: 912)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !923, file: !922, line: 56, baseType: !387, size: 16, offset: 928)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !923, file: !922, line: 58, baseType: !387, size: 16, offset: 944)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !923, file: !922, line: 58, baseType: !387, size: 16, offset: 960)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !923, file: !922, line: 59, baseType: !387, size: 16, offset: 976)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !923, file: !922, line: 59, baseType: !387, size: 16, offset: 992)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !923, file: !922, line: 61, baseType: !387, size: 16, offset: 1008)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !923, file: !922, line: 63, baseType: !596, size: 64, offset: 1024)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !923, file: !922, line: 64, baseType: !389, size: 32, offset: 1088)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !923, file: !922, line: 65, baseType: !389, size: 32, offset: 1120)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !923, file: !922, line: 68, baseType: !966, size: 64, offset: 1152)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !922, line: 68, flags: DIFlagFwdDecl)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !923, file: !922, line: 69, baseType: !969, size: 64, offset: 1216)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !922, line: 69, flags: DIFlagFwdDecl)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !916, file: !786, line: 234, baseType: !936, size: 128, offset: 1408)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !916, file: !786, line: 235, baseType: !936, size: 128, offset: 1536)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !916, file: !786, line: 236, baseType: !387, size: 16, offset: 1664)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !916, file: !786, line: 236, baseType: !387, size: 16, offset: 1680)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !916, file: !786, line: 238, baseType: !387, size: 16, offset: 1696)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !916, file: !786, line: 239, baseType: !387, size: 16, offset: 1712)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !916, file: !786, line: 240, baseType: !387, size: 16, offset: 1728)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !916, file: !786, line: 241, baseType: !387, size: 16, offset: 1744)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !916, file: !786, line: 243, baseType: !469, size: 32, offset: 1760)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !916, file: !786, line: 244, baseType: !387, size: 16, offset: 1792)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !916, file: !786, line: 244, baseType: !387, size: 16, offset: 1808)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !916, file: !786, line: 246, baseType: !387, size: 16, offset: 1824)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !916, file: !786, line: 247, baseType: !387, size: 16, offset: 1840)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !916, file: !786, line: 248, baseType: !387, size: 16, offset: 1856)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !916, file: !786, line: 249, baseType: !387, size: 16, offset: 1872)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !916, file: !786, line: 250, baseType: !387, size: 16, offset: 1888)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !916, file: !786, line: 251, baseType: !387, size: 16, offset: 1904)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !916, file: !786, line: 253, baseType: !989, size: 64, offset: 1920)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !991, line: 116, size: 1472, elements: !992)
!991 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!992 = !{!993, !994, !995, !996, !1112, !1113, !1117, !1220, !1224, !1228, !1229, !1230, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !990, file: !991, line: 117, baseType: !989, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !990, file: !991, line: 117, baseType: !989, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !990, file: !991, line: 119, baseType: !389, size: 32, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !990, file: !991, line: 122, baseType: !997, size: 64, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !1000, !915}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !783, line: 128, size: 2816, elements: !1002)
!1002 = !{!1003, !1004, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1088, !1089, !1090, !1091, !1092, !1103, !1104, !1105, !1106, !1107, !1108}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1001, file: !783, line: 129, baseType: !354, size: 960)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !1001, file: !783, line: 131, baseType: !1005, size: 64, offset: 960)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !783, line: 169, size: 2048, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1058, !1061, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1006, file: !783, line: 170, baseType: !1005, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1006, file: !783, line: 170, baseType: !1005, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1006, file: !783, line: 172, baseType: !348, size: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1006, file: !783, line: 174, baseType: !1012, size: 64, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !786, line: 49, size: 1984, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1013, file: !786, line: 50, baseType: !354, size: 960)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1013, file: !786, line: 52, baseType: !414, size: 128, offset: 960)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1013, file: !786, line: 53, baseType: !414, size: 128, offset: 1088)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1013, file: !786, line: 54, baseType: !414, size: 128, offset: 1216)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1013, file: !786, line: 55, baseType: !414, size: 128, offset: 1344)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1013, file: !786, line: 57, baseType: !515, size: 64, offset: 1472)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1013, file: !786, line: 58, baseType: !515, size: 64, offset: 1536)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1013, file: !786, line: 60, baseType: !389, size: 32, offset: 1600)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1013, file: !786, line: 61, baseType: !389, size: 32, offset: 1632)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1013, file: !786, line: 63, baseType: !387, size: 16, offset: 1664)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1013, file: !786, line: 64, baseType: !387, size: 16, offset: 1680)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1013, file: !786, line: 65, baseType: !387, size: 16, offset: 1696)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1013, file: !786, line: 66, baseType: !387, size: 16, offset: 1712)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1013, file: !786, line: 67, baseType: !387, size: 16, offset: 1728)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1013, file: !786, line: 68, baseType: !387, size: 16, offset: 1744)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1013, file: !786, line: 69, baseType: !387, size: 16, offset: 1760)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1013, file: !786, line: 70, baseType: !387, size: 16, offset: 1776)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1013, file: !786, line: 71, baseType: !387, size: 16, offset: 1792)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1013, file: !786, line: 73, baseType: !387, size: 16, offset: 1808)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1013, file: !786, line: 74, baseType: !387, size: 16, offset: 1824)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1013, file: !786, line: 76, baseType: !387, size: 16, offset: 1840)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1013, file: !786, line: 78, baseType: !969, size: 64, offset: 1856)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1013, file: !786, line: 79, baseType: !348, size: 64, offset: 1920)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1006, file: !783, line: 175, baseType: !1012, size: 64, offset: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1006, file: !783, line: 176, baseType: !404, size: 512, offset: 320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1006, file: !783, line: 178, baseType: !387, size: 16, offset: 832)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1006, file: !783, line: 178, baseType: !387, size: 16, offset: 848)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1006, file: !783, line: 178, baseType: !387, size: 16, offset: 864)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1006, file: !783, line: 178, baseType: !387, size: 16, offset: 880)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1006, file: !783, line: 179, baseType: !387, size: 16, offset: 896)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1006, file: !783, line: 180, baseType: !387, size: 16, offset: 912)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1006, file: !783, line: 181, baseType: !387, size: 16, offset: 928)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1006, file: !783, line: 182, baseType: !387, size: 16, offset: 944)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1006, file: !783, line: 183, baseType: !387, size: 16, offset: 960)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1006, file: !783, line: 184, baseType: !387, size: 16, offset: 976)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1006, file: !783, line: 185, baseType: !387, size: 16, offset: 992)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1006, file: !783, line: 186, baseType: !387, size: 16, offset: 1008)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1006, file: !783, line: 188, baseType: !389, size: 32, offset: 1024)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1006, file: !783, line: 190, baseType: !387, size: 16, offset: 1056)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1006, file: !783, line: 191, baseType: !387, size: 16, offset: 1072)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1006, file: !783, line: 194, baseType: !1056, size: 64, offset: 1088)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !783, line: 43, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1006, file: !783, line: 196, baseType: !1059, size: 64, offset: 1152)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !783, line: 55, flags: DIFlagFwdDecl)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1006, file: !783, line: 198, baseType: !1062, size: 64, offset: 1216)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !783, line: 44, flags: DIFlagFwdDecl)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1006, file: !783, line: 200, baseType: !389, size: 32, offset: 1280)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1006, file: !783, line: 200, baseType: !389, size: 32, offset: 1312)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1006, file: !783, line: 201, baseType: !348, size: 64, offset: 1344)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1006, file: !783, line: 203, baseType: !414, size: 128, offset: 1408)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1006, file: !783, line: 204, baseType: !414, size: 128, offset: 1536)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1006, file: !783, line: 205, baseType: !414, size: 128, offset: 1664)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1006, file: !783, line: 207, baseType: !414, size: 128, offset: 1792)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1006, file: !783, line: 208, baseType: !414, size: 128, offset: 1920)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !1001, file: !783, line: 131, baseType: !1005, size: 64, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1001, file: !783, line: 132, baseType: !414, size: 128, offset: 1088)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1001, file: !783, line: 134, baseType: !389, size: 32, offset: 1216)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !1001, file: !783, line: 135, baseType: !387, size: 16, offset: 1248)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !1001, file: !783, line: 136, baseType: !387, size: 16, offset: 1264)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !1001, file: !783, line: 138, baseType: !414, size: 128, offset: 1280)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1001, file: !783, line: 140, baseType: !414, size: 128, offset: 1408)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1001, file: !783, line: 142, baseType: !1080, size: 320, offset: 1536)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !783, line: 106, size: 320, elements: !1081)
!1081 = !{!1082, !1083, !1084, !1085, !1086, !1087}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1080, file: !783, line: 107, baseType: !414, size: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !1080, file: !783, line: 108, baseType: !389, size: 32, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !1080, file: !783, line: 109, baseType: !389, size: 32, offset: 160)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1080, file: !783, line: 110, baseType: !389, size: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1080, file: !783, line: 110, baseType: !389, size: 32, offset: 224)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !1080, file: !783, line: 111, baseType: !969, size: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !1001, file: !783, line: 144, baseType: !414, size: 128, offset: 1856)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !1001, file: !783, line: 146, baseType: !414, size: 128, offset: 1984)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !1001, file: !783, line: 148, baseType: !414, size: 128, offset: 2112)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !1001, file: !783, line: 150, baseType: !414, size: 128, offset: 2240)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !1001, file: !783, line: 151, baseType: !1093, size: 64, offset: 2368)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !783, line: 310, size: 1344, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1100, !1101, !1102}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1094, file: !783, line: 311, baseType: !1093, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1094, file: !783, line: 311, baseType: !1093, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1094, file: !783, line: 313, baseType: !404, size: 512, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !1094, file: !783, line: 314, baseType: !404, size: 512, offset: 640)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !1094, file: !783, line: 316, baseType: !414, size: 128, offset: 1152)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !1094, file: !783, line: 317, baseType: !389, size: 32, offset: 1280)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1094, file: !783, line: 317, baseType: !389, size: 32, offset: 1312)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !1001, file: !783, line: 152, baseType: !1093, size: 64, offset: 2432)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !1001, file: !783, line: 153, baseType: !1093, size: 64, offset: 2496)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !1001, file: !783, line: 155, baseType: !414, size: 128, offset: 2560)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !1001, file: !783, line: 156, baseType: !969, size: 64, offset: 2688)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !1001, file: !783, line: 158, baseType: !374, size: 8, offset: 2752)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1001, file: !783, line: 159, baseType: !1109, size: 56, offset: 2760)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 56, elements: !1110)
!1110 = !{!1111}
!1111 = !DISubrange(count: 7)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !990, file: !991, line: 124, baseType: !997, size: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !990, file: !991, line: 126, baseType: !1114, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !913, !915}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !990, file: !991, line: 128, baseType: !1118, size: 64, offset: 384)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !1012, !1121, !915, !1188}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !786, line: 203, size: 1280, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1143, !1144, !1145, !1146, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1216, !1217, !1218, !1219}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1122, file: !786, line: 204, baseType: !1121, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1122, file: !786, line: 204, baseType: !1121, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1122, file: !786, line: 206, baseType: !1127, size: 64, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !786, line: 87, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !786, line: 82, size: 256, elements: !1130)
!1130 = !{!1131, !1133, !1134, !1135, !1141, !1142}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1129, file: !786, line: 83, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1129, file: !786, line: 83, baseType: !1132, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !1129, file: !786, line: 83, baseType: !1132, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1129, file: !786, line: 84, baseType: !1136, size: 32, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !927, line: 43, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !927, line: 41, size: 32, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1137, file: !927, line: 42, baseType: !387, size: 16)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1137, file: !927, line: 42, baseType: !387, size: 16, offset: 16)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1129, file: !786, line: 86, baseType: !387, size: 16, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1129, file: !786, line: 86, baseType: !387, size: 16, offset: 240)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1122, file: !786, line: 206, baseType: !1127, size: 64, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1122, file: !786, line: 206, baseType: !1127, size: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1122, file: !786, line: 206, baseType: !1127, size: 64, offset: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !1122, file: !786, line: 207, baseType: !1147, size: 64, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !786, line: 80, baseType: !1013)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !1122, file: !786, line: 209, baseType: !936, size: 128, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1122, file: !786, line: 211, baseType: !374, size: 8, offset: 576)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !1122, file: !786, line: 211, baseType: !374, size: 8, offset: 584)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1122, file: !786, line: 212, baseType: !387, size: 16, offset: 592)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1122, file: !786, line: 212, baseType: !387, size: 16, offset: 608)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !1122, file: !786, line: 214, baseType: !387, size: 16, offset: 624)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1122, file: !786, line: 215, baseType: !387, size: 16, offset: 640)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1122, file: !786, line: 216, baseType: !387, size: 16, offset: 656)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !1122, file: !786, line: 217, baseType: !387, size: 16, offset: 672)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1122, file: !786, line: 219, baseType: !374, size: 8, offset: 688)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1122, file: !786, line: 219, baseType: !374, size: 8, offset: 696)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1122, file: !786, line: 221, baseType: !1161, size: 64, offset: 704)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !991, line: 66, size: 1728, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169, !1175, !1179, !1183, !1184, !1190, !1194, !1198, !1202, !1206, !1207, !1213, !1214, !1215}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1162, file: !991, line: 67, baseType: !1161, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1162, file: !991, line: 67, baseType: !1161, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1162, file: !991, line: 69, baseType: !404, size: 512, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1162, file: !991, line: 70, baseType: !389, size: 32, offset: 640)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !1162, file: !991, line: 71, baseType: !389, size: 32, offset: 672)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !1162, file: !991, line: 74, baseType: !1170, size: 64, offset: 704)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1173, !913}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !324, line: 44, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1162, file: !991, line: 76, baseType: !1176, size: 64, offset: 768)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !1173}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1162, file: !991, line: 79, baseType: !1180, size: 64, offset: 832)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1000, !1121}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1162, file: !991, line: 81, baseType: !1180, size: 64, offset: 896)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1162, file: !991, line: 83, baseType: !1185, size: 64, offset: 960)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{null, !1012, !1121, !1188}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !991, line: 52, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !1162, file: !991, line: 86, baseType: !1191, size: 64, offset: 1024)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !913, !1121}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !1162, file: !991, line: 89, baseType: !1195, size: 64, offset: 1088)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!1173, !1173}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !1162, file: !991, line: 92, baseType: !1199, size: 64, offset: 1152)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{null}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !1162, file: !991, line: 94, baseType: !1203, size: 64, offset: 1216)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !1093}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !1162, file: !991, line: 96, baseType: !1199, size: 64, offset: 1280)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1162, file: !991, line: 99, baseType: !1208, size: 64, offset: 1344)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!389, !913, !799, !1211}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !991, line: 46, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !1162, file: !991, line: 102, baseType: !414, size: 128, offset: 1408)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !1162, file: !991, line: 105, baseType: !414, size: 128, offset: 1536)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !1162, file: !991, line: 110, baseType: !389, size: 32, offset: 1664)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !1122, file: !786, line: 223, baseType: !414, size: 128, offset: 768)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1122, file: !786, line: 224, baseType: !414, size: 128, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1122, file: !786, line: 225, baseType: !414, size: 128, offset: 1024)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !1122, file: !786, line: 227, baseType: !414, size: 128, offset: 1152)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !990, file: !991, line: 130, baseType: !1221, size: 64, offset: 448)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !915}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !990, file: !991, line: 133, baseType: !1225, size: 64, offset: 512)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!348, !348}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !990, file: !991, line: 137, baseType: !1199, size: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !990, file: !991, line: 139, baseType: !1203, size: 64, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !990, file: !991, line: 141, baseType: !1231, size: 64, offset: 704)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !1005, !1121, !915}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !990, file: !991, line: 144, baseType: !1208, size: 64, offset: 768)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !990, file: !991, line: 147, baseType: !414, size: 128, offset: 832)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !990, file: !991, line: 150, baseType: !414, size: 128, offset: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !990, file: !991, line: 153, baseType: !414, size: 128, offset: 1088)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !990, file: !991, line: 156, baseType: !389, size: 32, offset: 1216)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !990, file: !991, line: 156, baseType: !389, size: 32, offset: 1248)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !990, file: !991, line: 158, baseType: !389, size: 32, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !990, file: !991, line: 158, baseType: !389, size: 32, offset: 1312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !990, file: !991, line: 160, baseType: !389, size: 32, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !990, file: !991, line: 162, baseType: !387, size: 16, offset: 1376)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !990, file: !991, line: 162, baseType: !387, size: 16, offset: 1392)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !990, file: !991, line: 164, baseType: !387, size: 16, offset: 1408)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !916, file: !786, line: 255, baseType: !414, size: 128, offset: 1984)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !916, file: !786, line: 256, baseType: !414, size: 128, offset: 2112)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !916, file: !786, line: 257, baseType: !414, size: 128, offset: 2240)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !916, file: !786, line: 258, baseType: !414, size: 128, offset: 2368)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !916, file: !786, line: 259, baseType: !414, size: 128, offset: 2496)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !916, file: !786, line: 260, baseType: !414, size: 128, offset: 2624)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !916, file: !786, line: 261, baseType: !414, size: 128, offset: 2752)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !916, file: !786, line: 263, baseType: !969, size: 64, offset: 2880)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !916, file: !786, line: 265, baseType: !1255, size: 64, offset: 2944)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !916, file: !786, line: 266, baseType: !348, size: 64, offset: 3008)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !688, line: 43, flags: DIFlagFwdDecl)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !688, line: 274, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !688, line: 271, size: 32, elements: !1261)
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1260, file: !688, line: 273, baseType: !7, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !722, file: !695, line: 168, baseType: !1264, size: 64, offset: 4288)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !913, !686, !713}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !722, file: !695, line: 171, baseType: !1268, size: 64, offset: 4352)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{null, !784, !781, !787}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !722, file: !695, line: 173, baseType: !1268, size: 64, offset: 4416)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !722, file: !695, line: 176, baseType: !1273, size: 64, offset: 4480)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1257, !1276, !713, !389, !389}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1278, line: 136, flags: DIFlagFwdDecl)
!1278 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !722, file: !695, line: 179, baseType: !1280, size: 64, offset: 4544)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !686, !713, !1255, !389}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !722, file: !695, line: 181, baseType: !1284, size: 64, offset: 4608)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!389, !713, !389, !389}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !722, file: !695, line: 183, baseType: !1284, size: 64, offset: 4672)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !722, file: !695, line: 185, baseType: !1284, size: 64, offset: 4736)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !722, file: !695, line: 188, baseType: !710, size: 64, offset: 4800)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !722, file: !695, line: 190, baseType: !1291, size: 64, offset: 4864)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !686, !713, !361}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !722, file: !695, line: 193, baseType: !710, size: 64, offset: 4928)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !722, file: !695, line: 195, baseType: !1296, size: 64, offset: 4992)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !713}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !722, file: !695, line: 197, baseType: !1300, size: 64, offset: 5056)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{null, !686, !713, !713}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !722, file: !695, line: 200, baseType: !1304, size: 64, offset: 5120)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{null, !913, !787}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !722, file: !695, line: 201, baseType: !1308, size: 64, offset: 5184)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{null, !787}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !722, file: !695, line: 202, baseType: !1312, size: 64, offset: 5248)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !787, !713}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !722, file: !695, line: 205, baseType: !1316, size: 64, offset: 5312)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!389, !721, !686}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !722, file: !695, line: 207, baseType: !1320, size: 64, offset: 5376)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!389, !713, !686}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !722, file: !695, line: 210, baseType: !710, size: 64, offset: 5440)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !722, file: !695, line: 213, baseType: !1325, size: 64, offset: 5504)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !695, line: 135, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!348, !1329, !713, !1259}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !695, line: 62, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !722, file: !695, line: 214, baseType: !1332, size: 64, offset: 5568)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !695, line: 136, baseType: !852)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !722, file: !695, line: 215, baseType: !1334, size: 64, offset: 5632)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !695, line: 137, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{null, !348, !389, !713, !1338, !1340, !1340}
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !695, line: 63, flags: DIFlagFwdDecl)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !722, file: !695, line: 217, baseType: !1343, size: 64, offset: 5696)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !695, line: 138, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!389, !1347, !713, !1338, !1349, !1349}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !695, line: 64, flags: DIFlagFwdDecl)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !695, line: 66, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !722, file: !695, line: 220, baseType: !827, size: 256, offset: 5760)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !714, file: !688, line: 173, baseType: !404, size: 512, offset: 320)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !714, file: !688, line: 175, baseType: !404, size: 512, offset: 832)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !714, file: !688, line: 176, baseType: !389, size: 32, offset: 1344)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !714, file: !688, line: 177, baseType: !387, size: 16, offset: 1376)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !714, file: !688, line: 177, baseType: !387, size: 16, offset: 1392)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !714, file: !688, line: 178, baseType: !387, size: 16, offset: 1408)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !714, file: !688, line: 178, baseType: !387, size: 16, offset: 1424)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !714, file: !688, line: 179, baseType: !387, size: 16, offset: 1440)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !714, file: !688, line: 179, baseType: !387, size: 16, offset: 1456)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !714, file: !688, line: 180, baseType: !387, size: 16, offset: 1472)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !714, file: !688, line: 181, baseType: !387, size: 16, offset: 1488)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !714, file: !688, line: 182, baseType: !1364, size: 96, offset: 1504)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 96, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 3)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !714, file: !688, line: 184, baseType: !414, size: 128, offset: 1600)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !714, file: !688, line: 184, baseType: !414, size: 128, offset: 1728)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !714, file: !688, line: 185, baseType: !713, size: 64, offset: 1856)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !714, file: !688, line: 186, baseType: !361, size: 64, offset: 1920)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !714, file: !688, line: 187, baseType: !348, size: 64, offset: 1984)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !714, file: !688, line: 188, baseType: !713, size: 64, offset: 2048)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !714, file: !688, line: 189, baseType: !414, size: 128, offset: 2112)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !714, file: !688, line: 191, baseType: !469, size: 32, offset: 2240)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !714, file: !688, line: 191, baseType: !469, size: 32, offset: 2272)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !714, file: !688, line: 192, baseType: !469, size: 32, offset: 2304)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !714, file: !688, line: 192, baseType: !469, size: 32, offset: 2336)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !714, file: !688, line: 193, baseType: !469, size: 32, offset: 2368)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !714, file: !688, line: 194, baseType: !469, size: 32, offset: 2400)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !714, file: !688, line: 194, baseType: !469, size: 32, offset: 2432)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !714, file: !688, line: 196, baseType: !389, size: 32, offset: 2464)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !714, file: !688, line: 198, baseType: !404, size: 512, offset: 2496)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !714, file: !688, line: 199, baseType: !387, size: 16, offset: 3008)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !714, file: !688, line: 199, baseType: !387, size: 16, offset: 3024)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !714, file: !688, line: 200, baseType: !469, size: 32, offset: 3040)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !714, file: !688, line: 200, baseType: !469, size: 32, offset: 3072)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !714, file: !688, line: 202, baseType: !387, size: 16, offset: 3104)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !714, file: !688, line: 202, baseType: !387, size: 16, offset: 3120)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !714, file: !688, line: 203, baseType: !348, size: 64, offset: 3136)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !714, file: !688, line: 204, baseType: !926, size: 128, offset: 3200)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !714, file: !688, line: 205, baseType: !926, size: 128, offset: 3328)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !714, file: !688, line: 206, baseType: !926, size: 128, offset: 3456)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !714, file: !688, line: 215, baseType: !387, size: 16, offset: 3584)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !714, file: !688, line: 215, baseType: !387, size: 16, offset: 3600)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !714, file: !688, line: 216, baseType: !389, size: 32, offset: 3616)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !714, file: !688, line: 217, baseType: !1397, size: 64, offset: 3648)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !688, line: 51, flags: DIFlagFwdDecl)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !694, file: !695, line: 294, baseType: !1400, size: 64, offset: 3264)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{null, !515, !348, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !695, line: 282, baseType: !1404)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{null, !348, !389, !799}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !694, file: !695, line: 296, baseType: !1408, size: 64, offset: 3328)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!389, !913, !693}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !694, file: !695, line: 298, baseType: !1412, size: 64, offset: 3392)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{null, !913, !693, !1415, !1416, !1416}
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !694, file: !695, line: 302, baseType: !1418, size: 64, offset: 3456)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{null, !686, !686}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !694, file: !695, line: 303, baseType: !1418, size: 64, offset: 3520)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !694, file: !695, line: 304, baseType: !1418, size: 64, offset: 3584)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !694, file: !695, line: 307, baseType: !706, size: 64, offset: 3648)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !694, file: !695, line: 309, baseType: !1425, size: 64, offset: 3712)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!389, !686, !870}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !694, file: !695, line: 311, baseType: !710, size: 64, offset: 3776)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !694, file: !695, line: 314, baseType: !827, size: 256, offset: 3840)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !687, file: !688, line: 333, baseType: !404, size: 512, offset: 1088)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !687, file: !688, line: 335, baseType: !796, size: 64, offset: 1600)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !687, file: !688, line: 337, baseType: !1433, size: 64, offset: 1664)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !517, line: 61, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !687, file: !688, line: 338, baseType: !946, size: 64, offset: 1728)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !687, file: !688, line: 340, baseType: !414, size: 128, offset: 1792)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !687, file: !688, line: 340, baseType: !414, size: 128, offset: 1920)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !687, file: !688, line: 342, baseType: !389, size: 32, offset: 2048)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !687, file: !688, line: 342, baseType: !389, size: 32, offset: 2080)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !687, file: !688, line: 343, baseType: !389, size: 32, offset: 2112)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !687, file: !688, line: 345, baseType: !389, size: 32, offset: 2144)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !687, file: !688, line: 346, baseType: !389, size: 32, offset: 2176)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !687, file: !688, line: 347, baseType: !387, size: 16, offset: 2208)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !687, file: !688, line: 348, baseType: !387, size: 16, offset: 2224)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !687, file: !688, line: 349, baseType: !389, size: 32, offset: 2240)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !687, file: !688, line: 351, baseType: !389, size: 32, offset: 2272)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !687, file: !688, line: 353, baseType: !387, size: 16, offset: 2304)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !687, file: !688, line: 354, baseType: !387, size: 16, offset: 2320)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !687, file: !688, line: 355, baseType: !389, size: 32, offset: 2336)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !687, file: !688, line: 357, baseType: !926, size: 128, offset: 2368)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !687, file: !688, line: 363, baseType: !414, size: 128, offset: 2496)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !687, file: !688, line: 363, baseType: !414, size: 128, offset: 2624)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !687, file: !688, line: 368, baseType: !1454, size: 64, offset: 2752)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !695, line: 500, size: 64, elements: !1456)
!1456 = !{!1457}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1455, file: !695, line: 502, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1460, line: 48, baseType: !1461)
!1460 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1460, line: 48, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !687, file: !688, line: 372, baseType: !1259, size: 32, offset: 2816)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !687, file: !688, line: 373, baseType: !389, size: 32, offset: 2848)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !687, file: !688, line: 382, baseType: !1465, size: 64, offset: 2880)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !688, line: 46, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !687, file: !688, line: 385, baseType: !1468, size: 64, offset: 2944)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !348, !469}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !687, file: !688, line: 386, baseType: !1472, size: 64, offset: 3008)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{null, !348, !1255}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !687, file: !688, line: 387, baseType: !1476, size: 64, offset: 3072)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!389, !348}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !687, file: !688, line: 388, baseType: !852, size: 64, offset: 3136)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !687, file: !688, line: 389, baseType: !348, size: 64, offset: 3200)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !687, file: !688, line: 389, baseType: !348, size: 64, offset: 3264)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !687, file: !688, line: 389, baseType: !348, size: 64, offset: 3328)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !687, file: !688, line: 389, baseType: !348, size: 64, offset: 3392)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !614, file: !601, line: 249, baseType: !599, size: 64, offset: 2752)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !614, file: !601, line: 250, baseType: !1486, size: 64, offset: 2816)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !669, line: 77, size: 15424, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1494, !1497, !1500, !1503, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1523, !1524, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1554, !1555, !1556}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1487, file: !669, line: 78, baseType: !354, size: 960)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1487, file: !669, line: 80, baseType: !373, size: 8192, offset: 960)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1487, file: !669, line: 82, baseType: !1492, size: 64, offset: 9152)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !669, line: 43, flags: DIFlagFwdDecl)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1487, file: !669, line: 83, baseType: !1495, size: 64, offset: 9216)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !355, line: 46, flags: DIFlagFwdDecl)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1487, file: !669, line: 86, baseType: !1498, size: 64, offset: 9280)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !669, line: 41, flags: DIFlagFwdDecl)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1487, file: !669, line: 87, baseType: !1501, size: 64, offset: 9344)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !669, line: 44, flags: DIFlagFwdDecl)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1487, file: !669, line: 89, baseType: !1504, size: 512, offset: 9408)
!1504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 512, elements: !1505)
!1505 = !{!1506}
!1506 = !DISubrange(count: 8)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1487, file: !669, line: 90, baseType: !387, size: 16, offset: 9920)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1487, file: !669, line: 90, baseType: !387, size: 16, offset: 9936)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1487, file: !669, line: 92, baseType: !387, size: 16, offset: 9952)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1487, file: !669, line: 92, baseType: !387, size: 16, offset: 9968)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1487, file: !669, line: 93, baseType: !387, size: 16, offset: 9984)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1487, file: !669, line: 93, baseType: !387, size: 16, offset: 10000)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1487, file: !669, line: 94, baseType: !389, size: 32, offset: 10016)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1487, file: !669, line: 97, baseType: !387, size: 16, offset: 10048)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1487, file: !669, line: 97, baseType: !387, size: 16, offset: 10064)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1487, file: !669, line: 98, baseType: !387, size: 16, offset: 10080)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1487, file: !669, line: 98, baseType: !387, size: 16, offset: 10096)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1487, file: !669, line: 99, baseType: !387, size: 16, offset: 10112)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1487, file: !669, line: 99, baseType: !387, size: 16, offset: 10128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1487, file: !669, line: 100, baseType: !7, size: 32, offset: 10144)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1487, file: !669, line: 101, baseType: !1522, size: 64, offset: 10176)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1487, file: !669, line: 103, baseType: !380, size: 64, offset: 10240)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1487, file: !669, line: 104, baseType: !1525, size: 64, offset: 10304)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !355, line: 159, size: 448, elements: !1527)
!1527 = !{!1528, !1530, !1531, !1532, !1533, !1535}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1526, file: !355, line: 161, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !904)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1526, file: !355, line: 162, baseType: !1529, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1526, file: !355, line: 163, baseType: !903, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1526, file: !355, line: 164, baseType: !903, size: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1526, file: !355, line: 165, baseType: !1534, size: 128, offset: 192)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1522, size: 128, elements: !904)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1526, file: !355, line: 166, baseType: !1536, size: 128, offset: 320)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1495, size: 128, elements: !904)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1487, file: !669, line: 107, baseType: !469, size: 32, offset: 10368)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1487, file: !669, line: 108, baseType: !389, size: 32, offset: 10400)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1487, file: !669, line: 109, baseType: !387, size: 16, offset: 10432)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1487, file: !669, line: 110, baseType: !387, size: 16, offset: 10448)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1487, file: !669, line: 113, baseType: !389, size: 32, offset: 10464)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1487, file: !669, line: 113, baseType: !389, size: 32, offset: 10496)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1487, file: !669, line: 114, baseType: !374, size: 8, offset: 10528)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1487, file: !669, line: 114, baseType: !374, size: 8, offset: 10536)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1487, file: !669, line: 115, baseType: !387, size: 16, offset: 10544)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1487, file: !669, line: 116, baseType: !890, size: 128, offset: 10560)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1487, file: !669, line: 119, baseType: !469, size: 32, offset: 10688)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1487, file: !669, line: 119, baseType: !469, size: 32, offset: 10720)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1487, file: !669, line: 122, baseType: !1550, size: 512, offset: 10752)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1278, line: 182, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1278, line: 180, size: 512, elements: !1552)
!1552 = !{!1553}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1551, file: !1278, line: 181, baseType: !404, size: 512)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1487, file: !669, line: 123, baseType: !374, size: 8, offset: 11264)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1487, file: !669, line: 125, baseType: !1109, size: 56, offset: 11272)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1487, file: !669, line: 126, baseType: !1557, size: 4096, offset: 11328)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1558, size: 4096, elements: !1505)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !669, line: 69, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !669, line: 67, size: 512, elements: !1560)
!1560 = !{!1561}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !669, line: 68, baseType: !404, size: 512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !614, file: !601, line: 251, baseType: !1563, size: 64, offset: 2880)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !601, line: 113, size: 6208, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1570, !1571, !1575}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1564, file: !601, line: 114, baseType: !387, size: 16)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1564, file: !601, line: 114, baseType: !387, size: 16, offset: 16)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1564, file: !601, line: 115, baseType: !374, size: 8, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1564, file: !601, line: 115, baseType: !374, size: 8, offset: 40)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1564, file: !601, line: 116, baseType: !374, size: 8, offset: 48)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1564, file: !601, line: 117, baseType: !1572, size: 8, offset: 56)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 8, elements: !1573)
!1573 = !{!1574}
!1574 = !DISubrange(count: 1)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1564, file: !601, line: 119, baseType: !1576, size: 6144, offset: 64)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1577, size: 6144, elements: !1586)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !601, line: 109, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !601, line: 106, size: 192, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1578, file: !601, line: 107, baseType: !469, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1578, file: !601, line: 107, baseType: !469, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1578, file: !601, line: 107, baseType: !469, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1578, file: !601, line: 107, baseType: !469, size: 32, offset: 96)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1578, file: !601, line: 107, baseType: !469, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1578, file: !601, line: 108, baseType: !389, size: 32, offset: 160)
!1586 = !{!1587}
!1587 = !DISubrange(count: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !614, file: !601, line: 252, baseType: !1589, size: 64, offset: 2944)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !601, line: 122, size: 1600, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1598, !1601, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1590, file: !601, line: 123, baseType: !522, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1590, file: !601, line: 124, baseType: !1486, size: 64, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1590, file: !601, line: 125, baseType: !1595, size: 384, offset: 128)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 384, elements: !1596)
!1596 = !{!1597}
!1597 = !DISubrange(count: 6)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1590, file: !601, line: 126, baseType: !1599, size: 512, offset: 512)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 512, elements: !1600)
!1600 = !{!892, !892}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1590, file: !601, line: 127, baseType: !1602, size: 288, offset: 1024)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 288, elements: !1603)
!1603 = !{!1366, !1366}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1590, file: !601, line: 128, baseType: !387, size: 16, offset: 1312)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1590, file: !601, line: 128, baseType: !387, size: 16, offset: 1328)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1590, file: !601, line: 129, baseType: !469, size: 32, offset: 1344)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1590, file: !601, line: 129, baseType: !469, size: 32, offset: 1376)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1590, file: !601, line: 130, baseType: !469, size: 32, offset: 1408)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1590, file: !601, line: 131, baseType: !7, size: 32, offset: 1440)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1590, file: !601, line: 132, baseType: !387, size: 16, offset: 1472)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1590, file: !601, line: 132, baseType: !387, size: 16, offset: 1488)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1590, file: !601, line: 133, baseType: !389, size: 32, offset: 1504)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1590, file: !601, line: 133, baseType: !389, size: 32, offset: 1536)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1590, file: !601, line: 134, baseType: !387, size: 16, offset: 1568)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1590, file: !601, line: 134, baseType: !387, size: 16, offset: 1584)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !614, file: !601, line: 253, baseType: !1525, size: 64, offset: 3008)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !614, file: !601, line: 254, baseType: !1618, size: 64, offset: 3072)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !601, line: 137, size: 832, elements: !1620)
!1620 = !{!1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1641, !1642, !1643, !1644, !1645, !1646}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1619, file: !601, line: 138, baseType: !387, size: 16)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1619, file: !601, line: 140, baseType: !387, size: 16, offset: 16)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1619, file: !601, line: 141, baseType: !469, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1619, file: !601, line: 142, baseType: !469, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1619, file: !601, line: 143, baseType: !387, size: 16, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1619, file: !601, line: 144, baseType: !387, size: 16, offset: 112)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1619, file: !601, line: 145, baseType: !389, size: 32, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1619, file: !601, line: 147, baseType: !389, size: 32, offset: 160)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1619, file: !601, line: 149, baseType: !522, size: 64, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1619, file: !601, line: 150, baseType: !389, size: 32, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1619, file: !601, line: 151, baseType: !387, size: 16, offset: 288)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1619, file: !601, line: 152, baseType: !387, size: 16, offset: 304)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1619, file: !601, line: 154, baseType: !348, size: 64, offset: 320)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1619, file: !601, line: 155, baseType: !596, size: 64, offset: 384)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1619, file: !601, line: 157, baseType: !469, size: 32, offset: 448)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1619, file: !601, line: 158, baseType: !387, size: 16, offset: 480)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1619, file: !601, line: 159, baseType: !387, size: 16, offset: 496)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1619, file: !601, line: 160, baseType: !387, size: 16, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1619, file: !601, line: 161, baseType: !1640, size: 48, offset: 528)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !387, size: 48, elements: !1365)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1619, file: !601, line: 162, baseType: !469, size: 32, offset: 576)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1619, file: !601, line: 164, baseType: !469, size: 32, offset: 608)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1619, file: !601, line: 164, baseType: !469, size: 32, offset: 640)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1619, file: !601, line: 164, baseType: !469, size: 32, offset: 672)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1619, file: !601, line: 165, baseType: !1563, size: 64, offset: 704)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1619, file: !601, line: 167, baseType: !1647, size: 64, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1278, line: 72, size: 3072, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1681, !1682, !1683, !1684}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1648, file: !1278, line: 73, baseType: !389, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1648, file: !1278, line: 73, baseType: !389, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1648, file: !1278, line: 74, baseType: !389, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1648, file: !1278, line: 75, baseType: !389, size: 32, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1648, file: !1278, line: 77, baseType: !926, size: 128, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1648, file: !1278, line: 77, baseType: !926, size: 128, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1648, file: !1278, line: 79, baseType: !1657, size: 2304, offset: 384)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 2304, elements: !891)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1278, line: 67, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1278, line: 55, size: 576, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1677, !1678, !1679, !1680}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1659, file: !1278, line: 56, baseType: !387, size: 16)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1659, file: !1278, line: 56, baseType: !387, size: 16, offset: 16)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1659, file: !1278, line: 58, baseType: !469, size: 32, offset: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1659, file: !1278, line: 59, baseType: !469, size: 32, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1659, file: !1278, line: 59, baseType: !469, size: 32, offset: 96)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1659, file: !1278, line: 60, baseType: !946, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1659, file: !1278, line: 60, baseType: !946, size: 64, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1659, file: !1278, line: 61, baseType: !1669, size: 64, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1278, line: 47, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1278, line: 44, size: 96, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1671, file: !1278, line: 45, baseType: !469, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1671, file: !1278, line: 45, baseType: !469, size: 32, offset: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1671, file: !1278, line: 46, baseType: !387, size: 16, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1671, file: !1278, line: 46, baseType: !387, size: 16, offset: 80)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1659, file: !1278, line: 62, baseType: !1669, size: 64, offset: 320)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1659, file: !1278, line: 64, baseType: !1669, size: 64, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1659, file: !1278, line: 65, baseType: !946, size: 64, offset: 448)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1659, file: !1278, line: 66, baseType: !946, size: 64, offset: 512)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1648, file: !1278, line: 80, baseType: !1364, size: 96, offset: 2688)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1648, file: !1278, line: 80, baseType: !1364, size: 96, offset: 2784)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1648, file: !1278, line: 81, baseType: !1364, size: 96, offset: 2880)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1648, file: !1278, line: 83, baseType: !1364, size: 96, offset: 2976)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !614, file: !601, line: 255, baseType: !1686, size: 64, offset: 3136)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !601, line: 170, size: 8704, elements: !1688)
!1688 = !{!1689, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1687, file: !601, line: 171, baseType: !1690, size: 96)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 96, elements: !1365)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1687, file: !601, line: 172, baseType: !389, size: 32, offset: 96)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1687, file: !601, line: 173, baseType: !387, size: 16, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1687, file: !601, line: 174, baseType: !387, size: 16, offset: 144)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1687, file: !601, line: 175, baseType: !387, size: 16, offset: 160)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1687, file: !601, line: 176, baseType: !387, size: 16, offset: 176)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1687, file: !601, line: 177, baseType: !387, size: 16, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1687, file: !601, line: 178, baseType: !387, size: 16, offset: 208)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1687, file: !601, line: 179, baseType: !389, size: 32, offset: 224)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1687, file: !601, line: 181, baseType: !522, size: 64, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1687, file: !601, line: 182, baseType: !469, size: 32, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1687, file: !601, line: 183, baseType: !389, size: 32, offset: 352)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1687, file: !601, line: 184, baseType: !373, size: 8192, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1687, file: !601, line: 187, baseType: !596, size: 64, offset: 8576)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1687, file: !601, line: 188, baseType: !389, size: 32, offset: 8640)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1687, file: !601, line: 189, baseType: !389, size: 32, offset: 8672)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !614, file: !601, line: 256, baseType: !1707, size: 64, offset: 3200)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !601, line: 193, size: 640, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1708, file: !601, line: 194, baseType: !522, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1708, file: !601, line: 195, baseType: !404, size: 512, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1708, file: !601, line: 197, baseType: !389, size: 32, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1708, file: !601, line: 198, baseType: !389, size: 32, offset: 608)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !614, file: !601, line: 258, baseType: !374, size: 8, offset: 3264)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !614, file: !601, line: 259, baseType: !1109, size: 56, offset: 3272)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !605, file: !601, line: 62, baseType: !404, size: 512, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !605, file: !601, line: 64, baseType: !374, size: 8, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !605, file: !601, line: 64, baseType: !374, size: 8, offset: 712)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !605, file: !601, line: 64, baseType: !374, size: 8, offset: 720)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !605, file: !601, line: 64, baseType: !374, size: 8, offset: 728)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !605, file: !601, line: 65, baseType: !1364, size: 96, offset: 736)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !605, file: !601, line: 65, baseType: !1364, size: 96, offset: 832)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !605, file: !601, line: 65, baseType: !469, size: 32, offset: 928)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !605, file: !601, line: 67, baseType: !387, size: 16, offset: 960)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !605, file: !601, line: 67, baseType: !387, size: 16, offset: 976)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !605, file: !601, line: 67, baseType: !387, size: 16, offset: 992)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !605, file: !601, line: 67, baseType: !387, size: 16, offset: 1008)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !605, file: !601, line: 68, baseType: !387, size: 16, offset: 1024)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !605, file: !601, line: 68, baseType: !387, size: 16, offset: 1040)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !605, file: !601, line: 69, baseType: !374, size: 8, offset: 1056)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !605, file: !601, line: 69, baseType: !1109, size: 56, offset: 1064)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !605, file: !601, line: 70, baseType: !469, size: 32, offset: 1120)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !605, file: !601, line: 70, baseType: !469, size: 32, offset: 1152)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !605, file: !601, line: 70, baseType: !469, size: 32, offset: 1184)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !605, file: !601, line: 70, baseType: !469, size: 32, offset: 1216)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !605, file: !601, line: 71, baseType: !469, size: 32, offset: 1248)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !605, file: !601, line: 71, baseType: !469, size: 32, offset: 1280)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !605, file: !601, line: 74, baseType: !469, size: 32, offset: 1312)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !605, file: !601, line: 74, baseType: !469, size: 32, offset: 1344)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !605, file: !601, line: 77, baseType: !469, size: 32, offset: 1376)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !605, file: !601, line: 77, baseType: !469, size: 32, offset: 1408)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !605, file: !601, line: 77, baseType: !469, size: 32, offset: 1440)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !605, file: !601, line: 78, baseType: !469, size: 32, offset: 1472)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !605, file: !601, line: 78, baseType: !469, size: 32, offset: 1504)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !605, file: !601, line: 78, baseType: !469, size: 32, offset: 1536)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !605, file: !601, line: 79, baseType: !469, size: 32, offset: 1568)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !605, file: !601, line: 79, baseType: !469, size: 32, offset: 1600)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !605, file: !601, line: 79, baseType: !469, size: 32, offset: 1632)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !605, file: !601, line: 79, baseType: !469, size: 32, offset: 1664)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !605, file: !601, line: 80, baseType: !469, size: 32, offset: 1696)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !605, file: !601, line: 80, baseType: !469, size: 32, offset: 1728)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !605, file: !601, line: 80, baseType: !469, size: 32, offset: 1760)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !605, file: !601, line: 81, baseType: !469, size: 32, offset: 1792)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !605, file: !601, line: 81, baseType: !469, size: 32, offset: 1824)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !605, file: !601, line: 81, baseType: !469, size: 32, offset: 1856)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !605, file: !601, line: 82, baseType: !469, size: 32, offset: 1888)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !605, file: !601, line: 82, baseType: !469, size: 32, offset: 1920)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !605, file: !601, line: 82, baseType: !469, size: 32, offset: 1952)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !605, file: !601, line: 85, baseType: !469, size: 32, offset: 1984)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !605, file: !601, line: 85, baseType: !469, size: 32, offset: 2016)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !605, file: !601, line: 85, baseType: !469, size: 32, offset: 2048)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !605, file: !601, line: 85, baseType: !469, size: 32, offset: 2080)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !605, file: !601, line: 86, baseType: !469, size: 32, offset: 2112)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !605, file: !601, line: 86, baseType: !469, size: 32, offset: 2144)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !605, file: !601, line: 86, baseType: !469, size: 32, offset: 2176)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !605, file: !601, line: 86, baseType: !469, size: 32, offset: 2208)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !605, file: !601, line: 87, baseType: !469, size: 32, offset: 2240)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !605, file: !601, line: 87, baseType: !469, size: 32, offset: 2272)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !605, file: !601, line: 87, baseType: !469, size: 32, offset: 2304)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !605, file: !601, line: 87, baseType: !469, size: 32, offset: 2336)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !605, file: !601, line: 90, baseType: !469, size: 32, offset: 2368)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !605, file: !601, line: 93, baseType: !469, size: 32, offset: 2400)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !605, file: !601, line: 93, baseType: !469, size: 32, offset: 2432)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !605, file: !601, line: 93, baseType: !469, size: 32, offset: 2464)
!1775 = !{!1776}
!1776 = !DISubrange(count: 18)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !525, file: !526, line: 123, baseType: !387, size: 16, offset: 4032)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !525, file: !526, line: 123, baseType: !387, size: 16, offset: 4048)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !525, file: !526, line: 123, baseType: !903, size: 32, offset: 4064)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !525, file: !526, line: 126, baseType: !1525, size: 64, offset: 4096)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !525, file: !526, line: 129, baseType: !686, size: 64, offset: 4160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !516, file: !517, line: 1223, baseType: !515, size: 64, offset: 1152)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !516, file: !517, line: 1225, baseType: !414, size: 128, offset: 1216)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !516, file: !517, line: 1226, baseType: !1785, size: 64, offset: 1344)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !517, line: 69, size: 320, elements: !1787)
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1786, file: !517, line: 70, baseType: !1785, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1786, file: !517, line: 70, baseType: !1785, size: 64, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1786, file: !517, line: 71, baseType: !7, size: 32, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1786, file: !517, line: 71, baseType: !7, size: 32, offset: 160)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1786, file: !517, line: 72, baseType: !389, size: 32, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1786, file: !517, line: 73, baseType: !387, size: 16, offset: 224)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1786, file: !517, line: 73, baseType: !387, size: 16, offset: 240)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1786, file: !517, line: 74, baseType: !522, size: 64, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !516, file: !517, line: 1227, baseType: !522, size: 64, offset: 1408)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !516, file: !517, line: 1229, baseType: !1364, size: 96, offset: 1472)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !516, file: !517, line: 1230, baseType: !1364, size: 96, offset: 1568)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !516, file: !517, line: 1231, baseType: !1364, size: 96, offset: 1664)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !516, file: !517, line: 1231, baseType: !1364, size: 96, offset: 1760)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !516, file: !517, line: 1233, baseType: !7, size: 32, offset: 1856)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !516, file: !517, line: 1234, baseType: !389, size: 32, offset: 1888)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !516, file: !517, line: 1235, baseType: !7, size: 32, offset: 1920)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !516, file: !517, line: 1237, baseType: !387, size: 16, offset: 1952)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !516, file: !517, line: 1239, baseType: !374, size: 8, offset: 1968)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !516, file: !517, line: 1240, baseType: !1572, size: 8, offset: 1976)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !516, file: !517, line: 1242, baseType: !686, size: 64, offset: 1984)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !516, file: !517, line: 1244, baseType: !1809, size: 64, offset: 2048)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !517, line: 59, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !516, file: !517, line: 1246, baseType: !1812, size: 64, offset: 2112)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !517, line: 1067, size: 5184, elements: !1814)
!1814 = !{!1815, !1962, !1963, !1977, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1999, !2015, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2126}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1813, file: !517, line: 1068, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !517, line: 934, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !517, line: 925, size: 576, elements: !1819)
!1819 = !{!1820, !1944, !1945, !1946, !1947, !1948, !1961}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1818, file: !517, line: 926, baseType: !1821, size: 320)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !517, line: 830, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !517, line: 813, size: 320, elements: !1823)
!1823 = !{!1824, !1928, !1937, !1938, !1941, !1942, !1943}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1822, file: !517, line: 814, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1827, line: 54, size: 16448, elements: !1828)
!1827 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1828 = !{!1829, !1830, !1837, !1838, !1839, !1840, !1841, !1842, !1845, !1846, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1826, file: !1827, line: 55, baseType: !354, size: 960)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1826, file: !1827, line: 57, baseType: !1831, size: 192, offset: 960)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1827, line: 48, size: 192, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1831, file: !1827, line: 49, baseType: !1486, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1831, file: !1827, line: 50, baseType: !946, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1831, file: !1827, line: 51, baseType: !469, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1831, file: !1827, line: 51, baseType: !469, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1826, file: !1827, line: 58, baseType: !1647, size: 64, offset: 1152)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1826, file: !1827, line: 59, baseType: !605, size: 2496, offset: 1216)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1826, file: !1827, line: 60, baseType: !605, size: 2496, offset: 3712)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1826, file: !1827, line: 62, baseType: !1825, size: 64, offset: 6208)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1826, file: !1827, line: 64, baseType: !1276, size: 64, offset: 6272)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1826, file: !1827, line: 65, baseType: !1843, size: 64, offset: 6336)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !355, line: 167, baseType: !1526)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1826, file: !1827, line: 66, baseType: !1563, size: 64, offset: 6400)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1826, file: !1827, line: 67, baseType: !1847, size: 64, offset: 6464)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1827, line: 166, size: 1088, elements: !1849)
!1849 = !{!1850, !1851, !1879, !1880}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1848, file: !1827, line: 168, baseType: !354, size: 960)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1848, file: !1827, line: 169, baseType: !1852, size: 64, offset: 960)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1827, line: 164, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1827, line: 160, size: 608, elements: !1855)
!1855 = !{!1856, !1878}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1854, file: !1827, line: 162, baseType: !1857, size: 576)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1858, line: 133, baseType: !1859)
!1858 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1858, line: 117, size: 576, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1859, file: !1858, line: 118, baseType: !1602, size: 288)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1859, file: !1858, line: 119, baseType: !469, size: 32, offset: 288)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1859, file: !1858, line: 119, baseType: !469, size: 32, offset: 320)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1859, file: !1858, line: 119, baseType: !469, size: 32, offset: 352)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1859, file: !1858, line: 121, baseType: !374, size: 8, offset: 384)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1859, file: !1858, line: 123, baseType: !374, size: 8, offset: 392)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1859, file: !1858, line: 123, baseType: !374, size: 8, offset: 400)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1859, file: !1858, line: 124, baseType: !374, size: 8, offset: 408)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1859, file: !1858, line: 124, baseType: !374, size: 8, offset: 416)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1859, file: !1858, line: 124, baseType: !374, size: 8, offset: 424)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1859, file: !1858, line: 126, baseType: !374, size: 8, offset: 432)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1859, file: !1858, line: 128, baseType: !374, size: 8, offset: 440)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1859, file: !1858, line: 129, baseType: !469, size: 32, offset: 448)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1859, file: !1858, line: 130, baseType: !469, size: 32, offset: 480)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1859, file: !1858, line: 130, baseType: !469, size: 32, offset: 512)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1859, file: !1858, line: 132, baseType: !1877, size: 32, offset: 544)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 32, elements: !891)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1854, file: !1827, line: 163, baseType: !469, size: 32, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1848, file: !1827, line: 170, baseType: !389, size: 32, offset: 1024)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1848, file: !1827, line: 171, baseType: !389, size: 32, offset: 1056)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1826, file: !1827, line: 69, baseType: !373, size: 8192, offset: 6528)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1826, file: !1827, line: 71, baseType: !469, size: 32, offset: 14720)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1826, file: !1827, line: 73, baseType: !387, size: 16, offset: 14752)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1826, file: !1827, line: 74, baseType: !387, size: 16, offset: 14768)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1826, file: !1827, line: 75, baseType: !469, size: 32, offset: 14784)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1826, file: !1827, line: 76, baseType: !389, size: 32, offset: 14816)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1826, file: !1827, line: 77, baseType: !389, size: 32, offset: 14848)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1826, file: !1827, line: 78, baseType: !389, size: 32, offset: 14880)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1826, file: !1827, line: 79, baseType: !469, size: 32, offset: 14912)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1826, file: !1827, line: 80, baseType: !389, size: 32, offset: 14944)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1826, file: !1827, line: 81, baseType: !389, size: 32, offset: 14976)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1826, file: !1827, line: 82, baseType: !389, size: 32, offset: 15008)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1826, file: !1827, line: 83, baseType: !389, size: 32, offset: 15040)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1826, file: !1827, line: 84, baseType: !469, size: 32, offset: 15072)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1826, file: !1827, line: 85, baseType: !469, size: 32, offset: 15104)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1826, file: !1827, line: 87, baseType: !1364, size: 96, offset: 15136)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1826, file: !1827, line: 88, baseType: !469, size: 32, offset: 15232)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1826, file: !1827, line: 90, baseType: !1364, size: 96, offset: 15264)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1826, file: !1827, line: 92, baseType: !389, size: 32, offset: 15360)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1826, file: !1827, line: 94, baseType: !469, size: 32, offset: 15392)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1826, file: !1827, line: 96, baseType: !469, size: 32, offset: 15424)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1826, file: !1827, line: 97, baseType: !389, size: 32, offset: 15456)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1826, file: !1827, line: 98, baseType: !389, size: 32, offset: 15488)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1826, file: !1827, line: 99, baseType: !389, size: 32, offset: 15520)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1826, file: !1827, line: 101, baseType: !374, size: 8, offset: 15552)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1826, file: !1827, line: 102, baseType: !374, size: 8, offset: 15560)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1826, file: !1827, line: 103, baseType: !374, size: 8, offset: 15568)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1826, file: !1827, line: 104, baseType: !374, size: 8, offset: 15576)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1826, file: !1827, line: 106, baseType: !469, size: 32, offset: 15584)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1826, file: !1827, line: 108, baseType: !469, size: 32, offset: 15616)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1826, file: !1827, line: 110, baseType: !469, size: 32, offset: 15648)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1826, file: !1827, line: 111, baseType: !469, size: 32, offset: 15680)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1826, file: !1827, line: 113, baseType: !469, size: 32, offset: 15712)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1826, file: !1827, line: 116, baseType: !389, size: 32, offset: 15744)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1826, file: !1827, line: 117, baseType: !389, size: 32, offset: 15776)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1826, file: !1827, line: 118, baseType: !389, size: 32, offset: 15808)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1826, file: !1827, line: 120, baseType: !469, size: 32, offset: 15840)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1826, file: !1827, line: 123, baseType: !469, size: 32, offset: 15872)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1826, file: !1827, line: 124, baseType: !389, size: 32, offset: 15904)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1826, file: !1827, line: 125, baseType: !389, size: 32, offset: 15936)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1826, file: !1827, line: 128, baseType: !469, size: 32, offset: 15968)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1826, file: !1827, line: 130, baseType: !1364, size: 96, offset: 16000)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1826, file: !1827, line: 131, baseType: !1364, size: 96, offset: 16096)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1826, file: !1827, line: 133, baseType: !946, size: 64, offset: 16192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1826, file: !1827, line: 134, baseType: !946, size: 64, offset: 16256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1826, file: !1827, line: 136, baseType: !946, size: 64, offset: 16320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1826, file: !1827, line: 137, baseType: !946, size: 64, offset: 16384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1822, file: !517, line: 815, baseType: !1929, size: 64, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1827, line: 148, size: 1280, elements: !1931)
!1931 = !{!1932, !1933, !1934, !1935, !1936}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1930, file: !1827, line: 150, baseType: !354, size: 960)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1930, file: !1827, line: 153, baseType: !414, size: 128, offset: 960)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1930, file: !1827, line: 154, baseType: !414, size: 128, offset: 1088)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1930, file: !1827, line: 156, baseType: !389, size: 32, offset: 1216)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1930, file: !1827, line: 157, baseType: !389, size: 32, offset: 1248)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1822, file: !517, line: 818, baseType: !348, size: 64, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1822, file: !517, line: 819, baseType: !1939, size: 32, offset: 192)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1940, size: 32, elements: !891)
!1940 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1822, file: !517, line: 822, baseType: !389, size: 32, offset: 224)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1822, file: !517, line: 826, baseType: !389, size: 32, offset: 256)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1822, file: !517, line: 829, baseType: !389, size: 32, offset: 288)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1818, file: !517, line: 928, baseType: !387, size: 16, offset: 320)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1818, file: !517, line: 928, baseType: !387, size: 16, offset: 336)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1818, file: !517, line: 929, baseType: !389, size: 32, offset: 352)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1818, file: !517, line: 930, baseType: !1522, size: 64, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1818, file: !517, line: 931, baseType: !1949, size: 64, offset: 448)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1951, line: 59, size: 128, elements: !1952)
!1951 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1952 = !{!1953, !1959, !1960}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1950, file: !1951, line: 60, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1951, line: 54, size: 64, elements: !1956)
!1956 = !{!1957, !1958}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1955, file: !1951, line: 55, baseType: !389, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1955, file: !1951, line: 56, baseType: !469, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1950, file: !1951, line: 61, baseType: !389, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1950, file: !1951, line: 62, baseType: !389, size: 32, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1818, file: !517, line: 933, baseType: !348, size: 64, offset: 512)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1813, file: !517, line: 1069, baseType: !1816, size: 64, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1813, file: !517, line: 1070, baseType: !1964, size: 64, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !517, line: 916, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !517, line: 891, size: 704, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1966, file: !517, line: 892, baseType: !1821, size: 320)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1966, file: !517, line: 896, baseType: !389, size: 32, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1966, file: !517, line: 900, baseType: !1690, size: 96, offset: 352)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1966, file: !517, line: 903, baseType: !469, size: 32, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1966, file: !517, line: 906, baseType: !389, size: 32, offset: 480)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1966, file: !517, line: 909, baseType: !469, size: 32, offset: 512)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1966, file: !517, line: 912, baseType: !469, size: 32, offset: 544)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1966, file: !517, line: 914, baseType: !522, size: 64, offset: 576)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1966, file: !517, line: 915, baseType: !348, size: 64, offset: 640)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1813, file: !517, line: 1071, baseType: !1978, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !517, line: 920, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !517, line: 918, size: 320, elements: !1981)
!1981 = !{!1982}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1980, file: !517, line: 919, baseType: !1821, size: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1813, file: !517, line: 1075, baseType: !469, size: 32, offset: 256)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1813, file: !517, line: 1077, baseType: !469, size: 32, offset: 288)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1813, file: !517, line: 1078, baseType: !469, size: 32, offset: 320)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1813, file: !517, line: 1079, baseType: !387, size: 16, offset: 352)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1813, file: !517, line: 1082, baseType: !387, size: 16, offset: 368)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1813, file: !517, line: 1085, baseType: !374, size: 8, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1813, file: !517, line: 1086, baseType: !374, size: 8, offset: 392)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1813, file: !517, line: 1087, baseType: !374, size: 8, offset: 400)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1813, file: !517, line: 1088, baseType: !374, size: 8, offset: 408)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1813, file: !517, line: 1090, baseType: !469, size: 32, offset: 416)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1813, file: !517, line: 1093, baseType: !387, size: 16, offset: 448)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1813, file: !517, line: 1096, baseType: !374, size: 8, offset: 464)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1813, file: !517, line: 1098, baseType: !1996, size: 40, offset: 472)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 40, elements: !1997)
!1997 = !{!1998}
!1998 = !DISubrange(count: 5)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1813, file: !517, line: 1101, baseType: !2000, size: 832, offset: 512)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !517, line: 836, size: 832, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2000, file: !517, line: 837, baseType: !1821, size: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2000, file: !517, line: 839, baseType: !387, size: 16, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2000, file: !517, line: 839, baseType: !387, size: 16, offset: 336)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2000, file: !517, line: 842, baseType: !387, size: 16, offset: 352)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2000, file: !517, line: 842, baseType: !387, size: 16, offset: 368)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2000, file: !517, line: 843, baseType: !903, size: 32, offset: 384)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2000, file: !517, line: 845, baseType: !389, size: 32, offset: 416)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2000, file: !517, line: 847, baseType: !348, size: 64, offset: 448)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2000, file: !517, line: 848, baseType: !1486, size: 64, offset: 512)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2000, file: !517, line: 849, baseType: !1486, size: 64, offset: 576)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2000, file: !517, line: 850, baseType: !1486, size: 64, offset: 640)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2000, file: !517, line: 851, baseType: !1364, size: 96, offset: 704)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2000, file: !517, line: 852, baseType: !469, size: 32, offset: 800)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1813, file: !517, line: 1104, baseType: !2016, size: 1344, offset: 1344)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !517, line: 867, size: 1344, elements: !2017)
!2017 = !{!2018, !2019, !2020, !2021, !2022, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2016, file: !517, line: 868, baseType: !387, size: 16)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2016, file: !517, line: 869, baseType: !387, size: 16, offset: 16)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2016, file: !517, line: 870, baseType: !387, size: 16, offset: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2016, file: !517, line: 871, baseType: !387, size: 16, offset: 48)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2016, file: !517, line: 873, baseType: !2023, size: 896, offset: 64)
!2023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2024, size: 896, elements: !1110)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !517, line: 864, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !517, line: 859, size: 128, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031, !2032}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2025, file: !517, line: 860, baseType: !387, size: 16)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2025, file: !517, line: 861, baseType: !387, size: 16, offset: 16)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2025, file: !517, line: 861, baseType: !387, size: 16, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2025, file: !517, line: 861, baseType: !387, size: 16, offset: 48)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2025, file: !517, line: 862, baseType: !389, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2025, file: !517, line: 863, baseType: !469, size: 32, offset: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2016, file: !517, line: 874, baseType: !348, size: 64, offset: 960)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2016, file: !517, line: 876, baseType: !469, size: 32, offset: 1024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2016, file: !517, line: 876, baseType: !469, size: 32, offset: 1056)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2016, file: !517, line: 878, baseType: !389, size: 32, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2016, file: !517, line: 879, baseType: !389, size: 32, offset: 1120)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2016, file: !517, line: 881, baseType: !389, size: 32, offset: 1152)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2016, file: !517, line: 881, baseType: !389, size: 32, offset: 1184)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2016, file: !517, line: 883, baseType: !515, size: 64, offset: 1216)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2016, file: !517, line: 884, baseType: !522, size: 64, offset: 1280)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1813, file: !517, line: 1107, baseType: !469, size: 32, offset: 2688)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1813, file: !517, line: 1110, baseType: !469, size: 32, offset: 2720)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1813, file: !517, line: 1113, baseType: !387, size: 16, offset: 2752)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1813, file: !517, line: 1113, baseType: !387, size: 16, offset: 2768)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1813, file: !517, line: 1116, baseType: !374, size: 8, offset: 2784)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1813, file: !517, line: 1117, baseType: !1572, size: 8, offset: 2792)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1813, file: !517, line: 1120, baseType: !387, size: 16, offset: 2800)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1813, file: !517, line: 1121, baseType: !469, size: 32, offset: 2816)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1813, file: !517, line: 1122, baseType: !469, size: 32, offset: 2848)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1813, file: !517, line: 1123, baseType: !469, size: 32, offset: 2880)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1813, file: !517, line: 1124, baseType: !469, size: 32, offset: 2912)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1813, file: !517, line: 1125, baseType: !469, size: 32, offset: 2944)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1813, file: !517, line: 1126, baseType: !469, size: 32, offset: 2976)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1813, file: !517, line: 1127, baseType: !469, size: 32, offset: 3008)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1813, file: !517, line: 1128, baseType: !469, size: 32, offset: 3040)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1813, file: !517, line: 1129, baseType: !469, size: 32, offset: 3072)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1813, file: !517, line: 1130, baseType: !469, size: 32, offset: 3104)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1813, file: !517, line: 1131, baseType: !387, size: 16, offset: 3136)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1813, file: !517, line: 1132, baseType: !374, size: 8, offset: 3152)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1813, file: !517, line: 1133, baseType: !374, size: 8, offset: 3160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1813, file: !517, line: 1134, baseType: !2063, size: 24, offset: 3168)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 24, elements: !1365)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1813, file: !517, line: 1135, baseType: !374, size: 8, offset: 3192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1813, file: !517, line: 1138, baseType: !522, size: 64, offset: 3200)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1813, file: !517, line: 1139, baseType: !374, size: 8, offset: 3264)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1813, file: !517, line: 1140, baseType: !374, size: 8, offset: 3272)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1813, file: !517, line: 1141, baseType: !374, size: 8, offset: 3280)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1813, file: !517, line: 1142, baseType: !374, size: 8, offset: 3288)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1813, file: !517, line: 1143, baseType: !374, size: 8, offset: 3296)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1813, file: !517, line: 1144, baseType: !2072, size: 64, offset: 3304)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 64, elements: !1505)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1813, file: !517, line: 1145, baseType: !2072, size: 64, offset: 3368)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1813, file: !517, line: 1148, baseType: !374, size: 8, offset: 3432)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1813, file: !517, line: 1149, baseType: !374, size: 8, offset: 3440)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1813, file: !517, line: 1152, baseType: !374, size: 8, offset: 3448)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1813, file: !517, line: 1152, baseType: !374, size: 8, offset: 3456)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1813, file: !517, line: 1153, baseType: !374, size: 8, offset: 3464)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1813, file: !517, line: 1154, baseType: !387, size: 16, offset: 3472)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1813, file: !517, line: 1154, baseType: !387, size: 16, offset: 3488)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1813, file: !517, line: 1155, baseType: !387, size: 16, offset: 3504)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1813, file: !517, line: 1155, baseType: !387, size: 16, offset: 3520)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1813, file: !517, line: 1156, baseType: !374, size: 8, offset: 3536)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1813, file: !517, line: 1157, baseType: !374, size: 8, offset: 3544)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1813, file: !517, line: 1159, baseType: !374, size: 8, offset: 3552)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1813, file: !517, line: 1160, baseType: !374, size: 8, offset: 3560)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1813, file: !517, line: 1161, baseType: !374, size: 8, offset: 3568)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1813, file: !517, line: 1162, baseType: !374, size: 8, offset: 3576)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1813, file: !517, line: 1165, baseType: !389, size: 32, offset: 3584)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1813, file: !517, line: 1166, baseType: !389, size: 32, offset: 3616)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1813, file: !517, line: 1167, baseType: !389, size: 32, offset: 3648)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1813, file: !517, line: 1168, baseType: !389, size: 32, offset: 3680)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1813, file: !517, line: 1171, baseType: !387, size: 16, offset: 3712)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1813, file: !517, line: 1171, baseType: !387, size: 16, offset: 3728)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1813, file: !517, line: 1172, baseType: !389, size: 32, offset: 3744)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1813, file: !517, line: 1173, baseType: !469, size: 32, offset: 3776)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1813, file: !517, line: 1174, baseType: !469, size: 32, offset: 3808)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1813, file: !517, line: 1177, baseType: !2099, size: 1024, offset: 3840)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !517, line: 963, size: 1024, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2124, !2125}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2099, file: !517, line: 965, baseType: !389, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2099, file: !517, line: 968, baseType: !469, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2099, file: !517, line: 971, baseType: !469, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2099, file: !517, line: 974, baseType: !469, size: 32, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2099, file: !517, line: 977, baseType: !1364, size: 96, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2099, file: !517, line: 979, baseType: !1364, size: 96, offset: 224)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2099, file: !517, line: 982, baseType: !389, size: 32, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2099, file: !517, line: 987, baseType: !946, size: 64, offset: 352)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2099, file: !517, line: 989, baseType: !469, size: 32, offset: 416)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2099, file: !517, line: 994, baseType: !389, size: 32, offset: 448)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2099, file: !517, line: 995, baseType: !389, size: 32, offset: 480)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2099, file: !517, line: 997, baseType: !374, size: 8, offset: 512)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2099, file: !517, line: 998, baseType: !1109, size: 56, offset: 520)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2099, file: !517, line: 1000, baseType: !469, size: 32, offset: 576)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2099, file: !517, line: 1003, baseType: !946, size: 64, offset: 608)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2099, file: !517, line: 1006, baseType: !389, size: 32, offset: 672)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2099, file: !517, line: 1009, baseType: !469, size: 32, offset: 704)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2099, file: !517, line: 1012, baseType: !946, size: 64, offset: 736)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2099, file: !517, line: 1015, baseType: !946, size: 64, offset: 800)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2099, file: !517, line: 1018, baseType: !389, size: 32, offset: 864)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2099, file: !517, line: 1019, baseType: !2122, size: 64, offset: 896)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !517, line: 63, flags: DIFlagFwdDecl)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2099, file: !517, line: 1023, baseType: !469, size: 32, offset: 960)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2099, file: !517, line: 1024, baseType: !389, size: 32, offset: 992)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1813, file: !517, line: 1179, baseType: !2127, size: 320, offset: 4864)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !517, line: 1043, size: 320, elements: !2128)
!2128 = !{!2129, !2130, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2127, file: !517, line: 1044, baseType: !374, size: 8)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2127, file: !517, line: 1045, baseType: !2131, size: 16, offset: 8)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 16, elements: !904)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2127, file: !517, line: 1048, baseType: !374, size: 8, offset: 24)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2127, file: !517, line: 1049, baseType: !469, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2127, file: !517, line: 1049, baseType: !469, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2127, file: !517, line: 1052, baseType: !469, size: 32, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2127, file: !517, line: 1052, baseType: !469, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2127, file: !517, line: 1053, baseType: !374, size: 8, offset: 160)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2127, file: !517, line: 1054, baseType: !2063, size: 24, offset: 168)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2127, file: !517, line: 1057, baseType: !469, size: 32, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2127, file: !517, line: 1057, baseType: !469, size: 32, offset: 224)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2127, file: !517, line: 1060, baseType: !469, size: 32, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2127, file: !517, line: 1060, baseType: !469, size: 32, offset: 288)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !516, file: !517, line: 1247, baseType: !2144, size: 64, offset: 2176)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !517, line: 60, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !516, file: !517, line: 1251, baseType: !2147, size: 31872, offset: 2240)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !517, line: 403, size: 31872, elements: !2148)
!2148 = !{!2149, !2184, !2204, !2213, !2233, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2366, !2367, !2368, !2370, !2386, !2387}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2147, file: !517, line: 404, baseType: !2150, size: 1984)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !517, line: 259, size: 1984, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2167, !2179}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2150, file: !517, line: 260, baseType: !374, size: 8)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2150, file: !517, line: 263, baseType: !374, size: 8, offset: 8)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2150, file: !517, line: 266, baseType: !374, size: 8, offset: 16)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2150, file: !517, line: 267, baseType: !374, size: 8, offset: 24)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2150, file: !517, line: 269, baseType: !374, size: 8, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2150, file: !517, line: 270, baseType: !374, size: 8, offset: 40)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2150, file: !517, line: 276, baseType: !374, size: 8, offset: 48)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2150, file: !517, line: 279, baseType: !374, size: 8, offset: 56)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2150, file: !517, line: 280, baseType: !387, size: 16, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2150, file: !517, line: 280, baseType: !387, size: 16, offset: 80)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2150, file: !517, line: 281, baseType: !469, size: 32, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2150, file: !517, line: 284, baseType: !374, size: 8, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2150, file: !517, line: 285, baseType: !374, size: 8, offset: 136)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2150, file: !517, line: 287, baseType: !2166, size: 48, offset: 144)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 48, elements: !1596)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2150, file: !517, line: 290, baseType: !2168, size: 1280, offset: 192)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1278, line: 174, baseType: !2169)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1278, line: 166, size: 1280, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2169, file: !1278, line: 167, baseType: !389, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2169, file: !1278, line: 167, baseType: !389, size: 32, offset: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2169, file: !1278, line: 168, baseType: !404, size: 512, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2169, file: !1278, line: 169, baseType: !404, size: 512, offset: 576)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2169, file: !1278, line: 170, baseType: !469, size: 32, offset: 1088)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2169, file: !1278, line: 171, baseType: !469, size: 32, offset: 1120)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2169, file: !1278, line: 172, baseType: !1647, size: 64, offset: 1152)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2169, file: !1278, line: 173, baseType: !348, size: 64, offset: 1216)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2150, file: !517, line: 291, baseType: !2180, size: 512, offset: 1472)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1278, line: 178, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1278, line: 176, size: 512, elements: !2182)
!2182 = !{!2183}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2181, file: !1278, line: 177, baseType: !404, size: 512)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2147, file: !517, line: 406, baseType: !2185, size: 64, offset: 1984)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !517, line: 80, size: 1472, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2186, file: !517, line: 81, baseType: !348, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2186, file: !517, line: 82, baseType: !348, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2186, file: !517, line: 83, baseType: !7, size: 32, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2186, file: !517, line: 84, baseType: !7, size: 32, offset: 160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2186, file: !517, line: 86, baseType: !7, size: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2186, file: !517, line: 87, baseType: !7, size: 32, offset: 224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2186, file: !517, line: 88, baseType: !7, size: 32, offset: 256)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2186, file: !517, line: 89, baseType: !7, size: 32, offset: 288)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2186, file: !517, line: 90, baseType: !7, size: 32, offset: 320)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2186, file: !517, line: 91, baseType: !7, size: 32, offset: 352)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2186, file: !517, line: 92, baseType: !7, size: 32, offset: 384)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2186, file: !517, line: 93, baseType: !7, size: 32, offset: 416)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2186, file: !517, line: 95, baseType: !2201, size: 1024, offset: 448)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 1024, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2147, file: !517, line: 407, baseType: !2205, size: 64, offset: 2048)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !517, line: 98, size: 1216, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211, !2212}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2206, file: !517, line: 100, baseType: !348, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2206, file: !517, line: 101, baseType: !348, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2206, file: !517, line: 103, baseType: !7, size: 32, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2206, file: !517, line: 104, baseType: !7, size: 32, offset: 160)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2206, file: !517, line: 106, baseType: !2201, size: 1024, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2147, file: !517, line: 408, baseType: !2214, size: 512, offset: 2112)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !517, line: 109, size: 512, elements: !2215)
!2215 = !{!2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2214, file: !517, line: 111, baseType: !389, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2214, file: !517, line: 112, baseType: !389, size: 32, offset: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2214, file: !517, line: 115, baseType: !389, size: 32, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2214, file: !517, line: 116, baseType: !389, size: 32, offset: 96)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2214, file: !517, line: 117, baseType: !389, size: 32, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2214, file: !517, line: 118, baseType: !389, size: 32, offset: 160)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2214, file: !517, line: 119, baseType: !389, size: 32, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2214, file: !517, line: 120, baseType: !389, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2214, file: !517, line: 121, baseType: !389, size: 32, offset: 256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2214, file: !517, line: 122, baseType: !389, size: 32, offset: 288)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2214, file: !517, line: 125, baseType: !389, size: 32, offset: 320)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2214, file: !517, line: 126, baseType: !389, size: 32, offset: 352)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2214, file: !517, line: 127, baseType: !387, size: 16, offset: 384)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2214, file: !517, line: 128, baseType: !387, size: 16, offset: 400)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2214, file: !517, line: 129, baseType: !389, size: 32, offset: 416)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2214, file: !517, line: 130, baseType: !389, size: 32, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2214, file: !517, line: 131, baseType: !389, size: 32, offset: 480)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2147, file: !517, line: 409, baseType: !2234, size: 576, offset: 2624)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !517, line: 134, size: 576, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2234, file: !517, line: 135, baseType: !389, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2234, file: !517, line: 136, baseType: !389, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2234, file: !517, line: 137, baseType: !389, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2234, file: !517, line: 138, baseType: !389, size: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2234, file: !517, line: 139, baseType: !389, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2234, file: !517, line: 140, baseType: !389, size: 32, offset: 160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2234, file: !517, line: 141, baseType: !389, size: 32, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2234, file: !517, line: 142, baseType: !389, size: 32, offset: 224)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2234, file: !517, line: 143, baseType: !469, size: 32, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2234, file: !517, line: 144, baseType: !389, size: 32, offset: 288)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2234, file: !517, line: 145, baseType: !389, size: 32, offset: 320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2234, file: !517, line: 147, baseType: !389, size: 32, offset: 352)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2234, file: !517, line: 148, baseType: !389, size: 32, offset: 384)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2234, file: !517, line: 149, baseType: !389, size: 32, offset: 416)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2234, file: !517, line: 150, baseType: !389, size: 32, offset: 448)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2234, file: !517, line: 151, baseType: !389, size: 32, offset: 480)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2234, file: !517, line: 152, baseType: !393, size: 64, offset: 512)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2147, file: !517, line: 411, baseType: !389, size: 32, offset: 3200)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2147, file: !517, line: 411, baseType: !389, size: 32, offset: 3232)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2147, file: !517, line: 411, baseType: !389, size: 32, offset: 3264)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2147, file: !517, line: 412, baseType: !469, size: 32, offset: 3296)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2147, file: !517, line: 413, baseType: !389, size: 32, offset: 3328)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2147, file: !517, line: 413, baseType: !389, size: 32, offset: 3360)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2147, file: !517, line: 415, baseType: !389, size: 32, offset: 3392)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2147, file: !517, line: 415, baseType: !389, size: 32, offset: 3424)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2147, file: !517, line: 416, baseType: !387, size: 16, offset: 3456)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2147, file: !517, line: 416, baseType: !387, size: 16, offset: 3472)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2147, file: !517, line: 418, baseType: !469, size: 32, offset: 3488)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2147, file: !517, line: 418, baseType: !469, size: 32, offset: 3520)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2147, file: !517, line: 421, baseType: !469, size: 32, offset: 3552)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2147, file: !517, line: 421, baseType: !469, size: 32, offset: 3584)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2147, file: !517, line: 421, baseType: !469, size: 32, offset: 3616)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2147, file: !517, line: 425, baseType: !387, size: 16, offset: 3648)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2147, file: !517, line: 425, baseType: !387, size: 16, offset: 3664)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2147, file: !517, line: 425, baseType: !387, size: 16, offset: 3680)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2147, file: !517, line: 426, baseType: !387, size: 16, offset: 3696)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2147, file: !517, line: 428, baseType: !387, size: 16, offset: 3712)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2147, file: !517, line: 428, baseType: !387, size: 16, offset: 3728)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2147, file: !517, line: 431, baseType: !389, size: 32, offset: 3744)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2147, file: !517, line: 433, baseType: !387, size: 16, offset: 3776)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2147, file: !517, line: 435, baseType: !387, size: 16, offset: 3792)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2147, file: !517, line: 437, baseType: !387, size: 16, offset: 3808)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2147, file: !517, line: 439, baseType: !387, size: 16, offset: 3824)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2147, file: !517, line: 441, baseType: !387, size: 16, offset: 3840)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2147, file: !517, line: 443, baseType: !387, size: 16, offset: 3856)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2147, file: !517, line: 449, baseType: !389, size: 32, offset: 3872)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2147, file: !517, line: 453, baseType: !389, size: 32, offset: 3904)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2147, file: !517, line: 458, baseType: !387, size: 16, offset: 3936)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2147, file: !517, line: 462, baseType: !387, size: 16, offset: 3952)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2147, file: !517, line: 467, baseType: !389, size: 32, offset: 3968)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2147, file: !517, line: 467, baseType: !389, size: 32, offset: 4000)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2147, file: !517, line: 469, baseType: !387, size: 16, offset: 4032)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2147, file: !517, line: 469, baseType: !387, size: 16, offset: 4048)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2147, file: !517, line: 469, baseType: !387, size: 16, offset: 4064)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2147, file: !517, line: 469, baseType: !387, size: 16, offset: 4080)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2147, file: !517, line: 474, baseType: !387, size: 16, offset: 4096)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2147, file: !517, line: 475, baseType: !374, size: 8, offset: 4112)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2147, file: !517, line: 476, baseType: !374, size: 8, offset: 4120)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2147, file: !517, line: 481, baseType: !389, size: 32, offset: 4128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2147, file: !517, line: 486, baseType: !389, size: 32, offset: 4160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2147, file: !517, line: 491, baseType: !389, size: 32, offset: 4192)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2147, file: !517, line: 496, baseType: !387, size: 16, offset: 4224)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2147, file: !517, line: 498, baseType: !387, size: 16, offset: 4240)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2147, file: !517, line: 501, baseType: !387, size: 16, offset: 4256)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2147, file: !517, line: 502, baseType: !387, size: 16, offset: 4272)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2147, file: !517, line: 508, baseType: !387, size: 16, offset: 4288)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2147, file: !517, line: 513, baseType: !387, size: 16, offset: 4304)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2147, file: !517, line: 515, baseType: !387, size: 16, offset: 4320)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2147, file: !517, line: 515, baseType: !387, size: 16, offset: 4336)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2147, file: !517, line: 519, baseType: !926, size: 128, offset: 4352)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2147, file: !517, line: 519, baseType: !926, size: 128, offset: 4480)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2147, file: !517, line: 520, baseType: !936, size: 128, offset: 4608)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2147, file: !517, line: 523, baseType: !414, size: 128, offset: 4736)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2147, file: !517, line: 524, baseType: !387, size: 16, offset: 4864)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2147, file: !517, line: 527, baseType: !387, size: 16, offset: 4880)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2147, file: !517, line: 532, baseType: !469, size: 32, offset: 4896)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2147, file: !517, line: 532, baseType: !469, size: 32, offset: 4928)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2147, file: !517, line: 534, baseType: !469, size: 32, offset: 4960)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2147, file: !517, line: 538, baseType: !469, size: 32, offset: 4992)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2147, file: !517, line: 542, baseType: !389, size: 32, offset: 5024)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2147, file: !517, line: 545, baseType: !469, size: 32, offset: 5056)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2147, file: !517, line: 545, baseType: !469, size: 32, offset: 5088)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2147, file: !517, line: 545, baseType: !469, size: 32, offset: 5120)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2147, file: !517, line: 548, baseType: !469, size: 32, offset: 5152)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2147, file: !517, line: 551, baseType: !387, size: 16, offset: 5184)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2147, file: !517, line: 551, baseType: !387, size: 16, offset: 5200)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2147, file: !517, line: 551, baseType: !387, size: 16, offset: 5216)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2147, file: !517, line: 551, baseType: !387, size: 16, offset: 5232)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2147, file: !517, line: 552, baseType: !387, size: 16, offset: 5248)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2147, file: !517, line: 552, baseType: !387, size: 16, offset: 5264)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2147, file: !517, line: 553, baseType: !469, size: 32, offset: 5280)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2147, file: !517, line: 553, baseType: !469, size: 32, offset: 5312)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2147, file: !517, line: 554, baseType: !387, size: 16, offset: 5344)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2147, file: !517, line: 554, baseType: !387, size: 16, offset: 5360)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2147, file: !517, line: 555, baseType: !469, size: 32, offset: 5376)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2147, file: !517, line: 555, baseType: !469, size: 32, offset: 5408)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2147, file: !517, line: 558, baseType: !373, size: 8192, offset: 5440)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2147, file: !517, line: 561, baseType: !389, size: 32, offset: 13632)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2147, file: !517, line: 562, baseType: !387, size: 16, offset: 13664)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2147, file: !517, line: 562, baseType: !387, size: 16, offset: 13680)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2147, file: !517, line: 565, baseType: !2337, size: 6144, offset: 13696)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 6144, elements: !2338)
!2338 = !{!2339}
!2339 = !DISubrange(count: 768)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2147, file: !517, line: 568, baseType: !890, size: 128, offset: 19840)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2147, file: !517, line: 569, baseType: !890, size: 128, offset: 19968)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2147, file: !517, line: 572, baseType: !374, size: 8, offset: 20096)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2147, file: !517, line: 573, baseType: !374, size: 8, offset: 20104)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2147, file: !517, line: 574, baseType: !374, size: 8, offset: 20112)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2147, file: !517, line: 575, baseType: !1996, size: 40, offset: 20120)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2147, file: !517, line: 578, baseType: !389, size: 32, offset: 20160)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2147, file: !517, line: 579, baseType: !387, size: 16, offset: 20192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2147, file: !517, line: 580, baseType: !387, size: 16, offset: 20208)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2147, file: !517, line: 581, baseType: !469, size: 32, offset: 20224)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2147, file: !517, line: 582, baseType: !469, size: 32, offset: 20256)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2147, file: !517, line: 585, baseType: !387, size: 16, offset: 20288)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2147, file: !517, line: 585, baseType: !387, size: 16, offset: 20304)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2147, file: !517, line: 586, baseType: !469, size: 32, offset: 20320)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2147, file: !517, line: 589, baseType: !387, size: 16, offset: 20352)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2147, file: !517, line: 589, baseType: !387, size: 16, offset: 20368)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2147, file: !517, line: 590, baseType: !389, size: 32, offset: 20384)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2147, file: !517, line: 593, baseType: !387, size: 16, offset: 20416)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2147, file: !517, line: 593, baseType: !387, size: 16, offset: 20432)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2147, file: !517, line: 594, baseType: !387, size: 16, offset: 20448)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2147, file: !517, line: 594, baseType: !387, size: 16, offset: 20464)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2147, file: !517, line: 595, baseType: !469, size: 32, offset: 20480)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2147, file: !517, line: 596, baseType: !469, size: 32, offset: 20512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2147, file: !517, line: 597, baseType: !2364, size: 64, offset: 20544)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !311, line: 205, flags: DIFlagFwdDecl)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2147, file: !517, line: 600, baseType: !389, size: 32, offset: 20608)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2147, file: !517, line: 601, baseType: !469, size: 32, offset: 20640)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2147, file: !517, line: 604, baseType: !2369, size: 256, offset: 20672)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 256, elements: !1586)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2147, file: !517, line: 607, baseType: !2371, size: 10880, offset: 20928)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !517, line: 364, size: 10880, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2371, file: !517, line: 365, baseType: !2150, size: 1984)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2371, file: !517, line: 367, baseType: !373, size: 8192, offset: 1984)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2371, file: !517, line: 369, baseType: !387, size: 16, offset: 10176)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2371, file: !517, line: 369, baseType: !387, size: 16, offset: 10192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2371, file: !517, line: 370, baseType: !387, size: 16, offset: 10208)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2371, file: !517, line: 370, baseType: !387, size: 16, offset: 10224)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2371, file: !517, line: 372, baseType: !469, size: 32, offset: 10240)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2371, file: !517, line: 373, baseType: !469, size: 32, offset: 10272)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2371, file: !517, line: 375, baseType: !2063, size: 24, offset: 10304)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2371, file: !517, line: 376, baseType: !374, size: 8, offset: 10328)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2371, file: !517, line: 378, baseType: !374, size: 8, offset: 10336)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2371, file: !517, line: 379, baseType: !2063, size: 24, offset: 10344)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2371, file: !517, line: 381, baseType: !404, size: 512, offset: 10368)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2147, file: !517, line: 609, baseType: !389, size: 32, offset: 31808)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2147, file: !517, line: 610, baseType: !389, size: 32, offset: 31840)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !516, file: !517, line: 1252, baseType: !2389, size: 256, offset: 34112)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !517, line: 158, size: 256, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2389, file: !517, line: 159, baseType: !389, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2389, file: !517, line: 160, baseType: !469, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2389, file: !517, line: 161, baseType: !469, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2389, file: !517, line: 162, baseType: !469, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2389, file: !517, line: 163, baseType: !389, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2389, file: !517, line: 164, baseType: !387, size: 16, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2389, file: !517, line: 165, baseType: !387, size: 16, offset: 176)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2389, file: !517, line: 166, baseType: !469, size: 32, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2389, file: !517, line: 167, baseType: !469, size: 32, offset: 224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !516, file: !517, line: 1254, baseType: !414, size: 128, offset: 34368)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !516, file: !517, line: 1255, baseType: !414, size: 128, offset: 34496)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !516, file: !517, line: 1257, baseType: !348, size: 64, offset: 34624)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !516, file: !517, line: 1258, baseType: !348, size: 64, offset: 34688)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !516, file: !517, line: 1259, baseType: !348, size: 64, offset: 34752)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !516, file: !517, line: 1260, baseType: !348, size: 64, offset: 34816)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !516, file: !517, line: 1262, baseType: !348, size: 64, offset: 34880)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !516, file: !517, line: 1265, baseType: !2408, size: 64, offset: 34944)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !34, line: 126, size: 320, elements: !2410)
!2410 = !{!2411, !2412, !2414, !2415, !2416, !2417}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "DagNode", scope: !2409, file: !34, line: 127, baseType: !414, size: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "nodeHash", scope: !2409, file: !34, line: 128, baseType: !2413, size: 64, offset: 128)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "numNodes", scope: !2409, file: !34, line: 129, baseType: !389, size: 32, offset: 192)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "is_acyclic", scope: !2409, file: !34, line: 130, baseType: !1940, size: 8, offset: 224)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2409, file: !34, line: 131, baseType: !389, size: 32, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ugly_hack_sorry", scope: !2409, file: !34, line: 132, baseType: !1940, size: 8, offset: 288)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !516, file: !517, line: 1266, baseType: !387, size: 16, offset: 35008)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !516, file: !517, line: 1267, baseType: !387, size: 16, offset: 35024)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !516, file: !517, line: 1270, baseType: !389, size: 32, offset: 35040)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !516, file: !517, line: 1271, baseType: !414, size: 128, offset: 35072)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !516, file: !517, line: 1274, baseType: !2423, size: 128, offset: 35200)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !517, line: 650, size: 128, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2423, file: !517, line: 651, baseType: !1364, size: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2423, file: !517, line: 652, baseType: !374, size: 8, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2423, file: !517, line: 652, baseType: !374, size: 8, offset: 104)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2423, file: !517, line: 652, baseType: !374, size: 8, offset: 112)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2423, file: !517, line: 652, baseType: !374, size: 8, offset: 120)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !516, file: !517, line: 1275, baseType: !2431, size: 1472, offset: 35328)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !517, line: 676, size: 1472, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2454, !2455, !2456, !2457, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2431, file: !517, line: 679, baseType: !2423, size: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2431, file: !517, line: 680, baseType: !387, size: 16, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2431, file: !517, line: 680, baseType: !387, size: 16, offset: 144)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2431, file: !517, line: 680, baseType: !387, size: 16, offset: 160)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2431, file: !517, line: 680, baseType: !387, size: 16, offset: 176)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2431, file: !517, line: 681, baseType: !387, size: 16, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2431, file: !517, line: 681, baseType: !387, size: 16, offset: 208)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2431, file: !517, line: 681, baseType: !387, size: 16, offset: 224)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2431, file: !517, line: 681, baseType: !387, size: 16, offset: 240)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2431, file: !517, line: 682, baseType: !387, size: 16, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2431, file: !517, line: 682, baseType: !1640, size: 48, offset: 272)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2431, file: !517, line: 685, baseType: !2445, size: 192, offset: 320)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !517, line: 633, size: 192, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2445, file: !517, line: 634, baseType: !387, size: 16)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2445, file: !517, line: 634, baseType: !387, size: 16, offset: 16)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2445, file: !517, line: 635, baseType: !387, size: 16, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2445, file: !517, line: 635, baseType: !387, size: 16, offset: 48)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2445, file: !517, line: 636, baseType: !469, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2445, file: !517, line: 636, baseType: !469, size: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2445, file: !517, line: 637, baseType: !2364, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2431, file: !517, line: 686, baseType: !387, size: 16, offset: 512)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2431, file: !517, line: 686, baseType: !387, size: 16, offset: 528)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2431, file: !517, line: 687, baseType: !469, size: 32, offset: 544)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2431, file: !517, line: 688, baseType: !2458, size: 448, offset: 576)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !517, line: 674, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !517, line: 659, size: 448, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2459, file: !517, line: 660, baseType: !469, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2459, file: !517, line: 661, baseType: !469, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2459, file: !517, line: 662, baseType: !469, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2459, file: !517, line: 663, baseType: !469, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2459, file: !517, line: 664, baseType: !469, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2459, file: !517, line: 665, baseType: !469, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2459, file: !517, line: 666, baseType: !469, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2459, file: !517, line: 667, baseType: !469, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2459, file: !517, line: 668, baseType: !469, size: 32, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2459, file: !517, line: 669, baseType: !469, size: 32, offset: 288)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2459, file: !517, line: 670, baseType: !389, size: 32, offset: 320)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2459, file: !517, line: 671, baseType: !469, size: 32, offset: 352)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2459, file: !517, line: 672, baseType: !469, size: 32, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2459, file: !517, line: 673, baseType: !387, size: 16, offset: 416)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2459, file: !517, line: 673, baseType: !387, size: 16, offset: 432)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2431, file: !517, line: 692, baseType: !469, size: 32, offset: 1024)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2431, file: !517, line: 697, baseType: !469, size: 32, offset: 1056)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2431, file: !517, line: 703, baseType: !389, size: 32, offset: 1088)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2431, file: !517, line: 704, baseType: !387, size: 16, offset: 1120)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2431, file: !517, line: 704, baseType: !387, size: 16, offset: 1136)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2431, file: !517, line: 705, baseType: !387, size: 16, offset: 1152)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2431, file: !517, line: 706, baseType: !387, size: 16, offset: 1168)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2431, file: !517, line: 707, baseType: !387, size: 16, offset: 1184)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2431, file: !517, line: 708, baseType: !387, size: 16, offset: 1200)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2431, file: !517, line: 709, baseType: !387, size: 16, offset: 1216)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2431, file: !517, line: 709, baseType: !387, size: 16, offset: 1232)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2431, file: !517, line: 709, baseType: !387, size: 16, offset: 1248)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2431, file: !517, line: 709, baseType: !387, size: 16, offset: 1264)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2431, file: !517, line: 710, baseType: !387, size: 16, offset: 1280)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2431, file: !517, line: 711, baseType: !387, size: 16, offset: 1296)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2431, file: !517, line: 712, baseType: !469, size: 32, offset: 1312)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2431, file: !517, line: 713, baseType: !469, size: 32, offset: 1344)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2431, file: !517, line: 713, baseType: !469, size: 32, offset: 1376)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2431, file: !517, line: 713, baseType: !469, size: 32, offset: 1408)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2431, file: !517, line: 713, baseType: !469, size: 32, offset: 1440)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !516, file: !517, line: 1278, baseType: !2497, size: 64, offset: 36800)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !517, line: 1197, size: 64, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2497, file: !517, line: 1199, baseType: !469, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2497, file: !517, line: 1200, baseType: !374, size: 8, offset: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2497, file: !517, line: 1201, baseType: !374, size: 8, offset: 40)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2497, file: !517, line: 1202, baseType: !387, size: 16, offset: 48)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !516, file: !517, line: 1281, baseType: !1433, size: 64, offset: 36864)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !516, file: !517, line: 1284, baseType: !2505, size: 192, offset: 36928)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !517, line: 1208, size: 192, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2505, file: !517, line: 1209, baseType: !1364, size: 96)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2505, file: !517, line: 1210, baseType: !389, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2505, file: !517, line: 1210, baseType: !389, size: 32, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2505, file: !517, line: 1210, baseType: !389, size: 32, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !516, file: !517, line: 1287, baseType: !2512, size: 64, offset: 37120)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2514, line: 64, size: 19136, elements: !2515)
!2514 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2521, !2523, !2524, !2525, !2526, !2529, !2530, !2702, !2703, !2711, !2712, !2713, !2714, !2715}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2513, file: !2514, line: 65, baseType: !354, size: 960)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2513, file: !2514, line: 66, baseType: !425, size: 64, offset: 960)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2513, file: !2514, line: 68, baseType: !373, size: 8192, offset: 1024)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2513, file: !2514, line: 70, baseType: !389, size: 32, offset: 9216)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2513, file: !2514, line: 71, baseType: !389, size: 32, offset: 9248)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2513, file: !2514, line: 72, baseType: !2522, size: 64, offset: 9280)
!2522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 64, elements: !904)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2513, file: !2514, line: 74, baseType: !469, size: 32, offset: 9344)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2513, file: !2514, line: 74, baseType: !469, size: 32, offset: 9376)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2513, file: !2514, line: 76, baseType: !1498, size: 64, offset: 9408)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2513, file: !2514, line: 77, baseType: !2527, size: 64, offset: 9472)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2514, line: 77, flags: DIFlagFwdDecl)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2513, file: !2514, line: 78, baseType: !1433, size: 64, offset: 9536)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2513, file: !2514, line: 80, baseType: !2531, size: 2624, offset: 9600)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2532, line: 340, size: 2624, elements: !2533)
!2532 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2533 = !{!2534, !2562, !2580, !2581, !2582, !2597, !2655, !2656, !2682, !2683, !2684, !2685, !2691}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2531, file: !2532, line: 341, baseType: !2535, size: 576)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2532, line: 251, baseType: !2536)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2532, line: 207, size: 576, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2536, file: !2532, line: 208, baseType: !389, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2536, file: !2532, line: 211, baseType: !387, size: 16, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2536, file: !2532, line: 212, baseType: !387, size: 16, offset: 48)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2536, file: !2532, line: 213, baseType: !469, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2536, file: !2532, line: 214, baseType: !387, size: 16, offset: 96)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2536, file: !2532, line: 215, baseType: !387, size: 16, offset: 112)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2536, file: !2532, line: 216, baseType: !387, size: 16, offset: 128)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2536, file: !2532, line: 217, baseType: !387, size: 16, offset: 144)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2536, file: !2532, line: 218, baseType: !387, size: 16, offset: 160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2536, file: !2532, line: 219, baseType: !387, size: 16, offset: 176)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2536, file: !2532, line: 220, baseType: !469, size: 32, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2536, file: !2532, line: 222, baseType: !387, size: 16, offset: 224)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2536, file: !2532, line: 225, baseType: !387, size: 16, offset: 240)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2536, file: !2532, line: 228, baseType: !389, size: 32, offset: 256)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2536, file: !2532, line: 229, baseType: !389, size: 32, offset: 288)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2536, file: !2532, line: 233, baseType: !389, size: 32, offset: 320)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2536, file: !2532, line: 236, baseType: !387, size: 16, offset: 352)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2536, file: !2532, line: 236, baseType: !387, size: 16, offset: 368)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2536, file: !2532, line: 241, baseType: !469, size: 32, offset: 384)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2536, file: !2532, line: 244, baseType: !389, size: 32, offset: 416)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2536, file: !2532, line: 244, baseType: !389, size: 32, offset: 448)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2536, file: !2532, line: 245, baseType: !469, size: 32, offset: 480)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2536, file: !2532, line: 248, baseType: !469, size: 32, offset: 512)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2536, file: !2532, line: 250, baseType: !389, size: 32, offset: 544)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2531, file: !2532, line: 342, baseType: !2563, size: 448, offset: 576)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2532, line: 79, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2532, line: 61, size: 448, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2564, file: !2532, line: 62, baseType: !348, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2564, file: !2532, line: 64, baseType: !387, size: 16, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2564, file: !2532, line: 65, baseType: !387, size: 16, offset: 80)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2564, file: !2532, line: 67, baseType: !469, size: 32, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2564, file: !2532, line: 68, baseType: !469, size: 32, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2564, file: !2532, line: 69, baseType: !469, size: 32, offset: 160)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2564, file: !2532, line: 70, baseType: !387, size: 16, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2564, file: !2532, line: 71, baseType: !387, size: 16, offset: 208)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2564, file: !2532, line: 72, baseType: !946, size: 64, offset: 224)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2564, file: !2532, line: 75, baseType: !469, size: 32, offset: 288)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2564, file: !2532, line: 75, baseType: !469, size: 32, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2564, file: !2532, line: 75, baseType: !469, size: 32, offset: 352)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2564, file: !2532, line: 78, baseType: !469, size: 32, offset: 384)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2564, file: !2532, line: 78, baseType: !469, size: 32, offset: 416)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2531, file: !2532, line: 343, baseType: !414, size: 128, offset: 1024)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2531, file: !2532, line: 344, baseType: !414, size: 128, offset: 1152)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2531, file: !2532, line: 345, baseType: !2583, size: 192, offset: 1280)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2532, line: 278, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2532, line: 270, size: 192, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2584, file: !2532, line: 271, baseType: !389, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2584, file: !2532, line: 273, baseType: !469, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2584, file: !2532, line: 275, baseType: !389, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2584, file: !2532, line: 276, baseType: !389, size: 32, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2584, file: !2532, line: 277, baseType: !2591, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2532, line: 55, size: 576, elements: !2593)
!2593 = !{!2594, !2595, !2596}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2592, file: !2532, line: 56, baseType: !389, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2592, file: !2532, line: 57, baseType: !469, size: 32, offset: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2592, file: !2532, line: 58, baseType: !1599, size: 512, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2531, file: !2532, line: 346, baseType: !2598, size: 384, offset: 1472)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2532, line: 268, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2532, line: 253, size: 384, elements: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605, !2649, !2650, !2651, !2652, !2653, !2654}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2599, file: !2532, line: 254, baseType: !389, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2599, file: !2532, line: 255, baseType: !389, size: 32, offset: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2599, file: !2532, line: 255, baseType: !389, size: 32, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2599, file: !2532, line: 258, baseType: !469, size: 32, offset: 96)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2599, file: !2532, line: 259, baseType: !2606, size: 64, offset: 128)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2532, line: 164, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2532, line: 108, size: 1664, elements: !2609)
!2609 = !{!2610, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2608, file: !2532, line: 109, baseType: !2611, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2608, file: !2532, line: 109, baseType: !2611, size: 64, offset: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2608, file: !2532, line: 111, baseType: !404, size: 512, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2608, file: !2532, line: 119, baseType: !946, size: 64, offset: 640)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2608, file: !2532, line: 119, baseType: !946, size: 64, offset: 704)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2608, file: !2532, line: 125, baseType: !946, size: 64, offset: 768)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2608, file: !2532, line: 125, baseType: !946, size: 64, offset: 832)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2608, file: !2532, line: 127, baseType: !946, size: 64, offset: 896)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2608, file: !2532, line: 130, baseType: !389, size: 32, offset: 960)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2608, file: !2532, line: 131, baseType: !389, size: 32, offset: 992)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2608, file: !2532, line: 132, baseType: !2622, size: 64, offset: 1024)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2532, line: 106, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2532, line: 81, size: 512, elements: !2625)
!2625 = !{!2626, !2627, !2630, !2631, !2632, !2633}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2624, file: !2532, line: 82, baseType: !946, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2624, file: !2532, line: 97, baseType: !2628, size: 256, offset: 64)
!2628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 256, elements: !2629)
!2629 = !{!892, !905}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2624, file: !2532, line: 102, baseType: !946, size: 64, offset: 320)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2624, file: !2532, line: 102, baseType: !946, size: 64, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2624, file: !2532, line: 104, baseType: !389, size: 32, offset: 448)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2624, file: !2532, line: 105, baseType: !389, size: 32, offset: 480)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2608, file: !2532, line: 135, baseType: !1364, size: 96, offset: 1088)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2608, file: !2532, line: 136, baseType: !469, size: 32, offset: 1184)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2608, file: !2532, line: 139, baseType: !389, size: 32, offset: 1216)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2608, file: !2532, line: 139, baseType: !389, size: 32, offset: 1248)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2608, file: !2532, line: 139, baseType: !389, size: 32, offset: 1280)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2608, file: !2532, line: 140, baseType: !1364, size: 96, offset: 1312)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2608, file: !2532, line: 143, baseType: !387, size: 16, offset: 1408)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2608, file: !2532, line: 144, baseType: !387, size: 16, offset: 1424)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2608, file: !2532, line: 145, baseType: !387, size: 16, offset: 1440)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2608, file: !2532, line: 148, baseType: !387, size: 16, offset: 1456)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2608, file: !2532, line: 149, baseType: !389, size: 32, offset: 1472)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2608, file: !2532, line: 150, baseType: !469, size: 32, offset: 1504)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2608, file: !2532, line: 152, baseType: !1433, size: 64, offset: 1536)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2608, file: !2532, line: 163, baseType: !469, size: 32, offset: 1600)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2608, file: !2532, line: 163, baseType: !469, size: 32, offset: 1632)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2599, file: !2532, line: 261, baseType: !469, size: 32, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2599, file: !2532, line: 261, baseType: !469, size: 32, offset: 224)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2599, file: !2532, line: 261, baseType: !469, size: 32, offset: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2599, file: !2532, line: 263, baseType: !389, size: 32, offset: 288)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2599, file: !2532, line: 266, baseType: !389, size: 32, offset: 320)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2599, file: !2532, line: 267, baseType: !469, size: 32, offset: 352)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2531, file: !2532, line: 347, baseType: !2606, size: 64, offset: 1856)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2531, file: !2532, line: 348, baseType: !2657, size: 64, offset: 1920)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2532, line: 205, baseType: !2659)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2532, line: 186, size: 1024, elements: !2660)
!2660 = !{!2661, !2663, !2664, !2665, !2667, !2668, !2669, !2677, !2678, !2679, !2680, !2681}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2659, file: !2532, line: 187, baseType: !2662, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2659, file: !2532, line: 187, baseType: !2662, size: 64, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2659, file: !2532, line: 189, baseType: !404, size: 512, offset: 128)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2659, file: !2532, line: 191, baseType: !2666, size: 64, offset: 640)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2659, file: !2532, line: 193, baseType: !389, size: 32, offset: 704)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2659, file: !2532, line: 193, baseType: !389, size: 32, offset: 736)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2659, file: !2532, line: 195, baseType: !2670, size: 64, offset: 768)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2532, line: 184, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2532, line: 166, size: 320, elements: !2673)
!2673 = !{!2674, !2675, !2676}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2672, file: !2532, line: 180, baseType: !2628, size: 256)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2672, file: !2532, line: 182, baseType: !389, size: 32, offset: 256)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2672, file: !2532, line: 183, baseType: !389, size: 32, offset: 288)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2659, file: !2532, line: 196, baseType: !389, size: 32, offset: 832)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2659, file: !2532, line: 198, baseType: !389, size: 32, offset: 864)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2659, file: !2532, line: 200, baseType: !1486, size: 64, offset: 896)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2659, file: !2532, line: 201, baseType: !469, size: 32, offset: 960)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2659, file: !2532, line: 204, baseType: !389, size: 32, offset: 992)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2531, file: !2532, line: 350, baseType: !414, size: 128, offset: 1984)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2531, file: !2532, line: 351, baseType: !389, size: 32, offset: 2112)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2531, file: !2532, line: 351, baseType: !389, size: 32, offset: 2144)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2531, file: !2532, line: 353, baseType: !2686, size: 64, offset: 2176)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2532, line: 297, baseType: !2688)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2532, line: 295, size: 2048, elements: !2689)
!2689 = !{!2690}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2688, file: !2532, line: 296, baseType: !701, size: 2048)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2531, file: !2532, line: 355, baseType: !2692, size: 384, offset: 2240)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2532, line: 338, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2532, line: 322, size: 384, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2693, file: !2532, line: 323, baseType: !389, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2693, file: !2532, line: 325, baseType: !387, size: 16, offset: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2693, file: !2532, line: 326, baseType: !387, size: 16, offset: 48)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2693, file: !2532, line: 331, baseType: !414, size: 128, offset: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2693, file: !2532, line: 334, baseType: !414, size: 128, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2693, file: !2532, line: 335, baseType: !389, size: 32, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2693, file: !2532, line: 337, baseType: !389, size: 32, offset: 352)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2513, file: !2514, line: 81, baseType: !348, size: 64, offset: 12224)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2513, file: !2514, line: 85, baseType: !2704, size: 6208, offset: 12288)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2514, line: 55, size: 6208, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2704, file: !2514, line: 56, baseType: !2337, size: 6144)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2704, file: !2514, line: 58, baseType: !387, size: 16, offset: 6144)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2704, file: !2514, line: 59, baseType: !387, size: 16, offset: 6160)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2704, file: !2514, line: 60, baseType: !387, size: 16, offset: 6176)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2704, file: !2514, line: 61, baseType: !387, size: 16, offset: 6192)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2513, file: !2514, line: 86, baseType: !389, size: 32, offset: 18496)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2513, file: !2514, line: 88, baseType: !389, size: 32, offset: 18528)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2513, file: !2514, line: 90, baseType: !389, size: 32, offset: 18560)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2513, file: !2514, line: 94, baseType: !389, size: 32, offset: 18592)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2513, file: !2514, line: 100, baseType: !1550, size: 512, offset: 18624)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !516, file: !517, line: 1289, baseType: !2717, size: 64, offset: 37184)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2718, line: 27, baseType: !2719)
!2718 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2720, line: 45, baseType: !2721)
!2720 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2721 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !516, file: !517, line: 1290, baseType: !2717, size: 64, offset: 37248)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !516, file: !517, line: 1293, baseType: !2168, size: 1280, offset: 37312)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !516, file: !517, line: 1294, baseType: !2180, size: 512, offset: 38592)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !516, file: !517, line: 1295, baseType: !1550, size: 512, offset: 39104)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !516, file: !517, line: 1298, baseType: !2727, size: 64, offset: 39616)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !517, line: 1298, flags: DIFlagFwdDecl)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !504, file: !218, line: 109, baseType: !1255, size: 64, offset: 832)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !500, file: !218, line: 720, baseType: !374, size: 8, offset: 896)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !500, file: !218, line: 720, baseType: !374, size: 8, offset: 904)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !500, file: !218, line: 720, baseType: !374, size: 8, offset: 912)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !500, file: !218, line: 720, baseType: !374, size: 8, offset: 920)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !500, file: !218, line: 721, baseType: !374, size: 8, offset: 928)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !500, file: !218, line: 721, baseType: !374, size: 8, offset: 936)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !500, file: !218, line: 721, baseType: !2131, size: 16, offset: 944)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !495, file: !496, line: 158, baseType: !2738, size: 64, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !1951, line: 65, size: 160, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2739, file: !1951, line: 66, baseType: !1364, size: 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2739, file: !1951, line: 67, baseType: !1640, size: 48, offset: 96)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2739, file: !1951, line: 68, baseType: !374, size: 8, offset: 144)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2739, file: !1951, line: 68, baseType: !374, size: 8, offset: 152)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !495, file: !496, line: 159, baseType: !2746, size: 64, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !1951, line: 79, size: 96, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !2747, file: !1951, line: 81, baseType: !389, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2747, file: !1951, line: 82, baseType: !389, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2747, file: !1951, line: 83, baseType: !387, size: 16, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2747, file: !1951, line: 84, baseType: !374, size: 8, offset: 80)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2747, file: !1951, line: 84, baseType: !374, size: 8, offset: 88)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !495, file: !496, line: 160, baseType: !2755, size: 64, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !1951, line: 88, size: 64, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2756, file: !1951, line: 89, baseType: !7, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2756, file: !1951, line: 90, baseType: !7, size: 32, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !495, file: !496, line: 161, baseType: !389, size: 32, offset: 256)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !495, file: !496, line: 161, baseType: !389, size: 32, offset: 288)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !495, file: !496, line: 162, baseType: !2763, size: 64, offset: 320)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !495, file: !496, line: 163, baseType: !2765, size: 64, offset: 384)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !2767, line: 45, size: 1472, elements: !2768)
!2767 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2768 = !{!2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2766, file: !2767, line: 46, baseType: !2765, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2766, file: !2767, line: 46, baseType: !2765, size: 64, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2766, file: !2767, line: 48, baseType: !469, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2766, file: !2767, line: 51, baseType: !469, size: 32, offset: 160)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2766, file: !2767, line: 53, baseType: !387, size: 16, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2766, file: !2767, line: 54, baseType: !387, size: 16, offset: 208)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !2766, file: !2767, line: 56, baseType: !387, size: 16, offset: 224)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2766, file: !2767, line: 57, baseType: !387, size: 16, offset: 240)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !2766, file: !2767, line: 59, baseType: !389, size: 32, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2766, file: !2767, line: 60, baseType: !389, size: 32, offset: 288)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2766, file: !2767, line: 62, baseType: !348, size: 64, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2766, file: !2767, line: 63, baseType: !404, size: 512, offset: 384)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2766, file: !2767, line: 64, baseType: !404, size: 512, offset: 896)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !2766, file: !2767, line: 67, baseType: !469, size: 32, offset: 1408)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !2766, file: !2767, line: 68, baseType: !469, size: 32, offset: 1440)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !495, file: !496, line: 164, baseType: !596, size: 64, offset: 448)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !495, file: !496, line: 167, baseType: !2786, size: 64, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2788)
!2788 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !495, file: !496, line: 170, baseType: !2790, size: 64, offset: 576)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !2792, line: 44, flags: DIFlagFwdDecl)
!2792 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !495, file: !496, line: 171, baseType: !389, size: 32, offset: 640)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !495, file: !496, line: 172, baseType: !389, size: 32, offset: 672)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !495, file: !496, line: 173, baseType: !1940, size: 8, offset: 704)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !495, file: !496, line: 175, baseType: !2797, size: 64, offset: 768)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !496, line: 175, flags: DIFlagFwdDecl)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !495, file: !496, line: 178, baseType: !2800, size: 64, offset: 832)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !495, file: !496, line: 179, baseType: !1940, size: 8, offset: 896)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !495, file: !496, line: 182, baseType: !1940, size: 8, offset: 904)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !495, file: !496, line: 183, baseType: !2763, size: 64, offset: 960)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !495, file: !496, line: 184, baseType: !2763, size: 64, offset: 1024)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !495, file: !496, line: 185, baseType: !2807, size: 64, offset: 1088)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !495, file: !496, line: 188, baseType: !1940, size: 8, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !495, file: !496, line: 191, baseType: !7, size: 32, offset: 1184)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !495, file: !496, line: 191, baseType: !1522, size: 64, offset: 1216)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !495, file: !496, line: 191, baseType: !7, size: 32, offset: 1280)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !495, file: !496, line: 192, baseType: !2813, size: 64, offset: 1344)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2815, line: 47, flags: DIFlagFwdDecl)
!2815 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !495, file: !496, line: 195, baseType: !2763, size: 64, offset: 1408)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !495, file: !496, line: 197, baseType: !2818, size: 64, offset: 1472)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !496, line: 197, flags: DIFlagFwdDecl)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !495, file: !496, line: 198, baseType: !2821, size: 64, offset: 1536)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !496, line: 59, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !495, file: !496, line: 201, baseType: !1940, size: 8, offset: 1600)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !495, file: !496, line: 202, baseType: !1364, size: 96, offset: 1632)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !495, file: !496, line: 204, baseType: !1364, size: 96, offset: 1728)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !495, file: !496, line: 205, baseType: !389, size: 32, offset: 1824)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !351, file: !40, line: 121, baseType: !387, size: 16, offset: 1088)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !351, file: !40, line: 121, baseType: !387, size: 16, offset: 1104)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !351, file: !40, line: 122, baseType: !389, size: 32, offset: 1120)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !351, file: !40, line: 122, baseType: !389, size: 32, offset: 1152)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !351, file: !40, line: 122, baseType: !389, size: 32, offset: 1184)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !351, file: !40, line: 123, baseType: !404, size: 512, offset: 1216)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !351, file: !40, line: 124, baseType: !522, size: 64, offset: 1728)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !351, file: !40, line: 124, baseType: !522, size: 64, offset: 1792)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !351, file: !40, line: 127, baseType: !522, size: 64, offset: 1856)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !351, file: !40, line: 127, baseType: !522, size: 64, offset: 1920)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !351, file: !40, line: 127, baseType: !522, size: 64, offset: 1984)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !351, file: !40, line: 128, baseType: !599, size: 64, offset: 2048)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !351, file: !40, line: 130, baseType: !2840, size: 64, offset: 2112)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !40, line: 97, size: 832, elements: !2842)
!2842 = !{!2843, !2846, !2847}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2841, file: !40, line: 98, baseType: !2844, size: 768)
!2844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 768, elements: !2845)
!2845 = !{!1506, !1366}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2841, file: !40, line: 99, baseType: !389, size: 32, offset: 768)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2841, file: !40, line: 99, baseType: !389, size: 32, offset: 800)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !351, file: !40, line: 131, baseType: !2849, size: 64, offset: 2176)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !351, file: !40, line: 132, baseType: !2849, size: 64, offset: 2240)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !351, file: !40, line: 133, baseType: !2852, size: 64, offset: 2304)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !324, line: 334, size: 1728, elements: !2854)
!2854 = !{!2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2889}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2853, file: !324, line: 335, baseType: !414, size: 128)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !2853, file: !324, line: 336, baseType: !2413, size: 64, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2853, file: !324, line: 338, baseType: !387, size: 16, offset: 192)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2853, file: !324, line: 338, baseType: !387, size: 16, offset: 208)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !2853, file: !324, line: 339, baseType: !7, size: 32, offset: 224)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2853, file: !324, line: 340, baseType: !389, size: 32, offset: 256)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2853, file: !324, line: 342, baseType: !469, size: 32, offset: 288)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !2853, file: !324, line: 343, baseType: !1364, size: 96, offset: 320)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !2853, file: !324, line: 344, baseType: !1364, size: 96, offset: 416)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !2853, file: !324, line: 347, baseType: !414, size: 128, offset: 512)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !2853, file: !324, line: 349, baseType: !389, size: 32, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !2853, file: !324, line: 350, baseType: !389, size: 32, offset: 672)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !2853, file: !324, line: 351, baseType: !348, size: 64, offset: 704)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !2853, file: !324, line: 352, baseType: !348, size: 64, offset: 768)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2853, file: !324, line: 354, baseType: !2870, size: 384, offset: 832)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !324, line: 116, baseType: !2871)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !324, line: 94, size: 384, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !2871, file: !324, line: 96, baseType: !389, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !2871, file: !324, line: 96, baseType: !389, size: 32, offset: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !2871, file: !324, line: 97, baseType: !389, size: 32, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !2871, file: !324, line: 97, baseType: !389, size: 32, offset: 96)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !2871, file: !324, line: 99, baseType: !387, size: 16, offset: 128)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !2871, file: !324, line: 100, baseType: !387, size: 16, offset: 144)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !2871, file: !324, line: 102, baseType: !387, size: 16, offset: 160)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2871, file: !324, line: 105, baseType: !387, size: 16, offset: 176)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !2871, file: !324, line: 108, baseType: !387, size: 16, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !2871, file: !324, line: 109, baseType: !387, size: 16, offset: 208)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !2871, file: !324, line: 111, baseType: !387, size: 16, offset: 224)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !2871, file: !324, line: 112, baseType: !387, size: 16, offset: 240)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !2871, file: !324, line: 114, baseType: !389, size: 32, offset: 256)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !2871, file: !324, line: 114, baseType: !389, size: 32, offset: 288)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !2871, file: !324, line: 115, baseType: !389, size: 32, offset: 320)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !2871, file: !324, line: 115, baseType: !389, size: 32, offset: 352)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !2853, file: !324, line: 355, baseType: !404, size: 512, offset: 1216)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !351, file: !40, line: 134, baseType: !348, size: 64, offset: 2368)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !351, file: !40, line: 136, baseType: !1433, size: 64, offset: 2432)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !351, file: !40, line: 138, baseType: !2870, size: 384, offset: 2496)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !351, file: !40, line: 139, baseType: !2894, size: 64, offset: 2880)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !324, line: 80, baseType: !2896)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !324, line: 72, size: 192, elements: !2897)
!2897 = !{!2898, !2905, !2906, !2907, !2908}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2896, file: !324, line: 73, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !324, line: 59, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !324, line: 56, size: 128, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2901, file: !324, line: 57, baseType: !1364, size: 96)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2901, file: !324, line: 58, baseType: !389, size: 32, offset: 96)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2896, file: !324, line: 74, baseType: !389, size: 32, offset: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2896, file: !324, line: 76, baseType: !389, size: 32, offset: 96)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2896, file: !324, line: 77, baseType: !389, size: 32, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2896, file: !324, line: 79, baseType: !389, size: 32, offset: 160)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !351, file: !40, line: 141, baseType: !414, size: 128, offset: 2944)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !351, file: !40, line: 142, baseType: !414, size: 128, offset: 3072)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !351, file: !40, line: 143, baseType: !414, size: 128, offset: 3200)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !351, file: !40, line: 144, baseType: !414, size: 128, offset: 3328)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !351, file: !40, line: 146, baseType: !389, size: 32, offset: 3456)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !351, file: !40, line: 147, baseType: !389, size: 32, offset: 3488)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !351, file: !40, line: 150, baseType: !2916, size: 64, offset: 3520)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !2919, line: 93, size: 7552, elements: !2920)
!2919 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2969, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3098}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2918, file: !2919, line: 94, baseType: !354, size: 960)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2918, file: !2919, line: 95, baseType: !425, size: 64, offset: 960)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !2918, file: !2919, line: 97, baseType: !387, size: 16, offset: 1024)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2918, file: !2919, line: 97, baseType: !387, size: 16, offset: 1040)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2918, file: !2919, line: 99, baseType: !469, size: 32, offset: 1056)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2918, file: !2919, line: 99, baseType: !469, size: 32, offset: 1088)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2918, file: !2919, line: 99, baseType: !469, size: 32, offset: 1120)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2918, file: !2919, line: 100, baseType: !469, size: 32, offset: 1152)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2918, file: !2919, line: 100, baseType: !469, size: 32, offset: 1184)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2918, file: !2919, line: 100, baseType: !469, size: 32, offset: 1216)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2918, file: !2919, line: 101, baseType: !469, size: 32, offset: 1248)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2918, file: !2919, line: 101, baseType: !469, size: 32, offset: 1280)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2918, file: !2919, line: 101, baseType: !469, size: 32, offset: 1312)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2918, file: !2919, line: 102, baseType: !469, size: 32, offset: 1344)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2918, file: !2919, line: 102, baseType: !469, size: 32, offset: 1376)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2918, file: !2919, line: 102, baseType: !469, size: 32, offset: 1408)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2918, file: !2919, line: 103, baseType: !469, size: 32, offset: 1440)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2918, file: !2919, line: 103, baseType: !469, size: 32, offset: 1472)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2918, file: !2919, line: 103, baseType: !469, size: 32, offset: 1504)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2918, file: !2919, line: 103, baseType: !469, size: 32, offset: 1536)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2918, file: !2919, line: 103, baseType: !469, size: 32, offset: 1568)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2918, file: !2919, line: 104, baseType: !469, size: 32, offset: 1600)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2918, file: !2919, line: 104, baseType: !469, size: 32, offset: 1632)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2918, file: !2919, line: 104, baseType: !469, size: 32, offset: 1664)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2918, file: !2919, line: 104, baseType: !469, size: 32, offset: 1696)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2918, file: !2919, line: 104, baseType: !469, size: 32, offset: 1728)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2918, file: !2919, line: 105, baseType: !469, size: 32, offset: 1760)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !2918, file: !2919, line: 108, baseType: !2949, size: 704, offset: 1792)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !2919, line: 53, size: 704, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !2949, file: !2919, line: 54, baseType: !469, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !2949, file: !2919, line: 55, baseType: !469, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !2949, file: !2919, line: 56, baseType: !469, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !2949, file: !2919, line: 57, baseType: !469, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !2949, file: !2919, line: 59, baseType: !1364, size: 96, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !2949, file: !2919, line: 60, baseType: !1364, size: 96, offset: 224)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !2949, file: !2919, line: 61, baseType: !1364, size: 96, offset: 320)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !2949, file: !2919, line: 63, baseType: !469, size: 32, offset: 416)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !2949, file: !2919, line: 64, baseType: !469, size: 32, offset: 448)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !2949, file: !2919, line: 65, baseType: !469, size: 32, offset: 480)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !2949, file: !2919, line: 67, baseType: !387, size: 16, offset: 512)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !2949, file: !2919, line: 68, baseType: !387, size: 16, offset: 528)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !2949, file: !2919, line: 69, baseType: !387, size: 16, offset: 544)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !2949, file: !2919, line: 70, baseType: !387, size: 16, offset: 560)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !2949, file: !2919, line: 72, baseType: !469, size: 32, offset: 576)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !2949, file: !2919, line: 73, baseType: !469, size: 32, offset: 608)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !2949, file: !2919, line: 74, baseType: !469, size: 32, offset: 640)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !2949, file: !2919, line: 75, baseType: !469, size: 32, offset: 672)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !2918, file: !2919, line: 109, baseType: !2970, size: 128, offset: 2496)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !2919, line: 79, size: 128, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2970, file: !2919, line: 80, baseType: !389, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !2970, file: !2919, line: 81, baseType: !389, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !2970, file: !2919, line: 82, baseType: !389, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2970, file: !2919, line: 83, baseType: !389, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !2918, file: !2919, line: 111, baseType: !469, size: 32, offset: 2624)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !2918, file: !2919, line: 111, baseType: !469, size: 32, offset: 2656)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !2918, file: !2919, line: 112, baseType: !469, size: 32, offset: 2688)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !2918, file: !2919, line: 112, baseType: !469, size: 32, offset: 2720)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2918, file: !2919, line: 113, baseType: !469, size: 32, offset: 2752)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !2918, file: !2919, line: 114, baseType: !469, size: 32, offset: 2784)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !2918, file: !2919, line: 114, baseType: !469, size: 32, offset: 2816)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !2918, file: !2919, line: 115, baseType: !387, size: 16, offset: 2848)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !2918, file: !2919, line: 115, baseType: !387, size: 16, offset: 2864)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2918, file: !2919, line: 116, baseType: !387, size: 16, offset: 2880)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !2918, file: !2919, line: 117, baseType: !374, size: 8, offset: 2896)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !2918, file: !2919, line: 117, baseType: !374, size: 8, offset: 2904)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !2918, file: !2919, line: 119, baseType: !469, size: 32, offset: 2912)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !2918, file: !2919, line: 119, baseType: !469, size: 32, offset: 2944)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !2918, file: !2919, line: 120, baseType: !387, size: 16, offset: 2976)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !2918, file: !2919, line: 120, baseType: !387, size: 16, offset: 2992)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !2918, file: !2919, line: 121, baseType: !469, size: 32, offset: 3008)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !2918, file: !2919, line: 121, baseType: !469, size: 32, offset: 3040)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !2918, file: !2919, line: 122, baseType: !469, size: 32, offset: 3072)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !2918, file: !2919, line: 123, baseType: !469, size: 32, offset: 3104)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !2918, file: !2919, line: 124, baseType: !387, size: 16, offset: 3136)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !2918, file: !2919, line: 125, baseType: !387, size: 16, offset: 3152)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2918, file: !2919, line: 127, baseType: !389, size: 32, offset: 3168)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !2918, file: !2919, line: 127, baseType: !389, size: 32, offset: 3200)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2918, file: !2919, line: 128, baseType: !389, size: 32, offset: 3232)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !2918, file: !2919, line: 128, baseType: !389, size: 32, offset: 3264)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2918, file: !2919, line: 129, baseType: !387, size: 16, offset: 3296)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !2918, file: !2919, line: 129, baseType: !387, size: 16, offset: 3312)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2918, file: !2919, line: 129, baseType: !387, size: 16, offset: 3328)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2918, file: !2919, line: 129, baseType: !387, size: 16, offset: 3344)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2918, file: !2919, line: 130, baseType: !469, size: 32, offset: 3360)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !2918, file: !2919, line: 130, baseType: !469, size: 32, offset: 3392)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !2918, file: !2919, line: 130, baseType: !469, size: 32, offset: 3424)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !2918, file: !2919, line: 130, baseType: !469, size: 32, offset: 3456)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !2918, file: !2919, line: 131, baseType: !469, size: 32, offset: 3488)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !2918, file: !2919, line: 131, baseType: !469, size: 32, offset: 3520)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !2918, file: !2919, line: 131, baseType: !469, size: 32, offset: 3552)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !2918, file: !2919, line: 131, baseType: !469, size: 32, offset: 3584)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !2918, file: !2919, line: 132, baseType: !469, size: 32, offset: 3616)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !2918, file: !2919, line: 132, baseType: !469, size: 32, offset: 3648)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !2918, file: !2919, line: 133, baseType: !404, size: 512, offset: 3680)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !2918, file: !2919, line: 135, baseType: !469, size: 32, offset: 4192)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !2918, file: !2919, line: 136, baseType: !469, size: 32, offset: 4224)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !2918, file: !2919, line: 137, baseType: !469, size: 32, offset: 4256)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !2918, file: !2919, line: 138, baseType: !389, size: 32, offset: 4288)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !2918, file: !2919, line: 141, baseType: !374, size: 8, offset: 4320)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2918, file: !2919, line: 141, baseType: !374, size: 8, offset: 4328)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !2918, file: !2919, line: 141, baseType: !374, size: 8, offset: 4336)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2918, file: !2919, line: 141, baseType: !374, size: 8, offset: 4344)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !2918, file: !2919, line: 142, baseType: !387, size: 16, offset: 4352)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2918, file: !2919, line: 142, baseType: !387, size: 16, offset: 4368)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !2918, file: !2919, line: 142, baseType: !387, size: 16, offset: 4384)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !2918, file: !2919, line: 145, baseType: !374, size: 8, offset: 4400)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2918, file: !2919, line: 145, baseType: !374, size: 8, offset: 4408)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !2918, file: !2919, line: 148, baseType: !387, size: 16, offset: 4416)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !2918, file: !2919, line: 148, baseType: !387, size: 16, offset: 4432)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !2918, file: !2919, line: 149, baseType: !469, size: 32, offset: 4448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !2918, file: !2919, line: 149, baseType: !469, size: 32, offset: 4480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2918, file: !2919, line: 152, baseType: !890, size: 128, offset: 4512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !2918, file: !2919, line: 153, baseType: !469, size: 32, offset: 4640)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !2918, file: !2919, line: 154, baseType: !469, size: 32, offset: 4672)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2918, file: !2919, line: 157, baseType: !387, size: 16, offset: 4704)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2918, file: !2919, line: 157, baseType: !387, size: 16, offset: 4720)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !2918, file: !2919, line: 160, baseType: !1563, size: 64, offset: 4736)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !2918, file: !2919, line: 161, baseType: !1563, size: 64, offset: 4800)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !2918, file: !2919, line: 162, baseType: !374, size: 8, offset: 4864)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !2918, file: !2919, line: 162, baseType: !374, size: 8, offset: 4872)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !2918, file: !2919, line: 163, baseType: !374, size: 8, offset: 4880)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !2918, file: !2919, line: 163, baseType: !374, size: 8, offset: 4888)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !2918, file: !2919, line: 164, baseType: !387, size: 16, offset: 4896)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2918, file: !2919, line: 164, baseType: !387, size: 16, offset: 4912)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !2918, file: !2919, line: 165, baseType: !469, size: 32, offset: 4928)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !2918, file: !2919, line: 165, baseType: !469, size: 32, offset: 4960)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2918, file: !2919, line: 167, baseType: !603, size: 1152, offset: 4992)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2918, file: !2919, line: 168, baseType: !686, size: 64, offset: 6144)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2918, file: !2919, line: 169, baseType: !599, size: 64, offset: 6208)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2918, file: !2919, line: 170, baseType: !3053, size: 64, offset: 6272)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !3055, line: 51, size: 1216, elements: !3056)
!3055 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3056 = !{!3057, !3058, !3059, !3060}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3054, file: !3055, line: 52, baseType: !354, size: 960)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !3054, file: !3055, line: 54, baseType: !414, size: 128, offset: 960)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3054, file: !3055, line: 59, baseType: !7, size: 32, offset: 1088)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !3054, file: !3055, line: 60, baseType: !1364, size: 96, offset: 1120)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2918, file: !2919, line: 171, baseType: !1525, size: 64, offset: 6336)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2918, file: !2919, line: 174, baseType: !469, size: 32, offset: 6400)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !2918, file: !2919, line: 174, baseType: !469, size: 32, offset: 6432)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !2918, file: !2919, line: 174, baseType: !469, size: 32, offset: 6464)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !2918, file: !2919, line: 175, baseType: !469, size: 32, offset: 6496)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !2918, file: !2919, line: 175, baseType: !469, size: 32, offset: 6528)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !2918, file: !2919, line: 176, baseType: !387, size: 16, offset: 6560)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2918, file: !2919, line: 176, baseType: !387, size: 16, offset: 6576)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !2918, file: !2919, line: 179, baseType: !1364, size: 96, offset: 6592)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !2918, file: !2919, line: 179, baseType: !1364, size: 96, offset: 6688)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !2918, file: !2919, line: 180, baseType: !469, size: 32, offset: 6784)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !2918, file: !2919, line: 180, baseType: !469, size: 32, offset: 6816)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !2918, file: !2919, line: 180, baseType: !469, size: 32, offset: 6848)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !2918, file: !2919, line: 181, baseType: !469, size: 32, offset: 6880)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !2918, file: !2919, line: 181, baseType: !469, size: 32, offset: 6912)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !2918, file: !2919, line: 182, baseType: !469, size: 32, offset: 6944)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !2918, file: !2919, line: 182, baseType: !469, size: 32, offset: 6976)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !2918, file: !2919, line: 183, baseType: !387, size: 16, offset: 7008)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !2918, file: !2919, line: 183, baseType: !387, size: 16, offset: 7024)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !2918, file: !2919, line: 185, baseType: !389, size: 32, offset: 7040)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !2918, file: !2919, line: 186, baseType: !387, size: 16, offset: 7072)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2918, file: !2919, line: 187, baseType: !387, size: 16, offset: 7088)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !2918, file: !2919, line: 190, baseType: !890, size: 128, offset: 7104)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !2918, file: !2919, line: 191, baseType: !387, size: 16, offset: 7232)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !2918, file: !2919, line: 192, baseType: !387, size: 16, offset: 7248)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !2918, file: !2919, line: 195, baseType: !387, size: 16, offset: 7264)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !2918, file: !2919, line: 196, baseType: !387, size: 16, offset: 7280)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !2918, file: !2919, line: 197, baseType: !387, size: 16, offset: 7296)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2918, file: !2919, line: 198, baseType: !1640, size: 48, offset: 7312)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !2918, file: !2919, line: 200, baseType: !3091, size: 64, offset: 7360)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !2919, line: 86, size: 192, elements: !3093)
!3093 = !{!3094, !3095, !3096, !3097}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3092, file: !2919, line: 87, baseType: !1486, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !3092, file: !2919, line: 88, baseType: !1255, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3092, file: !2919, line: 89, baseType: !389, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3092, file: !2919, line: 90, baseType: !389, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !2918, file: !2919, line: 202, baseType: !414, size: 128, offset: 7424)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !351, file: !40, line: 151, baseType: !1255, size: 64, offset: 3584)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !351, file: !40, line: 152, baseType: !389, size: 32, offset: 3648)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !351, file: !40, line: 153, baseType: !389, size: 32, offset: 3680)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !351, file: !40, line: 156, baseType: !1364, size: 96, offset: 3712)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !351, file: !40, line: 156, baseType: !1364, size: 96, offset: 3808)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !351, file: !40, line: 156, baseType: !1364, size: 96, offset: 3904)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !351, file: !40, line: 157, baseType: !1364, size: 96, offset: 4000)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !351, file: !40, line: 158, baseType: !1364, size: 96, offset: 4096)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !351, file: !40, line: 159, baseType: !1364, size: 96, offset: 4192)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !351, file: !40, line: 160, baseType: !1364, size: 96, offset: 4288)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !351, file: !40, line: 160, baseType: !1364, size: 96, offset: 4384)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !351, file: !40, line: 161, baseType: !890, size: 128, offset: 4480)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !351, file: !40, line: 161, baseType: !890, size: 128, offset: 4608)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !351, file: !40, line: 162, baseType: !1364, size: 96, offset: 4736)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !351, file: !40, line: 162, baseType: !1364, size: 96, offset: 4832)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !351, file: !40, line: 163, baseType: !469, size: 32, offset: 4928)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !351, file: !40, line: 163, baseType: !469, size: 32, offset: 4960)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !351, file: !40, line: 164, baseType: !1599, size: 512, offset: 4992)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !351, file: !40, line: 165, baseType: !1599, size: 512, offset: 5504)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !351, file: !40, line: 166, baseType: !1599, size: 512, offset: 6016)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !351, file: !40, line: 167, baseType: !1599, size: 512, offset: 6528)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !351, file: !40, line: 176, baseType: !1599, size: 512, offset: 7040)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !351, file: !40, line: 178, baseType: !7, size: 32, offset: 7552)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !351, file: !40, line: 180, baseType: !387, size: 16, offset: 7584)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !351, file: !40, line: 181, baseType: !387, size: 16, offset: 7600)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !351, file: !40, line: 183, baseType: !387, size: 16, offset: 7616)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !351, file: !40, line: 183, baseType: !387, size: 16, offset: 7632)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !351, file: !40, line: 184, baseType: !387, size: 16, offset: 7648)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !351, file: !40, line: 184, baseType: !387, size: 16, offset: 7664)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !351, file: !40, line: 185, baseType: !387, size: 16, offset: 7680)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !351, file: !40, line: 186, baseType: !387, size: 16, offset: 7696)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !351, file: !40, line: 187, baseType: !387, size: 16, offset: 7712)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !351, file: !40, line: 188, baseType: !374, size: 8, offset: 7728)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !351, file: !40, line: 189, baseType: !374, size: 8, offset: 7736)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !351, file: !40, line: 192, baseType: !389, size: 32, offset: 7744)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !351, file: !40, line: 192, baseType: !389, size: 32, offset: 7776)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !351, file: !40, line: 192, baseType: !389, size: 32, offset: 7808)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !351, file: !40, line: 192, baseType: !389, size: 32, offset: 7840)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !351, file: !40, line: 194, baseType: !389, size: 32, offset: 7872)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !351, file: !40, line: 202, baseType: !469, size: 32, offset: 7904)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !351, file: !40, line: 202, baseType: !469, size: 32, offset: 7936)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !351, file: !40, line: 202, baseType: !469, size: 32, offset: 7968)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !351, file: !40, line: 211, baseType: !469, size: 32, offset: 8000)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !351, file: !40, line: 212, baseType: !469, size: 32, offset: 8032)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !351, file: !40, line: 213, baseType: !469, size: 32, offset: 8064)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !351, file: !40, line: 214, baseType: !469, size: 32, offset: 8096)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !351, file: !40, line: 215, baseType: !469, size: 32, offset: 8128)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !351, file: !40, line: 216, baseType: !469, size: 32, offset: 8160)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !351, file: !40, line: 219, baseType: !469, size: 32, offset: 8192)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !351, file: !40, line: 220, baseType: !469, size: 32, offset: 8224)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !351, file: !40, line: 221, baseType: !469, size: 32, offset: 8256)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !351, file: !40, line: 224, baseType: !3151, size: 16, offset: 8288)
!3151 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !351, file: !40, line: 224, baseType: !3151, size: 16, offset: 8304)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !351, file: !40, line: 226, baseType: !387, size: 16, offset: 8320)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !351, file: !40, line: 228, baseType: !374, size: 8, offset: 8336)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !351, file: !40, line: 229, baseType: !374, size: 8, offset: 8344)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !351, file: !40, line: 231, baseType: !387, size: 16, offset: 8352)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !351, file: !40, line: 232, baseType: !374, size: 8, offset: 8368)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !351, file: !40, line: 233, baseType: !374, size: 8, offset: 8376)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !351, file: !40, line: 234, baseType: !469, size: 32, offset: 8384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !351, file: !40, line: 235, baseType: !469, size: 32, offset: 8416)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !351, file: !40, line: 237, baseType: !414, size: 128, offset: 8448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !351, file: !40, line: 238, baseType: !414, size: 128, offset: 8576)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !351, file: !40, line: 239, baseType: !414, size: 128, offset: 8704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !351, file: !40, line: 240, baseType: !414, size: 128, offset: 8832)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !351, file: !40, line: 242, baseType: !469, size: 32, offset: 8960)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !351, file: !40, line: 244, baseType: !387, size: 16, offset: 8992)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !351, file: !40, line: 245, baseType: !3151, size: 16, offset: 9008)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !351, file: !40, line: 246, baseType: !890, size: 128, offset: 9024)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !351, file: !40, line: 248, baseType: !389, size: 32, offset: 9152)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !351, file: !40, line: 249, baseType: !389, size: 32, offset: 9184)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !351, file: !40, line: 251, baseType: !3172, size: 64, offset: 9216)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !271, line: 215, size: 960, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3173, file: !271, line: 216, baseType: !389, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !3173, file: !271, line: 217, baseType: !469, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !3173, file: !271, line: 218, baseType: !469, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3173, file: !271, line: 219, baseType: !469, size: 32, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !3173, file: !271, line: 221, baseType: !389, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !3173, file: !271, line: 222, baseType: !389, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !3173, file: !271, line: 223, baseType: !389, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !3173, file: !271, line: 224, baseType: !389, size: 32, offset: 224)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !3173, file: !271, line: 226, baseType: !469, size: 32, offset: 256)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !3173, file: !271, line: 227, baseType: !469, size: 32, offset: 288)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !3173, file: !271, line: 228, baseType: !469, size: 32, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !3173, file: !271, line: 229, baseType: !469, size: 32, offset: 352)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !3173, file: !271, line: 231, baseType: !469, size: 32, offset: 384)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !3173, file: !271, line: 232, baseType: !469, size: 32, offset: 416)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !3173, file: !271, line: 233, baseType: !469, size: 32, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !3173, file: !271, line: 234, baseType: !469, size: 32, offset: 480)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !3173, file: !271, line: 236, baseType: !469, size: 32, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !3173, file: !271, line: 237, baseType: !469, size: 32, offset: 544)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !3173, file: !271, line: 238, baseType: !469, size: 32, offset: 576)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !3173, file: !271, line: 239, baseType: !469, size: 32, offset: 608)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !3173, file: !271, line: 241, baseType: !469, size: 32, offset: 640)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !3173, file: !271, line: 242, baseType: !469, size: 32, offset: 672)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !3173, file: !271, line: 243, baseType: !469, size: 32, offset: 704)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !3173, file: !271, line: 244, baseType: !469, size: 32, offset: 736)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !3173, file: !271, line: 246, baseType: !469, size: 32, offset: 768)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !3173, file: !271, line: 247, baseType: !469, size: 32, offset: 800)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !3173, file: !271, line: 248, baseType: !389, size: 32, offset: 832)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !3173, file: !271, line: 249, baseType: !389, size: 32, offset: 864)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !3173, file: !271, line: 250, baseType: !469, size: 32, offset: 896)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3173, file: !271, line: 251, baseType: !469, size: 32, offset: 928)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !351, file: !40, line: 253, baseType: !374, size: 8, offset: 9280)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !351, file: !40, line: 254, baseType: !374, size: 8, offset: 9288)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !351, file: !40, line: 255, baseType: !387, size: 16, offset: 9296)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !351, file: !40, line: 256, baseType: !1364, size: 96, offset: 9312)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !351, file: !40, line: 258, baseType: !414, size: 128, offset: 9408)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !351, file: !40, line: 259, baseType: !414, size: 128, offset: 9536)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !351, file: !40, line: 260, baseType: !414, size: 128, offset: 9664)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !351, file: !40, line: 261, baseType: !414, size: 128, offset: 9792)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !351, file: !40, line: 263, baseType: !3214, size: 64, offset: 9920)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !271, line: 61, size: 1280, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3258, !3259, !3260}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3215, file: !271, line: 62, baseType: !389, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !3215, file: !271, line: 63, baseType: !387, size: 16, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !3215, file: !271, line: 64, baseType: !387, size: 16, offset: 48)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !3215, file: !271, line: 65, baseType: !387, size: 16, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !3215, file: !271, line: 66, baseType: !387, size: 16, offset: 80)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !3215, file: !271, line: 67, baseType: !387, size: 16, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3215, file: !271, line: 68, baseType: !387, size: 16, offset: 112)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !3215, file: !271, line: 68, baseType: !387, size: 16, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !3215, file: !271, line: 69, baseType: !387, size: 16, offset: 144)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !3215, file: !271, line: 72, baseType: !469, size: 32, offset: 160)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !3215, file: !271, line: 73, baseType: !469, size: 32, offset: 192)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !3215, file: !271, line: 74, baseType: !469, size: 32, offset: 224)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !3215, file: !271, line: 77, baseType: !469, size: 32, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !3215, file: !271, line: 80, baseType: !469, size: 32, offset: 288)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !3215, file: !271, line: 81, baseType: !469, size: 32, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !3215, file: !271, line: 82, baseType: !469, size: 32, offset: 352)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !3215, file: !271, line: 83, baseType: !469, size: 32, offset: 384)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !3215, file: !271, line: 84, baseType: !469, size: 32, offset: 416)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !3215, file: !271, line: 85, baseType: !469, size: 32, offset: 448)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !3215, file: !271, line: 88, baseType: !469, size: 32, offset: 480)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !3215, file: !271, line: 89, baseType: !469, size: 32, offset: 512)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !3215, file: !271, line: 90, baseType: !469, size: 32, offset: 544)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !3215, file: !271, line: 91, baseType: !469, size: 32, offset: 576)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !3215, file: !271, line: 92, baseType: !469, size: 32, offset: 608)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !3215, file: !271, line: 93, baseType: !469, size: 32, offset: 640)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !3215, file: !271, line: 95, baseType: !469, size: 32, offset: 672)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !3215, file: !271, line: 98, baseType: !469, size: 32, offset: 704)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !3215, file: !271, line: 99, baseType: !469, size: 32, offset: 736)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !3215, file: !271, line: 100, baseType: !469, size: 32, offset: 768)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !3215, file: !271, line: 103, baseType: !469, size: 32, offset: 800)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !3215, file: !271, line: 103, baseType: !469, size: 32, offset: 832)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !3215, file: !271, line: 104, baseType: !469, size: 32, offset: 864)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !3215, file: !271, line: 104, baseType: !469, size: 32, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !3215, file: !271, line: 104, baseType: !469, size: 32, offset: 928)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !3215, file: !271, line: 104, baseType: !469, size: 32, offset: 960)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !3215, file: !271, line: 107, baseType: !469, size: 32, offset: 992)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3215, file: !271, line: 108, baseType: !613, size: 64, offset: 1024)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !3215, file: !271, line: 111, baseType: !3255, size: 64, offset: 1088)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !3257, line: 43, flags: DIFlagFwdDecl)
!3257 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !3215, file: !271, line: 112, baseType: !469, size: 32, offset: 1152)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3215, file: !271, line: 113, baseType: !389, size: 32, offset: 1184)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !3215, file: !271, line: 115, baseType: !522, size: 64, offset: 1216)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !351, file: !40, line: 264, baseType: !3262, size: 64, offset: 9984)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !271, line: 268, size: 3776, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3270, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3322, !3323, !3324, !4347, !4348, !4349, !4350, !4351, !4352}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3263, file: !271, line: 270, baseType: !389, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !3263, file: !271, line: 270, baseType: !389, size: 32, offset: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !3263, file: !271, line: 271, baseType: !3268, size: 64, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3269 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !271, line: 271, flags: DIFlagFwdDecl)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !3263, file: !271, line: 272, baseType: !3271, size: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !271, line: 272, flags: DIFlagFwdDecl)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3263, file: !271, line: 273, baseType: !374, size: 8, offset: 192)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !3263, file: !271, line: 274, baseType: !374, size: 8, offset: 200)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !3263, file: !271, line: 275, baseType: !387, size: 16, offset: 208)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !3263, file: !271, line: 280, baseType: !469, size: 32, offset: 224)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !3263, file: !271, line: 281, baseType: !404, size: 512, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !3263, file: !271, line: 285, baseType: !469, size: 32, offset: 768)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !3263, file: !271, line: 286, baseType: !469, size: 32, offset: 800)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !3263, file: !271, line: 287, baseType: !469, size: 32, offset: 832)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !3263, file: !271, line: 288, baseType: !469, size: 32, offset: 864)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !3263, file: !271, line: 291, baseType: !469, size: 32, offset: 896)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !3263, file: !271, line: 292, baseType: !469, size: 32, offset: 928)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !3263, file: !271, line: 293, baseType: !469, size: 32, offset: 960)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !3263, file: !271, line: 294, baseType: !469, size: 32, offset: 992)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !3263, file: !271, line: 295, baseType: !469, size: 32, offset: 1024)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !3263, file: !271, line: 296, baseType: !387, size: 16, offset: 1056)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !3263, file: !271, line: 297, baseType: !404, size: 512, offset: 1072)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !3263, file: !271, line: 301, baseType: !387, size: 16, offset: 1584)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !3263, file: !271, line: 304, baseType: !469, size: 32, offset: 1600)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !3263, file: !271, line: 305, baseType: !469, size: 32, offset: 1632)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !3263, file: !271, line: 306, baseType: !404, size: 512, offset: 1664)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3263, file: !271, line: 312, baseType: !389, size: 32, offset: 2176)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !3263, file: !271, line: 312, baseType: !389, size: 32, offset: 2208)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3263, file: !271, line: 313, baseType: !389, size: 32, offset: 2240)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3263, file: !271, line: 314, baseType: !387, size: 16, offset: 2272)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !3263, file: !271, line: 314, baseType: !387, size: 16, offset: 2288)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3263, file: !271, line: 317, baseType: !3299, size: 64, offset: 2304)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !271, line: 213, baseType: !3302)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !271, line: 211, size: 128, elements: !3303)
!3303 = !{!3304}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3302, file: !271, line: 212, baseType: !890, size: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !3263, file: !271, line: 318, baseType: !389, size: 32, offset: 2368)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3263, file: !271, line: 318, baseType: !389, size: 32, offset: 2400)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !3263, file: !271, line: 320, baseType: !469, size: 32, offset: 2432)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !3263, file: !271, line: 323, baseType: !469, size: 32, offset: 2464)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !3263, file: !271, line: 324, baseType: !469, size: 32, offset: 2496)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !3263, file: !271, line: 325, baseType: !469, size: 32, offset: 2528)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !3263, file: !271, line: 326, baseType: !387, size: 16, offset: 2560)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !3263, file: !271, line: 327, baseType: !387, size: 16, offset: 2576)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !3263, file: !271, line: 328, baseType: !387, size: 16, offset: 2592)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !3263, file: !271, line: 329, baseType: !387, size: 16, offset: 2608)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !3263, file: !271, line: 330, baseType: !387, size: 16, offset: 2624)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !3263, file: !271, line: 331, baseType: !387, size: 16, offset: 2640)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !3263, file: !271, line: 332, baseType: !387, size: 16, offset: 2656)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !3263, file: !271, line: 332, baseType: !387, size: 16, offset: 2672)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !3263, file: !271, line: 335, baseType: !3320, size: 64, offset: 2688)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !271, line: 335, flags: DIFlagFwdDecl)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !3263, file: !271, line: 336, baseType: !469, size: 32, offset: 2752)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !3263, file: !271, line: 337, baseType: !469, size: 32, offset: 2784)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3263, file: !271, line: 339, baseType: !3325, size: 64, offset: 2816)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !271, line: 170, size: 10560, elements: !3327)
!3327 = !{!3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !4346}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3326, file: !271, line: 171, baseType: !3325, size: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3326, file: !271, line: 171, baseType: !3325, size: 64, offset: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3326, file: !271, line: 172, baseType: !389, size: 32, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3326, file: !271, line: 174, baseType: !389, size: 32, offset: 160)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !3326, file: !271, line: 186, baseType: !389, size: 32, offset: 192)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !3326, file: !271, line: 187, baseType: !389, size: 32, offset: 224)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !3326, file: !271, line: 188, baseType: !389, size: 32, offset: 256)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !3326, file: !271, line: 189, baseType: !389, size: 32, offset: 288)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !3326, file: !271, line: 190, baseType: !389, size: 32, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !3326, file: !271, line: 191, baseType: !389, size: 32, offset: 352)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3326, file: !271, line: 192, baseType: !389, size: 32, offset: 384)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3326, file: !271, line: 195, baseType: !389, size: 32, offset: 416)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3326, file: !271, line: 196, baseType: !389, size: 32, offset: 448)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !3326, file: !271, line: 197, baseType: !387, size: 16, offset: 480)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3326, file: !271, line: 197, baseType: !387, size: 16, offset: 496)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3326, file: !271, line: 199, baseType: !404, size: 512, offset: 512)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !3326, file: !271, line: 200, baseType: !404, size: 512, offset: 1024)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3326, file: !271, line: 201, baseType: !404, size: 512, offset: 1536)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !3326, file: !271, line: 202, baseType: !373, size: 8192, offset: 2048)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !3326, file: !271, line: 203, baseType: !1255, size: 64, offset: 10240)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !3326, file: !271, line: 205, baseType: !416, size: 128, offset: 10304)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3326, file: !271, line: 207, baseType: !3350, size: 64, offset: 10432)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !3352, line: 235, size: 2560, elements: !3353)
!3352 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3353 = !{!3354, !3355, !3445, !3448, !3602, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4345}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !3351, file: !3352, line: 236, baseType: !414, size: 128)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !3351, file: !3352, line: 237, baseType: !3356, size: 64, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !3352, line: 218, size: 1152, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3379, !3436, !3440, !3441, !3442, !3443, !3444}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3357, file: !3352, line: 219, baseType: !3356, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3357, file: !3352, line: 219, baseType: !3356, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3357, file: !3352, line: 220, baseType: !3362, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !3352, line: 212, size: 128, elements: !3364)
!3364 = !{!3365, !3377, !3378}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3363, file: !3352, line: 213, baseType: !3366, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !3352, line: 194, size: 448, elements: !3368)
!3368 = !{!3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3367, file: !3352, line: 195, baseType: !596, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3367, file: !3352, line: 196, baseType: !596, size: 64, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3367, file: !3352, line: 197, baseType: !596, size: 64, offset: 128)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3367, file: !3352, line: 198, baseType: !596, size: 64, offset: 192)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !3367, file: !3352, line: 200, baseType: !1364, size: 96, offset: 256)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !3367, file: !3352, line: 201, baseType: !469, size: 32, offset: 352)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3367, file: !3352, line: 202, baseType: !469, size: 32, offset: 384)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3367, file: !3352, line: 203, baseType: !387, size: 16, offset: 416)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3363, file: !3352, line: 214, baseType: !389, size: 32, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3363, file: !3352, line: 215, baseType: !387, size: 16, offset: 96)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3357, file: !3352, line: 223, baseType: !3380, size: 64, offset: 192)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !3382, line: 95, size: 1600, elements: !3383)
!3382 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3383 = !{!3384, !3393, !3394, !3404, !3406, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3381, file: !3382, line: 96, baseType: !3385, size: 448)
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !3382, line: 55, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !3382, line: 49, size: 448, elements: !3387)
!3387 = !{!3388, !3389, !3390, !3391, !3392}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3386, file: !3382, line: 50, baseType: !1364, size: 96)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3386, file: !3382, line: 51, baseType: !1364, size: 96, offset: 96)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3386, file: !3382, line: 52, baseType: !890, size: 128, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !3386, file: !3382, line: 53, baseType: !1364, size: 96, offset: 320)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3386, file: !3382, line: 54, baseType: !469, size: 32, offset: 416)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !3381, file: !3382, line: 98, baseType: !3385, size: 448, offset: 448)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !3381, file: !3382, line: 100, baseType: !3395, size: 64, offset: 896)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !3382, line: 47, baseType: !3397)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !3382, line: 41, size: 192, elements: !3398)
!3398 = !{!3399, !3400, !3401, !3402, !3403}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3397, file: !3382, line: 42, baseType: !1364, size: 96)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3397, file: !3382, line: 43, baseType: !469, size: 32, offset: 96)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3397, file: !3382, line: 44, baseType: !469, size: 32, offset: 128)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3397, file: !3382, line: 45, baseType: !387, size: 16, offset: 160)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3397, file: !3382, line: 46, baseType: !387, size: 16, offset: 176)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3381, file: !3382, line: 102, baseType: !3405, size: 64, offset: 960)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !3381, file: !3382, line: 104, baseType: !3407, size: 64, offset: 1024)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !3382, line: 63, baseType: !3409)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !3382, line: 57, size: 448, elements: !3410)
!3410 = !{!3411, !3412, !3419, !3420, !3421}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !3409, file: !3382, line: 58, baseType: !522, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3409, file: !3382, line: 59, baseType: !3413, size: 160, offset: 64)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !293, line: 109, size: 160, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3413, file: !293, line: 110, baseType: !469, size: 32)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3413, file: !293, line: 110, baseType: !1364, size: 96, offset: 32)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !3413, file: !293, line: 111, baseType: !387, size: 16, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3413, file: !293, line: 111, baseType: !387, size: 16, offset: 144)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3409, file: !3382, line: 60, baseType: !1364, size: 96, offset: 224)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !3409, file: !3382, line: 61, baseType: !1364, size: 96, offset: 320)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3409, file: !3382, line: 62, baseType: !469, size: 32, offset: 416)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3381, file: !3382, line: 106, baseType: !389, size: 32, offset: 1088)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3381, file: !3382, line: 108, baseType: !469, size: 32, offset: 1120)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3381, file: !3382, line: 108, baseType: !469, size: 32, offset: 1152)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !3381, file: !3382, line: 109, baseType: !469, size: 32, offset: 1184)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3381, file: !3382, line: 111, baseType: !389, size: 32, offset: 1216)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !3381, file: !3382, line: 112, baseType: !389, size: 32, offset: 1248)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3381, file: !3382, line: 114, baseType: !890, size: 128, offset: 1280)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3381, file: !3382, line: 114, baseType: !469, size: 32, offset: 1408)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3381, file: !3382, line: 117, baseType: !469, size: 32, offset: 1440)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !3381, file: !3382, line: 119, baseType: !469, size: 32, offset: 1472)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3381, file: !3382, line: 120, baseType: !389, size: 32, offset: 1504)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !3381, file: !3382, line: 122, baseType: !389, size: 32, offset: 1536)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3381, file: !3382, line: 123, baseType: !387, size: 16, offset: 1568)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !3381, file: !3382, line: 124, baseType: !387, size: 16, offset: 1584)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !3357, file: !3352, line: 224, baseType: !3437, size: 64, offset: 256)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !3439, line: 219, flags: DIFlagFwdDecl)
!3439 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_object.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !3357, file: !3352, line: 225, baseType: !596, size: 64, offset: 320)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !3357, file: !3352, line: 226, baseType: !389, size: 32, offset: 384)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !3357, file: !3352, line: 229, baseType: !416, size: 128, offset: 448)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3357, file: !3352, line: 231, baseType: !389, size: 32, offset: 576)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3357, file: !3352, line: 232, baseType: !404, size: 512, offset: 608)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3351, file: !3352, line: 238, baseType: !3446, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !3352, line: 216, baseType: !3363)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3351, file: !3352, line: 240, baseType: !3449, size: 1600, offset: 256)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !3352, line: 122, size: 1600, elements: !3450)
!3450 = !{!3451, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3469, !3473, !3477, !3558, !3559, !3575, !3579, !3583, !3587, !3591, !3592, !3596, !3597, !3598, !3600}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3449, file: !3352, line: 123, baseType: !3452, size: 64)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3449, file: !3352, line: 123, baseType: !3452, size: 64, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3449, file: !3352, line: 125, baseType: !515, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3449, file: !3352, line: 126, baseType: !522, size: 64, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !3449, file: !3352, line: 127, baseType: !348, size: 64, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3449, file: !3352, line: 128, baseType: !7, size: 32, offset: 320)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !3449, file: !3352, line: 129, baseType: !7, size: 32, offset: 352)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3449, file: !3352, line: 130, baseType: !7, size: 32, offset: 384)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !3449, file: !3352, line: 132, baseType: !7, size: 32, offset: 416)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !3449, file: !3352, line: 133, baseType: !7, size: 32, offset: 448)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3449, file: !3352, line: 136, baseType: !7, size: 32, offset: 480)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !3449, file: !3352, line: 136, baseType: !7, size: 32, offset: 512)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !3449, file: !3352, line: 139, baseType: !3465, size: 64, offset: 576)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!389, !389, !348, !3468, !389}
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !3449, file: !3352, line: 141, baseType: !3470, size: 64, offset: 640)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !389, !348, !3468, !469, !596}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !3449, file: !3352, line: 143, baseType: !3474, size: 64, offset: 704)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{null, !389, !348, !3468, !469, !469, !469, !596}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !3449, file: !3352, line: 146, baseType: !3478, size: 64, offset: 768)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!389, !3481, !348}
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !3352, line: 118, baseType: !3483)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !3352, line: 109, size: 1536, elements: !3484)
!3484 = !{!3485, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3556}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !3483, file: !3352, line: 110, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3488, line: 7, baseType: !3489)
!3488 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3490, line: 49, size: 1728, elements: !3491)
!3490 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3491 = !{!3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3507, !3509, !3510, !3511, !3514, !3515, !3517, !3518, !3521, !3523, !3526, !3529, !3530, !3531, !3534, !3535}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3489, file: !3490, line: 51, baseType: !389, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3489, file: !3490, line: 54, baseType: !1255, size: 64, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3489, file: !3490, line: 55, baseType: !1255, size: 64, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3489, file: !3490, line: 56, baseType: !1255, size: 64, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3489, file: !3490, line: 57, baseType: !1255, size: 64, offset: 256)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3489, file: !3490, line: 58, baseType: !1255, size: 64, offset: 320)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3489, file: !3490, line: 59, baseType: !1255, size: 64, offset: 384)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3489, file: !3490, line: 60, baseType: !1255, size: 64, offset: 448)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3489, file: !3490, line: 61, baseType: !1255, size: 64, offset: 512)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3489, file: !3490, line: 64, baseType: !1255, size: 64, offset: 576)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3489, file: !3490, line: 65, baseType: !1255, size: 64, offset: 640)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3489, file: !3490, line: 66, baseType: !1255, size: 64, offset: 704)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3489, file: !3490, line: 68, baseType: !3505, size: 64, offset: 768)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3490, line: 36, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3489, file: !3490, line: 70, baseType: !3508, size: 64, offset: 832)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3489, file: !3490, line: 72, baseType: !389, size: 32, offset: 896)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3489, file: !3490, line: 73, baseType: !389, size: 32, offset: 928)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3489, file: !3490, line: 74, baseType: !3512, size: 64, offset: 960)
!3512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2720, line: 152, baseType: !3513)
!3513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3489, file: !3490, line: 77, baseType: !3151, size: 16, offset: 1024)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3489, file: !3490, line: 78, baseType: !3516, size: 8, offset: 1040)
!3516 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3489, file: !3490, line: 79, baseType: !1572, size: 8, offset: 1048)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3489, file: !3490, line: 81, baseType: !3519, size: 64, offset: 1088)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3490, line: 43, baseType: null)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3489, file: !3490, line: 89, baseType: !3522, size: 64, offset: 1152)
!3522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2720, line: 153, baseType: !3513)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3489, file: !3490, line: 91, baseType: !3524, size: 64, offset: 1216)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3490, line: 37, flags: DIFlagFwdDecl)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3489, file: !3490, line: 92, baseType: !3527, size: 64, offset: 1280)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3490, line: 38, flags: DIFlagFwdDecl)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3489, file: !3490, line: 93, baseType: !3508, size: 64, offset: 1344)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3489, file: !3490, line: 94, baseType: !348, size: 64, offset: 1408)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3489, file: !3490, line: 95, baseType: !3532, size: 64, offset: 1472)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3533, line: 46, baseType: !2721)
!3533 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3489, file: !3490, line: 96, baseType: !389, size: 32, offset: 1536)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3489, file: !3490, line: 98, baseType: !3536, size: 160, offset: 1568)
!3536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 160, elements: !3537)
!3537 = !{!3538}
!3538 = !DISubrange(count: 20)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3483, file: !3352, line: 112, baseType: !389, size: 32, offset: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !3483, file: !3352, line: 112, baseType: !389, size: 32, offset: 96)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3483, file: !3352, line: 113, baseType: !7, size: 32, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3483, file: !3352, line: 113, baseType: !7, size: 32, offset: 160)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3483, file: !3352, line: 114, baseType: !7, size: 32, offset: 192)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3483, file: !3352, line: 114, baseType: !7, size: 32, offset: 224)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3483, file: !3352, line: 116, baseType: !3546, size: 736, offset: 256)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !3352, line: 98, size: 736, elements: !3547)
!3547 = !{!3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3546, file: !3352, line: 99, baseType: !7, size: 32)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3546, file: !3352, line: 100, baseType: !1364, size: 96, offset: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3546, file: !3352, line: 101, baseType: !1364, size: 96, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3546, file: !3352, line: 102, baseType: !890, size: 128, offset: 224)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !3546, file: !3352, line: 103, baseType: !1364, size: 96, offset: 352)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3546, file: !3352, line: 104, baseType: !469, size: 32, offset: 448)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !3546, file: !3352, line: 105, baseType: !1364, size: 96, offset: 480)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !3546, file: !3352, line: 106, baseType: !3413, size: 160, offset: 576)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3483, file: !3352, line: 117, baseType: !3557, size: 512, offset: 1024)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 512, elements: !1505)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !3449, file: !3352, line: 148, baseType: !3478, size: 64, offset: 832)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !3449, file: !3352, line: 151, baseType: !3560, size: 64, offset: 896)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{null, !348, !3563, !389}
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !271, line: 159, size: 1408, elements: !3565)
!3565 = !{!3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3564, file: !271, line: 160, baseType: !3563, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3564, file: !271, line: 160, baseType: !3563, size: 64, offset: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3564, file: !271, line: 161, baseType: !7, size: 32, offset: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3564, file: !271, line: 161, baseType: !7, size: 32, offset: 160)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !3564, file: !271, line: 162, baseType: !7, size: 32, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3564, file: !271, line: 162, baseType: !7, size: 32, offset: 224)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3564, file: !271, line: 164, baseType: !3557, size: 512, offset: 256)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3564, file: !271, line: 165, baseType: !3557, size: 512, offset: 768)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !3564, file: !271, line: 167, baseType: !416, size: 128, offset: 1280)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !3449, file: !3352, line: 153, baseType: !3576, size: 64, offset: 960)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{null, !348, !3563, !469}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !3449, file: !3352, line: 155, baseType: !3580, size: 64, offset: 1024)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{null, !348, !3563, !469, !469, !469}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3449, file: !3352, line: 158, baseType: !3584, size: 64, offset: 1088)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!389, !348, !389}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3449, file: !3352, line: 160, baseType: !3588, size: 64, offset: 1152)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !348, !799}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !3449, file: !3352, line: 162, baseType: !3584, size: 64, offset: 1216)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !3449, file: !3352, line: 164, baseType: !3593, size: 64, offset: 1280)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!389, !3481}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !3449, file: !3352, line: 165, baseType: !3593, size: 64, offset: 1344)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3449, file: !3352, line: 167, baseType: !3325, size: 64, offset: 1408)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !3449, file: !3352, line: 169, baseType: !3599, size: 64, offset: 1472)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3449, file: !3352, line: 170, baseType: !3601, size: 64, offset: 1536)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3351, file: !3352, line: 243, baseType: !3603, size: 64, offset: 1856)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !3382, line: 253, size: 5248, elements: !3605)
!3605 = !{!3606, !3607, !3608, !3804, !3807, !3820, !3821, !3825, !3837, !3838, !3839, !3840, !3857, !4262, !4263, !4264, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4289, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4307, !4308, !4309, !4310, !4314, !4331, !4332}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3604, file: !3382, line: 257, baseType: !3603, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3604, file: !3382, line: 257, baseType: !3603, size: 64, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3604, file: !3382, line: 259, baseType: !3609, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !3382, line: 251, baseType: !3611)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !3382, line: 153, size: 6400, elements: !3612)
!3612 = !{!3613, !3614, !3615, !3642, !3663, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3611, file: !3382, line: 154, baseType: !354, size: 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3611, file: !3382, line: 155, baseType: !425, size: 64, offset: 960)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !3611, file: !3382, line: 157, baseType: !3616, size: 64, offset: 1024)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !293, line: 189, size: 832, elements: !3618)
!3618 = !{!3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !3617, file: !293, line: 190, baseType: !389, size: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !3617, file: !293, line: 190, baseType: !389, size: 32, offset: 32)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !3617, file: !293, line: 192, baseType: !469, size: 32, offset: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3617, file: !293, line: 192, baseType: !469, size: 32, offset: 96)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !3617, file: !293, line: 193, baseType: !469, size: 32, offset: 128)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !3617, file: !293, line: 193, baseType: !469, size: 32, offset: 160)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3617, file: !293, line: 195, baseType: !469, size: 32, offset: 192)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !3617, file: !293, line: 195, baseType: !469, size: 32, offset: 224)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3617, file: !293, line: 196, baseType: !469, size: 32, offset: 256)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !3617, file: !293, line: 196, baseType: !469, size: 32, offset: 288)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3617, file: !293, line: 196, baseType: !469, size: 32, offset: 320)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !3617, file: !293, line: 199, baseType: !469, size: 32, offset: 352)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !3617, file: !293, line: 199, baseType: !469, size: 32, offset: 384)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !3617, file: !293, line: 200, baseType: !469, size: 32, offset: 416)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !3617, file: !293, line: 200, baseType: !469, size: 32, offset: 448)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !3617, file: !293, line: 201, baseType: !469, size: 32, offset: 480)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !3617, file: !293, line: 204, baseType: !469, size: 32, offset: 512)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !3617, file: !293, line: 204, baseType: !469, size: 32, offset: 544)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !3617, file: !293, line: 205, baseType: !469, size: 32, offset: 576)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !3617, file: !293, line: 205, baseType: !469, size: 32, offset: 608)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !3617, file: !293, line: 206, baseType: !469, size: 32, offset: 640)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !3617, file: !293, line: 207, baseType: !469, size: 32, offset: 672)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !3617, file: !293, line: 209, baseType: !416, size: 128, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !3611, file: !3382, line: 158, baseType: !3643, size: 64, offset: 1088)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !3382, line: 127, size: 544, elements: !3645)
!3645 = !{!3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3644, file: !3382, line: 129, baseType: !469, size: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !3644, file: !3382, line: 129, baseType: !469, size: 32, offset: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !3644, file: !3382, line: 129, baseType: !469, size: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !3644, file: !3382, line: 130, baseType: !469, size: 32, offset: 96)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !3644, file: !3382, line: 130, baseType: !469, size: 32, offset: 128)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !3644, file: !3382, line: 131, baseType: !469, size: 32, offset: 160)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !3644, file: !3382, line: 131, baseType: !469, size: 32, offset: 192)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !3644, file: !3382, line: 132, baseType: !469, size: 32, offset: 224)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !3644, file: !3382, line: 132, baseType: !469, size: 32, offset: 256)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !3644, file: !3382, line: 133, baseType: !469, size: 32, offset: 288)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !3644, file: !3382, line: 133, baseType: !469, size: 32, offset: 320)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !3644, file: !3382, line: 133, baseType: !469, size: 32, offset: 352)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !3644, file: !3382, line: 134, baseType: !469, size: 32, offset: 384)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3644, file: !3382, line: 135, baseType: !389, size: 32, offset: 416)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !3644, file: !3382, line: 135, baseType: !389, size: 32, offset: 448)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !3644, file: !3382, line: 136, baseType: !387, size: 16, offset: 480)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3644, file: !3382, line: 137, baseType: !1640, size: 48, offset: 496)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3611, file: !3382, line: 160, baseType: !3664, size: 64, offset: 1152)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !271, line: 118, size: 640, elements: !3666)
!3666 = !{!3667, !3668, !3672, !3673, !3674, !3675}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3665, file: !271, line: 119, baseType: !3053, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3665, file: !271, line: 121, baseType: !3669, size: 448, offset: 64)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 448, elements: !3670)
!3670 = !{!3671}
!3671 = !DISubrange(count: 14)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !3665, file: !271, line: 122, baseType: !469, size: 32, offset: 512)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3665, file: !271, line: 123, baseType: !387, size: 16, offset: 544)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3665, file: !271, line: 123, baseType: !1640, size: 48, offset: 560)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3665, file: !271, line: 124, baseType: !389, size: 32, offset: 608)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3611, file: !3382, line: 162, baseType: !389, size: 32, offset: 1216)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3611, file: !3382, line: 162, baseType: !389, size: 32, offset: 1248)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3611, file: !3382, line: 163, baseType: !387, size: 16, offset: 1280)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3611, file: !3382, line: 163, baseType: !387, size: 16, offset: 1296)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !3611, file: !3382, line: 163, baseType: !387, size: 16, offset: 1312)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3611, file: !3382, line: 163, baseType: !387, size: 16, offset: 1328)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !3611, file: !3382, line: 165, baseType: !387, size: 16, offset: 1344)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !3611, file: !3382, line: 165, baseType: !387, size: 16, offset: 1360)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !3611, file: !3382, line: 165, baseType: !387, size: 16, offset: 1376)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !3611, file: !3382, line: 165, baseType: !387, size: 16, offset: 1392)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !3611, file: !3382, line: 166, baseType: !389, size: 32, offset: 1408)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3611, file: !3382, line: 166, baseType: !389, size: 32, offset: 1440)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !3611, file: !3382, line: 167, baseType: !387, size: 16, offset: 1472)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !3611, file: !3382, line: 167, baseType: !387, size: 16, offset: 1488)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !3611, file: !3382, line: 167, baseType: !387, size: 16, offset: 1504)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3611, file: !3382, line: 167, baseType: !387, size: 16, offset: 1520)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !3611, file: !3382, line: 168, baseType: !387, size: 16, offset: 1536)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !3611, file: !3382, line: 168, baseType: !387, size: 16, offset: 1552)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !3611, file: !3382, line: 168, baseType: !387, size: 16, offset: 1568)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !3611, file: !3382, line: 170, baseType: !387, size: 16, offset: 1584)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !3611, file: !3382, line: 170, baseType: !387, size: 16, offset: 1600)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !3611, file: !3382, line: 171, baseType: !387, size: 16, offset: 1616)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !3611, file: !3382, line: 171, baseType: !387, size: 16, offset: 1632)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !3611, file: !3382, line: 174, baseType: !387, size: 16, offset: 1648)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !3611, file: !3382, line: 174, baseType: !387, size: 16, offset: 1664)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !3611, file: !3382, line: 176, baseType: !387, size: 16, offset: 1680)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !3611, file: !3382, line: 176, baseType: !387, size: 16, offset: 1696)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !3611, file: !3382, line: 176, baseType: !387, size: 16, offset: 1712)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !3611, file: !3382, line: 176, baseType: !387, size: 16, offset: 1728)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !3611, file: !3382, line: 177, baseType: !387, size: 16, offset: 1744)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3611, file: !3382, line: 178, baseType: !387, size: 16, offset: 1760)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !3611, file: !3382, line: 178, baseType: !387, size: 16, offset: 1776)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !3611, file: !3382, line: 181, baseType: !387, size: 16, offset: 1792)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !3611, file: !3382, line: 181, baseType: !387, size: 16, offset: 1808)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !3611, file: !3382, line: 181, baseType: !387, size: 16, offset: 1824)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !3611, file: !3382, line: 181, baseType: !387, size: 16, offset: 1840)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !3611, file: !3382, line: 182, baseType: !469, size: 32, offset: 1856)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !3611, file: !3382, line: 182, baseType: !469, size: 32, offset: 1888)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !3611, file: !3382, line: 182, baseType: !946, size: 64, offset: 1920)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !3611, file: !3382, line: 182, baseType: !946, size: 64, offset: 1984)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !3611, file: !3382, line: 182, baseType: !469, size: 32, offset: 2048)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !3611, file: !3382, line: 182, baseType: !469, size: 32, offset: 2080)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !3611, file: !3382, line: 185, baseType: !469, size: 32, offset: 2112)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !3611, file: !3382, line: 188, baseType: !387, size: 16, offset: 2144)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !3611, file: !3382, line: 188, baseType: !387, size: 16, offset: 2160)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !3611, file: !3382, line: 189, baseType: !469, size: 32, offset: 2176)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !3611, file: !3382, line: 189, baseType: !469, size: 32, offset: 2208)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !3611, file: !3382, line: 190, baseType: !469, size: 32, offset: 2240)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !3611, file: !3382, line: 193, baseType: !469, size: 32, offset: 2272)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3611, file: !3382, line: 193, baseType: !469, size: 32, offset: 2304)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3611, file: !3382, line: 193, baseType: !469, size: 32, offset: 2336)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !3611, file: !3382, line: 193, baseType: !469, size: 32, offset: 2368)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !3611, file: !3382, line: 194, baseType: !469, size: 32, offset: 2400)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !3611, file: !3382, line: 194, baseType: !469, size: 32, offset: 2432)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !3611, file: !3382, line: 195, baseType: !469, size: 32, offset: 2464)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !3611, file: !3382, line: 195, baseType: !469, size: 32, offset: 2496)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !3611, file: !3382, line: 195, baseType: !469, size: 32, offset: 2528)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !3611, file: !3382, line: 195, baseType: !3734, size: 32, offset: 2560)
!3734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 32, elements: !1573)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3611, file: !3382, line: 196, baseType: !389, size: 32, offset: 2592)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !3611, file: !3382, line: 196, baseType: !389, size: 32, offset: 2624)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !3611, file: !3382, line: 196, baseType: !389, size: 32, offset: 2656)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !3611, file: !3382, line: 196, baseType: !389, size: 32, offset: 2688)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !3611, file: !3382, line: 197, baseType: !387, size: 16, offset: 2720)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !3611, file: !3382, line: 197, baseType: !1640, size: 48, offset: 2736)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2784)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2816)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2848)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2880)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2912)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2944)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !3611, file: !3382, line: 200, baseType: !469, size: 32, offset: 2976)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !3611, file: !3382, line: 201, baseType: !1364, size: 96, offset: 3008)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !3611, file: !3382, line: 202, baseType: !469, size: 32, offset: 3104)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !3611, file: !3382, line: 202, baseType: !469, size: 32, offset: 3136)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !3611, file: !3382, line: 202, baseType: !469, size: 32, offset: 3168)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !3611, file: !3382, line: 202, baseType: !469, size: 32, offset: 3200)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3611, file: !3382, line: 204, baseType: !469, size: 32, offset: 3232)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3611, file: !3382, line: 204, baseType: !469, size: 32, offset: 3264)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !3611, file: !3382, line: 204, baseType: !469, size: 32, offset: 3296)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3611, file: !3382, line: 206, baseType: !1364, size: 96, offset: 3328)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !3611, file: !3382, line: 206, baseType: !469, size: 32, offset: 3424)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !3611, file: !3382, line: 206, baseType: !469, size: 32, offset: 3456)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !3611, file: !3382, line: 206, baseType: !469, size: 32, offset: 3488)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !3611, file: !3382, line: 208, baseType: !469, size: 32, offset: 3520)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !3611, file: !3382, line: 210, baseType: !389, size: 32, offset: 3552)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !3611, file: !3382, line: 210, baseType: !389, size: 32, offset: 3584)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !3611, file: !3382, line: 211, baseType: !469, size: 32, offset: 3616)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !3611, file: !3382, line: 211, baseType: !469, size: 32, offset: 3648)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !3611, file: !3382, line: 211, baseType: !469, size: 32, offset: 3680)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !3611, file: !3382, line: 212, baseType: !469, size: 32, offset: 3712)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !3611, file: !3382, line: 212, baseType: !469, size: 32, offset: 3744)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !3611, file: !3382, line: 214, baseType: !469, size: 32, offset: 3776)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !3611, file: !3382, line: 214, baseType: !469, size: 32, offset: 3808)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !3611, file: !3382, line: 216, baseType: !469, size: 32, offset: 3840)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !3611, file: !3382, line: 216, baseType: !469, size: 32, offset: 3872)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !3611, file: !3382, line: 216, baseType: !469, size: 32, offset: 3904)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !3611, file: !3382, line: 216, baseType: !469, size: 32, offset: 3936)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !3611, file: !3382, line: 217, baseType: !469, size: 32, offset: 3968)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !3611, file: !3382, line: 219, baseType: !469, size: 32, offset: 4000)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !3611, file: !3382, line: 219, baseType: !469, size: 32, offset: 4032)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !3611, file: !3382, line: 220, baseType: !469, size: 32, offset: 4064)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !3611, file: !3382, line: 220, baseType: !469, size: 32, offset: 4096)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !3611, file: !3382, line: 220, baseType: !469, size: 32, offset: 4128)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !3611, file: !3382, line: 221, baseType: !469, size: 32, offset: 4160)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !3611, file: !3382, line: 221, baseType: !469, size: 32, offset: 4192)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !3611, file: !3382, line: 223, baseType: !469, size: 32, offset: 4224)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !3611, file: !3382, line: 223, baseType: !469, size: 32, offset: 4256)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !3611, file: !3382, line: 225, baseType: !469, size: 32, offset: 4288)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !3611, file: !3382, line: 226, baseType: !469, size: 32, offset: 4320)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !3611, file: !3382, line: 226, baseType: !469, size: 32, offset: 4352)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !3611, file: !3382, line: 228, baseType: !469, size: 32, offset: 4384)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !3611, file: !3382, line: 230, baseType: !946, size: 64, offset: 4416)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !3611, file: !3382, line: 231, baseType: !469, size: 32, offset: 4480)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !3611, file: !3382, line: 231, baseType: !469, size: 32, offset: 4512)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !3611, file: !3382, line: 232, baseType: !389, size: 32, offset: 4544)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !3611, file: !3382, line: 234, baseType: !389, size: 32, offset: 4576)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3611, file: !3382, line: 236, baseType: !603, size: 1152, offset: 4608)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !3611, file: !3382, line: 238, baseType: !3053, size: 64, offset: 5760)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !3611, file: !3382, line: 239, baseType: !416, size: 128, offset: 5824)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !3611, file: !3382, line: 240, baseType: !3053, size: 64, offset: 5952)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !3611, file: !3382, line: 241, baseType: !522, size: 64, offset: 6016)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !3611, file: !3382, line: 242, baseType: !522, size: 64, offset: 6080)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3611, file: !3382, line: 243, baseType: !599, size: 64, offset: 6144)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3611, file: !3382, line: 244, baseType: !3214, size: 64, offset: 6208)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !3611, file: !3382, line: 245, baseType: !3214, size: 64, offset: 6272)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !3611, file: !3382, line: 248, baseType: !387, size: 16, offset: 6336)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3611, file: !3382, line: 249, baseType: !1640, size: 48, offset: 6352)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3604, file: !3382, line: 261, baseType: !3805, size: 64, offset: 192)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !3382, line: 125, baseType: !3381)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3604, file: !3382, line: 262, baseType: !3808, size: 64, offset: 256)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !3382, line: 77, baseType: !3810)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !3382, line: 71, size: 512, elements: !3811)
!3811 = !{!3812, !3813, !3814, !3816, !3817, !3818, !3819}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3810, file: !3382, line: 72, baseType: !389, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3810, file: !3382, line: 72, baseType: !389, size: 32, offset: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3810, file: !3382, line: 73, baseType: !3815, size: 128, offset: 64)
!3815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 128, elements: !891)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3810, file: !3382, line: 74, baseType: !890, size: 128, offset: 192)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3810, file: !3382, line: 75, baseType: !890, size: 128, offset: 320)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3810, file: !3382, line: 75, baseType: !469, size: 32, offset: 448)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3810, file: !3382, line: 76, baseType: !469, size: 32, offset: 480)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3604, file: !3382, line: 264, baseType: !3350, size: 64, offset: 320)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3604, file: !3382, line: 265, baseType: !3822, size: 64, offset: 384)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{null, !3350}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !3604, file: !3382, line: 267, baseType: !3826, size: 64, offset: 448)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !3829, line: 123, size: 480, elements: !3830)
!3829 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3830 = !{!3831, !3832, !3833, !3834, !3835, !3836}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3828, file: !3829, line: 124, baseType: !1364, size: 96)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3828, file: !3829, line: 125, baseType: !1364, size: 96, offset: 96)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3828, file: !3829, line: 126, baseType: !890, size: 128, offset: 192)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3828, file: !3829, line: 127, baseType: !1364, size: 96, offset: 320)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3828, file: !3829, line: 128, baseType: !469, size: 32, offset: 416)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !3828, file: !3829, line: 129, baseType: !389, size: 32, offset: 448)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !3604, file: !3382, line: 268, baseType: !3826, size: 64, offset: 512)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !3604, file: !3382, line: 269, baseType: !414, size: 128, offset: 576)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !3604, file: !3382, line: 269, baseType: !414, size: 128, offset: 704)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !3604, file: !3382, line: 271, baseType: !3841, size: 64, offset: 832)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !218, line: 557, size: 1344, elements: !3843)
!3843 = !{!3844, !3845, !3846, !3849, !3852, !3855, !3856}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3842, file: !218, line: 558, baseType: !503, size: 896)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3842, file: !218, line: 560, baseType: !515, size: 64, offset: 896)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !3842, file: !218, line: 561, baseType: !3847, size: 64, offset: 960)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !218, line: 561, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !3842, file: !218, line: 562, baseType: !3850, size: 64, offset: 1024)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !218, line: 562, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !3842, file: !218, line: 563, baseType: !3853, size: 64, offset: 1088)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !218, line: 563, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !3842, file: !218, line: 564, baseType: !3325, size: 64, offset: 1152)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3842, file: !218, line: 565, baseType: !416, size: 128, offset: 1216)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !3604, file: !3382, line: 272, baseType: !3858, size: 64, offset: 896)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !3860)
!3860 = !{!3861, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3912, !3950, !3952, !3953, !3955, !3956, !3957, !3958, !3964, !3969, !3970, !3974, !3975, !3976, !3977, !3978, !3982, !3994, !4008, !4012, !4016, !4020, !4024, !4028, !4032, !4036, !4040, !4044, !4048, !4049, !4050, !4051, !4052, !4053, !4057, !4058, !4059, !4060, !4064, !4065, !4066, !4067, !4068, !4073, !4074, !4075, !4076, !4077, !4081, !4082, !4083, !4084, !4085, !4092, !4102, !4106, !4112, !4122, !4127, !4138, !4145, !4152, !4156, !4160, !4164, !4168, !4169, !4170, !4174, !4178, !4179, !4180, !4184, !4185, !4194, !4219, !4223, !4231, !4235, !4239, !4243, !4251, !4261}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !3859, file: !6, line: 180, baseType: !3862, size: 1600)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !132, line: 73, baseType: !3863)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !132, line: 64, size: 1600, elements: !3864)
!3864 = !{!3865, !3880, !3884, !3885, !3886, !3887, !3890}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3863, file: !132, line: 65, baseType: !3866, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !132, line: 53, baseType: !3868)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !132, line: 42, size: 832, elements: !3869)
!3869 = !{!3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3868, file: !132, line: 43, baseType: !389, size: 32)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3868, file: !132, line: 44, baseType: !389, size: 32, offset: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3868, file: !132, line: 45, baseType: !389, size: 32, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3868, file: !132, line: 46, baseType: !389, size: 32, offset: 96)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3868, file: !132, line: 47, baseType: !389, size: 32, offset: 128)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3868, file: !132, line: 48, baseType: !389, size: 32, offset: 160)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3868, file: !132, line: 49, baseType: !389, size: 32, offset: 192)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3868, file: !132, line: 50, baseType: !389, size: 32, offset: 224)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3868, file: !132, line: 51, baseType: !404, size: 512, offset: 256)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3868, file: !132, line: 52, baseType: !348, size: 64, offset: 768)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3863, file: !132, line: 66, baseType: !3881, size: 1312, offset: 64)
!3881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 1312, elements: !3882)
!3882 = !{!3883}
!3883 = !DISubrange(count: 41)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3863, file: !132, line: 69, baseType: !389, size: 32, offset: 1376)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3863, file: !132, line: 69, baseType: !389, size: 32, offset: 1408)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3863, file: !132, line: 70, baseType: !389, size: 32, offset: 1440)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3863, file: !132, line: 71, baseType: !3888, size: 64, offset: 1472)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !132, line: 71, flags: DIFlagFwdDecl)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3863, file: !132, line: 72, baseType: !3891, size: 64, offset: 1536)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !132, line: 59, baseType: !3893)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !132, line: 57, size: 8192, elements: !3894)
!3894 = !{!3895}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3893, file: !132, line: 58, baseType: !373, size: 8192)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !3859, file: !6, line: 180, baseType: !3862, size: 1600, offset: 1600)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !3859, file: !6, line: 180, baseType: !3862, size: 1600, offset: 3200)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !3859, file: !6, line: 180, baseType: !3862, size: 1600, offset: 4800)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !3859, file: !6, line: 180, baseType: !3862, size: 1600, offset: 6400)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !3859, file: !6, line: 181, baseType: !389, size: 32, offset: 8000)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !3859, file: !6, line: 181, baseType: !389, size: 32, offset: 8032)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !3859, file: !6, line: 181, baseType: !389, size: 32, offset: 8064)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !3859, file: !6, line: 181, baseType: !389, size: 32, offset: 8096)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !3859, file: !6, line: 181, baseType: !389, size: 32, offset: 8128)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !3859, file: !6, line: 182, baseType: !389, size: 32, offset: 8160)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !3859, file: !6, line: 183, baseType: !389, size: 32, offset: 8192)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !3859, file: !6, line: 184, baseType: !3908, size: 64, offset: 8256)
!3908 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !3909, line: 124, baseType: !3910)
!3909 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !3909, line: 124, flags: DIFlagFwdDecl)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !3859, file: !6, line: 185, baseType: !3913, size: 64, offset: 8320)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !3915, line: 84, size: 832, elements: !3916)
!3915 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3916 = !{!3917, !3925, !3926, !3927, !3928, !3929, !3930, !3932, !3935, !3936, !3944, !3945, !3946, !3947, !3948, !3949}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3914, file: !3915, line: 85, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !3915, line: 57, baseType: !3920)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !3915, line: 53, size: 192, elements: !3921)
!3921 = !{!3922, !3923, !3924}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3920, file: !3915, line: 54, baseType: !389, size: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3920, file: !3915, line: 55, baseType: !348, size: 64, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3920, file: !3915, line: 56, baseType: !7, size: 32, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !3914, file: !3915, line: 86, baseType: !3918, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3914, file: !3915, line: 87, baseType: !3918, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !3914, file: !3915, line: 88, baseType: !3918, size: 64, offset: 192)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !3914, file: !3915, line: 89, baseType: !3918, size: 64, offset: 256)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !3914, file: !3915, line: 90, baseType: !3918, size: 64, offset: 320)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !3914, file: !3915, line: 93, baseType: !3931, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !3914, file: !3915, line: 96, baseType: !3933, size: 64, offset: 448)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !3915, line: 50, flags: DIFlagFwdDecl)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !3914, file: !3915, line: 105, baseType: !389, size: 32, offset: 512)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !3914, file: !3915, line: 107, baseType: !3937, size: 64, offset: 576)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !3915, line: 66, baseType: !3939)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !3915, line: 59, size: 96, elements: !3940)
!3940 = !{!3941, !3942, !3943}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3939, file: !3915, line: 61, baseType: !389, size: 32)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3939, file: !3915, line: 62, baseType: !389, size: 32, offset: 32)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3939, file: !3915, line: 65, baseType: !387, size: 16, offset: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !3914, file: !3915, line: 108, baseType: !389, size: 32, offset: 640)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !3914, file: !3915, line: 110, baseType: !389, size: 32, offset: 672)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !3914, file: !3915, line: 111, baseType: !389, size: 32, offset: 704)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3914, file: !3915, line: 114, baseType: !389, size: 32, offset: 736)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3914, file: !3915, line: 115, baseType: !389, size: 32, offset: 768)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !3914, file: !3915, line: 119, baseType: !1940, size: 8, offset: 800)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3859, file: !6, line: 186, baseType: !3951, size: 32, offset: 8384)
!3951 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !3859, file: !6, line: 187, baseType: !469, size: 32, offset: 8416)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !3859, file: !6, line: 188, baseType: !3954, size: 32, offset: 8448)
!3954 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !3859, file: !6, line: 189, baseType: !389, size: 32, offset: 8480)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3859, file: !6, line: 190, baseType: !2916, size: 64, offset: 8512)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3859, file: !6, line: 193, baseType: !374, size: 8, offset: 8576)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !3859, file: !6, line: 196, baseType: !3959, size: 64, offset: 8640)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{null, !3962}
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !3859)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !3859, file: !6, line: 199, baseType: !3965, size: 64, offset: 8704)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !3962, !3968}
!3968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !3859, file: !6, line: 202, baseType: !3959, size: 64, offset: 8768)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !3859, file: !6, line: 207, baseType: !3971, size: 64, offset: 8832)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!389, !3962}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !3859, file: !6, line: 208, baseType: !3971, size: 64, offset: 8896)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !3859, file: !6, line: 209, baseType: !3971, size: 64, offset: 8960)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !3859, file: !6, line: 210, baseType: !3971, size: 64, offset: 9024)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !3859, file: !6, line: 211, baseType: !3971, size: 64, offset: 9088)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !3859, file: !6, line: 218, baseType: !3979, size: 64, offset: 9152)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{null, !3962, !389, !2738}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !3859, file: !6, line: 219, baseType: !3983, size: 64, offset: 9216)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{null, !3962, !389, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !1951, line: 48, size: 96, elements: !3988)
!3988 = !{!3989, !3990, !3991, !3992, !3993}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3987, file: !1951, line: 49, baseType: !7, size: 32)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3987, file: !1951, line: 49, baseType: !7, size: 32, offset: 32)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3987, file: !1951, line: 50, baseType: !374, size: 8, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3987, file: !1951, line: 50, baseType: !374, size: 8, offset: 72)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3987, file: !1951, line: 51, baseType: !387, size: 16, offset: 80)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !3859, file: !6, line: 220, baseType: !3995, size: 64, offset: 9280)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{null, !3962, !389, !3998}
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !1951, line: 42, size: 160, elements: !4000)
!4000 = !{!4001, !4002, !4003, !4004, !4005, !4006, !4007}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3999, file: !1951, line: 43, baseType: !7, size: 32)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3999, file: !1951, line: 43, baseType: !7, size: 32, offset: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3999, file: !1951, line: 43, baseType: !7, size: 32, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3999, file: !1951, line: 43, baseType: !7, size: 32, offset: 96)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3999, file: !1951, line: 44, baseType: !387, size: 16, offset: 128)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3999, file: !1951, line: 45, baseType: !374, size: 8, offset: 144)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3999, file: !1951, line: 45, baseType: !374, size: 8, offset: 152)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !3859, file: !6, line: 227, baseType: !4009, size: 64, offset: 9344)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!2738, !3962}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !3859, file: !6, line: 228, baseType: !4013, size: 64, offset: 9408)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!3986, !3962}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !3859, file: !6, line: 229, baseType: !4017, size: 64, offset: 9472)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!3998, !3962}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !3859, file: !6, line: 230, baseType: !4021, size: 64, offset: 9536)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!2755, !3962}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !3859, file: !6, line: 231, baseType: !4025, size: 64, offset: 9600)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!2746, !3962}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !3859, file: !6, line: 236, baseType: !4029, size: 64, offset: 9664)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{null, !3962, !2738}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !3859, file: !6, line: 237, baseType: !4033, size: 64, offset: 9728)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{null, !3962, !3986}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !3859, file: !6, line: 238, baseType: !4037, size: 64, offset: 9792)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{null, !3962, !3998}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !3859, file: !6, line: 239, baseType: !4041, size: 64, offset: 9856)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !3962, !2755}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !3859, file: !6, line: 240, baseType: !4045, size: 64, offset: 9920)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{null, !3962, !2746}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !3859, file: !6, line: 245, baseType: !4009, size: 64, offset: 9984)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !3859, file: !6, line: 246, baseType: !4013, size: 64, offset: 10048)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !3859, file: !6, line: 247, baseType: !4017, size: 64, offset: 10112)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !3859, file: !6, line: 248, baseType: !4021, size: 64, offset: 10176)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !3859, file: !6, line: 249, baseType: !4025, size: 64, offset: 10240)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !3859, file: !6, line: 255, baseType: !4054, size: 64, offset: 10304)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!348, !3962, !389, !389}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !3859, file: !6, line: 256, baseType: !4054, size: 64, offset: 10368)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !3859, file: !6, line: 257, baseType: !4054, size: 64, offset: 10432)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !3859, file: !6, line: 258, baseType: !4054, size: 64, offset: 10496)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !3859, file: !6, line: 264, baseType: !4061, size: 64, offset: 10560)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!348, !3962, !389}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !3859, file: !6, line: 265, baseType: !4061, size: 64, offset: 10624)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !3859, file: !6, line: 266, baseType: !4061, size: 64, offset: 10688)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !3859, file: !6, line: 267, baseType: !4061, size: 64, offset: 10752)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !3859, file: !6, line: 268, baseType: !4061, size: 64, offset: 10816)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !3859, file: !6, line: 272, baseType: !4069, size: 64, offset: 10880)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!4072, !3962}
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !3859, file: !6, line: 273, baseType: !4069, size: 64, offset: 10944)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !3859, file: !6, line: 274, baseType: !4069, size: 64, offset: 11008)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !3859, file: !6, line: 275, baseType: !4069, size: 64, offset: 11072)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !3859, file: !6, line: 276, baseType: !4069, size: 64, offset: 11136)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !3859, file: !6, line: 279, baseType: !4078, size: 64, offset: 11200)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !3962, !389, !4072, !389}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !3859, file: !6, line: 280, baseType: !4078, size: 64, offset: 11264)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !3859, file: !6, line: 281, baseType: !4078, size: 64, offset: 11328)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !3859, file: !6, line: 284, baseType: !3971, size: 64, offset: 11392)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !3859, file: !6, line: 285, baseType: !3971, size: 64, offset: 11456)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !3859, file: !6, line: 286, baseType: !4086, size: 64, offset: 11520)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!4089, !3962}
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !3859, file: !6, line: 287, baseType: !4093, size: 64, offset: 11584)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!4096, !3962}
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !4098)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !4099)
!4099 = !{!4100, !4101}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4098, file: !6, line: 118, baseType: !3815, size: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !4098, file: !6, line: 119, baseType: !3815, size: 128, offset: 128)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !3859, file: !6, line: 288, baseType: !4103, size: 64, offset: 11648)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!3931, !3962}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !3859, file: !6, line: 289, baseType: !4107, size: 64, offset: 11712)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{null, !3962, !4110}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !3859, file: !6, line: 290, baseType: !4113, size: 64, offset: 11776)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!4116, !3962}
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !4118)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !4119)
!4119 = !{!4120, !4121}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4118, file: !6, line: 124, baseType: !387, size: 16)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4118, file: !6, line: 125, baseType: !374, size: 8, offset: 16)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !3859, file: !6, line: 291, baseType: !4123, size: 64, offset: 11840)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!4126, !3962}
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !3859, file: !6, line: 299, baseType: !4128, size: 64, offset: 11904)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !3962, !4131, !348, !4137}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{null, !348, !389, !4134, !4134, !4135}
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!4137 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !3859, file: !6, line: 309, baseType: !4139, size: 64, offset: 11968)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{null, !3962, !4142, !348}
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{null, !348, !389, !4134, !4134}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !3859, file: !6, line: 317, baseType: !4146, size: 64, offset: 12032)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{null, !3962, !4149, !348, !4137}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{null, !348, !389, !389, !4134, !4134}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !3859, file: !6, line: 327, baseType: !4153, size: 64, offset: 12096)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{null, !3962, !4142, !348, !4137}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !3859, file: !6, line: 337, baseType: !4157, size: 64, offset: 12160)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{null, !3962, !596, !596}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !3859, file: !6, line: 344, baseType: !4161, size: 64, offset: 12224)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{null, !3962, !389, !596}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !3859, file: !6, line: 347, baseType: !4165, size: 64, offset: 12288)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{null, !3962, !2763}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !3859, file: !6, line: 350, baseType: !4161, size: 64, offset: 12352)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !3859, file: !6, line: 351, baseType: !4161, size: 64, offset: 12416)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !3859, file: !6, line: 355, baseType: !4171, size: 64, offset: 12480)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{!2786, !522, !3962}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !3859, file: !6, line: 359, baseType: !4175, size: 64, offset: 12544)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!2800, !522, !3962}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !3859, file: !6, line: 364, baseType: !3959, size: 64, offset: 12608)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !3859, file: !6, line: 367, baseType: !3959, size: 64, offset: 12672)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !3859, file: !6, line: 373, baseType: !4181, size: 64, offset: 12736)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{null, !3962, !1940, !1940}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !3859, file: !6, line: 376, baseType: !3959, size: 64, offset: 12800)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !3859, file: !6, line: 385, baseType: !4186, size: 64, offset: 12864)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{null, !3962, !4189, !1940, !4190}
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!4190 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !4191)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!389, !389, !348}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !3859, file: !6, line: 391, baseType: !4195, size: 64, offset: 12928)
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !3962, !4198, !4214, !348, !4218}
!4198 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !4199)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!4202, !4203, !4213, !389}
!4202 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !1951, line: 160, size: 384, elements: !4205)
!4205 = !{!4206, !4207, !4208, !4209, !4210, !4211, !4212}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4204, file: !1951, line: 161, baseType: !2628, size: 256)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4204, file: !1951, line: 162, baseType: !1486, size: 64, offset: 256)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4204, file: !1951, line: 163, baseType: !374, size: 8, offset: 320)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4204, file: !1951, line: 163, baseType: !374, size: 8, offset: 328)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4204, file: !1951, line: 164, baseType: !387, size: 16, offset: 336)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4204, file: !1951, line: 164, baseType: !387, size: 16, offset: 352)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !4204, file: !1951, line: 164, baseType: !387, size: 16, offset: 368)
!4213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1940)
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !4215)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!389, !348, !389, !389}
!4218 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !3859, file: !6, line: 400, baseType: !4220, size: 64, offset: 12992)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{null, !3962, !4190}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !3859, file: !6, line: 415, baseType: !4224, size: 64, offset: 13056)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !3962, !4227, !4190, !4214, !348, !4218}
!4227 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !4228)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!4202, !348, !389}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !3859, file: !6, line: 425, baseType: !4232, size: 64, offset: 13120)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{null, !3962, !4227, !4214, !348, !4218}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !3859, file: !6, line: 435, baseType: !4236, size: 64, offset: 13184)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{null, !3962, !4190, !4227, !348}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !3859, file: !6, line: 444, baseType: !4240, size: 64, offset: 13248)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{null, !3962, !4227, !348}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !3859, file: !6, line: 455, baseType: !4244, size: 64, offset: 13312)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{null, !3962, !4227, !4247, !348}
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !4248)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{null, !348, !389, !469}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !3859, file: !6, line: 464, baseType: !4252, size: 64, offset: 13376)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{null, !3962, !4255, !4258, !348}
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{null, !348, !389, !348}
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!1940, !348, !389}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3859, file: !6, line: 470, baseType: !3959, size: 64, offset: 13440)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !3604, file: !3382, line: 272, baseType: !3858, size: 64, offset: 960)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !3604, file: !3382, line: 274, baseType: !522, size: 64, offset: 1024)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !3604, file: !3382, line: 276, baseType: !4265, size: 64, offset: 1088)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !3382, line: 276, flags: DIFlagFwdDecl)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3604, file: !3382, line: 278, baseType: !522, size: 64, offset: 1152)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !3604, file: !3382, line: 280, baseType: !416, size: 128, offset: 1216)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3604, file: !3382, line: 282, baseType: !404, size: 512, offset: 1344)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3604, file: !3382, line: 284, baseType: !1599, size: 512, offset: 1856)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3604, file: !3382, line: 285, baseType: !469, size: 32, offset: 2368)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !3604, file: !3382, line: 285, baseType: !469, size: 32, offset: 2400)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !3604, file: !3382, line: 285, baseType: !469, size: 32, offset: 2432)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3604, file: !3382, line: 286, baseType: !389, size: 32, offset: 2464)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !3604, file: !3382, line: 286, baseType: !389, size: 32, offset: 2496)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2528)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2560)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2592)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2624)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2656)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !3604, file: !3382, line: 287, baseType: !389, size: 32, offset: 2688)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3604, file: !3382, line: 288, baseType: !387, size: 16, offset: 2720)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !3604, file: !3382, line: 288, baseType: !387, size: 16, offset: 2736)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !3604, file: !3382, line: 288, baseType: !387, size: 16, offset: 2752)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !3604, file: !3382, line: 288, baseType: !387, size: 16, offset: 2768)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !3604, file: !3382, line: 290, baseType: !4287, size: 1536, offset: 2784)
!4287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 1536, elements: !4288)
!4288 = !{!1366, !406}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3604, file: !3382, line: 293, baseType: !4290, size: 192, offset: 4320)
!4290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !387, size: 192, elements: !4291)
!4291 = !{!4292}
!4292 = !DISubrange(count: 12)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !3604, file: !3382, line: 293, baseType: !387, size: 16, offset: 4512)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !3604, file: !3382, line: 293, baseType: !387, size: 16, offset: 4528)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !3604, file: !3382, line: 296, baseType: !348, size: 64, offset: 4544)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3604, file: !3382, line: 299, baseType: !3325, size: 64, offset: 4608)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3604, file: !3382, line: 300, baseType: !416, size: 128, offset: 4672)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !3604, file: !3382, line: 302, baseType: !3601, size: 64, offset: 4800)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !3604, file: !3382, line: 304, baseType: !4300, size: 64, offset: 4864)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !3382, line: 68, baseType: !4302)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !3382, line: 65, size: 128, elements: !4303)
!4303 = !{!4304, !4305, !4306}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !4302, file: !3382, line: 66, baseType: !469, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !4302, file: !3382, line: 67, baseType: !1529, size: 64, offset: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !4302, file: !3382, line: 67, baseType: !7, size: 32, offset: 96)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !3604, file: !3382, line: 305, baseType: !389, size: 32, offset: 4928)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !3604, file: !3382, line: 305, baseType: !389, size: 32, offset: 4960)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !3604, file: !3382, line: 307, baseType: !3437, size: 64, offset: 4992)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !3604, file: !3382, line: 308, baseType: !4311, size: 64, offset: 5056)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !4313, line: 42, flags: DIFlagFwdDecl)
!4313 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !3604, file: !3382, line: 310, baseType: !4315, size: 64, offset: 5120)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !3829, line: 237, size: 704, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4316, file: !3829, line: 238, baseType: !596, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !4316, file: !3829, line: 238, baseType: !596, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !4316, file: !3829, line: 239, baseType: !596, size: 64, offset: 128)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !4316, file: !3829, line: 239, baseType: !596, size: 64, offset: 192)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !4316, file: !3829, line: 240, baseType: !596, size: 64, offset: 256)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !4316, file: !3829, line: 240, baseType: !596, size: 64, offset: 320)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !4316, file: !3829, line: 241, baseType: !596, size: 64, offset: 384)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !4316, file: !3829, line: 241, baseType: !596, size: 64, offset: 448)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !4316, file: !3829, line: 242, baseType: !596, size: 64, offset: 512)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !4316, file: !3829, line: 243, baseType: !389, size: 32, offset: 576)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4316, file: !3829, line: 243, baseType: !389, size: 32, offset: 608)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !4316, file: !3829, line: 244, baseType: !389, size: 32, offset: 640)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !4316, file: !3829, line: 244, baseType: !389, size: 32, offset: 672)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !3604, file: !3382, line: 312, baseType: !469, size: 32, offset: 5184)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3604, file: !3382, line: 313, baseType: !469, size: 32, offset: 5216)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3351, file: !3352, line: 244, baseType: !3380, size: 64, offset: 1920)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !3351, file: !3352, line: 245, baseType: !3437, size: 64, offset: 1984)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !3351, file: !3352, line: 246, baseType: !596, size: 64, offset: 2048)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !3351, file: !3352, line: 247, baseType: !3931, size: 64, offset: 2112)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !3351, file: !3352, line: 249, baseType: !3826, size: 64, offset: 2176)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !3351, file: !3352, line: 250, baseType: !414, size: 128, offset: 2240)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3351, file: !3352, line: 252, baseType: !389, size: 32, offset: 2368)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !3351, file: !3352, line: 252, baseType: !389, size: 32, offset: 2400)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !3351, file: !3352, line: 252, baseType: !389, size: 32, offset: 2432)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !3351, file: !3352, line: 252, baseType: !389, size: 32, offset: 2464)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !3351, file: !3352, line: 254, baseType: !4344, size: 24, offset: 2496)
!4344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1940, size: 24, elements: !1365)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !3351, file: !3352, line: 255, baseType: !4344, size: 24, offset: 2520)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3326, file: !271, line: 208, baseType: !3822, size: 64, offset: 10496)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3263, file: !271, line: 340, baseType: !416, size: 128, offset: 2880)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3263, file: !271, line: 342, baseType: !3664, size: 64, offset: 3008)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !3263, file: !271, line: 344, baseType: !1364, size: 96, offset: 3072)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !3263, file: !271, line: 345, baseType: !1602, size: 288, offset: 3168)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !3263, file: !271, line: 346, baseType: !1602, size: 288, offset: 3456)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !3263, file: !271, line: 348, baseType: !389, size: 32, offset: 3744)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !351, file: !40, line: 265, baseType: !3053, size: 64, offset: 10048)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !351, file: !40, line: 267, baseType: !374, size: 8, offset: 10112)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !351, file: !40, line: 268, baseType: !374, size: 8, offset: 10120)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !351, file: !40, line: 269, baseType: !387, size: 16, offset: 10128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !351, file: !40, line: 270, baseType: !469, size: 32, offset: 10144)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !351, file: !40, line: 272, baseType: !4359, size: 64, offset: 10176)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !218, line: 732, flags: DIFlagFwdDecl)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !351, file: !40, line: 275, baseType: !4362, size: 64, offset: 10240)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !40, line: 275, flags: DIFlagFwdDecl)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !351, file: !40, line: 277, baseType: !3858, size: 64, offset: 10304)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !351, file: !40, line: 277, baseType: !3858, size: 64, offset: 10368)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !351, file: !40, line: 278, baseType: !2717, size: 64, offset: 10432)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !351, file: !40, line: 279, baseType: !2717, size: 64, offset: 10496)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !351, file: !40, line: 280, baseType: !7, size: 32, offset: 10560)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !351, file: !40, line: 281, baseType: !7, size: 32, offset: 10592)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !351, file: !40, line: 283, baseType: !414, size: 128, offset: 10624)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !351, file: !40, line: 284, baseType: !414, size: 128, offset: 10752)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !351, file: !40, line: 285, baseType: !4373, size: 64, offset: 10880)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !351, file: !40, line: 287, baseType: !4375, size: 64, offset: 10944)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !40, line: 59, flags: DIFlagFwdDecl)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !351, file: !40, line: 288, baseType: !4378, size: 64, offset: 11008)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !40, line: 288, flags: DIFlagFwdDecl)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !351, file: !40, line: 290, baseType: !946, size: 64, offset: 11072)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !351, file: !40, line: 291, baseType: !4382, size: 64, offset: 11136)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !669, line: 65, baseType: !668)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !351, file: !40, line: 293, baseType: !414, size: 128, offset: 11200)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !351, file: !40, line: 294, baseType: !4386, size: 64, offset: 11328)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !40, line: 113, baseType: !4388)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !40, line: 108, size: 256, elements: !4389)
!4389 = !{!4390, !4392, !4393, !4394, !4395}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4388, file: !40, line: 109, baseType: !4391, size: 64)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4388, file: !40, line: 109, baseType: !4391, size: 64, offset: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4388, file: !40, line: 110, baseType: !522, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4388, file: !40, line: 111, baseType: !389, size: 32, offset: 192)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !4388, file: !40, line: 112, baseType: !469, size: 32, offset: 224)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagNode", file: !34, line: 110, baseType: !4399)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !34, line: 77, size: 960, elements: !4400)
!4400 = !{!4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4428, !4429, !4430, !4433, !4434}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4399, file: !34, line: 78, baseType: !389, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4399, file: !34, line: 79, baseType: !387, size: 16, offset: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4399, file: !34, line: 80, baseType: !469, size: 32, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4399, file: !34, line: 80, baseType: !469, size: 32, offset: 96)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4399, file: !34, line: 80, baseType: !469, size: 32, offset: 128)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4399, file: !34, line: 81, baseType: !348, size: 64, offset: 192)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "first_ancestor", scope: !4399, file: !34, line: 82, baseType: !348, size: 64, offset: 256)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "ancestor_count", scope: !4399, file: !34, line: 83, baseType: !389, size: 32, offset: 320)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4399, file: !34, line: 84, baseType: !7, size: 32, offset: 352)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "scelay", scope: !4399, file: !34, line: 85, baseType: !7, size: 32, offset: 384)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !4399, file: !34, line: 86, baseType: !2717, size: 64, offset: 448)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "lasttime", scope: !4399, file: !34, line: 87, baseType: !389, size: 32, offset: 512)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "BFS_dist", scope: !4399, file: !34, line: 88, baseType: !389, size: 32, offset: 544)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "DFS_dist", scope: !4399, file: !34, line: 89, baseType: !389, size: 32, offset: 576)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "DFS_dvtm", scope: !4399, file: !34, line: 90, baseType: !389, size: 32, offset: 608)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "DFS_fntm", scope: !4399, file: !34, line: 91, baseType: !389, size: 32, offset: 640)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4399, file: !34, line: 92, baseType: !4418, size: 64, offset: 704)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagAdjList", file: !34, line: 67, size: 320, elements: !4420)
!4420 = !{!4421, !4423, !4424, !4425, !4426, !4427}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4419, file: !34, line: 68, baseType: !4422, size: 64)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4419, file: !34, line: 69, baseType: !387, size: 16, offset: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4419, file: !34, line: 70, baseType: !389, size: 32, offset: 96)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4419, file: !34, line: 71, baseType: !7, size: 32, offset: 128)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4419, file: !34, line: 72, baseType: !799, size: 64, offset: 192)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4419, file: !34, line: 73, baseType: !4418, size: 64, offset: 256)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4399, file: !34, line: 93, baseType: !4418, size: 64, offset: 768)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4399, file: !34, line: 94, baseType: !4422, size: 64, offset: 832)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "num_pending_parents", scope: !4399, file: !34, line: 97, baseType: !4431, size: 32, offset: 896)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2718, line: 26, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !2720, line: 42, baseType: !7)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4399, file: !34, line: 102, baseType: !1940, size: 8, offset: 928)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "eval_flags", scope: !4399, file: !34, line: 109, baseType: !387, size: 16, offset: 944)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1858, line: 47, flags: DIFlagFwdDecl)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_typedef, name: "bKinematicConstraint", file: !72, line: 151, baseType: !4439)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bKinematicConstraint", file: !72, line: 135, size: 1472, elements: !4440)
!4440 = !{!4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !4439, file: !72, line: 136, baseType: !522, size: 64)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !4439, file: !72, line: 137, baseType: !387, size: 16, offset: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4439, file: !72, line: 138, baseType: !387, size: 16, offset: 80)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "rootbone", scope: !4439, file: !72, line: 139, baseType: !387, size: 16, offset: 96)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "max_rootbone", scope: !4439, file: !72, line: 140, baseType: !387, size: 16, offset: 112)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !4439, file: !72, line: 141, baseType: !404, size: 512, offset: 128)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "poletar", scope: !4439, file: !72, line: 142, baseType: !522, size: 64, offset: 640)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "polesubtarget", scope: !4439, file: !72, line: 143, baseType: !404, size: 512, offset: 704)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "poleangle", scope: !4439, file: !72, line: 144, baseType: !469, size: 32, offset: 1216)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4439, file: !72, line: 145, baseType: !469, size: 32, offset: 1248)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "orientweight", scope: !4439, file: !72, line: 146, baseType: !469, size: 32, offset: 1280)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "grabtarget", scope: !4439, file: !72, line: 147, baseType: !1364, size: 96, offset: 1312)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4439, file: !72, line: 148, baseType: !387, size: 16, offset: 1408)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4439, file: !72, line: 149, baseType: !387, size: 16, offset: 1424)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4439, file: !72, line: 150, baseType: !469, size: 32, offset: 1440)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_typedef, name: "Camera", file: !4458, line: 71, baseType: !4459)
!4458 = !DIFile(filename: "blender/source/blender/makesdna/DNA_camera_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Camera", file: !4458, line: 47, size: 1600, elements: !4460)
!4460 = !{!4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4459, file: !4458, line: 48, baseType: !354, size: 960)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4459, file: !4458, line: 49, baseType: !425, size: 64, offset: 960)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4459, file: !4458, line: 51, baseType: !374, size: 8, offset: 1024)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !4459, file: !4458, line: 52, baseType: !374, size: 8, offset: 1032)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4459, file: !4458, line: 53, baseType: !387, size: 16, offset: 1040)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "passepartalpha", scope: !4459, file: !4458, line: 54, baseType: !469, size: 32, offset: 1056)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !4459, file: !4458, line: 55, baseType: !469, size: 32, offset: 1088)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4459, file: !4458, line: 55, baseType: !469, size: 32, offset: 1120)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !4459, file: !4458, line: 56, baseType: !469, size: 32, offset: 1152)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !4459, file: !4458, line: 56, baseType: !469, size: 32, offset: 1184)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "drawsize", scope: !4459, file: !4458, line: 56, baseType: !469, size: 32, offset: 1216)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !4459, file: !4458, line: 57, baseType: !469, size: 32, offset: 1248)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !4459, file: !4458, line: 57, baseType: !469, size: 32, offset: 1280)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !4459, file: !4458, line: 58, baseType: !469, size: 32, offset: 1312)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !4459, file: !4458, line: 58, baseType: !469, size: 32, offset: 1344)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "YF_dofdist", scope: !4459, file: !4458, line: 63, baseType: !469, size: 32, offset: 1376)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4459, file: !4458, line: 65, baseType: !599, size: 64, offset: 1408)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dof_ob", scope: !4459, file: !4458, line: 67, baseType: !522, size: 64, offset: 1472)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !4459, file: !4458, line: 69, baseType: !374, size: 8, offset: 1536)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4459, file: !4458, line: 70, baseType: !1109, size: 56, offset: 1544)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRuleGoalAvoid", file: !293, line: 74, baseType: !4483)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRuleGoalAvoid", file: !293, line: 66, size: 640, elements: !4484)
!4484 = !{!4485, !4495, !4496, !4497, !4498, !4499}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !4483, file: !293, line: 67, baseType: !4486, size: 448)
!4486 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRule", file: !293, line: 62, baseType: !4487)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRule", file: !293, line: 58, size: 448, elements: !4488)
!4488 = !{!4489, !4491, !4492, !4493, !4494}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4487, file: !293, line: 59, baseType: !4490, size: 64)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4487, file: !293, line: 59, baseType: !4490, size: 64, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4487, file: !293, line: 60, baseType: !389, size: 32, offset: 128)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4487, file: !293, line: 60, baseType: !389, size: 32, offset: 160)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4487, file: !293, line: 61, baseType: !2369, size: 256, offset: 192)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4483, file: !293, line: 68, baseType: !522, size: 64, offset: 448)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4483, file: !293, line: 69, baseType: !389, size: 32, offset: 512)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "fear_factor", scope: !4483, file: !293, line: 70, baseType: !469, size: 32, offset: 544)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !4483, file: !293, line: 73, baseType: !389, size: 32, offset: 576)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4483, file: !293, line: 73, baseType: !389, size: 32, offset: 608)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRuleFollowLeader", file: !293, line: 89, baseType: !4502)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRuleFollowLeader", file: !293, line: 83, size: 832, elements: !4503)
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !4502, file: !293, line: 84, baseType: !4486, size: 448)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4502, file: !293, line: 85, baseType: !522, size: 64, offset: 448)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4502, file: !293, line: 86, baseType: !1364, size: 96, offset: 512)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "oloc", scope: !4502, file: !293, line: 86, baseType: !1364, size: 96, offset: 608)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !4502, file: !293, line: 87, baseType: !469, size: 32, offset: 704)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !4502, file: !293, line: 87, baseType: !469, size: 32, offset: 736)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4502, file: !293, line: 88, baseType: !389, size: 32, offset: 768)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "queue_size", scope: !4502, file: !293, line: 88, baseType: !389, size: 32, offset: 800)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "bFollowTrackConstraint", file: !72, line: 438, baseType: !4514)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bFollowTrackConstraint", file: !72, line: 430, size: 1280, elements: !4515)
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4514, file: !72, line: 431, baseType: !2512, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !4514, file: !72, line: 432, baseType: !404, size: 512, offset: 64)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4514, file: !72, line: 433, baseType: !389, size: 32, offset: 576)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "frame_method", scope: !4514, file: !72, line: 434, baseType: !389, size: 32, offset: 608)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4514, file: !72, line: 435, baseType: !404, size: 512, offset: 640)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4514, file: !72, line: 436, baseType: !522, size: 64, offset: 1152)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "depth_ob", scope: !4514, file: !72, line: 437, baseType: !522, size: 64, offset: 1216)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !2919, line: 203, baseType: !2918)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !688, line: 391, baseType: !687)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !3055, line: 48, baseType: !4529)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !3055, line: 42, size: 320, elements: !4530)
!4530 = !{!4531, !4533, !4534, !4535, !4536, !4537}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4529, file: !3055, line: 43, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4529, file: !3055, line: 43, baseType: !4532, size: 64, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4529, file: !3055, line: 44, baseType: !522, size: 64, offset: 128)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !4529, file: !3055, line: 45, baseType: !348, size: 64, offset: 192)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !4529, file: !3055, line: 46, baseType: !387, size: 16, offset: 256)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4529, file: !3055, line: 47, baseType: !2166, size: 48, offset: 272)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !601, line: 261, baseType: !614)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !2514, line: 101, baseType: !2513)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !324, line: 243, baseType: !4544)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !324, line: 187, size: 4352, elements: !4545)
!4545 = !{!4546, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4544, file: !324, line: 188, baseType: !4547, size: 64)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4544, file: !324, line: 188, baseType: !4547, size: 64, offset: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4544, file: !324, line: 190, baseType: !393, size: 64, offset: 128)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !4544, file: !324, line: 192, baseType: !414, size: 128, offset: 192)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4544, file: !324, line: 193, baseType: !404, size: 512, offset: 320)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4544, file: !324, line: 195, baseType: !387, size: 16, offset: 832)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !4544, file: !324, line: 196, baseType: !387, size: 16, offset: 848)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !4544, file: !324, line: 197, baseType: !387, size: 16, offset: 864)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !4544, file: !324, line: 198, baseType: !387, size: 16, offset: 880)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !4544, file: !324, line: 199, baseType: !374, size: 8, offset: 896)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !4544, file: !324, line: 200, baseType: !374, size: 8, offset: 904)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !4544, file: !324, line: 201, baseType: !2166, size: 48, offset: 912)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !4544, file: !324, line: 203, baseType: !4560, size: 64, offset: 960)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !324, line: 203, flags: DIFlagFwdDecl)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4544, file: !324, line: 204, baseType: !4547, size: 64, offset: 1024)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4544, file: !324, line: 205, baseType: !4547, size: 64, offset: 1088)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !4544, file: !324, line: 207, baseType: !416, size: 128, offset: 1152)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !4544, file: !324, line: 208, baseType: !416, size: 128, offset: 1280)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !4544, file: !324, line: 210, baseType: !2894, size: 64, offset: 1408)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !4544, file: !324, line: 211, baseType: !522, size: 64, offset: 1472)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !4544, file: !324, line: 212, baseType: !4547, size: 64, offset: 1536)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4544, file: !324, line: 217, baseType: !1364, size: 96, offset: 1600)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4544, file: !324, line: 218, baseType: !1364, size: 96, offset: 1696)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !4544, file: !324, line: 221, baseType: !1364, size: 96, offset: 1792)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4544, file: !324, line: 222, baseType: !890, size: 128, offset: 1888)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !4544, file: !324, line: 223, baseType: !1364, size: 96, offset: 2016)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !4544, file: !324, line: 223, baseType: !469, size: 32, offset: 2112)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !4544, file: !324, line: 224, baseType: !387, size: 16, offset: 2144)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4544, file: !324, line: 225, baseType: !387, size: 16, offset: 2160)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !4544, file: !324, line: 227, baseType: !1599, size: 512, offset: 2176)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !4544, file: !324, line: 228, baseType: !1599, size: 512, offset: 2688)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !4544, file: !324, line: 230, baseType: !1599, size: 512, offset: 3200)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !4544, file: !324, line: 233, baseType: !1364, size: 96, offset: 3712)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !4544, file: !324, line: 234, baseType: !1364, size: 96, offset: 3808)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !4544, file: !324, line: 236, baseType: !1364, size: 96, offset: 3904)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !4544, file: !324, line: 236, baseType: !1364, size: 96, offset: 4000)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !4544, file: !324, line: 237, baseType: !1364, size: 96, offset: 4096)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !4544, file: !324, line: 238, baseType: !469, size: 32, offset: 4192)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !4544, file: !324, line: 239, baseType: !469, size: 32, offset: 4224)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !4544, file: !324, line: 240, baseType: !469, size: 32, offset: 4256)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !4544, file: !324, line: 242, baseType: !348, size: 64, offset: 4288)
!4589 = !{!0, !4590, !4658, !4665}
!4590 = !DIGlobalVariableExpression(var: !4591, expr: !DIExpression())
!4591 = distinct !DIGlobalVariable(name: "EditorsUpdateIDCb", scope: !2, file: !3, line: 1323, type: !4592, isLocal: true, isDefinition: true)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{null, !4595, !368}
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !4597, line: 104, baseType: !4598)
!4597 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !4597, line: 53, size: 15232, elements: !4599)
!4599 = !{!4600, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4655}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4598, file: !4597, line: 54, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4598, file: !4597, line: 54, baseType: !4601, size: 64, offset: 64)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4598, file: !4597, line: 55, baseType: !373, size: 8192, offset: 128)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !4598, file: !4597, line: 56, baseType: !387, size: 16, offset: 8320)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !4598, file: !4597, line: 56, baseType: !387, size: 16, offset: 8336)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !4598, file: !4597, line: 57, baseType: !387, size: 16, offset: 8352)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !4598, file: !4597, line: 57, baseType: !387, size: 16, offset: 8368)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !4598, file: !4597, line: 58, baseType: !2717, size: 64, offset: 8384)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !4598, file: !4597, line: 59, baseType: !4610, size: 128, offset: 8448)
!4610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 128, elements: !4611)
!4611 = !{!4612}
!4612 = !DISubrange(count: 16)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !4598, file: !4597, line: 60, baseType: !387, size: 16, offset: 8576)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !4598, file: !4597, line: 62, baseType: !363, size: 64, offset: 8640)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4598, file: !4597, line: 63, baseType: !414, size: 128, offset: 8704)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !4598, file: !4597, line: 64, baseType: !414, size: 128, offset: 8832)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4598, file: !4597, line: 65, baseType: !414, size: 128, offset: 8960)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !4598, file: !4597, line: 66, baseType: !414, size: 128, offset: 9088)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !4598, file: !4597, line: 67, baseType: !414, size: 128, offset: 9216)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !4598, file: !4597, line: 68, baseType: !414, size: 128, offset: 9344)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4598, file: !4597, line: 69, baseType: !414, size: 128, offset: 9472)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !4598, file: !4597, line: 70, baseType: !414, size: 128, offset: 9600)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4598, file: !4597, line: 71, baseType: !414, size: 128, offset: 9728)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !4598, file: !4597, line: 72, baseType: !414, size: 128, offset: 9856)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !4598, file: !4597, line: 73, baseType: !414, size: 128, offset: 9984)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4598, file: !4597, line: 74, baseType: !414, size: 128, offset: 10112)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4598, file: !4597, line: 75, baseType: !414, size: 128, offset: 10240)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4598, file: !4597, line: 76, baseType: !414, size: 128, offset: 10368)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !4598, file: !4597, line: 77, baseType: !414, size: 128, offset: 10496)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !4598, file: !4597, line: 78, baseType: !414, size: 128, offset: 10624)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !4598, file: !4597, line: 79, baseType: !414, size: 128, offset: 10752)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !4598, file: !4597, line: 80, baseType: !414, size: 128, offset: 10880)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4598, file: !4597, line: 81, baseType: !414, size: 128, offset: 11008)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !4598, file: !4597, line: 82, baseType: !414, size: 128, offset: 11136)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !4598, file: !4597, line: 83, baseType: !414, size: 128, offset: 11264)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4598, file: !4597, line: 84, baseType: !414, size: 128, offset: 11392)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !4598, file: !4597, line: 85, baseType: !414, size: 128, offset: 11520)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4598, file: !4597, line: 86, baseType: !414, size: 128, offset: 11648)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4598, file: !4597, line: 87, baseType: !414, size: 128, offset: 11776)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !4598, file: !4597, line: 88, baseType: !414, size: 128, offset: 11904)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !4598, file: !4597, line: 89, baseType: !414, size: 128, offset: 12032)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !4598, file: !4597, line: 90, baseType: !414, size: 128, offset: 12160)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !4598, file: !4597, line: 91, baseType: !414, size: 128, offset: 12288)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !4598, file: !4597, line: 92, baseType: !414, size: 128, offset: 12416)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !4598, file: !4597, line: 93, baseType: !414, size: 128, offset: 12544)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !4598, file: !4597, line: 94, baseType: !414, size: 128, offset: 12672)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4598, file: !4597, line: 95, baseType: !414, size: 128, offset: 12800)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !4598, file: !4597, line: 96, baseType: !414, size: 128, offset: 12928)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !4598, file: !4597, line: 98, baseType: !701, size: 2048, offset: 13056)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !4598, file: !4597, line: 101, baseType: !4651, size: 64, offset: 15104)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !289, line: 58, size: 32, elements: !4653)
!4653 = !{!4654}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4652, file: !289, line: 59, baseType: !389, size: 32)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4598, file: !4597, line: 103, baseType: !4656, size: 64, offset: 15168)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !4597, line: 51, flags: DIFlagFwdDecl)
!4658 = !DIGlobalVariableExpression(var: !4659, expr: !DIExpression())
!4659 = distinct !DIGlobalVariable(name: "EditorsUpdateSceneCb", scope: !2, file: !3, line: 1324, type: !4660, isLocal: true, isDefinition: true)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{null, !4595, !4663, !389}
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !517, line: 1299, baseType: !516)
!4665 = !DIGlobalVariableExpression(var: !4666, expr: !DIExpression())
!4666 = distinct !DIGlobalVariable(name: "dag_print_dependencies", scope: !2, file: !3, line: 1026, type: !389, isLocal: true, isDefinition: true)
!4667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpinLock", file: !4668, line: 127, baseType: !4669)
!4668 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4669 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_spinlock_t", file: !4670, line: 9, baseType: !4431)
!4670 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4671 = !{i32 7, !"Dwarf Version", i32 4}
!4672 = !{i32 2, !"Debug Info Version", i32 3}
!4673 = !{i32 1, !"wchar_size", i32 4}
!4674 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!4675 = distinct !DISubprogram(name: "DAG_init", scope: !3, file: !3, line: 93, type: !1200, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4676 = !{}
!4677 = !DILocation(line: 95, column: 2, scope: !4675)
!4678 = !DILocation(line: 96, column: 1, scope: !4675)
!4679 = distinct !DISubprogram(name: "DAG_exit", scope: !3, file: !3, line: 98, type: !1200, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4680 = !DILocation(line: 100, column: 2, scope: !4679)
!4681 = !DILocation(line: 101, column: 1, scope: !4679)
!4682 = distinct !DISubprogram(name: "queue_create", scope: !3, file: !3, line: 108, type: !4683, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!4685, !389}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagNodeQueue", file: !34, line: 123, baseType: !4687)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagNodeQueue", file: !34, line: 117, size: 256, elements: !4688)
!4688 = !{!4689, !4697, !4698, !4699, !4700}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4687, file: !34, line: 118, baseType: !4690, size: 64)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagNodeQueueElem", file: !34, line: 115, baseType: !4692)
!4692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagNodeQueueElem", file: !34, line: 112, size: 128, elements: !4693)
!4693 = !{!4694, !4695}
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4692, file: !34, line: 113, baseType: !4422, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4692, file: !34, line: 114, baseType: !4696, size: 64, offset: 64)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4687, file: !34, line: 119, baseType: !4690, size: 64, offset: 64)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4687, file: !34, line: 120, baseType: !389, size: 32, offset: 128)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "maxlevel", scope: !4687, file: !34, line: 121, baseType: !389, size: 32, offset: 160)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "freenodes", scope: !4687, file: !34, line: 122, baseType: !4701, size: 64, offset: 192)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4702 = !DILocalVariable(name: "slots", arg: 1, scope: !4682, file: !3, line: 108, type: !389)
!4703 = !DILocation(line: 108, column: 32, scope: !4682)
!4704 = !DILocalVariable(name: "queue", scope: !4682, file: !3, line: 110, type: !4685)
!4705 = !DILocation(line: 110, column: 16, scope: !4682)
!4706 = !DILocalVariable(name: "elem", scope: !4682, file: !3, line: 111, type: !4690)
!4707 = !DILocation(line: 111, column: 20, scope: !4682)
!4708 = !DILocalVariable(name: "i", scope: !4682, file: !3, line: 112, type: !389)
!4709 = !DILocation(line: 112, column: 6, scope: !4682)
!4710 = !DILocation(line: 114, column: 10, scope: !4682)
!4711 = !DILocation(line: 114, column: 8, scope: !4682)
!4712 = !DILocation(line: 115, column: 21, scope: !4682)
!4713 = !DILocation(line: 115, column: 2, scope: !4682)
!4714 = !DILocation(line: 115, column: 9, scope: !4682)
!4715 = !DILocation(line: 115, column: 19, scope: !4682)
!4716 = !DILocation(line: 116, column: 2, scope: !4682)
!4717 = !DILocation(line: 116, column: 9, scope: !4682)
!4718 = !DILocation(line: 116, column: 15, scope: !4682)
!4719 = !DILocation(line: 117, column: 2, scope: !4682)
!4720 = !DILocation(line: 117, column: 9, scope: !4682)
!4721 = !DILocation(line: 117, column: 18, scope: !4682)
!4722 = !DILocation(line: 118, column: 17, scope: !4682)
!4723 = !DILocation(line: 118, column: 24, scope: !4682)
!4724 = !DILocation(line: 118, column: 29, scope: !4682)
!4725 = !DILocation(line: 118, column: 2, scope: !4682)
!4726 = !DILocation(line: 118, column: 9, scope: !4682)
!4727 = !DILocation(line: 118, column: 15, scope: !4682)
!4728 = !DILocation(line: 119, column: 9, scope: !4682)
!4729 = !DILocation(line: 119, column: 7, scope: !4682)
!4730 = !DILocation(line: 120, column: 2, scope: !4682)
!4731 = !DILocation(line: 120, column: 8, scope: !4682)
!4732 = !DILocation(line: 120, column: 13, scope: !4682)
!4733 = !DILocation(line: 121, column: 2, scope: !4682)
!4734 = !DILocation(line: 121, column: 8, scope: !4682)
!4735 = !DILocation(line: 121, column: 13, scope: !4682)
!4736 = !DILocation(line: 122, column: 53, scope: !4682)
!4737 = !DILocation(line: 122, column: 28, scope: !4682)
!4738 = !DILocation(line: 122, column: 35, scope: !4682)
!4739 = !DILocation(line: 122, column: 46, scope: !4682)
!4740 = !DILocation(line: 122, column: 51, scope: !4682)
!4741 = !DILocation(line: 122, column: 2, scope: !4682)
!4742 = !DILocation(line: 122, column: 9, scope: !4682)
!4743 = !DILocation(line: 122, column: 20, scope: !4682)
!4744 = !DILocation(line: 122, column: 26, scope: !4682)
!4745 = !DILocation(line: 124, column: 9, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 124, column: 2)
!4747 = !DILocation(line: 124, column: 7, scope: !4746)
!4748 = !DILocation(line: 124, column: 14, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 124, column: 2)
!4750 = !DILocation(line: 124, column: 18, scope: !4749)
!4751 = !DILocation(line: 124, column: 16, scope: !4749)
!4752 = !DILocation(line: 124, column: 2, scope: !4746)
!4753 = !DILocation(line: 125, column: 10, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 124, column: 30)
!4755 = !DILocation(line: 125, column: 8, scope: !4754)
!4756 = !DILocation(line: 126, column: 3, scope: !4754)
!4757 = !DILocation(line: 126, column: 9, scope: !4754)
!4758 = !DILocation(line: 126, column: 14, scope: !4754)
!4759 = !DILocation(line: 127, column: 3, scope: !4754)
!4760 = !DILocation(line: 127, column: 9, scope: !4754)
!4761 = !DILocation(line: 127, column: 14, scope: !4754)
!4762 = !DILocation(line: 128, column: 34, scope: !4754)
!4763 = !DILocation(line: 128, column: 3, scope: !4754)
!4764 = !DILocation(line: 128, column: 10, scope: !4754)
!4765 = !DILocation(line: 128, column: 21, scope: !4754)
!4766 = !DILocation(line: 128, column: 27, scope: !4754)
!4767 = !DILocation(line: 128, column: 32, scope: !4754)
!4768 = !DILocation(line: 129, column: 28, scope: !4754)
!4769 = !DILocation(line: 129, column: 3, scope: !4754)
!4770 = !DILocation(line: 129, column: 10, scope: !4754)
!4771 = !DILocation(line: 129, column: 21, scope: !4754)
!4772 = !DILocation(line: 129, column: 26, scope: !4754)
!4773 = !DILocation(line: 130, column: 2, scope: !4754)
!4774 = !DILocation(line: 124, column: 26, scope: !4749)
!4775 = !DILocation(line: 124, column: 2, scope: !4749)
!4776 = distinct !{!4776, !4752, !4777}
!4777 = !DILocation(line: 130, column: 2, scope: !4746)
!4778 = !DILocation(line: 131, column: 28, scope: !4682)
!4779 = !DILocation(line: 131, column: 2, scope: !4682)
!4780 = !DILocation(line: 131, column: 9, scope: !4682)
!4781 = !DILocation(line: 131, column: 20, scope: !4682)
!4782 = !DILocation(line: 131, column: 26, scope: !4682)
!4783 = !DILocation(line: 132, column: 9, scope: !4682)
!4784 = !DILocation(line: 132, column: 2, scope: !4682)
!4785 = distinct !DISubprogram(name: "queue_raz", scope: !3, file: !3, line: 135, type: !4786, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{null, !4685}
!4788 = !DILocalVariable(name: "queue", arg: 1, scope: !4785, file: !3, line: 135, type: !4685)
!4789 = !DILocation(line: 135, column: 30, scope: !4785)
!4790 = !DILocalVariable(name: "elem", scope: !4785, file: !3, line: 137, type: !4690)
!4791 = !DILocation(line: 137, column: 20, scope: !4785)
!4792 = !DILocation(line: 139, column: 9, scope: !4785)
!4793 = !DILocation(line: 139, column: 16, scope: !4785)
!4794 = !DILocation(line: 139, column: 7, scope: !4785)
!4795 = !DILocation(line: 140, column: 6, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 140, column: 6)
!4797 = !DILocation(line: 140, column: 13, scope: !4796)
!4798 = !DILocation(line: 140, column: 24, scope: !4796)
!4799 = !DILocation(line: 140, column: 6, scope: !4785)
!4800 = !DILocation(line: 141, column: 34, scope: !4796)
!4801 = !DILocation(line: 141, column: 3, scope: !4796)
!4802 = !DILocation(line: 141, column: 10, scope: !4796)
!4803 = !DILocation(line: 141, column: 21, scope: !4796)
!4804 = !DILocation(line: 141, column: 27, scope: !4796)
!4805 = !DILocation(line: 141, column: 32, scope: !4796)
!4806 = !DILocation(line: 143, column: 54, scope: !4796)
!4807 = !DILocation(line: 143, column: 29, scope: !4796)
!4808 = !DILocation(line: 143, column: 36, scope: !4796)
!4809 = !DILocation(line: 143, column: 47, scope: !4796)
!4810 = !DILocation(line: 143, column: 52, scope: !4796)
!4811 = !DILocation(line: 143, column: 3, scope: !4796)
!4812 = !DILocation(line: 143, column: 10, scope: !4796)
!4813 = !DILocation(line: 143, column: 21, scope: !4796)
!4814 = !DILocation(line: 143, column: 27, scope: !4796)
!4815 = !DILocation(line: 145, column: 2, scope: !4785)
!4816 = !DILocation(line: 145, column: 8, scope: !4785)
!4817 = !DILocation(line: 145, column: 13, scope: !4785)
!4818 = !DILocation(line: 146, column: 2, scope: !4785)
!4819 = !DILocation(line: 146, column: 9, scope: !4785)
!4820 = !DILocation(line: 146, column: 20, scope: !4785)
!4821 = !DILocation(line: 146, column: 25, scope: !4785)
!4822 = !DILocation(line: 147, column: 2, scope: !4785)
!4823 = !DILocation(line: 147, column: 9, scope: !4785)
!4824 = !DILocation(line: 147, column: 15, scope: !4785)
!4825 = !DILocation(line: 148, column: 10, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 147, column: 21)
!4827 = !DILocation(line: 148, column: 16, scope: !4826)
!4828 = !DILocation(line: 148, column: 8, scope: !4826)
!4829 = !DILocation(line: 149, column: 3, scope: !4826)
!4830 = !DILocation(line: 149, column: 9, scope: !4826)
!4831 = !DILocation(line: 149, column: 14, scope: !4826)
!4832 = !DILocation(line: 150, column: 3, scope: !4826)
!4833 = !DILocation(line: 150, column: 10, scope: !4826)
!4834 = !DILocation(line: 150, column: 21, scope: !4826)
!4835 = !DILocation(line: 150, column: 26, scope: !4826)
!4836 = distinct !{!4836, !4822, !4837}
!4837 = !DILocation(line: 151, column: 2, scope: !4785)
!4838 = !DILocation(line: 152, column: 27, scope: !4785)
!4839 = !DILocation(line: 152, column: 2, scope: !4785)
!4840 = !DILocation(line: 152, column: 9, scope: !4785)
!4841 = !DILocation(line: 152, column: 20, scope: !4785)
!4842 = !DILocation(line: 152, column: 25, scope: !4785)
!4843 = !DILocation(line: 153, column: 2, scope: !4785)
!4844 = !DILocation(line: 153, column: 9, scope: !4785)
!4845 = !DILocation(line: 153, column: 15, scope: !4785)
!4846 = !DILocation(line: 154, column: 1, scope: !4785)
!4847 = distinct !DISubprogram(name: "queue_delete", scope: !3, file: !3, line: 156, type: !4786, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4848 = !DILocalVariable(name: "queue", arg: 1, scope: !4847, file: !3, line: 156, type: !4685)
!4849 = !DILocation(line: 156, column: 33, scope: !4847)
!4850 = !DILocalVariable(name: "elem", scope: !4847, file: !3, line: 158, type: !4690)
!4851 = !DILocation(line: 158, column: 20, scope: !4847)
!4852 = !DILocalVariable(name: "temp", scope: !4847, file: !3, line: 159, type: !4690)
!4853 = !DILocation(line: 159, column: 20, scope: !4847)
!4854 = !DILocation(line: 161, column: 9, scope: !4847)
!4855 = !DILocation(line: 161, column: 16, scope: !4847)
!4856 = !DILocation(line: 161, column: 7, scope: !4847)
!4857 = !DILocation(line: 162, column: 2, scope: !4847)
!4858 = !DILocation(line: 162, column: 9, scope: !4847)
!4859 = !DILocation(line: 163, column: 10, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 162, column: 15)
!4861 = !DILocation(line: 163, column: 8, scope: !4860)
!4862 = !DILocation(line: 164, column: 10, scope: !4860)
!4863 = !DILocation(line: 164, column: 16, scope: !4860)
!4864 = !DILocation(line: 164, column: 8, scope: !4860)
!4865 = !DILocation(line: 165, column: 3, scope: !4860)
!4866 = !DILocation(line: 165, column: 13, scope: !4860)
!4867 = distinct !{!4867, !4857, !4868}
!4868 = !DILocation(line: 166, column: 2, scope: !4847)
!4869 = !DILocation(line: 168, column: 9, scope: !4847)
!4870 = !DILocation(line: 168, column: 16, scope: !4847)
!4871 = !DILocation(line: 168, column: 27, scope: !4847)
!4872 = !DILocation(line: 168, column: 7, scope: !4847)
!4873 = !DILocation(line: 169, column: 2, scope: !4847)
!4874 = !DILocation(line: 169, column: 9, scope: !4847)
!4875 = !DILocation(line: 170, column: 10, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 169, column: 15)
!4877 = !DILocation(line: 170, column: 8, scope: !4876)
!4878 = !DILocation(line: 171, column: 10, scope: !4876)
!4879 = !DILocation(line: 171, column: 16, scope: !4876)
!4880 = !DILocation(line: 171, column: 8, scope: !4876)
!4881 = !DILocation(line: 172, column: 3, scope: !4876)
!4882 = !DILocation(line: 172, column: 13, scope: !4876)
!4883 = distinct !{!4883, !4873, !4884}
!4884 = !DILocation(line: 173, column: 2, scope: !4847)
!4885 = !DILocation(line: 175, column: 2, scope: !4847)
!4886 = !DILocation(line: 175, column: 12, scope: !4847)
!4887 = !DILocation(line: 175, column: 19, scope: !4847)
!4888 = !DILocation(line: 176, column: 2, scope: !4847)
!4889 = !DILocation(line: 176, column: 12, scope: !4847)
!4890 = !DILocation(line: 177, column: 1, scope: !4847)
!4891 = distinct !DISubprogram(name: "push_queue", scope: !3, file: !3, line: 180, type: !4892, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{null, !4685, !4397}
!4894 = !DILocalVariable(name: "queue", arg: 1, scope: !4891, file: !3, line: 180, type: !4685)
!4895 = !DILocation(line: 180, column: 31, scope: !4891)
!4896 = !DILocalVariable(name: "node", arg: 2, scope: !4891, file: !3, line: 180, type: !4397)
!4897 = !DILocation(line: 180, column: 47, scope: !4891)
!4898 = !DILocalVariable(name: "elem", scope: !4891, file: !3, line: 182, type: !4690)
!4899 = !DILocation(line: 182, column: 20, scope: !4891)
!4900 = !DILocalVariable(name: "i", scope: !4891, file: !3, line: 183, type: !389)
!4901 = !DILocation(line: 183, column: 6, scope: !4891)
!4902 = !DILocation(line: 185, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 185, column: 6)
!4904 = !DILocation(line: 185, column: 11, scope: !4903)
!4905 = !DILocation(line: 185, column: 6, scope: !4891)
!4906 = !DILocation(line: 186, column: 11, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 185, column: 20)
!4908 = !DILocation(line: 186, column: 3, scope: !4907)
!4909 = !DILocation(line: 187, column: 3, scope: !4907)
!4910 = !DILocation(line: 191, column: 9, scope: !4891)
!4911 = !DILocation(line: 191, column: 16, scope: !4891)
!4912 = !DILocation(line: 191, column: 27, scope: !4891)
!4913 = !DILocation(line: 191, column: 7, scope: !4891)
!4914 = !DILocation(line: 192, column: 6, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 192, column: 6)
!4916 = !DILocation(line: 192, column: 11, scope: !4915)
!4917 = !DILocation(line: 192, column: 6, scope: !4891)
!4918 = !DILocation(line: 193, column: 29, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 192, column: 20)
!4920 = !DILocation(line: 193, column: 35, scope: !4919)
!4921 = !DILocation(line: 193, column: 3, scope: !4919)
!4922 = !DILocation(line: 193, column: 10, scope: !4919)
!4923 = !DILocation(line: 193, column: 21, scope: !4919)
!4924 = !DILocation(line: 193, column: 27, scope: !4919)
!4925 = !DILocation(line: 194, column: 7, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 194, column: 7)
!4927 = !DILocation(line: 194, column: 14, scope: !4926)
!4928 = !DILocation(line: 194, column: 25, scope: !4926)
!4929 = !DILocation(line: 194, column: 33, scope: !4926)
!4930 = !DILocation(line: 194, column: 30, scope: !4926)
!4931 = !DILocation(line: 194, column: 7, scope: !4919)
!4932 = !DILocation(line: 195, column: 4, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 194, column: 39)
!4934 = !DILocation(line: 195, column: 11, scope: !4933)
!4935 = !DILocation(line: 195, column: 22, scope: !4933)
!4936 = !DILocation(line: 195, column: 27, scope: !4933)
!4937 = !DILocation(line: 196, column: 4, scope: !4933)
!4938 = !DILocation(line: 196, column: 11, scope: !4933)
!4939 = !DILocation(line: 196, column: 22, scope: !4933)
!4940 = !DILocation(line: 196, column: 28, scope: !4933)
!4941 = !DILocation(line: 197, column: 3, scope: !4933)
!4942 = !DILocation(line: 198, column: 3, scope: !4919)
!4943 = !DILocation(line: 198, column: 10, scope: !4919)
!4944 = !DILocation(line: 198, column: 21, scope: !4919)
!4945 = !DILocation(line: 198, column: 26, scope: !4919)
!4946 = !DILocation(line: 199, column: 2, scope: !4919)
!4947 = !DILocation(line: 201, column: 10, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 200, column: 7)
!4949 = !DILocation(line: 201, column: 8, scope: !4948)
!4950 = !DILocation(line: 202, column: 3, scope: !4948)
!4951 = !DILocation(line: 202, column: 9, scope: !4948)
!4952 = !DILocation(line: 202, column: 14, scope: !4948)
!4953 = !DILocation(line: 203, column: 3, scope: !4948)
!4954 = !DILocation(line: 203, column: 9, scope: !4948)
!4955 = !DILocation(line: 203, column: 14, scope: !4948)
!4956 = !DILocation(line: 204, column: 54, scope: !4948)
!4957 = !DILocation(line: 204, column: 29, scope: !4948)
!4958 = !DILocation(line: 204, column: 36, scope: !4948)
!4959 = !DILocation(line: 204, column: 47, scope: !4948)
!4960 = !DILocation(line: 204, column: 52, scope: !4948)
!4961 = !DILocation(line: 204, column: 3, scope: !4948)
!4962 = !DILocation(line: 204, column: 10, scope: !4948)
!4963 = !DILocation(line: 204, column: 21, scope: !4948)
!4964 = !DILocation(line: 204, column: 27, scope: !4948)
!4965 = !DILocation(line: 206, column: 10, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 206, column: 3)
!4967 = !DILocation(line: 206, column: 8, scope: !4966)
!4968 = !DILocation(line: 206, column: 15, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 206, column: 3)
!4970 = !DILocation(line: 206, column: 17, scope: !4969)
!4971 = !DILocation(line: 206, column: 3, scope: !4966)
!4972 = !DILocation(line: 207, column: 11, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 206, column: 39)
!4974 = !DILocation(line: 207, column: 9, scope: !4973)
!4975 = !DILocation(line: 208, column: 4, scope: !4973)
!4976 = !DILocation(line: 208, column: 10, scope: !4973)
!4977 = !DILocation(line: 208, column: 15, scope: !4973)
!4978 = !DILocation(line: 209, column: 4, scope: !4973)
!4979 = !DILocation(line: 209, column: 10, scope: !4973)
!4980 = !DILocation(line: 209, column: 15, scope: !4973)
!4981 = !DILocation(line: 210, column: 35, scope: !4973)
!4982 = !DILocation(line: 210, column: 4, scope: !4973)
!4983 = !DILocation(line: 210, column: 11, scope: !4973)
!4984 = !DILocation(line: 210, column: 22, scope: !4973)
!4985 = !DILocation(line: 210, column: 28, scope: !4973)
!4986 = !DILocation(line: 210, column: 33, scope: !4973)
!4987 = !DILocation(line: 211, column: 29, scope: !4973)
!4988 = !DILocation(line: 211, column: 4, scope: !4973)
!4989 = !DILocation(line: 211, column: 11, scope: !4973)
!4990 = !DILocation(line: 211, column: 22, scope: !4973)
!4991 = !DILocation(line: 211, column: 27, scope: !4973)
!4992 = !DILocation(line: 212, column: 3, scope: !4973)
!4993 = !DILocation(line: 206, column: 35, scope: !4969)
!4994 = !DILocation(line: 206, column: 3, scope: !4969)
!4995 = distinct !{!4995, !4971, !4996}
!4996 = !DILocation(line: 212, column: 3, scope: !4966)
!4997 = !DILocation(line: 213, column: 3, scope: !4948)
!4998 = !DILocation(line: 213, column: 10, scope: !4948)
!4999 = !DILocation(line: 213, column: 21, scope: !4948)
!5000 = !DILocation(line: 213, column: 27, scope: !4948)
!5001 = !DILocation(line: 215, column: 10, scope: !4948)
!5002 = !DILocation(line: 215, column: 17, scope: !4948)
!5003 = !DILocation(line: 215, column: 28, scope: !4948)
!5004 = !DILocation(line: 215, column: 8, scope: !4948)
!5005 = !DILocation(line: 216, column: 29, scope: !4948)
!5006 = !DILocation(line: 216, column: 35, scope: !4948)
!5007 = !DILocation(line: 216, column: 3, scope: !4948)
!5008 = !DILocation(line: 216, column: 10, scope: !4948)
!5009 = !DILocation(line: 216, column: 21, scope: !4948)
!5010 = !DILocation(line: 216, column: 27, scope: !4948)
!5011 = !DILocation(line: 218, column: 2, scope: !4891)
!5012 = !DILocation(line: 218, column: 8, scope: !4891)
!5013 = !DILocation(line: 218, column: 13, scope: !4891)
!5014 = !DILocation(line: 219, column: 15, scope: !4891)
!5015 = !DILocation(line: 219, column: 2, scope: !4891)
!5016 = !DILocation(line: 219, column: 8, scope: !4891)
!5017 = !DILocation(line: 219, column: 13, scope: !4891)
!5018 = !DILocation(line: 220, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 220, column: 6)
!5020 = !DILocation(line: 220, column: 13, scope: !5019)
!5021 = !DILocation(line: 220, column: 18, scope: !5019)
!5022 = !DILocation(line: 220, column: 6, scope: !4891)
!5023 = !DILocation(line: 221, column: 23, scope: !5019)
!5024 = !DILocation(line: 221, column: 3, scope: !5019)
!5025 = !DILocation(line: 221, column: 10, scope: !5019)
!5026 = !DILocation(line: 221, column: 16, scope: !5019)
!5027 = !DILocation(line: 221, column: 21, scope: !5019)
!5028 = !DILocation(line: 222, column: 16, scope: !4891)
!5029 = !DILocation(line: 222, column: 2, scope: !4891)
!5030 = !DILocation(line: 222, column: 9, scope: !4891)
!5031 = !DILocation(line: 222, column: 14, scope: !4891)
!5032 = !DILocation(line: 223, column: 6, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 223, column: 6)
!5034 = !DILocation(line: 223, column: 13, scope: !5033)
!5035 = !DILocation(line: 223, column: 19, scope: !5033)
!5036 = !DILocation(line: 223, column: 6, scope: !4891)
!5037 = !DILocation(line: 224, column: 18, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 223, column: 28)
!5039 = !DILocation(line: 224, column: 3, scope: !5038)
!5040 = !DILocation(line: 224, column: 10, scope: !5038)
!5041 = !DILocation(line: 224, column: 16, scope: !5038)
!5042 = !DILocation(line: 225, column: 2, scope: !5038)
!5043 = !DILocation(line: 226, column: 2, scope: !4891)
!5044 = !DILocation(line: 226, column: 9, scope: !4891)
!5045 = !DILocation(line: 226, column: 14, scope: !4891)
!5046 = !DILocation(line: 227, column: 1, scope: !4891)
!5047 = distinct !DISubprogram(name: "push_stack", scope: !3, file: !3, line: 231, type: !4892, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5048 = !DILocalVariable(name: "queue", arg: 1, scope: !5047, file: !3, line: 231, type: !4685)
!5049 = !DILocation(line: 231, column: 31, scope: !5047)
!5050 = !DILocalVariable(name: "node", arg: 2, scope: !5047, file: !3, line: 231, type: !4397)
!5051 = !DILocation(line: 231, column: 47, scope: !5047)
!5052 = !DILocalVariable(name: "elem", scope: !5047, file: !3, line: 233, type: !4690)
!5053 = !DILocation(line: 233, column: 20, scope: !5047)
!5054 = !DILocalVariable(name: "i", scope: !5047, file: !3, line: 234, type: !389)
!5055 = !DILocation(line: 234, column: 6, scope: !5047)
!5056 = !DILocation(line: 236, column: 9, scope: !5047)
!5057 = !DILocation(line: 236, column: 16, scope: !5047)
!5058 = !DILocation(line: 236, column: 27, scope: !5047)
!5059 = !DILocation(line: 236, column: 7, scope: !5047)
!5060 = !DILocation(line: 237, column: 6, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 237, column: 6)
!5062 = !DILocation(line: 237, column: 11, scope: !5061)
!5063 = !DILocation(line: 237, column: 6, scope: !5047)
!5064 = !DILocation(line: 238, column: 29, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 237, column: 20)
!5066 = !DILocation(line: 238, column: 35, scope: !5065)
!5067 = !DILocation(line: 238, column: 3, scope: !5065)
!5068 = !DILocation(line: 238, column: 10, scope: !5065)
!5069 = !DILocation(line: 238, column: 21, scope: !5065)
!5070 = !DILocation(line: 238, column: 27, scope: !5065)
!5071 = !DILocation(line: 239, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 239, column: 7)
!5073 = !DILocation(line: 239, column: 14, scope: !5072)
!5074 = !DILocation(line: 239, column: 25, scope: !5072)
!5075 = !DILocation(line: 239, column: 33, scope: !5072)
!5076 = !DILocation(line: 239, column: 30, scope: !5072)
!5077 = !DILocation(line: 239, column: 7, scope: !5065)
!5078 = !DILocation(line: 240, column: 4, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 239, column: 39)
!5080 = !DILocation(line: 240, column: 11, scope: !5079)
!5081 = !DILocation(line: 240, column: 22, scope: !5079)
!5082 = !DILocation(line: 240, column: 27, scope: !5079)
!5083 = !DILocation(line: 241, column: 4, scope: !5079)
!5084 = !DILocation(line: 241, column: 11, scope: !5079)
!5085 = !DILocation(line: 241, column: 22, scope: !5079)
!5086 = !DILocation(line: 241, column: 28, scope: !5079)
!5087 = !DILocation(line: 242, column: 3, scope: !5079)
!5088 = !DILocation(line: 243, column: 3, scope: !5065)
!5089 = !DILocation(line: 243, column: 10, scope: !5065)
!5090 = !DILocation(line: 243, column: 21, scope: !5065)
!5091 = !DILocation(line: 243, column: 26, scope: !5065)
!5092 = !DILocation(line: 244, column: 2, scope: !5065)
!5093 = !DILocation(line: 246, column: 10, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 245, column: 7)
!5095 = !DILocation(line: 246, column: 8, scope: !5094)
!5096 = !DILocation(line: 247, column: 3, scope: !5094)
!5097 = !DILocation(line: 247, column: 9, scope: !5094)
!5098 = !DILocation(line: 247, column: 14, scope: !5094)
!5099 = !DILocation(line: 248, column: 3, scope: !5094)
!5100 = !DILocation(line: 248, column: 9, scope: !5094)
!5101 = !DILocation(line: 248, column: 14, scope: !5094)
!5102 = !DILocation(line: 249, column: 54, scope: !5094)
!5103 = !DILocation(line: 249, column: 29, scope: !5094)
!5104 = !DILocation(line: 249, column: 36, scope: !5094)
!5105 = !DILocation(line: 249, column: 47, scope: !5094)
!5106 = !DILocation(line: 249, column: 52, scope: !5094)
!5107 = !DILocation(line: 249, column: 3, scope: !5094)
!5108 = !DILocation(line: 249, column: 10, scope: !5094)
!5109 = !DILocation(line: 249, column: 21, scope: !5094)
!5110 = !DILocation(line: 249, column: 27, scope: !5094)
!5111 = !DILocation(line: 251, column: 10, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 251, column: 3)
!5113 = !DILocation(line: 251, column: 8, scope: !5112)
!5114 = !DILocation(line: 251, column: 15, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 251, column: 3)
!5116 = !DILocation(line: 251, column: 17, scope: !5115)
!5117 = !DILocation(line: 251, column: 3, scope: !5112)
!5118 = !DILocation(line: 252, column: 11, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 251, column: 39)
!5120 = !DILocation(line: 252, column: 9, scope: !5119)
!5121 = !DILocation(line: 253, column: 4, scope: !5119)
!5122 = !DILocation(line: 253, column: 10, scope: !5119)
!5123 = !DILocation(line: 253, column: 15, scope: !5119)
!5124 = !DILocation(line: 254, column: 4, scope: !5119)
!5125 = !DILocation(line: 254, column: 10, scope: !5119)
!5126 = !DILocation(line: 254, column: 15, scope: !5119)
!5127 = !DILocation(line: 255, column: 35, scope: !5119)
!5128 = !DILocation(line: 255, column: 4, scope: !5119)
!5129 = !DILocation(line: 255, column: 11, scope: !5119)
!5130 = !DILocation(line: 255, column: 22, scope: !5119)
!5131 = !DILocation(line: 255, column: 28, scope: !5119)
!5132 = !DILocation(line: 255, column: 33, scope: !5119)
!5133 = !DILocation(line: 256, column: 29, scope: !5119)
!5134 = !DILocation(line: 256, column: 4, scope: !5119)
!5135 = !DILocation(line: 256, column: 11, scope: !5119)
!5136 = !DILocation(line: 256, column: 22, scope: !5119)
!5137 = !DILocation(line: 256, column: 27, scope: !5119)
!5138 = !DILocation(line: 257, column: 3, scope: !5119)
!5139 = !DILocation(line: 251, column: 35, scope: !5115)
!5140 = !DILocation(line: 251, column: 3, scope: !5115)
!5141 = distinct !{!5141, !5117, !5142}
!5142 = !DILocation(line: 257, column: 3, scope: !5112)
!5143 = !DILocation(line: 258, column: 3, scope: !5094)
!5144 = !DILocation(line: 258, column: 10, scope: !5094)
!5145 = !DILocation(line: 258, column: 21, scope: !5094)
!5146 = !DILocation(line: 258, column: 27, scope: !5094)
!5147 = !DILocation(line: 260, column: 10, scope: !5094)
!5148 = !DILocation(line: 260, column: 17, scope: !5094)
!5149 = !DILocation(line: 260, column: 28, scope: !5094)
!5150 = !DILocation(line: 260, column: 8, scope: !5094)
!5151 = !DILocation(line: 261, column: 29, scope: !5094)
!5152 = !DILocation(line: 261, column: 35, scope: !5094)
!5153 = !DILocation(line: 261, column: 3, scope: !5094)
!5154 = !DILocation(line: 261, column: 10, scope: !5094)
!5155 = !DILocation(line: 261, column: 21, scope: !5094)
!5156 = !DILocation(line: 261, column: 27, scope: !5094)
!5157 = !DILocation(line: 263, column: 15, scope: !5047)
!5158 = !DILocation(line: 263, column: 22, scope: !5047)
!5159 = !DILocation(line: 263, column: 2, scope: !5047)
!5160 = !DILocation(line: 263, column: 8, scope: !5047)
!5161 = !DILocation(line: 263, column: 13, scope: !5047)
!5162 = !DILocation(line: 264, column: 15, scope: !5047)
!5163 = !DILocation(line: 264, column: 2, scope: !5047)
!5164 = !DILocation(line: 264, column: 8, scope: !5047)
!5165 = !DILocation(line: 264, column: 13, scope: !5047)
!5166 = !DILocation(line: 265, column: 17, scope: !5047)
!5167 = !DILocation(line: 265, column: 2, scope: !5047)
!5168 = !DILocation(line: 265, column: 9, scope: !5047)
!5169 = !DILocation(line: 265, column: 15, scope: !5047)
!5170 = !DILocation(line: 266, column: 6, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 266, column: 6)
!5172 = !DILocation(line: 266, column: 13, scope: !5171)
!5173 = !DILocation(line: 266, column: 18, scope: !5171)
!5174 = !DILocation(line: 266, column: 6, scope: !5047)
!5175 = !DILocation(line: 267, column: 17, scope: !5171)
!5176 = !DILocation(line: 267, column: 3, scope: !5171)
!5177 = !DILocation(line: 267, column: 10, scope: !5171)
!5178 = !DILocation(line: 267, column: 15, scope: !5171)
!5179 = !DILocation(line: 268, column: 2, scope: !5047)
!5180 = !DILocation(line: 268, column: 9, scope: !5047)
!5181 = !DILocation(line: 268, column: 14, scope: !5047)
!5182 = !DILocation(line: 269, column: 1, scope: !5047)
!5183 = distinct !DISubprogram(name: "pop_queue", scope: !3, file: !3, line: 272, type: !5184, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{!4397, !4685}
!5186 = !DILocalVariable(name: "queue", arg: 1, scope: !5183, file: !3, line: 272, type: !4685)
!5187 = !DILocation(line: 272, column: 34, scope: !5183)
!5188 = !DILocalVariable(name: "elem", scope: !5183, file: !3, line: 274, type: !4690)
!5189 = !DILocation(line: 274, column: 20, scope: !5183)
!5190 = !DILocalVariable(name: "node", scope: !5183, file: !3, line: 275, type: !4397)
!5191 = !DILocation(line: 275, column: 11, scope: !5183)
!5192 = !DILocation(line: 277, column: 9, scope: !5183)
!5193 = !DILocation(line: 277, column: 16, scope: !5183)
!5194 = !DILocation(line: 277, column: 7, scope: !5183)
!5195 = !DILocation(line: 278, column: 6, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 278, column: 6)
!5197 = !DILocation(line: 278, column: 6, scope: !5183)
!5198 = !DILocation(line: 279, column: 18, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 278, column: 12)
!5200 = !DILocation(line: 279, column: 24, scope: !5199)
!5201 = !DILocation(line: 279, column: 3, scope: !5199)
!5202 = !DILocation(line: 279, column: 10, scope: !5199)
!5203 = !DILocation(line: 279, column: 16, scope: !5199)
!5204 = !DILocation(line: 280, column: 7, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 280, column: 7)
!5206 = !DILocation(line: 280, column: 14, scope: !5205)
!5207 = !DILocation(line: 280, column: 22, scope: !5205)
!5208 = !DILocation(line: 280, column: 19, scope: !5205)
!5209 = !DILocation(line: 280, column: 7, scope: !5199)
!5210 = !DILocation(line: 281, column: 4, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 280, column: 28)
!5212 = !DILocation(line: 281, column: 11, scope: !5211)
!5213 = !DILocation(line: 281, column: 16, scope: !5211)
!5214 = !DILocation(line: 282, column: 4, scope: !5211)
!5215 = !DILocation(line: 282, column: 11, scope: !5211)
!5216 = !DILocation(line: 282, column: 17, scope: !5211)
!5217 = !DILocation(line: 283, column: 3, scope: !5211)
!5218 = !DILocation(line: 284, column: 3, scope: !5199)
!5219 = !DILocation(line: 284, column: 10, scope: !5199)
!5220 = !DILocation(line: 284, column: 15, scope: !5199)
!5221 = !DILocation(line: 285, column: 7, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 285, column: 7)
!5223 = !DILocation(line: 285, column: 14, scope: !5222)
!5224 = !DILocation(line: 285, column: 25, scope: !5222)
!5225 = !DILocation(line: 285, column: 7, scope: !5199)
!5226 = !DILocation(line: 286, column: 35, scope: !5222)
!5227 = !DILocation(line: 286, column: 4, scope: !5222)
!5228 = !DILocation(line: 286, column: 11, scope: !5222)
!5229 = !DILocation(line: 286, column: 22, scope: !5222)
!5230 = !DILocation(line: 286, column: 28, scope: !5222)
!5231 = !DILocation(line: 286, column: 33, scope: !5222)
!5232 = !DILocation(line: 287, column: 28, scope: !5199)
!5233 = !DILocation(line: 287, column: 3, scope: !5199)
!5234 = !DILocation(line: 287, column: 10, scope: !5199)
!5235 = !DILocation(line: 287, column: 21, scope: !5199)
!5236 = !DILocation(line: 287, column: 26, scope: !5199)
!5237 = !DILocation(line: 288, column: 7, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 288, column: 7)
!5239 = !DILocation(line: 288, column: 14, scope: !5238)
!5240 = !DILocation(line: 288, column: 25, scope: !5238)
!5241 = !DILocation(line: 288, column: 31, scope: !5238)
!5242 = !DILocation(line: 288, column: 7, scope: !5199)
!5243 = !DILocation(line: 289, column: 30, scope: !5238)
!5244 = !DILocation(line: 289, column: 4, scope: !5238)
!5245 = !DILocation(line: 289, column: 11, scope: !5238)
!5246 = !DILocation(line: 289, column: 22, scope: !5238)
!5247 = !DILocation(line: 289, column: 28, scope: !5238)
!5248 = !DILocation(line: 290, column: 10, scope: !5199)
!5249 = !DILocation(line: 290, column: 16, scope: !5199)
!5250 = !DILocation(line: 290, column: 8, scope: !5199)
!5251 = !DILocation(line: 291, column: 3, scope: !5199)
!5252 = !DILocation(line: 291, column: 9, scope: !5199)
!5253 = !DILocation(line: 291, column: 14, scope: !5199)
!5254 = !DILocation(line: 292, column: 3, scope: !5199)
!5255 = !DILocation(line: 292, column: 9, scope: !5199)
!5256 = !DILocation(line: 292, column: 14, scope: !5199)
!5257 = !DILocation(line: 293, column: 3, scope: !5199)
!5258 = !DILocation(line: 293, column: 10, scope: !5199)
!5259 = !DILocation(line: 293, column: 21, scope: !5199)
!5260 = !DILocation(line: 293, column: 26, scope: !5199)
!5261 = !DILocation(line: 294, column: 10, scope: !5199)
!5262 = !DILocation(line: 294, column: 3, scope: !5199)
!5263 = !DILocation(line: 297, column: 11, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 296, column: 7)
!5265 = !DILocation(line: 297, column: 3, scope: !5264)
!5266 = !DILocation(line: 298, column: 3, scope: !5264)
!5267 = !DILocation(line: 300, column: 1, scope: !5183)
!5268 = distinct !DISubprogram(name: "get_top_node_queue", scope: !3, file: !3, line: 302, type: !5184, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5269 = !DILocalVariable(name: "queue", arg: 1, scope: !5268, file: !3, line: 302, type: !4685)
!5270 = !DILocation(line: 302, column: 43, scope: !5268)
!5271 = !DILocation(line: 304, column: 9, scope: !5268)
!5272 = !DILocation(line: 304, column: 16, scope: !5268)
!5273 = !DILocation(line: 304, column: 23, scope: !5268)
!5274 = !DILocation(line: 304, column: 2, scope: !5268)
!5275 = distinct !DISubprogram(name: "dag_init", scope: !3, file: !3, line: 307, type: !5276, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!5278}
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 64)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagForest", file: !34, line: 133, baseType: !2409)
!5280 = !DILocalVariable(name: "forest", scope: !5275, file: !3, line: 309, type: !5278)
!5281 = !DILocation(line: 309, column: 13, scope: !5275)
!5282 = !DILocation(line: 311, column: 11, scope: !5275)
!5283 = !DILocation(line: 311, column: 9, scope: !5275)
!5284 = !DILocation(line: 312, column: 2, scope: !5275)
!5285 = !DILocation(line: 312, column: 10, scope: !5275)
!5286 = !DILocation(line: 312, column: 26, scope: !5275)
!5287 = !DILocation(line: 313, column: 9, scope: !5275)
!5288 = !DILocation(line: 313, column: 2, scope: !5275)
!5289 = distinct !DISubprogram(name: "build_dag", scope: !3, file: !3, line: 910, type: !5290, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!5278, !4595, !4663, !387}
!5292 = !DILocalVariable(name: "bmain", arg: 1, scope: !5289, file: !3, line: 910, type: !4595)
!5293 = !DILocation(line: 910, column: 28, scope: !5289)
!5294 = !DILocalVariable(name: "sce", arg: 2, scope: !5289, file: !3, line: 910, type: !4663)
!5295 = !DILocation(line: 910, column: 42, scope: !5289)
!5296 = !DILocalVariable(name: "mask", arg: 3, scope: !5289, file: !3, line: 910, type: !387)
!5297 = !DILocation(line: 910, column: 53, scope: !5289)
!5298 = !DILocalVariable(name: "base", scope: !5289, file: !3, line: 912, type: !5299)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !517, line: 75, baseType: !1786)
!5301 = !DILocation(line: 912, column: 8, scope: !5289)
!5302 = !DILocalVariable(name: "ob", scope: !5289, file: !3, line: 913, type: !349)
!5303 = !DILocation(line: 913, column: 10, scope: !5289)
!5304 = !DILocalVariable(name: "node", scope: !5289, file: !3, line: 914, type: !4397)
!5305 = !DILocation(line: 914, column: 11, scope: !5289)
!5306 = !DILocalVariable(name: "scenenode", scope: !5289, file: !3, line: 915, type: !4397)
!5307 = !DILocation(line: 915, column: 11, scope: !5289)
!5308 = !DILocalVariable(name: "dag", scope: !5289, file: !3, line: 916, type: !5278)
!5309 = !DILocation(line: 916, column: 13, scope: !5289)
!5310 = !DILocalVariable(name: "itA", scope: !5289, file: !3, line: 917, type: !5311)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagAdjList", file: !34, line: 74, baseType: !4419)
!5313 = !DILocation(line: 917, column: 14, scope: !5289)
!5314 = !DILocation(line: 919, column: 8, scope: !5289)
!5315 = !DILocation(line: 919, column: 13, scope: !5289)
!5316 = !DILocation(line: 919, column: 6, scope: !5289)
!5317 = !DILocation(line: 920, column: 6, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 920, column: 6)
!5319 = !DILocation(line: 920, column: 6, scope: !5289)
!5320 = !DILocation(line: 921, column: 15, scope: !5318)
!5321 = !DILocation(line: 921, column: 3, scope: !5318)
!5322 = !DILocation(line: 923, column: 9, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 922, column: 7)
!5324 = !DILocation(line: 923, column: 7, scope: !5323)
!5325 = !DILocation(line: 924, column: 17, scope: !5323)
!5326 = !DILocation(line: 924, column: 3, scope: !5323)
!5327 = !DILocation(line: 924, column: 8, scope: !5323)
!5328 = !DILocation(line: 924, column: 15, scope: !5323)
!5329 = !DILocation(line: 928, column: 25, scope: !5289)
!5330 = !DILocation(line: 928, column: 2, scope: !5289)
!5331 = !DILocation(line: 929, column: 25, scope: !5289)
!5332 = !DILocation(line: 929, column: 2, scope: !5289)
!5333 = !DILocation(line: 930, column: 25, scope: !5289)
!5334 = !DILocation(line: 930, column: 2, scope: !5289)
!5335 = !DILocation(line: 933, column: 27, scope: !5289)
!5336 = !DILocation(line: 933, column: 32, scope: !5289)
!5337 = !DILocation(line: 933, column: 14, scope: !5289)
!5338 = !DILocation(line: 933, column: 12, scope: !5289)
!5339 = !DILocation(line: 936, column: 14, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 936, column: 2)
!5341 = !DILocation(line: 936, column: 19, scope: !5340)
!5342 = !DILocation(line: 936, column: 24, scope: !5340)
!5343 = !DILocation(line: 936, column: 12, scope: !5340)
!5344 = !DILocation(line: 936, column: 7, scope: !5340)
!5345 = !DILocation(line: 936, column: 31, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 936, column: 2)
!5347 = !DILocation(line: 936, column: 2, scope: !5340)
!5348 = !DILocation(line: 937, column: 8, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 936, column: 56)
!5350 = !DILocation(line: 937, column: 14, scope: !5349)
!5351 = !DILocation(line: 937, column: 6, scope: !5349)
!5352 = !DILocation(line: 939, column: 20, scope: !5349)
!5353 = !DILocation(line: 939, column: 25, scope: !5349)
!5354 = !DILocation(line: 939, column: 36, scope: !5349)
!5355 = !DILocation(line: 939, column: 41, scope: !5349)
!5356 = !DILocation(line: 939, column: 45, scope: !5349)
!5357 = !DILocation(line: 939, column: 3, scope: !5349)
!5358 = !DILocation(line: 940, column: 7, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 940, column: 7)
!5360 = !DILocation(line: 940, column: 11, scope: !5359)
!5361 = !DILocation(line: 940, column: 7, scope: !5349)
!5362 = !DILocation(line: 941, column: 21, scope: !5359)
!5363 = !DILocation(line: 941, column: 26, scope: !5359)
!5364 = !DILocation(line: 941, column: 37, scope: !5359)
!5365 = !DILocation(line: 941, column: 42, scope: !5359)
!5366 = !DILocation(line: 941, column: 46, scope: !5359)
!5367 = !DILocation(line: 941, column: 53, scope: !5359)
!5368 = !DILocation(line: 941, column: 4, scope: !5359)
!5369 = !DILocation(line: 942, column: 7, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 942, column: 7)
!5371 = !DILocation(line: 942, column: 11, scope: !5370)
!5372 = !DILocation(line: 942, column: 7, scope: !5349)
!5373 = !DILocation(line: 943, column: 20, scope: !5370)
!5374 = !DILocation(line: 943, column: 25, scope: !5370)
!5375 = !DILocation(line: 943, column: 36, scope: !5370)
!5376 = !DILocation(line: 943, column: 41, scope: !5370)
!5377 = !DILocation(line: 943, column: 45, scope: !5370)
!5378 = !DILocation(line: 943, column: 56, scope: !5370)
!5379 = !DILocation(line: 943, column: 4, scope: !5370)
!5380 = !DILocation(line: 944, column: 2, scope: !5349)
!5381 = !DILocation(line: 936, column: 44, scope: !5346)
!5382 = !DILocation(line: 936, column: 50, scope: !5346)
!5383 = !DILocation(line: 936, column: 42, scope: !5346)
!5384 = !DILocation(line: 936, column: 2, scope: !5346)
!5385 = distinct !{!5385, !5347, !5386}
!5386 = !DILocation(line: 944, column: 2, scope: !5340)
!5387 = !DILocation(line: 946, column: 25, scope: !5289)
!5388 = !DILocation(line: 946, column: 2, scope: !5289)
!5389 = !DILocation(line: 953, column: 14, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 953, column: 2)
!5391 = !DILocation(line: 953, column: 19, scope: !5390)
!5392 = !DILocation(line: 953, column: 27, scope: !5390)
!5393 = !DILocation(line: 953, column: 35, scope: !5390)
!5394 = !DILocation(line: 953, column: 12, scope: !5390)
!5395 = !DILocation(line: 953, column: 7, scope: !5390)
!5396 = !DILocation(line: 953, column: 42, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 953, column: 2)
!5398 = !DILocation(line: 953, column: 2, scope: !5390)
!5399 = !DILocation(line: 954, column: 7, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 954, column: 7)
!5401 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 953, column: 67)
!5402 = !DILocation(line: 954, column: 13, scope: !5400)
!5403 = !DILocation(line: 954, column: 18, scope: !5400)
!5404 = !DILocation(line: 954, column: 7, scope: !5401)
!5405 = !DILocation(line: 955, column: 15, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 955, column: 4)
!5407 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 954, column: 28)
!5408 = !DILocation(line: 955, column: 21, scope: !5406)
!5409 = !DILocation(line: 955, column: 13, scope: !5406)
!5410 = !DILocation(line: 955, column: 9, scope: !5406)
!5411 = !DILocation(line: 955, column: 28, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 955, column: 4)
!5413 = !DILocation(line: 955, column: 4, scope: !5406)
!5414 = !DILocation(line: 956, column: 9, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 956, column: 9)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 955, column: 50)
!5417 = !DILocation(line: 956, column: 14, scope: !5415)
!5418 = !DILocation(line: 956, column: 20, scope: !5415)
!5419 = !DILocation(line: 956, column: 25, scope: !5415)
!5420 = !DILocation(line: 956, column: 9, scope: !5416)
!5421 = !DILocation(line: 957, column: 26, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 956, column: 35)
!5423 = !DILocation(line: 957, column: 31, scope: !5422)
!5424 = !DILocation(line: 957, column: 6, scope: !5422)
!5425 = !DILocation(line: 957, column: 11, scope: !5422)
!5426 = !DILocation(line: 957, column: 17, scope: !5422)
!5427 = !DILocation(line: 957, column: 23, scope: !5422)
!5428 = !DILocation(line: 958, column: 5, scope: !5422)
!5429 = !DILocation(line: 959, column: 4, scope: !5416)
!5430 = !DILocation(line: 955, column: 39, scope: !5412)
!5431 = !DILocation(line: 955, column: 44, scope: !5412)
!5432 = !DILocation(line: 955, column: 37, scope: !5412)
!5433 = !DILocation(line: 955, column: 4, scope: !5412)
!5434 = distinct !{!5434, !5413, !5435}
!5435 = !DILocation(line: 959, column: 4, scope: !5406)
!5436 = !DILocation(line: 962, column: 44, scope: !5407)
!5437 = !DILocation(line: 962, column: 50, scope: !5407)
!5438 = !DILocation(line: 962, column: 15, scope: !5407)
!5439 = !DILocation(line: 962, column: 21, scope: !5407)
!5440 = !DILocation(line: 962, column: 5, scope: !5407)
!5441 = !DILocation(line: 962, column: 26, scope: !5407)
!5442 = !DILocation(line: 962, column: 42, scope: !5407)
!5443 = !DILocation(line: 963, column: 3, scope: !5407)
!5444 = !DILocation(line: 964, column: 2, scope: !5401)
!5445 = !DILocation(line: 953, column: 55, scope: !5397)
!5446 = !DILocation(line: 953, column: 61, scope: !5397)
!5447 = !DILocation(line: 953, column: 53, scope: !5397)
!5448 = !DILocation(line: 953, column: 2, scope: !5397)
!5449 = distinct !{!5449, !5398, !5450}
!5450 = !DILocation(line: 964, column: 2, scope: !5390)
!5451 = !DILocation(line: 966, column: 14, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 966, column: 2)
!5453 = !DILocation(line: 966, column: 19, scope: !5452)
!5454 = !DILocation(line: 966, column: 27, scope: !5452)
!5455 = !DILocation(line: 966, column: 35, scope: !5452)
!5456 = !DILocation(line: 966, column: 12, scope: !5452)
!5457 = !DILocation(line: 966, column: 7, scope: !5452)
!5458 = !DILocation(line: 966, column: 42, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 966, column: 2)
!5460 = !DILocation(line: 966, column: 2, scope: !5452)
!5461 = !DILocation(line: 967, column: 7, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 967, column: 7)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 966, column: 67)
!5464 = !DILocation(line: 967, column: 13, scope: !5462)
!5465 = !DILocation(line: 967, column: 18, scope: !5462)
!5466 = !DILocation(line: 967, column: 7, scope: !5463)
!5467 = !DILocation(line: 968, column: 15, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 968, column: 4)
!5469 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 967, column: 28)
!5470 = !DILocation(line: 968, column: 21, scope: !5468)
!5471 = !DILocation(line: 968, column: 13, scope: !5468)
!5472 = !DILocation(line: 968, column: 9, scope: !5468)
!5473 = !DILocation(line: 968, column: 28, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 968, column: 4)
!5475 = !DILocation(line: 968, column: 4, scope: !5468)
!5476 = !DILocation(line: 969, column: 9, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 969, column: 9)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 968, column: 50)
!5479 = !DILocation(line: 969, column: 14, scope: !5477)
!5480 = !DILocation(line: 969, column: 20, scope: !5477)
!5481 = !DILocation(line: 969, column: 25, scope: !5477)
!5482 = !DILocation(line: 969, column: 9, scope: !5478)
!5483 = !DILocation(line: 970, column: 19, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 969, column: 35)
!5485 = !DILocation(line: 970, column: 24, scope: !5484)
!5486 = !DILocation(line: 970, column: 30, scope: !5484)
!5487 = !DILocation(line: 970, column: 6, scope: !5484)
!5488 = !DILocation(line: 970, column: 11, scope: !5484)
!5489 = !DILocation(line: 970, column: 16, scope: !5484)
!5490 = !DILocation(line: 971, column: 5, scope: !5484)
!5491 = !DILocation(line: 972, column: 4, scope: !5478)
!5492 = !DILocation(line: 968, column: 39, scope: !5474)
!5493 = !DILocation(line: 968, column: 44, scope: !5474)
!5494 = !DILocation(line: 968, column: 37, scope: !5474)
!5495 = !DILocation(line: 968, column: 4, scope: !5474)
!5496 = distinct !{!5496, !5475, !5497}
!5497 = !DILocation(line: 972, column: 4, scope: !5468)
!5498 = !DILocation(line: 973, column: 3, scope: !5469)
!5499 = !DILocation(line: 974, column: 2, scope: !5463)
!5500 = !DILocation(line: 966, column: 55, scope: !5459)
!5501 = !DILocation(line: 966, column: 61, scope: !5459)
!5502 = !DILocation(line: 966, column: 53, scope: !5459)
!5503 = !DILocation(line: 966, column: 2, scope: !5459)
!5504 = distinct !{!5504, !5460, !5505}
!5505 = !DILocation(line: 974, column: 2, scope: !5452)
!5506 = !DILocation(line: 979, column: 9, scope: !5289)
!5507 = !DILocation(line: 979, column: 2, scope: !5289)
!5508 = distinct !DISubprogram(name: "free_forest", scope: !3, file: !3, line: 983, type: !5509, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{null, !5278}
!5511 = !DILocalVariable(name: "Dag", arg: 1, scope: !5508, file: !3, line: 983, type: !5278)
!5512 = !DILocation(line: 983, column: 29, scope: !5508)
!5513 = !DILocalVariable(name: "tempN", scope: !5508, file: !3, line: 985, type: !4397)
!5514 = !DILocation(line: 985, column: 11, scope: !5508)
!5515 = !DILocalVariable(name: "tempA", scope: !5508, file: !3, line: 986, type: !5311)
!5516 = !DILocation(line: 986, column: 14, scope: !5508)
!5517 = !DILocalVariable(name: "itA", scope: !5508, file: !3, line: 987, type: !5311)
!5518 = !DILocation(line: 987, column: 14, scope: !5508)
!5519 = !DILocalVariable(name: "itN", scope: !5508, file: !3, line: 988, type: !4397)
!5520 = !DILocation(line: 988, column: 11, scope: !5508)
!5521 = !DILocation(line: 988, column: 17, scope: !5508)
!5522 = !DILocation(line: 988, column: 22, scope: !5508)
!5523 = !DILocation(line: 988, column: 30, scope: !5508)
!5524 = !DILocation(line: 990, column: 2, scope: !5508)
!5525 = !DILocation(line: 990, column: 9, scope: !5508)
!5526 = !DILocation(line: 991, column: 9, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 990, column: 14)
!5528 = !DILocation(line: 991, column: 14, scope: !5527)
!5529 = !DILocation(line: 991, column: 7, scope: !5527)
!5530 = !DILocation(line: 992, column: 3, scope: !5527)
!5531 = !DILocation(line: 992, column: 10, scope: !5527)
!5532 = !DILocation(line: 993, column: 12, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 992, column: 15)
!5534 = !DILocation(line: 993, column: 10, scope: !5533)
!5535 = !DILocation(line: 994, column: 10, scope: !5533)
!5536 = !DILocation(line: 994, column: 15, scope: !5533)
!5537 = !DILocation(line: 994, column: 8, scope: !5533)
!5538 = !DILocation(line: 995, column: 4, scope: !5533)
!5539 = !DILocation(line: 995, column: 14, scope: !5533)
!5540 = distinct !{!5540, !5530, !5541}
!5541 = !DILocation(line: 996, column: 3, scope: !5527)
!5542 = !DILocation(line: 998, column: 9, scope: !5527)
!5543 = !DILocation(line: 998, column: 14, scope: !5527)
!5544 = !DILocation(line: 998, column: 7, scope: !5527)
!5545 = !DILocation(line: 999, column: 3, scope: !5527)
!5546 = !DILocation(line: 999, column: 10, scope: !5527)
!5547 = !DILocation(line: 1000, column: 12, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 999, column: 15)
!5549 = !DILocation(line: 1000, column: 10, scope: !5548)
!5550 = !DILocation(line: 1001, column: 10, scope: !5548)
!5551 = !DILocation(line: 1001, column: 15, scope: !5548)
!5552 = !DILocation(line: 1001, column: 8, scope: !5548)
!5553 = !DILocation(line: 1002, column: 4, scope: !5548)
!5554 = !DILocation(line: 1002, column: 14, scope: !5548)
!5555 = distinct !{!5555, !5545, !5556}
!5556 = !DILocation(line: 1003, column: 3, scope: !5527)
!5557 = !DILocation(line: 1005, column: 11, scope: !5527)
!5558 = !DILocation(line: 1005, column: 9, scope: !5527)
!5559 = !DILocation(line: 1006, column: 9, scope: !5527)
!5560 = !DILocation(line: 1006, column: 14, scope: !5527)
!5561 = !DILocation(line: 1006, column: 7, scope: !5527)
!5562 = !DILocation(line: 1007, column: 3, scope: !5527)
!5563 = !DILocation(line: 1007, column: 13, scope: !5527)
!5564 = distinct !{!5564, !5524, !5565}
!5565 = !DILocation(line: 1008, column: 2, scope: !5508)
!5566 = !DILocation(line: 1010, column: 17, scope: !5508)
!5567 = !DILocation(line: 1010, column: 22, scope: !5508)
!5568 = !DILocation(line: 1010, column: 2, scope: !5508)
!5569 = !DILocation(line: 1011, column: 2, scope: !5508)
!5570 = !DILocation(line: 1011, column: 7, scope: !5508)
!5571 = !DILocation(line: 1011, column: 16, scope: !5508)
!5572 = !DILocation(line: 1012, column: 2, scope: !5508)
!5573 = !DILocation(line: 1012, column: 7, scope: !5508)
!5574 = !DILocation(line: 1012, column: 15, scope: !5508)
!5575 = !DILocation(line: 1012, column: 21, scope: !5508)
!5576 = !DILocation(line: 1013, column: 2, scope: !5508)
!5577 = !DILocation(line: 1013, column: 7, scope: !5508)
!5578 = !DILocation(line: 1013, column: 15, scope: !5508)
!5579 = !DILocation(line: 1013, column: 20, scope: !5508)
!5580 = !DILocation(line: 1014, column: 2, scope: !5508)
!5581 = !DILocation(line: 1014, column: 7, scope: !5508)
!5582 = !DILocation(line: 1014, column: 16, scope: !5508)
!5583 = !DILocation(line: 1016, column: 1, scope: !5508)
!5584 = distinct !DISubprogram(name: "dag_add_node", scope: !3, file: !3, line: 1029, type: !5585, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!4397, !5278, !348}
!5587 = !DILocalVariable(name: "forest", arg: 1, scope: !5584, file: !3, line: 1029, type: !5278)
!5588 = !DILocation(line: 1029, column: 34, scope: !5584)
!5589 = !DILocalVariable(name: "fob", arg: 2, scope: !5584, file: !3, line: 1029, type: !348)
!5590 = !DILocation(line: 1029, column: 48, scope: !5584)
!5591 = !DILocalVariable(name: "node", scope: !5584, file: !3, line: 1031, type: !4397)
!5592 = !DILocation(line: 1031, column: 11, scope: !5584)
!5593 = !DILocation(line: 1033, column: 9, scope: !5584)
!5594 = !DILocation(line: 1033, column: 7, scope: !5584)
!5595 = !DILocation(line: 1034, column: 6, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1034, column: 6)
!5597 = !DILocation(line: 1034, column: 6, scope: !5584)
!5598 = !DILocation(line: 1035, column: 14, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1034, column: 12)
!5600 = !DILocation(line: 1035, column: 3, scope: !5599)
!5601 = !DILocation(line: 1035, column: 9, scope: !5599)
!5602 = !DILocation(line: 1035, column: 12, scope: !5599)
!5603 = !DILocation(line: 1036, column: 3, scope: !5599)
!5604 = !DILocation(line: 1036, column: 9, scope: !5599)
!5605 = !DILocation(line: 1036, column: 15, scope: !5599)
!5606 = !DILocation(line: 1038, column: 7, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1038, column: 7)
!5608 = !DILocation(line: 1038, column: 15, scope: !5607)
!5609 = !DILocation(line: 1038, column: 7, scope: !5599)
!5610 = !DILocation(line: 1038, column: 45, scope: !5607)
!5611 = !DILocation(line: 1038, column: 32, scope: !5607)
!5612 = !DILocation(line: 1038, column: 38, scope: !5607)
!5613 = !DILocation(line: 1038, column: 43, scope: !5607)
!5614 = !DILocation(line: 1039, column: 7, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1039, column: 7)
!5616 = !DILocation(line: 1039, column: 15, scope: !5615)
!5617 = !DILocation(line: 1039, column: 7, scope: !5599)
!5618 = !DILocation(line: 1040, column: 47, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1039, column: 25)
!5620 = !DILocation(line: 1040, column: 17, scope: !5619)
!5621 = !DILocation(line: 1040, column: 25, scope: !5619)
!5622 = !DILocation(line: 1040, column: 33, scope: !5619)
!5623 = !DILocation(line: 1040, column: 5, scope: !5619)
!5624 = !DILocation(line: 1040, column: 40, scope: !5619)
!5625 = !DILocation(line: 1040, column: 45, scope: !5619)
!5626 = !DILocation(line: 1041, column: 27, scope: !5619)
!5627 = !DILocation(line: 1041, column: 4, scope: !5619)
!5628 = !DILocation(line: 1041, column: 12, scope: !5619)
!5629 = !DILocation(line: 1041, column: 20, scope: !5619)
!5630 = !DILocation(line: 1041, column: 25, scope: !5619)
!5631 = !DILocation(line: 1042, column: 4, scope: !5619)
!5632 = !DILocation(line: 1042, column: 12, scope: !5619)
!5633 = !DILocation(line: 1042, column: 20, scope: !5619)
!5634 = !DILocation(line: 1043, column: 3, scope: !5619)
!5635 = !DILocation(line: 1045, column: 27, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1044, column: 8)
!5637 = !DILocation(line: 1045, column: 4, scope: !5636)
!5638 = !DILocation(line: 1045, column: 12, scope: !5636)
!5639 = !DILocation(line: 1045, column: 20, scope: !5636)
!5640 = !DILocation(line: 1045, column: 25, scope: !5636)
!5641 = !DILocation(line: 1046, column: 28, scope: !5636)
!5642 = !DILocation(line: 1046, column: 4, scope: !5636)
!5643 = !DILocation(line: 1046, column: 12, scope: !5636)
!5644 = !DILocation(line: 1046, column: 20, scope: !5636)
!5645 = !DILocation(line: 1046, column: 26, scope: !5636)
!5646 = !DILocation(line: 1047, column: 4, scope: !5636)
!5647 = !DILocation(line: 1047, column: 12, scope: !5636)
!5648 = !DILocation(line: 1047, column: 21, scope: !5636)
!5649 = !DILocation(line: 1050, column: 8, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1050, column: 7)
!5651 = !DILocation(line: 1050, column: 16, scope: !5650)
!5652 = !DILocation(line: 1050, column: 7, scope: !5599)
!5653 = !DILocation(line: 1051, column: 23, scope: !5650)
!5654 = !DILocation(line: 1051, column: 4, scope: !5650)
!5655 = !DILocation(line: 1051, column: 12, scope: !5650)
!5656 = !DILocation(line: 1051, column: 21, scope: !5650)
!5657 = !DILocation(line: 1052, column: 20, scope: !5599)
!5658 = !DILocation(line: 1052, column: 28, scope: !5599)
!5659 = !DILocation(line: 1052, column: 38, scope: !5599)
!5660 = !DILocation(line: 1052, column: 43, scope: !5599)
!5661 = !DILocation(line: 1052, column: 3, scope: !5599)
!5662 = !DILocation(line: 1053, column: 2, scope: !5599)
!5663 = !DILocation(line: 1055, column: 9, scope: !5584)
!5664 = !DILocation(line: 1055, column: 2, scope: !5584)
!5665 = distinct !DISubprogram(name: "build_dag_object", scope: !3, file: !3, line: 487, type: !5666, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{null, !5278, !4397, !4663, !349, !389}
!5668 = !DILocalVariable(name: "dag", arg: 1, scope: !5665, file: !3, line: 487, type: !5278)
!5669 = !DILocation(line: 487, column: 41, scope: !5665)
!5670 = !DILocalVariable(name: "scenenode", arg: 2, scope: !5665, file: !3, line: 487, type: !4397)
!5671 = !DILocation(line: 487, column: 55, scope: !5665)
!5672 = !DILocalVariable(name: "scene", arg: 3, scope: !5665, file: !3, line: 487, type: !4663)
!5673 = !DILocation(line: 487, column: 73, scope: !5665)
!5674 = !DILocalVariable(name: "ob", arg: 4, scope: !5665, file: !3, line: 487, type: !349)
!5675 = !DILocation(line: 487, column: 88, scope: !5665)
!5676 = !DILocalVariable(name: "mask", arg: 5, scope: !5665, file: !3, line: 487, type: !389)
!5677 = !DILocation(line: 487, column: 96, scope: !5665)
!5678 = !DILocalVariable(name: "con", scope: !5665, file: !3, line: 489, type: !5679)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !72, line: 76, baseType: !5681)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !72, line: 54, size: 960, elements: !5682)
!5682 = !{!5683, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5681, file: !72, line: 55, baseType: !5684, size: 64)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5681, file: !72, line: 55, baseType: !5684, size: 64, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5681, file: !72, line: 57, baseType: !348, size: 64, offset: 128)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5681, file: !72, line: 58, baseType: !387, size: 16, offset: 192)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5681, file: !72, line: 59, baseType: !387, size: 16, offset: 208)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !5681, file: !72, line: 61, baseType: !374, size: 8, offset: 224)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !5681, file: !72, line: 62, baseType: !374, size: 8, offset: 232)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5681, file: !72, line: 64, baseType: !404, size: 512, offset: 240)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5681, file: !72, line: 66, baseType: !387, size: 16, offset: 752)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !5681, file: !72, line: 68, baseType: !469, size: 32, offset: 768)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !5681, file: !72, line: 69, baseType: !469, size: 32, offset: 800)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5681, file: !72, line: 71, baseType: !599, size: 64, offset: 832)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !5681, file: !72, line: 74, baseType: !469, size: 32, offset: 896)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !5681, file: !72, line: 75, baseType: !469, size: 32, offset: 928)
!5698 = !DILocation(line: 489, column: 15, scope: !5665)
!5699 = !DILocalVariable(name: "node", scope: !5665, file: !3, line: 490, type: !4397)
!5700 = !DILocation(line: 490, column: 11, scope: !5665)
!5701 = !DILocalVariable(name: "node2", scope: !5665, file: !3, line: 491, type: !4397)
!5702 = !DILocation(line: 491, column: 11, scope: !5665)
!5703 = !DILocalVariable(name: "node3", scope: !5665, file: !3, line: 492, type: !4397)
!5704 = !DILocation(line: 492, column: 11, scope: !5665)
!5705 = !DILocalVariable(name: "key", scope: !5665, file: !3, line: 493, type: !5706)
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64)
!5707 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !2767, line: 105, baseType: !5708)
!5708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !2767, line: 73, size: 1792, elements: !5709)
!5709 = !{!5710, !5711, !5712, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5708, file: !2767, line: 74, baseType: !354, size: 960)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5708, file: !2767, line: 75, baseType: !425, size: 64, offset: 960)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !5708, file: !2767, line: 80, baseType: !5713, size: 64, offset: 1024)
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5714, size: 64)
!5714 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !2767, line: 70, baseType: !2766)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !5708, file: !2767, line: 85, baseType: !2369, size: 256, offset: 1088)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5708, file: !2767, line: 86, baseType: !389, size: 32, offset: 1344)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5708, file: !2767, line: 87, baseType: !389, size: 32, offset: 1376)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5708, file: !2767, line: 89, baseType: !414, size: 128, offset: 1408)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5708, file: !2767, line: 90, baseType: !599, size: 64, offset: 1536)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5708, file: !2767, line: 92, baseType: !368, size: 64, offset: 1600)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5708, file: !2767, line: 94, baseType: !387, size: 16, offset: 1664)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !5708, file: !2767, line: 95, baseType: !387, size: 16, offset: 1680)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !5708, file: !2767, line: 96, baseType: !387, size: 16, offset: 1696)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5708, file: !2767, line: 97, baseType: !387, size: 16, offset: 1712)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !5708, file: !2767, line: 101, baseType: !469, size: 32, offset: 1728)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !5708, file: !2767, line: 104, baseType: !389, size: 32, offset: 1760)
!5727 = !DILocation(line: 493, column: 7, scope: !5665)
!5728 = !DILocalVariable(name: "psys", scope: !5665, file: !3, line: 494, type: !5729)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !3382, line: 314, baseType: !3604)
!5731 = !DILocation(line: 494, column: 18, scope: !5665)
!5732 = !DILocalVariable(name: "addtoroot", scope: !5665, file: !3, line: 495, type: !389)
!5733 = !DILocation(line: 495, column: 6, scope: !5665)
!5734 = !DILocation(line: 497, column: 22, scope: !5665)
!5735 = !DILocation(line: 497, column: 27, scope: !5665)
!5736 = !DILocation(line: 497, column: 9, scope: !5665)
!5737 = !DILocation(line: 497, column: 7, scope: !5665)
!5738 = !DILocation(line: 499, column: 7, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 499, column: 6)
!5740 = !DILocation(line: 499, column: 11, scope: !5739)
!5741 = !DILocation(line: 499, column: 6, scope: !5739)
!5742 = !DILocation(line: 499, column: 17, scope: !5739)
!5743 = !DILocation(line: 499, column: 21, scope: !5739)
!5744 = !DILocation(line: 499, column: 26, scope: !5739)
!5745 = !DILocation(line: 499, column: 6, scope: !5665)
!5746 = !DILocation(line: 500, column: 24, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 499, column: 42)
!5748 = !DILocation(line: 500, column: 29, scope: !5747)
!5749 = !DILocation(line: 500, column: 33, scope: !5747)
!5750 = !DILocation(line: 500, column: 11, scope: !5747)
!5751 = !DILocation(line: 500, column: 9, scope: !5747)
!5752 = !DILocation(line: 501, column: 20, scope: !5747)
!5753 = !DILocation(line: 501, column: 25, scope: !5747)
!5754 = !DILocation(line: 501, column: 31, scope: !5747)
!5755 = !DILocation(line: 501, column: 3, scope: !5747)
!5756 = !DILocation(line: 502, column: 27, scope: !5747)
!5757 = !DILocation(line: 502, column: 3, scope: !5747)
!5758 = !DILocation(line: 502, column: 10, scope: !5747)
!5759 = !DILocation(line: 502, column: 25, scope: !5747)
!5760 = !DILocation(line: 503, column: 3, scope: !5747)
!5761 = !DILocation(line: 503, column: 10, scope: !5747)
!5762 = !DILocation(line: 503, column: 25, scope: !5747)
!5763 = !DILocation(line: 504, column: 2, scope: !5747)
!5764 = !DILocation(line: 507, column: 2, scope: !5665)
!5765 = !DILocation(line: 507, column: 8, scope: !5665)
!5766 = !DILocation(line: 507, column: 24, scope: !5665)
!5767 = !DILocation(line: 509, column: 6, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 509, column: 6)
!5769 = !DILocation(line: 509, column: 10, scope: !5768)
!5770 = !DILocation(line: 509, column: 15, scope: !5768)
!5771 = !DILocation(line: 509, column: 6, scope: !5665)
!5772 = !DILocation(line: 510, column: 7, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 510, column: 7)
!5774 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 509, column: 31)
!5775 = !DILocation(line: 510, column: 11, scope: !5773)
!5776 = !DILocation(line: 510, column: 7, scope: !5774)
!5777 = !DILocalVariable(name: "pchan", scope: !5778, file: !3, line: 511, type: !4542)
!5778 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 510, column: 17)
!5779 = !DILocation(line: 511, column: 18, scope: !5778)
!5780 = !DILocation(line: 513, column: 17, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 513, column: 4)
!5782 = !DILocation(line: 513, column: 21, scope: !5781)
!5783 = !DILocation(line: 513, column: 27, scope: !5781)
!5784 = !DILocation(line: 513, column: 36, scope: !5781)
!5785 = !DILocation(line: 513, column: 15, scope: !5781)
!5786 = !DILocation(line: 513, column: 9, scope: !5781)
!5787 = !DILocation(line: 513, column: 43, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 513, column: 4)
!5789 = !DILocation(line: 513, column: 4, scope: !5781)
!5790 = !DILocation(line: 514, column: 16, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 514, column: 5)
!5792 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 513, column: 71)
!5793 = !DILocation(line: 514, column: 23, scope: !5791)
!5794 = !DILocation(line: 514, column: 35, scope: !5791)
!5795 = !DILocation(line: 514, column: 14, scope: !5791)
!5796 = !DILocation(line: 514, column: 10, scope: !5791)
!5797 = !DILocation(line: 514, column: 42, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 514, column: 5)
!5799 = !DILocation(line: 514, column: 5, scope: !5791)
!5800 = !DILocalVariable(name: "cti", scope: !5801, file: !3, line: 515, type: !5802)
!5801 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 514, column: 64)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !5804, line: 108, baseType: !5805)
!5804 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !5804, line: 80, size: 1088, elements: !5806)
!5806 = !{!5807, !5808, !5809, !5810, !5811, !5815, !5823, !5827, !5828, !5832, !5836, !5862}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5805, file: !5804, line: 82, baseType: !387, size: 16)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5805, file: !5804, line: 83, baseType: !387, size: 16, offset: 16)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5805, file: !5804, line: 84, baseType: !2369, size: 256, offset: 32)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !5805, file: !5804, line: 85, baseType: !2369, size: 256, offset: 288)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !5805, file: !5804, line: 89, baseType: !5812, size: 64, offset: 576)
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5813, size: 64)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{null, !5684}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !5805, file: !5804, line: 91, baseType: !5816, size: 64, offset: 640)
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5817, size: 64)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{null, !5684, !5819, !348}
!5819 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !5804, line: 65, baseType: !5820)
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 64)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{null, !5684, !1416, !1940, !348}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !5805, file: !5804, line: 93, baseType: !5824, size: 64, offset: 704)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{null, !5684, !5684}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !5805, file: !5804, line: 95, baseType: !852, size: 64, offset: 768)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !5805, file: !5804, line: 99, baseType: !5829, size: 64, offset: 832)
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 64)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!389, !5684, !3601}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !5805, file: !5804, line: 101, baseType: !5833, size: 64, offset: 896)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{null, !5684, !3601, !1940}
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !5805, file: !5804, line: 105, baseType: !5837, size: 64, offset: 960)
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{null, !5684, !5840, !5850, !469}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !5804, line: 50, size: 1280, elements: !5842)
!5842 = !{!5843, !5844, !5845, !5846, !5847, !5848, !5849}
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5841, file: !5804, line: 51, baseType: !515, size: 64)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !5841, file: !5804, line: 52, baseType: !522, size: 64, offset: 64)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !5841, file: !5804, line: 53, baseType: !4547, size: 64, offset: 128)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !5841, file: !5804, line: 55, baseType: !1599, size: 512, offset: 192)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !5841, file: !5804, line: 56, baseType: !1599, size: 512, offset: 704)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5841, file: !5804, line: 58, baseType: !387, size: 16, offset: 1216)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !5841, file: !5804, line: 59, baseType: !387, size: 16, offset: 1232)
!5850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5851, size: 64)
!5851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !72, line: 85, size: 1280, elements: !5852)
!5852 = !{!5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5851, file: !72, line: 86, baseType: !5850, size: 64)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5851, file: !72, line: 86, baseType: !5850, size: 64, offset: 64)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !5851, file: !72, line: 88, baseType: !522, size: 64, offset: 128)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !5851, file: !72, line: 89, baseType: !404, size: 512, offset: 192)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !5851, file: !72, line: 91, baseType: !1599, size: 512, offset: 704)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !5851, file: !72, line: 93, baseType: !387, size: 16, offset: 1216)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5851, file: !72, line: 94, baseType: !387, size: 16, offset: 1232)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5851, file: !72, line: 95, baseType: !387, size: 16, offset: 1248)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !5851, file: !72, line: 96, baseType: !387, size: 16, offset: 1264)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !5805, file: !5804, line: 107, baseType: !5863, size: 64, offset: 1024)
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{null, !5684, !5840, !3601}
!5866 = !DILocation(line: 515, column: 27, scope: !5801)
!5867 = !DILocation(line: 515, column: 61, scope: !5801)
!5868 = !DILocation(line: 515, column: 33, scope: !5801)
!5869 = !DILocalVariable(name: "targets", scope: !5801, file: !3, line: 516, type: !414)
!5870 = !DILocation(line: 516, column: 15, scope: !5801)
!5871 = !DILocalVariable(name: "ct", scope: !5801, file: !3, line: 517, type: !5872)
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !72, line: 97, baseType: !5851)
!5874 = !DILocation(line: 517, column: 25, scope: !5801)
!5875 = !DILocation(line: 519, column: 10, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 519, column: 10)
!5877 = !DILocation(line: 519, column: 14, scope: !5876)
!5878 = !DILocation(line: 519, column: 17, scope: !5876)
!5879 = !DILocation(line: 519, column: 22, scope: !5876)
!5880 = !DILocation(line: 519, column: 10, scope: !5801)
!5881 = !DILocation(line: 520, column: 7, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 519, column: 46)
!5883 = !DILocation(line: 520, column: 12, scope: !5882)
!5884 = !DILocation(line: 520, column: 35, scope: !5882)
!5885 = !DILocation(line: 522, column: 25, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 522, column: 7)
!5887 = !DILocation(line: 522, column: 17, scope: !5886)
!5888 = !DILocation(line: 522, column: 15, scope: !5886)
!5889 = !DILocation(line: 522, column: 12, scope: !5886)
!5890 = !DILocation(line: 522, column: 32, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 522, column: 7)
!5892 = !DILocation(line: 522, column: 7, scope: !5886)
!5893 = !DILocation(line: 523, column: 12, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 523, column: 12)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 522, column: 51)
!5896 = !DILocation(line: 523, column: 16, scope: !5894)
!5897 = !DILocation(line: 523, column: 20, scope: !5894)
!5898 = !DILocation(line: 523, column: 23, scope: !5894)
!5899 = !DILocation(line: 523, column: 27, scope: !5894)
!5900 = !DILocation(line: 523, column: 34, scope: !5894)
!5901 = !DILocation(line: 523, column: 31, scope: !5894)
!5902 = !DILocation(line: 523, column: 12, scope: !5895)
!5903 = !DILocation(line: 525, column: 30, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 523, column: 38)
!5905 = !DILocation(line: 525, column: 35, scope: !5904)
!5906 = !DILocation(line: 525, column: 39, scope: !5904)
!5907 = !DILocation(line: 525, column: 17, scope: !5904)
!5908 = !DILocation(line: 525, column: 15, scope: !5904)
!5909 = !DILocation(line: 527, column: 13, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 527, column: 13)
!5911 = !DILocation(line: 527, column: 17, scope: !5910)
!5912 = !DILocation(line: 527, column: 13, scope: !5904)
!5913 = !DILocation(line: 528, column: 27, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 527, column: 31)
!5915 = !DILocation(line: 528, column: 32, scope: !5914)
!5916 = !DILocation(line: 528, column: 39, scope: !5914)
!5917 = !DILocation(line: 528, column: 80, scope: !5914)
!5918 = !DILocation(line: 528, column: 85, scope: !5914)
!5919 = !DILocation(line: 528, column: 10, scope: !5914)
!5920 = !DILocation(line: 529, column: 14, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 529, column: 14)
!5922 = !DILocation(line: 529, column: 18, scope: !5921)
!5923 = !DILocation(line: 529, column: 23, scope: !5921)
!5924 = !DILocation(line: 529, column: 28, scope: !5921)
!5925 = !DILocation(line: 529, column: 14, scope: !5914)
!5926 = !DILocation(line: 530, column: 11, scope: !5921)
!5927 = !DILocation(line: 530, column: 18, scope: !5921)
!5928 = !DILocation(line: 530, column: 34, scope: !5921)
!5929 = !DILocation(line: 531, column: 9, scope: !5914)
!5930 = !DILocation(line: 532, column: 18, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 532, column: 18)
!5932 = !DILocation(line: 532, column: 18, scope: !5910)
!5933 = !DILocation(line: 533, column: 27, scope: !5931)
!5934 = !DILocation(line: 533, column: 32, scope: !5931)
!5935 = !DILocation(line: 533, column: 39, scope: !5931)
!5936 = !DILocation(line: 533, column: 80, scope: !5931)
!5937 = !DILocation(line: 533, column: 85, scope: !5931)
!5938 = !DILocation(line: 533, column: 10, scope: !5931)
!5939 = !DILocation(line: 535, column: 27, scope: !5931)
!5940 = !DILocation(line: 535, column: 32, scope: !5931)
!5941 = !DILocation(line: 535, column: 39, scope: !5931)
!5942 = !DILocation(line: 535, column: 61, scope: !5931)
!5943 = !DILocation(line: 535, column: 66, scope: !5931)
!5944 = !DILocation(line: 535, column: 10, scope: !5931)
!5945 = !DILocation(line: 536, column: 8, scope: !5904)
!5946 = !DILocation(line: 537, column: 7, scope: !5895)
!5947 = !DILocation(line: 522, column: 41, scope: !5891)
!5948 = !DILocation(line: 522, column: 45, scope: !5891)
!5949 = !DILocation(line: 522, column: 39, scope: !5891)
!5950 = !DILocation(line: 522, column: 7, scope: !5891)
!5951 = distinct !{!5951, !5892, !5952}
!5952 = !DILocation(line: 537, column: 7, scope: !5886)
!5953 = !DILocation(line: 539, column: 11, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 539, column: 11)
!5955 = !DILocation(line: 539, column: 16, scope: !5954)
!5956 = !DILocation(line: 539, column: 11, scope: !5882)
!5957 = !DILocation(line: 540, column: 8, scope: !5954)
!5958 = !DILocation(line: 540, column: 13, scope: !5954)
!5959 = !DILocation(line: 540, column: 38, scope: !5954)
!5960 = !DILocation(line: 541, column: 6, scope: !5882)
!5961 = !DILocation(line: 543, column: 5, scope: !5801)
!5962 = !DILocation(line: 514, column: 53, scope: !5798)
!5963 = !DILocation(line: 514, column: 58, scope: !5798)
!5964 = !DILocation(line: 514, column: 51, scope: !5798)
!5965 = !DILocation(line: 514, column: 5, scope: !5798)
!5966 = distinct !{!5966, !5799, !5967}
!5967 = !DILocation(line: 543, column: 5, scope: !5791)
!5968 = !DILocation(line: 544, column: 4, scope: !5792)
!5969 = !DILocation(line: 513, column: 58, scope: !5788)
!5970 = !DILocation(line: 513, column: 65, scope: !5788)
!5971 = !DILocation(line: 513, column: 56, scope: !5788)
!5972 = !DILocation(line: 513, column: 4, scope: !5788)
!5973 = distinct !{!5973, !5789, !5974}
!5974 = !DILocation(line: 544, column: 4, scope: !5781)
!5975 = !DILocation(line: 545, column: 3, scope: !5778)
!5976 = !DILocation(line: 546, column: 2, scope: !5774)
!5977 = !DILocation(line: 566, column: 6, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 566, column: 6)
!5979 = !DILocation(line: 566, column: 10, scope: !5978)
!5980 = !DILocation(line: 566, column: 6, scope: !5665)
!5981 = !DILocation(line: 567, column: 27, scope: !5978)
!5982 = !DILocation(line: 567, column: 31, scope: !5978)
!5983 = !DILocation(line: 567, column: 36, scope: !5978)
!5984 = !DILocation(line: 567, column: 41, scope: !5978)
!5985 = !DILocation(line: 567, column: 48, scope: !5978)
!5986 = !DILocation(line: 567, column: 52, scope: !5978)
!5987 = !DILocation(line: 567, column: 57, scope: !5978)
!5988 = !DILocation(line: 567, column: 3, scope: !5978)
!5989 = !DILocation(line: 569, column: 28, scope: !5665)
!5990 = !DILocation(line: 569, column: 8, scope: !5665)
!5991 = !DILocation(line: 569, column: 6, scope: !5665)
!5992 = !DILocation(line: 570, column: 6, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 570, column: 6)
!5994 = !DILocation(line: 570, column: 10, scope: !5993)
!5995 = !DILocation(line: 570, column: 13, scope: !5993)
!5996 = !DILocation(line: 570, column: 18, scope: !5993)
!5997 = !DILocation(line: 570, column: 6, scope: !5665)
!5998 = !DILocation(line: 571, column: 27, scope: !5993)
!5999 = !DILocation(line: 571, column: 32, scope: !5993)
!6000 = !DILocation(line: 571, column: 37, scope: !5993)
!6001 = !DILocation(line: 571, column: 42, scope: !5993)
!6002 = !DILocation(line: 571, column: 3, scope: !5993)
!6003 = !DILocation(line: 573, column: 6, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 573, column: 6)
!6005 = !DILocation(line: 573, column: 10, scope: !6004)
!6006 = !DILocation(line: 573, column: 20, scope: !6004)
!6007 = !DILocation(line: 573, column: 6, scope: !5665)
!6008 = !DILocalVariable(name: "md", scope: !6009, file: !3, line: 574, type: !6010)
!6009 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 573, column: 27)
!6010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!6011 = !DILocation(line: 574, column: 17, scope: !6009)
!6012 = !DILocation(line: 576, column: 13, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 576, column: 3)
!6014 = !DILocation(line: 576, column: 17, scope: !6013)
!6015 = !DILocation(line: 576, column: 27, scope: !6013)
!6016 = !DILocation(line: 576, column: 11, scope: !6013)
!6017 = !DILocation(line: 576, column: 8, scope: !6013)
!6018 = !DILocation(line: 576, column: 34, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 576, column: 3)
!6020 = !DILocation(line: 576, column: 3, scope: !6013)
!6021 = !DILocalVariable(name: "mti", scope: !6022, file: !3, line: 577, type: !6023)
!6022 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 576, column: 53)
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !176, line: 309, baseType: !6025)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !176, line: 121, size: 1728, elements: !6026)
!6026 = !{!6027, !6028, !6029, !6030, !6032, !6034, !6038, !6043, !6047, !6054, !6058, !6062, !6066, !6070, !6075, !6076, !6080, !6084, !6088, !6089, !6098, !6106}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6025, file: !176, line: 123, baseType: !2369, size: 256)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !6025, file: !176, line: 128, baseType: !2369, size: 256, offset: 256)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !6025, file: !176, line: 131, baseType: !389, size: 32, offset: 512)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6025, file: !176, line: 133, baseType: !6031, size: 32, offset: 544)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !176, line: 71, baseType: !175)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6025, file: !176, line: 134, baseType: !6033, size: 32, offset: 576)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !176, line: 104, baseType: !184)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !6025, file: !176, line: 142, baseType: !6035, size: 64, offset: 640)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !507, !507}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !6025, file: !176, line: 151, baseType: !6039, size: 64, offset: 704)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{null, !507, !522, !3858, !2763, !389, !6042}
!6042 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !176, line: 118, baseType: !196)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !6025, file: !176, line: 157, baseType: !6044, size: 64, offset: 768)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !507, !522, !3858, !2763, !2807, !389}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !6025, file: !176, line: 163, baseType: !6048, size: 64, offset: 832)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !507, !522, !6051, !3858, !2763, !389}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !6053, line: 93, flags: DIFlagFwdDecl)
!6053 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !6025, file: !176, line: 168, baseType: !6055, size: 64, offset: 896)
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6056, size: 64)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{null, !507, !522, !6051, !3858, !2763, !2807, !389}
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !6025, file: !176, line: 193, baseType: !6059, size: 64, offset: 960)
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6060, size: 64)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{!3858, !507, !522, !3858, !6042}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !6025, file: !176, line: 204, baseType: !6063, size: 64, offset: 1024)
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!3858, !507, !522, !6051, !3858, !6042}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !6025, file: !176, line: 217, baseType: !6067, size: 64, offset: 1088)
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{null, !507}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !6025, file: !176, line: 235, baseType: !6071, size: 64, offset: 1152)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 64)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!6074, !522, !507}
!6074 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2792, line: 48, baseType: !2717)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !6025, file: !176, line: 242, baseType: !6067, size: 64, offset: 1216)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !6025, file: !176, line: 252, baseType: !6077, size: 64, offset: 1280)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 64)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!1940, !507, !389}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !6025, file: !176, line: 259, baseType: !6081, size: 64, offset: 1344)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{null, !507, !2408, !515, !522, !4422}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !6025, file: !176, line: 267, baseType: !6085, size: 64, offset: 1408)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!1940, !507}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !6025, file: !176, line: 277, baseType: !6085, size: 64, offset: 1472)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !6025, file: !176, line: 286, baseType: !6090, size: 64, offset: 1536)
!6090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6091, size: 64)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{null, !507, !522, !6093, !348}
!6093 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !176, line: 106, baseType: !6094)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 64)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{null, !348, !522, !6097}
!6097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !6025, file: !176, line: 297, baseType: !6099, size: 64, offset: 1600)
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6100, size: 64)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{null, !507, !522, !6102, !348}
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !176, line: 107, baseType: !6103)
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 64)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !348, !522, !1416}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !6025, file: !176, line: 307, baseType: !6107, size: 64, offset: 1664)
!6107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6108, size: 64)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !507, !522, !6110, !348}
!6110 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !176, line: 108, baseType: !6111)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 64)
!6112 = !DISubroutineType(types: !6113)
!6113 = !{null, !348, !522, !507, !799}
!6114 = !DILocation(line: 577, column: 22, scope: !6022)
!6115 = !DILocation(line: 577, column: 49, scope: !6022)
!6116 = !DILocation(line: 577, column: 53, scope: !6022)
!6117 = !DILocation(line: 577, column: 28, scope: !6022)
!6118 = !DILocation(line: 579, column: 8, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 579, column: 8)
!6120 = !DILocation(line: 579, column: 13, scope: !6119)
!6121 = !DILocation(line: 579, column: 8, scope: !6022)
!6122 = !DILocation(line: 579, column: 29, scope: !6119)
!6123 = !DILocation(line: 579, column: 34, scope: !6119)
!6124 = !DILocation(line: 579, column: 49, scope: !6119)
!6125 = !DILocation(line: 579, column: 53, scope: !6119)
!6126 = !DILocation(line: 579, column: 58, scope: !6119)
!6127 = !DILocation(line: 579, column: 65, scope: !6119)
!6128 = !DILocation(line: 579, column: 69, scope: !6119)
!6129 = !DILocation(line: 580, column: 3, scope: !6022)
!6130 = !DILocation(line: 576, column: 43, scope: !6019)
!6131 = !DILocation(line: 576, column: 47, scope: !6019)
!6132 = !DILocation(line: 576, column: 41, scope: !6019)
!6133 = !DILocation(line: 576, column: 3, scope: !6019)
!6134 = distinct !{!6134, !6020, !6135}
!6135 = !DILocation(line: 580, column: 3, scope: !6013)
!6136 = !DILocation(line: 581, column: 2, scope: !6009)
!6137 = !DILocation(line: 582, column: 6, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 582, column: 6)
!6139 = !DILocation(line: 582, column: 10, scope: !6138)
!6140 = !DILocation(line: 582, column: 6, scope: !5665)
!6141 = !DILocation(line: 583, column: 24, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 582, column: 18)
!6143 = !DILocation(line: 583, column: 29, scope: !6142)
!6144 = !DILocation(line: 583, column: 33, scope: !6142)
!6145 = !DILocation(line: 583, column: 11, scope: !6142)
!6146 = !DILocation(line: 583, column: 9, scope: !6142)
!6147 = !DILocation(line: 585, column: 11, scope: !6142)
!6148 = !DILocation(line: 585, column: 15, scope: !6142)
!6149 = !DILocation(line: 585, column: 3, scope: !6142)
!6150 = !DILocation(line: 587, column: 22, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 585, column: 24)
!6152 = !DILocation(line: 587, column: 27, scope: !6151)
!6153 = !DILocation(line: 587, column: 34, scope: !6151)
!6154 = !DILocation(line: 587, column: 5, scope: !6151)
!6155 = !DILocation(line: 588, column: 5, scope: !6151)
!6156 = !DILocation(line: 590, column: 22, scope: !6151)
!6157 = !DILocation(line: 590, column: 27, scope: !6151)
!6158 = !DILocation(line: 590, column: 34, scope: !6151)
!6159 = !DILocation(line: 590, column: 5, scope: !6151)
!6160 = !DILocation(line: 591, column: 5, scope: !6151)
!6161 = !DILocation(line: 591, column: 12, scope: !6151)
!6162 = !DILocation(line: 591, column: 28, scope: !6151)
!6163 = !DILocation(line: 592, column: 5, scope: !6151)
!6164 = !DILocation(line: 594, column: 22, scope: !6151)
!6165 = !DILocation(line: 594, column: 27, scope: !6151)
!6166 = !DILocation(line: 594, column: 34, scope: !6151)
!6167 = !DILocation(line: 594, column: 5, scope: !6151)
!6168 = !DILocation(line: 595, column: 5, scope: !6151)
!6169 = !DILocation(line: 597, column: 9, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 597, column: 9)
!6171 = !DILocation(line: 597, column: 13, scope: !6170)
!6172 = !DILocation(line: 597, column: 21, scope: !6170)
!6173 = !DILocation(line: 597, column: 26, scope: !6170)
!6174 = !DILocation(line: 597, column: 9, scope: !6151)
!6175 = !DILocation(line: 598, column: 23, scope: !6170)
!6176 = !DILocation(line: 598, column: 28, scope: !6170)
!6177 = !DILocation(line: 598, column: 35, scope: !6170)
!6178 = !DILocation(line: 598, column: 6, scope: !6170)
!6179 = !DILocation(line: 599, column: 14, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 599, column: 14)
!6181 = !DILocation(line: 599, column: 18, scope: !6180)
!6182 = !DILocation(line: 599, column: 26, scope: !6180)
!6183 = !DILocation(line: 599, column: 31, scope: !6180)
!6184 = !DILocation(line: 599, column: 14, scope: !6170)
!6185 = !DILocalVariable(name: "cu", scope: !6186, file: !3, line: 600, type: !6187)
!6186 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 599, column: 44)
!6187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6188, size: 64)
!6188 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1858, line: 273, baseType: !6189)
!6189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1858, line: 193, size: 4224, elements: !6190)
!6190 = !{!6191, !6192, !6193, !6194, !6195, !6204, !6205, !6206, !6207, !6208, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6256, !6257, !6258, !6259, !6260, !6261, !6269, !6270, !6271, !6280, !6281, !6282, !6283, !6284, !6285, !6286}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6189, file: !1858, line: 194, baseType: !354, size: 960)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !6189, file: !1858, line: 195, baseType: !425, size: 64, offset: 960)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !6189, file: !1858, line: 197, baseType: !2840, size: 64, offset: 1024)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !6189, file: !1858, line: 199, baseType: !414, size: 128, offset: 1088)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !6189, file: !1858, line: 201, baseType: !6196, size: 64, offset: 1216)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1858, line: 191, baseType: !6198)
!6198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1858, line: 180, size: 256, elements: !6199)
!6199 = !{!6200, !6201, !6202, !6203}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !6198, file: !1858, line: 182, baseType: !414, size: 128)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !6198, file: !1858, line: 185, baseType: !2413, size: 64, offset: 128)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !6198, file: !1858, line: 188, baseType: !389, size: 32, offset: 192)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6198, file: !1858, line: 190, baseType: !1877, size: 32, offset: 224)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !6189, file: !1858, line: 203, baseType: !522, size: 64, offset: 1280)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !6189, file: !1858, line: 203, baseType: !522, size: 64, offset: 1344)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !6189, file: !1858, line: 203, baseType: !522, size: 64, offset: 1408)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6189, file: !1858, line: 204, baseType: !599, size: 64, offset: 1472)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6189, file: !1858, line: 205, baseType: !6209, size: 64, offset: 1536)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6189, file: !1858, line: 206, baseType: !2916, size: 64, offset: 1600)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !6189, file: !1858, line: 209, baseType: !1364, size: 96, offset: 1664)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6189, file: !1858, line: 210, baseType: !1364, size: 96, offset: 1760)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !6189, file: !1858, line: 211, baseType: !1364, size: 96, offset: 1856)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6189, file: !1858, line: 213, baseType: !387, size: 16, offset: 1952)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !6189, file: !1858, line: 215, baseType: !387, size: 16, offset: 1968)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !6189, file: !1858, line: 216, baseType: !387, size: 16, offset: 1984)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !6189, file: !1858, line: 216, baseType: !387, size: 16, offset: 2000)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !6189, file: !1858, line: 217, baseType: !469, size: 32, offset: 2016)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !6189, file: !1858, line: 217, baseType: !469, size: 32, offset: 2048)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !6189, file: !1858, line: 219, baseType: !389, size: 32, offset: 2080)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !6189, file: !1858, line: 220, baseType: !387, size: 16, offset: 2112)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !6189, file: !1858, line: 220, baseType: !387, size: 16, offset: 2128)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6189, file: !1858, line: 221, baseType: !389, size: 32, offset: 2144)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6189, file: !1858, line: 222, baseType: !469, size: 32, offset: 2176)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !6189, file: !1858, line: 222, baseType: !469, size: 32, offset: 2208)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !6189, file: !1858, line: 222, baseType: !469, size: 32, offset: 2240)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !6189, file: !1858, line: 225, baseType: !387, size: 16, offset: 2272)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !6189, file: !1858, line: 225, baseType: !387, size: 16, offset: 2288)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !6189, file: !1858, line: 226, baseType: !387, size: 16, offset: 2304)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !6189, file: !1858, line: 226, baseType: !387, size: 16, offset: 2320)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !6189, file: !1858, line: 229, baseType: !389, size: 32, offset: 2336)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !6189, file: !1858, line: 231, baseType: !389, size: 32, offset: 2368)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6189, file: !1858, line: 233, baseType: !1877, size: 32, offset: 2400)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !6189, file: !1858, line: 236, baseType: !387, size: 16, offset: 2432)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !6189, file: !1858, line: 237, baseType: !374, size: 8, offset: 2448)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6189, file: !1858, line: 237, baseType: !374, size: 8, offset: 2456)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2464)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2496)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2528)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2560)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2592)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2624)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !6189, file: !1858, line: 238, baseType: !469, size: 32, offset: 2656)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !6189, file: !1858, line: 239, baseType: !469, size: 32, offset: 2688)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !6189, file: !1858, line: 239, baseType: !469, size: 32, offset: 2720)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !6189, file: !1858, line: 240, baseType: !469, size: 32, offset: 2752)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !6189, file: !1858, line: 244, baseType: !389, size: 32, offset: 2784)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !6189, file: !1858, line: 245, baseType: !389, size: 32, offset: 2816)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !6189, file: !1858, line: 245, baseType: !389, size: 32, offset: 2848)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !6189, file: !1858, line: 248, baseType: !389, size: 32, offset: 2880)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6189, file: !1858, line: 249, baseType: !389, size: 32, offset: 2912)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6189, file: !1858, line: 250, baseType: !1255, size: 64, offset: 2944)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !6189, file: !1858, line: 251, baseType: !6254, size: 64, offset: 3008)
!6254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 64)
!6255 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1858, line: 50, flags: DIFlagFwdDecl)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6189, file: !1858, line: 253, baseType: !404, size: 512, offset: 3072)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !6189, file: !1858, line: 254, baseType: !4435, size: 64, offset: 3584)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !6189, file: !1858, line: 255, baseType: !4435, size: 64, offset: 3648)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !6189, file: !1858, line: 256, baseType: !4435, size: 64, offset: 3712)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !6189, file: !1858, line: 257, baseType: !4435, size: 64, offset: 3776)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !6189, file: !1858, line: 259, baseType: !6262, size: 64, offset: 3840)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1858, line: 176, size: 128, elements: !6264)
!6264 = !{!6265, !6266, !6267, !6268}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6263, file: !1858, line: 177, baseType: !469, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6263, file: !1858, line: 177, baseType: !469, size: 32, offset: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !6263, file: !1858, line: 177, baseType: !469, size: 32, offset: 64)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !6263, file: !1858, line: 177, baseType: !469, size: 32, offset: 96)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !6189, file: !1858, line: 260, baseType: !389, size: 32, offset: 3904)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !6189, file: !1858, line: 260, baseType: !389, size: 32, offset: 3936)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !6189, file: !1858, line: 262, baseType: !6272, size: 64, offset: 3968)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 64)
!6273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1858, line: 168, size: 64, elements: !6274)
!6274 = !{!6275, !6276, !6277, !6278, !6279}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !6273, file: !1858, line: 169, baseType: !387, size: 16)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !6273, file: !1858, line: 170, baseType: !387, size: 16, offset: 16)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6273, file: !1858, line: 171, baseType: !374, size: 8, offset: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6273, file: !1858, line: 172, baseType: !374, size: 8, offset: 40)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6273, file: !1858, line: 173, baseType: !387, size: 16, offset: 48)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !6189, file: !1858, line: 263, baseType: !6273, size: 64, offset: 4032)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6189, file: !1858, line: 267, baseType: !469, size: 32, offset: 4096)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !6189, file: !1858, line: 268, baseType: !469, size: 32, offset: 4128)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !6189, file: !1858, line: 268, baseType: !469, size: 32, offset: 4160)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !6189, file: !1858, line: 269, baseType: !374, size: 8, offset: 4192)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !6189, file: !1858, line: 269, baseType: !374, size: 8, offset: 4200)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6189, file: !1858, line: 271, baseType: !2131, size: 16, offset: 4208)
!6287 = !DILocation(line: 600, column: 13, scope: !6186)
!6288 = !DILocation(line: 600, column: 18, scope: !6186)
!6289 = !DILocation(line: 600, column: 22, scope: !6186)
!6290 = !DILocation(line: 600, column: 30, scope: !6186)
!6291 = !DILocation(line: 601, column: 10, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 601, column: 10)
!6293 = !DILocation(line: 601, column: 14, scope: !6292)
!6294 = !DILocation(line: 601, column: 19, scope: !6292)
!6295 = !DILocation(line: 601, column: 10, scope: !6186)
!6296 = !DILocation(line: 602, column: 24, scope: !6292)
!6297 = !DILocation(line: 602, column: 29, scope: !6292)
!6298 = !DILocation(line: 602, column: 36, scope: !6292)
!6299 = !DILocation(line: 602, column: 7, scope: !6292)
!6300 = !DILocation(line: 604, column: 24, scope: !6292)
!6301 = !DILocation(line: 604, column: 29, scope: !6292)
!6302 = !DILocation(line: 604, column: 36, scope: !6292)
!6303 = !DILocation(line: 604, column: 7, scope: !6292)
!6304 = !DILocation(line: 605, column: 5, scope: !6186)
!6305 = !DILocation(line: 607, column: 23, scope: !6180)
!6306 = !DILocation(line: 607, column: 28, scope: !6180)
!6307 = !DILocation(line: 607, column: 35, scope: !6180)
!6308 = !DILocation(line: 607, column: 6, scope: !6180)
!6309 = !DILocation(line: 608, column: 5, scope: !6151)
!6310 = !DILocation(line: 611, column: 7, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 611, column: 7)
!6312 = !DILocation(line: 611, column: 11, scope: !6311)
!6313 = !DILocation(line: 611, column: 16, scope: !6311)
!6314 = !DILocation(line: 611, column: 28, scope: !6311)
!6315 = !DILocation(line: 611, column: 32, scope: !6311)
!6316 = !DILocation(line: 611, column: 36, scope: !6311)
!6317 = !DILocation(line: 611, column: 44, scope: !6311)
!6318 = !DILocation(line: 611, column: 54, scope: !6311)
!6319 = !DILocation(line: 611, column: 7, scope: !6142)
!6320 = !DILocation(line: 612, column: 21, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 611, column: 72)
!6322 = !DILocation(line: 612, column: 26, scope: !6321)
!6323 = !DILocation(line: 612, column: 33, scope: !6321)
!6324 = !DILocation(line: 612, column: 4, scope: !6321)
!6325 = !DILocation(line: 613, column: 3, scope: !6321)
!6326 = !DILocation(line: 615, column: 13, scope: !6142)
!6327 = !DILocation(line: 616, column: 2, scope: !6142)
!6328 = !DILocation(line: 617, column: 6, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 617, column: 6)
!6330 = !DILocation(line: 617, column: 10, scope: !6329)
!6331 = !DILocation(line: 617, column: 6, scope: !5665)
!6332 = !DILocation(line: 618, column: 24, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 617, column: 17)
!6334 = !DILocation(line: 618, column: 29, scope: !6333)
!6335 = !DILocation(line: 618, column: 33, scope: !6333)
!6336 = !DILocation(line: 618, column: 11, scope: !6333)
!6337 = !DILocation(line: 618, column: 9, scope: !6333)
!6338 = !DILocation(line: 619, column: 20, scope: !6333)
!6339 = !DILocation(line: 619, column: 25, scope: !6333)
!6340 = !DILocation(line: 619, column: 31, scope: !6333)
!6341 = !DILocation(line: 619, column: 3, scope: !6333)
!6342 = !DILocation(line: 621, column: 2, scope: !6333)
!6343 = !DILocation(line: 623, column: 6, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 623, column: 6)
!6345 = !DILocation(line: 623, column: 10, scope: !6344)
!6346 = !DILocation(line: 623, column: 20, scope: !6344)
!6347 = !DILocation(line: 623, column: 6, scope: !5665)
!6348 = !DILocation(line: 624, column: 8, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 624, column: 7)
!6350 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 623, column: 32)
!6351 = !DILocation(line: 624, column: 12, scope: !6349)
!6352 = !DILocation(line: 624, column: 22, scope: !6349)
!6353 = !DILocation(line: 624, column: 39, scope: !6349)
!6354 = !DILocation(line: 624, column: 42, scope: !6349)
!6355 = !DILocation(line: 624, column: 46, scope: !6349)
!6356 = !DILocation(line: 624, column: 7, scope: !6350)
!6357 = !DILocalVariable(name: "go", scope: !6358, file: !3, line: 625, type: !4527)
!6358 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 624, column: 57)
!6359 = !DILocation(line: 625, column: 17, scope: !6358)
!6360 = !DILocation(line: 626, column: 14, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 626, column: 4)
!6362 = !DILocation(line: 626, column: 18, scope: !6361)
!6363 = !DILocation(line: 626, column: 29, scope: !6361)
!6364 = !DILocation(line: 626, column: 37, scope: !6361)
!6365 = !DILocation(line: 626, column: 12, scope: !6361)
!6366 = !DILocation(line: 626, column: 9, scope: !6361)
!6367 = !DILocation(line: 626, column: 44, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 626, column: 4)
!6369 = !DILocation(line: 626, column: 4, scope: !6361)
!6370 = !DILocation(line: 627, column: 9, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 627, column: 9)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 626, column: 63)
!6373 = !DILocation(line: 627, column: 13, scope: !6371)
!6374 = !DILocation(line: 627, column: 9, scope: !6372)
!6375 = !DILocation(line: 628, column: 27, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 627, column: 17)
!6377 = !DILocation(line: 628, column: 32, scope: !6376)
!6378 = !DILocation(line: 628, column: 36, scope: !6376)
!6379 = !DILocation(line: 628, column: 14, scope: !6376)
!6380 = !DILocation(line: 628, column: 12, scope: !6376)
!6381 = !DILocation(line: 630, column: 23, scope: !6376)
!6382 = !DILocation(line: 630, column: 28, scope: !6376)
!6383 = !DILocation(line: 630, column: 35, scope: !6376)
!6384 = !DILocation(line: 630, column: 6, scope: !6376)
!6385 = !DILocation(line: 631, column: 5, scope: !6376)
!6386 = !DILocation(line: 632, column: 4, scope: !6372)
!6387 = !DILocation(line: 626, column: 53, scope: !6368)
!6388 = !DILocation(line: 626, column: 57, scope: !6368)
!6389 = !DILocation(line: 626, column: 51, scope: !6368)
!6390 = !DILocation(line: 626, column: 4, scope: !6368)
!6391 = distinct !{!6391, !6369, !6392}
!6392 = !DILocation(line: 632, column: 4, scope: !6361)
!6393 = !DILocation(line: 633, column: 3, scope: !6358)
!6394 = !DILocation(line: 634, column: 2, scope: !6350)
!6395 = !DILocation(line: 637, column: 7, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 637, column: 6)
!6397 = !DILocation(line: 637, column: 11, scope: !6396)
!6398 = !DILocation(line: 637, column: 16, scope: !6396)
!6399 = !DILocation(line: 637, column: 28, scope: !6396)
!6400 = !DILocation(line: 637, column: 32, scope: !6396)
!6401 = !DILocation(line: 637, column: 36, scope: !6396)
!6402 = !DILocation(line: 637, column: 41, scope: !6396)
!6403 = !DILocation(line: 637, column: 54, scope: !6396)
!6404 = !DILocation(line: 637, column: 58, scope: !6396)
!6405 = !DILocation(line: 637, column: 62, scope: !6396)
!6406 = !DILocation(line: 637, column: 67, scope: !6396)
!6407 = !DILocation(line: 637, column: 6, scope: !5665)
!6408 = !DILocation(line: 638, column: 7, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 638, column: 7)
!6410 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 637, column: 83)
!6411 = !DILocation(line: 638, column: 11, scope: !6409)
!6412 = !DILocation(line: 638, column: 26, scope: !6409)
!6413 = !DILocation(line: 638, column: 32, scope: !6409)
!6414 = !DILocation(line: 639, column: 35, scope: !6409)
!6415 = !DILocation(line: 639, column: 7, scope: !6409)
!6416 = !DILocation(line: 639, column: 63, scope: !6409)
!6417 = !DILocation(line: 640, column: 35, scope: !6409)
!6418 = !DILocation(line: 640, column: 7, scope: !6409)
!6419 = !DILocation(line: 640, column: 60, scope: !6409)
!6420 = !DILocation(line: 641, column: 35, scope: !6409)
!6421 = !DILocation(line: 641, column: 7, scope: !6409)
!6422 = !DILocation(line: 638, column: 7, scope: !6410)
!6423 = !DILocation(line: 643, column: 37, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 642, column: 3)
!6425 = !DILocation(line: 643, column: 42, scope: !6424)
!6426 = !DILocation(line: 643, column: 49, scope: !6424)
!6427 = !DILocation(line: 643, column: 53, scope: !6424)
!6428 = !DILocation(line: 643, column: 4, scope: !6424)
!6429 = !DILocation(line: 644, column: 3, scope: !6424)
!6430 = !DILocation(line: 645, column: 40, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 645, column: 12)
!6432 = !DILocation(line: 645, column: 12, scope: !6431)
!6433 = !DILocation(line: 645, column: 12, scope: !6409)
!6434 = !DILocation(line: 646, column: 37, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 645, column: 66)
!6436 = !DILocation(line: 646, column: 42, scope: !6435)
!6437 = !DILocation(line: 646, column: 49, scope: !6435)
!6438 = !DILocation(line: 646, column: 53, scope: !6435)
!6439 = !DILocation(line: 646, column: 4, scope: !6435)
!6440 = !DILocation(line: 647, column: 3, scope: !6435)
!6441 = !DILocation(line: 648, column: 12, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 648, column: 12)
!6443 = !DILocation(line: 648, column: 16, scope: !6442)
!6444 = !DILocation(line: 648, column: 12, scope: !6431)
!6445 = !DILocation(line: 649, column: 37, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 648, column: 34)
!6447 = !DILocation(line: 649, column: 42, scope: !6446)
!6448 = !DILocation(line: 649, column: 49, scope: !6446)
!6449 = !DILocation(line: 649, column: 53, scope: !6446)
!6450 = !DILocation(line: 649, column: 4, scope: !6446)
!6451 = !DILocation(line: 650, column: 3, scope: !6446)
!6452 = !DILocation(line: 651, column: 2, scope: !6410)
!6453 = !DILocation(line: 654, column: 6, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 654, column: 6)
!6455 = !DILocation(line: 654, column: 10, scope: !6454)
!6456 = !DILocation(line: 654, column: 6, scope: !5665)
!6457 = !DILocalVariable(name: "adt", scope: !6458, file: !3, line: 655, type: !6459)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 654, column: 16)
!6459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6460, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !311, line: 869, baseType: !426)
!6461 = !DILocation(line: 655, column: 13, scope: !6458)
!6462 = !DILocation(line: 655, column: 46, scope: !6458)
!6463 = !DILocation(line: 655, column: 50, scope: !6458)
!6464 = !DILocation(line: 655, column: 40, scope: !6458)
!6465 = !DILocation(line: 655, column: 19, scope: !6458)
!6466 = !DILocation(line: 656, column: 7, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 656, column: 7)
!6468 = !DILocation(line: 656, column: 7, scope: !6458)
!6469 = !DILocation(line: 657, column: 28, scope: !6467)
!6470 = !DILocation(line: 657, column: 33, scope: !6467)
!6471 = !DILocation(line: 657, column: 38, scope: !6467)
!6472 = !DILocation(line: 657, column: 4, scope: !6467)
!6473 = !DILocation(line: 658, column: 2, scope: !6458)
!6474 = !DILocation(line: 661, column: 10, scope: !5665)
!6475 = !DILocation(line: 661, column: 14, scope: !5665)
!6476 = !DILocation(line: 661, column: 2, scope: !5665)
!6477 = !DILocalVariable(name: "cam", scope: !6478, file: !3, line: 664, type: !4456)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 663, column: 3)
!6479 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 661, column: 20)
!6480 = !DILocation(line: 664, column: 12, scope: !6478)
!6481 = !DILocation(line: 664, column: 28, scope: !6478)
!6482 = !DILocation(line: 664, column: 32, scope: !6478)
!6483 = !DILocation(line: 664, column: 18, scope: !6478)
!6484 = !DILocation(line: 666, column: 8, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 666, column: 8)
!6486 = !DILocation(line: 666, column: 13, scope: !6485)
!6487 = !DILocation(line: 666, column: 8, scope: !6478)
!6488 = !DILocation(line: 667, column: 26, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 666, column: 21)
!6490 = !DILocation(line: 667, column: 31, scope: !6489)
!6491 = !DILocation(line: 667, column: 36, scope: !6489)
!6492 = !DILocation(line: 667, column: 13, scope: !6489)
!6493 = !DILocation(line: 667, column: 11, scope: !6489)
!6494 = !DILocation(line: 668, column: 22, scope: !6489)
!6495 = !DILocation(line: 668, column: 27, scope: !6489)
!6496 = !DILocation(line: 668, column: 34, scope: !6489)
!6497 = !DILocation(line: 668, column: 5, scope: !6489)
!6498 = !DILocation(line: 669, column: 4, scope: !6489)
!6499 = !DILocation(line: 670, column: 4, scope: !6478)
!6500 = !DILocalVariable(name: "mom", scope: !6501, file: !3, line: 674, type: !349)
!6501 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 673, column: 3)
!6502 = !DILocation(line: 674, column: 12, scope: !6501)
!6503 = !DILocation(line: 674, column: 39, scope: !6501)
!6504 = !DILocation(line: 674, column: 46, scope: !6501)
!6505 = !DILocation(line: 674, column: 18, scope: !6501)
!6506 = !DILocation(line: 676, column: 8, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 676, column: 8)
!6508 = !DILocation(line: 676, column: 15, scope: !6507)
!6509 = !DILocation(line: 676, column: 12, scope: !6507)
!6510 = !DILocation(line: 676, column: 8, scope: !6501)
!6511 = !DILocation(line: 677, column: 26, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 676, column: 19)
!6513 = !DILocation(line: 677, column: 31, scope: !6512)
!6514 = !DILocation(line: 677, column: 13, scope: !6512)
!6515 = !DILocation(line: 677, column: 11, scope: !6512)
!6516 = !DILocation(line: 678, column: 22, scope: !6512)
!6517 = !DILocation(line: 678, column: 27, scope: !6512)
!6518 = !DILocation(line: 678, column: 33, scope: !6512)
!6519 = !DILocation(line: 678, column: 5, scope: !6512)
!6520 = !DILocation(line: 679, column: 4, scope: !6512)
!6521 = !DILocation(line: 680, column: 4, scope: !6501)
!6522 = !DILocalVariable(name: "cu", scope: !6523, file: !3, line: 685, type: !6187)
!6523 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 684, column: 3)
!6524 = !DILocation(line: 685, column: 11, scope: !6523)
!6525 = !DILocation(line: 685, column: 16, scope: !6523)
!6526 = !DILocation(line: 685, column: 20, scope: !6523)
!6527 = !DILocation(line: 687, column: 8, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 687, column: 8)
!6529 = !DILocation(line: 687, column: 12, scope: !6528)
!6530 = !DILocation(line: 687, column: 8, scope: !6523)
!6531 = !DILocation(line: 688, column: 26, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 687, column: 20)
!6533 = !DILocation(line: 688, column: 31, scope: !6532)
!6534 = !DILocation(line: 688, column: 35, scope: !6532)
!6535 = !DILocation(line: 688, column: 13, scope: !6532)
!6536 = !DILocation(line: 688, column: 11, scope: !6532)
!6537 = !DILocation(line: 689, column: 22, scope: !6532)
!6538 = !DILocation(line: 689, column: 27, scope: !6532)
!6539 = !DILocation(line: 689, column: 34, scope: !6532)
!6540 = !DILocation(line: 689, column: 5, scope: !6532)
!6541 = !DILocation(line: 690, column: 4, scope: !6532)
!6542 = !DILocation(line: 691, column: 8, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 691, column: 8)
!6544 = !DILocation(line: 691, column: 12, scope: !6543)
!6545 = !DILocation(line: 691, column: 8, scope: !6523)
!6546 = !DILocation(line: 692, column: 26, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 691, column: 22)
!6548 = !DILocation(line: 692, column: 31, scope: !6547)
!6549 = !DILocation(line: 692, column: 35, scope: !6547)
!6550 = !DILocation(line: 692, column: 13, scope: !6547)
!6551 = !DILocation(line: 692, column: 11, scope: !6547)
!6552 = !DILocation(line: 693, column: 22, scope: !6547)
!6553 = !DILocation(line: 693, column: 27, scope: !6547)
!6554 = !DILocation(line: 693, column: 34, scope: !6547)
!6555 = !DILocation(line: 693, column: 5, scope: !6547)
!6556 = !DILocation(line: 694, column: 4, scope: !6547)
!6557 = !DILocation(line: 695, column: 8, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 695, column: 8)
!6559 = !DILocation(line: 695, column: 12, scope: !6558)
!6560 = !DILocation(line: 695, column: 17, scope: !6558)
!6561 = !DILocation(line: 695, column: 8, scope: !6523)
!6562 = !DILocation(line: 708, column: 9, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 708, column: 9)
!6564 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 695, column: 29)
!6565 = !DILocation(line: 708, column: 13, scope: !6563)
!6566 = !DILocation(line: 708, column: 23, scope: !6563)
!6567 = !DILocation(line: 708, column: 9, scope: !6564)
!6568 = !DILocalVariable(name: "duplilist", scope: !6569, file: !3, line: 709, type: !4373)
!6569 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 708, column: 32)
!6570 = !DILocation(line: 709, column: 16, scope: !6569)
!6571 = !DILocalVariable(name: "dob", scope: !6569, file: !3, line: 710, type: !6572)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 64)
!6573 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliObject", file: !40, line: 331, baseType: !6574)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliObject", file: !40, line: 316, size: 1216, elements: !6575)
!6575 = !{!6576, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6588}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6574, file: !40, line: 317, baseType: !6577, size: 64)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6574, file: !40, line: 317, baseType: !6577, size: 64, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !6574, file: !40, line: 318, baseType: !522, size: 64, offset: 128)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6574, file: !40, line: 319, baseType: !1599, size: 512, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !6574, file: !40, line: 320, baseType: !1364, size: 96, offset: 704)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !6574, file: !40, line: 320, baseType: !946, size: 64, offset: 800)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6574, file: !40, line: 322, baseType: !387, size: 16, offset: 864)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "no_draw", scope: !6574, file: !40, line: 323, baseType: !374, size: 8, offset: 880)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "animated", scope: !6574, file: !40, line: 323, baseType: !374, size: 8, offset: 888)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_id", scope: !6574, file: !40, line: 327, baseType: !6587, size: 256, offset: 896)
!6587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 256, elements: !1505)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "particle_system", scope: !6574, file: !40, line: 330, baseType: !3603, size: 64, offset: 1152)
!6589 = !DILocation(line: 710, column: 19, scope: !6569)
!6590 = !DILocation(line: 711, column: 37, scope: !6569)
!6591 = !DILocation(line: 711, column: 43, scope: !6569)
!6592 = !DILocation(line: 711, column: 53, scope: !6569)
!6593 = !DILocation(line: 711, column: 60, scope: !6569)
!6594 = !DILocation(line: 711, column: 18, scope: !6569)
!6595 = !DILocation(line: 711, column: 16, scope: !6569)
!6596 = !DILocation(line: 712, column: 17, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 712, column: 6)
!6598 = !DILocation(line: 712, column: 28, scope: !6597)
!6599 = !DILocation(line: 712, column: 15, scope: !6597)
!6600 = !DILocation(line: 712, column: 11, scope: !6597)
!6601 = !DILocation(line: 712, column: 35, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 712, column: 6)
!6603 = !DILocation(line: 712, column: 6, scope: !6597)
!6604 = !DILocation(line: 713, column: 28, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 712, column: 57)
!6606 = !DILocation(line: 713, column: 33, scope: !6605)
!6607 = !DILocation(line: 713, column: 38, scope: !6605)
!6608 = !DILocation(line: 713, column: 15, scope: !6605)
!6609 = !DILocation(line: 713, column: 13, scope: !6605)
!6610 = !DILocation(line: 714, column: 24, scope: !6605)
!6611 = !DILocation(line: 714, column: 29, scope: !6605)
!6612 = !DILocation(line: 714, column: 35, scope: !6605)
!6613 = !DILocation(line: 714, column: 7, scope: !6605)
!6614 = !DILocation(line: 715, column: 6, scope: !6605)
!6615 = !DILocation(line: 712, column: 46, scope: !6602)
!6616 = !DILocation(line: 712, column: 51, scope: !6602)
!6617 = !DILocation(line: 712, column: 44, scope: !6602)
!6618 = !DILocation(line: 712, column: 6, scope: !6602)
!6619 = distinct !{!6619, !6603, !6620}
!6620 = !DILocation(line: 715, column: 6, scope: !6597)
!6621 = !DILocation(line: 716, column: 28, scope: !6569)
!6622 = !DILocation(line: 716, column: 6, scope: !6569)
!6623 = !DILocation(line: 717, column: 5, scope: !6569)
!6624 = !DILocation(line: 719, column: 9, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 719, column: 9)
!6626 = !DILocation(line: 719, column: 13, scope: !6625)
!6627 = !DILocation(line: 719, column: 9, scope: !6564)
!6628 = !DILocation(line: 720, column: 27, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 719, column: 26)
!6630 = !DILocation(line: 720, column: 32, scope: !6629)
!6631 = !DILocation(line: 720, column: 36, scope: !6629)
!6632 = !DILocation(line: 720, column: 14, scope: !6629)
!6633 = !DILocation(line: 720, column: 12, scope: !6629)
!6634 = !DILocation(line: 722, column: 6, scope: !6629)
!6635 = !DILocation(line: 722, column: 13, scope: !6629)
!6636 = !DILocation(line: 722, column: 24, scope: !6629)
!6637 = !DILocation(line: 723, column: 23, scope: !6629)
!6638 = !DILocation(line: 723, column: 28, scope: !6629)
!6639 = !DILocation(line: 723, column: 35, scope: !6629)
!6640 = !DILocation(line: 723, column: 6, scope: !6629)
!6641 = !DILocation(line: 724, column: 5, scope: !6629)
!6642 = !DILocation(line: 725, column: 4, scope: !6564)
!6643 = !DILocation(line: 726, column: 4, scope: !6523)
!6644 = !DILocation(line: 731, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 731, column: 6)
!6646 = !DILocation(line: 731, column: 10, scope: !6645)
!6647 = !DILocation(line: 731, column: 6, scope: !5665)
!6648 = !DILocalVariable(name: "a", scope: !6649, file: !3, line: 732, type: !389)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 731, column: 18)
!6650 = !DILocation(line: 732, column: 7, scope: !6649)
!6651 = !DILocation(line: 734, column: 10, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 734, column: 3)
!6653 = !DILocation(line: 734, column: 8, scope: !6652)
!6654 = !DILocation(line: 734, column: 15, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 734, column: 3)
!6656 = !DILocation(line: 734, column: 20, scope: !6655)
!6657 = !DILocation(line: 734, column: 24, scope: !6655)
!6658 = !DILocation(line: 734, column: 17, scope: !6655)
!6659 = !DILocation(line: 734, column: 3, scope: !6652)
!6660 = !DILocalVariable(name: "ma", scope: !6661, file: !3, line: 735, type: !4523)
!6661 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 734, column: 37)
!6662 = !DILocation(line: 735, column: 14, scope: !6661)
!6663 = !DILocation(line: 735, column: 41, scope: !6661)
!6664 = !DILocation(line: 735, column: 45, scope: !6661)
!6665 = !DILocation(line: 735, column: 19, scope: !6661)
!6666 = !DILocation(line: 737, column: 8, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 737, column: 8)
!6668 = !DILocation(line: 737, column: 8, scope: !6661)
!6669 = !DILocation(line: 739, column: 39, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 737, column: 12)
!6671 = !DILocation(line: 739, column: 44, scope: !6670)
!6672 = !DILocation(line: 739, column: 50, scope: !6670)
!6673 = !DILocation(line: 739, column: 5, scope: !6670)
!6674 = !DILocation(line: 740, column: 4, scope: !6670)
!6675 = !DILocation(line: 741, column: 3, scope: !6661)
!6676 = !DILocation(line: 734, column: 33, scope: !6655)
!6677 = !DILocation(line: 734, column: 3, scope: !6655)
!6678 = distinct !{!6678, !6659, !6679}
!6679 = !DILocation(line: 741, column: 3, scope: !6652)
!6680 = !DILocation(line: 742, column: 2, scope: !6649)
!6681 = !DILocation(line: 743, column: 11, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 743, column: 11)
!6683 = !DILocation(line: 743, column: 15, scope: !6682)
!6684 = !DILocation(line: 743, column: 20, scope: !6682)
!6685 = !DILocation(line: 743, column: 11, scope: !6645)
!6686 = !DILocation(line: 744, column: 33, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 743, column: 32)
!6688 = !DILocation(line: 744, column: 38, scope: !6687)
!6689 = !DILocation(line: 744, column: 44, scope: !6687)
!6690 = !DILocation(line: 744, column: 48, scope: !6687)
!6691 = !DILocation(line: 744, column: 3, scope: !6687)
!6692 = !DILocation(line: 745, column: 2, scope: !6687)
!6693 = !DILocation(line: 748, column: 9, scope: !5665)
!6694 = !DILocation(line: 748, column: 13, scope: !5665)
!6695 = !DILocation(line: 748, column: 28, scope: !5665)
!6696 = !DILocation(line: 748, column: 7, scope: !5665)
!6697 = !DILocation(line: 749, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 749, column: 6)
!6699 = !DILocation(line: 749, column: 6, scope: !5665)
!6700 = !DILocalVariable(name: "go", scope: !6701, file: !3, line: 750, type: !4527)
!6701 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 749, column: 12)
!6702 = !DILocation(line: 750, column: 16, scope: !6701)
!6703 = !DILocation(line: 752, column: 3, scope: !6701)
!6704 = !DILocation(line: 752, column: 10, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 752, column: 3)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 752, column: 3)
!6707 = !DILocation(line: 752, column: 3, scope: !6706)
!6708 = !DILocalVariable(name: "rule", scope: !6709, file: !3, line: 753, type: !6710)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 752, column: 35)
!6710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!6711 = !DILocation(line: 753, column: 14, scope: !6709)
!6712 = !DILocalVariable(name: "state", scope: !6709, file: !3, line: 754, type: !6713)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6714 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidState", file: !293, line: 165, baseType: !6715)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidState", file: !293, line: 150, size: 1024, elements: !6716)
!6716 = !{!6717, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6715, file: !293, line: 151, baseType: !6718, size: 64)
!6718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6715, file: !293, line: 151, baseType: !6718, size: 64, offset: 64)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "rules", scope: !6715, file: !293, line: 152, baseType: !414, size: 128, offset: 128)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !6715, file: !293, line: 153, baseType: !414, size: 128, offset: 256)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "actions", scope: !6715, file: !293, line: 154, baseType: !414, size: 128, offset: 384)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6715, file: !293, line: 155, baseType: !2369, size: 256, offset: 512)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6715, file: !293, line: 156, baseType: !389, size: 32, offset: 768)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6715, file: !293, line: 156, baseType: !389, size: 32, offset: 800)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_type", scope: !6715, file: !293, line: 159, baseType: !389, size: 32, offset: 832)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "rule_fuzziness", scope: !6715, file: !293, line: 160, baseType: !469, size: 32, offset: 864)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !6715, file: !293, line: 163, baseType: !389, size: 32, offset: 896)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !6715, file: !293, line: 163, baseType: !389, size: 32, offset: 928)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !6715, file: !293, line: 164, baseType: !469, size: 32, offset: 960)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !6715, file: !293, line: 164, baseType: !469, size: 32, offset: 992)
!6732 = !DILocation(line: 754, column: 15, scope: !6709)
!6733 = !DILocalVariable(name: "part", scope: !6709, file: !3, line: 755, type: !3609)
!6734 = !DILocation(line: 755, column: 22, scope: !6709)
!6735 = !DILocation(line: 755, column: 29, scope: !6709)
!6736 = !DILocation(line: 755, column: 35, scope: !6709)
!6737 = !DILocalVariable(name: "effectors", scope: !6709, file: !3, line: 756, type: !4373)
!6738 = !DILocation(line: 756, column: 14, scope: !6709)
!6739 = !DILocalVariable(name: "eff", scope: !6709, file: !3, line: 757, type: !6740)
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 64)
!6741 = !DIDerivedType(tag: DW_TAG_typedef, name: "EffectorCache", file: !3257, line: 110, baseType: !6742)
!6742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorCache", file: !3257, line: 93, size: 960, elements: !6743)
!6743 = !{!6744, !6746, !6747, !6748, !6749, !6750, !6810, !6811, !6817, !6818, !6819, !6820, !6821, !6822}
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6742, file: !3257, line: 94, baseType: !6745, size: 64)
!6745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6742, file: !3257, line: 94, baseType: !6745, size: 64, offset: 64)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6742, file: !3257, line: 96, baseType: !515, size: 64, offset: 128)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !6742, file: !3257, line: 97, baseType: !522, size: 64, offset: 192)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !6742, file: !3257, line: 98, baseType: !3603, size: 64, offset: 256)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "surmd", scope: !6742, file: !3257, line: 99, baseType: !6751, size: 64, offset: 320)
!6751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6752, size: 64)
!6752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SurfaceModifierData", file: !218, line: 586, size: 1216, elements: !6753)
!6753 = !{!6754, !6755, !6756, !6757, !6758, !6808, !6809}
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !6752, file: !218, line: 587, baseType: !503, size: 896)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6752, file: !218, line: 589, baseType: !2738, size: 64, offset: 896)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6752, file: !218, line: 590, baseType: !2738, size: 64, offset: 960)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !6752, file: !218, line: 592, baseType: !3858, size: 64, offset: 1024)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !6752, file: !218, line: 594, baseType: !6759, size: 64, offset: 1088)
!6759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6760, size: 64)
!6760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeFromMesh", file: !3909, line: 47, size: 576, elements: !6761)
!6761 = !{!6762, !6763, !6777, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806, !6807}
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !6760, file: !3909, line: 48, baseType: !4311, size: 64)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "nearest_callback", scope: !6760, file: !3909, line: 51, baseType: !6764, size: 64, offset: 64)
!6764 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_NearestPointCallback", file: !4313, line: 76, baseType: !6765)
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 64)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{null, !348, !389, !4134, !6768}
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 64)
!6769 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeNearest", file: !4313, line: 59, baseType: !6770)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeNearest", file: !4313, line: 53, size: 288, elements: !6771)
!6771 = !{!6772, !6773, !6774, !6775, !6776}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6770, file: !4313, line: 54, baseType: !389, size: 32)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !6770, file: !4313, line: 55, baseType: !1364, size: 96, offset: 32)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !6770, file: !4313, line: 56, baseType: !1364, size: 96, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "dist_sq", scope: !6770, file: !4313, line: 57, baseType: !469, size: 32, offset: 224)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6770, file: !4313, line: 58, baseType: !389, size: 32, offset: 256)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "raycast_callback", scope: !6760, file: !3909, line: 52, baseType: !6778, size: 64, offset: 128)
!6778 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_RayCastCallback", file: !4313, line: 79, baseType: !6779)
!6779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 64)
!6780 = !DISubroutineType(types: !6781)
!6781 = !{null, !348, !389, !6782, !6790}
!6782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6783, size: 64)
!6783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6784)
!6784 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRay", file: !4313, line: 65, baseType: !6785)
!6785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRay", file: !4313, line: 61, size: 224, elements: !6786)
!6786 = !{!6787, !6788, !6789}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !6785, file: !4313, line: 62, baseType: !1364, size: 96)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !6785, file: !4313, line: 63, baseType: !1364, size: 96, offset: 96)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !6785, file: !4313, line: 64, baseType: !469, size: 32, offset: 192)
!6790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6791, size: 64)
!6791 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRayHit", file: !4313, line: 73, baseType: !6792)
!6792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRayHit", file: !4313, line: 67, size: 288, elements: !6793)
!6793 = !{!6794, !6795, !6796, !6797, !6798}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6792, file: !4313, line: 68, baseType: !389, size: 32)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !6792, file: !4313, line: 69, baseType: !1364, size: 96, offset: 32)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !6792, file: !4313, line: 70, baseType: !1364, size: 96, offset: 128)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !6792, file: !4313, line: 71, baseType: !469, size: 32, offset: 224)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6792, file: !4313, line: 72, baseType: !389, size: 32, offset: 256)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !6760, file: !3909, line: 55, baseType: !2738, size: 64, offset: 192)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !6760, file: !3909, line: 56, baseType: !3986, size: 64, offset: 256)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !6760, file: !3909, line: 57, baseType: !3998, size: 64, offset: 320)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "vert_allocated", scope: !6760, file: !3909, line: 58, baseType: !1940, size: 8, offset: 384)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "face_allocated", scope: !6760, file: !3909, line: 59, baseType: !1940, size: 8, offset: 392)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "edge_allocated", scope: !6760, file: !3909, line: 60, baseType: !1940, size: 8, offset: 400)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !6760, file: !3909, line: 63, baseType: !469, size: 32, offset: 416)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "em_evil", scope: !6760, file: !3909, line: 66, baseType: !348, size: 64, offset: 448)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "cached", scope: !6760, file: !3909, line: 67, baseType: !1940, size: 8, offset: 512)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !6752, file: !218, line: 596, baseType: !389, size: 32, offset: 1152)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !6752, file: !218, line: 596, baseType: !389, size: 32, offset: 1184)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !6742, file: !3257, line: 101, baseType: !3214, size: 64, offset: 384)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "guide_data", scope: !6742, file: !3257, line: 104, baseType: !6812, size: 64, offset: 448)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GuideEffectorData", file: !3257, line: 69, size: 128, elements: !6814)
!6814 = !{!6815, !6816}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "vec_to_point", scope: !6813, file: !3257, line: 70, baseType: !1364, size: 96)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !6813, file: !3257, line: 71, baseType: !469, size: 32, offset: 96)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "guide_loc", scope: !6742, file: !3257, line: 105, baseType: !890, size: 128, offset: 512)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "guide_dir", scope: !6742, file: !3257, line: 105, baseType: !1364, size: 96, offset: 640)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "guide_radius", scope: !6742, file: !3257, line: 105, baseType: !469, size: 32, offset: 736)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "velocity", scope: !6742, file: !3257, line: 106, baseType: !1364, size: 96, offset: 768)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !6742, file: !3257, line: 108, baseType: !469, size: 32, offset: 864)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6742, file: !3257, line: 109, baseType: !389, size: 32, offset: 896)
!6823 = !DILocation(line: 757, column: 19, scope: !6709)
!6824 = !DILocation(line: 759, column: 21, scope: !6709)
!6825 = !DILocation(line: 759, column: 26, scope: !6709)
!6826 = !DILocation(line: 759, column: 32, scope: !6709)
!6827 = !DILocation(line: 759, column: 4, scope: !6709)
!6828 = !DILocation(line: 761, column: 28, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 761, column: 8)
!6830 = !DILocation(line: 761, column: 32, scope: !6829)
!6831 = !DILocation(line: 761, column: 9, scope: !6829)
!6832 = !DILocation(line: 761, column: 8, scope: !6709)
!6833 = !DILocation(line: 762, column: 5, scope: !6829)
!6834 = !DILocation(line: 764, column: 8, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 764, column: 8)
!6836 = !DILocation(line: 764, column: 8, scope: !6709)
!6837 = !DILocalVariable(name: "pt", scope: !6838, file: !3, line: 765, type: !6839)
!6838 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 764, column: 64)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleTarget", file: !3382, line: 85, baseType: !6841)
!6841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleTarget", file: !3382, line: 79, size: 320, elements: !6842)
!6842 = !{!6843, !6845, !6846, !6847, !6848, !6849, !6850, !6851}
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6841, file: !3382, line: 80, baseType: !6844, size: 64)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6841, size: 64)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6841, file: !3382, line: 80, baseType: !6844, size: 64, offset: 64)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !6841, file: !3382, line: 81, baseType: !522, size: 64, offset: 128)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !6841, file: !3382, line: 82, baseType: !389, size: 32, offset: 192)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6841, file: !3382, line: 83, baseType: !387, size: 16, offset: 224)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6841, file: !3382, line: 83, baseType: !387, size: 16, offset: 240)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !6841, file: !3382, line: 84, baseType: !469, size: 32, offset: 256)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !6841, file: !3382, line: 84, baseType: !469, size: 32, offset: 288)
!6852 = !DILocation(line: 765, column: 21, scope: !6838)
!6853 = !DILocation(line: 765, column: 26, scope: !6838)
!6854 = !DILocation(line: 765, column: 32, scope: !6838)
!6855 = !DILocation(line: 765, column: 40, scope: !6838)
!6856 = !DILocation(line: 767, column: 5, scope: !6838)
!6857 = !DILocation(line: 767, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 767, column: 5)
!6859 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 767, column: 5)
!6860 = !DILocation(line: 767, column: 5, scope: !6859)
!6861 = !DILocation(line: 768, column: 10, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 768, column: 10)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 767, column: 31)
!6864 = !DILocation(line: 768, column: 14, scope: !6862)
!6865 = !DILocation(line: 768, column: 17, scope: !6862)
!6866 = !DILocation(line: 768, column: 34, scope: !6862)
!6867 = !DILocation(line: 768, column: 38, scope: !6862)
!6868 = !DILocation(line: 768, column: 42, scope: !6862)
!6869 = !DILocation(line: 768, column: 58, scope: !6862)
!6870 = !DILocation(line: 768, column: 62, scope: !6862)
!6871 = !DILocation(line: 768, column: 67, scope: !6862)
!6872 = !DILocation(line: 768, column: 20, scope: !6862)
!6873 = !DILocation(line: 768, column: 10, scope: !6863)
!6874 = !DILocation(line: 769, column: 28, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 768, column: 73)
!6876 = !DILocation(line: 769, column: 33, scope: !6875)
!6877 = !DILocation(line: 769, column: 37, scope: !6875)
!6878 = !DILocation(line: 769, column: 15, scope: !6875)
!6879 = !DILocation(line: 769, column: 13, scope: !6875)
!6880 = !DILocation(line: 770, column: 24, scope: !6875)
!6881 = !DILocation(line: 770, column: 29, scope: !6875)
!6882 = !DILocation(line: 770, column: 36, scope: !6875)
!6883 = !DILocation(line: 770, column: 7, scope: !6875)
!6884 = !DILocation(line: 771, column: 6, scope: !6875)
!6885 = !DILocation(line: 772, column: 5, scope: !6863)
!6886 = !DILocation(line: 767, column: 21, scope: !6858)
!6887 = !DILocation(line: 767, column: 25, scope: !6858)
!6888 = !DILocation(line: 767, column: 19, scope: !6858)
!6889 = !DILocation(line: 767, column: 5, scope: !6858)
!6890 = distinct !{!6890, !6860, !6891}
!6891 = !DILocation(line: 772, column: 5, scope: !6859)
!6892 = !DILocation(line: 773, column: 4, scope: !6838)
!6893 = !DILocation(line: 775, column: 8, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 775, column: 8)
!6895 = !DILocation(line: 775, column: 14, scope: !6894)
!6896 = !DILocation(line: 775, column: 21, scope: !6894)
!6897 = !DILocation(line: 775, column: 37, scope: !6894)
!6898 = !DILocation(line: 775, column: 40, scope: !6894)
!6899 = !DILocation(line: 775, column: 46, scope: !6894)
!6900 = !DILocation(line: 775, column: 8, scope: !6709)
!6901 = !DILocation(line: 776, column: 26, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 775, column: 54)
!6903 = !DILocation(line: 776, column: 31, scope: !6902)
!6904 = !DILocation(line: 776, column: 37, scope: !6902)
!6905 = !DILocation(line: 776, column: 13, scope: !6902)
!6906 = !DILocation(line: 776, column: 11, scope: !6902)
!6907 = !DILocation(line: 780, column: 22, scope: !6902)
!6908 = !DILocation(line: 780, column: 27, scope: !6902)
!6909 = !DILocation(line: 780, column: 33, scope: !6902)
!6910 = !DILocation(line: 780, column: 5, scope: !6902)
!6911 = !DILocation(line: 781, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 781, column: 9)
!6913 = !DILocation(line: 781, column: 15, scope: !6912)
!6914 = !DILocation(line: 781, column: 23, scope: !6912)
!6915 = !DILocation(line: 781, column: 28, scope: !6912)
!6916 = !DILocation(line: 781, column: 9, scope: !6902)
!6917 = !DILocation(line: 782, column: 23, scope: !6912)
!6918 = !DILocation(line: 782, column: 28, scope: !6912)
!6919 = !DILocation(line: 782, column: 34, scope: !6912)
!6920 = !DILocation(line: 782, column: 6, scope: !6912)
!6921 = !DILocation(line: 783, column: 4, scope: !6902)
!6922 = !DILocation(line: 785, column: 8, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 785, column: 8)
!6924 = !DILocation(line: 785, column: 14, scope: !6923)
!6925 = !DILocation(line: 785, column: 21, scope: !6923)
!6926 = !DILocation(line: 785, column: 37, scope: !6923)
!6927 = !DILocation(line: 785, column: 40, scope: !6923)
!6928 = !DILocation(line: 785, column: 46, scope: !6923)
!6929 = !DILocation(line: 785, column: 8, scope: !6709)
!6930 = !DILocation(line: 786, column: 15, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 786, column: 5)
!6932 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 785, column: 57)
!6933 = !DILocation(line: 786, column: 21, scope: !6931)
!6934 = !DILocation(line: 786, column: 32, scope: !6931)
!6935 = !DILocation(line: 786, column: 40, scope: !6931)
!6936 = !DILocation(line: 786, column: 13, scope: !6931)
!6937 = !DILocation(line: 786, column: 10, scope: !6931)
!6938 = !DILocation(line: 786, column: 47, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 786, column: 5)
!6940 = !DILocation(line: 786, column: 5, scope: !6931)
!6941 = !DILocation(line: 787, column: 27, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 786, column: 66)
!6943 = !DILocation(line: 787, column: 32, scope: !6942)
!6944 = !DILocation(line: 787, column: 36, scope: !6942)
!6945 = !DILocation(line: 787, column: 14, scope: !6942)
!6946 = !DILocation(line: 787, column: 12, scope: !6942)
!6947 = !DILocation(line: 788, column: 23, scope: !6942)
!6948 = !DILocation(line: 788, column: 28, scope: !6942)
!6949 = !DILocation(line: 788, column: 35, scope: !6942)
!6950 = !DILocation(line: 788, column: 6, scope: !6942)
!6951 = !DILocation(line: 789, column: 5, scope: !6942)
!6952 = !DILocation(line: 786, column: 56, scope: !6939)
!6953 = !DILocation(line: 786, column: 60, scope: !6939)
!6954 = !DILocation(line: 786, column: 54, scope: !6939)
!6955 = !DILocation(line: 786, column: 5, scope: !6939)
!6956 = distinct !{!6956, !6940, !6957}
!6957 = !DILocation(line: 789, column: 5, scope: !6931)
!6958 = !DILocation(line: 790, column: 4, scope: !6932)
!6959 = !DILocation(line: 792, column: 32, scope: !6709)
!6960 = !DILocation(line: 792, column: 39, scope: !6709)
!6961 = !DILocation(line: 792, column: 43, scope: !6709)
!6962 = !DILocation(line: 792, column: 49, scope: !6709)
!6963 = !DILocation(line: 792, column: 55, scope: !6709)
!6964 = !DILocation(line: 792, column: 16, scope: !6709)
!6965 = !DILocation(line: 792, column: 14, scope: !6709)
!6966 = !DILocation(line: 794, column: 8, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 794, column: 8)
!6968 = !DILocation(line: 794, column: 8, scope: !6709)
!6969 = !DILocation(line: 795, column: 16, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 795, column: 5)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 794, column: 19)
!6972 = !DILocation(line: 795, column: 27, scope: !6970)
!6973 = !DILocation(line: 795, column: 14, scope: !6970)
!6974 = !DILocation(line: 795, column: 10, scope: !6970)
!6975 = !DILocation(line: 795, column: 34, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 795, column: 5)
!6977 = !DILocation(line: 795, column: 5, scope: !6970)
!6978 = !DILocation(line: 796, column: 10, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 796, column: 10)
!6980 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 795, column: 56)
!6981 = !DILocation(line: 796, column: 15, scope: !6979)
!6982 = !DILocation(line: 796, column: 10, scope: !6980)
!6983 = !DILocation(line: 797, column: 28, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 796, column: 21)
!6985 = !DILocation(line: 797, column: 33, scope: !6984)
!6986 = !DILocation(line: 797, column: 38, scope: !6984)
!6987 = !DILocation(line: 797, column: 15, scope: !6984)
!6988 = !DILocation(line: 797, column: 13, scope: !6984)
!6989 = !DILocation(line: 798, column: 24, scope: !6984)
!6990 = !DILocation(line: 798, column: 29, scope: !6984)
!6991 = !DILocation(line: 798, column: 36, scope: !6984)
!6992 = !DILocation(line: 798, column: 7, scope: !6984)
!6993 = !DILocation(line: 799, column: 6, scope: !6984)
!6994 = !DILocation(line: 800, column: 5, scope: !6980)
!6995 = !DILocation(line: 795, column: 45, scope: !6976)
!6996 = !DILocation(line: 795, column: 50, scope: !6976)
!6997 = !DILocation(line: 795, column: 43, scope: !6976)
!6998 = !DILocation(line: 795, column: 5, scope: !6976)
!6999 = distinct !{!6999, !6977, !7000}
!7000 = !DILocation(line: 800, column: 5, scope: !6970)
!7001 = !DILocation(line: 801, column: 4, scope: !6971)
!7002 = !DILocation(line: 803, column: 4, scope: !6709)
!7003 = !DILocation(line: 805, column: 8, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 805, column: 8)
!7005 = !DILocation(line: 805, column: 14, scope: !7004)
!7006 = !DILocation(line: 805, column: 8, scope: !6709)
!7007 = !DILocation(line: 806, column: 18, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 806, column: 5)
!7009 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 805, column: 21)
!7010 = !DILocation(line: 806, column: 24, scope: !7008)
!7011 = !DILocation(line: 806, column: 31, scope: !7008)
!7012 = !DILocation(line: 806, column: 38, scope: !7008)
!7013 = !DILocation(line: 806, column: 16, scope: !7008)
!7014 = !DILocation(line: 806, column: 10, scope: !7008)
!7015 = !DILocation(line: 806, column: 45, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 806, column: 5)
!7017 = !DILocation(line: 806, column: 5, scope: !7008)
!7018 = !DILocation(line: 807, column: 18, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 807, column: 6)
!7020 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 806, column: 73)
!7021 = !DILocation(line: 807, column: 25, scope: !7019)
!7022 = !DILocation(line: 807, column: 31, scope: !7019)
!7023 = !DILocation(line: 807, column: 16, scope: !7019)
!7024 = !DILocation(line: 807, column: 11, scope: !7019)
!7025 = !DILocation(line: 807, column: 38, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 807, column: 6)
!7027 = !DILocation(line: 807, column: 6, scope: !7019)
!7028 = !DILocalVariable(name: "ruleob", scope: !7029, file: !3, line: 808, type: !349)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 807, column: 63)
!7030 = !DILocation(line: 808, column: 15, scope: !7029)
!7031 = !DILocation(line: 809, column: 11, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 809, column: 11)
!7033 = !DILocation(line: 809, column: 17, scope: !7032)
!7034 = !DILocation(line: 809, column: 22, scope: !7032)
!7035 = !DILocation(line: 809, column: 11, scope: !7029)
!7036 = !DILocation(line: 810, column: 39, scope: !7032)
!7037 = !DILocation(line: 810, column: 46, scope: !7032)
!7038 = !DILocation(line: 810, column: 15, scope: !7032)
!7039 = !DILocation(line: 810, column: 8, scope: !7032)
!7040 = !DILocation(line: 811, column: 16, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 811, column: 16)
!7042 = !DILocation(line: 811, column: 22, scope: !7041)
!7043 = !DILocation(line: 811, column: 27, scope: !7041)
!7044 = !DILocation(line: 811, column: 16, scope: !7032)
!7045 = !DILocation(line: 812, column: 42, scope: !7041)
!7046 = !DILocation(line: 812, column: 49, scope: !7041)
!7047 = !DILocation(line: 812, column: 15, scope: !7041)
!7048 = !DILocation(line: 812, column: 8, scope: !7041)
!7049 = !DILocation(line: 814, column: 11, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 814, column: 11)
!7051 = !DILocation(line: 814, column: 11, scope: !7029)
!7052 = !DILocation(line: 815, column: 29, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 814, column: 19)
!7054 = !DILocation(line: 815, column: 34, scope: !7053)
!7055 = !DILocation(line: 815, column: 16, scope: !7053)
!7056 = !DILocation(line: 815, column: 14, scope: !7053)
!7057 = !DILocation(line: 816, column: 25, scope: !7053)
!7058 = !DILocation(line: 816, column: 30, scope: !7053)
!7059 = !DILocation(line: 816, column: 37, scope: !7053)
!7060 = !DILocation(line: 816, column: 8, scope: !7053)
!7061 = !DILocation(line: 817, column: 7, scope: !7053)
!7062 = !DILocation(line: 818, column: 6, scope: !7029)
!7063 = !DILocation(line: 807, column: 51, scope: !7026)
!7064 = !DILocation(line: 807, column: 57, scope: !7026)
!7065 = !DILocation(line: 807, column: 49, scope: !7026)
!7066 = !DILocation(line: 807, column: 6, scope: !7026)
!7067 = distinct !{!7067, !7027, !7068}
!7068 = !DILocation(line: 818, column: 6, scope: !7019)
!7069 = !DILocation(line: 819, column: 5, scope: !7020)
!7070 = !DILocation(line: 806, column: 60, scope: !7016)
!7071 = !DILocation(line: 806, column: 67, scope: !7016)
!7072 = !DILocation(line: 806, column: 58, scope: !7016)
!7073 = !DILocation(line: 806, column: 5, scope: !7016)
!7074 = distinct !{!7074, !7017, !7075}
!7075 = !DILocation(line: 819, column: 5, scope: !7008)
!7076 = !DILocation(line: 820, column: 4, scope: !7009)
!7077 = !DILocation(line: 821, column: 3, scope: !6709)
!7078 = !DILocation(line: 752, column: 23, scope: !6705)
!7079 = !DILocation(line: 752, column: 29, scope: !6705)
!7080 = !DILocation(line: 752, column: 21, scope: !6705)
!7081 = !DILocation(line: 752, column: 3, scope: !6705)
!7082 = distinct !{!7082, !6707, !7083}
!7083 = !DILocation(line: 821, column: 3, scope: !6706)
!7084 = !DILocation(line: 822, column: 2, scope: !6701)
!7085 = !DILocation(line: 825, column: 13, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 825, column: 2)
!7087 = !DILocation(line: 825, column: 17, scope: !7086)
!7088 = !DILocation(line: 825, column: 29, scope: !7086)
!7089 = !DILocation(line: 825, column: 11, scope: !7086)
!7090 = !DILocation(line: 825, column: 7, scope: !7086)
!7091 = !DILocation(line: 825, column: 36, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 825, column: 2)
!7093 = !DILocation(line: 825, column: 2, scope: !7086)
!7094 = !DILocalVariable(name: "cti", scope: !7095, file: !3, line: 826, type: !5802)
!7095 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 825, column: 58)
!7096 = !DILocation(line: 826, column: 24, scope: !7095)
!7097 = !DILocation(line: 826, column: 58, scope: !7095)
!7098 = !DILocation(line: 826, column: 30, scope: !7095)
!7099 = !DILocalVariable(name: "targets", scope: !7095, file: !3, line: 827, type: !414)
!7100 = !DILocation(line: 827, column: 12, scope: !7095)
!7101 = !DILocalVariable(name: "ct", scope: !7095, file: !3, line: 828, type: !5872)
!7102 = !DILocation(line: 828, column: 22, scope: !7095)
!7103 = !DILocation(line: 830, column: 8, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 830, column: 7)
!7105 = !DILocation(line: 830, column: 7, scope: !7095)
!7106 = !DILocation(line: 831, column: 4, scope: !7104)
!7107 = !DILocation(line: 834, column: 7, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 834, column: 7)
!7109 = !DILocation(line: 834, column: 7, scope: !7095)
!7110 = !DILocalVariable(name: "depends_on_camera", scope: !7111, file: !3, line: 835, type: !389)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 834, column: 113)
!7112 = !DILocation(line: 835, column: 8, scope: !7111)
!7113 = !DILocation(line: 837, column: 8, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 837, column: 8)
!7115 = !DILocation(line: 837, column: 13, scope: !7114)
!7116 = !DILocation(line: 837, column: 18, scope: !7114)
!7117 = !DILocation(line: 837, column: 8, scope: !7111)
!7118 = !DILocalVariable(name: "data", scope: !7119, file: !3, line: 838, type: !4512)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 837, column: 50)
!7120 = !DILocation(line: 838, column: 29, scope: !7119)
!7121 = !DILocation(line: 838, column: 62, scope: !7119)
!7122 = !DILocation(line: 838, column: 67, scope: !7119)
!7123 = !DILocation(line: 838, column: 36, scope: !7119)
!7124 = !DILocation(line: 840, column: 10, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 840, column: 9)
!7126 = !DILocation(line: 840, column: 16, scope: !7125)
!7127 = !DILocation(line: 840, column: 21, scope: !7125)
!7128 = !DILocation(line: 840, column: 24, scope: !7125)
!7129 = !DILocation(line: 840, column: 30, scope: !7125)
!7130 = !DILocation(line: 840, column: 35, scope: !7125)
!7131 = !DILocation(line: 840, column: 61, scope: !7125)
!7132 = !DILocation(line: 840, column: 64, scope: !7125)
!7133 = !DILocation(line: 840, column: 70, scope: !7125)
!7134 = !DILocation(line: 840, column: 9, scope: !7119)
!7135 = !DILocation(line: 841, column: 24, scope: !7125)
!7136 = !DILocation(line: 841, column: 6, scope: !7125)
!7137 = !DILocation(line: 843, column: 9, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 843, column: 9)
!7139 = !DILocation(line: 843, column: 15, scope: !7138)
!7140 = !DILocation(line: 843, column: 9, scope: !7119)
!7141 = !DILocation(line: 844, column: 27, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 843, column: 25)
!7143 = !DILocation(line: 844, column: 32, scope: !7142)
!7144 = !DILocation(line: 844, column: 38, scope: !7142)
!7145 = !DILocation(line: 844, column: 14, scope: !7142)
!7146 = !DILocation(line: 844, column: 12, scope: !7142)
!7147 = !DILocation(line: 845, column: 23, scope: !7142)
!7148 = !DILocation(line: 845, column: 28, scope: !7142)
!7149 = !DILocation(line: 845, column: 35, scope: !7142)
!7150 = !DILocation(line: 845, column: 72, scope: !7142)
!7151 = !DILocation(line: 845, column: 77, scope: !7142)
!7152 = !DILocation(line: 845, column: 6, scope: !7142)
!7153 = !DILocation(line: 846, column: 5, scope: !7142)
!7154 = !DILocation(line: 847, column: 4, scope: !7119)
!7155 = !DILocation(line: 848, column: 13, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 848, column: 13)
!7157 = !DILocation(line: 848, column: 18, scope: !7156)
!7158 = !DILocation(line: 848, column: 23, scope: !7156)
!7159 = !DILocation(line: 848, column: 13, scope: !7114)
!7160 = !DILocation(line: 849, column: 23, scope: !7156)
!7161 = !DILocation(line: 849, column: 5, scope: !7156)
!7162 = !DILocation(line: 851, column: 8, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 851, column: 8)
!7164 = !DILocation(line: 851, column: 26, scope: !7163)
!7165 = !DILocation(line: 851, column: 29, scope: !7163)
!7166 = !DILocation(line: 851, column: 36, scope: !7163)
!7167 = !DILocation(line: 851, column: 8, scope: !7111)
!7168 = !DILocation(line: 852, column: 26, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 851, column: 44)
!7170 = !DILocation(line: 852, column: 31, scope: !7169)
!7171 = !DILocation(line: 852, column: 38, scope: !7169)
!7172 = !DILocation(line: 852, column: 13, scope: !7169)
!7173 = !DILocation(line: 852, column: 11, scope: !7169)
!7174 = !DILocation(line: 853, column: 22, scope: !7169)
!7175 = !DILocation(line: 853, column: 27, scope: !7169)
!7176 = !DILocation(line: 853, column: 34, scope: !7169)
!7177 = !DILocation(line: 853, column: 71, scope: !7169)
!7178 = !DILocation(line: 853, column: 76, scope: !7169)
!7179 = !DILocation(line: 853, column: 5, scope: !7169)
!7180 = !DILocation(line: 854, column: 4, scope: !7169)
!7181 = !DILocation(line: 856, column: 21, scope: !7111)
!7182 = !DILocation(line: 856, column: 26, scope: !7111)
!7183 = !DILocation(line: 856, column: 37, scope: !7111)
!7184 = !DILocation(line: 856, column: 4, scope: !7111)
!7185 = !DILocation(line: 857, column: 14, scope: !7111)
!7186 = !DILocation(line: 858, column: 3, scope: !7111)
!7187 = !DILocation(line: 859, column: 12, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 859, column: 12)
!7189 = !DILocation(line: 859, column: 17, scope: !7188)
!7190 = !DILocation(line: 859, column: 12, scope: !7108)
!7191 = !DILocation(line: 860, column: 4, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 859, column: 41)
!7193 = !DILocation(line: 860, column: 9, scope: !7192)
!7194 = !DILocation(line: 860, column: 32, scope: !7192)
!7195 = !DILocation(line: 862, column: 22, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 862, column: 4)
!7197 = !DILocation(line: 862, column: 14, scope: !7196)
!7198 = !DILocation(line: 862, column: 12, scope: !7196)
!7199 = !DILocation(line: 862, column: 9, scope: !7196)
!7200 = !DILocation(line: 862, column: 29, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 862, column: 4)
!7202 = !DILocation(line: 862, column: 4, scope: !7196)
!7203 = !DILocalVariable(name: "obt", scope: !7204, file: !3, line: 863, type: !349)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 862, column: 48)
!7205 = !DILocation(line: 863, column: 13, scope: !7204)
!7206 = !DILocation(line: 865, column: 9, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 865, column: 9)
!7208 = !DILocation(line: 865, column: 13, scope: !7207)
!7209 = !DILocation(line: 865, column: 9, scope: !7204)
!7210 = !DILocation(line: 866, column: 12, scope: !7207)
!7211 = !DILocation(line: 866, column: 16, scope: !7207)
!7212 = !DILocation(line: 866, column: 10, scope: !7207)
!7213 = !DILocation(line: 866, column: 6, scope: !7207)
!7214 = !DILocation(line: 868, column: 6, scope: !7207)
!7215 = !DILocation(line: 870, column: 26, scope: !7204)
!7216 = !DILocation(line: 870, column: 31, scope: !7204)
!7217 = !DILocation(line: 870, column: 13, scope: !7204)
!7218 = !DILocation(line: 870, column: 11, scope: !7204)
!7219 = !DILocation(line: 871, column: 9, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 871, column: 9)
!7221 = !DILocation(line: 871, column: 9, scope: !7204)
!7222 = !DILocation(line: 872, column: 23, scope: !7220)
!7223 = !DILocation(line: 872, column: 28, scope: !7220)
!7224 = !DILocation(line: 872, column: 35, scope: !7220)
!7225 = !DILocation(line: 872, column: 72, scope: !7220)
!7226 = !DILocation(line: 872, column: 77, scope: !7220)
!7227 = !DILocation(line: 872, column: 6, scope: !7220)
!7228 = !DILocation(line: 874, column: 10, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 874, column: 10)
!7230 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 873, column: 10)
!7231 = !DILocation(line: 874, column: 60, scope: !7229)
!7232 = !DILocation(line: 874, column: 64, scope: !7229)
!7233 = !DILocation(line: 874, column: 68, scope: !7229)
!7234 = !DILocation(line: 874, column: 63, scope: !7229)
!7235 = !DILocation(line: 874, column: 10, scope: !7230)
!7236 = !DILocation(line: 875, column: 24, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 874, column: 83)
!7238 = !DILocation(line: 875, column: 29, scope: !7237)
!7239 = !DILocation(line: 875, column: 36, scope: !7237)
!7240 = !DILocation(line: 875, column: 73, scope: !7237)
!7241 = !DILocation(line: 875, column: 78, scope: !7237)
!7242 = !DILocation(line: 875, column: 7, scope: !7237)
!7243 = !DILocation(line: 876, column: 11, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 876, column: 11)
!7245 = !DILocation(line: 876, column: 16, scope: !7244)
!7246 = !DILocation(line: 876, column: 21, scope: !7244)
!7247 = !DILocation(line: 876, column: 11, scope: !7237)
!7248 = !DILocation(line: 877, column: 8, scope: !7244)
!7249 = !DILocation(line: 877, column: 15, scope: !7244)
!7250 = !DILocation(line: 877, column: 31, scope: !7244)
!7251 = !DILocation(line: 878, column: 6, scope: !7237)
!7252 = !DILocation(line: 880, column: 24, scope: !7229)
!7253 = !DILocation(line: 880, column: 29, scope: !7229)
!7254 = !DILocation(line: 880, column: 36, scope: !7229)
!7255 = !DILocation(line: 880, column: 56, scope: !7229)
!7256 = !DILocation(line: 880, column: 61, scope: !7229)
!7257 = !DILocation(line: 880, column: 7, scope: !7229)
!7258 = !DILocation(line: 882, column: 15, scope: !7204)
!7259 = !DILocation(line: 883, column: 4, scope: !7204)
!7260 = !DILocation(line: 862, column: 38, scope: !7201)
!7261 = !DILocation(line: 862, column: 42, scope: !7201)
!7262 = !DILocation(line: 862, column: 36, scope: !7201)
!7263 = !DILocation(line: 862, column: 4, scope: !7201)
!7264 = distinct !{!7264, !7202, !7265}
!7265 = !DILocation(line: 883, column: 4, scope: !7196)
!7266 = !DILocation(line: 885, column: 8, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 885, column: 8)
!7268 = !DILocation(line: 885, column: 13, scope: !7267)
!7269 = !DILocation(line: 885, column: 8, scope: !7192)
!7270 = !DILocation(line: 886, column: 5, scope: !7267)
!7271 = !DILocation(line: 886, column: 10, scope: !7267)
!7272 = !DILocation(line: 886, column: 35, scope: !7267)
!7273 = !DILocation(line: 887, column: 3, scope: !7192)
!7274 = !DILocation(line: 888, column: 2, scope: !7095)
!7275 = !DILocation(line: 825, column: 47, scope: !7092)
!7276 = !DILocation(line: 825, column: 52, scope: !7092)
!7277 = !DILocation(line: 825, column: 45, scope: !7092)
!7278 = !DILocation(line: 825, column: 2, scope: !7092)
!7279 = distinct !{!7279, !7093, !7280}
!7280 = !DILocation(line: 888, column: 2, scope: !7086)
!7281 = !DILocation(line: 890, column: 6, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 890, column: 6)
!7283 = !DILocation(line: 890, column: 16, scope: !7282)
!7284 = !DILocation(line: 890, column: 6, scope: !5665)
!7285 = !DILocation(line: 891, column: 20, scope: !7282)
!7286 = !DILocation(line: 891, column: 25, scope: !7282)
!7287 = !DILocation(line: 891, column: 36, scope: !7282)
!7288 = !DILocation(line: 891, column: 3, scope: !7282)
!7289 = !DILocation(line: 892, column: 1, scope: !5665)
!7290 = distinct !DISubprogram(name: "build_dag_group", scope: !3, file: !3, line: 894, type: !7291, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{null, !5278, !4397, !4663, !7293, !387}
!7293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7294, size: 64)
!7294 = !DIDerivedType(tag: DW_TAG_typedef, name: "Group", file: !3055, line: 61, baseType: !3054)
!7295 = !DILocalVariable(name: "dag", arg: 1, scope: !7290, file: !3, line: 894, type: !5278)
!7296 = !DILocation(line: 894, column: 40, scope: !7290)
!7297 = !DILocalVariable(name: "scenenode", arg: 2, scope: !7290, file: !3, line: 894, type: !4397)
!7298 = !DILocation(line: 894, column: 54, scope: !7290)
!7299 = !DILocalVariable(name: "scene", arg: 3, scope: !7290, file: !3, line: 894, type: !4663)
!7300 = !DILocation(line: 894, column: 72, scope: !7290)
!7301 = !DILocalVariable(name: "group", arg: 4, scope: !7290, file: !3, line: 894, type: !7293)
!7302 = !DILocation(line: 894, column: 86, scope: !7290)
!7303 = !DILocalVariable(name: "mask", arg: 5, scope: !7290, file: !3, line: 894, type: !387)
!7304 = !DILocation(line: 894, column: 99, scope: !7290)
!7305 = !DILocalVariable(name: "go", scope: !7290, file: !3, line: 896, type: !4527)
!7306 = !DILocation(line: 896, column: 15, scope: !7290)
!7307 = !DILocation(line: 898, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 898, column: 6)
!7309 = !DILocation(line: 898, column: 13, scope: !7308)
!7310 = !DILocation(line: 898, column: 16, scope: !7308)
!7311 = !DILocation(line: 898, column: 21, scope: !7308)
!7312 = !DILocation(line: 898, column: 6, scope: !7290)
!7313 = !DILocation(line: 899, column: 3, scope: !7308)
!7314 = !DILocation(line: 901, column: 2, scope: !7290)
!7315 = !DILocation(line: 901, column: 9, scope: !7290)
!7316 = !DILocation(line: 901, column: 12, scope: !7290)
!7317 = !DILocation(line: 901, column: 17, scope: !7290)
!7318 = !DILocation(line: 903, column: 12, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 903, column: 2)
!7320 = !DILocation(line: 903, column: 19, scope: !7319)
!7321 = !DILocation(line: 903, column: 27, scope: !7319)
!7322 = !DILocation(line: 903, column: 10, scope: !7319)
!7323 = !DILocation(line: 903, column: 7, scope: !7319)
!7324 = !DILocation(line: 903, column: 34, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 903, column: 2)
!7326 = !DILocation(line: 903, column: 2, scope: !7319)
!7327 = !DILocation(line: 904, column: 20, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 903, column: 53)
!7329 = !DILocation(line: 904, column: 25, scope: !7328)
!7330 = !DILocation(line: 904, column: 36, scope: !7328)
!7331 = !DILocation(line: 904, column: 43, scope: !7328)
!7332 = !DILocation(line: 904, column: 47, scope: !7328)
!7333 = !DILocation(line: 904, column: 51, scope: !7328)
!7334 = !DILocation(line: 904, column: 3, scope: !7328)
!7335 = !DILocation(line: 905, column: 7, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 905, column: 7)
!7337 = !DILocation(line: 905, column: 11, scope: !7336)
!7338 = !DILocation(line: 905, column: 15, scope: !7336)
!7339 = !DILocation(line: 905, column: 7, scope: !7328)
!7340 = !DILocation(line: 906, column: 20, scope: !7336)
!7341 = !DILocation(line: 906, column: 25, scope: !7336)
!7342 = !DILocation(line: 906, column: 36, scope: !7336)
!7343 = !DILocation(line: 906, column: 43, scope: !7336)
!7344 = !DILocation(line: 906, column: 47, scope: !7336)
!7345 = !DILocation(line: 906, column: 51, scope: !7336)
!7346 = !DILocation(line: 906, column: 62, scope: !7336)
!7347 = !DILocation(line: 906, column: 4, scope: !7336)
!7348 = !DILocation(line: 907, column: 2, scope: !7328)
!7349 = !DILocation(line: 903, column: 43, scope: !7325)
!7350 = !DILocation(line: 903, column: 47, scope: !7325)
!7351 = !DILocation(line: 903, column: 41, scope: !7325)
!7352 = !DILocation(line: 903, column: 2, scope: !7325)
!7353 = distinct !{!7353, !7326, !7354}
!7354 = !DILocation(line: 907, column: 2, scope: !7319)
!7355 = !DILocation(line: 908, column: 1, scope: !7290)
!7356 = distinct !DISubprogram(name: "dag_find_node", scope: !3, file: !3, line: 1018, type: !5585, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7357 = !DILocalVariable(name: "forest", arg: 1, scope: !7356, file: !3, line: 1018, type: !5278)
!7358 = !DILocation(line: 1018, column: 35, scope: !7356)
!7359 = !DILocalVariable(name: "fob", arg: 2, scope: !7356, file: !3, line: 1018, type: !348)
!7360 = !DILocation(line: 1018, column: 49, scope: !7356)
!7361 = !DILocation(line: 1020, column: 6, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1020, column: 6)
!7363 = !DILocation(line: 1020, column: 14, scope: !7362)
!7364 = !DILocation(line: 1020, column: 6, scope: !7356)
!7365 = !DILocation(line: 1021, column: 27, scope: !7362)
!7366 = !DILocation(line: 1021, column: 35, scope: !7362)
!7367 = !DILocation(line: 1021, column: 45, scope: !7362)
!7368 = !DILocation(line: 1021, column: 10, scope: !7362)
!7369 = !DILocation(line: 1021, column: 3, scope: !7362)
!7370 = !DILocation(line: 1023, column: 2, scope: !7356)
!7371 = !DILocation(line: 1024, column: 1, scope: !7356)
!7372 = distinct !DISubprogram(name: "dag_get_node", scope: !3, file: !3, line: 1058, type: !5585, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7373 = !DILocalVariable(name: "forest", arg: 1, scope: !7372, file: !3, line: 1058, type: !5278)
!7374 = !DILocation(line: 1058, column: 34, scope: !7372)
!7375 = !DILocalVariable(name: "fob", arg: 2, scope: !7372, file: !3, line: 1058, type: !348)
!7376 = !DILocation(line: 1058, column: 48, scope: !7372)
!7377 = !DILocalVariable(name: "node", scope: !7372, file: !3, line: 1060, type: !4397)
!7378 = !DILocation(line: 1060, column: 11, scope: !7372)
!7379 = !DILocation(line: 1062, column: 23, scope: !7372)
!7380 = !DILocation(line: 1062, column: 31, scope: !7372)
!7381 = !DILocation(line: 1062, column: 9, scope: !7372)
!7382 = !DILocation(line: 1062, column: 7, scope: !7372)
!7383 = !DILocation(line: 1063, column: 7, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 1063, column: 6)
!7385 = !DILocation(line: 1063, column: 6, scope: !7372)
!7386 = !DILocation(line: 1064, column: 23, scope: !7384)
!7387 = !DILocation(line: 1064, column: 31, scope: !7384)
!7388 = !DILocation(line: 1064, column: 10, scope: !7384)
!7389 = !DILocation(line: 1064, column: 8, scope: !7384)
!7390 = !DILocation(line: 1064, column: 3, scope: !7384)
!7391 = !DILocation(line: 1065, column: 9, scope: !7372)
!7392 = !DILocation(line: 1065, column: 2, scope: !7372)
!7393 = distinct !DISubprogram(name: "dag_get_sub_node", scope: !3, file: !3, line: 1070, type: !5585, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7394 = !DILocalVariable(name: "forest", arg: 1, scope: !7393, file: !3, line: 1070, type: !5278)
!7395 = !DILocation(line: 1070, column: 38, scope: !7393)
!7396 = !DILocalVariable(name: "fob", arg: 2, scope: !7393, file: !3, line: 1070, type: !348)
!7397 = !DILocation(line: 1070, column: 52, scope: !7393)
!7398 = !DILocalVariable(name: "node", scope: !7393, file: !3, line: 1072, type: !4397)
!7399 = !DILocation(line: 1072, column: 11, scope: !7393)
!7400 = !DILocalVariable(name: "mainchild", scope: !7393, file: !3, line: 1073, type: !5311)
!7401 = !DILocation(line: 1073, column: 14, scope: !7393)
!7402 = !DILocalVariable(name: "prev", scope: !7393, file: !3, line: 1073, type: !5311)
!7403 = !DILocation(line: 1073, column: 26, scope: !7393)
!7404 = !DILocation(line: 1075, column: 27, scope: !7393)
!7405 = !DILocation(line: 1075, column: 35, scope: !7393)
!7406 = !DILocation(line: 1075, column: 43, scope: !7393)
!7407 = !DILocation(line: 1075, column: 15, scope: !7393)
!7408 = !DILocation(line: 1075, column: 51, scope: !7393)
!7409 = !DILocation(line: 1075, column: 12, scope: !7393)
!7410 = !DILocation(line: 1077, column: 2, scope: !7393)
!7411 = !DILocation(line: 1077, column: 9, scope: !7393)
!7412 = !DILocation(line: 1078, column: 7, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 1078, column: 7)
!7414 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 1077, column: 20)
!7415 = !DILocation(line: 1078, column: 18, scope: !7413)
!7416 = !DILocation(line: 1078, column: 26, scope: !7413)
!7417 = !DILocation(line: 1078, column: 23, scope: !7413)
!7418 = !DILocation(line: 1078, column: 7, scope: !7414)
!7419 = !DILocation(line: 1079, column: 8, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1079, column: 8)
!7421 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 1078, column: 31)
!7422 = !DILocation(line: 1079, column: 8, scope: !7421)
!7423 = !DILocation(line: 1080, column: 18, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1079, column: 14)
!7425 = !DILocation(line: 1080, column: 29, scope: !7424)
!7426 = !DILocation(line: 1080, column: 5, scope: !7424)
!7427 = !DILocation(line: 1080, column: 11, scope: !7424)
!7428 = !DILocation(line: 1080, column: 16, scope: !7424)
!7429 = !DILocation(line: 1081, column: 5, scope: !7424)
!7430 = !DILocation(line: 1081, column: 15, scope: !7424)
!7431 = !DILocation(line: 1082, column: 5, scope: !7424)
!7432 = !DILocation(line: 1085, column: 50, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1084, column: 9)
!7434 = !DILocation(line: 1085, column: 61, scope: !7433)
!7435 = !DILocation(line: 1085, column: 18, scope: !7433)
!7436 = !DILocation(line: 1085, column: 26, scope: !7433)
!7437 = !DILocation(line: 1085, column: 34, scope: !7433)
!7438 = !DILocation(line: 1085, column: 6, scope: !7433)
!7439 = !DILocation(line: 1085, column: 42, scope: !7433)
!7440 = !DILocation(line: 1085, column: 48, scope: !7433)
!7441 = !DILocation(line: 1086, column: 5, scope: !7433)
!7442 = !DILocation(line: 1086, column: 15, scope: !7433)
!7443 = !DILocation(line: 1087, column: 5, scope: !7433)
!7444 = !DILocation(line: 1090, column: 10, scope: !7414)
!7445 = !DILocation(line: 1090, column: 8, scope: !7414)
!7446 = !DILocation(line: 1091, column: 15, scope: !7414)
!7447 = !DILocation(line: 1091, column: 26, scope: !7414)
!7448 = !DILocation(line: 1091, column: 13, scope: !7414)
!7449 = distinct !{!7449, !7410, !7450}
!7450 = !DILocation(line: 1092, column: 2, scope: !7393)
!7451 = !DILocation(line: 1093, column: 23, scope: !7393)
!7452 = !DILocation(line: 1093, column: 31, scope: !7393)
!7453 = !DILocation(line: 1093, column: 9, scope: !7393)
!7454 = !DILocation(line: 1093, column: 7, scope: !7393)
!7455 = !DILocation(line: 1094, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 1094, column: 6)
!7457 = !DILocation(line: 1094, column: 6, scope: !7393)
!7458 = !DILocation(line: 1095, column: 23, scope: !7456)
!7459 = !DILocation(line: 1095, column: 31, scope: !7456)
!7460 = !DILocation(line: 1095, column: 10, scope: !7456)
!7461 = !DILocation(line: 1095, column: 8, scope: !7456)
!7462 = !DILocation(line: 1095, column: 3, scope: !7456)
!7463 = !DILocation(line: 1096, column: 9, scope: !7393)
!7464 = !DILocation(line: 1096, column: 2, scope: !7393)
!7465 = distinct !DISubprogram(name: "dag_add_relation", scope: !3, file: !3, line: 1121, type: !7466, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{null, !5278, !4397, !4397, !387, !799}
!7468 = !DILocalVariable(name: "forest", arg: 1, scope: !7465, file: !3, line: 1121, type: !5278)
!7469 = !DILocation(line: 1121, column: 34, scope: !7465)
!7470 = !DILocalVariable(name: "fob1", arg: 2, scope: !7465, file: !3, line: 1121, type: !4397)
!7471 = !DILocation(line: 1121, column: 51, scope: !7465)
!7472 = !DILocalVariable(name: "fob2", arg: 3, scope: !7465, file: !3, line: 1121, type: !4397)
!7473 = !DILocation(line: 1121, column: 66, scope: !7465)
!7474 = !DILocalVariable(name: "rel", arg: 4, scope: !7465, file: !3, line: 1121, type: !387)
!7475 = !DILocation(line: 1121, column: 78, scope: !7465)
!7476 = !DILocalVariable(name: "name", arg: 5, scope: !7465, file: !3, line: 1121, type: !799)
!7477 = !DILocation(line: 1121, column: 95, scope: !7465)
!7478 = !DILocalVariable(name: "itA", scope: !7465, file: !3, line: 1123, type: !5311)
!7479 = !DILocation(line: 1123, column: 14, scope: !7465)
!7480 = !DILocation(line: 1123, column: 20, scope: !7465)
!7481 = !DILocation(line: 1123, column: 26, scope: !7465)
!7482 = !DILocation(line: 1126, column: 26, scope: !7465)
!7483 = !DILocation(line: 1126, column: 34, scope: !7465)
!7484 = !DILocation(line: 1126, column: 40, scope: !7465)
!7485 = !DILocation(line: 1126, column: 46, scope: !7465)
!7486 = !DILocation(line: 1126, column: 51, scope: !7465)
!7487 = !DILocation(line: 1126, column: 2, scope: !7465)
!7488 = !DILocation(line: 1128, column: 2, scope: !7465)
!7489 = !DILocation(line: 1128, column: 9, scope: !7465)
!7490 = !DILocation(line: 1129, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1129, column: 7)
!7492 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1128, column: 14)
!7493 = !DILocation(line: 1129, column: 12, scope: !7491)
!7494 = !DILocation(line: 1129, column: 20, scope: !7491)
!7495 = !DILocation(line: 1129, column: 17, scope: !7491)
!7496 = !DILocation(line: 1129, column: 7, scope: !7492)
!7497 = !DILocation(line: 1130, column: 17, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1129, column: 26)
!7499 = !DILocation(line: 1130, column: 4, scope: !7498)
!7500 = !DILocation(line: 1130, column: 9, scope: !7498)
!7501 = !DILocation(line: 1130, column: 14, scope: !7498)
!7502 = !DILocation(line: 1131, column: 4, scope: !7498)
!7503 = !DILocation(line: 1131, column: 9, scope: !7498)
!7504 = !DILocation(line: 1131, column: 15, scope: !7498)
!7505 = !DILocation(line: 1132, column: 4, scope: !7498)
!7506 = !DILocation(line: 1134, column: 9, scope: !7492)
!7507 = !DILocation(line: 1134, column: 14, scope: !7492)
!7508 = !DILocation(line: 1134, column: 7, scope: !7492)
!7509 = distinct !{!7509, !7488, !7510}
!7510 = !DILocation(line: 1135, column: 2, scope: !7465)
!7511 = !DILocation(line: 1137, column: 8, scope: !7465)
!7512 = !DILocation(line: 1137, column: 6, scope: !7465)
!7513 = !DILocation(line: 1138, column: 14, scope: !7465)
!7514 = !DILocation(line: 1138, column: 2, scope: !7465)
!7515 = !DILocation(line: 1138, column: 7, scope: !7465)
!7516 = !DILocation(line: 1138, column: 12, scope: !7465)
!7517 = !DILocation(line: 1139, column: 14, scope: !7465)
!7518 = !DILocation(line: 1139, column: 2, scope: !7465)
!7519 = !DILocation(line: 1139, column: 7, scope: !7465)
!7520 = !DILocation(line: 1139, column: 12, scope: !7465)
!7521 = !DILocation(line: 1140, column: 2, scope: !7465)
!7522 = !DILocation(line: 1140, column: 7, scope: !7465)
!7523 = !DILocation(line: 1140, column: 13, scope: !7465)
!7524 = !DILocation(line: 1141, column: 14, scope: !7465)
!7525 = !DILocation(line: 1141, column: 20, scope: !7465)
!7526 = !DILocation(line: 1141, column: 2, scope: !7465)
!7527 = !DILocation(line: 1141, column: 7, scope: !7465)
!7528 = !DILocation(line: 1141, column: 12, scope: !7465)
!7529 = !DILocation(line: 1142, column: 14, scope: !7465)
!7530 = !DILocation(line: 1142, column: 2, scope: !7465)
!7531 = !DILocation(line: 1142, column: 7, scope: !7465)
!7532 = !DILocation(line: 1142, column: 12, scope: !7465)
!7533 = !DILocation(line: 1143, column: 16, scope: !7465)
!7534 = !DILocation(line: 1143, column: 2, scope: !7465)
!7535 = !DILocation(line: 1143, column: 8, scope: !7465)
!7536 = !DILocation(line: 1143, column: 14, scope: !7465)
!7537 = !DILocation(line: 1144, column: 1, scope: !7465)
!7538 = distinct !DISubprogram(name: "dag_add_parent_relation", scope: !3, file: !3, line: 1099, type: !7466, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7539 = !DILocalVariable(name: "UNUSED_forest", arg: 1, scope: !7538, file: !3, line: 1099, type: !5278)
!7540 = !DILocation(line: 1099, column: 48, scope: !7538)
!7541 = !DILocalVariable(name: "fob1", arg: 2, scope: !7538, file: !3, line: 1099, type: !4397)
!7542 = !DILocation(line: 1099, column: 73, scope: !7538)
!7543 = !DILocalVariable(name: "fob2", arg: 3, scope: !7538, file: !3, line: 1099, type: !4397)
!7544 = !DILocation(line: 1099, column: 88, scope: !7538)
!7545 = !DILocalVariable(name: "rel", arg: 4, scope: !7538, file: !3, line: 1099, type: !387)
!7546 = !DILocation(line: 1099, column: 100, scope: !7538)
!7547 = !DILocalVariable(name: "name", arg: 5, scope: !7538, file: !3, line: 1099, type: !799)
!7548 = !DILocation(line: 1099, column: 117, scope: !7538)
!7549 = !DILocalVariable(name: "itA", scope: !7538, file: !3, line: 1101, type: !5311)
!7550 = !DILocation(line: 1101, column: 14, scope: !7538)
!7551 = !DILocation(line: 1101, column: 20, scope: !7538)
!7552 = !DILocation(line: 1101, column: 26, scope: !7538)
!7553 = !DILocation(line: 1103, column: 2, scope: !7538)
!7554 = !DILocation(line: 1103, column: 9, scope: !7538)
!7555 = !DILocation(line: 1104, column: 7, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 1104, column: 7)
!7557 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1103, column: 14)
!7558 = !DILocation(line: 1104, column: 12, scope: !7556)
!7559 = !DILocation(line: 1104, column: 20, scope: !7556)
!7560 = !DILocation(line: 1104, column: 17, scope: !7556)
!7561 = !DILocation(line: 1104, column: 7, scope: !7557)
!7562 = !DILocation(line: 1105, column: 17, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1104, column: 26)
!7564 = !DILocation(line: 1105, column: 4, scope: !7563)
!7565 = !DILocation(line: 1105, column: 9, scope: !7563)
!7566 = !DILocation(line: 1105, column: 14, scope: !7563)
!7567 = !DILocation(line: 1106, column: 4, scope: !7563)
!7568 = !DILocation(line: 1106, column: 9, scope: !7563)
!7569 = !DILocation(line: 1106, column: 15, scope: !7563)
!7570 = !DILocation(line: 1107, column: 4, scope: !7563)
!7571 = !DILocation(line: 1109, column: 9, scope: !7557)
!7572 = !DILocation(line: 1109, column: 14, scope: !7557)
!7573 = !DILocation(line: 1109, column: 7, scope: !7557)
!7574 = distinct !{!7574, !7553, !7575}
!7575 = !DILocation(line: 1110, column: 2, scope: !7538)
!7576 = !DILocation(line: 1112, column: 8, scope: !7538)
!7577 = !DILocation(line: 1112, column: 6, scope: !7538)
!7578 = !DILocation(line: 1113, column: 14, scope: !7538)
!7579 = !DILocation(line: 1113, column: 2, scope: !7538)
!7580 = !DILocation(line: 1113, column: 7, scope: !7538)
!7581 = !DILocation(line: 1113, column: 12, scope: !7538)
!7582 = !DILocation(line: 1114, column: 14, scope: !7538)
!7583 = !DILocation(line: 1114, column: 2, scope: !7538)
!7584 = !DILocation(line: 1114, column: 7, scope: !7538)
!7585 = !DILocation(line: 1114, column: 12, scope: !7538)
!7586 = !DILocation(line: 1115, column: 2, scope: !7538)
!7587 = !DILocation(line: 1115, column: 7, scope: !7538)
!7588 = !DILocation(line: 1115, column: 13, scope: !7538)
!7589 = !DILocation(line: 1116, column: 14, scope: !7538)
!7590 = !DILocation(line: 1116, column: 20, scope: !7538)
!7591 = !DILocation(line: 1116, column: 2, scope: !7538)
!7592 = !DILocation(line: 1116, column: 7, scope: !7538)
!7593 = !DILocation(line: 1116, column: 12, scope: !7538)
!7594 = !DILocation(line: 1117, column: 14, scope: !7538)
!7595 = !DILocation(line: 1117, column: 2, scope: !7538)
!7596 = !DILocation(line: 1117, column: 7, scope: !7538)
!7597 = !DILocation(line: 1117, column: 12, scope: !7538)
!7598 = !DILocation(line: 1118, column: 17, scope: !7538)
!7599 = !DILocation(line: 1118, column: 2, scope: !7538)
!7600 = !DILocation(line: 1118, column: 8, scope: !7538)
!7601 = !DILocation(line: 1118, column: 15, scope: !7538)
!7602 = !DILocation(line: 1119, column: 1, scope: !7538)
!7603 = distinct !DISubprogram(name: "graph_print_queue", scope: !3, file: !3, line: 1268, type: !4786, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7604 = !DILocalVariable(name: "nqueue", arg: 1, scope: !7603, file: !3, line: 1268, type: !4685)
!7605 = !DILocation(line: 1268, column: 38, scope: !7603)
!7606 = !DILocalVariable(name: "queueElem", scope: !7603, file: !3, line: 1270, type: !4690)
!7607 = !DILocation(line: 1270, column: 20, scope: !7603)
!7608 = !DILocation(line: 1272, column: 14, scope: !7603)
!7609 = !DILocation(line: 1272, column: 22, scope: !7603)
!7610 = !DILocation(line: 1272, column: 12, scope: !7603)
!7611 = !DILocation(line: 1273, column: 2, scope: !7603)
!7612 = !DILocation(line: 1273, column: 9, scope: !7603)
!7613 = !DILocation(line: 1274, column: 11, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 1273, column: 20)
!7615 = !DILocation(line: 1274, column: 46, scope: !7614)
!7616 = !DILocation(line: 1274, column: 57, scope: !7614)
!7617 = !DILocation(line: 1274, column: 63, scope: !7614)
!7618 = !DILocation(line: 1274, column: 39, scope: !7614)
!7619 = !DILocation(line: 1274, column: 68, scope: !7614)
!7620 = !DILocation(line: 1274, column: 38, scope: !7614)
!7621 = !DILocation(line: 1274, column: 74, scope: !7614)
!7622 = !DILocation(line: 1274, column: 85, scope: !7614)
!7623 = !DILocation(line: 1274, column: 91, scope: !7614)
!7624 = !DILocation(line: 1274, column: 98, scope: !7614)
!7625 = !DILocation(line: 1274, column: 109, scope: !7614)
!7626 = !DILocation(line: 1274, column: 115, scope: !7614)
!7627 = !DILocation(line: 1274, column: 125, scope: !7614)
!7628 = !DILocation(line: 1274, column: 136, scope: !7614)
!7629 = !DILocation(line: 1274, column: 142, scope: !7614)
!7630 = !DILocation(line: 1274, column: 3, scope: !7614)
!7631 = !DILocation(line: 1275, column: 15, scope: !7614)
!7632 = !DILocation(line: 1275, column: 26, scope: !7614)
!7633 = !DILocation(line: 1275, column: 13, scope: !7614)
!7634 = distinct !{!7634, !7611, !7635}
!7635 = !DILocation(line: 1276, column: 2, scope: !7603)
!7636 = !DILocation(line: 1277, column: 10, scope: !7603)
!7637 = !DILocation(line: 1277, column: 2, scope: !7603)
!7638 = !DILocation(line: 1278, column: 1, scope: !7603)
!7639 = distinct !DISubprogram(name: "graph_print_queue_dist", scope: !3, file: !3, line: 1280, type: !4786, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7640 = !DILocalVariable(name: "nqueue", arg: 1, scope: !7639, file: !3, line: 1280, type: !4685)
!7641 = !DILocation(line: 1280, column: 43, scope: !7639)
!7642 = !DILocalVariable(name: "queueElem", scope: !7639, file: !3, line: 1282, type: !4690)
!7643 = !DILocation(line: 1282, column: 20, scope: !7639)
!7644 = !DILocalVariable(name: "count", scope: !7639, file: !3, line: 1283, type: !389)
!7645 = !DILocation(line: 1283, column: 6, scope: !7639)
!7646 = !DILocation(line: 1285, column: 14, scope: !7639)
!7647 = !DILocation(line: 1285, column: 22, scope: !7639)
!7648 = !DILocation(line: 1285, column: 12, scope: !7639)
!7649 = !DILocation(line: 1286, column: 8, scope: !7639)
!7650 = !DILocation(line: 1287, column: 2, scope: !7639)
!7651 = !DILocation(line: 1287, column: 9, scope: !7639)
!7652 = !DILocation(line: 1288, column: 11, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 1287, column: 20)
!7654 = !DILocation(line: 1288, column: 51, scope: !7653)
!7655 = !DILocation(line: 1288, column: 62, scope: !7653)
!7656 = !DILocation(line: 1288, column: 68, scope: !7653)
!7657 = !DILocation(line: 1288, column: 44, scope: !7653)
!7658 = !DILocation(line: 1288, column: 73, scope: !7653)
!7659 = !DILocation(line: 1288, column: 43, scope: !7653)
!7660 = !DILocation(line: 1288, column: 79, scope: !7653)
!7661 = !DILocation(line: 1288, column: 90, scope: !7653)
!7662 = !DILocation(line: 1288, column: 96, scope: !7653)
!7663 = !DILocation(line: 1288, column: 106, scope: !7653)
!7664 = !DILocation(line: 1288, column: 117, scope: !7653)
!7665 = !DILocation(line: 1288, column: 123, scope: !7653)
!7666 = !DILocation(line: 1288, column: 3, scope: !7653)
!7667 = !DILocation(line: 1289, column: 3, scope: !7653)
!7668 = !DILocation(line: 1289, column: 10, scope: !7653)
!7669 = !DILocation(line: 1289, column: 18, scope: !7653)
!7670 = !DILocation(line: 1289, column: 29, scope: !7653)
!7671 = !DILocation(line: 1289, column: 35, scope: !7653)
!7672 = !DILocation(line: 1289, column: 44, scope: !7653)
!7673 = !DILocation(line: 1289, column: 16, scope: !7653)
!7674 = !DILocation(line: 1289, column: 62, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 1289, column: 49)
!7676 = !DILocation(line: 1289, column: 51, scope: !7675)
!7677 = !DILocation(line: 1289, column: 76, scope: !7675)
!7678 = distinct !{!7678, !7667, !7679}
!7679 = !DILocation(line: 1289, column: 80, scope: !7653)
!7680 = !DILocation(line: 1290, column: 14, scope: !7653)
!7681 = !DILocation(line: 1290, column: 3, scope: !7653)
!7682 = !DILocation(line: 1291, column: 3, scope: !7653)
!7683 = !DILocation(line: 1291, column: 10, scope: !7653)
!7684 = !DILocation(line: 1291, column: 18, scope: !7653)
!7685 = !DILocation(line: 1291, column: 29, scope: !7653)
!7686 = !DILocation(line: 1291, column: 35, scope: !7653)
!7687 = !DILocation(line: 1291, column: 44, scope: !7653)
!7688 = !DILocation(line: 1291, column: 16, scope: !7653)
!7689 = !DILocation(line: 1291, column: 62, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 1291, column: 49)
!7691 = !DILocation(line: 1291, column: 51, scope: !7690)
!7692 = !DILocation(line: 1291, column: 76, scope: !7690)
!7693 = distinct !{!7693, !7682, !7694}
!7694 = !DILocation(line: 1291, column: 80, scope: !7653)
!7695 = !DILocation(line: 1292, column: 14, scope: !7653)
!7696 = !DILocation(line: 1292, column: 3, scope: !7653)
!7697 = !DILocation(line: 1293, column: 15, scope: !7653)
!7698 = !DILocation(line: 1293, column: 3, scope: !7653)
!7699 = !DILocation(line: 1294, column: 9, scope: !7653)
!7700 = !DILocation(line: 1295, column: 15, scope: !7653)
!7701 = !DILocation(line: 1295, column: 26, scope: !7653)
!7702 = !DILocation(line: 1295, column: 13, scope: !7653)
!7703 = distinct !{!7703, !7650, !7704}
!7704 = !DILocation(line: 1296, column: 2, scope: !7639)
!7705 = !DILocation(line: 1297, column: 10, scope: !7639)
!7706 = !DILocation(line: 1297, column: 2, scope: !7639)
!7707 = !DILocation(line: 1298, column: 1, scope: !7639)
!7708 = distinct !DISubprogram(name: "graph_print_adj_list", scope: !3, file: !3, line: 1300, type: !5509, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7709 = !DILocalVariable(name: "dag", arg: 1, scope: !7708, file: !3, line: 1300, type: !5278)
!7710 = !DILocation(line: 1300, column: 38, scope: !7708)
!7711 = !DILocalVariable(name: "node", scope: !7708, file: !3, line: 1302, type: !4397)
!7712 = !DILocation(line: 1302, column: 11, scope: !7708)
!7713 = !DILocalVariable(name: "itA", scope: !7708, file: !3, line: 1303, type: !5311)
!7714 = !DILocation(line: 1303, column: 14, scope: !7708)
!7715 = !DILocation(line: 1305, column: 9, scope: !7708)
!7716 = !DILocation(line: 1305, column: 14, scope: !7708)
!7717 = !DILocation(line: 1305, column: 22, scope: !7708)
!7718 = !DILocation(line: 1305, column: 7, scope: !7708)
!7719 = !DILocation(line: 1306, column: 2, scope: !7708)
!7720 = !DILocation(line: 1306, column: 9, scope: !7708)
!7721 = !DILocation(line: 1307, column: 11, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 1306, column: 15)
!7723 = !DILocation(line: 1307, column: 48, scope: !7722)
!7724 = !DILocation(line: 1307, column: 54, scope: !7722)
!7725 = !DILocation(line: 1307, column: 41, scope: !7722)
!7726 = !DILocation(line: 1307, column: 59, scope: !7722)
!7727 = !DILocation(line: 1307, column: 40, scope: !7722)
!7728 = !DILocation(line: 1307, column: 65, scope: !7722)
!7729 = !DILocation(line: 1307, column: 71, scope: !7722)
!7730 = !DILocation(line: 1307, column: 3, scope: !7722)
!7731 = !DILocation(line: 1308, column: 9, scope: !7722)
!7732 = !DILocation(line: 1308, column: 15, scope: !7722)
!7733 = !DILocation(line: 1308, column: 7, scope: !7722)
!7734 = !DILocation(line: 1309, column: 3, scope: !7722)
!7735 = !DILocation(line: 1309, column: 10, scope: !7722)
!7736 = !DILocation(line: 1310, column: 12, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1309, column: 15)
!7738 = !DILocation(line: 1310, column: 38, scope: !7737)
!7739 = !DILocation(line: 1310, column: 43, scope: !7737)
!7740 = !DILocation(line: 1310, column: 49, scope: !7737)
!7741 = !DILocation(line: 1310, column: 31, scope: !7737)
!7742 = !DILocation(line: 1310, column: 54, scope: !7737)
!7743 = !DILocation(line: 1310, column: 30, scope: !7737)
!7744 = !DILocation(line: 1310, column: 4, scope: !7737)
!7745 = !DILocation(line: 1312, column: 10, scope: !7737)
!7746 = !DILocation(line: 1312, column: 15, scope: !7737)
!7747 = !DILocation(line: 1312, column: 8, scope: !7737)
!7748 = distinct !{!7748, !7734, !7749}
!7749 = !DILocation(line: 1313, column: 3, scope: !7722)
!7750 = !DILocation(line: 1314, column: 11, scope: !7722)
!7751 = !DILocation(line: 1314, column: 3, scope: !7722)
!7752 = !DILocation(line: 1315, column: 10, scope: !7722)
!7753 = !DILocation(line: 1315, column: 16, scope: !7722)
!7754 = !DILocation(line: 1315, column: 8, scope: !7722)
!7755 = distinct !{!7755, !7719, !7756}
!7756 = !DILocation(line: 1316, column: 2, scope: !7708)
!7757 = !DILocation(line: 1317, column: 1, scope: !7708)
!7758 = distinct !DISubprogram(name: "DAG_editors_update_cb", scope: !3, file: !3, line: 1326, type: !7759, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{null, !4592, !4660}
!7761 = !DILocalVariable(name: "id_func", arg: 1, scope: !7758, file: !3, line: 1326, type: !4592)
!7762 = !DILocation(line: 1326, column: 35, scope: !7758)
!7763 = !DILocalVariable(name: "scene_func", arg: 2, scope: !7758, file: !3, line: 1326, type: !4660)
!7764 = !DILocation(line: 1326, column: 73, scope: !7758)
!7765 = !DILocation(line: 1328, column: 22, scope: !7758)
!7766 = !DILocation(line: 1328, column: 20, scope: !7758)
!7767 = !DILocation(line: 1329, column: 25, scope: !7758)
!7768 = !DILocation(line: 1329, column: 23, scope: !7758)
!7769 = !DILocation(line: 1330, column: 1, scope: !7758)
!7770 = distinct !DISubprogram(name: "DAG_relations_tag_update", scope: !3, file: !3, line: 1618, type: !7771, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{null, !4595}
!7773 = !DILocalVariable(name: "bmain", arg: 1, scope: !7770, file: !3, line: 1618, type: !4595)
!7774 = !DILocation(line: 1618, column: 37, scope: !7770)
!7775 = !DILocalVariable(name: "sce", scope: !7770, file: !3, line: 1620, type: !4663)
!7776 = !DILocation(line: 1620, column: 9, scope: !7770)
!7777 = !DILocation(line: 1622, column: 13, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 1622, column: 2)
!7779 = !DILocation(line: 1622, column: 20, scope: !7778)
!7780 = !DILocation(line: 1622, column: 26, scope: !7778)
!7781 = !DILocation(line: 1622, column: 11, scope: !7778)
!7782 = !DILocation(line: 1622, column: 7, scope: !7778)
!7783 = !DILocation(line: 1622, column: 33, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1622, column: 2)
!7785 = !DILocation(line: 1622, column: 2, scope: !7778)
!7786 = !DILocation(line: 1623, column: 18, scope: !7784)
!7787 = !DILocation(line: 1623, column: 3, scope: !7784)
!7788 = !DILocation(line: 1622, column: 44, scope: !7784)
!7789 = !DILocation(line: 1622, column: 49, scope: !7784)
!7790 = !DILocation(line: 1622, column: 52, scope: !7784)
!7791 = !DILocation(line: 1622, column: 42, scope: !7784)
!7792 = !DILocation(line: 1622, column: 2, scope: !7784)
!7793 = distinct !{!7793, !7785, !7794}
!7794 = !DILocation(line: 1623, column: 21, scope: !7778)
!7795 = !DILocation(line: 1624, column: 1, scope: !7770)
!7796 = distinct !DISubprogram(name: "dag_scene_free", scope: !3, file: !3, line: 1389, type: !7797, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{null, !4663}
!7799 = !DILocalVariable(name: "sce", arg: 1, scope: !7796, file: !3, line: 1389, type: !4663)
!7800 = !DILocation(line: 1389, column: 35, scope: !7796)
!7801 = !DILocation(line: 1391, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 1391, column: 6)
!7803 = !DILocation(line: 1391, column: 11, scope: !7802)
!7804 = !DILocation(line: 1391, column: 6, scope: !7796)
!7805 = !DILocation(line: 1392, column: 15, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1391, column: 19)
!7807 = !DILocation(line: 1392, column: 20, scope: !7806)
!7808 = !DILocation(line: 1392, column: 3, scope: !7806)
!7809 = !DILocation(line: 1393, column: 3, scope: !7806)
!7810 = !DILocation(line: 1393, column: 13, scope: !7806)
!7811 = !DILocation(line: 1393, column: 18, scope: !7806)
!7812 = !DILocation(line: 1394, column: 3, scope: !7806)
!7813 = !DILocation(line: 1394, column: 8, scope: !7806)
!7814 = !DILocation(line: 1394, column: 15, scope: !7806)
!7815 = !DILocation(line: 1395, column: 2, scope: !7806)
!7816 = !DILocation(line: 1396, column: 1, scope: !7796)
!7817 = distinct !DISubprogram(name: "DAG_scene_relations_rebuild", scope: !3, file: !3, line: 1627, type: !7818, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{null, !4595, !4663}
!7820 = !DILocalVariable(name: "bmain", arg: 1, scope: !7817, file: !3, line: 1627, type: !4595)
!7821 = !DILocation(line: 1627, column: 40, scope: !7817)
!7822 = !DILocalVariable(name: "sce", arg: 2, scope: !7817, file: !3, line: 1627, type: !4663)
!7823 = !DILocation(line: 1627, column: 54, scope: !7817)
!7824 = !DILocation(line: 1629, column: 17, scope: !7817)
!7825 = !DILocation(line: 1629, column: 2, scope: !7817)
!7826 = !DILocation(line: 1630, column: 29, scope: !7817)
!7827 = !DILocation(line: 1630, column: 36, scope: !7817)
!7828 = !DILocation(line: 1630, column: 2, scope: !7817)
!7829 = !DILocation(line: 1631, column: 1, scope: !7817)
!7830 = distinct !DISubprogram(name: "DAG_scene_relations_update", scope: !3, file: !3, line: 1634, type: !7818, scopeLine: 1635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7831 = !DILocalVariable(name: "bmain", arg: 1, scope: !7830, file: !3, line: 1634, type: !4595)
!7832 = !DILocation(line: 1634, column: 39, scope: !7830)
!7833 = !DILocalVariable(name: "sce", arg: 2, scope: !7830, file: !3, line: 1634, type: !4663)
!7834 = !DILocation(line: 1634, column: 53, scope: !7830)
!7835 = !DILocation(line: 1636, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 1636, column: 6)
!7837 = !DILocation(line: 1636, column: 12, scope: !7836)
!7838 = !DILocation(line: 1636, column: 6, scope: !7830)
!7839 = !DILocation(line: 1637, column: 19, scope: !7836)
!7840 = !DILocation(line: 1637, column: 26, scope: !7836)
!7841 = !DILocation(line: 1637, column: 3, scope: !7836)
!7842 = !DILocation(line: 1638, column: 1, scope: !7830)
!7843 = distinct !DISubprogram(name: "dag_scene_build", scope: !3, file: !3, line: 1517, type: !7818, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!7844 = !DILocalVariable(name: "bmain", arg: 1, scope: !7843, file: !3, line: 1517, type: !4595)
!7845 = !DILocation(line: 1517, column: 35, scope: !7843)
!7846 = !DILocalVariable(name: "sce", arg: 2, scope: !7843, file: !3, line: 1517, type: !4663)
!7847 = !DILocation(line: 1517, column: 49, scope: !7843)
!7848 = !DILocalVariable(name: "node", scope: !7843, file: !3, line: 1519, type: !4397)
!7849 = !DILocation(line: 1519, column: 11, scope: !7843)
!7850 = !DILocalVariable(name: "rootnode", scope: !7843, file: !3, line: 1519, type: !4397)
!7851 = !DILocation(line: 1519, column: 18, scope: !7843)
!7852 = !DILocalVariable(name: "nqueue", scope: !7843, file: !3, line: 1520, type: !4685)
!7853 = !DILocation(line: 1520, column: 16, scope: !7843)
!7854 = !DILocalVariable(name: "itA", scope: !7843, file: !3, line: 1521, type: !5311)
!7855 = !DILocation(line: 1521, column: 14, scope: !7843)
!7856 = !DILocalVariable(name: "time", scope: !7843, file: !3, line: 1522, type: !389)
!7857 = !DILocation(line: 1522, column: 6, scope: !7843)
!7858 = !DILocalVariable(name: "skip", scope: !7843, file: !3, line: 1523, type: !389)
!7859 = !DILocation(line: 1523, column: 6, scope: !7843)
!7860 = !DILocalVariable(name: "tempbase", scope: !7843, file: !3, line: 1524, type: !414)
!7861 = !DILocation(line: 1524, column: 11, scope: !7843)
!7862 = !DILocalVariable(name: "base", scope: !7843, file: !3, line: 1525, type: !5299)
!7863 = !DILocation(line: 1525, column: 8, scope: !7843)
!7864 = !DILocation(line: 1527, column: 2, scope: !7843)
!7865 = !DILocation(line: 1529, column: 12, scope: !7843)
!7866 = !DILocation(line: 1529, column: 19, scope: !7843)
!7867 = !DILocation(line: 1529, column: 2, scope: !7843)
!7868 = !DILocation(line: 1531, column: 18, scope: !7843)
!7869 = !DILocation(line: 1531, column: 23, scope: !7843)
!7870 = !DILocation(line: 1531, column: 2, scope: !7843)
!7871 = !DILocation(line: 1533, column: 11, scope: !7843)
!7872 = !DILocation(line: 1533, column: 9, scope: !7843)
!7873 = !DILocation(line: 1535, column: 14, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1535, column: 2)
!7875 = !DILocation(line: 1535, column: 19, scope: !7874)
!7876 = !DILocation(line: 1535, column: 27, scope: !7874)
!7877 = !DILocation(line: 1535, column: 35, scope: !7874)
!7878 = !DILocation(line: 1535, column: 12, scope: !7874)
!7879 = !DILocation(line: 1535, column: 7, scope: !7874)
!7880 = !DILocation(line: 1535, column: 42, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 1535, column: 2)
!7882 = !DILocation(line: 1535, column: 2, scope: !7874)
!7883 = !DILocation(line: 1536, column: 3, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 1535, column: 67)
!7885 = !DILocation(line: 1536, column: 9, scope: !7884)
!7886 = !DILocation(line: 1536, column: 15, scope: !7884)
!7887 = !DILocation(line: 1537, column: 2, scope: !7884)
!7888 = !DILocation(line: 1535, column: 55, scope: !7881)
!7889 = !DILocation(line: 1535, column: 61, scope: !7881)
!7890 = !DILocation(line: 1535, column: 53, scope: !7881)
!7891 = !DILocation(line: 1535, column: 2, scope: !7881)
!7892 = distinct !{!7892, !7882, !7893}
!7893 = !DILocation(line: 1537, column: 2, scope: !7874)
!7894 = !DILocation(line: 1539, column: 7, scope: !7843)
!7895 = !DILocation(line: 1541, column: 13, scope: !7843)
!7896 = !DILocation(line: 1541, column: 18, scope: !7843)
!7897 = !DILocation(line: 1541, column: 26, scope: !7843)
!7898 = !DILocation(line: 1541, column: 34, scope: !7843)
!7899 = !DILocation(line: 1541, column: 11, scope: !7843)
!7900 = !DILocation(line: 1542, column: 2, scope: !7843)
!7901 = !DILocation(line: 1542, column: 12, scope: !7843)
!7902 = !DILocation(line: 1542, column: 18, scope: !7843)
!7903 = !DILocation(line: 1543, column: 6, scope: !7843)
!7904 = !DILocation(line: 1544, column: 13, scope: !7843)
!7905 = !DILocation(line: 1544, column: 21, scope: !7843)
!7906 = !DILocation(line: 1544, column: 2, scope: !7843)
!7907 = !DILocation(line: 1546, column: 2, scope: !7843)
!7908 = !DILocation(line: 1546, column: 9, scope: !7843)
!7909 = !DILocation(line: 1546, column: 17, scope: !7843)
!7910 = !DILocation(line: 1548, column: 8, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1546, column: 24)
!7912 = !DILocation(line: 1549, column: 29, scope: !7911)
!7913 = !DILocation(line: 1549, column: 10, scope: !7911)
!7914 = !DILocation(line: 1549, column: 8, scope: !7911)
!7915 = !DILocation(line: 1551, column: 9, scope: !7911)
!7916 = !DILocation(line: 1551, column: 15, scope: !7911)
!7917 = !DILocation(line: 1551, column: 7, scope: !7911)
!7918 = !DILocation(line: 1552, column: 3, scope: !7911)
!7919 = !DILocation(line: 1552, column: 10, scope: !7911)
!7920 = !DILocation(line: 1552, column: 14, scope: !7911)
!7921 = !DILocation(line: 1553, column: 8, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 1553, column: 8)
!7923 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1552, column: 23)
!7924 = !DILocation(line: 1553, column: 13, scope: !7922)
!7925 = !DILocation(line: 1553, column: 19, scope: !7922)
!7926 = !DILocation(line: 1553, column: 25, scope: !7922)
!7927 = !DILocation(line: 1553, column: 8, scope: !7923)
!7928 = !DILocation(line: 1554, column: 27, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1553, column: 39)
!7930 = !DILocation(line: 1554, column: 5, scope: !7929)
!7931 = !DILocation(line: 1554, column: 10, scope: !7929)
!7932 = !DILocation(line: 1554, column: 16, scope: !7929)
!7933 = !DILocation(line: 1554, column: 25, scope: !7929)
!7934 = !DILocation(line: 1555, column: 5, scope: !7929)
!7935 = !DILocation(line: 1555, column: 10, scope: !7929)
!7936 = !DILocation(line: 1555, column: 16, scope: !7929)
!7937 = !DILocation(line: 1555, column: 22, scope: !7929)
!7938 = !DILocation(line: 1557, column: 9, scope: !7929)
!7939 = !DILocation(line: 1558, column: 16, scope: !7929)
!7940 = !DILocation(line: 1558, column: 24, scope: !7929)
!7941 = !DILocation(line: 1558, column: 29, scope: !7929)
!7942 = !DILocation(line: 1558, column: 5, scope: !7929)
!7943 = !DILocation(line: 1559, column: 10, scope: !7929)
!7944 = !DILocation(line: 1560, column: 5, scope: !7929)
!7945 = !DILocation(line: 1562, column: 10, scope: !7923)
!7946 = !DILocation(line: 1562, column: 15, scope: !7923)
!7947 = !DILocation(line: 1562, column: 8, scope: !7923)
!7948 = distinct !{!7948, !7918, !7949}
!7949 = !DILocation(line: 1563, column: 3, scope: !7911)
!7950 = !DILocation(line: 1565, column: 8, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1565, column: 7)
!7952 = !DILocation(line: 1565, column: 7, scope: !7911)
!7953 = !DILocation(line: 1566, column: 8, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 1566, column: 8)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 1565, column: 14)
!7956 = !DILocation(line: 1566, column: 8, scope: !7955)
!7957 = !DILocation(line: 1567, column: 22, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 1566, column: 14)
!7959 = !DILocation(line: 1567, column: 12, scope: !7958)
!7960 = !DILocation(line: 1567, column: 10, scope: !7958)
!7961 = !DILocation(line: 1568, column: 9, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 1568, column: 9)
!7963 = !DILocation(line: 1568, column: 15, scope: !7962)
!7964 = !DILocation(line: 1568, column: 21, scope: !7962)
!7965 = !DILocation(line: 1568, column: 18, scope: !7962)
!7966 = !DILocation(line: 1568, column: 9, scope: !7958)
!7967 = !DILocation(line: 1569, column: 6, scope: !7962)
!7968 = !DILocation(line: 1570, column: 5, scope: !7958)
!7969 = !DILocation(line: 1570, column: 11, scope: !7958)
!7970 = !DILocation(line: 1570, column: 17, scope: !7958)
!7971 = !DILocation(line: 1572, column: 9, scope: !7958)
!7972 = !DILocation(line: 1573, column: 12, scope: !7958)
!7973 = !DILocation(line: 1573, column: 17, scope: !7958)
!7974 = !DILocation(line: 1573, column: 22, scope: !7958)
!7975 = !DILocation(line: 1573, column: 10, scope: !7958)
!7976 = !DILocation(line: 1574, column: 5, scope: !7958)
!7977 = !DILocation(line: 1574, column: 12, scope: !7958)
!7978 = !DILocation(line: 1574, column: 17, scope: !7958)
!7979 = !DILocation(line: 1574, column: 20, scope: !7958)
!7980 = !DILocation(line: 1574, column: 26, scope: !7958)
!7981 = !DILocation(line: 1574, column: 36, scope: !7958)
!7982 = !DILocation(line: 1574, column: 42, scope: !7958)
!7983 = !DILocation(line: 1574, column: 33, scope: !7958)
!7984 = !DILocation(line: 0, scope: !7958)
!7985 = !DILocation(line: 1575, column: 13, scope: !7958)
!7986 = !DILocation(line: 1575, column: 19, scope: !7958)
!7987 = !DILocation(line: 1575, column: 11, scope: !7958)
!7988 = distinct !{!7988, !7976, !7986}
!7989 = !DILocation(line: 1576, column: 9, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 1576, column: 9)
!7991 = !DILocation(line: 1576, column: 9, scope: !7958)
!7992 = !DILocation(line: 1577, column: 19, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 1576, column: 15)
!7994 = !DILocation(line: 1577, column: 24, scope: !7993)
!7995 = !DILocation(line: 1577, column: 30, scope: !7993)
!7996 = !DILocation(line: 1577, column: 6, scope: !7993)
!7997 = !DILocation(line: 1578, column: 29, scope: !7993)
!7998 = !DILocation(line: 1578, column: 6, scope: !7993)
!7999 = !DILocation(line: 1579, column: 5, scope: !7993)
!8000 = !DILocation(line: 1580, column: 4, scope: !7958)
!8001 = !DILocation(line: 1581, column: 3, scope: !7955)
!8002 = distinct !{!8002, !7907, !8003}
!8003 = !DILocation(line: 1582, column: 2, scope: !7843)
!8004 = !DILocation(line: 1585, column: 9, scope: !7843)
!8005 = !DILocation(line: 1585, column: 14, scope: !7843)
!8006 = !DILocation(line: 1585, column: 19, scope: !7843)
!8007 = !DILocation(line: 1585, column: 7, scope: !7843)
!8008 = !DILocation(line: 1586, column: 2, scope: !7843)
!8009 = !DILocation(line: 1586, column: 9, scope: !7843)
!8010 = !DILocation(line: 1587, column: 16, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1586, column: 15)
!8012 = !DILocation(line: 1587, column: 21, scope: !8011)
!8013 = !DILocation(line: 1587, column: 27, scope: !8011)
!8014 = !DILocation(line: 1587, column: 3, scope: !8011)
!8015 = !DILocation(line: 1588, column: 26, scope: !8011)
!8016 = !DILocation(line: 1588, column: 3, scope: !8011)
!8017 = !DILocation(line: 1590, column: 25, scope: !8011)
!8018 = !DILocation(line: 1590, column: 31, scope: !8011)
!8019 = !DILocation(line: 1590, column: 39, scope: !8011)
!8020 = !DILocation(line: 1590, column: 42, scope: !8011)
!8021 = !DILocation(line: 1590, column: 3, scope: !8011)
!8022 = !DILocation(line: 1591, column: 10, scope: !8011)
!8023 = !DILocation(line: 1591, column: 15, scope: !8011)
!8024 = !DILocation(line: 1591, column: 20, scope: !8011)
!8025 = !DILocation(line: 1591, column: 8, scope: !8011)
!8026 = distinct !{!8026, !8008, !8027}
!8027 = !DILocation(line: 1592, column: 2, scope: !7843)
!8028 = !DILocation(line: 1594, column: 2, scope: !7843)
!8029 = !DILocation(line: 1594, column: 7, scope: !7843)
!8030 = !DILocation(line: 1594, column: 14, scope: !7843)
!8031 = !DILocation(line: 1595, column: 15, scope: !7843)
!8032 = !DILocation(line: 1595, column: 2, scope: !7843)
!8033 = !DILocation(line: 1598, column: 20, scope: !7843)
!8034 = !DILocation(line: 1598, column: 27, scope: !7843)
!8035 = !DILocation(line: 1598, column: 2, scope: !7843)
!8036 = !DILocation(line: 1600, column: 8, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1600, column: 6)
!8038 = !DILocation(line: 1600, column: 14, scope: !8037)
!8039 = !DILocation(line: 1600, column: 6, scope: !7843)
!8040 = !DILocation(line: 1601, column: 3, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1600, column: 25)
!8042 = !DILocation(line: 1602, column: 15, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1602, column: 3)
!8044 = !DILocation(line: 1602, column: 20, scope: !8043)
!8045 = !DILocation(line: 1602, column: 25, scope: !8043)
!8046 = !DILocation(line: 1602, column: 13, scope: !8043)
!8047 = !DILocation(line: 1602, column: 8, scope: !8043)
!8048 = !DILocation(line: 1602, column: 32, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 1602, column: 3)
!8050 = !DILocation(line: 1602, column: 3, scope: !8043)
!8051 = !DILocation(line: 1603, column: 20, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 1602, column: 57)
!8053 = !DILocation(line: 1603, column: 26, scope: !8052)
!8054 = !DILocation(line: 1603, column: 34, scope: !8052)
!8055 = !DILocation(line: 1603, column: 37, scope: !8052)
!8056 = !DILocation(line: 1603, column: 4, scope: !8052)
!8057 = !DILocation(line: 1604, column: 3, scope: !8052)
!8058 = !DILocation(line: 1602, column: 45, scope: !8049)
!8059 = !DILocation(line: 1602, column: 51, scope: !8049)
!8060 = !DILocation(line: 1602, column: 43, scope: !8049)
!8061 = !DILocation(line: 1602, column: 3, scope: !8049)
!8062 = distinct !{!8062, !8050, !8063}
!8063 = !DILocation(line: 1604, column: 3, scope: !8043)
!8064 = !DILocation(line: 1605, column: 2, scope: !8041)
!8065 = !DILocation(line: 1608, column: 2, scope: !7843)
!8066 = !DILocation(line: 1608, column: 7, scope: !7843)
!8067 = !DILocation(line: 1608, column: 14, scope: !7843)
!8068 = !DILocation(line: 1614, column: 41, scope: !7843)
!8069 = !DILocation(line: 1614, column: 48, scope: !7843)
!8070 = !DILocation(line: 1614, column: 2, scope: !7843)
!8071 = !DILocation(line: 1615, column: 1, scope: !7843)
!8072 = distinct !DISubprogram(name: "DAG_scene_free", scope: !3, file: !3, line: 1640, type: !7797, scopeLine: 1641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8073 = !DILocalVariable(name: "sce", arg: 1, scope: !8072, file: !3, line: 1640, type: !4663)
!8074 = !DILocation(line: 1640, column: 28, scope: !8072)
!8075 = !DILocation(line: 1642, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 1642, column: 6)
!8077 = !DILocation(line: 1642, column: 11, scope: !8076)
!8078 = !DILocation(line: 1642, column: 6, scope: !8072)
!8079 = !DILocation(line: 1643, column: 15, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1642, column: 19)
!8081 = !DILocation(line: 1643, column: 20, scope: !8080)
!8082 = !DILocation(line: 1643, column: 3, scope: !8080)
!8083 = !DILocation(line: 1644, column: 3, scope: !8080)
!8084 = !DILocation(line: 1644, column: 13, scope: !8080)
!8085 = !DILocation(line: 1644, column: 18, scope: !8080)
!8086 = !DILocation(line: 1645, column: 3, scope: !8080)
!8087 = !DILocation(line: 1645, column: 8, scope: !8080)
!8088 = !DILocation(line: 1645, column: 15, scope: !8080)
!8089 = !DILocation(line: 1646, column: 2, scope: !8080)
!8090 = !DILocation(line: 1647, column: 1, scope: !8072)
!8091 = distinct !DISubprogram(name: "DAG_scene_flush_update", scope: !3, file: !3, line: 1882, type: !8092, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{null, !4595, !4663, !7, !4136}
!8094 = !DILocalVariable(name: "bmain", arg: 1, scope: !8091, file: !3, line: 1882, type: !4595)
!8095 = !DILocation(line: 1882, column: 35, scope: !8091)
!8096 = !DILocalVariable(name: "sce", arg: 2, scope: !8091, file: !3, line: 1882, type: !4663)
!8097 = !DILocation(line: 1882, column: 49, scope: !8091)
!8098 = !DILocalVariable(name: "lay", arg: 3, scope: !8091, file: !3, line: 1882, type: !7)
!8099 = !DILocation(line: 1882, column: 67, scope: !8091)
!8100 = !DILocalVariable(name: "time", arg: 4, scope: !8091, file: !3, line: 1882, type: !4136)
!8101 = !DILocation(line: 1882, column: 84, scope: !8091)
!8102 = !DILocalVariable(name: "firstnode", scope: !8091, file: !3, line: 1884, type: !4397)
!8103 = !DILocation(line: 1884, column: 11, scope: !8091)
!8104 = !DILocalVariable(name: "itA", scope: !8091, file: !3, line: 1885, type: !5311)
!8105 = !DILocation(line: 1885, column: 14, scope: !8091)
!8106 = !DILocalVariable(name: "ob", scope: !8091, file: !3, line: 1886, type: !349)
!8107 = !DILocation(line: 1886, column: 10, scope: !8091)
!8108 = !DILocalVariable(name: "lasttime", scope: !8091, file: !3, line: 1887, type: !389)
!8109 = !DILocation(line: 1887, column: 6, scope: !8091)
!8110 = !DILocation(line: 1889, column: 6, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1889, column: 6)
!8112 = !DILocation(line: 1889, column: 11, scope: !8111)
!8113 = !DILocation(line: 1889, column: 18, scope: !8111)
!8114 = !DILocation(line: 1889, column: 6, scope: !8091)
!8115 = !DILocation(line: 1890, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 1889, column: 27)
!8117 = !DILocation(line: 1891, column: 30, scope: !8116)
!8118 = !DILocation(line: 1891, column: 37, scope: !8116)
!8119 = !DILocation(line: 1891, column: 3, scope: !8116)
!8120 = !DILocation(line: 1892, column: 2, scope: !8116)
!8121 = !DILocation(line: 1894, column: 14, scope: !8091)
!8122 = !DILocation(line: 1894, column: 19, scope: !8091)
!8123 = !DILocation(line: 1894, column: 27, scope: !8091)
!8124 = !DILocation(line: 1894, column: 35, scope: !8091)
!8125 = !DILocation(line: 1894, column: 12, scope: !8091)
!8126 = !DILocation(line: 1897, column: 25, scope: !8091)
!8127 = !DILocation(line: 1897, column: 30, scope: !8091)
!8128 = !DILocation(line: 1897, column: 2, scope: !8091)
!8129 = !DILocation(line: 1900, column: 2, scope: !8091)
!8130 = !DILocation(line: 1900, column: 7, scope: !8091)
!8131 = !DILocation(line: 1900, column: 15, scope: !8091)
!8132 = !DILocation(line: 1900, column: 19, scope: !8091)
!8133 = !DILocation(line: 1901, column: 13, scope: !8091)
!8134 = !DILocation(line: 1901, column: 18, scope: !8091)
!8135 = !DILocation(line: 1901, column: 26, scope: !8091)
!8136 = !DILocation(line: 1901, column: 11, scope: !8091)
!8137 = !DILocation(line: 1902, column: 13, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1902, column: 2)
!8139 = !DILocation(line: 1902, column: 24, scope: !8138)
!8140 = !DILocation(line: 1902, column: 11, scope: !8138)
!8141 = !DILocation(line: 1902, column: 7, scope: !8138)
!8142 = !DILocation(line: 1902, column: 31, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1902, column: 2)
!8144 = !DILocation(line: 1902, column: 2, scope: !8138)
!8145 = !DILocation(line: 1903, column: 7, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1903, column: 7)
!8147 = !DILocation(line: 1903, column: 12, scope: !8146)
!8148 = !DILocation(line: 1903, column: 18, scope: !8146)
!8149 = !DILocation(line: 1903, column: 30, scope: !8146)
!8150 = !DILocation(line: 1903, column: 27, scope: !8146)
!8151 = !DILocation(line: 1903, column: 39, scope: !8146)
!8152 = !DILocation(line: 1903, column: 42, scope: !8146)
!8153 = !DILocation(line: 1903, column: 47, scope: !8146)
!8154 = !DILocation(line: 1903, column: 53, scope: !8146)
!8155 = !DILocation(line: 1903, column: 58, scope: !8146)
!8156 = !DILocation(line: 1903, column: 7, scope: !8143)
!8157 = !DILocation(line: 1904, column: 22, scope: !8146)
!8158 = !DILocation(line: 1904, column: 29, scope: !8146)
!8159 = !DILocation(line: 1904, column: 34, scope: !8146)
!8160 = !DILocation(line: 1904, column: 40, scope: !8146)
!8161 = !DILocation(line: 1904, column: 45, scope: !8146)
!8162 = !DILocation(line: 1904, column: 4, scope: !8146)
!8163 = !DILocation(line: 1903, column: 61, scope: !8146)
!8164 = !DILocation(line: 1902, column: 42, scope: !8143)
!8165 = !DILocation(line: 1902, column: 47, scope: !8143)
!8166 = !DILocation(line: 1902, column: 40, scope: !8143)
!8167 = !DILocation(line: 1902, column: 2, scope: !8143)
!8168 = distinct !{!8168, !8144, !8169}
!8169 = !DILocation(line: 1904, column: 53, scope: !8138)
!8170 = !DILocation(line: 1907, column: 7, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1907, column: 6)
!8172 = !DILocation(line: 1907, column: 6, scope: !8091)
!8173 = !DILocation(line: 1908, column: 3, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 1907, column: 13)
!8175 = !DILocation(line: 1908, column: 8, scope: !8174)
!8176 = !DILocation(line: 1908, column: 16, scope: !8174)
!8177 = !DILocation(line: 1908, column: 20, scope: !8174)
!8178 = !DILocation(line: 1909, column: 14, scope: !8174)
!8179 = !DILocation(line: 1909, column: 19, scope: !8174)
!8180 = !DILocation(line: 1909, column: 27, scope: !8174)
!8181 = !DILocation(line: 1909, column: 12, scope: !8174)
!8182 = !DILocation(line: 1910, column: 14, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 1910, column: 3)
!8184 = !DILocation(line: 1910, column: 25, scope: !8183)
!8185 = !DILocation(line: 1910, column: 12, scope: !8183)
!8186 = !DILocation(line: 1910, column: 8, scope: !8183)
!8187 = !DILocation(line: 1910, column: 32, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 1910, column: 3)
!8189 = !DILocation(line: 1910, column: 3, scope: !8183)
!8190 = !DILocation(line: 1911, column: 8, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 1911, column: 8)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 1910, column: 54)
!8193 = !DILocation(line: 1911, column: 13, scope: !8191)
!8194 = !DILocation(line: 1911, column: 19, scope: !8191)
!8195 = !DILocation(line: 1911, column: 31, scope: !8191)
!8196 = !DILocation(line: 1911, column: 28, scope: !8191)
!8197 = !DILocation(line: 1911, column: 40, scope: !8191)
!8198 = !DILocation(line: 1911, column: 43, scope: !8191)
!8199 = !DILocation(line: 1911, column: 48, scope: !8191)
!8200 = !DILocation(line: 1911, column: 54, scope: !8191)
!8201 = !DILocation(line: 1911, column: 59, scope: !8191)
!8202 = !DILocation(line: 1911, column: 8, scope: !8192)
!8203 = !DILocation(line: 1912, column: 21, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 1911, column: 69)
!8205 = !DILocation(line: 1912, column: 26, scope: !8204)
!8206 = !DILocation(line: 1912, column: 32, scope: !8204)
!8207 = !DILocation(line: 1912, column: 10, scope: !8204)
!8208 = !DILocation(line: 1912, column: 8, scope: !8204)
!8209 = !DILocation(line: 1914, column: 9, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 1914, column: 9)
!8211 = !DILocation(line: 1914, column: 13, scope: !8210)
!8212 = !DILocation(line: 1914, column: 20, scope: !8210)
!8213 = !DILocation(line: 1914, column: 9, scope: !8204)
!8214 = !DILocation(line: 1915, column: 35, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1915, column: 10)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1914, column: 37)
!8217 = !DILocation(line: 1915, column: 40, scope: !8215)
!8218 = !DILocation(line: 1915, column: 10, scope: !8215)
!8219 = !DILocation(line: 1915, column: 10, scope: !8216)
!8220 = !DILocation(line: 1916, column: 7, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 1915, column: 70)
!8222 = !DILocation(line: 1916, column: 11, scope: !8221)
!8223 = !DILocation(line: 1916, column: 18, scope: !8221)
!8224 = !DILocation(line: 1917, column: 30, scope: !8221)
!8225 = !DILocation(line: 1917, column: 38, scope: !8221)
!8226 = !DILocation(line: 1917, column: 42, scope: !8221)
!8227 = !DILocation(line: 1917, column: 7, scope: !8221)
!8228 = !DILocation(line: 1918, column: 6, scope: !8221)
!8229 = !DILocation(line: 1920, column: 29, scope: !8216)
!8230 = !DILocation(line: 1920, column: 36, scope: !8216)
!8231 = !DILocation(line: 1920, column: 41, scope: !8216)
!8232 = !DILocation(line: 1920, column: 46, scope: !8216)
!8233 = !DILocation(line: 1920, column: 52, scope: !8216)
!8234 = !DILocation(line: 1921, column: 29, scope: !8216)
!8235 = !DILocation(line: 1920, column: 6, scope: !8216)
!8236 = !DILocation(line: 1922, column: 5, scope: !8216)
!8237 = !DILocation(line: 1924, column: 29, scope: !8210)
!8238 = !DILocation(line: 1924, column: 36, scope: !8210)
!8239 = !DILocation(line: 1924, column: 41, scope: !8210)
!8240 = !DILocation(line: 1924, column: 46, scope: !8210)
!8241 = !DILocation(line: 1924, column: 52, scope: !8210)
!8242 = !DILocation(line: 1925, column: 29, scope: !8210)
!8243 = !DILocation(line: 1924, column: 6, scope: !8210)
!8244 = !DILocation(line: 1926, column: 4, scope: !8204)
!8245 = !DILocation(line: 1927, column: 3, scope: !8192)
!8246 = !DILocation(line: 1910, column: 43, scope: !8188)
!8247 = !DILocation(line: 1910, column: 48, scope: !8188)
!8248 = !DILocation(line: 1910, column: 41, scope: !8188)
!8249 = !DILocation(line: 1910, column: 3, scope: !8188)
!8250 = distinct !{!8250, !8189, !8251}
!8251 = !DILocation(line: 1927, column: 3, scope: !8183)
!8252 = !DILocation(line: 1928, column: 2, scope: !8174)
!8253 = !DILocation(line: 1930, column: 23, scope: !8091)
!8254 = !DILocation(line: 1930, column: 28, scope: !8091)
!8255 = !DILocation(line: 1930, column: 2, scope: !8091)
!8256 = !DILocation(line: 1931, column: 1, scope: !8091)
!8257 = distinct !DISubprogram(name: "dag_scene_flush_layers", scope: !3, file: !3, line: 1810, type: !8258, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{null, !4663, !389}
!8260 = !DILocalVariable(name: "sce", arg: 1, scope: !8257, file: !3, line: 1810, type: !4663)
!8261 = !DILocation(line: 1810, column: 43, scope: !8257)
!8262 = !DILocalVariable(name: "lay", arg: 2, scope: !8257, file: !3, line: 1810, type: !389)
!8263 = !DILocation(line: 1810, column: 52, scope: !8257)
!8264 = !DILocalVariable(name: "node", scope: !8257, file: !3, line: 1812, type: !4397)
!8265 = !DILocation(line: 1812, column: 11, scope: !8257)
!8266 = !DILocalVariable(name: "firstnode", scope: !8257, file: !3, line: 1812, type: !4397)
!8267 = !DILocation(line: 1812, column: 18, scope: !8257)
!8268 = !DILocalVariable(name: "itA", scope: !8257, file: !3, line: 1813, type: !5311)
!8269 = !DILocation(line: 1813, column: 14, scope: !8257)
!8270 = !DILocalVariable(name: "base", scope: !8257, file: !3, line: 1814, type: !5299)
!8271 = !DILocation(line: 1814, column: 8, scope: !8257)
!8272 = !DILocalVariable(name: "lasttime", scope: !8257, file: !3, line: 1815, type: !389)
!8273 = !DILocation(line: 1815, column: 6, scope: !8257)
!8274 = !DILocation(line: 1817, column: 14, scope: !8257)
!8275 = !DILocation(line: 1817, column: 19, scope: !8257)
!8276 = !DILocation(line: 1817, column: 27, scope: !8257)
!8277 = !DILocation(line: 1817, column: 35, scope: !8257)
!8278 = !DILocation(line: 1817, column: 12, scope: !8257)
!8279 = !DILocation(line: 1819, column: 13, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1819, column: 2)
!8281 = !DILocation(line: 1819, column: 24, scope: !8280)
!8282 = !DILocation(line: 1819, column: 11, scope: !8280)
!8283 = !DILocation(line: 1819, column: 7, scope: !8280)
!8284 = !DILocation(line: 1819, column: 31, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1819, column: 2)
!8286 = !DILocation(line: 1819, column: 2, scope: !8280)
!8287 = !DILocation(line: 1820, column: 3, scope: !8285)
!8288 = !DILocation(line: 1820, column: 8, scope: !8285)
!8289 = !DILocation(line: 1820, column: 12, scope: !8285)
!8290 = !DILocation(line: 1819, column: 42, scope: !8285)
!8291 = !DILocation(line: 1819, column: 47, scope: !8285)
!8292 = !DILocation(line: 1819, column: 40, scope: !8285)
!8293 = !DILocation(line: 1819, column: 2, scope: !8285)
!8294 = distinct !{!8294, !8286, !8295}
!8295 = !DILocation(line: 1820, column: 14, scope: !8280)
!8296 = !DILocation(line: 1822, column: 2, scope: !8257)
!8297 = !DILocation(line: 1822, column: 7, scope: !8257)
!8298 = !DILocation(line: 1822, column: 15, scope: !8257)
!8299 = !DILocation(line: 1822, column: 19, scope: !8257)
!8300 = !DILocation(line: 1823, column: 13, scope: !8257)
!8301 = !DILocation(line: 1823, column: 18, scope: !8257)
!8302 = !DILocation(line: 1823, column: 26, scope: !8257)
!8303 = !DILocation(line: 1823, column: 11, scope: !8257)
!8304 = !DILocation(line: 1826, column: 14, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1826, column: 2)
!8306 = !DILocation(line: 1826, column: 19, scope: !8305)
!8307 = !DILocation(line: 1826, column: 24, scope: !8305)
!8308 = !DILocation(line: 1826, column: 12, scope: !8305)
!8309 = !DILocation(line: 1826, column: 7, scope: !8305)
!8310 = !DILocation(line: 1826, column: 31, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 1826, column: 2)
!8312 = !DILocation(line: 1826, column: 2, scope: !8305)
!8313 = !DILocation(line: 1827, column: 23, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 1826, column: 56)
!8315 = !DILocation(line: 1827, column: 28, scope: !8314)
!8316 = !DILocation(line: 1827, column: 36, scope: !8314)
!8317 = !DILocation(line: 1827, column: 42, scope: !8314)
!8318 = !DILocation(line: 1827, column: 10, scope: !8314)
!8319 = !DILocation(line: 1827, column: 8, scope: !8314)
!8320 = !DILocation(line: 1828, column: 18, scope: !8314)
!8321 = !DILocation(line: 1828, column: 24, scope: !8314)
!8322 = !DILocation(line: 1828, column: 32, scope: !8314)
!8323 = !DILocation(line: 1828, column: 3, scope: !8314)
!8324 = !DILocation(line: 1828, column: 9, scope: !8314)
!8325 = !DILocation(line: 1828, column: 16, scope: !8314)
!8326 = !DILocation(line: 1829, column: 2, scope: !8314)
!8327 = !DILocation(line: 1826, column: 44, scope: !8311)
!8328 = !DILocation(line: 1826, column: 50, scope: !8311)
!8329 = !DILocation(line: 1826, column: 42, scope: !8311)
!8330 = !DILocation(line: 1826, column: 2, scope: !8311)
!8331 = distinct !{!8331, !8312, !8332}
!8332 = !DILocation(line: 1829, column: 2, scope: !8305)
!8333 = !DILocation(line: 1835, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1835, column: 6)
!8335 = !DILocation(line: 1835, column: 11, scope: !8334)
!8336 = !DILocation(line: 1835, column: 6, scope: !8257)
!8337 = !DILocation(line: 1836, column: 23, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 1835, column: 19)
!8339 = !DILocation(line: 1836, column: 28, scope: !8338)
!8340 = !DILocation(line: 1836, column: 36, scope: !8338)
!8341 = !DILocation(line: 1836, column: 41, scope: !8338)
!8342 = !DILocation(line: 1836, column: 10, scope: !8338)
!8343 = !DILocation(line: 1836, column: 8, scope: !8338)
!8344 = !DILocation(line: 1837, column: 19, scope: !8338)
!8345 = !DILocation(line: 1837, column: 3, scope: !8338)
!8346 = !DILocation(line: 1837, column: 9, scope: !8338)
!8347 = !DILocation(line: 1837, column: 16, scope: !8338)
!8348 = !DILocation(line: 1838, column: 2, scope: !8338)
!8349 = !DILocalVariable(name: "m", scope: !8350, file: !3, line: 1842, type: !8351)
!8350 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1841, column: 2)
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8352, size: 64)
!8352 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeMarker", file: !517, line: 805, baseType: !8353)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimeMarker", file: !517, line: 799, size: 768, elements: !8354)
!8354 = !{!8355, !8357, !8358, !8359, !8360, !8361}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8353, file: !517, line: 800, baseType: !8356, size: 64)
!8356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8353, size: 64)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8353, file: !517, line: 800, baseType: !8356, size: 64, offset: 64)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !8353, file: !517, line: 801, baseType: !389, size: 32, offset: 128)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8353, file: !517, line: 802, baseType: !404, size: 512, offset: 160)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8353, file: !517, line: 803, baseType: !7, size: 32, offset: 672)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !8353, file: !517, line: 804, baseType: !522, size: 64, offset: 704)
!8362 = !DILocation(line: 1842, column: 15, scope: !8350)
!8363 = !DILocation(line: 1844, column: 12, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 1844, column: 3)
!8365 = !DILocation(line: 1844, column: 17, scope: !8364)
!8366 = !DILocation(line: 1844, column: 25, scope: !8364)
!8367 = !DILocation(line: 1844, column: 10, scope: !8364)
!8368 = !DILocation(line: 1844, column: 8, scope: !8364)
!8369 = !DILocation(line: 1844, column: 32, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 1844, column: 3)
!8371 = !DILocation(line: 1844, column: 3, scope: !8364)
!8372 = !DILocation(line: 1845, column: 8, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 1845, column: 8)
!8374 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 1844, column: 48)
!8375 = !DILocation(line: 1845, column: 11, scope: !8373)
!8376 = !DILocation(line: 1845, column: 8, scope: !8374)
!8377 = !DILocation(line: 1846, column: 25, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1845, column: 19)
!8379 = !DILocation(line: 1846, column: 30, scope: !8378)
!8380 = !DILocation(line: 1846, column: 38, scope: !8378)
!8381 = !DILocation(line: 1846, column: 41, scope: !8378)
!8382 = !DILocation(line: 1846, column: 12, scope: !8378)
!8383 = !DILocation(line: 1846, column: 10, scope: !8378)
!8384 = !DILocation(line: 1847, column: 21, scope: !8378)
!8385 = !DILocation(line: 1847, column: 5, scope: !8378)
!8386 = !DILocation(line: 1847, column: 11, scope: !8378)
!8387 = !DILocation(line: 1847, column: 18, scope: !8378)
!8388 = !DILocation(line: 1848, column: 4, scope: !8378)
!8389 = !DILocation(line: 1849, column: 3, scope: !8374)
!8390 = !DILocation(line: 1844, column: 39, scope: !8370)
!8391 = !DILocation(line: 1844, column: 42, scope: !8370)
!8392 = !DILocation(line: 1844, column: 37, scope: !8370)
!8393 = !DILocation(line: 1844, column: 3, scope: !8370)
!8394 = distinct !{!8394, !8371, !8395}
!8395 = !DILocation(line: 1849, column: 3, scope: !8364)
!8396 = !DILocation(line: 1854, column: 13, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1854, column: 2)
!8398 = !DILocation(line: 1854, column: 24, scope: !8397)
!8399 = !DILocation(line: 1854, column: 11, scope: !8397)
!8400 = !DILocation(line: 1854, column: 7, scope: !8397)
!8401 = !DILocation(line: 1854, column: 31, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 1854, column: 2)
!8403 = !DILocation(line: 1854, column: 2, scope: !8397)
!8404 = !DILocation(line: 1855, column: 7, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1855, column: 7)
!8406 = !DILocation(line: 1855, column: 12, scope: !8405)
!8407 = !DILocation(line: 1855, column: 18, scope: !8405)
!8408 = !DILocation(line: 1855, column: 30, scope: !8405)
!8409 = !DILocation(line: 1855, column: 27, scope: !8405)
!8410 = !DILocation(line: 1855, column: 39, scope: !8405)
!8411 = !DILocation(line: 1855, column: 42, scope: !8405)
!8412 = !DILocation(line: 1855, column: 47, scope: !8405)
!8413 = !DILocation(line: 1855, column: 53, scope: !8405)
!8414 = !DILocation(line: 1855, column: 58, scope: !8405)
!8415 = !DILocation(line: 1855, column: 7, scope: !8402)
!8416 = !DILocation(line: 1856, column: 21, scope: !8405)
!8417 = !DILocation(line: 1856, column: 26, scope: !8405)
!8418 = !DILocation(line: 1856, column: 31, scope: !8405)
!8419 = !DILocation(line: 1856, column: 37, scope: !8405)
!8420 = !DILocation(line: 1856, column: 4, scope: !8405)
!8421 = !DILocation(line: 1855, column: 61, scope: !8405)
!8422 = !DILocation(line: 1854, column: 42, scope: !8402)
!8423 = !DILocation(line: 1854, column: 47, scope: !8402)
!8424 = !DILocation(line: 1854, column: 40, scope: !8402)
!8425 = !DILocation(line: 1854, column: 2, scope: !8402)
!8426 = distinct !{!8426, !8403, !8427}
!8427 = !DILocation(line: 1856, column: 45, scope: !8397)
!8428 = !DILocation(line: 1857, column: 1, scope: !8257)
!8429 = distinct !DISubprogram(name: "flush_update_node", scope: !3, file: !3, line: 1662, type: !8430, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{null, !4595, !4397, !7, !389}
!8432 = !DILocalVariable(name: "bmain", arg: 1, scope: !8429, file: !3, line: 1662, type: !4595)
!8433 = !DILocation(line: 1662, column: 37, scope: !8429)
!8434 = !DILocalVariable(name: "node", arg: 2, scope: !8429, file: !3, line: 1662, type: !4397)
!8435 = !DILocation(line: 1662, column: 53, scope: !8429)
!8436 = !DILocalVariable(name: "layer", arg: 3, scope: !8429, file: !3, line: 1662, type: !7)
!8437 = !DILocation(line: 1662, column: 72, scope: !8429)
!8438 = !DILocalVariable(name: "curtime", arg: 4, scope: !8429, file: !3, line: 1662, type: !389)
!8439 = !DILocation(line: 1662, column: 83, scope: !8429)
!8440 = !DILocalVariable(name: "itA", scope: !8429, file: !3, line: 1664, type: !5311)
!8441 = !DILocation(line: 1664, column: 14, scope: !8429)
!8442 = !DILocalVariable(name: "ob", scope: !8429, file: !3, line: 1665, type: !349)
!8443 = !DILocation(line: 1665, column: 10, scope: !8429)
!8444 = !DILocalVariable(name: "obc", scope: !8429, file: !3, line: 1665, type: !349)
!8445 = !DILocation(line: 1665, column: 15, scope: !8429)
!8446 = !DILocalVariable(name: "oldflag", scope: !8429, file: !3, line: 1666, type: !389)
!8447 = !DILocation(line: 1666, column: 6, scope: !8429)
!8448 = !DILocalVariable(name: "changed", scope: !8429, file: !3, line: 1667, type: !1940)
!8449 = !DILocation(line: 1667, column: 7, scope: !8429)
!8450 = !DILocalVariable(name: "all_layer", scope: !8429, file: !3, line: 1668, type: !7)
!8451 = !DILocation(line: 1668, column: 15, scope: !8429)
!8452 = !DILocation(line: 1670, column: 19, scope: !8429)
!8453 = !DILocation(line: 1670, column: 2, scope: !8429)
!8454 = !DILocation(line: 1670, column: 8, scope: !8429)
!8455 = !DILocation(line: 1670, column: 17, scope: !8429)
!8456 = !DILocation(line: 1672, column: 7, scope: !8429)
!8457 = !DILocation(line: 1672, column: 13, scope: !8429)
!8458 = !DILocation(line: 1672, column: 5, scope: !8429)
!8459 = !DILocation(line: 1673, column: 6, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 1673, column: 6)
!8461 = !DILocation(line: 1673, column: 9, scope: !8460)
!8462 = !DILocation(line: 1673, column: 13, scope: !8460)
!8463 = !DILocation(line: 1673, column: 17, scope: !8460)
!8464 = !DILocation(line: 1673, column: 24, scope: !8460)
!8465 = !DILocation(line: 1673, column: 6, scope: !8429)
!8466 = !DILocation(line: 1674, column: 15, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 1673, column: 42)
!8468 = !DILocation(line: 1674, column: 21, scope: !8467)
!8469 = !DILocation(line: 1674, column: 13, scope: !8467)
!8470 = !DILocation(line: 1677, column: 14, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1677, column: 3)
!8472 = !DILocation(line: 1677, column: 20, scope: !8471)
!8473 = !DILocation(line: 1677, column: 12, scope: !8471)
!8474 = !DILocation(line: 1677, column: 8, scope: !8471)
!8475 = !DILocation(line: 1677, column: 27, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 1677, column: 3)
!8477 = !DILocation(line: 1677, column: 3, scope: !8471)
!8478 = !DILocation(line: 1678, column: 17, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 1677, column: 49)
!8480 = !DILocation(line: 1678, column: 22, scope: !8479)
!8481 = !DILocation(line: 1678, column: 14, scope: !8479)
!8482 = !DILocation(line: 1680, column: 9, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1680, column: 8)
!8484 = !DILocation(line: 1680, column: 14, scope: !8483)
!8485 = !DILocation(line: 1680, column: 20, scope: !8483)
!8486 = !DILocation(line: 1680, column: 18, scope: !8483)
!8487 = !DILocation(line: 1680, column: 8, scope: !8479)
!8488 = !DILocation(line: 1681, column: 9, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 1681, column: 9)
!8490 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 1680, column: 28)
!8491 = !DILocation(line: 1681, column: 14, scope: !8489)
!8492 = !DILocation(line: 1681, column: 20, scope: !8489)
!8493 = !DILocation(line: 1681, column: 25, scope: !8489)
!8494 = !DILocation(line: 1681, column: 9, scope: !8490)
!8495 = !DILocation(line: 1682, column: 12, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 1681, column: 35)
!8497 = !DILocation(line: 1682, column: 17, scope: !8496)
!8498 = !DILocation(line: 1682, column: 23, scope: !8496)
!8499 = !DILocation(line: 1682, column: 10, scope: !8496)
!8500 = !DILocation(line: 1683, column: 16, scope: !8496)
!8501 = !DILocation(line: 1683, column: 21, scope: !8496)
!8502 = !DILocation(line: 1683, column: 14, scope: !8496)
!8503 = !DILocation(line: 1686, column: 10, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1686, column: 10)
!8505 = !DILocation(line: 1686, column: 14, scope: !8504)
!8506 = !DILocation(line: 1686, column: 21, scope: !8504)
!8507 = !DILocation(line: 1686, column: 10, scope: !8496)
!8508 = !DILocation(line: 1687, column: 11, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1687, column: 11)
!8510 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 1686, column: 37)
!8511 = !DILocation(line: 1687, column: 16, scope: !8509)
!8512 = !DILocation(line: 1687, column: 21, scope: !8509)
!8513 = !DILocation(line: 1687, column: 11, scope: !8510)
!8514 = !DILocation(line: 1689, column: 8, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 1687, column: 37)
!8516 = !DILocation(line: 1689, column: 13, scope: !8515)
!8517 = !DILocation(line: 1689, column: 20, scope: !8515)
!8518 = !DILocation(line: 1690, column: 26, scope: !8515)
!8519 = !DILocation(line: 1690, column: 34, scope: !8515)
!8520 = !DILocation(line: 1690, column: 39, scope: !8515)
!8521 = !DILocation(line: 1690, column: 8, scope: !8515)
!8522 = !DILocation(line: 1691, column: 7, scope: !8515)
!8523 = !DILocation(line: 1692, column: 11, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1692, column: 11)
!8525 = !DILocation(line: 1692, column: 16, scope: !8524)
!8526 = !DILocation(line: 1692, column: 21, scope: !8524)
!8527 = !DILocation(line: 1692, column: 11, scope: !8510)
!8528 = !DILocation(line: 1694, column: 8, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 1692, column: 39)
!8530 = !DILocation(line: 1694, column: 13, scope: !8529)
!8531 = !DILocation(line: 1694, column: 20, scope: !8529)
!8532 = !DILocation(line: 1695, column: 31, scope: !8529)
!8533 = !DILocation(line: 1695, column: 39, scope: !8529)
!8534 = !DILocation(line: 1695, column: 44, scope: !8529)
!8535 = !DILocation(line: 1695, column: 8, scope: !8529)
!8536 = !DILocation(line: 1696, column: 7, scope: !8529)
!8537 = !DILocation(line: 1697, column: 6, scope: !8510)
!8538 = !DILocation(line: 1698, column: 10, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1698, column: 10)
!8540 = !DILocation(line: 1698, column: 14, scope: !8539)
!8541 = !DILocation(line: 1698, column: 21, scope: !8539)
!8542 = !DILocation(line: 1698, column: 10, scope: !8496)
!8543 = !DILocation(line: 1699, column: 11, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 1699, column: 11)
!8545 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1698, column: 39)
!8546 = !DILocation(line: 1699, column: 16, scope: !8544)
!8547 = !DILocation(line: 1699, column: 21, scope: !8544)
!8548 = !DILocation(line: 1699, column: 11, scope: !8545)
!8549 = !DILocation(line: 1701, column: 8, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 1699, column: 39)
!8551 = !DILocation(line: 1701, column: 13, scope: !8550)
!8552 = !DILocation(line: 1701, column: 20, scope: !8550)
!8553 = !DILocation(line: 1702, column: 26, scope: !8550)
!8554 = !DILocation(line: 1702, column: 34, scope: !8550)
!8555 = !DILocation(line: 1702, column: 39, scope: !8550)
!8556 = !DILocation(line: 1702, column: 8, scope: !8550)
!8557 = !DILocation(line: 1703, column: 7, scope: !8550)
!8558 = !DILocation(line: 1704, column: 11, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 1704, column: 11)
!8560 = !DILocation(line: 1704, column: 16, scope: !8559)
!8561 = !DILocation(line: 1704, column: 21, scope: !8559)
!8562 = !DILocation(line: 1704, column: 11, scope: !8545)
!8563 = !DILocation(line: 1706, column: 8, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 1704, column: 41)
!8565 = !DILocation(line: 1706, column: 13, scope: !8564)
!8566 = !DILocation(line: 1706, column: 20, scope: !8564)
!8567 = !DILocation(line: 1707, column: 31, scope: !8564)
!8568 = !DILocation(line: 1707, column: 39, scope: !8564)
!8569 = !DILocation(line: 1707, column: 44, scope: !8564)
!8570 = !DILocation(line: 1707, column: 8, scope: !8564)
!8571 = !DILocation(line: 1708, column: 7, scope: !8564)
!8572 = !DILocation(line: 1709, column: 6, scope: !8545)
!8573 = !DILocation(line: 1710, column: 10, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1710, column: 10)
!8575 = !DILocation(line: 1710, column: 21, scope: !8574)
!8576 = !DILocation(line: 1710, column: 26, scope: !8574)
!8577 = !DILocation(line: 1710, column: 18, scope: !8574)
!8578 = !DILocation(line: 1710, column: 10, scope: !8496)
!8579 = !DILocation(line: 1710, column: 42, scope: !8574)
!8580 = !DILocation(line: 1710, column: 34, scope: !8574)
!8581 = !DILocation(line: 1711, column: 5, scope: !8496)
!8582 = !DILocation(line: 1712, column: 4, scope: !8490)
!8583 = !DILocation(line: 1713, column: 3, scope: !8479)
!8584 = !DILocation(line: 1677, column: 38, scope: !8476)
!8585 = !DILocation(line: 1677, column: 43, scope: !8476)
!8586 = !DILocation(line: 1677, column: 36, scope: !8476)
!8587 = !DILocation(line: 1677, column: 3, scope: !8476)
!8588 = distinct !{!8588, !8477, !8589}
!8589 = !DILocation(line: 1713, column: 3, scope: !8471)
!8590 = !DILocation(line: 1715, column: 8, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1715, column: 7)
!8592 = !DILocation(line: 1715, column: 20, scope: !8591)
!8593 = !DILocation(line: 1715, column: 18, scope: !8591)
!8594 = !DILocation(line: 1715, column: 27, scope: !8591)
!8595 = !DILocation(line: 1715, column: 7, scope: !8467)
!8596 = !DILocation(line: 1717, column: 8, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 1717, column: 8)
!8598 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1715, column: 33)
!8599 = !DILocation(line: 1717, column: 12, scope: !8597)
!8600 = !DILocation(line: 1717, column: 19, scope: !8597)
!8601 = !DILocation(line: 1717, column: 8, scope: !8598)
!8602 = !DILocation(line: 1718, column: 36, scope: !8597)
!8603 = !DILocation(line: 1718, column: 5, scope: !8597)
!8604 = !DILocation(line: 1720, column: 4, scope: !8598)
!8605 = !DILocation(line: 1720, column: 8, scope: !8598)
!8606 = !DILocation(line: 1720, column: 15, scope: !8598)
!8607 = !DILocation(line: 1721, column: 3, scope: !8598)
!8608 = !DILocation(line: 1722, column: 2, scope: !8467)
!8609 = !DILocation(line: 1727, column: 13, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 1727, column: 2)
!8611 = !DILocation(line: 1727, column: 19, scope: !8610)
!8612 = !DILocation(line: 1727, column: 11, scope: !8610)
!8613 = !DILocation(line: 1727, column: 7, scope: !8610)
!8614 = !DILocation(line: 1727, column: 26, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 1727, column: 2)
!8616 = !DILocation(line: 1727, column: 2, scope: !8610)
!8617 = !DILocation(line: 1729, column: 8, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 1729, column: 7)
!8619 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1727, column: 48)
!8620 = !DILocation(line: 1729, column: 13, scope: !8618)
!8621 = !DILocation(line: 1729, column: 19, scope: !8618)
!8622 = !DILocation(line: 1729, column: 17, scope: !8618)
!8623 = !DILocation(line: 1729, column: 7, scope: !8619)
!8624 = !DILocation(line: 1730, column: 8, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1730, column: 8)
!8626 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1729, column: 27)
!8627 = !DILocation(line: 1730, column: 13, scope: !8625)
!8628 = !DILocation(line: 1730, column: 19, scope: !8625)
!8629 = !DILocation(line: 1730, column: 24, scope: !8625)
!8630 = !DILocation(line: 1730, column: 8, scope: !8626)
!8631 = !DILocation(line: 1731, column: 11, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 1730, column: 34)
!8633 = !DILocation(line: 1731, column: 16, scope: !8632)
!8634 = !DILocation(line: 1731, column: 22, scope: !8632)
!8635 = !DILocation(line: 1731, column: 9, scope: !8632)
!8636 = !DILocation(line: 1733, column: 10, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 1733, column: 9)
!8638 = !DILocation(line: 1733, column: 15, scope: !8637)
!8639 = !DILocation(line: 1733, column: 22, scope: !8637)
!8640 = !DILocation(line: 1733, column: 39, scope: !8637)
!8641 = !DILocation(line: 1733, column: 9, scope: !8632)
!8642 = !DILocation(line: 1735, column: 10, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 1735, column: 10)
!8644 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1733, column: 56)
!8645 = !DILocation(line: 1735, column: 15, scope: !8643)
!8646 = !DILocation(line: 1735, column: 20, scope: !8643)
!8647 = !DILocation(line: 1735, column: 10, scope: !8644)
!8648 = !DILocation(line: 1737, column: 7, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 1735, column: 59)
!8650 = !DILocation(line: 1737, column: 12, scope: !8649)
!8651 = !DILocation(line: 1737, column: 19, scope: !8649)
!8652 = !DILocation(line: 1738, column: 30, scope: !8649)
!8653 = !DILocation(line: 1738, column: 38, scope: !8649)
!8654 = !DILocation(line: 1738, column: 43, scope: !8649)
!8655 = !DILocation(line: 1738, column: 7, scope: !8649)
!8656 = !DILocation(line: 1739, column: 6, scope: !8649)
!8657 = !DILocation(line: 1740, column: 5, scope: !8644)
!8658 = !DILocation(line: 1741, column: 4, scope: !8632)
!8659 = !DILocation(line: 1742, column: 3, scope: !8626)
!8660 = !DILocation(line: 1743, column: 2, scope: !8619)
!8661 = !DILocation(line: 1727, column: 37, scope: !8615)
!8662 = !DILocation(line: 1727, column: 42, scope: !8615)
!8663 = !DILocation(line: 1727, column: 35, scope: !8615)
!8664 = !DILocation(line: 1727, column: 2, scope: !8615)
!8665 = distinct !{!8665, !8616, !8666}
!8666 = !DILocation(line: 1743, column: 2, scope: !8610)
!8667 = !DILocation(line: 1746, column: 13, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 1746, column: 2)
!8669 = !DILocation(line: 1746, column: 19, scope: !8668)
!8670 = !DILocation(line: 1746, column: 11, scope: !8668)
!8671 = !DILocation(line: 1746, column: 7, scope: !8668)
!8672 = !DILocation(line: 1746, column: 26, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 1746, column: 2)
!8674 = !DILocation(line: 1746, column: 2, scope: !8668)
!8675 = !DILocation(line: 1747, column: 7, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 1747, column: 7)
!8677 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1746, column: 48)
!8678 = !DILocation(line: 1747, column: 15, scope: !8676)
!8679 = !DILocation(line: 1747, column: 18, scope: !8676)
!8680 = !DILocation(line: 1747, column: 23, scope: !8676)
!8681 = !DILocation(line: 1747, column: 29, scope: !8676)
!8682 = !DILocation(line: 1747, column: 41, scope: !8676)
!8683 = !DILocation(line: 1747, column: 38, scope: !8676)
!8684 = !DILocation(line: 1747, column: 7, scope: !8677)
!8685 = !DILocation(line: 1748, column: 22, scope: !8676)
!8686 = !DILocation(line: 1748, column: 29, scope: !8676)
!8687 = !DILocation(line: 1748, column: 34, scope: !8676)
!8688 = !DILocation(line: 1748, column: 40, scope: !8676)
!8689 = !DILocation(line: 1748, column: 47, scope: !8676)
!8690 = !DILocation(line: 1748, column: 4, scope: !8676)
!8691 = !DILocation(line: 1749, column: 2, scope: !8677)
!8692 = !DILocation(line: 1746, column: 37, scope: !8673)
!8693 = !DILocation(line: 1746, column: 42, scope: !8673)
!8694 = !DILocation(line: 1746, column: 35, scope: !8673)
!8695 = !DILocation(line: 1746, column: 2, scope: !8673)
!8696 = distinct !{!8696, !8674, !8697}
!8697 = !DILocation(line: 1749, column: 2, scope: !8668)
!8698 = !DILocation(line: 1751, column: 1, scope: !8429)
!8699 = distinct !DISubprogram(name: "lib_id_recalc_data_tag", scope: !3, file: !3, line: 1655, type: !4593, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8700 = !DILocalVariable(name: "bmain", arg: 1, scope: !8699, file: !3, line: 1655, type: !4595)
!8701 = !DILocation(line: 1655, column: 42, scope: !8699)
!8702 = !DILocalVariable(name: "id", arg: 2, scope: !8699, file: !3, line: 1655, type: !368)
!8703 = !DILocation(line: 1655, column: 53, scope: !8699)
!8704 = !DILocation(line: 1657, column: 2, scope: !8699)
!8705 = !DILocation(line: 1657, column: 6, scope: !8699)
!8706 = !DILocation(line: 1657, column: 11, scope: !8699)
!8707 = !DILocation(line: 1658, column: 18, scope: !8699)
!8708 = !DILocation(line: 1658, column: 25, scope: !8699)
!8709 = !DILocation(line: 1658, column: 2, scope: !8699)
!8710 = !DILocation(line: 1659, column: 1, scope: !8699)
!8711 = distinct !DISubprogram(name: "flush_pointcache_reset", scope: !3, file: !3, line: 1778, type: !8712, scopeLine: 1780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{null, !4595, !4663, !4397, !389, !7, !1940}
!8714 = !DILocalVariable(name: "bmain", arg: 1, scope: !8711, file: !3, line: 1778, type: !4595)
!8715 = !DILocation(line: 1778, column: 42, scope: !8711)
!8716 = !DILocalVariable(name: "scene", arg: 2, scope: !8711, file: !3, line: 1778, type: !4663)
!8717 = !DILocation(line: 1778, column: 56, scope: !8711)
!8718 = !DILocalVariable(name: "node", arg: 3, scope: !8711, file: !3, line: 1778, type: !4397)
!8719 = !DILocation(line: 1778, column: 72, scope: !8711)
!8720 = !DILocalVariable(name: "curtime", arg: 4, scope: !8711, file: !3, line: 1779, type: !389)
!8721 = !DILocation(line: 1779, column: 40, scope: !8711)
!8722 = !DILocalVariable(name: "lay", arg: 5, scope: !8711, file: !3, line: 1779, type: !7)
!8723 = !DILocation(line: 1779, column: 62, scope: !8711)
!8724 = !DILocalVariable(name: "reset", arg: 6, scope: !8711, file: !3, line: 1779, type: !1940)
!8725 = !DILocation(line: 1779, column: 72, scope: !8711)
!8726 = !DILocalVariable(name: "itA", scope: !8711, file: !3, line: 1781, type: !5311)
!8727 = !DILocation(line: 1781, column: 14, scope: !8711)
!8728 = !DILocalVariable(name: "ob", scope: !8711, file: !3, line: 1782, type: !349)
!8729 = !DILocation(line: 1782, column: 10, scope: !8711)
!8730 = !DILocation(line: 1784, column: 19, scope: !8711)
!8731 = !DILocation(line: 1784, column: 2, scope: !8711)
!8732 = !DILocation(line: 1784, column: 8, scope: !8711)
!8733 = !DILocation(line: 1784, column: 17, scope: !8711)
!8734 = !DILocation(line: 1786, column: 13, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1786, column: 2)
!8736 = !DILocation(line: 1786, column: 19, scope: !8735)
!8737 = !DILocation(line: 1786, column: 11, scope: !8735)
!8738 = !DILocation(line: 1786, column: 7, scope: !8735)
!8739 = !DILocation(line: 1786, column: 26, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 1786, column: 2)
!8741 = !DILocation(line: 1786, column: 2, scope: !8735)
!8742 = !DILocation(line: 1787, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1787, column: 7)
!8744 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 1786, column: 48)
!8745 = !DILocation(line: 1787, column: 12, scope: !8743)
!8746 = !DILocation(line: 1787, column: 18, scope: !8743)
!8747 = !DILocation(line: 1787, column: 23, scope: !8743)
!8748 = !DILocation(line: 1787, column: 7, scope: !8744)
!8749 = !DILocation(line: 1788, column: 8, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 1788, column: 8)
!8751 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1787, column: 33)
!8752 = !DILocation(line: 1788, column: 13, scope: !8750)
!8753 = !DILocation(line: 1788, column: 19, scope: !8750)
!8754 = !DILocation(line: 1788, column: 31, scope: !8750)
!8755 = !DILocation(line: 1788, column: 28, scope: !8750)
!8756 = !DILocation(line: 1788, column: 8, scope: !8751)
!8757 = !DILocation(line: 1789, column: 21, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1788, column: 40)
!8759 = !DILocation(line: 1789, column: 26, scope: !8758)
!8760 = !DILocation(line: 1789, column: 32, scope: !8758)
!8761 = !DILocation(line: 1789, column: 10, scope: !8758)
!8762 = !DILocation(line: 1789, column: 8, scope: !8758)
!8763 = !DILocation(line: 1791, column: 9, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 1791, column: 9)
!8765 = !DILocation(line: 1791, column: 15, scope: !8764)
!8766 = !DILocation(line: 1791, column: 19, scope: !8764)
!8767 = !DILocation(line: 1791, column: 23, scope: !8764)
!8768 = !DILocation(line: 1791, column: 30, scope: !8764)
!8769 = !DILocation(line: 1791, column: 9, scope: !8758)
!8770 = !DILocation(line: 1792, column: 35, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 1792, column: 10)
!8772 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1791, column: 48)
!8773 = !DILocation(line: 1792, column: 42, scope: !8771)
!8774 = !DILocation(line: 1792, column: 10, scope: !8771)
!8775 = !DILocation(line: 1792, column: 10, scope: !8772)
!8776 = !DILocation(line: 1794, column: 11, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 1794, column: 11)
!8778 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1792, column: 72)
!8779 = !DILocation(line: 1794, column: 16, scope: !8777)
!8780 = !DILocation(line: 1794, column: 22, scope: !8777)
!8781 = !DILocation(line: 1794, column: 28, scope: !8777)
!8782 = !DILocation(line: 1794, column: 26, scope: !8777)
!8783 = !DILocation(line: 1794, column: 11, scope: !8778)
!8784 = !DILocation(line: 1795, column: 8, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1794, column: 33)
!8786 = !DILocation(line: 1795, column: 12, scope: !8785)
!8787 = !DILocation(line: 1795, column: 19, scope: !8785)
!8788 = !DILocation(line: 1796, column: 31, scope: !8785)
!8789 = !DILocation(line: 1796, column: 39, scope: !8785)
!8790 = !DILocation(line: 1796, column: 43, scope: !8785)
!8791 = !DILocation(line: 1796, column: 8, scope: !8785)
!8792 = !DILocation(line: 1797, column: 7, scope: !8785)
!8793 = !DILocation(line: 1798, column: 6, scope: !8778)
!8794 = !DILocation(line: 1800, column: 29, scope: !8772)
!8795 = !DILocation(line: 1800, column: 36, scope: !8772)
!8796 = !DILocation(line: 1800, column: 43, scope: !8772)
!8797 = !DILocation(line: 1800, column: 48, scope: !8772)
!8798 = !DILocation(line: 1800, column: 54, scope: !8772)
!8799 = !DILocation(line: 1800, column: 63, scope: !8772)
!8800 = !DILocation(line: 1800, column: 6, scope: !8772)
!8801 = !DILocation(line: 1801, column: 5, scope: !8772)
!8802 = !DILocation(line: 1803, column: 29, scope: !8764)
!8803 = !DILocation(line: 1803, column: 36, scope: !8764)
!8804 = !DILocation(line: 1803, column: 43, scope: !8764)
!8805 = !DILocation(line: 1803, column: 48, scope: !8764)
!8806 = !DILocation(line: 1803, column: 54, scope: !8764)
!8807 = !DILocation(line: 1803, column: 63, scope: !8764)
!8808 = !DILocation(line: 1803, column: 6, scope: !8764)
!8809 = !DILocation(line: 1804, column: 4, scope: !8758)
!8810 = !DILocation(line: 1805, column: 3, scope: !8751)
!8811 = !DILocation(line: 1806, column: 2, scope: !8744)
!8812 = !DILocation(line: 1786, column: 37, scope: !8740)
!8813 = !DILocation(line: 1786, column: 42, scope: !8740)
!8814 = !DILocation(line: 1786, column: 35, scope: !8740)
!8815 = !DILocation(line: 1786, column: 2, scope: !8740)
!8816 = distinct !{!8816, !8741, !8817}
!8817 = !DILocation(line: 1806, column: 2, scope: !8735)
!8818 = !DILocation(line: 1807, column: 1, scope: !8711)
!8819 = distinct !DISubprogram(name: "dag_tag_renderlayers", scope: !3, file: !3, line: 1859, type: !8820, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{null, !4663, !7}
!8822 = !DILocalVariable(name: "sce", arg: 1, scope: !8819, file: !3, line: 1859, type: !4663)
!8823 = !DILocation(line: 1859, column: 41, scope: !8819)
!8824 = !DILocalVariable(name: "lay", arg: 2, scope: !8819, file: !3, line: 1859, type: !7)
!8825 = !DILocation(line: 1859, column: 59, scope: !8819)
!8826 = !DILocation(line: 1861, column: 6, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 1861, column: 6)
!8828 = !DILocation(line: 1861, column: 11, scope: !8827)
!8829 = !DILocation(line: 1861, column: 6, scope: !8819)
!8830 = !DILocalVariable(name: "node", scope: !8831, file: !3, line: 1862, type: !876)
!8831 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 1861, column: 21)
!8832 = !DILocation(line: 1862, column: 10, scope: !8831)
!8833 = !DILocalVariable(name: "base", scope: !8831, file: !3, line: 1863, type: !5299)
!8834 = !DILocation(line: 1863, column: 9, scope: !8831)
!8835 = !DILocalVariable(name: "lay_changed", scope: !8831, file: !3, line: 1864, type: !7)
!8836 = !DILocation(line: 1864, column: 16, scope: !8831)
!8837 = !DILocation(line: 1866, column: 15, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1866, column: 3)
!8839 = !DILocation(line: 1866, column: 20, scope: !8838)
!8840 = !DILocation(line: 1866, column: 25, scope: !8838)
!8841 = !DILocation(line: 1866, column: 13, scope: !8838)
!8842 = !DILocation(line: 1866, column: 8, scope: !8838)
!8843 = !DILocation(line: 1866, column: 32, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 1866, column: 3)
!8845 = !DILocation(line: 1866, column: 3, scope: !8838)
!8846 = !DILocation(line: 1867, column: 8, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 1867, column: 8)
!8848 = !DILocation(line: 1867, column: 14, scope: !8847)
!8849 = !DILocation(line: 1867, column: 20, scope: !8847)
!8850 = !DILocation(line: 1867, column: 18, scope: !8847)
!8851 = !DILocation(line: 1867, column: 8, scope: !8844)
!8852 = !DILocation(line: 1868, column: 9, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 1868, column: 9)
!8854 = !DILocation(line: 1868, column: 15, scope: !8853)
!8855 = !DILocation(line: 1868, column: 23, scope: !8853)
!8856 = !DILocation(line: 1868, column: 9, scope: !8847)
!8857 = !DILocation(line: 1869, column: 21, scope: !8853)
!8858 = !DILocation(line: 1869, column: 27, scope: !8853)
!8859 = !DILocation(line: 1869, column: 18, scope: !8853)
!8860 = !DILocation(line: 1869, column: 6, scope: !8853)
!8861 = !DILocation(line: 1866, column: 45, scope: !8844)
!8862 = !DILocation(line: 1866, column: 51, scope: !8844)
!8863 = !DILocation(line: 1866, column: 43, scope: !8844)
!8864 = !DILocation(line: 1866, column: 3, scope: !8844)
!8865 = distinct !{!8865, !8845, !8866}
!8866 = !DILocation(line: 1869, column: 27, scope: !8838)
!8867 = !DILocation(line: 1871, column: 15, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1871, column: 3)
!8869 = !DILocation(line: 1871, column: 20, scope: !8868)
!8870 = !DILocation(line: 1871, column: 30, scope: !8868)
!8871 = !DILocation(line: 1871, column: 36, scope: !8868)
!8872 = !DILocation(line: 1871, column: 13, scope: !8868)
!8873 = !DILocation(line: 1871, column: 8, scope: !8868)
!8874 = !DILocation(line: 1871, column: 43, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 1871, column: 3)
!8876 = !DILocation(line: 1871, column: 3, scope: !8868)
!8877 = !DILocation(line: 1872, column: 8, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1872, column: 8)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 1871, column: 68)
!8880 = !DILocation(line: 1872, column: 14, scope: !8878)
!8881 = !DILocation(line: 1872, column: 26, scope: !8878)
!8882 = !DILocation(line: 1872, column: 20, scope: !8878)
!8883 = !DILocation(line: 1872, column: 17, scope: !8878)
!8884 = !DILocation(line: 1872, column: 8, scope: !8879)
!8885 = !DILocalVariable(name: "srl", scope: !8886, file: !3, line: 1873, type: !8887)
!8886 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 1872, column: 31)
!8887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8888, size: 64)
!8888 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !517, line: 194, baseType: !8889)
!8889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !517, line: 174, size: 1472, elements: !8890)
!8890 = !{!8891, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905}
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8889, file: !517, line: 175, baseType: !8892, size: 64)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8889, size: 64)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8889, file: !517, line: 175, baseType: !8892, size: 64, offset: 64)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8889, file: !517, line: 177, baseType: !404, size: 512, offset: 128)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !8889, file: !517, line: 179, baseType: !2917, size: 64, offset: 640)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !8889, file: !517, line: 180, baseType: !3053, size: 64, offset: 704)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !8889, file: !517, line: 182, baseType: !7, size: 32, offset: 768)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !8889, file: !517, line: 183, baseType: !7, size: 32, offset: 800)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !8889, file: !517, line: 184, baseType: !7, size: 32, offset: 832)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !8889, file: !517, line: 185, baseType: !389, size: 32, offset: 864)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !8889, file: !517, line: 187, baseType: !389, size: 32, offset: 896)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !8889, file: !517, line: 188, baseType: !389, size: 32, offset: 928)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !8889, file: !517, line: 190, baseType: !389, size: 32, offset: 960)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !8889, file: !517, line: 191, baseType: !469, size: 32, offset: 992)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !8889, file: !517, line: 193, baseType: !8906, size: 448, offset: 1024)
!8906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !8907, line: 127, size: 448, elements: !8908)
!8907 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8908 = !{!8909, !8910, !8911, !8912, !8913, !8914, !8915, !8916}
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !8906, file: !8907, line: 128, baseType: !414, size: 128)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8906, file: !8907, line: 130, baseType: !389, size: 32, offset: 128)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !8906, file: !8907, line: 131, baseType: !389, size: 32, offset: 160)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8906, file: !8907, line: 132, baseType: !389, size: 32, offset: 192)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !8906, file: !8907, line: 133, baseType: !469, size: 32, offset: 224)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !8906, file: !8907, line: 134, baseType: !469, size: 32, offset: 256)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !8906, file: !8907, line: 135, baseType: !469, size: 32, offset: 288)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !8906, file: !8907, line: 137, baseType: !414, size: 128, offset: 320)
!8917 = !DILocation(line: 1873, column: 23, scope: !8886)
!8918 = !DILocation(line: 1873, column: 43, scope: !8886)
!8919 = !DILocation(line: 1873, column: 48, scope: !8886)
!8920 = !DILocation(line: 1873, column: 50, scope: !8886)
!8921 = !DILocation(line: 1873, column: 58, scope: !8886)
!8922 = !DILocation(line: 1873, column: 64, scope: !8886)
!8923 = !DILocation(line: 1873, column: 29, scope: !8886)
!8924 = !DILocation(line: 1874, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 1874, column: 9)
!8926 = !DILocation(line: 1874, column: 13, scope: !8925)
!8927 = !DILocation(line: 1874, column: 17, scope: !8925)
!8928 = !DILocation(line: 1874, column: 22, scope: !8925)
!8929 = !DILocation(line: 1874, column: 28, scope: !8925)
!8930 = !DILocation(line: 1874, column: 26, scope: !8925)
!8931 = !DILocation(line: 1874, column: 9, scope: !8886)
!8932 = !DILocation(line: 1875, column: 17, scope: !8925)
!8933 = !DILocation(line: 1875, column: 22, scope: !8925)
!8934 = !DILocation(line: 1875, column: 32, scope: !8925)
!8935 = !DILocation(line: 1875, column: 6, scope: !8925)
!8936 = !DILocation(line: 1876, column: 4, scope: !8886)
!8937 = !DILocation(line: 1877, column: 3, scope: !8879)
!8938 = !DILocation(line: 1871, column: 56, scope: !8875)
!8939 = !DILocation(line: 1871, column: 62, scope: !8875)
!8940 = !DILocation(line: 1871, column: 54, scope: !8875)
!8941 = !DILocation(line: 1871, column: 3, scope: !8875)
!8942 = distinct !{!8942, !8876, !8943}
!8943 = !DILocation(line: 1877, column: 3, scope: !8868)
!8944 = !DILocation(line: 1878, column: 2, scope: !8831)
!8945 = !DILocation(line: 1879, column: 1, scope: !8819)
!8946 = distinct !DISubprogram(name: "DAG_scene_update_flags", scope: !3, file: !3, line: 2167, type: !8947, scopeLine: 2168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!8947 = !DISubroutineType(types: !8948)
!8948 = !{null, !4595, !4663, !7, !4213, !4213}
!8949 = !DILocalVariable(name: "bmain", arg: 1, scope: !8946, file: !3, line: 2167, type: !4595)
!8950 = !DILocation(line: 2167, column: 35, scope: !8946)
!8951 = !DILocalVariable(name: "scene", arg: 2, scope: !8946, file: !3, line: 2167, type: !4663)
!8952 = !DILocation(line: 2167, column: 49, scope: !8946)
!8953 = !DILocalVariable(name: "lay", arg: 3, scope: !8946, file: !3, line: 2167, type: !7)
!8954 = !DILocation(line: 2167, column: 69, scope: !8946)
!8955 = !DILocalVariable(name: "do_time", arg: 4, scope: !8946, file: !3, line: 2167, type: !4213)
!8956 = !DILocation(line: 2167, column: 85, scope: !8946)
!8957 = !DILocalVariable(name: "do_invisible_flush", arg: 5, scope: !8946, file: !3, line: 2167, type: !4213)
!8958 = !DILocation(line: 2167, column: 105, scope: !8946)
!8959 = !DILocalVariable(name: "base", scope: !8946, file: !3, line: 2169, type: !5299)
!8960 = !DILocation(line: 2169, column: 8, scope: !8946)
!8961 = !DILocalVariable(name: "ob", scope: !8946, file: !3, line: 2170, type: !349)
!8962 = !DILocation(line: 2170, column: 10, scope: !8946)
!8963 = !DILocalVariable(name: "group", scope: !8946, file: !3, line: 2171, type: !7293)
!8964 = !DILocation(line: 2171, column: 9, scope: !8946)
!8965 = !DILocalVariable(name: "go", scope: !8946, file: !3, line: 2172, type: !4527)
!8966 = !DILocation(line: 2172, column: 15, scope: !8946)
!8967 = !DILocalVariable(name: "sce_iter", scope: !8946, file: !3, line: 2173, type: !4663)
!8968 = !DILocation(line: 2173, column: 9, scope: !8946)
!8969 = !DILocation(line: 2175, column: 25, scope: !8946)
!8970 = !DILocation(line: 2175, column: 2, scope: !8946)
!8971 = !DILocation(line: 2178, column: 7, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2178, column: 2)
!8973 = !DILocation(line: 2178, column: 7, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 2178, column: 2)
!8975 = !DILocation(line: 2178, column: 2, scope: !8972)
!8976 = !DILocation(line: 2179, column: 8, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 2178, column: 41)
!8978 = !DILocation(line: 2179, column: 14, scope: !8977)
!8979 = !DILocation(line: 2179, column: 6, scope: !8977)
!8980 = !DILocation(line: 2181, column: 7, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2181, column: 7)
!8982 = !DILocation(line: 2181, column: 7, scope: !8977)
!8983 = !DILocation(line: 2188, column: 33, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2181, column: 16)
!8985 = !DILocation(line: 2188, column: 40, scope: !8984)
!8986 = !DILocation(line: 2188, column: 50, scope: !8984)
!8987 = !DILocation(line: 2188, column: 4, scope: !8984)
!8988 = !DILocation(line: 2189, column: 3, scope: !8984)
!8989 = !DILocation(line: 2192, column: 7, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2192, column: 7)
!8991 = !DILocation(line: 2192, column: 11, scope: !8990)
!8992 = !DILocation(line: 2192, column: 7, scope: !8977)
!8993 = !DILocation(line: 2193, column: 27, scope: !8990)
!8994 = !DILocation(line: 2193, column: 34, scope: !8990)
!8995 = !DILocation(line: 2193, column: 41, scope: !8990)
!8996 = !DILocation(line: 2193, column: 45, scope: !8990)
!8997 = !DILocation(line: 2193, column: 56, scope: !8990)
!8998 = !DILocation(line: 2193, column: 4, scope: !8990)
!8999 = !DILocation(line: 2194, column: 2, scope: !8977)
!9000 = !DILocation(line: 2178, column: 2, scope: !8974)
!9001 = distinct !{!9001, !8975, !9002}
!9002 = !DILocation(line: 2194, column: 2, scope: !8972)
!9003 = !DILocation(line: 2196, column: 18, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2196, column: 2)
!9005 = !DILocation(line: 2196, column: 16, scope: !9004)
!9006 = !DILocation(line: 2196, column: 7, scope: !9004)
!9007 = !DILocation(line: 2196, column: 25, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 2196, column: 2)
!9009 = !DILocation(line: 2196, column: 2, scope: !9004)
!9010 = !DILocation(line: 2197, column: 26, scope: !9008)
!9011 = !DILocation(line: 2197, column: 33, scope: !9008)
!9012 = !DILocation(line: 2197, column: 43, scope: !9008)
!9013 = !DILocation(line: 2197, column: 3, scope: !9008)
!9014 = !DILocation(line: 2196, column: 46, scope: !9008)
!9015 = !DILocation(line: 2196, column: 56, scope: !9008)
!9016 = !DILocation(line: 2196, column: 44, scope: !9008)
!9017 = !DILocation(line: 2196, column: 2, scope: !9008)
!9018 = distinct !{!9018, !9009, !9019}
!9019 = !DILocation(line: 2197, column: 49, scope: !9004)
!9020 = !DILocation(line: 2199, column: 6, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2199, column: 6)
!9022 = !DILocation(line: 2199, column: 6, scope: !8946)
!9023 = !DILocation(line: 2201, column: 8, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 2201, column: 3)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 2199, column: 15)
!9026 = !DILocation(line: 2201, column: 8, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 2201, column: 3)
!9028 = !DILocation(line: 2201, column: 3, scope: !9024)
!9029 = !DILocation(line: 2202, column: 9, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 2201, column: 42)
!9031 = !DILocation(line: 2202, column: 15, scope: !9030)
!9032 = !DILocation(line: 2202, column: 7, scope: !9030)
!9033 = !DILocation(line: 2203, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2203, column: 8)
!9035 = !DILocation(line: 2203, column: 12, scope: !9034)
!9036 = !DILocation(line: 2203, column: 19, scope: !9034)
!9037 = !DILocation(line: 2203, column: 8, scope: !9030)
!9038 = !DILocation(line: 2204, column: 5, scope: !9034)
!9039 = !DILocation(line: 2204, column: 9, scope: !9034)
!9040 = !DILocation(line: 2204, column: 16, scope: !9034)
!9041 = !DILocation(line: 2205, column: 3, scope: !9030)
!9042 = !DILocation(line: 2201, column: 3, scope: !9027)
!9043 = distinct !{!9043, !9028, !9044}
!9044 = !DILocation(line: 2205, column: 3, scope: !9024)
!9045 = !DILocation(line: 2208, column: 7, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 2208, column: 7)
!9047 = !DILocation(line: 2208, column: 14, scope: !9046)
!9048 = !DILocation(line: 2208, column: 7, scope: !9025)
!9049 = !DILocation(line: 2209, column: 33, scope: !9046)
!9050 = !DILocation(line: 2209, column: 40, scope: !9046)
!9051 = !DILocation(line: 2209, column: 47, scope: !9046)
!9052 = !DILocation(line: 2209, column: 54, scope: !9046)
!9053 = !DILocation(line: 2209, column: 4, scope: !9046)
!9054 = !DILocation(line: 2210, column: 2, scope: !9025)
!9055 = !DILocation(line: 2213, column: 15, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2213, column: 2)
!9057 = !DILocation(line: 2213, column: 22, scope: !9056)
!9058 = !DILocation(line: 2213, column: 28, scope: !9056)
!9059 = !DILocation(line: 2213, column: 13, scope: !9056)
!9060 = !DILocation(line: 2213, column: 7, scope: !9056)
!9061 = !DILocation(line: 2213, column: 35, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2213, column: 2)
!9063 = !DILocation(line: 2213, column: 2, scope: !9056)
!9064 = !DILocation(line: 2214, column: 7, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 2214, column: 7)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2213, column: 66)
!9067 = !DILocation(line: 2214, column: 14, scope: !9065)
!9068 = !DILocation(line: 2214, column: 17, scope: !9065)
!9069 = !DILocation(line: 2214, column: 22, scope: !9065)
!9070 = !DILocation(line: 2214, column: 7, scope: !9066)
!9071 = !DILocation(line: 2215, column: 14, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2215, column: 4)
!9073 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 2214, column: 34)
!9074 = !DILocation(line: 2215, column: 21, scope: !9072)
!9075 = !DILocation(line: 2215, column: 29, scope: !9072)
!9076 = !DILocation(line: 2215, column: 12, scope: !9072)
!9077 = !DILocation(line: 2215, column: 9, scope: !9072)
!9078 = !DILocation(line: 2215, column: 36, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 2215, column: 4)
!9080 = !DILocation(line: 2215, column: 4, scope: !9072)
!9081 = !DILocation(line: 2216, column: 18, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 2215, column: 55)
!9083 = !DILocation(line: 2216, column: 22, scope: !9082)
!9084 = !DILocation(line: 2216, column: 26, scope: !9082)
!9085 = !DILocation(line: 2216, column: 5, scope: !9082)
!9086 = !DILocation(line: 2216, column: 9, scope: !9082)
!9087 = !DILocation(line: 2216, column: 16, scope: !9082)
!9088 = !DILocation(line: 2218, column: 4, scope: !9082)
!9089 = !DILocation(line: 2215, column: 45, scope: !9079)
!9090 = !DILocation(line: 2215, column: 49, scope: !9079)
!9091 = !DILocation(line: 2215, column: 43, scope: !9079)
!9092 = !DILocation(line: 2215, column: 4, scope: !9079)
!9093 = distinct !{!9093, !9080, !9094}
!9094 = !DILocation(line: 2218, column: 4, scope: !9072)
!9095 = !DILocation(line: 2219, column: 4, scope: !9073)
!9096 = !DILocation(line: 2219, column: 11, scope: !9073)
!9097 = !DILocation(line: 2219, column: 14, scope: !9073)
!9098 = !DILocation(line: 2219, column: 19, scope: !9073)
!9099 = !DILocation(line: 2220, column: 3, scope: !9073)
!9100 = !DILocation(line: 2221, column: 2, scope: !9066)
!9101 = !DILocation(line: 2213, column: 50, scope: !9062)
!9102 = !DILocation(line: 2213, column: 57, scope: !9062)
!9103 = !DILocation(line: 2213, column: 60, scope: !9062)
!9104 = !DILocation(line: 2213, column: 48, scope: !9062)
!9105 = !DILocation(line: 2213, column: 2, scope: !9062)
!9106 = distinct !{!9106, !9063, !9107}
!9107 = !DILocation(line: 2221, column: 2, scope: !9056)
!9108 = !DILocation(line: 2223, column: 6, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !8946, file: !3, line: 2223, column: 6)
!9110 = !DILocation(line: 2223, column: 6, scope: !8946)
!9111 = !DILocation(line: 2224, column: 42, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 2223, column: 26)
!9113 = !DILocation(line: 2224, column: 49, scope: !9112)
!9114 = !DILocation(line: 2224, column: 3, scope: !9112)
!9115 = !DILocation(line: 2225, column: 2, scope: !9112)
!9116 = !DILocation(line: 2226, column: 1, scope: !8946)
!9117 = distinct !DISubprogram(name: "dag_object_time_update_flags", scope: !3, file: !3, line: 2009, type: !9118, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!9118 = !DISubroutineType(types: !9119)
!9119 = !{null, !4595, !4663, !349}
!9120 = !DILocalVariable(name: "bmain", arg: 1, scope: !9117, file: !3, line: 2009, type: !4595)
!9121 = !DILocation(line: 2009, column: 48, scope: !9117)
!9122 = !DILocalVariable(name: "scene", arg: 2, scope: !9117, file: !3, line: 2009, type: !4663)
!9123 = !DILocation(line: 2009, column: 62, scope: !9117)
!9124 = !DILocalVariable(name: "ob", arg: 3, scope: !9117, file: !3, line: 2009, type: !349)
!9125 = !DILocation(line: 2009, column: 77, scope: !9117)
!9126 = !DILocation(line: 2011, column: 6, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2011, column: 6)
!9128 = !DILocation(line: 2011, column: 10, scope: !9127)
!9129 = !DILocation(line: 2011, column: 22, scope: !9127)
!9130 = !DILocation(line: 2011, column: 6, scope: !9117)
!9131 = !DILocalVariable(name: "con", scope: !9132, file: !3, line: 2012, type: !5679)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 2011, column: 29)
!9133 = !DILocation(line: 2012, column: 16, scope: !9132)
!9134 = !DILocation(line: 2013, column: 14, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 2013, column: 3)
!9136 = !DILocation(line: 2013, column: 18, scope: !9135)
!9137 = !DILocation(line: 2013, column: 30, scope: !9135)
!9138 = !DILocation(line: 2013, column: 12, scope: !9135)
!9139 = !DILocation(line: 2013, column: 8, scope: !9135)
!9140 = !DILocation(line: 2013, column: 37, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2013, column: 3)
!9142 = !DILocation(line: 2013, column: 3, scope: !9135)
!9143 = !DILocalVariable(name: "cti", scope: !9144, file: !3, line: 2014, type: !5802)
!9144 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 2013, column: 59)
!9145 = !DILocation(line: 2014, column: 25, scope: !9144)
!9146 = !DILocation(line: 2014, column: 59, scope: !9144)
!9147 = !DILocation(line: 2014, column: 31, scope: !9144)
!9148 = !DILocalVariable(name: "targets", scope: !9144, file: !3, line: 2015, type: !414)
!9149 = !DILocation(line: 2015, column: 13, scope: !9144)
!9150 = !DILocalVariable(name: "ct", scope: !9144, file: !3, line: 2016, type: !5872)
!9151 = !DILocation(line: 2016, column: 23, scope: !9144)
!9152 = !DILocation(line: 2018, column: 8, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 2018, column: 8)
!9154 = !DILocation(line: 2018, column: 8, scope: !9144)
!9155 = !DILocation(line: 2020, column: 9, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 2020, column: 9)
!9157 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 2018, column: 13)
!9158 = !DILocation(line: 2020, column: 9, scope: !9157)
!9159 = !DILocation(line: 2021, column: 6, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2020, column: 115)
!9161 = !DILocation(line: 2021, column: 10, scope: !9160)
!9162 = !DILocation(line: 2021, column: 17, scope: !9160)
!9163 = !DILocation(line: 2022, column: 5, scope: !9160)
!9164 = !DILocation(line: 2023, column: 14, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2023, column: 14)
!9166 = !DILocation(line: 2023, column: 19, scope: !9165)
!9167 = !DILocation(line: 2023, column: 14, scope: !9156)
!9168 = !DILocation(line: 2024, column: 6, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 2023, column: 43)
!9170 = !DILocation(line: 2024, column: 11, scope: !9169)
!9171 = !DILocation(line: 2024, column: 34, scope: !9169)
!9172 = !DILocation(line: 2026, column: 24, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2026, column: 6)
!9174 = !DILocation(line: 2026, column: 16, scope: !9173)
!9175 = !DILocation(line: 2026, column: 14, scope: !9173)
!9176 = !DILocation(line: 2026, column: 11, scope: !9173)
!9177 = !DILocation(line: 2026, column: 31, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2026, column: 6)
!9179 = !DILocation(line: 2026, column: 6, scope: !9173)
!9180 = !DILocation(line: 2027, column: 11, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 2027, column: 11)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 2026, column: 50)
!9183 = !DILocation(line: 2027, column: 15, scope: !9181)
!9184 = !DILocation(line: 2027, column: 11, scope: !9182)
!9185 = !DILocation(line: 2028, column: 8, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2027, column: 20)
!9187 = !DILocation(line: 2028, column: 12, scope: !9186)
!9188 = !DILocation(line: 2028, column: 19, scope: !9186)
!9189 = !DILocation(line: 2029, column: 8, scope: !9186)
!9190 = !DILocation(line: 2031, column: 6, scope: !9182)
!9191 = !DILocation(line: 2026, column: 40, scope: !9178)
!9192 = !DILocation(line: 2026, column: 44, scope: !9178)
!9193 = !DILocation(line: 2026, column: 38, scope: !9178)
!9194 = !DILocation(line: 2026, column: 6, scope: !9178)
!9195 = distinct !{!9195, !9179, !9196}
!9196 = !DILocation(line: 2031, column: 6, scope: !9173)
!9197 = !DILocation(line: 2033, column: 10, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2033, column: 10)
!9199 = !DILocation(line: 2033, column: 15, scope: !9198)
!9200 = !DILocation(line: 2033, column: 10, scope: !9169)
!9201 = !DILocation(line: 2034, column: 7, scope: !9198)
!9202 = !DILocation(line: 2034, column: 12, scope: !9198)
!9203 = !DILocation(line: 2034, column: 37, scope: !9198)
!9204 = !DILocation(line: 2035, column: 5, scope: !9169)
!9205 = !DILocation(line: 2037, column: 4, scope: !9157)
!9206 = !DILocation(line: 2038, column: 3, scope: !9144)
!9207 = !DILocation(line: 2013, column: 48, scope: !9141)
!9208 = !DILocation(line: 2013, column: 53, scope: !9141)
!9209 = !DILocation(line: 2013, column: 46, scope: !9141)
!9210 = !DILocation(line: 2013, column: 3, scope: !9141)
!9211 = distinct !{!9211, !9142, !9212}
!9212 = !DILocation(line: 2038, column: 3, scope: !9135)
!9213 = !DILocation(line: 2039, column: 2, scope: !9132)
!9214 = !DILocation(line: 2041, column: 6, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2041, column: 6)
!9216 = !DILocation(line: 2041, column: 10, scope: !9215)
!9217 = !DILocation(line: 2041, column: 6, scope: !9117)
!9218 = !DILocation(line: 2043, column: 7, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2043, column: 7)
!9220 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 2041, column: 18)
!9221 = !DILocation(line: 2043, column: 11, scope: !9219)
!9222 = !DILocation(line: 2043, column: 19, scope: !9219)
!9223 = !DILocation(line: 2043, column: 24, scope: !9219)
!9224 = !DILocation(line: 2043, column: 36, scope: !9219)
!9225 = !DILocation(line: 2043, column: 39, scope: !9219)
!9226 = !DILocation(line: 2043, column: 43, scope: !9219)
!9227 = !DILocation(line: 2043, column: 51, scope: !9219)
!9228 = !DILocation(line: 2043, column: 56, scope: !9219)
!9229 = !DILocation(line: 2043, column: 7, scope: !9220)
!9230 = !DILocation(line: 2043, column: 72, scope: !9219)
!9231 = !DILocation(line: 2043, column: 76, scope: !9219)
!9232 = !DILocation(line: 2043, column: 83, scope: !9219)
!9233 = !DILocation(line: 2044, column: 2, scope: !9220)
!9234 = !DILocation(line: 2059, column: 24, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2059, column: 6)
!9236 = !DILocation(line: 2059, column: 28, scope: !9235)
!9237 = !DILocation(line: 2059, column: 6, scope: !9235)
!9238 = !DILocation(line: 2059, column: 6, scope: !9117)
!9239 = !DILocation(line: 2060, column: 3, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 2059, column: 34)
!9241 = !DILocation(line: 2060, column: 7, scope: !9240)
!9242 = !DILocation(line: 2060, column: 14, scope: !9240)
!9243 = !DILocation(line: 2061, column: 3, scope: !9240)
!9244 = !DILocation(line: 2061, column: 7, scope: !9240)
!9245 = !DILocation(line: 2061, column: 12, scope: !9240)
!9246 = !DILocation(line: 2061, column: 19, scope: !9240)
!9247 = !DILocation(line: 2062, column: 2, scope: !9240)
!9248 = !DILocation(line: 2064, column: 7, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2064, column: 6)
!9250 = !DILocation(line: 2064, column: 11, scope: !9249)
!9251 = !DILocation(line: 2064, column: 6, scope: !9249)
!9252 = !DILocation(line: 2064, column: 16, scope: !9249)
!9253 = !DILocation(line: 2064, column: 20, scope: !9249)
!9254 = !DILocation(line: 2064, column: 24, scope: !9249)
!9255 = !DILocation(line: 2064, column: 29, scope: !9249)
!9256 = !DILocation(line: 2064, column: 6, scope: !9117)
!9257 = !DILocation(line: 2064, column: 46, scope: !9249)
!9258 = !DILocation(line: 2064, column: 50, scope: !9249)
!9259 = !DILocation(line: 2064, column: 57, scope: !9249)
!9260 = !DILocation(line: 2066, column: 32, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2066, column: 6)
!9262 = !DILocation(line: 2066, column: 6, scope: !9261)
!9263 = !DILocation(line: 2066, column: 6, scope: !9117)
!9264 = !DILocation(line: 2066, column: 37, scope: !9261)
!9265 = !DILocation(line: 2066, column: 41, scope: !9261)
!9266 = !DILocation(line: 2066, column: 48, scope: !9261)
!9267 = !DILocation(line: 2067, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2067, column: 6)
!9269 = !DILocation(line: 2067, column: 11, scope: !9268)
!9270 = !DILocation(line: 2067, column: 6, scope: !9268)
!9271 = !DILocation(line: 2067, column: 17, scope: !9268)
!9272 = !DILocation(line: 2067, column: 21, scope: !9268)
!9273 = !DILocation(line: 2067, column: 25, scope: !9268)
!9274 = !DILocation(line: 2067, column: 31, scope: !9268)
!9275 = !DILocation(line: 2067, column: 36, scope: !9268)
!9276 = !DILocation(line: 2067, column: 6, scope: !9117)
!9277 = !DILocation(line: 2067, column: 68, scope: !9268)
!9278 = !DILocation(line: 2067, column: 72, scope: !9268)
!9279 = !DILocation(line: 2067, column: 79, scope: !9268)
!9280 = !DILocation(line: 2070, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2070, column: 6)
!9282 = !DILocation(line: 2070, column: 10, scope: !9281)
!9283 = !DILocation(line: 2070, column: 27, scope: !9281)
!9284 = !DILocation(line: 2070, column: 63, scope: !9281)
!9285 = !DILocation(line: 2070, column: 30, scope: !9281)
!9286 = !DILocation(line: 2070, column: 6, scope: !9117)
!9287 = !DILocation(line: 2071, column: 3, scope: !9281)
!9288 = !DILocation(line: 2071, column: 7, scope: !9281)
!9289 = !DILocation(line: 2071, column: 14, scope: !9281)
!9290 = !DILocalVariable(name: "adt", scope: !9291, file: !3, line: 2074, type: !6459)
!9291 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2073, column: 2)
!9292 = !DILocation(line: 2074, column: 13, scope: !9291)
!9293 = !DILocation(line: 2074, column: 46, scope: !9291)
!9294 = !DILocation(line: 2074, column: 50, scope: !9291)
!9295 = !DILocation(line: 2074, column: 40, scope: !9291)
!9296 = !DILocation(line: 2074, column: 19, scope: !9291)
!9297 = !DILocalVariable(name: "me", scope: !9291, file: !3, line: 2075, type: !9298)
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 64)
!9299 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !6053, line: 133, baseType: !9300)
!9300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !6053, line: 58, size: 11008, elements: !9301)
!9301 = !{!9302, !9303, !9304, !9305, !9306, !9307, !9308, !9314, !9315, !9325, !9326, !9332, !9340, !9341, !9342, !9355, !9356, !9357, !9358, !9366, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9376, !9377, !9378, !9379, !9380, !9381, !9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9393, !9394, !9395, !9396}
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9300, file: !6053, line: 59, baseType: !354, size: 960)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9300, file: !6053, line: 60, baseType: !425, size: 64, offset: 960)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !9300, file: !6053, line: 62, baseType: !2840, size: 64, offset: 1024)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9300, file: !6053, line: 64, baseType: !599, size: 64, offset: 1088)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9300, file: !6053, line: 65, baseType: !6209, size: 64, offset: 1152)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !9300, file: !6053, line: 66, baseType: !2916, size: 64, offset: 1216)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !9300, file: !6053, line: 67, baseType: !9309, size: 64, offset: 1280)
!9309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9310, size: 64)
!9310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !1951, line: 154, size: 64, elements: !9311)
!9311 = !{!9312, !9313}
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9310, file: !1951, line: 155, baseType: !389, size: 32)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9310, file: !1951, line: 156, baseType: !389, size: 32, offset: 32)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !9300, file: !6053, line: 71, baseType: !2746, size: 64, offset: 1344)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !9300, file: !6053, line: 72, baseType: !9316, size: 64, offset: 1408)
!9316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9317, size: 64)
!9317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !1951, line: 93, size: 128, elements: !9318)
!9318 = !{!9319, !9320, !9321, !9322, !9323, !9324}
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !9317, file: !1951, line: 94, baseType: !1486, size: 64)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9317, file: !1951, line: 95, baseType: !374, size: 8, offset: 64)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !9317, file: !1951, line: 95, baseType: !374, size: 8, offset: 72)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9317, file: !1951, line: 96, baseType: !387, size: 16, offset: 80)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !9317, file: !1951, line: 96, baseType: !387, size: 16, offset: 96)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9317, file: !1951, line: 96, baseType: !387, size: 16, offset: 112)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !9300, file: !6053, line: 73, baseType: !2755, size: 64, offset: 1472)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !9300, file: !6053, line: 74, baseType: !9327, size: 64, offset: 1536)
!9327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9328, size: 64)
!9328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !1951, line: 109, size: 96, elements: !9329)
!9329 = !{!9330, !9331}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !9328, file: !1951, line: 110, baseType: !946, size: 64)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9328, file: !1951, line: 111, baseType: !389, size: 32, offset: 64)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !9300, file: !6053, line: 75, baseType: !9333, size: 64, offset: 1600)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9334, size: 64)
!9334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !1951, line: 129, size: 32, elements: !9335)
!9335 = !{!9336, !9337, !9338, !9339}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9334, file: !1951, line: 130, baseType: !374, size: 8)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !9334, file: !1951, line: 130, baseType: !374, size: 8, offset: 8)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !9334, file: !1951, line: 130, baseType: !374, size: 8, offset: 16)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9334, file: !1951, line: 130, baseType: !374, size: 8, offset: 24)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !9300, file: !6053, line: 80, baseType: !3998, size: 64, offset: 1664)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !9300, file: !6053, line: 81, baseType: !4203, size: 64, offset: 1728)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !9300, file: !6053, line: 82, baseType: !9343, size: 64, offset: 1792)
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 64)
!9344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !6053, line: 136, size: 512, elements: !9345)
!9345 = !{!9346, !9347, !9348, !9350, !9351, !9352, !9353, !9354}
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !9344, file: !6053, line: 137, baseType: !348, size: 64)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !9344, file: !6053, line: 138, baseType: !2628, size: 256, offset: 64)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !9344, file: !6053, line: 139, baseType: !9349, size: 128, offset: 320)
!9349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !891)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9344, file: !6053, line: 140, baseType: !374, size: 8, offset: 448)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !9344, file: !6053, line: 140, baseType: !374, size: 8, offset: 456)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9344, file: !6053, line: 141, baseType: !387, size: 16, offset: 464)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !9344, file: !6053, line: 141, baseType: !387, size: 16, offset: 480)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !9344, file: !6053, line: 141, baseType: !387, size: 16, offset: 496)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !9300, file: !6053, line: 83, baseType: !2738, size: 64, offset: 1856)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !9300, file: !6053, line: 84, baseType: !3986, size: 64, offset: 1920)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !9300, file: !6053, line: 85, baseType: !1949, size: 64, offset: 1984)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !9300, file: !6053, line: 89, baseType: !9359, size: 64, offset: 2048)
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9360, size: 64)
!9360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !1951, line: 74, size: 32, elements: !9361)
!9361 = !{!9362, !9363, !9364, !9365}
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9360, file: !1951, line: 75, baseType: !374, size: 8)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9360, file: !1951, line: 75, baseType: !374, size: 8, offset: 8)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !9360, file: !1951, line: 75, baseType: !374, size: 8, offset: 16)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !9360, file: !1951, line: 75, baseType: !374, size: 8, offset: 24)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !9300, file: !6053, line: 90, baseType: !9367, size: 64, offset: 2112)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9300, size: 64)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !9300, file: !6053, line: 93, baseType: !6051, size: 64, offset: 2176)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !9300, file: !6053, line: 95, baseType: !3863, size: 1600, offset: 2240)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !9300, file: !6053, line: 95, baseType: !3863, size: 1600, offset: 3840)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !9300, file: !6053, line: 95, baseType: !3863, size: 1600, offset: 5440)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !9300, file: !6053, line: 98, baseType: !3863, size: 1600, offset: 7040)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !9300, file: !6053, line: 98, baseType: !3863, size: 1600, offset: 8640)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !9300, file: !6053, line: 101, baseType: !389, size: 32, offset: 10240)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !9300, file: !6053, line: 101, baseType: !389, size: 32, offset: 10272)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !9300, file: !6053, line: 101, baseType: !389, size: 32, offset: 10304)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !9300, file: !6053, line: 101, baseType: !389, size: 32, offset: 10336)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !9300, file: !6053, line: 104, baseType: !389, size: 32, offset: 10368)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !9300, file: !6053, line: 104, baseType: !389, size: 32, offset: 10400)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !9300, file: !6053, line: 111, baseType: !389, size: 32, offset: 10432)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !9300, file: !6053, line: 114, baseType: !1364, size: 96, offset: 10464)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9300, file: !6053, line: 115, baseType: !1364, size: 96, offset: 10560)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !9300, file: !6053, line: 116, baseType: !1364, size: 96, offset: 10656)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !9300, file: !6053, line: 118, baseType: !389, size: 32, offset: 10752)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !9300, file: !6053, line: 119, baseType: !387, size: 16, offset: 10784)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9300, file: !6053, line: 119, baseType: !387, size: 16, offset: 10800)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !9300, file: !6053, line: 120, baseType: !469, size: 32, offset: 10816)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9300, file: !6053, line: 121, baseType: !389, size: 32, offset: 10848)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !9300, file: !6053, line: 124, baseType: !374, size: 8, offset: 10880)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9300, file: !6053, line: 124, baseType: !374, size: 8, offset: 10888)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !9300, file: !6053, line: 126, baseType: !374, size: 8, offset: 10896)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !9300, file: !6053, line: 126, baseType: !374, size: 8, offset: 10904)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !9300, file: !6053, line: 127, baseType: !374, size: 8, offset: 10912)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !9300, file: !6053, line: 128, baseType: !374, size: 8, offset: 10920)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !9300, file: !6053, line: 130, baseType: !387, size: 16, offset: 10928)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !9300, file: !6053, line: 132, baseType: !9397, size: 64, offset: 10944)
!9397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9398, size: 64)
!9398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !1951, line: 233, size: 3584, elements: !9399)
!9399 = !{!9400, !9401, !9404, !9405, !9406, !9407, !9408, !9409, !9410, !9411, !9412, !9413, !9414, !9415}
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !9398, file: !1951, line: 234, baseType: !414, size: 128)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !9398, file: !1951, line: 235, baseType: !9402, size: 64, offset: 128)
!9402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9403, size: 64)
!9403 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !1951, line: 69, baseType: !2739)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 192)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 200)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 208)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 216)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 224)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !9398, file: !1951, line: 237, baseType: !1940, size: 8, offset: 232)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !9398, file: !1951, line: 238, baseType: !1940, size: 8, offset: 240)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9398, file: !1951, line: 238, baseType: !1940, size: 8, offset: 248)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !9398, file: !1951, line: 241, baseType: !3862, size: 1600, offset: 256)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !9398, file: !1951, line: 242, baseType: !3862, size: 1600, offset: 1856)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !9398, file: !1951, line: 243, baseType: !4396, size: 64, offset: 3456)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !9398, file: !1951, line: 244, baseType: !1255, size: 64, offset: 3520)
!9416 = !DILocation(line: 2075, column: 9, scope: !9291)
!9417 = !DILocalVariable(name: "cu", scope: !9291, file: !3, line: 2076, type: !6187)
!9418 = !DILocation(line: 2076, column: 10, scope: !9291)
!9419 = !DILocalVariable(name: "lt", scope: !9291, file: !3, line: 2077, type: !9420)
!9420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9421, size: 64)
!9421 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !9422, line: 72, baseType: !9423)
!9422 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !9422, line: 52, size: 2240, elements: !9424)
!9424 = !{!9425, !9426, !9427, !9428, !9429, !9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438, !9439, !9440, !9441, !9442, !9443, !9444, !9445, !9446, !9457, !9458, !9459, !9460, !9461}
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9423, file: !9422, line: 53, baseType: !354, size: 960)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9423, file: !9422, line: 54, baseType: !425, size: 64, offset: 960)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !9423, file: !9422, line: 56, baseType: !387, size: 16, offset: 1024)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !9423, file: !9422, line: 56, baseType: !387, size: 16, offset: 1040)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !9423, file: !9422, line: 56, baseType: !387, size: 16, offset: 1056)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9423, file: !9422, line: 56, baseType: !387, size: 16, offset: 1072)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !9423, file: !9422, line: 57, baseType: !387, size: 16, offset: 1088)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !9423, file: !9422, line: 57, baseType: !387, size: 16, offset: 1104)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !9423, file: !9422, line: 57, baseType: !387, size: 16, offset: 1120)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9423, file: !9422, line: 57, baseType: !387, size: 16, offset: 1136)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !9423, file: !9422, line: 58, baseType: !374, size: 8, offset: 1152)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !9423, file: !9422, line: 58, baseType: !374, size: 8, offset: 1160)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !9423, file: !9422, line: 58, baseType: !374, size: 8, offset: 1168)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !9423, file: !9422, line: 58, baseType: !374, size: 8, offset: 1176)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !9423, file: !9422, line: 59, baseType: !389, size: 32, offset: 1184)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1216)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1248)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1280)
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1312)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1344)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !9423, file: !9422, line: 61, baseType: !469, size: 32, offset: 1376)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !9423, file: !9422, line: 63, baseType: !9447, size: 64, offset: 1408)
!9447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9448, size: 64)
!9448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !1858, line: 136, size: 288, elements: !9449)
!9449 = !{!9450, !9451, !9452, !9453, !9454, !9455, !9456}
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !9448, file: !1858, line: 137, baseType: !890, size: 128)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !9448, file: !1858, line: 138, baseType: !469, size: 32, offset: 128)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !9448, file: !1858, line: 138, baseType: !469, size: 32, offset: 160)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !9448, file: !1858, line: 139, baseType: !387, size: 16, offset: 192)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !9448, file: !1858, line: 139, baseType: !387, size: 16, offset: 208)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !9448, file: !1858, line: 140, baseType: !469, size: 32, offset: 224)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9448, file: !1858, line: 140, baseType: !469, size: 32, offset: 256)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9423, file: !9422, line: 65, baseType: !599, size: 64, offset: 1472)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9423, file: !9422, line: 66, baseType: !6209, size: 64, offset: 1536)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !9423, file: !9422, line: 68, baseType: !1949, size: 64, offset: 1600)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !9423, file: !9422, line: 69, baseType: !404, size: 512, offset: 1664)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !9423, file: !9422, line: 71, baseType: !9462, size: 64, offset: 2176)
!9462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9463, size: 64)
!9463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !9422, line: 44, size: 128, elements: !9464)
!9464 = !{!9465, !9467, !9468}
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !9463, file: !9422, line: 45, baseType: !9466, size: 64)
!9466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9423, size: 64)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !9463, file: !9422, line: 47, baseType: !389, size: 32, offset: 64)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9463, file: !9422, line: 49, baseType: !1877, size: 32, offset: 96)
!9469 = !DILocation(line: 2077, column: 12, scope: !9291)
!9470 = !DILocation(line: 2079, column: 11, scope: !9291)
!9471 = !DILocation(line: 2079, column: 15, scope: !9291)
!9472 = !DILocation(line: 2079, column: 3, scope: !9291)
!9473 = !DILocation(line: 2081, column: 10, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2079, column: 21)
!9475 = !DILocation(line: 2081, column: 14, scope: !9474)
!9476 = !DILocation(line: 2081, column: 8, scope: !9474)
!9477 = !DILocation(line: 2082, column: 9, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2082, column: 9)
!9479 = !DILocation(line: 2082, column: 13, scope: !9478)
!9480 = !DILocation(line: 2082, column: 9, scope: !9474)
!9481 = !DILocation(line: 2083, column: 12, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 2083, column: 10)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 2082, column: 18)
!9484 = !DILocation(line: 2083, column: 16, scope: !9482)
!9485 = !DILocation(line: 2083, column: 26, scope: !9482)
!9486 = !DILocation(line: 2083, column: 10, scope: !9483)
!9487 = !DILocation(line: 2084, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 2083, column: 44)
!9489 = !DILocation(line: 2084, column: 11, scope: !9488)
!9490 = !DILocation(line: 2084, column: 18, scope: !9488)
!9491 = !DILocation(line: 2085, column: 6, scope: !9488)
!9492 = !DILocation(line: 2086, column: 5, scope: !9483)
!9493 = !DILocation(line: 2087, column: 9, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2087, column: 9)
!9495 = !DILocation(line: 2087, column: 13, scope: !9494)
!9496 = !DILocation(line: 2087, column: 28, scope: !9494)
!9497 = !DILocation(line: 2087, column: 9, scope: !9474)
!9498 = !DILocation(line: 2088, column: 6, scope: !9494)
!9499 = !DILocation(line: 2088, column: 10, scope: !9494)
!9500 = !DILocation(line: 2088, column: 17, scope: !9494)
!9501 = !DILocation(line: 2089, column: 5, scope: !9474)
!9502 = !DILocation(line: 2092, column: 10, scope: !9474)
!9503 = !DILocation(line: 2092, column: 14, scope: !9474)
!9504 = !DILocation(line: 2092, column: 8, scope: !9474)
!9505 = !DILocation(line: 2093, column: 9, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2093, column: 9)
!9507 = !DILocation(line: 2093, column: 13, scope: !9506)
!9508 = !DILocation(line: 2093, column: 9, scope: !9474)
!9509 = !DILocation(line: 2094, column: 12, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2094, column: 10)
!9511 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 2093, column: 18)
!9512 = !DILocation(line: 2094, column: 16, scope: !9510)
!9513 = !DILocation(line: 2094, column: 26, scope: !9510)
!9514 = !DILocation(line: 2094, column: 10, scope: !9511)
!9515 = !DILocation(line: 2095, column: 7, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 2094, column: 44)
!9517 = !DILocation(line: 2095, column: 11, scope: !9516)
!9518 = !DILocation(line: 2095, column: 18, scope: !9516)
!9519 = !DILocation(line: 2096, column: 6, scope: !9516)
!9520 = !DILocation(line: 2097, column: 5, scope: !9511)
!9521 = !DILocation(line: 2098, column: 5, scope: !9474)
!9522 = !DILocation(line: 2100, column: 10, scope: !9474)
!9523 = !DILocation(line: 2100, column: 14, scope: !9474)
!9524 = !DILocation(line: 2100, column: 8, scope: !9474)
!9525 = !DILocation(line: 2101, column: 32, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2101, column: 9)
!9527 = !DILocation(line: 2101, column: 36, scope: !9526)
!9528 = !DILocation(line: 2101, column: 9, scope: !9526)
!9529 = !DILocation(line: 2101, column: 42, scope: !9526)
!9530 = !DILocation(line: 2101, column: 45, scope: !9526)
!9531 = !DILocation(line: 2101, column: 49, scope: !9526)
!9532 = !DILocation(line: 2101, column: 53, scope: !9526)
!9533 = !DILocation(line: 2101, column: 56, scope: !9526)
!9534 = !DILocation(line: 2101, column: 60, scope: !9526)
!9535 = !DILocation(line: 2101, column: 9, scope: !9474)
!9536 = !DILocation(line: 2102, column: 6, scope: !9526)
!9537 = !DILocation(line: 2102, column: 10, scope: !9526)
!9538 = !DILocation(line: 2102, column: 17, scope: !9526)
!9539 = !DILocation(line: 2103, column: 5, scope: !9474)
!9540 = !DILocation(line: 2105, column: 10, scope: !9474)
!9541 = !DILocation(line: 2105, column: 14, scope: !9474)
!9542 = !DILocation(line: 2105, column: 8, scope: !9474)
!9543 = !DILocation(line: 2106, column: 9, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2106, column: 9)
!9545 = !DILocation(line: 2106, column: 13, scope: !9544)
!9546 = !DILocation(line: 2106, column: 9, scope: !9474)
!9547 = !DILocation(line: 2107, column: 12, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 2107, column: 10)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 2106, column: 18)
!9550 = !DILocation(line: 2107, column: 16, scope: !9548)
!9551 = !DILocation(line: 2107, column: 26, scope: !9548)
!9552 = !DILocation(line: 2107, column: 10, scope: !9549)
!9553 = !DILocation(line: 2108, column: 7, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 2107, column: 44)
!9555 = !DILocation(line: 2108, column: 11, scope: !9554)
!9556 = !DILocation(line: 2108, column: 18, scope: !9554)
!9557 = !DILocation(line: 2109, column: 6, scope: !9554)
!9558 = !DILocation(line: 2110, column: 5, scope: !9549)
!9559 = !DILocation(line: 2111, column: 5, scope: !9474)
!9560 = !DILocation(line: 2113, column: 9, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2113, column: 9)
!9562 = !DILocation(line: 2113, column: 13, scope: !9561)
!9563 = !DILocation(line: 2113, column: 23, scope: !9561)
!9564 = !DILocation(line: 2113, column: 9, scope: !9474)
!9565 = !DILocation(line: 2113, column: 35, scope: !9561)
!9566 = !DILocation(line: 2113, column: 39, scope: !9561)
!9567 = !DILocation(line: 2113, column: 46, scope: !9561)
!9568 = !DILocation(line: 2114, column: 5, scope: !9474)
!9569 = !DILocation(line: 2117, column: 9, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 2117, column: 9)
!9571 = !DILocation(line: 2117, column: 13, scope: !9570)
!9572 = !DILocation(line: 2117, column: 28, scope: !9570)
!9573 = !DILocation(line: 2117, column: 46, scope: !9570)
!9574 = !DILocation(line: 2117, column: 49, scope: !9570)
!9575 = !DILocation(line: 2117, column: 53, scope: !9570)
!9576 = !DILocation(line: 2117, column: 9, scope: !9474)
!9577 = !DILocation(line: 2118, column: 32, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 2118, column: 10)
!9579 = !DILocation(line: 2118, column: 36, scope: !9578)
!9580 = !DILocation(line: 2118, column: 10, scope: !9578)
!9581 = !DILocation(line: 2118, column: 10, scope: !9570)
!9582 = !DILocation(line: 2119, column: 7, scope: !9578)
!9583 = !DILocation(line: 2119, column: 11, scope: !9578)
!9584 = !DILocation(line: 2119, column: 18, scope: !9578)
!9585 = !DILocation(line: 2118, column: 40, scope: !9578)
!9586 = !DILocation(line: 2120, column: 5, scope: !9474)
!9587 = !DILocation(line: 2123, column: 25, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2123, column: 7)
!9589 = !DILocation(line: 2123, column: 7, scope: !9588)
!9590 = !DILocation(line: 2123, column: 7, scope: !9291)
!9591 = !DILocation(line: 2124, column: 4, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 2123, column: 31)
!9593 = !DILocation(line: 2124, column: 8, scope: !9592)
!9594 = !DILocation(line: 2124, column: 15, scope: !9592)
!9595 = !DILocation(line: 2125, column: 4, scope: !9592)
!9596 = !DILocation(line: 2125, column: 9, scope: !9592)
!9597 = !DILocation(line: 2125, column: 16, scope: !9592)
!9598 = !DILocation(line: 2126, column: 3, scope: !9592)
!9599 = !DILocation(line: 2128, column: 7, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2128, column: 7)
!9601 = !DILocation(line: 2128, column: 11, scope: !9600)
!9602 = !DILocation(line: 2128, column: 26, scope: !9600)
!9603 = !DILocation(line: 2128, column: 7, scope: !9291)
!9604 = !DILocalVariable(name: "psys", scope: !9605, file: !3, line: 2129, type: !5729)
!9605 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2128, column: 33)
!9606 = !DILocation(line: 2129, column: 20, scope: !9605)
!9607 = !DILocation(line: 2129, column: 27, scope: !9605)
!9608 = !DILocation(line: 2129, column: 31, scope: !9605)
!9609 = !DILocation(line: 2129, column: 46, scope: !9605)
!9610 = !DILocation(line: 2131, column: 4, scope: !9605)
!9611 = !DILocation(line: 2131, column: 11, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2131, column: 4)
!9613 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2131, column: 4)
!9614 = !DILocation(line: 2131, column: 4, scope: !9613)
!9615 = !DILocation(line: 2132, column: 28, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2132, column: 9)
!9617 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2131, column: 36)
!9618 = !DILocation(line: 2132, column: 32, scope: !9616)
!9619 = !DILocation(line: 2132, column: 9, scope: !9616)
!9620 = !DILocation(line: 2132, column: 9, scope: !9617)
!9621 = !DILocation(line: 2133, column: 6, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2132, column: 39)
!9623 = !DILocation(line: 2133, column: 10, scope: !9622)
!9624 = !DILocation(line: 2133, column: 17, scope: !9622)
!9625 = !DILocation(line: 2134, column: 6, scope: !9622)
!9626 = !DILocation(line: 2136, column: 4, scope: !9617)
!9627 = !DILocation(line: 2131, column: 24, scope: !9612)
!9628 = !DILocation(line: 2131, column: 30, scope: !9612)
!9629 = !DILocation(line: 2131, column: 22, scope: !9612)
!9630 = !DILocation(line: 2131, column: 4, scope: !9612)
!9631 = distinct !{!9631, !9614, !9632}
!9632 = !DILocation(line: 2136, column: 4, scope: !9613)
!9633 = !DILocation(line: 2137, column: 3, scope: !9605)
!9634 = !DILocation(line: 2140, column: 6, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2140, column: 6)
!9636 = !DILocation(line: 2140, column: 10, scope: !9635)
!9637 = !DILocation(line: 2140, column: 17, scope: !9635)
!9638 = !DILocation(line: 2140, column: 6, scope: !9117)
!9639 = !DILocation(line: 2141, column: 21, scope: !9635)
!9640 = !DILocation(line: 2141, column: 29, scope: !9635)
!9641 = !DILocation(line: 2141, column: 33, scope: !9635)
!9642 = !DILocation(line: 2141, column: 3, scope: !9635)
!9643 = !DILocation(line: 2142, column: 6, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2142, column: 6)
!9645 = !DILocation(line: 2142, column: 10, scope: !9644)
!9646 = !DILocation(line: 2142, column: 17, scope: !9644)
!9647 = !DILocation(line: 2142, column: 6, scope: !9117)
!9648 = !DILocation(line: 2143, column: 26, scope: !9644)
!9649 = !DILocation(line: 2143, column: 34, scope: !9644)
!9650 = !DILocation(line: 2143, column: 38, scope: !9644)
!9651 = !DILocation(line: 2143, column: 3, scope: !9644)
!9652 = !DILocation(line: 2145, column: 1, scope: !9117)
!9653 = distinct !DISubprogram(name: "dag_group_update_flags", scope: !3, file: !3, line: 2148, type: !9654, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{null, !4595, !4663, !7293, !4213}
!9656 = !DILocalVariable(name: "bmain", arg: 1, scope: !9653, file: !3, line: 2148, type: !4595)
!9657 = !DILocation(line: 2148, column: 42, scope: !9653)
!9658 = !DILocalVariable(name: "scene", arg: 2, scope: !9653, file: !3, line: 2148, type: !4663)
!9659 = !DILocation(line: 2148, column: 56, scope: !9653)
!9660 = !DILocalVariable(name: "group", arg: 3, scope: !9653, file: !3, line: 2148, type: !7293)
!9661 = !DILocation(line: 2148, column: 70, scope: !9653)
!9662 = !DILocalVariable(name: "do_time", arg: 4, scope: !9653, file: !3, line: 2148, type: !4213)
!9663 = !DILocation(line: 2148, column: 88, scope: !9653)
!9664 = !DILocalVariable(name: "go", scope: !9653, file: !3, line: 2150, type: !4527)
!9665 = !DILocation(line: 2150, column: 15, scope: !9653)
!9666 = !DILocation(line: 2152, column: 6, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2152, column: 6)
!9668 = !DILocation(line: 2152, column: 13, scope: !9667)
!9669 = !DILocation(line: 2152, column: 16, scope: !9667)
!9670 = !DILocation(line: 2152, column: 21, scope: !9667)
!9671 = !DILocation(line: 2152, column: 6, scope: !9653)
!9672 = !DILocation(line: 2153, column: 3, scope: !9667)
!9673 = !DILocation(line: 2155, column: 2, scope: !9653)
!9674 = !DILocation(line: 2155, column: 9, scope: !9653)
!9675 = !DILocation(line: 2155, column: 12, scope: !9653)
!9676 = !DILocation(line: 2155, column: 17, scope: !9653)
!9677 = !DILocation(line: 2157, column: 12, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2157, column: 2)
!9679 = !DILocation(line: 2157, column: 19, scope: !9678)
!9680 = !DILocation(line: 2157, column: 27, scope: !9678)
!9681 = !DILocation(line: 2157, column: 10, scope: !9678)
!9682 = !DILocation(line: 2157, column: 7, scope: !9678)
!9683 = !DILocation(line: 2157, column: 34, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 2157, column: 2)
!9685 = !DILocation(line: 2157, column: 2, scope: !9678)
!9686 = !DILocation(line: 2158, column: 7, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2158, column: 7)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 2157, column: 53)
!9689 = !DILocation(line: 2158, column: 7, scope: !9688)
!9690 = !DILocation(line: 2159, column: 33, scope: !9687)
!9691 = !DILocation(line: 2159, column: 40, scope: !9687)
!9692 = !DILocation(line: 2159, column: 47, scope: !9687)
!9693 = !DILocation(line: 2159, column: 51, scope: !9687)
!9694 = !DILocation(line: 2159, column: 4, scope: !9687)
!9695 = !DILocation(line: 2160, column: 7, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2160, column: 7)
!9697 = !DILocation(line: 2160, column: 11, scope: !9696)
!9698 = !DILocation(line: 2160, column: 15, scope: !9696)
!9699 = !DILocation(line: 2160, column: 7, scope: !9688)
!9700 = !DILocation(line: 2161, column: 27, scope: !9696)
!9701 = !DILocation(line: 2161, column: 34, scope: !9696)
!9702 = !DILocation(line: 2161, column: 41, scope: !9696)
!9703 = !DILocation(line: 2161, column: 45, scope: !9696)
!9704 = !DILocation(line: 2161, column: 49, scope: !9696)
!9705 = !DILocation(line: 2161, column: 60, scope: !9696)
!9706 = !DILocation(line: 2161, column: 4, scope: !9696)
!9707 = !DILocation(line: 2162, column: 2, scope: !9688)
!9708 = !DILocation(line: 2157, column: 43, scope: !9684)
!9709 = !DILocation(line: 2157, column: 47, scope: !9684)
!9710 = !DILocation(line: 2157, column: 41, scope: !9684)
!9711 = !DILocation(line: 2157, column: 2, scope: !9684)
!9712 = distinct !{!9712, !9685, !9713}
!9713 = !DILocation(line: 2162, column: 2, scope: !9678)
!9714 = !DILocation(line: 2163, column: 1, scope: !9653)
!9715 = distinct !DISubprogram(name: "dag_invisible_dependencies_check_flush", scope: !3, file: !3, line: 1504, type: !7818, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!9716 = !DILocalVariable(name: "bmain", arg: 1, scope: !9715, file: !3, line: 1504, type: !4595)
!9717 = !DILocation(line: 1504, column: 58, scope: !9715)
!9718 = !DILocalVariable(name: "scene", arg: 2, scope: !9715, file: !3, line: 1504, type: !4663)
!9719 = !DILocation(line: 1504, column: 72, scope: !9715)
!9720 = !DILocation(line: 1506, column: 25, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 1506, column: 6)
!9722 = !DILocation(line: 1506, column: 6, scope: !9721)
!9723 = !DILocation(line: 1506, column: 39, scope: !9721)
!9724 = !DILocation(line: 1507, column: 25, scope: !9721)
!9725 = !DILocation(line: 1507, column: 6, scope: !9721)
!9726 = !DILocation(line: 1507, column: 39, scope: !9721)
!9727 = !DILocation(line: 1508, column: 25, scope: !9721)
!9728 = !DILocation(line: 1508, column: 6, scope: !9721)
!9729 = !DILocation(line: 1508, column: 39, scope: !9721)
!9730 = !DILocation(line: 1509, column: 25, scope: !9721)
!9731 = !DILocation(line: 1509, column: 6, scope: !9721)
!9732 = !DILocation(line: 1509, column: 39, scope: !9721)
!9733 = !DILocation(line: 1510, column: 25, scope: !9721)
!9734 = !DILocation(line: 1510, column: 6, scope: !9721)
!9735 = !DILocation(line: 1506, column: 6, scope: !9715)
!9736 = !DILocation(line: 1512, column: 36, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 1511, column: 2)
!9738 = !DILocation(line: 1512, column: 3, scope: !9737)
!9739 = !DILocation(line: 1513, column: 2, scope: !9737)
!9740 = !DILocation(line: 1514, column: 1, scope: !9715)
!9741 = distinct !DISubprogram(name: "DAG_on_visible_update", scope: !3, file: !3, line: 2325, type: !9742, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !4595, !4213}
!9744 = !DILocalVariable(name: "bmain", arg: 1, scope: !9741, file: !3, line: 2325, type: !4595)
!9745 = !DILocation(line: 2325, column: 34, scope: !9741)
!9746 = !DILocalVariable(name: "do_time", arg: 2, scope: !9741, file: !3, line: 2325, type: !4213)
!9747 = !DILocation(line: 2325, column: 52, scope: !9741)
!9748 = !DILocalVariable(name: "listbase", scope: !9741, file: !3, line: 2327, type: !414)
!9749 = !DILocation(line: 2327, column: 11, scope: !9741)
!9750 = !DILocalVariable(name: "dsl", scope: !9741, file: !3, line: 2328, type: !9751)
!9751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9752, size: 64)
!9752 = !DIDerivedType(tag: DW_TAG_typedef, name: "DagSceneLayer", file: !3, line: 2233, baseType: !9753)
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DagSceneLayer", file: !3, line: 2229, size: 256, elements: !9754)
!9754 = !{!9755, !9757, !9758, !9759}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9753, file: !3, line: 2230, baseType: !9756, size: 64)
!9756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9753, size: 64)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9753, file: !3, line: 2230, baseType: !9756, size: 64, offset: 64)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !9753, file: !3, line: 2231, baseType: !4663, size: 64, offset: 128)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !9753, file: !3, line: 2232, baseType: !7, size: 32, offset: 192)
!9760 = !DILocation(line: 2328, column: 17, scope: !9741)
!9761 = !DILocation(line: 2331, column: 27, scope: !9741)
!9762 = !DILocation(line: 2331, column: 2, scope: !9741)
!9763 = !DILocation(line: 2333, column: 22, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2333, column: 2)
!9765 = !DILocation(line: 2333, column: 13, scope: !9764)
!9766 = !DILocation(line: 2333, column: 11, scope: !9764)
!9767 = !DILocation(line: 2333, column: 7, scope: !9764)
!9768 = !DILocation(line: 2333, column: 29, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 2333, column: 2)
!9770 = !DILocation(line: 2333, column: 2, scope: !9764)
!9771 = !DILocalVariable(name: "scene", scope: !9772, file: !3, line: 2334, type: !4663)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 2333, column: 51)
!9773 = !DILocation(line: 2334, column: 10, scope: !9772)
!9774 = !DILocation(line: 2334, column: 18, scope: !9772)
!9775 = !DILocation(line: 2334, column: 23, scope: !9772)
!9776 = !DILocalVariable(name: "sce_iter", scope: !9772, file: !3, line: 2335, type: !4663)
!9777 = !DILocation(line: 2335, column: 10, scope: !9772)
!9778 = !DILocalVariable(name: "base", scope: !9772, file: !3, line: 2336, type: !5299)
!9779 = !DILocation(line: 2336, column: 9, scope: !9772)
!9780 = !DILocalVariable(name: "ob", scope: !9772, file: !3, line: 2337, type: !349)
!9781 = !DILocation(line: 2337, column: 11, scope: !9772)
!9782 = !DILocalVariable(name: "node", scope: !9772, file: !3, line: 2338, type: !4397)
!9783 = !DILocation(line: 2338, column: 12, scope: !9772)
!9784 = !DILocalVariable(name: "lay", scope: !9772, file: !3, line: 2339, type: !7)
!9785 = !DILocation(line: 2339, column: 16, scope: !9772)
!9786 = !DILocation(line: 2339, column: 22, scope: !9772)
!9787 = !DILocation(line: 2339, column: 27, scope: !9772)
!9788 = !DILocalVariable(name: "oblay", scope: !9772, file: !3, line: 2339, type: !7)
!9789 = !DILocation(line: 2339, column: 34, scope: !9772)
!9790 = !DILocation(line: 2345, column: 19, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2345, column: 3)
!9792 = !DILocation(line: 2345, column: 17, scope: !9791)
!9793 = !DILocation(line: 2345, column: 8, scope: !9791)
!9794 = !DILocation(line: 2345, column: 26, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 2345, column: 3)
!9796 = !DILocation(line: 2345, column: 3, scope: !9791)
!9797 = !DILocation(line: 2346, column: 27, scope: !9795)
!9798 = !DILocation(line: 2346, column: 37, scope: !9795)
!9799 = !DILocation(line: 2346, column: 4, scope: !9795)
!9800 = !DILocation(line: 2345, column: 47, scope: !9795)
!9801 = !DILocation(line: 2345, column: 57, scope: !9795)
!9802 = !DILocation(line: 2345, column: 45, scope: !9795)
!9803 = !DILocation(line: 2345, column: 3, scope: !9795)
!9804 = distinct !{!9804, !9796, !9805}
!9805 = !DILocation(line: 2346, column: 40, scope: !9791)
!9806 = !DILocation(line: 2348, column: 26, scope: !9772)
!9807 = !DILocation(line: 2348, column: 3, scope: !9772)
!9808 = !DILocation(line: 2350, column: 8, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2350, column: 3)
!9810 = !DILocation(line: 2350, column: 8, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 2350, column: 3)
!9812 = !DILocation(line: 2350, column: 3, scope: !9809)
!9813 = !DILocation(line: 2351, column: 9, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 2350, column: 42)
!9815 = !DILocation(line: 2351, column: 15, scope: !9814)
!9816 = !DILocation(line: 2351, column: 7, scope: !9814)
!9817 = !DILocation(line: 2352, column: 12, scope: !9814)
!9818 = !DILocation(line: 2352, column: 22, scope: !9814)
!9819 = !DILocation(line: 2352, column: 11, scope: !9814)
!9820 = !DILocation(line: 2352, column: 45, scope: !9814)
!9821 = !DILocation(line: 2352, column: 55, scope: !9814)
!9822 = !DILocation(line: 2352, column: 63, scope: !9814)
!9823 = !DILocation(line: 2352, column: 32, scope: !9814)
!9824 = !DILocation(line: 2352, column: 9, scope: !9814)
!9825 = !DILocation(line: 2353, column: 13, scope: !9814)
!9826 = !DILocation(line: 2353, column: 12, scope: !9814)
!9827 = !DILocation(line: 2353, column: 21, scope: !9814)
!9828 = !DILocation(line: 2353, column: 27, scope: !9814)
!9829 = !DILocation(line: 2353, column: 33, scope: !9814)
!9830 = !DILocation(line: 2353, column: 37, scope: !9814)
!9831 = !DILocation(line: 2353, column: 10, scope: !9814)
!9832 = !DILocation(line: 2355, column: 9, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 2355, column: 8)
!9834 = !DILocation(line: 2355, column: 17, scope: !9833)
!9835 = !DILocation(line: 2355, column: 15, scope: !9833)
!9836 = !DILocation(line: 2355, column: 25, scope: !9833)
!9837 = !DILocation(line: 2355, column: 32, scope: !9833)
!9838 = !DILocation(line: 2355, column: 24, scope: !9833)
!9839 = !DILocation(line: 2355, column: 22, scope: !9833)
!9840 = !DILocation(line: 2355, column: 8, scope: !9814)
!9841 = !DILocation(line: 2356, column: 9, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2356, column: 9)
!9843 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 2355, column: 45)
!9844 = !DILocation(line: 2356, column: 9, scope: !9843)
!9845 = !DILocation(line: 2357, column: 6, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 2356, column: 84)
!9847 = !DILocation(line: 2357, column: 10, scope: !9846)
!9848 = !DILocation(line: 2357, column: 17, scope: !9846)
!9849 = !DILocation(line: 2358, column: 24, scope: !9846)
!9850 = !DILocation(line: 2358, column: 32, scope: !9846)
!9851 = !DILocation(line: 2358, column: 36, scope: !9846)
!9852 = !DILocation(line: 2358, column: 6, scope: !9846)
!9853 = !DILocation(line: 2359, column: 5, scope: !9846)
!9854 = !DILocation(line: 2360, column: 9, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2360, column: 9)
!9856 = !DILocation(line: 2360, column: 13, scope: !9855)
!9857 = !DILocation(line: 2360, column: 19, scope: !9855)
!9858 = !DILocation(line: 2360, column: 23, scope: !9855)
!9859 = !DILocation(line: 2360, column: 27, scope: !9855)
!9860 = !DILocation(line: 2360, column: 39, scope: !9855)
!9861 = !DILocation(line: 2360, column: 9, scope: !9843)
!9862 = !DILocation(line: 2361, column: 6, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 2360, column: 49)
!9864 = !DILocation(line: 2361, column: 10, scope: !9863)
!9865 = !DILocation(line: 2361, column: 17, scope: !9863)
!9866 = !DILocation(line: 2361, column: 24, scope: !9863)
!9867 = !DILocation(line: 2362, column: 24, scope: !9863)
!9868 = !DILocation(line: 2362, column: 32, scope: !9863)
!9869 = !DILocation(line: 2362, column: 36, scope: !9863)
!9870 = !DILocation(line: 2362, column: 6, scope: !9863)
!9871 = !DILocation(line: 2363, column: 5, scope: !9863)
!9872 = !DILocation(line: 2364, column: 9, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2364, column: 9)
!9874 = !DILocation(line: 2364, column: 13, scope: !9873)
!9875 = !DILocation(line: 2364, column: 9, scope: !9843)
!9876 = !DILocation(line: 2365, column: 34, scope: !9873)
!9877 = !DILocation(line: 2365, column: 38, scope: !9873)
!9878 = !DILocation(line: 2365, column: 6, scope: !9873)
!9879 = !DILocation(line: 2366, column: 4, scope: !9843)
!9880 = !DILocation(line: 2367, column: 3, scope: !9814)
!9881 = !DILocation(line: 2350, column: 3, scope: !9811)
!9882 = distinct !{!9882, !9812, !9883}
!9883 = !DILocation(line: 2367, column: 3, scope: !9809)
!9884 = !DILocation(line: 2369, column: 26, scope: !9772)
!9885 = !DILocation(line: 2369, column: 3, scope: !9772)
!9886 = !DILocation(line: 2372, column: 26, scope: !9772)
!9887 = !DILocation(line: 2372, column: 33, scope: !9772)
!9888 = !DILocation(line: 2372, column: 40, scope: !9772)
!9889 = !DILocation(line: 2372, column: 45, scope: !9772)
!9890 = !DILocation(line: 2372, column: 3, scope: !9772)
!9891 = !DILocation(line: 2373, column: 25, scope: !9772)
!9892 = !DILocation(line: 2373, column: 3, scope: !9772)
!9893 = !DILocation(line: 2373, column: 10, scope: !9772)
!9894 = !DILocation(line: 2373, column: 22, scope: !9772)
!9895 = !DILocation(line: 2374, column: 2, scope: !9772)
!9896 = !DILocation(line: 2333, column: 40, scope: !9769)
!9897 = !DILocation(line: 2333, column: 45, scope: !9769)
!9898 = !DILocation(line: 2333, column: 38, scope: !9769)
!9899 = !DILocation(line: 2333, column: 2, scope: !9769)
!9900 = distinct !{!9900, !9770, !9901}
!9901 = !DILocation(line: 2374, column: 2, scope: !9764)
!9902 = !DILocation(line: 2376, column: 2, scope: !9741)
!9903 = !DILocation(line: 2379, column: 18, scope: !9741)
!9904 = !DILocation(line: 2379, column: 2, scope: !9741)
!9905 = !DILocation(line: 2382, column: 6, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2382, column: 6)
!9907 = !DILocation(line: 2382, column: 13, scope: !9906)
!9908 = !DILocation(line: 2382, column: 18, scope: !9906)
!9909 = !DILocation(line: 2382, column: 6, scope: !9741)
!9910 = !DILocalVariable(name: "mask", scope: !9911, file: !3, line: 2383, type: !9912)
!9911 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2382, column: 25)
!9912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9913, size: 64)
!9913 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !9914, line: 57, baseType: !9915)
!9914 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !9914, line: 46, size: 1344, elements: !9916)
!9916 = !{!9917, !9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925}
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9915, file: !9914, line: 47, baseType: !354, size: 960)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9915, file: !9914, line: 48, baseType: !425, size: 64, offset: 960)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !9915, file: !9914, line: 49, baseType: !414, size: 128, offset: 1024)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !9915, file: !9914, line: 50, baseType: !389, size: 32, offset: 1152)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !9915, file: !9914, line: 51, baseType: !389, size: 32, offset: 1184)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !9915, file: !9914, line: 53, baseType: !389, size: 32, offset: 1216)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !9915, file: !9914, line: 53, baseType: !389, size: 32, offset: 1248)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9915, file: !9914, line: 55, baseType: !389, size: 32, offset: 1280)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9915, file: !9914, line: 56, baseType: !389, size: 32, offset: 1312)
!9926 = !DILocation(line: 2383, column: 9, scope: !9911)
!9927 = !DILocation(line: 2385, column: 15, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 2385, column: 3)
!9929 = !DILocation(line: 2385, column: 22, scope: !9928)
!9930 = !DILocation(line: 2385, column: 27, scope: !9928)
!9931 = !DILocation(line: 2385, column: 13, scope: !9928)
!9932 = !DILocation(line: 2385, column: 8, scope: !9928)
!9933 = !DILocation(line: 2385, column: 34, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 2385, column: 3)
!9935 = !DILocation(line: 2385, column: 3, scope: !9928)
!9936 = !DILocation(line: 2386, column: 23, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2385, column: 62)
!9938 = !DILocation(line: 2386, column: 29, scope: !9937)
!9939 = !DILocation(line: 2386, column: 4, scope: !9937)
!9940 = !DILocation(line: 2387, column: 3, scope: !9937)
!9941 = !DILocation(line: 2385, column: 47, scope: !9934)
!9942 = !DILocation(line: 2385, column: 53, scope: !9934)
!9943 = !DILocation(line: 2385, column: 56, scope: !9934)
!9944 = !DILocation(line: 2385, column: 45, scope: !9934)
!9945 = !DILocation(line: 2385, column: 3, scope: !9934)
!9946 = distinct !{!9946, !9935, !9947}
!9947 = !DILocation(line: 2387, column: 3, scope: !9928)
!9948 = !DILocation(line: 2388, column: 2, scope: !9911)
!9949 = !DILocation(line: 2389, column: 1, scope: !9741)
!9950 = distinct !DISubprogram(name: "dag_current_scene_layers", scope: !3, file: !3, line: 2236, type: !9951, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{null, !4595, !4373}
!9953 = !DILocalVariable(name: "bmain", arg: 1, scope: !9950, file: !3, line: 2236, type: !4595)
!9954 = !DILocation(line: 2236, column: 44, scope: !9950)
!9955 = !DILocalVariable(name: "lb", arg: 2, scope: !9950, file: !3, line: 2236, type: !4373)
!9956 = !DILocation(line: 2236, column: 61, scope: !9950)
!9957 = !DILocalVariable(name: "wm", scope: !9950, file: !3, line: 2238, type: !9958)
!9958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9959, size: 64)
!9959 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !783, line: 160, baseType: !1001)
!9960 = !DILocation(line: 2238, column: 19, scope: !9950)
!9961 = !DILocalVariable(name: "win", scope: !9950, file: !3, line: 2239, type: !9962)
!9962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9963, size: 64)
!9963 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !783, line: 209, baseType: !1006)
!9964 = !DILocation(line: 2239, column: 12, scope: !9950)
!9965 = !DILocation(line: 2241, column: 21, scope: !9950)
!9966 = !DILocation(line: 2241, column: 2, scope: !9950)
!9967 = !DILocation(line: 2244, column: 12, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 2244, column: 6)
!9969 = !DILocation(line: 2244, column: 19, scope: !9968)
!9970 = !DILocation(line: 2244, column: 22, scope: !9968)
!9971 = !DILocation(line: 2244, column: 10, scope: !9968)
!9972 = !DILocation(line: 2244, column: 6, scope: !9950)
!9973 = !DILocation(line: 2246, column: 30, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2244, column: 30)
!9975 = !DILocation(line: 2246, column: 37, scope: !9974)
!9976 = !DILocation(line: 2246, column: 3, scope: !9974)
!9977 = !DILocation(line: 2248, column: 14, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 2248, column: 3)
!9979 = !DILocation(line: 2248, column: 18, scope: !9978)
!9980 = !DILocation(line: 2248, column: 26, scope: !9978)
!9981 = !DILocation(line: 2248, column: 12, scope: !9978)
!9982 = !DILocation(line: 2248, column: 8, scope: !9978)
!9983 = !DILocation(line: 2248, column: 33, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 2248, column: 3)
!9985 = !DILocation(line: 2248, column: 3, scope: !9978)
!9986 = !DILocation(line: 2249, column: 8, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 2249, column: 8)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 2248, column: 55)
!9989 = !DILocation(line: 2249, column: 13, scope: !9987)
!9990 = !DILocation(line: 2249, column: 20, scope: !9987)
!9991 = !DILocation(line: 2249, column: 23, scope: !9987)
!9992 = !DILocation(line: 2249, column: 28, scope: !9987)
!9993 = !DILocation(line: 2249, column: 36, scope: !9987)
!9994 = !DILocation(line: 2249, column: 43, scope: !9987)
!9995 = !DILocation(line: 2249, column: 8, scope: !9988)
!9996 = !DILocalVariable(name: "scene", scope: !9997, file: !3, line: 2250, type: !4663)
!9997 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 2249, column: 51)
!9998 = !DILocation(line: 2250, column: 12, scope: !9997)
!9999 = !DILocation(line: 2250, column: 20, scope: !9997)
!10000 = !DILocation(line: 2250, column: 25, scope: !9997)
!10001 = !DILocation(line: 2250, column: 33, scope: !9997)
!10002 = !DILocalVariable(name: "dsl", scope: !9997, file: !3, line: 2251, type: !9751)
!10003 = !DILocation(line: 2251, column: 20, scope: !9997)
!10004 = !DILocation(line: 2253, column: 9, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 2253, column: 9)
!10006 = !DILocation(line: 2253, column: 16, scope: !10005)
!10007 = !DILocation(line: 2253, column: 19, scope: !10005)
!10008 = !DILocation(line: 2253, column: 24, scope: !10005)
!10009 = !DILocation(line: 2253, column: 9, scope: !9997)
!10010 = !DILocation(line: 2254, column: 12, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2253, column: 36)
!10012 = !DILocation(line: 2254, column: 10, scope: !10011)
!10013 = !DILocation(line: 2256, column: 18, scope: !10011)
!10014 = !DILocation(line: 2256, column: 22, scope: !10011)
!10015 = !DILocation(line: 2256, column: 6, scope: !10011)
!10016 = !DILocation(line: 2258, column: 19, scope: !10011)
!10017 = !DILocation(line: 2258, column: 6, scope: !10011)
!10018 = !DILocation(line: 2258, column: 11, scope: !10011)
!10019 = !DILocation(line: 2258, column: 17, scope: !10011)
!10020 = !DILocation(line: 2259, column: 45, scope: !10011)
!10021 = !DILocation(line: 2259, column: 50, scope: !10011)
!10022 = !DILocation(line: 2259, column: 58, scope: !10011)
!10023 = !DILocation(line: 2259, column: 19, scope: !10011)
!10024 = !DILocation(line: 2259, column: 6, scope: !10011)
!10025 = !DILocation(line: 2259, column: 11, scope: !10011)
!10026 = !DILocation(line: 2259, column: 17, scope: !10011)
!10027 = !DILocation(line: 2261, column: 6, scope: !10011)
!10028 = !DILocation(line: 2261, column: 13, scope: !10011)
!10029 = !DILocation(line: 2261, column: 16, scope: !10011)
!10030 = !DILocation(line: 2261, column: 21, scope: !10011)
!10031 = !DILocation(line: 2262, column: 5, scope: !10011)
!10032 = !DILocation(line: 2274, column: 17, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 2274, column: 6)
!10034 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2263, column: 10)
!10035 = !DILocation(line: 2274, column: 21, scope: !10033)
!10036 = !DILocation(line: 2274, column: 15, scope: !10033)
!10037 = !DILocation(line: 2274, column: 11, scope: !10033)
!10038 = !DILocation(line: 2274, column: 28, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2274, column: 6)
!10040 = !DILocation(line: 2274, column: 6, scope: !10033)
!10041 = !DILocation(line: 2275, column: 11, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 2275, column: 11)
!10043 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 2274, column: 50)
!10044 = !DILocation(line: 2275, column: 16, scope: !10042)
!10045 = !DILocation(line: 2275, column: 25, scope: !10042)
!10046 = !DILocation(line: 2275, column: 22, scope: !10042)
!10047 = !DILocation(line: 2275, column: 11, scope: !10043)
!10048 = !DILocation(line: 2276, column: 48, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 2275, column: 32)
!10050 = !DILocation(line: 2276, column: 53, scope: !10049)
!10051 = !DILocation(line: 2276, column: 61, scope: !10049)
!10052 = !DILocation(line: 2276, column: 22, scope: !10049)
!10053 = !DILocation(line: 2276, column: 8, scope: !10049)
!10054 = !DILocation(line: 2276, column: 13, scope: !10049)
!10055 = !DILocation(line: 2276, column: 19, scope: !10049)
!10056 = !DILocation(line: 2277, column: 8, scope: !10049)
!10057 = !DILocation(line: 2279, column: 6, scope: !10043)
!10058 = !DILocation(line: 2274, column: 39, scope: !10039)
!10059 = !DILocation(line: 2274, column: 44, scope: !10039)
!10060 = !DILocation(line: 2274, column: 37, scope: !10039)
!10061 = !DILocation(line: 2274, column: 6, scope: !10039)
!10062 = distinct !{!10062, !10040, !10063}
!10063 = !DILocation(line: 2279, column: 6, scope: !10033)
!10064 = !DILocation(line: 2281, column: 4, scope: !9997)
!10065 = !DILocation(line: 2282, column: 3, scope: !9988)
!10066 = !DILocation(line: 2248, column: 44, scope: !9984)
!10067 = !DILocation(line: 2248, column: 49, scope: !9984)
!10068 = !DILocation(line: 2248, column: 42, scope: !9984)
!10069 = !DILocation(line: 2248, column: 3, scope: !9984)
!10070 = distinct !{!10070, !9985, !10071}
!10071 = !DILocation(line: 2282, column: 3, scope: !9978)
!10072 = !DILocation(line: 2283, column: 2, scope: !9974)
!10073 = !DILocalVariable(name: "dsl", scope: !10074, file: !3, line: 2286, type: !9751)
!10074 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2284, column: 7)
!10075 = !DILocation(line: 2286, column: 18, scope: !10074)
!10076 = !DILocation(line: 2286, column: 24, scope: !10074)
!10077 = !DILocation(line: 2288, column: 15, scope: !10074)
!10078 = !DILocation(line: 2288, column: 19, scope: !10074)
!10079 = !DILocation(line: 2288, column: 3, scope: !10074)
!10080 = !DILocation(line: 2290, column: 16, scope: !10074)
!10081 = !DILocation(line: 2290, column: 23, scope: !10074)
!10082 = !DILocation(line: 2290, column: 29, scope: !10074)
!10083 = !DILocation(line: 2290, column: 3, scope: !10074)
!10084 = !DILocation(line: 2290, column: 8, scope: !10074)
!10085 = !DILocation(line: 2290, column: 14, scope: !10074)
!10086 = !DILocation(line: 2291, column: 16, scope: !10074)
!10087 = !DILocation(line: 2291, column: 21, scope: !10074)
!10088 = !DILocation(line: 2291, column: 28, scope: !10074)
!10089 = !DILocation(line: 2291, column: 3, scope: !10074)
!10090 = !DILocation(line: 2291, column: 8, scope: !10074)
!10091 = !DILocation(line: 2291, column: 14, scope: !10074)
!10092 = !DILocation(line: 2297, column: 1, scope: !9950)
!10093 = distinct !DISubprogram(name: "lib_id_recalc_tag", scope: !3, file: !3, line: 1649, type: !4593, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10094 = !DILocalVariable(name: "bmain", arg: 1, scope: !10093, file: !3, line: 1649, type: !4595)
!10095 = !DILocation(line: 1649, column: 37, scope: !10093)
!10096 = !DILocalVariable(name: "id", arg: 2, scope: !10093, file: !3, line: 1649, type: !368)
!10097 = !DILocation(line: 1649, column: 48, scope: !10093)
!10098 = !DILocation(line: 1651, column: 2, scope: !10093)
!10099 = !DILocation(line: 1651, column: 6, scope: !10093)
!10100 = !DILocation(line: 1651, column: 11, scope: !10093)
!10101 = !DILocation(line: 1652, column: 18, scope: !10093)
!10102 = !DILocation(line: 1652, column: 25, scope: !10093)
!10103 = !DILocation(line: 1652, column: 2, scope: !10093)
!10104 = !DILocation(line: 1653, column: 1, scope: !10093)
!10105 = distinct !DISubprogram(name: "dag_group_on_visible_update", scope: !3, file: !3, line: 2299, type: !10106, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{null, !7293}
!10108 = !DILocalVariable(name: "group", arg: 1, scope: !10105, file: !3, line: 2299, type: !7293)
!10109 = !DILocation(line: 2299, column: 48, scope: !10105)
!10110 = !DILocalVariable(name: "go", scope: !10105, file: !3, line: 2301, type: !4527)
!10111 = !DILocation(line: 2301, column: 15, scope: !10105)
!10112 = !DILocation(line: 2303, column: 6, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 2303, column: 6)
!10114 = !DILocation(line: 2303, column: 13, scope: !10113)
!10115 = !DILocation(line: 2303, column: 16, scope: !10113)
!10116 = !DILocation(line: 2303, column: 21, scope: !10113)
!10117 = !DILocation(line: 2303, column: 6, scope: !10105)
!10118 = !DILocation(line: 2304, column: 3, scope: !10113)
!10119 = !DILocation(line: 2306, column: 2, scope: !10105)
!10120 = !DILocation(line: 2306, column: 9, scope: !10105)
!10121 = !DILocation(line: 2306, column: 12, scope: !10105)
!10122 = !DILocation(line: 2306, column: 17, scope: !10105)
!10123 = !DILocation(line: 2308, column: 12, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 2308, column: 2)
!10125 = !DILocation(line: 2308, column: 19, scope: !10124)
!10126 = !DILocation(line: 2308, column: 27, scope: !10124)
!10127 = !DILocation(line: 2308, column: 10, scope: !10124)
!10128 = !DILocation(line: 2308, column: 7, scope: !10124)
!10129 = !DILocation(line: 2308, column: 34, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 2308, column: 2)
!10131 = !DILocation(line: 2308, column: 2, scope: !10124)
!10132 = !DILocation(line: 2309, column: 7, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2309, column: 7)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 2308, column: 53)
!10135 = !DILocation(line: 2309, column: 7, scope: !10134)
!10136 = !DILocation(line: 2310, column: 4, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 2309, column: 86)
!10138 = !DILocation(line: 2310, column: 8, scope: !10137)
!10139 = !DILocation(line: 2310, column: 12, scope: !10137)
!10140 = !DILocation(line: 2310, column: 19, scope: !10137)
!10141 = !DILocation(line: 2311, column: 4, scope: !10137)
!10142 = !DILocation(line: 2311, column: 8, scope: !10137)
!10143 = !DILocation(line: 2311, column: 12, scope: !10137)
!10144 = !DILocation(line: 2311, column: 15, scope: !10137)
!10145 = !DILocation(line: 2311, column: 20, scope: !10137)
!10146 = !DILocation(line: 2312, column: 24, scope: !10137)
!10147 = !DILocation(line: 2312, column: 31, scope: !10137)
!10148 = !DILocation(line: 2312, column: 35, scope: !10137)
!10149 = !DILocation(line: 2312, column: 39, scope: !10137)
!10150 = !DILocation(line: 2312, column: 4, scope: !10137)
!10151 = !DILocation(line: 2313, column: 3, scope: !10137)
!10152 = !DILocation(line: 2314, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2314, column: 7)
!10154 = !DILocation(line: 2314, column: 11, scope: !10153)
!10155 = !DILocation(line: 2314, column: 15, scope: !10153)
!10156 = !DILocation(line: 2314, column: 7, scope: !10134)
!10157 = !DILocation(line: 2315, column: 4, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 2314, column: 27)
!10159 = !DILocation(line: 2315, column: 8, scope: !10158)
!10160 = !DILocation(line: 2315, column: 12, scope: !10158)
!10161 = !DILocation(line: 2315, column: 19, scope: !10158)
!10162 = !DILocation(line: 2316, column: 4, scope: !10158)
!10163 = !DILocation(line: 2316, column: 8, scope: !10158)
!10164 = !DILocation(line: 2316, column: 12, scope: !10158)
!10165 = !DILocation(line: 2316, column: 15, scope: !10158)
!10166 = !DILocation(line: 2316, column: 20, scope: !10158)
!10167 = !DILocation(line: 2317, column: 24, scope: !10158)
!10168 = !DILocation(line: 2317, column: 31, scope: !10158)
!10169 = !DILocation(line: 2317, column: 35, scope: !10158)
!10170 = !DILocation(line: 2317, column: 39, scope: !10158)
!10171 = !DILocation(line: 2317, column: 4, scope: !10158)
!10172 = !DILocation(line: 2318, column: 3, scope: !10158)
!10173 = !DILocation(line: 2320, column: 7, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2320, column: 7)
!10175 = !DILocation(line: 2320, column: 11, scope: !10174)
!10176 = !DILocation(line: 2320, column: 15, scope: !10174)
!10177 = !DILocation(line: 2320, column: 7, scope: !10134)
!10178 = !DILocation(line: 2321, column: 32, scope: !10174)
!10179 = !DILocation(line: 2321, column: 36, scope: !10174)
!10180 = !DILocation(line: 2321, column: 40, scope: !10174)
!10181 = !DILocation(line: 2321, column: 4, scope: !10174)
!10182 = !DILocation(line: 2322, column: 2, scope: !10134)
!10183 = !DILocation(line: 2308, column: 43, scope: !10130)
!10184 = !DILocation(line: 2308, column: 47, scope: !10130)
!10185 = !DILocation(line: 2308, column: 41, scope: !10130)
!10186 = !DILocation(line: 2308, column: 2, scope: !10130)
!10187 = distinct !{!10187, !10131, !10188}
!10188 = !DILocation(line: 2322, column: 2, scope: !10124)
!10189 = !DILocation(line: 2323, column: 1, scope: !10105)
!10190 = distinct !DISubprogram(name: "DAG_id_type_tag", scope: !3, file: !3, line: 2824, type: !10191, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !4595, !387}
!10193 = !DILocalVariable(name: "bmain", arg: 1, scope: !10190, file: !3, line: 2824, type: !4595)
!10194 = !DILocation(line: 2824, column: 28, scope: !10190)
!10195 = !DILocalVariable(name: "idtype", arg: 2, scope: !10190, file: !3, line: 2824, type: !387)
!10196 = !DILocation(line: 2824, column: 41, scope: !10190)
!10197 = !DILocation(line: 2826, column: 6, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 2826, column: 6)
!10199 = !DILocation(line: 2826, column: 13, scope: !10198)
!10200 = !DILocation(line: 2826, column: 6, scope: !10190)
!10201 = !DILocation(line: 2829, column: 19, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 2826, column: 23)
!10203 = !DILocation(line: 2829, column: 3, scope: !10202)
!10204 = !DILocation(line: 2830, column: 19, scope: !10202)
!10205 = !DILocation(line: 2830, column: 3, scope: !10202)
!10206 = !DILocation(line: 2831, column: 19, scope: !10202)
!10207 = !DILocation(line: 2831, column: 3, scope: !10202)
!10208 = !DILocation(line: 2832, column: 19, scope: !10202)
!10209 = !DILocation(line: 2832, column: 3, scope: !10202)
!10210 = !DILocation(line: 2833, column: 19, scope: !10202)
!10211 = !DILocation(line: 2833, column: 3, scope: !10202)
!10212 = !DILocation(line: 2834, column: 2, scope: !10202)
!10213 = !DILocation(line: 2836, column: 2, scope: !10190)
!10214 = !DILocation(line: 2836, column: 9, scope: !10190)
!10215 = !DILocation(line: 2836, column: 23, scope: !10190)
!10216 = !DILocation(line: 2836, column: 45, scope: !10190)
!10217 = !DILocation(line: 2837, column: 1, scope: !10190)
!10218 = distinct !DISubprogram(name: "DAG_id_tag_update", scope: !3, file: !3, line: 2819, type: !10219, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{null, !368, !387}
!10221 = !DILocalVariable(name: "id", arg: 1, scope: !10218, file: !3, line: 2819, type: !368)
!10222 = !DILocation(line: 2819, column: 28, scope: !10218)
!10223 = !DILocalVariable(name: "flag", arg: 2, scope: !10218, file: !3, line: 2819, type: !387)
!10224 = !DILocation(line: 2819, column: 38, scope: !10218)
!10225 = !DILocation(line: 2821, column: 25, scope: !10218)
!10226 = !DILocation(line: 2821, column: 31, scope: !10218)
!10227 = !DILocation(line: 2821, column: 35, scope: !10218)
!10228 = !DILocation(line: 2821, column: 2, scope: !10218)
!10229 = !DILocation(line: 2822, column: 1, scope: !10218)
!10230 = distinct !DISubprogram(name: "DAG_ids_flush_tagged", scope: !3, file: !3, line: 2592, type: !7771, scopeLine: 2593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10231 = !DILocalVariable(name: "bmain", arg: 1, scope: !10230, file: !3, line: 2592, type: !4595)
!10232 = !DILocation(line: 2592, column: 33, scope: !10230)
!10233 = !DILocalVariable(name: "listbase", scope: !10230, file: !3, line: 2594, type: !414)
!10234 = !DILocation(line: 2594, column: 11, scope: !10230)
!10235 = !DILocalVariable(name: "dsl", scope: !10230, file: !3, line: 2595, type: !9751)
!10236 = !DILocation(line: 2595, column: 17, scope: !10230)
!10237 = !DILocalVariable(name: "lbarray", scope: !10230, file: !3, line: 2596, type: !10238)
!10238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4373, size: 2240, elements: !10239)
!10239 = !{!10240}
!10240 = !DISubrange(count: 35)
!10241 = !DILocation(line: 2596, column: 12, scope: !10230)
!10242 = !DILocalVariable(name: "a", scope: !10230, file: !3, line: 2597, type: !389)
!10243 = !DILocation(line: 2597, column: 6, scope: !10230)
!10244 = !DILocalVariable(name: "do_flush", scope: !10230, file: !3, line: 2598, type: !1940)
!10245 = !DILocation(line: 2598, column: 7, scope: !10230)
!10246 = !DILocation(line: 2601, column: 27, scope: !10230)
!10247 = !DILocation(line: 2601, column: 2, scope: !10230)
!10248 = !DILocation(line: 2603, column: 6, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 2603, column: 6)
!10250 = !DILocation(line: 2603, column: 6, scope: !10230)
!10251 = !DILocation(line: 2604, column: 3, scope: !10249)
!10252 = !DILocation(line: 2607, column: 28, scope: !10230)
!10253 = !DILocation(line: 2607, column: 35, scope: !10230)
!10254 = !DILocation(line: 2607, column: 7, scope: !10230)
!10255 = !DILocation(line: 2607, column: 5, scope: !10230)
!10256 = !DILocation(line: 2609, column: 2, scope: !10230)
!10257 = !DILocation(line: 2609, column: 10, scope: !10230)
!10258 = !DILocalVariable(name: "lb", scope: !10259, file: !3, line: 2610, type: !4373)
!10259 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 2609, column: 14)
!10260 = !DILocation(line: 2610, column: 13, scope: !10259)
!10261 = !DILocation(line: 2610, column: 26, scope: !10259)
!10262 = !DILocation(line: 2610, column: 18, scope: !10259)
!10263 = !DILocalVariable(name: "id", scope: !10259, file: !3, line: 2611, type: !368)
!10264 = !DILocation(line: 2611, column: 7, scope: !10259)
!10265 = !DILocation(line: 2611, column: 12, scope: !10259)
!10266 = !DILocation(line: 2611, column: 16, scope: !10259)
!10267 = !DILocation(line: 2615, column: 7, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 2615, column: 7)
!10269 = !DILocation(line: 2615, column: 10, scope: !10268)
!10270 = !DILocation(line: 2615, column: 13, scope: !10268)
!10271 = !DILocation(line: 2615, column: 20, scope: !10268)
!10272 = !DILocation(line: 2615, column: 34, scope: !10268)
!10273 = !DILocation(line: 2615, column: 38, scope: !10268)
!10274 = !DILocation(line: 2615, column: 7, scope: !10259)
!10275 = !DILocation(line: 2616, column: 4, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2615, column: 48)
!10277 = !DILocation(line: 2616, column: 11, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 2616, column: 4)
!10279 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 2616, column: 4)
!10280 = !DILocation(line: 2616, column: 4, scope: !10279)
!10281 = !DILocation(line: 2617, column: 9, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 2617, column: 9)
!10283 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 2616, column: 30)
!10284 = !DILocation(line: 2617, column: 13, scope: !10282)
!10285 = !DILocation(line: 2617, column: 18, scope: !10282)
!10286 = !DILocation(line: 2617, column: 9, scope: !10283)
!10287 = !DILocation(line: 2619, column: 26, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 2619, column: 6)
!10289 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 2617, column: 58)
!10290 = !DILocation(line: 2619, column: 17, scope: !10288)
!10291 = !DILocation(line: 2619, column: 15, scope: !10288)
!10292 = !DILocation(line: 2619, column: 11, scope: !10288)
!10293 = !DILocation(line: 2619, column: 33, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 2619, column: 6)
!10295 = !DILocation(line: 2619, column: 6, scope: !10288)
!10296 = !DILocation(line: 2620, column: 27, scope: !10294)
!10297 = !DILocation(line: 2620, column: 34, scope: !10294)
!10298 = !DILocation(line: 2620, column: 39, scope: !10294)
!10299 = !DILocation(line: 2620, column: 46, scope: !10294)
!10300 = !DILocation(line: 2620, column: 7, scope: !10294)
!10301 = !DILocation(line: 2619, column: 44, scope: !10294)
!10302 = !DILocation(line: 2619, column: 49, scope: !10294)
!10303 = !DILocation(line: 2619, column: 42, scope: !10294)
!10304 = !DILocation(line: 2619, column: 6, scope: !10294)
!10305 = distinct !{!10305, !10295, !10306}
!10306 = !DILocation(line: 2620, column: 48, scope: !10288)
!10307 = !DILocation(line: 2622, column: 15, scope: !10289)
!10308 = !DILocation(line: 2623, column: 5, scope: !10289)
!10309 = !DILocation(line: 2624, column: 4, scope: !10283)
!10310 = !DILocation(line: 2616, column: 20, scope: !10278)
!10311 = !DILocation(line: 2616, column: 24, scope: !10278)
!10312 = !DILocation(line: 2616, column: 18, scope: !10278)
!10313 = !DILocation(line: 2616, column: 4, scope: !10278)
!10314 = distinct !{!10314, !10280, !10315}
!10315 = !DILocation(line: 2624, column: 4, scope: !10279)
!10316 = !DILocation(line: 2625, column: 3, scope: !10276)
!10317 = distinct !{!10317, !10256, !10318}
!10318 = !DILocation(line: 2626, column: 2, scope: !10230)
!10319 = !DILocation(line: 2629, column: 6, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 2629, column: 6)
!10321 = !DILocation(line: 2629, column: 6, scope: !10230)
!10322 = !DILocation(line: 2630, column: 23, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2630, column: 3)
!10324 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 2629, column: 16)
!10325 = !DILocation(line: 2630, column: 14, scope: !10323)
!10326 = !DILocation(line: 2630, column: 12, scope: !10323)
!10327 = !DILocation(line: 2630, column: 8, scope: !10323)
!10328 = !DILocation(line: 2630, column: 30, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 2630, column: 3)
!10330 = !DILocation(line: 2630, column: 3, scope: !10323)
!10331 = !DILocation(line: 2631, column: 27, scope: !10329)
!10332 = !DILocation(line: 2631, column: 34, scope: !10329)
!10333 = !DILocation(line: 2631, column: 39, scope: !10329)
!10334 = !DILocation(line: 2631, column: 46, scope: !10329)
!10335 = !DILocation(line: 2631, column: 51, scope: !10329)
!10336 = !DILocation(line: 2631, column: 4, scope: !10329)
!10337 = !DILocation(line: 2630, column: 41, scope: !10329)
!10338 = !DILocation(line: 2630, column: 46, scope: !10329)
!10339 = !DILocation(line: 2630, column: 39, scope: !10329)
!10340 = !DILocation(line: 2630, column: 3, scope: !10329)
!10341 = distinct !{!10341, !10330, !10342}
!10342 = !DILocation(line: 2631, column: 59, scope: !10323)
!10343 = !DILocation(line: 2632, column: 2, scope: !10324)
!10344 = !DILocation(line: 2634, column: 2, scope: !10230)
!10345 = !DILocation(line: 2635, column: 1, scope: !10230)
!10346 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !10347, file: !10347, line: 88, type: !10348, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10347 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!1940, !10350}
!10350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10351, size: 64)
!10351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!10352 = !DILocalVariable(name: "lb", arg: 1, scope: !10346, file: !10347, line: 88, type: !10350)
!10353 = !DILocation(line: 88, column: 62, scope: !10346)
!10354 = !DILocation(line: 88, column: 76, scope: !10346)
!10355 = !DILocation(line: 88, column: 80, scope: !10346)
!10356 = !DILocation(line: 88, column: 86, scope: !10346)
!10357 = !DILocation(line: 88, column: 75, scope: !10346)
!10358 = !DILocation(line: 88, column: 68, scope: !10346)
!10359 = distinct !DISubprogram(name: "dag_id_flush_update", scope: !3, file: !3, line: 2401, type: !10360, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{null, !4595, !4663, !368}
!10362 = !DILocalVariable(name: "bmain", arg: 1, scope: !10359, file: !3, line: 2401, type: !4595)
!10363 = !DILocation(line: 2401, column: 39, scope: !10359)
!10364 = !DILocalVariable(name: "sce", arg: 2, scope: !10359, file: !3, line: 2401, type: !4663)
!10365 = !DILocation(line: 2401, column: 53, scope: !10359)
!10366 = !DILocalVariable(name: "id", arg: 3, scope: !10359, file: !3, line: 2401, type: !368)
!10367 = !DILocation(line: 2401, column: 62, scope: !10359)
!10368 = !DILocalVariable(name: "obt", scope: !10359, file: !3, line: 2403, type: !349)
!10369 = !DILocation(line: 2403, column: 10, scope: !10359)
!10370 = !DILocalVariable(name: "ob", scope: !10359, file: !3, line: 2403, type: !349)
!10371 = !DILocation(line: 2403, column: 16, scope: !10359)
!10372 = !DILocalVariable(name: "idtype", scope: !10359, file: !3, line: 2404, type: !387)
!10373 = !DILocation(line: 2404, column: 8, scope: !10359)
!10374 = !DILocation(line: 2410, column: 6, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 2410, column: 6)
!10376 = !DILocation(line: 2410, column: 19, scope: !10375)
!10377 = !DILocation(line: 2410, column: 6, scope: !10359)
!10378 = !DILocation(line: 2411, column: 18, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 2410, column: 29)
!10380 = !DILocation(line: 2411, column: 8, scope: !10379)
!10381 = !DILocation(line: 2411, column: 6, scope: !10379)
!10382 = !DILocation(line: 2412, column: 28, scope: !10379)
!10383 = !DILocation(line: 2412, column: 33, scope: !10379)
!10384 = !DILocation(line: 2412, column: 3, scope: !10379)
!10385 = !DILocation(line: 2417, column: 7, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2417, column: 7)
!10387 = !DILocation(line: 2417, column: 11, scope: !10386)
!10388 = !DILocation(line: 2417, column: 18, scope: !10386)
!10389 = !DILocation(line: 2417, column: 7, scope: !10379)
!10390 = !DILocation(line: 2418, column: 20, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 2417, column: 35)
!10392 = !DILocation(line: 2418, column: 27, scope: !10391)
!10393 = !DILocation(line: 2418, column: 4, scope: !10391)
!10394 = !DILocation(line: 2419, column: 3, scope: !10391)
!10395 = !DILocation(line: 2421, column: 7, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2421, column: 7)
!10397 = !DILocation(line: 2421, column: 11, scope: !10396)
!10398 = !DILocation(line: 2421, column: 18, scope: !10396)
!10399 = !DILocation(line: 2421, column: 7, scope: !10379)
!10400 = !DILocation(line: 2423, column: 9, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 2421, column: 36)
!10402 = !DILocation(line: 2423, column: 13, scope: !10401)
!10403 = !DILocation(line: 2423, column: 7, scope: !10401)
!10404 = !DILocation(line: 2426, column: 8, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 2426, column: 8)
!10406 = !DILocation(line: 2426, column: 11, scope: !10405)
!10407 = !DILocation(line: 2426, column: 14, scope: !10405)
!10408 = !DILocation(line: 2426, column: 18, scope: !10405)
!10409 = !DILocation(line: 2426, column: 21, scope: !10405)
!10410 = !DILocation(line: 2426, column: 8, scope: !10401)
!10411 = !DILocation(line: 2427, column: 27, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 2426, column: 27)
!10413 = !DILocation(line: 2427, column: 34, scope: !10412)
!10414 = !DILocation(line: 2427, column: 5, scope: !10412)
!10415 = !DILocation(line: 2428, column: 8, scope: !10412)
!10416 = !DILocation(line: 2429, column: 4, scope: !10412)
!10417 = !DILocation(line: 2430, column: 3, scope: !10401)
!10418 = !DILocation(line: 2431, column: 2, scope: !10379)
!10419 = !DILocation(line: 2434, column: 6, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 2434, column: 6)
!10421 = !DILocation(line: 2434, column: 6, scope: !10359)
!10422 = !DILocation(line: 2435, column: 12, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2434, column: 10)
!10424 = !DILocation(line: 2435, column: 10, scope: !10423)
!10425 = !DILocation(line: 2438, column: 7, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2438, column: 7)
!10427 = !DILocation(line: 2438, column: 7, scope: !10423)
!10428 = !DILocation(line: 2439, column: 15, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2439, column: 4)
!10430 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 2438, column: 35)
!10431 = !DILocation(line: 2439, column: 22, scope: !10429)
!10432 = !DILocation(line: 2439, column: 29, scope: !10429)
!10433 = !DILocation(line: 2439, column: 13, scope: !10429)
!10434 = !DILocation(line: 2439, column: 9, scope: !10429)
!10435 = !DILocation(line: 2439, column: 36, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2439, column: 4)
!10437 = !DILocation(line: 2439, column: 4, scope: !10429)
!10438 = !DILocation(line: 2440, column: 11, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2440, column: 9)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 2439, column: 61)
!10441 = !DILocation(line: 2440, column: 14, scope: !10439)
!10442 = !DILocation(line: 2440, column: 17, scope: !10439)
!10443 = !DILocation(line: 2440, column: 24, scope: !10439)
!10444 = !DILocation(line: 2440, column: 21, scope: !10439)
!10445 = !DILocation(line: 2440, column: 28, scope: !10439)
!10446 = !DILocation(line: 2440, column: 31, scope: !10439)
!10447 = !DILocation(line: 2440, column: 36, scope: !10439)
!10448 = !DILocation(line: 2440, column: 44, scope: !10439)
!10449 = !DILocation(line: 2440, column: 41, scope: !10439)
!10450 = !DILocation(line: 2440, column: 9, scope: !10440)
!10451 = !DILocation(line: 2441, column: 6, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 2440, column: 48)
!10453 = !DILocation(line: 2441, column: 11, scope: !10452)
!10454 = !DILocation(line: 2441, column: 18, scope: !10452)
!10455 = !DILocation(line: 2442, column: 29, scope: !10452)
!10456 = !DILocation(line: 2442, column: 37, scope: !10452)
!10457 = !DILocation(line: 2442, column: 42, scope: !10452)
!10458 = !DILocation(line: 2442, column: 6, scope: !10452)
!10459 = !DILocation(line: 2443, column: 31, scope: !10452)
!10460 = !DILocation(line: 2443, column: 36, scope: !10452)
!10461 = !DILocation(line: 2443, column: 6, scope: !10452)
!10462 = !DILocation(line: 2444, column: 5, scope: !10452)
!10463 = !DILocation(line: 2445, column: 4, scope: !10440)
!10464 = !DILocation(line: 2439, column: 47, scope: !10436)
!10465 = !DILocation(line: 2439, column: 52, scope: !10436)
!10466 = !DILocation(line: 2439, column: 55, scope: !10436)
!10467 = !DILocation(line: 2439, column: 45, scope: !10436)
!10468 = !DILocation(line: 2439, column: 4, scope: !10436)
!10469 = distinct !{!10469, !10437, !10470}
!10470 = !DILocation(line: 2445, column: 4, scope: !10429)
!10471 = !DILocation(line: 2446, column: 3, scope: !10430)
!10472 = !DILocation(line: 2449, column: 7, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2449, column: 7)
!10474 = !DILocation(line: 2449, column: 14, scope: !10473)
!10475 = !DILocation(line: 2449, column: 7, scope: !10423)
!10476 = !DILocation(line: 2450, column: 15, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 2450, column: 4)
!10478 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2449, column: 24)
!10479 = !DILocation(line: 2450, column: 22, scope: !10477)
!10480 = !DILocation(line: 2450, column: 29, scope: !10477)
!10481 = !DILocation(line: 2450, column: 13, scope: !10477)
!10482 = !DILocation(line: 2450, column: 9, scope: !10477)
!10483 = !DILocation(line: 2450, column: 36, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 2450, column: 4)
!10485 = !DILocation(line: 2450, column: 4, scope: !10477)
!10486 = !DILocalVariable(name: "data", scope: !10487, file: !3, line: 2451, type: !10488)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 2450, column: 61)
!10488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10359, file: !3, line: 2451, size: 128, elements: !10489)
!10489 = !{!10490, !10491}
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10488, file: !3, line: 2451, baseType: !368, size: 64)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "is_dependent", scope: !10488, file: !3, line: 2451, baseType: !1940, size: 8, offset: 64)
!10492 = !DILocation(line: 2451, column: 43, scope: !10487)
!10493 = !DILocation(line: 2452, column: 15, scope: !10487)
!10494 = !DILocation(line: 2452, column: 10, scope: !10487)
!10495 = !DILocation(line: 2452, column: 13, scope: !10487)
!10496 = !DILocation(line: 2453, column: 10, scope: !10487)
!10497 = !DILocation(line: 2453, column: 23, scope: !10487)
!10498 = !DILocation(line: 2455, column: 29, scope: !10487)
!10499 = !DILocation(line: 2455, column: 75, scope: !10487)
!10500 = !DILocation(line: 2455, column: 5, scope: !10487)
!10501 = !DILocation(line: 2456, column: 14, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 2456, column: 9)
!10503 = !DILocation(line: 2456, column: 9, scope: !10502)
!10504 = !DILocation(line: 2456, column: 9, scope: !10487)
!10505 = !DILocation(line: 2457, column: 6, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 2456, column: 28)
!10507 = !DILocation(line: 2457, column: 11, scope: !10506)
!10508 = !DILocation(line: 2457, column: 18, scope: !10506)
!10509 = !DILocation(line: 2458, column: 29, scope: !10506)
!10510 = !DILocation(line: 2458, column: 37, scope: !10506)
!10511 = !DILocation(line: 2458, column: 42, scope: !10506)
!10512 = !DILocation(line: 2458, column: 6, scope: !10506)
!10513 = !DILocation(line: 2459, column: 5, scope: !10506)
!10514 = !DILocation(line: 2462, column: 9, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 2462, column: 9)
!10516 = !DILocation(line: 2462, column: 14, scope: !10515)
!10517 = !DILocation(line: 2462, column: 29, scope: !10515)
!10518 = !DILocation(line: 2462, column: 9, scope: !10487)
!10519 = !DILocalVariable(name: "psys", scope: !10520, file: !3, line: 2463, type: !5729)
!10520 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 2462, column: 36)
!10521 = !DILocation(line: 2463, column: 22, scope: !10520)
!10522 = !DILocation(line: 2463, column: 29, scope: !10520)
!10523 = !DILocation(line: 2463, column: 34, scope: !10520)
!10524 = !DILocation(line: 2463, column: 49, scope: !10520)
!10525 = !DILocalVariable(name: "mtexp", scope: !10520, file: !3, line: 2464, type: !10526)
!10526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10527, size: 64)
!10527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10528, size: 64)
!10528 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !601, line: 94, baseType: !605)
!10529 = !DILocation(line: 2464, column: 13, scope: !10520)
!10530 = !DILocalVariable(name: "mtex", scope: !10520, file: !3, line: 2464, type: !10527)
!10531 = !DILocation(line: 2464, column: 21, scope: !10520)
!10532 = !DILocalVariable(name: "a", scope: !10520, file: !3, line: 2465, type: !389)
!10533 = !DILocation(line: 2465, column: 10, scope: !10520)
!10534 = !DILocation(line: 2466, column: 6, scope: !10520)
!10535 = !DILocation(line: 2466, column: 13, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 2466, column: 6)
!10537 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 2466, column: 6)
!10538 = !DILocation(line: 2466, column: 6, scope: !10537)
!10539 = !DILocation(line: 2467, column: 15, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2466, column: 38)
!10541 = !DILocation(line: 2467, column: 21, scope: !10540)
!10542 = !DILocation(line: 2467, column: 27, scope: !10540)
!10543 = !DILocation(line: 2467, column: 13, scope: !10540)
!10544 = !DILocation(line: 2468, column: 14, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 2468, column: 7)
!10546 = !DILocation(line: 2468, column: 12, scope: !10545)
!10547 = !DILocation(line: 2468, column: 19, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 2468, column: 7)
!10549 = !DILocation(line: 2468, column: 21, scope: !10548)
!10550 = !DILocation(line: 2468, column: 7, scope: !10545)
!10551 = !DILocation(line: 2469, column: 16, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 2468, column: 47)
!10553 = !DILocation(line: 2469, column: 15, scope: !10552)
!10554 = !DILocation(line: 2469, column: 13, scope: !10552)
!10555 = !DILocation(line: 2470, column: 12, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 2470, column: 12)
!10557 = !DILocation(line: 2470, column: 17, scope: !10556)
!10558 = !DILocation(line: 2470, column: 20, scope: !10556)
!10559 = !DILocation(line: 2470, column: 26, scope: !10556)
!10560 = !DILocation(line: 2470, column: 40, scope: !10556)
!10561 = !DILocation(line: 2470, column: 33, scope: !10556)
!10562 = !DILocation(line: 2470, column: 30, scope: !10556)
!10563 = !DILocation(line: 2470, column: 12, scope: !10552)
!10564 = !DILocation(line: 2471, column: 9, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2470, column: 44)
!10566 = !DILocation(line: 2471, column: 14, scope: !10565)
!10567 = !DILocation(line: 2471, column: 21, scope: !10565)
!10568 = !DILocation(line: 2472, column: 32, scope: !10565)
!10569 = !DILocation(line: 2472, column: 40, scope: !10565)
!10570 = !DILocation(line: 2472, column: 45, scope: !10565)
!10571 = !DILocation(line: 2472, column: 9, scope: !10565)
!10572 = !DILocation(line: 2474, column: 13, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2474, column: 13)
!10574 = !DILocation(line: 2474, column: 19, scope: !10573)
!10575 = !DILocation(line: 2474, column: 25, scope: !10573)
!10576 = !DILocation(line: 2474, column: 13, scope: !10565)
!10577 = !DILocation(line: 2475, column: 10, scope: !10573)
!10578 = !DILocation(line: 2475, column: 16, scope: !10573)
!10579 = !DILocation(line: 2475, column: 23, scope: !10573)
!10580 = !DILocation(line: 2476, column: 13, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2476, column: 13)
!10582 = !DILocation(line: 2476, column: 19, scope: !10581)
!10583 = !DILocation(line: 2476, column: 25, scope: !10581)
!10584 = !DILocation(line: 2476, column: 13, scope: !10565)
!10585 = !DILocation(line: 2477, column: 10, scope: !10581)
!10586 = !DILocation(line: 2477, column: 16, scope: !10581)
!10587 = !DILocation(line: 2477, column: 23, scope: !10581)
!10588 = !DILocation(line: 2479, column: 34, scope: !10565)
!10589 = !DILocation(line: 2479, column: 39, scope: !10565)
!10590 = !DILocation(line: 2479, column: 9, scope: !10565)
!10591 = !DILocation(line: 2480, column: 8, scope: !10565)
!10592 = !DILocation(line: 2481, column: 7, scope: !10552)
!10593 = !DILocation(line: 2468, column: 34, scope: !10548)
!10594 = !DILocation(line: 2468, column: 43, scope: !10548)
!10595 = !DILocation(line: 2468, column: 7, scope: !10548)
!10596 = distinct !{!10596, !10550, !10597}
!10597 = !DILocation(line: 2481, column: 7, scope: !10545)
!10598 = !DILocation(line: 2482, column: 6, scope: !10540)
!10599 = !DILocation(line: 2466, column: 26, scope: !10536)
!10600 = !DILocation(line: 2466, column: 32, scope: !10536)
!10601 = !DILocation(line: 2466, column: 24, scope: !10536)
!10602 = !DILocation(line: 2466, column: 6, scope: !10536)
!10603 = distinct !{!10603, !10538, !10604}
!10604 = !DILocation(line: 2482, column: 6, scope: !10537)
!10605 = !DILocation(line: 2483, column: 5, scope: !10520)
!10606 = !DILocation(line: 2484, column: 4, scope: !10487)
!10607 = !DILocation(line: 2450, column: 47, scope: !10484)
!10608 = !DILocation(line: 2450, column: 52, scope: !10484)
!10609 = !DILocation(line: 2450, column: 55, scope: !10484)
!10610 = !DILocation(line: 2450, column: 45, scope: !10484)
!10611 = !DILocation(line: 2450, column: 4, scope: !10484)
!10612 = distinct !{!10612, !10485, !10613}
!10613 = !DILocation(line: 2484, column: 4, scope: !10477)
!10614 = !DILocation(line: 2485, column: 3, scope: !10478)
!10615 = !DILocation(line: 2488, column: 7, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2488, column: 7)
!10617 = !DILocation(line: 2488, column: 14, scope: !10616)
!10618 = !DILocation(line: 2488, column: 7, scope: !10423)
!10619 = !DILocation(line: 2489, column: 15, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2489, column: 4)
!10621 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 2488, column: 24)
!10622 = !DILocation(line: 2489, column: 22, scope: !10620)
!10623 = !DILocation(line: 2489, column: 29, scope: !10620)
!10624 = !DILocation(line: 2489, column: 13, scope: !10620)
!10625 = !DILocation(line: 2489, column: 9, scope: !10620)
!10626 = !DILocation(line: 2489, column: 36, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 2489, column: 4)
!10628 = !DILocation(line: 2489, column: 4, scope: !10620)
!10629 = !DILocalVariable(name: "key", scope: !10630, file: !3, line: 2490, type: !5706)
!10630 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2489, column: 61)
!10631 = !DILocation(line: 2490, column: 10, scope: !10630)
!10632 = !DILocation(line: 2490, column: 36, scope: !10630)
!10633 = !DILocation(line: 2490, column: 16, scope: !10630)
!10634 = !DILocation(line: 2491, column: 11, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 2491, column: 9)
!10636 = !DILocation(line: 2491, column: 14, scope: !10635)
!10637 = !DILocation(line: 2491, column: 17, scope: !10635)
!10638 = !DILocation(line: 2491, column: 24, scope: !10635)
!10639 = !DILocation(line: 2491, column: 21, scope: !10635)
!10640 = !DILocation(line: 2491, column: 28, scope: !10635)
!10641 = !DILocation(line: 2491, column: 38, scope: !10635)
!10642 = !DILocation(line: 2491, column: 32, scope: !10635)
!10643 = !DILocation(line: 2491, column: 45, scope: !10635)
!10644 = !DILocation(line: 2491, column: 42, scope: !10635)
!10645 = !DILocation(line: 2491, column: 9, scope: !10630)
!10646 = !DILocation(line: 2492, column: 6, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2491, column: 50)
!10648 = !DILocation(line: 2492, column: 11, scope: !10647)
!10649 = !DILocation(line: 2492, column: 16, scope: !10647)
!10650 = !DILocation(line: 2493, column: 24, scope: !10647)
!10651 = !DILocation(line: 2493, column: 32, scope: !10647)
!10652 = !DILocation(line: 2493, column: 37, scope: !10647)
!10653 = !DILocation(line: 2493, column: 6, scope: !10647)
!10654 = !DILocation(line: 2494, column: 29, scope: !10647)
!10655 = !DILocation(line: 2494, column: 37, scope: !10647)
!10656 = !DILocation(line: 2494, column: 42, scope: !10647)
!10657 = !DILocation(line: 2494, column: 6, scope: !10647)
!10658 = !DILocation(line: 2495, column: 31, scope: !10647)
!10659 = !DILocation(line: 2495, column: 36, scope: !10647)
!10660 = !DILocation(line: 2495, column: 6, scope: !10647)
!10661 = !DILocation(line: 2496, column: 5, scope: !10647)
!10662 = !DILocation(line: 2497, column: 4, scope: !10630)
!10663 = !DILocation(line: 2489, column: 47, scope: !10627)
!10664 = !DILocation(line: 2489, column: 52, scope: !10627)
!10665 = !DILocation(line: 2489, column: 55, scope: !10627)
!10666 = !DILocation(line: 2489, column: 45, scope: !10627)
!10667 = !DILocation(line: 2489, column: 4, scope: !10627)
!10668 = distinct !{!10668, !10628, !10669}
!10669 = !DILocation(line: 2497, column: 4, scope: !10620)
!10670 = !DILocation(line: 2498, column: 3, scope: !10621)
!10671 = !DILocation(line: 2501, column: 7, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2501, column: 7)
!10673 = !DILocation(line: 2501, column: 14, scope: !10672)
!10674 = !DILocation(line: 2501, column: 7, scope: !10423)
!10675 = !DILocalVariable(name: "psys", scope: !10676, file: !3, line: 2502, type: !5729)
!10676 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 2501, column: 24)
!10677 = !DILocation(line: 2502, column: 20, scope: !10676)
!10678 = !DILocation(line: 2503, column: 15, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2503, column: 4)
!10680 = !DILocation(line: 2503, column: 22, scope: !10679)
!10681 = !DILocation(line: 2503, column: 29, scope: !10679)
!10682 = !DILocation(line: 2503, column: 13, scope: !10679)
!10683 = !DILocation(line: 2503, column: 9, scope: !10679)
!10684 = !DILocation(line: 2503, column: 36, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 2503, column: 4)
!10686 = !DILocation(line: 2503, column: 4, scope: !10679)
!10687 = !DILocation(line: 2504, column: 17, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2504, column: 5)
!10689 = !DILocation(line: 2504, column: 22, scope: !10688)
!10690 = !DILocation(line: 2504, column: 37, scope: !10688)
!10691 = !DILocation(line: 2504, column: 15, scope: !10688)
!10692 = !DILocation(line: 2504, column: 10, scope: !10688)
!10693 = !DILocation(line: 2504, column: 44, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2504, column: 5)
!10695 = !DILocation(line: 2504, column: 5, scope: !10688)
!10696 = !DILocation(line: 2505, column: 11, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 2505, column: 10)
!10698 = !DILocation(line: 2505, column: 17, scope: !10697)
!10699 = !DILocation(line: 2505, column: 23, scope: !10697)
!10700 = !DILocation(line: 2505, column: 29, scope: !10697)
!10701 = !DILocation(line: 2505, column: 26, scope: !10697)
!10702 = !DILocation(line: 2505, column: 10, scope: !10694)
!10703 = !DILocation(line: 2506, column: 32, scope: !10697)
!10704 = !DILocation(line: 2506, column: 37, scope: !10697)
!10705 = !DILocation(line: 2506, column: 7, scope: !10697)
!10706 = !DILocation(line: 2504, column: 57, scope: !10694)
!10707 = !DILocation(line: 2504, column: 63, scope: !10694)
!10708 = !DILocation(line: 2504, column: 55, scope: !10694)
!10709 = !DILocation(line: 2504, column: 5, scope: !10694)
!10710 = distinct !{!10710, !10695, !10711}
!10711 = !DILocation(line: 2506, column: 65, scope: !10688)
!10712 = !DILocation(line: 2503, column: 47, scope: !10685)
!10713 = !DILocation(line: 2503, column: 52, scope: !10685)
!10714 = !DILocation(line: 2503, column: 55, scope: !10685)
!10715 = !DILocation(line: 2503, column: 45, scope: !10685)
!10716 = !DILocation(line: 2503, column: 4, scope: !10685)
!10717 = distinct !{!10717, !10686, !10718}
!10718 = !DILocation(line: 2506, column: 65, scope: !10679)
!10719 = !DILocation(line: 2507, column: 3, scope: !10676)
!10720 = !DILocation(line: 2509, column: 7, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2509, column: 7)
!10722 = !DILocation(line: 2509, column: 7, scope: !10423)
!10723 = !DILocation(line: 2510, column: 10, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2509, column: 35)
!10725 = !DILocation(line: 2510, column: 15, scope: !10724)
!10726 = !DILocation(line: 2510, column: 24, scope: !10724)
!10727 = !DILocation(line: 2510, column: 29, scope: !10724)
!10728 = !DILocation(line: 2510, column: 37, scope: !10724)
!10729 = !DILocation(line: 2510, column: 8, scope: !10724)
!10730 = !DILocation(line: 2511, column: 8, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 2511, column: 8)
!10732 = !DILocation(line: 2511, column: 12, scope: !10731)
!10733 = !DILocation(line: 2511, column: 15, scope: !10731)
!10734 = !DILocation(line: 2511, column: 20, scope: !10731)
!10735 = !DILocation(line: 2511, column: 25, scope: !10731)
!10736 = !DILocation(line: 2511, column: 8, scope: !10724)
!10737 = !DILocation(line: 2512, column: 39, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 2511, column: 50)
!10739 = !DILocation(line: 2512, column: 44, scope: !10738)
!10740 = !DILocation(line: 2512, column: 5, scope: !10738)
!10741 = !DILocation(line: 2513, column: 36, scope: !10738)
!10742 = !DILocation(line: 2513, column: 41, scope: !10738)
!10743 = !DILocation(line: 2513, column: 5, scope: !10738)
!10744 = !DILocation(line: 2514, column: 25, scope: !10738)
!10745 = !DILocation(line: 2514, column: 30, scope: !10738)
!10746 = !DILocation(line: 2514, column: 5, scope: !10738)
!10747 = !DILocation(line: 2515, column: 4, scope: !10738)
!10748 = !DILocation(line: 2516, column: 3, scope: !10724)
!10749 = !DILocation(line: 2518, column: 7, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2518, column: 7)
!10751 = !DILocation(line: 2518, column: 14, scope: !10750)
!10752 = !DILocation(line: 2518, column: 7, scope: !10423)
!10753 = !DILocalVariable(name: "clip", scope: !10754, file: !3, line: 2519, type: !4540)
!10754 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 2518, column: 24)
!10755 = !DILocation(line: 2519, column: 15, scope: !10754)
!10756 = !DILocation(line: 2519, column: 36, scope: !10754)
!10757 = !DILocation(line: 2519, column: 22, scope: !10754)
!10758 = !DILocation(line: 2521, column: 39, scope: !10754)
!10759 = !DILocation(line: 2521, column: 45, scope: !10754)
!10760 = !DILocation(line: 2521, column: 4, scope: !10754)
!10761 = !DILocation(line: 2523, column: 15, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 2523, column: 4)
!10763 = !DILocation(line: 2523, column: 22, scope: !10762)
!10764 = !DILocation(line: 2523, column: 29, scope: !10762)
!10765 = !DILocation(line: 2523, column: 13, scope: !10762)
!10766 = !DILocation(line: 2523, column: 9, scope: !10762)
!10767 = !DILocation(line: 2523, column: 36, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 2523, column: 4)
!10769 = !DILocation(line: 2523, column: 4, scope: !10762)
!10770 = !DILocalVariable(name: "con", scope: !10771, file: !3, line: 2524, type: !5679)
!10771 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 2523, column: 61)
!10772 = !DILocation(line: 2524, column: 18, scope: !10771)
!10773 = !DILocation(line: 2525, column: 16, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 2525, column: 5)
!10775 = !DILocation(line: 2525, column: 21, scope: !10774)
!10776 = !DILocation(line: 2525, column: 33, scope: !10774)
!10777 = !DILocation(line: 2525, column: 14, scope: !10774)
!10778 = !DILocation(line: 2525, column: 10, scope: !10774)
!10779 = !DILocation(line: 2525, column: 40, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 2525, column: 5)
!10781 = !DILocation(line: 2525, column: 5, scope: !10774)
!10782 = !DILocalVariable(name: "cti", scope: !10783, file: !3, line: 2526, type: !5802)
!10783 = distinct !DILexicalBlock(scope: !10780, file: !3, line: 2525, column: 62)
!10784 = !DILocation(line: 2526, column: 27, scope: !10783)
!10785 = !DILocation(line: 2526, column: 61, scope: !10783)
!10786 = !DILocation(line: 2526, column: 33, scope: !10783)
!10787 = !DILocation(line: 2527, column: 10, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 2527, column: 10)
!10789 = !DILocation(line: 2527, column: 10, scope: !10783)
!10790 = !DILocation(line: 2530, column: 7, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 2529, column: 6)
!10792 = !DILocation(line: 2530, column: 12, scope: !10791)
!10793 = !DILocation(line: 2530, column: 19, scope: !10791)
!10794 = !DILocation(line: 2531, column: 25, scope: !10791)
!10795 = !DILocation(line: 2531, column: 33, scope: !10791)
!10796 = !DILocation(line: 2531, column: 38, scope: !10791)
!10797 = !DILocation(line: 2531, column: 7, scope: !10791)
!10798 = !DILocation(line: 2532, column: 7, scope: !10791)
!10799 = !DILocation(line: 2534, column: 5, scope: !10783)
!10800 = !DILocation(line: 2525, column: 51, scope: !10780)
!10801 = !DILocation(line: 2525, column: 56, scope: !10780)
!10802 = !DILocation(line: 2525, column: 49, scope: !10780)
!10803 = !DILocation(line: 2525, column: 5, scope: !10780)
!10804 = distinct !{!10804, !10781, !10805}
!10805 = !DILocation(line: 2534, column: 5, scope: !10774)
!10806 = !DILocation(line: 2535, column: 4, scope: !10771)
!10807 = !DILocation(line: 2523, column: 47, scope: !10768)
!10808 = !DILocation(line: 2523, column: 52, scope: !10768)
!10809 = !DILocation(line: 2523, column: 55, scope: !10768)
!10810 = !DILocation(line: 2523, column: 45, scope: !10768)
!10811 = !DILocation(line: 2523, column: 4, scope: !10768)
!10812 = distinct !{!10812, !10769, !10813}
!10813 = !DILocation(line: 2535, column: 4, scope: !10762)
!10814 = !DILocation(line: 2537, column: 8, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 2537, column: 8)
!10816 = !DILocation(line: 2537, column: 13, scope: !10815)
!10817 = !DILocation(line: 2537, column: 8, scope: !10754)
!10818 = !DILocalVariable(name: "node", scope: !10819, file: !3, line: 2538, type: !876)
!10819 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 2537, column: 23)
!10820 = !DILocation(line: 2538, column: 12, scope: !10819)
!10821 = !DILocation(line: 2540, column: 17, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 2540, column: 5)
!10823 = !DILocation(line: 2540, column: 22, scope: !10822)
!10824 = !DILocation(line: 2540, column: 32, scope: !10822)
!10825 = !DILocation(line: 2540, column: 38, scope: !10822)
!10826 = !DILocation(line: 2540, column: 15, scope: !10822)
!10827 = !DILocation(line: 2540, column: 10, scope: !10822)
!10828 = !DILocation(line: 2540, column: 45, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 2540, column: 5)
!10830 = !DILocation(line: 2540, column: 5, scope: !10822)
!10831 = !DILocation(line: 2541, column: 10, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2541, column: 10)
!10833 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 2540, column: 70)
!10834 = !DILocation(line: 2541, column: 16, scope: !10832)
!10835 = !DILocation(line: 2541, column: 22, scope: !10832)
!10836 = !DILocation(line: 2541, column: 19, scope: !10832)
!10837 = !DILocation(line: 2541, column: 10, scope: !10833)
!10838 = !DILocation(line: 2542, column: 18, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 2541, column: 26)
!10840 = !DILocation(line: 2542, column: 23, scope: !10839)
!10841 = !DILocation(line: 2542, column: 33, scope: !10839)
!10842 = !DILocation(line: 2542, column: 7, scope: !10839)
!10843 = !DILocation(line: 2543, column: 6, scope: !10839)
!10844 = !DILocation(line: 2544, column: 5, scope: !10833)
!10845 = !DILocation(line: 2540, column: 58, scope: !10829)
!10846 = !DILocation(line: 2540, column: 64, scope: !10829)
!10847 = !DILocation(line: 2540, column: 56, scope: !10829)
!10848 = !DILocation(line: 2540, column: 5, scope: !10829)
!10849 = distinct !{!10849, !10830, !10850}
!10850 = !DILocation(line: 2544, column: 5, scope: !10822)
!10851 = !DILocation(line: 2545, column: 4, scope: !10819)
!10852 = !DILocation(line: 2546, column: 3, scope: !10754)
!10853 = !DILocation(line: 2551, column: 7, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2551, column: 7)
!10855 = !DILocation(line: 2551, column: 14, scope: !10854)
!10856 = !DILocation(line: 2551, column: 7, scope: !10423)
!10857 = !DILocalVariable(name: "_nstore", scope: !10858, file: !3, line: 2552, type: !10860)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 2552, column: 4)
!10859 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 2551, column: 24)
!10860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeTreeIterStore", file: !695, line: 632, size: 448, elements: !10861)
!10861 = !{!10862, !10863, !10864, !10865, !10866, !10947, !10950}
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "ngroup", scope: !10860, file: !695, line: 633, baseType: !4525, size: 64)
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !10860, file: !695, line: 634, baseType: !4663, size: 64, offset: 64)
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !10860, file: !695, line: 635, baseType: !4523, size: 64, offset: 128)
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !10860, file: !695, line: 636, baseType: !4538, size: 64, offset: 192)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !10860, file: !695, line: 637, baseType: !10867, size: 64, offset: 256)
!10867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10868, size: 64)
!10868 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !10869, line: 113, baseType: !10870)
!10869 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !10869, line: 48, size: 4160, elements: !10871)
!10871 = !{!10872, !10873, !10874, !10875, !10876, !10877, !10878, !10879, !10880, !10881, !10882, !10883, !10884, !10885, !10886, !10887, !10888, !10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896, !10897, !10898, !10899, !10900, !10901, !10902, !10903, !10904, !10905, !10906, !10907, !10908, !10909, !10910, !10911, !10912, !10913, !10914, !10915, !10916, !10917, !10918, !10919, !10920, !10921, !10922, !10923, !10924, !10925, !10926, !10927, !10928, !10929, !10930, !10931, !10932, !10933, !10934, !10935, !10936, !10937, !10938, !10939, !10940, !10941, !10942, !10943, !10944, !10945, !10946}
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10870, file: !10869, line: 49, baseType: !354, size: 960)
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !10870, file: !10869, line: 50, baseType: !425, size: 64, offset: 960)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10870, file: !10869, line: 52, baseType: !387, size: 16, offset: 1024)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10870, file: !10869, line: 52, baseType: !387, size: 16, offset: 1040)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10870, file: !10869, line: 53, baseType: !389, size: 32, offset: 1056)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !10870, file: !10869, line: 55, baseType: !387, size: 16, offset: 1088)
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !10870, file: !10869, line: 55, baseType: !387, size: 16, offset: 1104)
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !10870, file: !10869, line: 56, baseType: !469, size: 32, offset: 1120)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !10870, file: !10869, line: 56, baseType: !469, size: 32, offset: 1152)
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !10870, file: !10869, line: 56, baseType: !469, size: 32, offset: 1184)
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !10870, file: !10869, line: 56, baseType: !469, size: 32, offset: 1216)
!10883 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !10870, file: !10869, line: 57, baseType: !469, size: 32, offset: 1248)
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !10870, file: !10869, line: 57, baseType: !469, size: 32, offset: 1280)
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !10870, file: !10869, line: 57, baseType: !469, size: 32, offset: 1312)
!10886 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !10870, file: !10869, line: 57, baseType: !469, size: 32, offset: 1344)
!10887 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !10870, file: !10869, line: 59, baseType: !469, size: 32, offset: 1376)
!10888 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10870, file: !10869, line: 59, baseType: !469, size: 32, offset: 1408)
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !10870, file: !10869, line: 59, baseType: !469, size: 32, offset: 1440)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !10870, file: !10869, line: 59, baseType: !469, size: 32, offset: 1472)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !10870, file: !10869, line: 60, baseType: !469, size: 32, offset: 1504)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !10870, file: !10869, line: 63, baseType: !469, size: 32, offset: 1536)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !10870, file: !10869, line: 63, baseType: !469, size: 32, offset: 1568)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !10870, file: !10869, line: 64, baseType: !1647, size: 64, offset: 1600)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !10870, file: !10869, line: 65, baseType: !387, size: 16, offset: 1664)
!10896 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !10870, file: !10869, line: 66, baseType: !387, size: 16, offset: 1680)
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !10870, file: !10869, line: 68, baseType: !469, size: 32, offset: 1696)
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !10870, file: !10869, line: 68, baseType: !469, size: 32, offset: 1728)
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !10870, file: !10869, line: 69, baseType: !469, size: 32, offset: 1760)
!10900 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !10870, file: !10869, line: 69, baseType: !469, size: 32, offset: 1792)
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !10870, file: !10869, line: 69, baseType: !469, size: 32, offset: 1824)
!10902 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !10870, file: !10869, line: 69, baseType: !469, size: 32, offset: 1856)
!10903 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !10870, file: !10869, line: 69, baseType: !469, size: 32, offset: 1888)
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !10870, file: !10869, line: 70, baseType: !387, size: 16, offset: 1920)
!10905 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !10870, file: !10869, line: 70, baseType: !387, size: 16, offset: 1936)
!10906 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !10870, file: !10869, line: 70, baseType: !387, size: 16, offset: 1952)
!10907 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !10870, file: !10869, line: 70, baseType: !387, size: 16, offset: 1968)
!10908 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !10870, file: !10869, line: 71, baseType: !374, size: 8, offset: 1984)
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !10870, file: !10869, line: 71, baseType: !374, size: 8, offset: 1992)
!10910 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !10870, file: !10869, line: 73, baseType: !387, size: 16, offset: 2000)
!10911 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !10870, file: !10869, line: 73, baseType: !387, size: 16, offset: 2016)
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !10870, file: !10869, line: 73, baseType: !387, size: 16, offset: 2032)
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !10870, file: !10869, line: 74, baseType: !387, size: 16, offset: 2048)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !10870, file: !10869, line: 75, baseType: !387, size: 16, offset: 2064)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !10870, file: !10869, line: 76, baseType: !469, size: 32, offset: 2080)
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !10870, file: !10869, line: 76, baseType: !469, size: 32, offset: 2112)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !10870, file: !10869, line: 76, baseType: !469, size: 32, offset: 2144)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !10870, file: !10869, line: 77, baseType: !469, size: 32, offset: 2176)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !10870, file: !10869, line: 78, baseType: !387, size: 16, offset: 2208)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !10870, file: !10869, line: 79, baseType: !387, size: 16, offset: 2224)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !10870, file: !10869, line: 82, baseType: !387, size: 16, offset: 2240)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !10870, file: !10869, line: 82, baseType: !387, size: 16, offset: 2256)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !10870, file: !10869, line: 85, baseType: !387, size: 16, offset: 2272)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !10870, file: !10869, line: 86, baseType: !387, size: 16, offset: 2288)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !10870, file: !10869, line: 87, baseType: !469, size: 32, offset: 2304)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !10870, file: !10869, line: 88, baseType: !469, size: 32, offset: 2336)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !10870, file: !10869, line: 89, baseType: !469, size: 32, offset: 2368)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !10870, file: !10869, line: 90, baseType: !469, size: 32, offset: 2400)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !10870, file: !10869, line: 91, baseType: !469, size: 32, offset: 2432)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !10870, file: !10869, line: 92, baseType: !469, size: 32, offset: 2464)
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !10870, file: !10869, line: 93, baseType: !469, size: 32, offset: 2496)
!10932 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !10870, file: !10869, line: 94, baseType: !469, size: 32, offset: 2528)
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !10870, file: !10869, line: 95, baseType: !469, size: 32, offset: 2560)
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !10870, file: !10869, line: 96, baseType: !469, size: 32, offset: 2592)
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !10870, file: !10869, line: 97, baseType: !469, size: 32, offset: 2624)
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !10870, file: !10869, line: 98, baseType: !469, size: 32, offset: 2656)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !10870, file: !10869, line: 99, baseType: !469, size: 32, offset: 2688)
!10938 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !10870, file: !10869, line: 100, baseType: !387, size: 16, offset: 2720)
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !10870, file: !10869, line: 101, baseType: !2131, size: 16, offset: 2736)
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !10870, file: !10869, line: 103, baseType: !599, size: 64, offset: 2752)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !10870, file: !10869, line: 104, baseType: !603, size: 1152, offset: 2816)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !10870, file: !10869, line: 105, baseType: !387, size: 16, offset: 3968)
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !10870, file: !10869, line: 105, baseType: !387, size: 16, offset: 3984)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !10870, file: !10869, line: 106, baseType: !1877, size: 32, offset: 4000)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !10870, file: !10869, line: 109, baseType: !1525, size: 64, offset: 4032)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !10870, file: !10869, line: 112, baseType: !686, size: 64, offset: 4096)
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !10860, file: !695, line: 638, baseType: !10948, size: 64, offset: 320)
!10948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10949, size: 64)
!10949 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !526, line: 131, baseType: !525)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !10860, file: !695, line: 639, baseType: !10951, size: 64, offset: 384)
!10951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10952, size: 64)
!10952 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineStyle", file: !10953, line: 454, baseType: !10954)
!10953 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !10953, line: 421, size: 3712, elements: !10955)
!10955 = !{!10956, !10957, !10958, !10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10978, !10979, !10980, !10981, !10982, !10983, !10984, !10985, !10986, !10987, !10988, !10989, !10990, !10991, !10992, !10993, !10994, !10995, !10996, !10997, !10998, !10999, !11000}
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10954, file: !10953, line: 422, baseType: !354, size: 960)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !10954, file: !10953, line: 423, baseType: !425, size: 64, offset: 960)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !10954, file: !10953, line: 425, baseType: !469, size: 32, offset: 1024)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !10954, file: !10953, line: 425, baseType: !469, size: 32, offset: 1056)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !10954, file: !10953, line: 425, baseType: !469, size: 32, offset: 1088)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !10954, file: !10953, line: 425, baseType: !469, size: 32, offset: 1120)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !10954, file: !10953, line: 426, baseType: !469, size: 32, offset: 1152)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !10954, file: !10953, line: 427, baseType: !389, size: 32, offset: 1184)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !10954, file: !10953, line: 428, baseType: !469, size: 32, offset: 1216)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10954, file: !10953, line: 429, baseType: !389, size: 32, offset: 1248)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !10954, file: !10953, line: 429, baseType: !389, size: 32, offset: 1280)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !10954, file: !10953, line: 430, baseType: !389, size: 32, offset: 1312)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !10954, file: !10953, line: 431, baseType: !7, size: 32, offset: 1344)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !10954, file: !10953, line: 432, baseType: !469, size: 32, offset: 1376)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !10954, file: !10953, line: 433, baseType: !469, size: 32, offset: 1408)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !10954, file: !10953, line: 433, baseType: !469, size: 32, offset: 1440)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !10954, file: !10953, line: 434, baseType: !469, size: 32, offset: 1472)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !10954, file: !10953, line: 434, baseType: !469, size: 32, offset: 1504)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !10954, file: !10953, line: 435, baseType: !7, size: 32, offset: 1536)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !10954, file: !10953, line: 436, baseType: !3151, size: 16, offset: 1568)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !10954, file: !10953, line: 436, baseType: !3151, size: 16, offset: 1584)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !10954, file: !10953, line: 437, baseType: !3151, size: 16, offset: 1600)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !10954, file: !10953, line: 437, baseType: !3151, size: 16, offset: 1616)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !10954, file: !10953, line: 438, baseType: !3151, size: 16, offset: 1632)
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !10954, file: !10953, line: 438, baseType: !3151, size: 16, offset: 1648)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !10954, file: !10953, line: 439, baseType: !389, size: 32, offset: 1664)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !10954, file: !10953, line: 439, baseType: !389, size: 32, offset: 1696)
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !10954, file: !10953, line: 440, baseType: !469, size: 32, offset: 1728)
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !10954, file: !10953, line: 441, baseType: !387, size: 16, offset: 1760)
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !10954, file: !10953, line: 441, baseType: !387, size: 16, offset: 1776)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !10954, file: !10953, line: 442, baseType: !387, size: 16, offset: 1792)
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10954, file: !10953, line: 442, baseType: !1640, size: 48, offset: 1808)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1856)
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1872)
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1888)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1904)
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1920)
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !10954, file: !10953, line: 443, baseType: !3151, size: 16, offset: 1936)
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !10954, file: !10953, line: 444, baseType: !389, size: 32, offset: 1952)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !10954, file: !10953, line: 446, baseType: !603, size: 1152, offset: 1984)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !10954, file: !10953, line: 448, baseType: !686, size: 64, offset: 3136)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !10954, file: !10953, line: 450, baseType: !414, size: 128, offset: 3200)
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !10954, file: !10953, line: 451, baseType: !414, size: 128, offset: 3328)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !10954, file: !10953, line: 452, baseType: !414, size: 128, offset: 3456)
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !10954, file: !10953, line: 453, baseType: !414, size: 128, offset: 3584)
!11001 = !DILocation(line: 2552, column: 4, scope: !10858)
!11002 = !DILocalVariable(name: "ntree", scope: !10858, file: !3, line: 2552, type: !4525)
!11003 = !DILocalVariable(name: "parent_id", scope: !10858, file: !3, line: 2552, type: !368)
!11004 = !DILocation(line: 2552, column: 4, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 2552, column: 4)
!11006 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 2552, column: 4)
!11007 = !DILocation(line: 2552, column: 4, scope: !11006)
!11008 = !DILocation(line: 2553, column: 9, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 2553, column: 9)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 2552, column: 46)
!11011 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 2552, column: 4)
!11012 = !DILocation(line: 2553, column: 16, scope: !11009)
!11013 = !DILocation(line: 2553, column: 21, scope: !11009)
!11014 = !DILocation(line: 2553, column: 9, scope: !11010)
!11015 = !DILocalVariable(name: "node", scope: !11016, file: !3, line: 2554, type: !876)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 2553, column: 38)
!11017 = !DILocation(line: 2554, column: 13, scope: !11016)
!11018 = !DILocation(line: 2555, column: 18, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 2555, column: 6)
!11020 = !DILocation(line: 2555, column: 25, scope: !11019)
!11021 = !DILocation(line: 2555, column: 31, scope: !11019)
!11022 = !DILocation(line: 2555, column: 16, scope: !11019)
!11023 = !DILocation(line: 2555, column: 11, scope: !11019)
!11024 = !DILocation(line: 2555, column: 38, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 2555, column: 6)
!11026 = !DILocation(line: 2555, column: 6, scope: !11019)
!11027 = !DILocation(line: 2556, column: 11, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 2556, column: 11)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 2555, column: 63)
!11030 = !DILocation(line: 2556, column: 17, scope: !11028)
!11031 = !DILocation(line: 2556, column: 23, scope: !11028)
!11032 = !DILocation(line: 2556, column: 20, scope: !11028)
!11033 = !DILocation(line: 2556, column: 11, scope: !11029)
!11034 = !DILocation(line: 2557, column: 26, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 2556, column: 27)
!11036 = !DILocation(line: 2557, column: 34, scope: !11035)
!11037 = !DILocation(line: 2557, column: 41, scope: !11035)
!11038 = !DILocation(line: 2557, column: 8, scope: !11035)
!11039 = !DILocation(line: 2558, column: 8, scope: !11035)
!11040 = !DILocation(line: 2560, column: 6, scope: !11029)
!11041 = !DILocation(line: 2555, column: 51, scope: !11025)
!11042 = !DILocation(line: 2555, column: 57, scope: !11025)
!11043 = !DILocation(line: 2555, column: 49, scope: !11025)
!11044 = !DILocation(line: 2555, column: 6, scope: !11025)
!11045 = distinct !{!11045, !11026, !11046}
!11046 = !DILocation(line: 2560, column: 6, scope: !11019)
!11047 = !DILocation(line: 2561, column: 5, scope: !11016)
!11048 = !DILocation(line: 2562, column: 6, scope: !11011)
!11049 = distinct !{!11049, !11001, !11050}
!11050 = !DILocation(line: 2562, column: 6, scope: !10858)
!11051 = !DILocation(line: 2563, column: 3, scope: !10859)
!11052 = !DILocation(line: 2565, column: 7, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2565, column: 7)
!11054 = !DILocation(line: 2565, column: 14, scope: !11053)
!11055 = !DILocation(line: 2565, column: 7, scope: !10423)
!11056 = !DILocation(line: 2566, column: 8, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 2566, column: 8)
!11058 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2565, column: 25)
!11059 = !DILocation(line: 2566, column: 13, scope: !11057)
!11060 = !DILocation(line: 2566, column: 8, scope: !11058)
!11061 = !DILocalVariable(name: "node", scope: !11062, file: !3, line: 2567, type: !876)
!11062 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 2566, column: 23)
!11063 = !DILocation(line: 2567, column: 12, scope: !11062)
!11064 = !DILocation(line: 2569, column: 17, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 2569, column: 5)
!11066 = !DILocation(line: 2569, column: 22, scope: !11065)
!11067 = !DILocation(line: 2569, column: 32, scope: !11065)
!11068 = !DILocation(line: 2569, column: 38, scope: !11065)
!11069 = !DILocation(line: 2569, column: 15, scope: !11065)
!11070 = !DILocation(line: 2569, column: 10, scope: !11065)
!11071 = !DILocation(line: 2569, column: 45, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 2569, column: 5)
!11073 = !DILocation(line: 2569, column: 5, scope: !11065)
!11074 = !DILocation(line: 2570, column: 10, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 2570, column: 10)
!11076 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 2569, column: 70)
!11077 = !DILocation(line: 2570, column: 16, scope: !11075)
!11078 = !DILocation(line: 2570, column: 22, scope: !11075)
!11079 = !DILocation(line: 2570, column: 19, scope: !11075)
!11080 = !DILocation(line: 2570, column: 10, scope: !11076)
!11081 = !DILocation(line: 2571, column: 18, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2570, column: 26)
!11083 = !DILocation(line: 2571, column: 23, scope: !11082)
!11084 = !DILocation(line: 2571, column: 33, scope: !11082)
!11085 = !DILocation(line: 2571, column: 7, scope: !11082)
!11086 = !DILocation(line: 2572, column: 6, scope: !11082)
!11087 = !DILocation(line: 2573, column: 5, scope: !11076)
!11088 = !DILocation(line: 2569, column: 58, scope: !11072)
!11089 = !DILocation(line: 2569, column: 64, scope: !11072)
!11090 = !DILocation(line: 2569, column: 56, scope: !11072)
!11091 = !DILocation(line: 2569, column: 5, scope: !11072)
!11092 = distinct !{!11092, !11073, !11093}
!11093 = !DILocation(line: 2573, column: 5, scope: !11065)
!11094 = !DILocation(line: 2574, column: 4, scope: !11062)
!11095 = !DILocation(line: 2575, column: 3, scope: !11058)
!11096 = !DILocation(line: 2580, column: 7, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2580, column: 7)
!11098 = !DILocation(line: 2580, column: 12, scope: !11097)
!11099 = !DILocation(line: 2580, column: 19, scope: !11097)
!11100 = !DILocation(line: 2580, column: 23, scope: !11097)
!11101 = !DILocation(line: 2580, column: 28, scope: !11097)
!11102 = !DILocation(line: 2580, column: 36, scope: !11097)
!11103 = !DILocation(line: 2580, column: 42, scope: !11097)
!11104 = !DILocation(line: 2580, column: 39, scope: !11097)
!11105 = !DILocation(line: 2580, column: 7, scope: !10423)
!11106 = !DILocalVariable(name: "clip", scope: !11107, file: !3, line: 2581, type: !4540)
!11107 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 2580, column: 46)
!11108 = !DILocation(line: 2581, column: 15, scope: !11107)
!11109 = !DILocation(line: 2581, column: 47, scope: !11107)
!11110 = !DILocation(line: 2581, column: 52, scope: !11107)
!11111 = !DILocation(line: 2581, column: 57, scope: !11107)
!11112 = !DILocation(line: 2581, column: 22, scope: !11107)
!11113 = !DILocation(line: 2583, column: 8, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 2583, column: 8)
!11115 = !DILocation(line: 2583, column: 8, scope: !11107)
!11116 = !DILocation(line: 2584, column: 25, scope: !11114)
!11117 = !DILocation(line: 2584, column: 32, scope: !11114)
!11118 = !DILocation(line: 2584, column: 38, scope: !11114)
!11119 = !DILocation(line: 2584, column: 44, scope: !11114)
!11120 = !DILocation(line: 2584, column: 5, scope: !11114)
!11121 = !DILocation(line: 2585, column: 3, scope: !11107)
!11122 = !DILocation(line: 2588, column: 25, scope: !10423)
!11123 = !DILocation(line: 2588, column: 32, scope: !10423)
!11124 = !DILocation(line: 2588, column: 3, scope: !10423)
!11125 = !DILocation(line: 2589, column: 2, scope: !10423)
!11126 = !DILocation(line: 2590, column: 1, scope: !10359)
!11127 = distinct !DISubprogram(name: "DAG_ids_check_recalc", scope: !3, file: !3, line: 2637, type: !11128, scopeLine: 2638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11128 = !DISubroutineType(types: !11129)
!11129 = !{null, !4595, !4663, !1940}
!11130 = !DILocalVariable(name: "bmain", arg: 1, scope: !11127, file: !3, line: 2637, type: !4595)
!11131 = !DILocation(line: 2637, column: 33, scope: !11127)
!11132 = !DILocalVariable(name: "scene", arg: 2, scope: !11127, file: !3, line: 2637, type: !4663)
!11133 = !DILocation(line: 2637, column: 47, scope: !11127)
!11134 = !DILocalVariable(name: "time", arg: 3, scope: !11127, file: !3, line: 2637, type: !1940)
!11135 = !DILocation(line: 2637, column: 59, scope: !11127)
!11136 = !DILocalVariable(name: "lbarray", scope: !11127, file: !3, line: 2639, type: !10238)
!11137 = !DILocation(line: 2639, column: 12, scope: !11127)
!11138 = !DILocalVariable(name: "a", scope: !11127, file: !3, line: 2640, type: !389)
!11139 = !DILocation(line: 2640, column: 6, scope: !11127)
!11140 = !DILocalVariable(name: "updated", scope: !11127, file: !3, line: 2641, type: !1940)
!11141 = !DILocation(line: 2641, column: 7, scope: !11127)
!11142 = !DILocation(line: 2644, column: 28, scope: !11127)
!11143 = !DILocation(line: 2644, column: 35, scope: !11127)
!11144 = !DILocation(line: 2644, column: 7, scope: !11127)
!11145 = !DILocation(line: 2644, column: 5, scope: !11127)
!11146 = !DILocation(line: 2646, column: 2, scope: !11127)
!11147 = !DILocation(line: 2646, column: 10, scope: !11127)
!11148 = !DILocalVariable(name: "lb", scope: !11149, file: !3, line: 2647, type: !4373)
!11149 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2646, column: 14)
!11150 = !DILocation(line: 2647, column: 13, scope: !11149)
!11151 = !DILocation(line: 2647, column: 26, scope: !11149)
!11152 = !DILocation(line: 2647, column: 18, scope: !11149)
!11153 = !DILocalVariable(name: "id", scope: !11149, file: !3, line: 2648, type: !368)
!11154 = !DILocation(line: 2648, column: 7, scope: !11149)
!11155 = !DILocation(line: 2648, column: 12, scope: !11149)
!11156 = !DILocation(line: 2648, column: 16, scope: !11149)
!11157 = !DILocation(line: 2652, column: 7, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 2652, column: 7)
!11159 = !DILocation(line: 2652, column: 10, scope: !11158)
!11160 = !DILocation(line: 2652, column: 13, scope: !11158)
!11161 = !DILocation(line: 2652, column: 20, scope: !11158)
!11162 = !DILocation(line: 2652, column: 34, scope: !11158)
!11163 = !DILocation(line: 2652, column: 38, scope: !11158)
!11164 = !DILocation(line: 2652, column: 7, scope: !11149)
!11165 = !DILocation(line: 2653, column: 12, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 2652, column: 48)
!11167 = !DILocation(line: 2654, column: 4, scope: !11166)
!11168 = distinct !{!11168, !11146, !11169}
!11169 = !DILocation(line: 2656, column: 2, scope: !11127)
!11170 = !DILocation(line: 2658, column: 27, scope: !11127)
!11171 = !DILocation(line: 2658, column: 34, scope: !11127)
!11172 = !DILocation(line: 2658, column: 42, scope: !11127)
!11173 = !DILocation(line: 2658, column: 50, scope: !11127)
!11174 = !DILocation(line: 2658, column: 53, scope: !11127)
!11175 = !DILocation(line: 2658, column: 2, scope: !11127)
!11176 = !DILocation(line: 2659, column: 1, scope: !11127)
!11177 = distinct !DISubprogram(name: "dag_editors_scene_update", scope: !3, file: !3, line: 1338, type: !4661, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11178 = !DILocalVariable(name: "bmain", arg: 1, scope: !11177, file: !3, line: 1338, type: !4595)
!11179 = !DILocation(line: 1338, column: 44, scope: !11177)
!11180 = !DILocalVariable(name: "scene", arg: 2, scope: !11177, file: !3, line: 1338, type: !4663)
!11181 = !DILocation(line: 1338, column: 58, scope: !11177)
!11182 = !DILocalVariable(name: "updated", arg: 3, scope: !11177, file: !3, line: 1338, type: !389)
!11183 = !DILocation(line: 1338, column: 69, scope: !11177)
!11184 = !DILocation(line: 1340, column: 6, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 1340, column: 6)
!11186 = !DILocation(line: 1340, column: 6, scope: !11177)
!11187 = !DILocation(line: 1341, column: 3, scope: !11185)
!11188 = !DILocation(line: 1341, column: 24, scope: !11185)
!11189 = !DILocation(line: 1341, column: 31, scope: !11185)
!11190 = !DILocation(line: 1341, column: 38, scope: !11185)
!11191 = !DILocation(line: 1342, column: 1, scope: !11177)
!11192 = distinct !DISubprogram(name: "DAG_ids_clear_recalc", scope: !3, file: !3, line: 2679, type: !7771, scopeLine: 2680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11193 = !DILocalVariable(name: "bmain", arg: 1, scope: !11192, file: !3, line: 2679, type: !4595)
!11194 = !DILocation(line: 2679, column: 33, scope: !11192)
!11195 = !DILocalVariable(name: "lbarray", scope: !11192, file: !3, line: 2681, type: !10238)
!11196 = !DILocation(line: 2681, column: 12, scope: !11192)
!11197 = !DILocalVariable(name: "ntree", scope: !11192, file: !3, line: 2682, type: !4525)
!11198 = !DILocation(line: 2682, column: 13, scope: !11192)
!11199 = !DILocalVariable(name: "a", scope: !11192, file: !3, line: 2683, type: !389)
!11200 = !DILocation(line: 2683, column: 6, scope: !11192)
!11201 = !DILocalVariable(name: "have_updated_objects", scope: !11192, file: !3, line: 2686, type: !1940)
!11202 = !DILocation(line: 2686, column: 7, scope: !11192)
!11203 = !DILocation(line: 2688, column: 25, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 2688, column: 6)
!11205 = !DILocation(line: 2688, column: 6, scope: !11204)
!11206 = !DILocation(line: 2688, column: 6, scope: !11192)
!11207 = !DILocalVariable(name: "listbase", scope: !11208, file: !3, line: 2689, type: !414)
!11208 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 2688, column: 40)
!11209 = !DILocation(line: 2689, column: 12, scope: !11208)
!11210 = !DILocalVariable(name: "dsl", scope: !11208, file: !3, line: 2690, type: !9751)
!11211 = !DILocation(line: 2690, column: 18, scope: !11208)
!11212 = !DILocation(line: 2703, column: 28, scope: !11208)
!11213 = !DILocation(line: 2703, column: 3, scope: !11208)
!11214 = !DILocation(line: 2705, column: 23, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 2705, column: 3)
!11216 = !DILocation(line: 2705, column: 14, scope: !11215)
!11217 = !DILocation(line: 2705, column: 12, scope: !11215)
!11218 = !DILocation(line: 2705, column: 8, scope: !11215)
!11219 = !DILocation(line: 2705, column: 30, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 2705, column: 3)
!11221 = !DILocation(line: 2705, column: 3, scope: !11215)
!11222 = !DILocalVariable(name: "scene", scope: !11223, file: !3, line: 2706, type: !4663)
!11223 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 2705, column: 52)
!11224 = !DILocation(line: 2706, column: 11, scope: !11223)
!11225 = !DILocation(line: 2706, column: 19, scope: !11223)
!11226 = !DILocation(line: 2706, column: 24, scope: !11223)
!11227 = !DILocalVariable(name: "node", scope: !11223, file: !3, line: 2707, type: !4397)
!11228 = !DILocation(line: 2707, column: 13, scope: !11223)
!11229 = !DILocation(line: 2708, column: 16, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 2708, column: 4)
!11231 = !DILocation(line: 2708, column: 23, scope: !11230)
!11232 = !DILocation(line: 2708, column: 31, scope: !11230)
!11233 = !DILocation(line: 2708, column: 39, scope: !11230)
!11234 = !DILocation(line: 2708, column: 14, scope: !11230)
!11235 = !DILocation(line: 2708, column: 9, scope: !11230)
!11236 = !DILocation(line: 2709, column: 9, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 2708, column: 4)
!11238 = !DILocation(line: 2709, column: 14, scope: !11237)
!11239 = !DILocation(line: 2709, column: 22, scope: !11237)
!11240 = !DILocation(line: 2709, column: 25, scope: !11237)
!11241 = !DILocation(line: 2709, column: 46, scope: !11237)
!11242 = !DILocation(line: 0, scope: !11237)
!11243 = !DILocation(line: 2708, column: 4, scope: !11230)
!11244 = !DILocation(line: 2712, column: 9, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 2712, column: 9)
!11246 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 2711, column: 4)
!11247 = !DILocation(line: 2712, column: 15, scope: !11245)
!11248 = !DILocation(line: 2712, column: 20, scope: !11245)
!11249 = !DILocation(line: 2712, column: 9, scope: !11246)
!11250 = !DILocalVariable(name: "object", scope: !11251, file: !3, line: 2713, type: !349)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 2712, column: 30)
!11252 = !DILocation(line: 2713, column: 14, scope: !11251)
!11253 = !DILocation(line: 2713, column: 34, scope: !11251)
!11254 = !DILocation(line: 2713, column: 40, scope: !11251)
!11255 = !DILocation(line: 2713, column: 23, scope: !11251)
!11256 = !DILocation(line: 2714, column: 10, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 2714, column: 10)
!11258 = !DILocation(line: 2714, column: 18, scope: !11257)
!11259 = !DILocation(line: 2714, column: 25, scope: !11257)
!11260 = !DILocation(line: 2714, column: 10, scope: !11251)
!11261 = !DILocation(line: 2715, column: 28, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 2714, column: 42)
!11263 = !DILocation(line: 2716, column: 7, scope: !11262)
!11264 = !DILocation(line: 2718, column: 5, scope: !11251)
!11265 = !DILocation(line: 2719, column: 4, scope: !11246)
!11266 = !DILocation(line: 2710, column: 16, scope: !11237)
!11267 = !DILocation(line: 2710, column: 22, scope: !11237)
!11268 = !DILocation(line: 2710, column: 14, scope: !11237)
!11269 = !DILocation(line: 2708, column: 4, scope: !11237)
!11270 = distinct !{!11270, !11243, !11271}
!11271 = !DILocation(line: 2719, column: 4, scope: !11230)
!11272 = !DILocation(line: 2720, column: 3, scope: !11223)
!11273 = !DILocation(line: 2705, column: 41, scope: !11220)
!11274 = !DILocation(line: 2705, column: 46, scope: !11220)
!11275 = !DILocation(line: 2705, column: 39, scope: !11220)
!11276 = !DILocation(line: 2705, column: 3, scope: !11220)
!11277 = distinct !{!11277, !11221, !11278}
!11278 = !DILocation(line: 2720, column: 3, scope: !11215)
!11279 = !DILocation(line: 2722, column: 3, scope: !11208)
!11280 = !DILocation(line: 2723, column: 2, scope: !11208)
!11281 = !DILocation(line: 2727, column: 28, scope: !11192)
!11282 = !DILocation(line: 2727, column: 35, scope: !11192)
!11283 = !DILocation(line: 2727, column: 7, scope: !11192)
!11284 = !DILocation(line: 2727, column: 5, scope: !11192)
!11285 = !DILocation(line: 2729, column: 2, scope: !11192)
!11286 = !DILocation(line: 2729, column: 10, scope: !11192)
!11287 = !DILocalVariable(name: "lb", scope: !11288, file: !3, line: 2730, type: !4373)
!11288 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 2729, column: 14)
!11289 = !DILocation(line: 2730, column: 13, scope: !11288)
!11290 = !DILocation(line: 2730, column: 26, scope: !11288)
!11291 = !DILocation(line: 2730, column: 18, scope: !11288)
!11292 = !DILocalVariable(name: "id", scope: !11288, file: !3, line: 2731, type: !368)
!11293 = !DILocation(line: 2731, column: 7, scope: !11288)
!11294 = !DILocation(line: 2731, column: 12, scope: !11288)
!11295 = !DILocation(line: 2731, column: 16, scope: !11288)
!11296 = !DILocation(line: 2735, column: 7, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 2735, column: 7)
!11298 = !DILocation(line: 2735, column: 10, scope: !11297)
!11299 = !DILocation(line: 2735, column: 13, scope: !11297)
!11300 = !DILocation(line: 2735, column: 20, scope: !11297)
!11301 = !DILocation(line: 2735, column: 34, scope: !11297)
!11302 = !DILocation(line: 2735, column: 38, scope: !11297)
!11303 = !DILocation(line: 2735, column: 7, scope: !11288)
!11304 = !DILocation(line: 2736, column: 4, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 2735, column: 48)
!11306 = !DILocation(line: 2736, column: 11, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 2736, column: 4)
!11308 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 2736, column: 4)
!11309 = !DILocation(line: 2736, column: 4, scope: !11308)
!11310 = !DILocation(line: 2737, column: 9, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 2737, column: 9)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 2736, column: 30)
!11313 = !DILocation(line: 2737, column: 13, scope: !11311)
!11314 = !DILocation(line: 2737, column: 18, scope: !11311)
!11315 = !DILocation(line: 2737, column: 9, scope: !11312)
!11316 = !DILocation(line: 2738, column: 6, scope: !11311)
!11317 = !DILocation(line: 2738, column: 10, scope: !11311)
!11318 = !DILocation(line: 2738, column: 15, scope: !11311)
!11319 = !DILocation(line: 2741, column: 25, scope: !11312)
!11320 = !DILocation(line: 2741, column: 13, scope: !11312)
!11321 = !DILocation(line: 2741, column: 11, scope: !11312)
!11322 = !DILocation(line: 2742, column: 9, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 2742, column: 9)
!11324 = !DILocation(line: 2742, column: 15, scope: !11323)
!11325 = !DILocation(line: 2742, column: 19, scope: !11323)
!11326 = !DILocation(line: 2742, column: 26, scope: !11323)
!11327 = !DILocation(line: 2742, column: 29, scope: !11323)
!11328 = !DILocation(line: 2742, column: 34, scope: !11323)
!11329 = !DILocation(line: 2742, column: 9, scope: !11312)
!11330 = !DILocation(line: 2743, column: 6, scope: !11323)
!11331 = !DILocation(line: 2743, column: 13, scope: !11323)
!11332 = !DILocation(line: 2743, column: 16, scope: !11323)
!11333 = !DILocation(line: 2743, column: 21, scope: !11323)
!11334 = !DILocation(line: 2744, column: 4, scope: !11312)
!11335 = !DILocation(line: 2736, column: 20, scope: !11307)
!11336 = !DILocation(line: 2736, column: 24, scope: !11307)
!11337 = !DILocation(line: 2736, column: 18, scope: !11307)
!11338 = !DILocation(line: 2736, column: 4, scope: !11307)
!11339 = distinct !{!11339, !11309, !11340}
!11340 = !DILocation(line: 2744, column: 4, scope: !11308)
!11341 = !DILocation(line: 2745, column: 3, scope: !11305)
!11342 = distinct !{!11342, !11285, !11343}
!11343 = !DILocation(line: 2746, column: 2, scope: !11192)
!11344 = !DILocation(line: 2748, column: 9, scope: !11192)
!11345 = !DILocation(line: 2748, column: 16, scope: !11192)
!11346 = !DILocation(line: 2748, column: 2, scope: !11192)
!11347 = !DILocation(line: 2751, column: 6, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 2751, column: 6)
!11349 = !DILocation(line: 2751, column: 6, scope: !11192)
!11350 = !DILocation(line: 2752, column: 19, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 2751, column: 28)
!11352 = !DILocation(line: 2752, column: 3, scope: !11351)
!11353 = !DILocation(line: 2753, column: 2, scope: !11351)
!11354 = !DILocation(line: 2755, column: 1, scope: !11192)
!11355 = distinct !DISubprogram(name: "DAG_id_type_tagged", scope: !3, file: !3, line: 2839, type: !11356, scopeLine: 2840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{!389, !4595, !387}
!11358 = !DILocalVariable(name: "bmain", arg: 1, scope: !11355, file: !3, line: 2839, type: !4595)
!11359 = !DILocation(line: 2839, column: 30, scope: !11355)
!11360 = !DILocalVariable(name: "idtype", arg: 2, scope: !11355, file: !3, line: 2839, type: !387)
!11361 = !DILocation(line: 2839, column: 43, scope: !11355)
!11362 = !DILocation(line: 2841, column: 9, scope: !11355)
!11363 = !DILocation(line: 2841, column: 16, scope: !11355)
!11364 = !DILocation(line: 2841, column: 30, scope: !11355)
!11365 = !DILocation(line: 2841, column: 2, scope: !11355)
!11366 = distinct !DISubprogram(name: "DAG_id_tag_update_ex", scope: !3, file: !3, line: 2757, type: !11367, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11367 = !DISubroutineType(types: !11368)
!11368 = !{null, !4595, !368, !387}
!11369 = !DILocalVariable(name: "bmain", arg: 1, scope: !11366, file: !3, line: 2757, type: !4595)
!11370 = !DILocation(line: 2757, column: 33, scope: !11366)
!11371 = !DILocalVariable(name: "id", arg: 2, scope: !11366, file: !3, line: 2757, type: !368)
!11372 = !DILocation(line: 2757, column: 44, scope: !11366)
!11373 = !DILocalVariable(name: "flag", arg: 3, scope: !11366, file: !3, line: 2757, type: !387)
!11374 = !DILocation(line: 2757, column: 54, scope: !11366)
!11375 = !DILocation(line: 2759, column: 6, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2759, column: 6)
!11377 = !DILocation(line: 2759, column: 9, scope: !11376)
!11378 = !DILocation(line: 2759, column: 6, scope: !11366)
!11379 = !DILocation(line: 2759, column: 18, scope: !11376)
!11380 = !DILocation(line: 2761, column: 8, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2761, column: 6)
!11382 = !DILocation(line: 2761, column: 14, scope: !11381)
!11383 = !DILocation(line: 2761, column: 6, scope: !11366)
!11384 = !DILocation(line: 2762, column: 43, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2761, column: 35)
!11386 = !DILocation(line: 2762, column: 47, scope: !11385)
!11387 = !DILocation(line: 2762, column: 53, scope: !11385)
!11388 = !DILocation(line: 2762, column: 3, scope: !11385)
!11389 = !DILocation(line: 2763, column: 2, scope: !11385)
!11390 = !DILocation(line: 2766, column: 6, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2766, column: 6)
!11392 = !DILocation(line: 2766, column: 6, scope: !11366)
!11393 = !DILocation(line: 2767, column: 7, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 2767, column: 7)
!11395 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 2766, column: 12)
!11396 = !DILocation(line: 2767, column: 12, scope: !11394)
!11397 = !DILocation(line: 2767, column: 7, scope: !11395)
!11398 = !DILocation(line: 2768, column: 22, scope: !11394)
!11399 = !DILocation(line: 2768, column: 29, scope: !11394)
!11400 = !DILocation(line: 2768, column: 4, scope: !11394)
!11401 = !DILocation(line: 2769, column: 7, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 2769, column: 7)
!11403 = !DILocation(line: 2769, column: 12, scope: !11402)
!11404 = !DILocation(line: 2769, column: 7, scope: !11395)
!11405 = !DILocation(line: 2770, column: 27, scope: !11402)
!11406 = !DILocation(line: 2770, column: 34, scope: !11402)
!11407 = !DILocation(line: 2770, column: 4, scope: !11402)
!11408 = !DILocation(line: 2771, column: 2, scope: !11395)
!11409 = !DILocation(line: 2773, column: 21, scope: !11391)
!11410 = !DILocation(line: 2773, column: 28, scope: !11391)
!11411 = !DILocation(line: 2773, column: 3, scope: !11391)
!11412 = !DILocation(line: 2776, column: 6, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2776, column: 6)
!11414 = !DILocation(line: 2776, column: 6, scope: !11366)
!11415 = !DILocalVariable(name: "ob", scope: !11416, file: !3, line: 2777, type: !349)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 2776, column: 12)
!11417 = !DILocation(line: 2777, column: 11, scope: !11416)
!11418 = !DILocalVariable(name: "idtype", scope: !11416, file: !3, line: 2778, type: !387)
!11419 = !DILocation(line: 2778, column: 9, scope: !11416)
!11420 = !DILocation(line: 2778, column: 18, scope: !11416)
!11421 = !DILocation(line: 2780, column: 7, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 2780, column: 7)
!11423 = !DILocation(line: 2780, column: 14, scope: !11422)
!11424 = !DILocation(line: 2780, column: 7, scope: !11416)
!11425 = !DILocation(line: 2782, column: 19, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 2780, column: 24)
!11427 = !DILocation(line: 2782, column: 9, scope: !11426)
!11428 = !DILocation(line: 2782, column: 7, scope: !11426)
!11429 = !DILocation(line: 2783, column: 19, scope: !11426)
!11430 = !DILocation(line: 2783, column: 24, scope: !11426)
!11431 = !DILocation(line: 2783, column: 4, scope: !11426)
!11432 = !DILocation(line: 2783, column: 8, scope: !11426)
!11433 = !DILocation(line: 2783, column: 15, scope: !11426)
!11434 = !DILocation(line: 2784, column: 3, scope: !11426)
!11435 = !DILocation(line: 2785, column: 12, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 2785, column: 12)
!11437 = !DILocation(line: 2785, column: 19, scope: !11436)
!11438 = !DILocation(line: 2785, column: 12, scope: !11422)
!11439 = !DILocalVariable(name: "psys", scope: !11440, file: !3, line: 2786, type: !5729)
!11440 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 2785, column: 29)
!11441 = !DILocation(line: 2786, column: 20, scope: !11440)
!11442 = !DILocation(line: 2788, column: 14, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 2788, column: 4)
!11444 = !DILocation(line: 2788, column: 21, scope: !11443)
!11445 = !DILocation(line: 2788, column: 28, scope: !11443)
!11446 = !DILocation(line: 2788, column: 12, scope: !11443)
!11447 = !DILocation(line: 2788, column: 9, scope: !11443)
!11448 = !DILocation(line: 2788, column: 35, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 2788, column: 4)
!11450 = !DILocation(line: 2788, column: 4, scope: !11443)
!11451 = !DILocation(line: 2789, column: 17, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2789, column: 5)
!11453 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 2788, column: 57)
!11454 = !DILocation(line: 2789, column: 21, scope: !11452)
!11455 = !DILocation(line: 2789, column: 36, scope: !11452)
!11456 = !DILocation(line: 2789, column: 15, scope: !11452)
!11457 = !DILocation(line: 2789, column: 10, scope: !11452)
!11458 = !DILocation(line: 2789, column: 43, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 2789, column: 5)
!11460 = !DILocation(line: 2789, column: 5, scope: !11452)
!11461 = !DILocation(line: 2790, column: 11, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 2790, column: 10)
!11463 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 2789, column: 68)
!11464 = !DILocation(line: 2790, column: 17, scope: !11462)
!11465 = !DILocation(line: 2790, column: 23, scope: !11462)
!11466 = !DILocation(line: 2790, column: 29, scope: !11462)
!11467 = !DILocation(line: 2790, column: 26, scope: !11462)
!11468 = !DILocation(line: 2790, column: 10, scope: !11463)
!11469 = !DILocation(line: 2791, column: 22, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 2790, column: 33)
!11471 = !DILocation(line: 2791, column: 27, scope: !11470)
!11472 = !DILocation(line: 2791, column: 7, scope: !11470)
!11473 = !DILocation(line: 2791, column: 11, scope: !11470)
!11474 = !DILocation(line: 2791, column: 18, scope: !11470)
!11475 = !DILocation(line: 2792, column: 24, scope: !11470)
!11476 = !DILocation(line: 2792, column: 29, scope: !11470)
!11477 = !DILocation(line: 2792, column: 7, scope: !11470)
!11478 = !DILocation(line: 2792, column: 13, scope: !11470)
!11479 = !DILocation(line: 2792, column: 20, scope: !11470)
!11480 = !DILocation(line: 2793, column: 25, scope: !11470)
!11481 = !DILocation(line: 2793, column: 33, scope: !11470)
!11482 = !DILocation(line: 2793, column: 37, scope: !11470)
!11483 = !DILocation(line: 2793, column: 7, scope: !11470)
!11484 = !DILocation(line: 2794, column: 30, scope: !11470)
!11485 = !DILocation(line: 2794, column: 38, scope: !11470)
!11486 = !DILocation(line: 2794, column: 42, scope: !11470)
!11487 = !DILocation(line: 2794, column: 7, scope: !11470)
!11488 = !DILocation(line: 2795, column: 6, scope: !11470)
!11489 = !DILocation(line: 2796, column: 5, scope: !11463)
!11490 = !DILocation(line: 2789, column: 56, scope: !11459)
!11491 = !DILocation(line: 2789, column: 62, scope: !11459)
!11492 = !DILocation(line: 2789, column: 54, scope: !11459)
!11493 = !DILocation(line: 2789, column: 5, scope: !11459)
!11494 = distinct !{!11494, !11460, !11495}
!11495 = !DILocation(line: 2796, column: 5, scope: !11452)
!11496 = !DILocation(line: 2797, column: 4, scope: !11453)
!11497 = !DILocation(line: 2788, column: 44, scope: !11449)
!11498 = !DILocation(line: 2788, column: 48, scope: !11449)
!11499 = !DILocation(line: 2788, column: 51, scope: !11449)
!11500 = !DILocation(line: 2788, column: 42, scope: !11449)
!11501 = !DILocation(line: 2788, column: 4, scope: !11449)
!11502 = distinct !{!11502, !11450, !11503}
!11503 = !DILocation(line: 2797, column: 4, scope: !11443)
!11504 = !DILocation(line: 2798, column: 3, scope: !11440)
!11505 = !DILocation(line: 2799, column: 12, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 2799, column: 12)
!11507 = !DILocation(line: 2799, column: 19, scope: !11506)
!11508 = !DILocation(line: 2799, column: 12, scope: !11436)
!11509 = !DILocation(line: 2801, column: 14, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 2801, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11506, file: !3, line: 2799, column: 29)
!11512 = !DILocation(line: 2801, column: 21, scope: !11510)
!11513 = !DILocation(line: 2801, column: 28, scope: !11510)
!11514 = !DILocation(line: 2801, column: 12, scope: !11510)
!11515 = !DILocation(line: 2801, column: 9, scope: !11510)
!11516 = !DILocation(line: 2801, column: 35, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 2801, column: 4)
!11518 = !DILocation(line: 2801, column: 4, scope: !11510)
!11519 = !DILocation(line: 2802, column: 9, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 2802, column: 9)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 2801, column: 57)
!11522 = !DILocation(line: 2802, column: 13, scope: !11520)
!11523 = !DILocation(line: 2802, column: 18, scope: !11520)
!11524 = !DILocation(line: 2802, column: 9, scope: !11521)
!11525 = !DILocalVariable(name: "cu", scope: !11526, file: !3, line: 2803, type: !6187)
!11526 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 2802, column: 30)
!11527 = !DILocation(line: 2803, column: 13, scope: !11526)
!11528 = !DILocation(line: 2803, column: 18, scope: !11526)
!11529 = !DILocation(line: 2803, column: 22, scope: !11526)
!11530 = !DILocation(line: 2805, column: 10, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2805, column: 10)
!11532 = !DILocation(line: 2805, column: 10, scope: !11526)
!11533 = !DILocation(line: 2806, column: 22, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 2805, column: 84)
!11535 = !DILocation(line: 2806, column: 27, scope: !11534)
!11536 = !DILocation(line: 2806, column: 7, scope: !11534)
!11537 = !DILocation(line: 2806, column: 11, scope: !11534)
!11538 = !DILocation(line: 2806, column: 18, scope: !11534)
!11539 = !DILocation(line: 2807, column: 6, scope: !11534)
!11540 = !DILocation(line: 2808, column: 5, scope: !11526)
!11541 = !DILocation(line: 2809, column: 4, scope: !11521)
!11542 = !DILocation(line: 2801, column: 44, scope: !11517)
!11543 = !DILocation(line: 2801, column: 48, scope: !11517)
!11544 = !DILocation(line: 2801, column: 51, scope: !11517)
!11545 = !DILocation(line: 2801, column: 42, scope: !11517)
!11546 = !DILocation(line: 2801, column: 4, scope: !11517)
!11547 = distinct !{!11547, !11518, !11548}
!11548 = !DILocation(line: 2809, column: 4, scope: !11510)
!11549 = !DILocation(line: 2810, column: 3, scope: !11511)
!11550 = !DILocation(line: 2816, column: 2, scope: !11416)
!11551 = !DILocation(line: 2817, column: 1, scope: !11366)
!11552 = distinct !DISubprogram(name: "DAG_pose_sort", scope: !3, file: !3, line: 2879, type: !11553, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{null, !349}
!11555 = !DILocalVariable(name: "ob", arg: 1, scope: !11552, file: !3, line: 2879, type: !349)
!11556 = !DILocation(line: 2879, column: 28, scope: !11552)
!11557 = !DILocalVariable(name: "pose", scope: !11552, file: !3, line: 2881, type: !11558)
!11558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11559, size: 64)
!11559 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPose", file: !324, line: 356, baseType: !2853)
!11560 = !DILocation(line: 2881, column: 9, scope: !11552)
!11561 = !DILocation(line: 2881, column: 16, scope: !11552)
!11562 = !DILocation(line: 2881, column: 20, scope: !11552)
!11563 = !DILocalVariable(name: "pchan", scope: !11552, file: !3, line: 2882, type: !4542)
!11564 = !DILocation(line: 2882, column: 16, scope: !11552)
!11565 = !DILocalVariable(name: "con", scope: !11552, file: !3, line: 2883, type: !5679)
!11566 = !DILocation(line: 2883, column: 15, scope: !11552)
!11567 = !DILocalVariable(name: "node", scope: !11552, file: !3, line: 2884, type: !4397)
!11568 = !DILocation(line: 2884, column: 11, scope: !11552)
!11569 = !DILocalVariable(name: "node2", scope: !11552, file: !3, line: 2885, type: !4397)
!11570 = !DILocation(line: 2885, column: 11, scope: !11552)
!11571 = !DILocalVariable(name: "node3", scope: !11552, file: !3, line: 2885, type: !4397)
!11572 = !DILocation(line: 2885, column: 19, scope: !11552)
!11573 = !DILocalVariable(name: "rootnode", scope: !11552, file: !3, line: 2886, type: !4397)
!11574 = !DILocation(line: 2886, column: 11, scope: !11552)
!11575 = !DILocalVariable(name: "dag", scope: !11552, file: !3, line: 2887, type: !5278)
!11576 = !DILocation(line: 2887, column: 13, scope: !11552)
!11577 = !DILocalVariable(name: "nqueue", scope: !11552, file: !3, line: 2888, type: !4685)
!11578 = !DILocation(line: 2888, column: 16, scope: !11552)
!11579 = !DILocalVariable(name: "itA", scope: !11552, file: !3, line: 2889, type: !5311)
!11580 = !DILocation(line: 2889, column: 14, scope: !11552)
!11581 = !DILocalVariable(name: "tempbase", scope: !11552, file: !3, line: 2890, type: !414)
!11582 = !DILocation(line: 2890, column: 11, scope: !11552)
!11583 = !DILocalVariable(name: "skip", scope: !11552, file: !3, line: 2891, type: !389)
!11584 = !DILocation(line: 2891, column: 6, scope: !11552)
!11585 = !DILocation(line: 2893, column: 8, scope: !11552)
!11586 = !DILocation(line: 2893, column: 6, scope: !11552)
!11587 = !DILocation(line: 2894, column: 2, scope: !11552)
!11588 = !DILocation(line: 2894, column: 7, scope: !11552)
!11589 = !DILocation(line: 2894, column: 23, scope: !11552)
!11590 = !DILocation(line: 2896, column: 26, scope: !11552)
!11591 = !DILocation(line: 2896, column: 13, scope: !11552)
!11592 = !DILocation(line: 2896, column: 11, scope: !11552)
!11593 = !DILocation(line: 2899, column: 15, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 2899, column: 2)
!11595 = !DILocation(line: 2899, column: 21, scope: !11594)
!11596 = !DILocation(line: 2899, column: 30, scope: !11594)
!11597 = !DILocation(line: 2899, column: 13, scope: !11594)
!11598 = !DILocation(line: 2899, column: 7, scope: !11594)
!11599 = !DILocation(line: 2899, column: 37, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 2899, column: 2)
!11601 = !DILocation(line: 2899, column: 2, scope: !11594)
!11602 = !DILocalVariable(name: "addtoroot", scope: !11603, file: !3, line: 2900, type: !389)
!11603 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 2899, column: 65)
!11604 = !DILocation(line: 2900, column: 7, scope: !11603)
!11605 = !DILocation(line: 2902, column: 23, scope: !11603)
!11606 = !DILocation(line: 2902, column: 28, scope: !11603)
!11607 = !DILocation(line: 2902, column: 10, scope: !11603)
!11608 = !DILocation(line: 2902, column: 8, scope: !11603)
!11609 = !DILocation(line: 2904, column: 7, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 2904, column: 7)
!11611 = !DILocation(line: 2904, column: 14, scope: !11610)
!11612 = !DILocation(line: 2904, column: 7, scope: !11603)
!11613 = !DILocation(line: 2905, column: 25, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 2904, column: 22)
!11615 = !DILocation(line: 2905, column: 30, scope: !11614)
!11616 = !DILocation(line: 2905, column: 37, scope: !11614)
!11617 = !DILocation(line: 2905, column: 12, scope: !11614)
!11618 = !DILocation(line: 2905, column: 10, scope: !11614)
!11619 = !DILocation(line: 2906, column: 21, scope: !11614)
!11620 = !DILocation(line: 2906, column: 26, scope: !11614)
!11621 = !DILocation(line: 2906, column: 33, scope: !11614)
!11622 = !DILocation(line: 2906, column: 4, scope: !11614)
!11623 = !DILocation(line: 2907, column: 14, scope: !11614)
!11624 = !DILocation(line: 2908, column: 3, scope: !11614)
!11625 = !DILocation(line: 2909, column: 14, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 2909, column: 3)
!11627 = !DILocation(line: 2909, column: 21, scope: !11626)
!11628 = !DILocation(line: 2909, column: 33, scope: !11626)
!11629 = !DILocation(line: 2909, column: 12, scope: !11626)
!11630 = !DILocation(line: 2909, column: 8, scope: !11626)
!11631 = !DILocation(line: 2909, column: 40, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 2909, column: 3)
!11633 = !DILocation(line: 2909, column: 3, scope: !11626)
!11634 = !DILocalVariable(name: "cti", scope: !11635, file: !3, line: 2910, type: !5802)
!11635 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 2909, column: 62)
!11636 = !DILocation(line: 2910, column: 25, scope: !11635)
!11637 = !DILocation(line: 2910, column: 59, scope: !11635)
!11638 = !DILocation(line: 2910, column: 31, scope: !11635)
!11639 = !DILocalVariable(name: "targets", scope: !11635, file: !3, line: 2911, type: !414)
!11640 = !DILocation(line: 2911, column: 13, scope: !11635)
!11641 = !DILocalVariable(name: "ct", scope: !11635, file: !3, line: 2912, type: !5872)
!11642 = !DILocation(line: 2912, column: 23, scope: !11635)
!11643 = !DILocation(line: 2914, column: 8, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 2914, column: 8)
!11645 = !DILocation(line: 2914, column: 12, scope: !11644)
!11646 = !DILocation(line: 2914, column: 15, scope: !11644)
!11647 = !DILocation(line: 2914, column: 20, scope: !11644)
!11648 = !DILocation(line: 2914, column: 8, scope: !11635)
!11649 = !DILocation(line: 2915, column: 5, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 2914, column: 44)
!11651 = !DILocation(line: 2915, column: 10, scope: !11650)
!11652 = !DILocation(line: 2915, column: 33, scope: !11650)
!11653 = !DILocation(line: 2917, column: 23, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 2917, column: 5)
!11655 = !DILocation(line: 2917, column: 15, scope: !11654)
!11656 = !DILocation(line: 2917, column: 13, scope: !11654)
!11657 = !DILocation(line: 2917, column: 10, scope: !11654)
!11658 = !DILocation(line: 2917, column: 30, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 2917, column: 5)
!11660 = !DILocation(line: 2917, column: 5, scope: !11654)
!11661 = !DILocation(line: 2918, column: 10, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 2918, column: 10)
!11663 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 2917, column: 49)
!11664 = !DILocation(line: 2918, column: 14, scope: !11662)
!11665 = !DILocation(line: 2918, column: 21, scope: !11662)
!11666 = !DILocation(line: 2918, column: 18, scope: !11662)
!11667 = !DILocation(line: 2918, column: 24, scope: !11662)
!11668 = !DILocation(line: 2918, column: 27, scope: !11662)
!11669 = !DILocation(line: 2918, column: 31, scope: !11662)
!11670 = !DILocation(line: 2918, column: 10, scope: !11663)
!11671 = !DILocalVariable(name: "target", scope: !11672, file: !3, line: 2919, type: !4542)
!11672 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 2918, column: 45)
!11673 = !DILocation(line: 2919, column: 21, scope: !11672)
!11674 = !DILocation(line: 2919, column: 57, scope: !11672)
!11675 = !DILocation(line: 2919, column: 61, scope: !11672)
!11676 = !DILocation(line: 2919, column: 67, scope: !11672)
!11677 = !DILocation(line: 2919, column: 71, scope: !11672)
!11678 = !DILocation(line: 2919, column: 30, scope: !11672)
!11679 = !DILocation(line: 2920, column: 11, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2920, column: 11)
!11681 = !DILocation(line: 2920, column: 11, scope: !11672)
!11682 = !DILocation(line: 2921, column: 29, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 2920, column: 19)
!11684 = !DILocation(line: 2921, column: 34, scope: !11683)
!11685 = !DILocation(line: 2921, column: 16, scope: !11683)
!11686 = !DILocation(line: 2921, column: 14, scope: !11683)
!11687 = !DILocation(line: 2922, column: 25, scope: !11683)
!11688 = !DILocation(line: 2922, column: 30, scope: !11683)
!11689 = !DILocation(line: 2922, column: 37, scope: !11683)
!11690 = !DILocation(line: 2922, column: 8, scope: !11683)
!11691 = !DILocation(line: 2924, column: 12, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 2924, column: 12)
!11693 = !DILocation(line: 2924, column: 17, scope: !11692)
!11694 = !DILocation(line: 2924, column: 22, scope: !11692)
!11695 = !DILocation(line: 2924, column: 12, scope: !11683)
!11696 = !DILocalVariable(name: "data", scope: !11697, file: !3, line: 2925, type: !4437)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 2924, column: 52)
!11698 = !DILocation(line: 2925, column: 31, scope: !11697)
!11699 = !DILocation(line: 2925, column: 62, scope: !11697)
!11700 = !DILocation(line: 2925, column: 67, scope: !11697)
!11701 = !DILocation(line: 2925, column: 38, scope: !11697)
!11702 = !DILocalVariable(name: "parchan", scope: !11697, file: !3, line: 2926, type: !4542)
!11703 = !DILocation(line: 2926, column: 23, scope: !11697)
!11704 = !DILocalVariable(name: "segcount", scope: !11697, file: !3, line: 2927, type: !389)
!11705 = !DILocation(line: 2927, column: 13, scope: !11697)
!11706 = !DILocation(line: 2930, column: 15, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 2930, column: 13)
!11708 = !DILocation(line: 2930, column: 21, scope: !11707)
!11709 = !DILocation(line: 2930, column: 26, scope: !11707)
!11710 = !DILocation(line: 2930, column: 13, scope: !11697)
!11711 = !DILocation(line: 2931, column: 20, scope: !11707)
!11712 = !DILocation(line: 2931, column: 27, scope: !11707)
!11713 = !DILocation(line: 2931, column: 18, scope: !11707)
!11714 = !DILocation(line: 2931, column: 10, scope: !11707)
!11715 = !DILocation(line: 2933, column: 20, scope: !11707)
!11716 = !DILocation(line: 2933, column: 18, scope: !11707)
!11717 = !DILocation(line: 2936, column: 9, scope: !11697)
!11718 = !DILocation(line: 2936, column: 16, scope: !11697)
!11719 = !DILocation(line: 2937, column: 31, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 2936, column: 25)
!11721 = !DILocation(line: 2937, column: 36, scope: !11720)
!11722 = !DILocation(line: 2937, column: 18, scope: !11720)
!11723 = !DILocation(line: 2937, column: 16, scope: !11720)
!11724 = !DILocation(line: 2938, column: 27, scope: !11720)
!11725 = !DILocation(line: 2938, column: 32, scope: !11720)
!11726 = !DILocation(line: 2938, column: 39, scope: !11720)
!11727 = !DILocation(line: 2938, column: 10, scope: !11720)
!11728 = !DILocation(line: 2940, column: 18, scope: !11720)
!11729 = !DILocation(line: 2941, column: 14, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 2941, column: 14)
!11731 = !DILocation(line: 2941, column: 26, scope: !11730)
!11732 = !DILocation(line: 2941, column: 32, scope: !11730)
!11733 = !DILocation(line: 2941, column: 23, scope: !11730)
!11734 = !DILocation(line: 2941, column: 41, scope: !11730)
!11735 = !DILocation(line: 2941, column: 44, scope: !11730)
!11736 = !DILocation(line: 2941, column: 53, scope: !11730)
!11737 = !DILocation(line: 2941, column: 14, scope: !11720)
!11738 = !DILocation(line: 2941, column: 60, scope: !11730)
!11739 = !DILocation(line: 2942, column: 20, scope: !11720)
!11740 = !DILocation(line: 2942, column: 29, scope: !11720)
!11741 = !DILocation(line: 2942, column: 18, scope: !11720)
!11742 = distinct !{!11742, !11717, !11743}
!11743 = !DILocation(line: 2943, column: 9, scope: !11697)
!11744 = !DILocation(line: 2944, column: 8, scope: !11697)
!11745 = !DILocation(line: 2945, column: 7, scope: !11683)
!11746 = !DILocation(line: 2946, column: 6, scope: !11672)
!11747 = !DILocation(line: 2947, column: 5, scope: !11663)
!11748 = !DILocation(line: 2917, column: 39, scope: !11659)
!11749 = !DILocation(line: 2917, column: 43, scope: !11659)
!11750 = !DILocation(line: 2917, column: 37, scope: !11659)
!11751 = !DILocation(line: 2917, column: 5, scope: !11659)
!11752 = distinct !{!11752, !11660, !11753}
!11753 = !DILocation(line: 2947, column: 5, scope: !11654)
!11754 = !DILocation(line: 2949, column: 9, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 2949, column: 9)
!11756 = !DILocation(line: 2949, column: 14, scope: !11755)
!11757 = !DILocation(line: 2949, column: 9, scope: !11650)
!11758 = !DILocation(line: 2950, column: 6, scope: !11755)
!11759 = !DILocation(line: 2950, column: 11, scope: !11755)
!11760 = !DILocation(line: 2950, column: 36, scope: !11755)
!11761 = !DILocation(line: 2951, column: 4, scope: !11650)
!11762 = !DILocation(line: 2952, column: 3, scope: !11635)
!11763 = !DILocation(line: 2909, column: 51, scope: !11632)
!11764 = !DILocation(line: 2909, column: 56, scope: !11632)
!11765 = !DILocation(line: 2909, column: 49, scope: !11632)
!11766 = !DILocation(line: 2909, column: 3, scope: !11632)
!11767 = distinct !{!11767, !11633, !11768}
!11768 = !DILocation(line: 2952, column: 3, scope: !11626)
!11769 = !DILocation(line: 2953, column: 7, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 2953, column: 7)
!11771 = !DILocation(line: 2953, column: 17, scope: !11770)
!11772 = !DILocation(line: 2953, column: 7, scope: !11603)
!11773 = !DILocation(line: 2954, column: 21, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 2953, column: 23)
!11775 = !DILocation(line: 2954, column: 26, scope: !11774)
!11776 = !DILocation(line: 2954, column: 36, scope: !11774)
!11777 = !DILocation(line: 2954, column: 4, scope: !11774)
!11778 = !DILocation(line: 2955, column: 3, scope: !11774)
!11779 = !DILocation(line: 2956, column: 2, scope: !11603)
!11780 = !DILocation(line: 2899, column: 52, scope: !11600)
!11781 = !DILocation(line: 2899, column: 59, scope: !11600)
!11782 = !DILocation(line: 2899, column: 50, scope: !11600)
!11783 = !DILocation(line: 2899, column: 2, scope: !11600)
!11784 = distinct !{!11784, !11601, !11785}
!11785 = !DILocation(line: 2956, column: 2, scope: !11594)
!11786 = !DILocation(line: 2958, column: 18, scope: !11552)
!11787 = !DILocation(line: 2958, column: 2, scope: !11552)
!11788 = !DILocation(line: 2961, column: 2, scope: !11552)
!11789 = !DILocation(line: 2963, column: 11, scope: !11552)
!11790 = !DILocation(line: 2963, column: 9, scope: !11552)
!11791 = !DILocation(line: 2966, column: 14, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 2966, column: 2)
!11793 = !DILocation(line: 2966, column: 19, scope: !11792)
!11794 = !DILocation(line: 2966, column: 27, scope: !11792)
!11795 = !DILocation(line: 2966, column: 12, scope: !11792)
!11796 = !DILocation(line: 2966, column: 7, scope: !11792)
!11797 = !DILocation(line: 2966, column: 34, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 2966, column: 2)
!11799 = !DILocation(line: 2966, column: 2, scope: !11792)
!11800 = !DILocation(line: 2967, column: 3, scope: !11798)
!11801 = !DILocation(line: 2967, column: 9, scope: !11798)
!11802 = !DILocation(line: 2967, column: 15, scope: !11798)
!11803 = !DILocation(line: 2966, column: 47, scope: !11798)
!11804 = !DILocation(line: 2966, column: 53, scope: !11798)
!11805 = !DILocation(line: 2966, column: 45, scope: !11798)
!11806 = !DILocation(line: 2966, column: 2, scope: !11798)
!11807 = distinct !{!11807, !11799, !11808}
!11808 = !DILocation(line: 2967, column: 17, scope: !11792)
!11809 = !DILocation(line: 2969, column: 2, scope: !11552)
!11810 = !DILocation(line: 2969, column: 12, scope: !11552)
!11811 = !DILocation(line: 2969, column: 18, scope: !11552)
!11812 = !DILocation(line: 2970, column: 13, scope: !11552)
!11813 = !DILocation(line: 2970, column: 21, scope: !11552)
!11814 = !DILocation(line: 2970, column: 2, scope: !11552)
!11815 = !DILocation(line: 2972, column: 2, scope: !11552)
!11816 = !DILocation(line: 2972, column: 9, scope: !11552)
!11817 = !DILocation(line: 2972, column: 17, scope: !11552)
!11818 = !DILocation(line: 2974, column: 8, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 2972, column: 24)
!11820 = !DILocation(line: 2975, column: 29, scope: !11819)
!11821 = !DILocation(line: 2975, column: 10, scope: !11819)
!11822 = !DILocation(line: 2975, column: 8, scope: !11819)
!11823 = !DILocation(line: 2977, column: 9, scope: !11819)
!11824 = !DILocation(line: 2977, column: 15, scope: !11819)
!11825 = !DILocation(line: 2977, column: 7, scope: !11819)
!11826 = !DILocation(line: 2978, column: 3, scope: !11819)
!11827 = !DILocation(line: 2978, column: 10, scope: !11819)
!11828 = !DILocation(line: 2978, column: 14, scope: !11819)
!11829 = !DILocation(line: 2979, column: 8, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 2979, column: 8)
!11831 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 2978, column: 23)
!11832 = !DILocation(line: 2979, column: 13, scope: !11830)
!11833 = !DILocation(line: 2979, column: 19, scope: !11830)
!11834 = !DILocation(line: 2979, column: 25, scope: !11830)
!11835 = !DILocation(line: 2979, column: 8, scope: !11831)
!11836 = !DILocation(line: 2980, column: 5, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 2979, column: 39)
!11838 = !DILocation(line: 2980, column: 10, scope: !11837)
!11839 = !DILocation(line: 2980, column: 16, scope: !11837)
!11840 = !DILocation(line: 2980, column: 22, scope: !11837)
!11841 = !DILocation(line: 2981, column: 16, scope: !11837)
!11842 = !DILocation(line: 2981, column: 24, scope: !11837)
!11843 = !DILocation(line: 2981, column: 29, scope: !11837)
!11844 = !DILocation(line: 2981, column: 5, scope: !11837)
!11845 = !DILocation(line: 2982, column: 10, scope: !11837)
!11846 = !DILocation(line: 2983, column: 5, scope: !11837)
!11847 = !DILocation(line: 2985, column: 10, scope: !11831)
!11848 = !DILocation(line: 2985, column: 15, scope: !11831)
!11849 = !DILocation(line: 2985, column: 8, scope: !11831)
!11850 = distinct !{!11850, !11826, !11851}
!11851 = !DILocation(line: 2986, column: 3, scope: !11819)
!11852 = !DILocation(line: 2988, column: 8, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 2988, column: 7)
!11854 = !DILocation(line: 2988, column: 7, scope: !11819)
!11855 = !DILocation(line: 2989, column: 8, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 2989, column: 8)
!11857 = distinct !DILexicalBlock(scope: !11853, file: !3, line: 2988, column: 14)
!11858 = !DILocation(line: 2989, column: 8, scope: !11857)
!11859 = !DILocation(line: 2990, column: 22, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11856, file: !3, line: 2989, column: 14)
!11861 = !DILocation(line: 2990, column: 12, scope: !11860)
!11862 = !DILocation(line: 2990, column: 10, scope: !11860)
!11863 = !DILocation(line: 2991, column: 9, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 2991, column: 9)
!11865 = !DILocation(line: 2991, column: 15, scope: !11864)
!11866 = !DILocation(line: 2991, column: 18, scope: !11864)
!11867 = !DILocation(line: 2991, column: 9, scope: !11860)
!11868 = !DILocation(line: 2992, column: 6, scope: !11864)
!11869 = !DILocation(line: 2993, column: 5, scope: !11860)
!11870 = !DILocation(line: 2993, column: 11, scope: !11860)
!11871 = !DILocation(line: 2993, column: 17, scope: !11860)
!11872 = !DILocation(line: 2996, column: 18, scope: !11860)
!11873 = !DILocation(line: 2996, column: 24, scope: !11860)
!11874 = !DILocation(line: 2996, column: 34, scope: !11860)
!11875 = !DILocation(line: 2996, column: 40, scope: !11860)
!11876 = !DILocation(line: 2996, column: 5, scope: !11860)
!11877 = !DILocation(line: 2997, column: 28, scope: !11860)
!11878 = !DILocation(line: 2997, column: 34, scope: !11860)
!11879 = !DILocation(line: 2997, column: 5, scope: !11860)
!11880 = !DILocation(line: 2998, column: 4, scope: !11860)
!11881 = !DILocation(line: 2999, column: 3, scope: !11857)
!11882 = distinct !{!11882, !11815, !11883}
!11883 = !DILocation(line: 3000, column: 2, scope: !11552)
!11884 = !DILocation(line: 3003, column: 2, scope: !11552)
!11885 = !DILocation(line: 3003, column: 9, scope: !11552)
!11886 = !DILocation(line: 3003, column: 15, scope: !11552)
!11887 = !DILocation(line: 3003, column: 24, scope: !11552)
!11888 = !DILocation(line: 3004, column: 11, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 3003, column: 31)
!11890 = !DILocation(line: 3004, column: 17, scope: !11889)
!11891 = !DILocation(line: 3004, column: 26, scope: !11889)
!11892 = !DILocation(line: 3004, column: 9, scope: !11889)
!11893 = !DILocation(line: 3005, column: 16, scope: !11889)
!11894 = !DILocation(line: 3005, column: 22, scope: !11889)
!11895 = !DILocation(line: 3005, column: 32, scope: !11889)
!11896 = !DILocation(line: 3005, column: 3, scope: !11889)
!11897 = !DILocation(line: 3006, column: 26, scope: !11889)
!11898 = !DILocation(line: 3006, column: 3, scope: !11889)
!11899 = !DILocation(line: 3008, column: 25, scope: !11889)
!11900 = !DILocation(line: 3008, column: 32, scope: !11889)
!11901 = !DILocation(line: 3008, column: 3, scope: !11889)
!11902 = distinct !{!11902, !11884, !11903}
!11903 = !DILocation(line: 3009, column: 2, scope: !11552)
!11904 = !DILocation(line: 3011, column: 2, scope: !11552)
!11905 = !DILocation(line: 3011, column: 8, scope: !11552)
!11906 = !DILocation(line: 3011, column: 19, scope: !11552)
!11907 = !DILocation(line: 3012, column: 15, scope: !11552)
!11908 = !DILocation(line: 3012, column: 2, scope: !11552)
!11909 = !DILocation(line: 3019, column: 14, scope: !11552)
!11910 = !DILocation(line: 3019, column: 2, scope: !11552)
!11911 = !DILocation(line: 3020, column: 2, scope: !11552)
!11912 = !DILocation(line: 3020, column: 12, scope: !11552)
!11913 = !DILocation(line: 3021, column: 1, scope: !11552)
!11914 = distinct !DISubprogram(name: "dag_check_cycle", scope: !3, file: !3, line: 1221, type: !5509, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!11915 = !DILocalVariable(name: "dag", arg: 1, scope: !11914, file: !3, line: 1221, type: !5278)
!11916 = !DILocation(line: 1221, column: 40, scope: !11914)
!11917 = !DILocalVariable(name: "node", scope: !11914, file: !3, line: 1223, type: !4397)
!11918 = !DILocation(line: 1223, column: 11, scope: !11914)
!11919 = !DILocalVariable(name: "itA", scope: !11914, file: !3, line: 1224, type: !5311)
!11920 = !DILocation(line: 1224, column: 14, scope: !11914)
!11921 = !DILocation(line: 1226, column: 2, scope: !11914)
!11922 = !DILocation(line: 1226, column: 7, scope: !11914)
!11923 = !DILocation(line: 1226, column: 18, scope: !11914)
!11924 = !DILocation(line: 1229, column: 6, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1229, column: 6)
!11926 = !DILocation(line: 1229, column: 6, scope: !11914)
!11927 = !DILocation(line: 1230, column: 15, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 1230, column: 3)
!11929 = !DILocation(line: 1230, column: 20, scope: !11928)
!11930 = !DILocation(line: 1230, column: 28, scope: !11928)
!11931 = !DILocation(line: 1230, column: 13, scope: !11928)
!11932 = !DILocation(line: 1230, column: 8, scope: !11928)
!11933 = !DILocation(line: 1230, column: 35, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 1230, column: 3)
!11935 = !DILocation(line: 1230, column: 3, scope: !11928)
!11936 = !DILocation(line: 1231, column: 32, scope: !11934)
!11937 = !DILocation(line: 1231, column: 37, scope: !11934)
!11938 = !DILocation(line: 1231, column: 4, scope: !11934)
!11939 = !DILocation(line: 1230, column: 48, scope: !11934)
!11940 = !DILocation(line: 1230, column: 54, scope: !11934)
!11941 = !DILocation(line: 1230, column: 46, scope: !11934)
!11942 = !DILocation(line: 1230, column: 3, scope: !11934)
!11943 = distinct !{!11943, !11935, !11944}
!11944 = !DILocation(line: 1231, column: 41, scope: !11928)
!11945 = !DILocation(line: 1234, column: 14, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1234, column: 2)
!11947 = !DILocation(line: 1234, column: 19, scope: !11946)
!11948 = !DILocation(line: 1234, column: 27, scope: !11946)
!11949 = !DILocation(line: 1234, column: 12, scope: !11946)
!11950 = !DILocation(line: 1234, column: 7, scope: !11946)
!11951 = !DILocation(line: 1234, column: 34, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 1234, column: 2)
!11953 = !DILocation(line: 1234, column: 2, scope: !11946)
!11954 = !DILocation(line: 1235, column: 3, scope: !11952)
!11955 = !DILocation(line: 1235, column: 9, scope: !11952)
!11956 = !DILocation(line: 1235, column: 15, scope: !11952)
!11957 = !DILocation(line: 1234, column: 47, scope: !11952)
!11958 = !DILocation(line: 1234, column: 53, scope: !11952)
!11959 = !DILocation(line: 1234, column: 45, scope: !11952)
!11960 = !DILocation(line: 1234, column: 2, scope: !11952)
!11961 = distinct !{!11961, !11953, !11962}
!11962 = !DILocation(line: 1235, column: 17, scope: !11946)
!11963 = !DILocation(line: 1237, column: 14, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1237, column: 2)
!11965 = !DILocation(line: 1237, column: 19, scope: !11964)
!11966 = !DILocation(line: 1237, column: 27, scope: !11964)
!11967 = !DILocation(line: 1237, column: 12, scope: !11964)
!11968 = !DILocation(line: 1237, column: 7, scope: !11964)
!11969 = !DILocation(line: 1237, column: 34, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 1237, column: 2)
!11971 = !DILocation(line: 1237, column: 2, scope: !11964)
!11972 = !DILocation(line: 1238, column: 7, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !3, line: 1238, column: 7)
!11974 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 1237, column: 59)
!11975 = !DILocation(line: 1238, column: 13, scope: !11973)
!11976 = !DILocation(line: 1238, column: 19, scope: !11973)
!11977 = !DILocation(line: 1238, column: 7, scope: !11974)
!11978 = !DILocation(line: 1239, column: 49, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 1238, column: 33)
!11980 = !DILocation(line: 1239, column: 27, scope: !11979)
!11981 = !DILocation(line: 1239, column: 4, scope: !11979)
!11982 = !DILocation(line: 1239, column: 10, scope: !11979)
!11983 = !DILocation(line: 1239, column: 25, scope: !11979)
!11984 = !DILocation(line: 1240, column: 3, scope: !11979)
!11985 = !DILocation(line: 1241, column: 2, scope: !11974)
!11986 = !DILocation(line: 1237, column: 47, scope: !11970)
!11987 = !DILocation(line: 1237, column: 53, scope: !11970)
!11988 = !DILocation(line: 1237, column: 45, scope: !11970)
!11989 = !DILocation(line: 1237, column: 2, scope: !11970)
!11990 = distinct !{!11990, !11971, !11991}
!11991 = !DILocation(line: 1241, column: 2, scope: !11964)
!11992 = !DILocation(line: 1244, column: 14, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1244, column: 2)
!11994 = !DILocation(line: 1244, column: 19, scope: !11993)
!11995 = !DILocation(line: 1244, column: 27, scope: !11993)
!11996 = !DILocation(line: 1244, column: 12, scope: !11993)
!11997 = !DILocation(line: 1244, column: 7, scope: !11993)
!11998 = !DILocation(line: 1244, column: 34, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 1244, column: 2)
!12000 = !DILocation(line: 1244, column: 2, scope: !11993)
!12001 = !DILocation(line: 1245, column: 14, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 1245, column: 3)
!12003 = distinct !DILexicalBlock(scope: !11999, file: !3, line: 1244, column: 59)
!12004 = !DILocation(line: 1245, column: 20, scope: !12002)
!12005 = !DILocation(line: 1245, column: 12, scope: !12002)
!12006 = !DILocation(line: 1245, column: 8, scope: !12002)
!12007 = !DILocation(line: 1245, column: 28, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 1245, column: 3)
!12009 = !DILocation(line: 1245, column: 3, scope: !12002)
!12010 = !DILocation(line: 1246, column: 8, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 1246, column: 8)
!12012 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1245, column: 50)
!12013 = !DILocation(line: 1246, column: 13, scope: !12011)
!12014 = !DILocation(line: 1246, column: 19, scope: !12011)
!12015 = !DILocation(line: 1246, column: 36, scope: !12011)
!12016 = !DILocation(line: 1246, column: 42, scope: !12011)
!12017 = !DILocation(line: 1246, column: 34, scope: !12011)
!12018 = !DILocation(line: 1246, column: 8, scope: !12012)
!12019 = !DILocation(line: 1247, column: 9, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 1247, column: 9)
!12021 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 1246, column: 58)
!12022 = !DILocation(line: 1247, column: 15, scope: !12020)
!12023 = !DILocation(line: 1247, column: 18, scope: !12020)
!12024 = !DILocation(line: 1247, column: 21, scope: !12020)
!12025 = !DILocation(line: 1247, column: 26, scope: !12020)
!12026 = !DILocation(line: 1247, column: 32, scope: !12020)
!12027 = !DILocation(line: 1247, column: 9, scope: !12021)
!12028 = !DILocation(line: 1248, column: 6, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 1247, column: 36)
!12030 = !DILocation(line: 1248, column: 11, scope: !12029)
!12031 = !DILocation(line: 1248, column: 22, scope: !12029)
!12032 = !DILocation(line: 1249, column: 6, scope: !12029)
!12033 = !DILocation(line: 1250, column: 38, scope: !12029)
!12034 = !DILocation(line: 1250, column: 43, scope: !12029)
!12035 = !DILocation(line: 1250, column: 48, scope: !12029)
!12036 = !DILocation(line: 1250, column: 54, scope: !12029)
!12037 = !DILocation(line: 1250, column: 60, scope: !12029)
!12038 = !DILocation(line: 1250, column: 65, scope: !12029)
!12039 = !DILocation(line: 1250, column: 6, scope: !12029)
!12040 = !DILocation(line: 1251, column: 5, scope: !12029)
!12041 = !DILocation(line: 1252, column: 4, scope: !12021)
!12042 = !DILocation(line: 1253, column: 3, scope: !12012)
!12043 = !DILocation(line: 1245, column: 39, scope: !12008)
!12044 = !DILocation(line: 1245, column: 44, scope: !12008)
!12045 = !DILocation(line: 1245, column: 37, scope: !12008)
!12046 = !DILocation(line: 1245, column: 3, scope: !12008)
!12047 = distinct !{!12047, !12009, !12048}
!12048 = !DILocation(line: 1253, column: 3, scope: !12002)
!12049 = !DILocation(line: 1254, column: 2, scope: !12003)
!12050 = !DILocation(line: 1244, column: 47, scope: !11999)
!12051 = !DILocation(line: 1244, column: 53, scope: !11999)
!12052 = !DILocation(line: 1244, column: 45, scope: !11999)
!12053 = !DILocation(line: 1244, column: 2, scope: !11999)
!12054 = distinct !{!12054, !12000, !12055}
!12055 = !DILocation(line: 1254, column: 2, scope: !11993)
!12056 = !DILocation(line: 1257, column: 14, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1257, column: 2)
!12058 = !DILocation(line: 1257, column: 19, scope: !12057)
!12059 = !DILocation(line: 1257, column: 27, scope: !12057)
!12060 = !DILocation(line: 1257, column: 12, scope: !12057)
!12061 = !DILocation(line: 1257, column: 7, scope: !12057)
!12062 = !DILocation(line: 1257, column: 34, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 1257, column: 2)
!12064 = !DILocation(line: 1257, column: 2, scope: !12057)
!12065 = !DILocation(line: 1258, column: 3, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1257, column: 59)
!12067 = !DILocation(line: 1258, column: 10, scope: !12066)
!12068 = !DILocation(line: 1258, column: 16, scope: !12066)
!12069 = !DILocation(line: 1259, column: 10, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12066, file: !3, line: 1258, column: 24)
!12071 = !DILocation(line: 1259, column: 16, scope: !12070)
!12072 = !DILocation(line: 1259, column: 24, scope: !12070)
!12073 = !DILocation(line: 1259, column: 8, scope: !12070)
!12074 = !DILocation(line: 1260, column: 4, scope: !12070)
!12075 = !DILocation(line: 1260, column: 14, scope: !12070)
!12076 = !DILocation(line: 1260, column: 20, scope: !12070)
!12077 = !DILocation(line: 1261, column: 19, scope: !12070)
!12078 = !DILocation(line: 1261, column: 4, scope: !12070)
!12079 = !DILocation(line: 1261, column: 10, scope: !12070)
!12080 = !DILocation(line: 1261, column: 17, scope: !12070)
!12081 = distinct !{!12081, !12065, !12082}
!12082 = !DILocation(line: 1262, column: 3, scope: !12066)
!12083 = !DILocation(line: 1263, column: 2, scope: !12066)
!12084 = !DILocation(line: 1257, column: 47, scope: !12063)
!12085 = !DILocation(line: 1257, column: 53, scope: !12063)
!12086 = !DILocation(line: 1257, column: 45, scope: !12063)
!12087 = !DILocation(line: 1257, column: 2, scope: !12063)
!12088 = distinct !{!12088, !12064, !12089}
!12089 = !DILocation(line: 1263, column: 2, scope: !12057)
!12090 = !DILocation(line: 1264, column: 1, scope: !11914)
!12091 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !10347, file: !10347, line: 89, type: !12092, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12092 = !DISubroutineType(types: !12093)
!12093 = !{null, !3601}
!12094 = !DILocalVariable(name: "lb", arg: 1, scope: !12091, file: !10347, line: 89, type: !3601)
!12095 = !DILocation(line: 89, column: 53, scope: !12091)
!12096 = !DILocation(line: 89, column: 71, scope: !12091)
!12097 = !DILocation(line: 89, column: 75, scope: !12091)
!12098 = !DILocation(line: 89, column: 80, scope: !12091)
!12099 = !DILocation(line: 89, column: 59, scope: !12091)
!12100 = !DILocation(line: 89, column: 63, scope: !12091)
!12101 = !DILocation(line: 89, column: 69, scope: !12091)
!12102 = !DILocation(line: 89, column: 93, scope: !12091)
!12103 = distinct !DISubprogram(name: "DAG_threaded_update_begin", scope: !3, file: !3, line: 3034, type: !12104, scopeLine: 3037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12104 = !DISubroutineType(types: !12105)
!12105 = !{null, !4663, !12106, !348}
!12106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12107, size: 64)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{null, !348, !348}
!12109 = !DILocalVariable(name: "scene", arg: 1, scope: !12103, file: !3, line: 3034, type: !4663)
!12110 = !DILocation(line: 3034, column: 39, scope: !12103)
!12111 = !DILocalVariable(name: "func", arg: 2, scope: !12103, file: !3, line: 3035, type: !12106)
!12112 = !DILocation(line: 3035, column: 39, scope: !12103)
!12113 = !DILocalVariable(name: "user_data", arg: 3, scope: !12103, file: !3, line: 3036, type: !348)
!12114 = !DILocation(line: 3036, column: 38, scope: !12103)
!12115 = !DILocalVariable(name: "node", scope: !12103, file: !3, line: 3038, type: !4397)
!12116 = !DILocation(line: 3038, column: 11, scope: !12103)
!12117 = !DILocation(line: 3041, column: 14, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 3041, column: 2)
!12119 = !DILocation(line: 3041, column: 21, scope: !12118)
!12120 = !DILocation(line: 3041, column: 29, scope: !12118)
!12121 = !DILocation(line: 3041, column: 37, scope: !12118)
!12122 = !DILocation(line: 3041, column: 12, scope: !12118)
!12123 = !DILocation(line: 3041, column: 7, scope: !12118)
!12124 = !DILocation(line: 3041, column: 44, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 3041, column: 2)
!12126 = !DILocation(line: 3041, column: 2, scope: !12118)
!12127 = !DILocation(line: 3042, column: 3, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 3041, column: 69)
!12129 = !DILocation(line: 3042, column: 9, scope: !12128)
!12130 = !DILocation(line: 3042, column: 29, scope: !12128)
!12131 = !DILocation(line: 3043, column: 3, scope: !12128)
!12132 = !DILocation(line: 3043, column: 9, scope: !12128)
!12133 = !DILocation(line: 3043, column: 19, scope: !12128)
!12134 = !DILocation(line: 3044, column: 2, scope: !12128)
!12135 = !DILocation(line: 3041, column: 57, scope: !12125)
!12136 = !DILocation(line: 3041, column: 63, scope: !12125)
!12137 = !DILocation(line: 3041, column: 55, scope: !12125)
!12138 = !DILocation(line: 3041, column: 2, scope: !12125)
!12139 = distinct !{!12139, !12126, !12140}
!12140 = !DILocation(line: 3044, column: 2, scope: !12118)
!12141 = !DILocation(line: 3049, column: 14, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 3049, column: 2)
!12143 = !DILocation(line: 3049, column: 21, scope: !12142)
!12144 = !DILocation(line: 3049, column: 29, scope: !12142)
!12145 = !DILocation(line: 3049, column: 37, scope: !12142)
!12146 = !DILocation(line: 3049, column: 12, scope: !12142)
!12147 = !DILocation(line: 3049, column: 7, scope: !12142)
!12148 = !DILocation(line: 3049, column: 44, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 3049, column: 2)
!12150 = !DILocation(line: 3049, column: 2, scope: !12142)
!12151 = !DILocalVariable(name: "itA", scope: !12152, file: !3, line: 3050, type: !5311)
!12152 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 3049, column: 69)
!12153 = !DILocation(line: 3050, column: 15, scope: !12152)
!12154 = !DILocation(line: 3052, column: 14, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 3052, column: 3)
!12156 = !DILocation(line: 3052, column: 20, scope: !12155)
!12157 = !DILocation(line: 3052, column: 12, scope: !12155)
!12158 = !DILocation(line: 3052, column: 8, scope: !12155)
!12159 = !DILocation(line: 3052, column: 27, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 3052, column: 3)
!12161 = !DILocation(line: 3052, column: 3, scope: !12155)
!12162 = !DILocation(line: 3053, column: 8, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 3053, column: 8)
!12164 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 3052, column: 49)
!12165 = !DILocation(line: 3053, column: 13, scope: !12163)
!12166 = !DILocation(line: 3053, column: 21, scope: !12163)
!12167 = !DILocation(line: 3053, column: 18, scope: !12163)
!12168 = !DILocation(line: 3053, column: 8, scope: !12164)
!12169 = !DILocation(line: 3054, column: 5, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 3053, column: 27)
!12171 = !DILocation(line: 3054, column: 10, scope: !12170)
!12172 = !DILocation(line: 3054, column: 16, scope: !12170)
!12173 = !DILocation(line: 3054, column: 35, scope: !12170)
!12174 = !DILocation(line: 3055, column: 4, scope: !12170)
!12175 = !DILocation(line: 3056, column: 3, scope: !12164)
!12176 = !DILocation(line: 3052, column: 38, scope: !12160)
!12177 = !DILocation(line: 3052, column: 43, scope: !12160)
!12178 = !DILocation(line: 3052, column: 36, scope: !12160)
!12179 = !DILocation(line: 3052, column: 3, scope: !12160)
!12180 = distinct !{!12180, !12161, !12181}
!12181 = !DILocation(line: 3056, column: 3, scope: !12155)
!12182 = !DILocation(line: 3057, column: 2, scope: !12152)
!12183 = !DILocation(line: 3049, column: 57, scope: !12149)
!12184 = !DILocation(line: 3049, column: 63, scope: !12149)
!12185 = !DILocation(line: 3049, column: 55, scope: !12149)
!12186 = !DILocation(line: 3049, column: 2, scope: !12149)
!12187 = distinct !{!12187, !12150, !12188}
!12188 = !DILocation(line: 3057, column: 2, scope: !12142)
!12189 = !DILocation(line: 3060, column: 2, scope: !12103)
!12190 = !DILocation(line: 3061, column: 14, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 3061, column: 2)
!12192 = !DILocation(line: 3061, column: 21, scope: !12191)
!12193 = !DILocation(line: 3061, column: 29, scope: !12191)
!12194 = !DILocation(line: 3061, column: 37, scope: !12191)
!12195 = !DILocation(line: 3061, column: 12, scope: !12191)
!12196 = !DILocation(line: 3061, column: 7, scope: !12191)
!12197 = !DILocation(line: 3061, column: 44, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 3061, column: 2)
!12199 = !DILocation(line: 3061, column: 2, scope: !12191)
!12200 = !DILocation(line: 3062, column: 7, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 3062, column: 7)
!12202 = distinct !DILexicalBlock(scope: !12198, file: !3, line: 3061, column: 69)
!12203 = !DILocation(line: 3062, column: 13, scope: !12201)
!12204 = !DILocation(line: 3062, column: 33, scope: !12201)
!12205 = !DILocation(line: 3062, column: 7, scope: !12202)
!12206 = !DILocation(line: 3063, column: 4, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 3062, column: 39)
!12208 = !DILocation(line: 3063, column: 10, scope: !12207)
!12209 = !DILocation(line: 3063, column: 20, scope: !12207)
!12210 = !DILocation(line: 3064, column: 4, scope: !12207)
!12211 = !DILocation(line: 3064, column: 9, scope: !12207)
!12212 = !DILocation(line: 3064, column: 15, scope: !12207)
!12213 = !DILocation(line: 3065, column: 3, scope: !12207)
!12214 = !DILocation(line: 3066, column: 2, scope: !12202)
!12215 = !DILocation(line: 3061, column: 57, scope: !12198)
!12216 = !DILocation(line: 3061, column: 63, scope: !12198)
!12217 = !DILocation(line: 3061, column: 55, scope: !12198)
!12218 = !DILocation(line: 3061, column: 2, scope: !12198)
!12219 = distinct !{!12219, !12199, !12220}
!12220 = !DILocation(line: 3066, column: 2, scope: !12191)
!12221 = !DILocation(line: 3067, column: 2, scope: !12103)
!12222 = !DILocation(line: 3068, column: 1, scope: !12103)
!12223 = distinct !DISubprogram(name: "DAG_threaded_update_handle_node_updated", scope: !3, file: !3, line: 3075, type: !12224, scopeLine: 3078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{null, !348, !12106, !348}
!12226 = !DILocalVariable(name: "p", arg: 1, scope: !12227, file: !12228, line: 366, type: !12231)
!12227 = distinct !DISubprogram(name: "atomic_sub_uint32", scope: !12228, file: !12228, line: 366, type: !12229, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12228 = !DIFile(filename: "blender/intern/atomic/atomic_ops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!4431, !12231, !4431}
!12231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!12232 = !DILocation(line: 366, column: 29, scope: !12227, inlinedAt: !12233)
!12233 = distinct !DILocation(line: 3085, column: 4, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !3, line: 3084, column: 27)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 3084, column: 7)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 3082, column: 48)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 3082, column: 2)
!12238 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 3082, column: 2)
!12239 = !DILocalVariable(name: "x", arg: 2, scope: !12227, file: !12228, line: 366, type: !4431)
!12240 = !DILocation(line: 366, column: 41, scope: !12227, inlinedAt: !12233)
!12241 = !DILocalVariable(name: "node_v", arg: 1, scope: !12223, file: !3, line: 3075, type: !348)
!12242 = !DILocation(line: 3075, column: 52, scope: !12223)
!12243 = !DILocalVariable(name: "func", arg: 2, scope: !12223, file: !3, line: 3076, type: !12106)
!12244 = !DILocation(line: 3076, column: 53, scope: !12223)
!12245 = !DILocalVariable(name: "user_data", arg: 3, scope: !12223, file: !3, line: 3077, type: !348)
!12246 = !DILocation(line: 3077, column: 52, scope: !12223)
!12247 = !DILocalVariable(name: "node", scope: !12223, file: !3, line: 3079, type: !4397)
!12248 = !DILocation(line: 3079, column: 11, scope: !12223)
!12249 = !DILocation(line: 3079, column: 18, scope: !12223)
!12250 = !DILocalVariable(name: "itA", scope: !12223, file: !3, line: 3080, type: !5311)
!12251 = !DILocation(line: 3080, column: 14, scope: !12223)
!12252 = !DILocation(line: 3082, column: 13, scope: !12238)
!12253 = !DILocation(line: 3082, column: 19, scope: !12238)
!12254 = !DILocation(line: 3082, column: 11, scope: !12238)
!12255 = !DILocation(line: 3082, column: 7, scope: !12238)
!12256 = !DILocation(line: 3082, column: 26, scope: !12237)
!12257 = !DILocation(line: 3082, column: 2, scope: !12238)
!12258 = !DILocalVariable(name: "child_node", scope: !12236, file: !3, line: 3083, type: !4397)
!12259 = !DILocation(line: 3083, column: 12, scope: !12236)
!12260 = !DILocation(line: 3083, column: 25, scope: !12236)
!12261 = !DILocation(line: 3083, column: 30, scope: !12236)
!12262 = !DILocation(line: 3084, column: 7, scope: !12235)
!12263 = !DILocation(line: 3084, column: 21, scope: !12235)
!12264 = !DILocation(line: 3084, column: 18, scope: !12235)
!12265 = !DILocation(line: 3084, column: 7, scope: !12236)
!12266 = !DILocation(line: 3085, column: 23, scope: !12234)
!12267 = !DILocation(line: 3085, column: 35, scope: !12234)
!12268 = !DILocation(line: 368, column: 14, scope: !12227, inlinedAt: !12233)
!12269 = !DILocation(line: 368, column: 13, scope: !12227, inlinedAt: !12233)
!12270 = !DILocation(line: 368, column: 18, scope: !12227, inlinedAt: !12233)
!12271 = !DILocation(line: 368, column: 16, scope: !12227, inlinedAt: !12233)
!12272 = !DILocation(line: 368, column: 9, scope: !12227, inlinedAt: !12233)
!12273 = !DILocation(line: 368, column: 11, scope: !12227, inlinedAt: !12233)
!12274 = !DILocation(line: 369, column: 17, scope: !12227, inlinedAt: !12233)
!12275 = !DILocation(line: 369, column: 16, scope: !12227, inlinedAt: !12233)
!12276 = !DILocation(line: 3087, column: 8, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 3087, column: 8)
!12278 = !DILocation(line: 3087, column: 20, scope: !12277)
!12279 = !DILocation(line: 3087, column: 40, scope: !12277)
!12280 = !DILocation(line: 3087, column: 8, scope: !12234)
!12281 = !DILocalVariable(name: "need_schedule", scope: !12282, file: !3, line: 3088, type: !1940)
!12282 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 3087, column: 46)
!12283 = !DILocation(line: 3088, column: 10, scope: !12282)
!12284 = !DILocation(line: 3090, column: 5, scope: !12282)
!12285 = !DILocation(line: 3091, column: 21, scope: !12282)
!12286 = !DILocation(line: 3091, column: 33, scope: !12282)
!12287 = !DILocation(line: 3091, column: 43, scope: !12282)
!12288 = !DILocation(line: 3091, column: 19, scope: !12282)
!12289 = !DILocation(line: 3092, column: 5, scope: !12282)
!12290 = !DILocation(line: 3092, column: 17, scope: !12282)
!12291 = !DILocation(line: 3092, column: 27, scope: !12282)
!12292 = !DILocation(line: 3093, column: 5, scope: !12282)
!12293 = !DILocation(line: 3095, column: 9, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12282, file: !3, line: 3095, column: 9)
!12295 = !DILocation(line: 3095, column: 9, scope: !12282)
!12296 = !DILocation(line: 3096, column: 6, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 3095, column: 24)
!12298 = !DILocation(line: 3096, column: 11, scope: !12297)
!12299 = !DILocation(line: 3096, column: 23, scope: !12297)
!12300 = !DILocation(line: 3097, column: 5, scope: !12297)
!12301 = !DILocation(line: 3098, column: 4, scope: !12282)
!12302 = !DILocation(line: 3099, column: 3, scope: !12234)
!12303 = !DILocation(line: 3100, column: 2, scope: !12236)
!12304 = !DILocation(line: 3082, column: 37, scope: !12237)
!12305 = !DILocation(line: 3082, column: 42, scope: !12237)
!12306 = !DILocation(line: 3082, column: 35, scope: !12237)
!12307 = !DILocation(line: 3082, column: 2, scope: !12237)
!12308 = distinct !{!12308, !12257, !12309}
!12309 = !DILocation(line: 3100, column: 2, scope: !12238)
!12310 = !DILocation(line: 3101, column: 1, scope: !12223)
!12311 = distinct !DISubprogram(name: "DAG_print_dependencies", scope: !3, file: !3, line: 3105, type: !9118, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12312 = !DILocalVariable(name: "bmain", arg: 1, scope: !12311, file: !3, line: 3105, type: !4595)
!12313 = !DILocation(line: 3105, column: 35, scope: !12311)
!12314 = !DILocalVariable(name: "scene", arg: 2, scope: !12311, file: !3, line: 3105, type: !4663)
!12315 = !DILocation(line: 3105, column: 49, scope: !12311)
!12316 = !DILocalVariable(name: "ob", arg: 3, scope: !12311, file: !3, line: 3105, type: !349)
!12317 = !DILocation(line: 3105, column: 64, scope: !12311)
!12318 = !DILocation(line: 3108, column: 25, scope: !12311)
!12319 = !DILocation(line: 3110, column: 6, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 3110, column: 6)
!12321 = !DILocation(line: 3110, column: 9, scope: !12320)
!12322 = !DILocation(line: 3110, column: 13, scope: !12320)
!12323 = !DILocation(line: 3110, column: 17, scope: !12320)
!12324 = !DILocation(line: 3110, column: 22, scope: !12320)
!12325 = !DILocation(line: 3110, column: 6, scope: !12311)
!12326 = !DILocation(line: 3111, column: 47, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 3110, column: 39)
!12328 = !DILocation(line: 3111, column: 51, scope: !12327)
!12329 = !DILocation(line: 3111, column: 54, scope: !12327)
!12330 = !DILocation(line: 3111, column: 59, scope: !12327)
!12331 = !DILocation(line: 3111, column: 3, scope: !12327)
!12332 = !DILocation(line: 3112, column: 17, scope: !12327)
!12333 = !DILocation(line: 3112, column: 3, scope: !12327)
!12334 = !DILocation(line: 3113, column: 2, scope: !12327)
!12335 = !DILocation(line: 3115, column: 47, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 3114, column: 7)
!12337 = !DILocation(line: 3115, column: 54, scope: !12336)
!12338 = !DILocation(line: 3115, column: 57, scope: !12336)
!12339 = !DILocation(line: 3115, column: 62, scope: !12336)
!12340 = !DILocation(line: 3115, column: 3, scope: !12336)
!12341 = !DILocation(line: 3116, column: 31, scope: !12336)
!12342 = !DILocation(line: 3116, column: 38, scope: !12336)
!12343 = !DILocation(line: 3116, column: 3, scope: !12336)
!12344 = !DILocation(line: 3119, column: 25, scope: !12311)
!12345 = !DILocation(line: 3120, column: 1, scope: !12311)
!12346 = distinct !DISubprogram(name: "DAG_get_node_object", scope: !3, file: !3, line: 3127, type: !12347, scopeLine: 3128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12347 = !DISubroutineType(types: !12348)
!12348 = !{!522, !348}
!12349 = !DILocalVariable(name: "node_v", arg: 1, scope: !12346, file: !3, line: 3127, type: !348)
!12350 = !DILocation(line: 3127, column: 35, scope: !12346)
!12351 = !DILocalVariable(name: "node", scope: !12346, file: !3, line: 3129, type: !4397)
!12352 = !DILocation(line: 3129, column: 11, scope: !12346)
!12353 = !DILocation(line: 3129, column: 18, scope: !12346)
!12354 = !DILocation(line: 3131, column: 6, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3131, column: 6)
!12356 = !DILocation(line: 3131, column: 12, scope: !12355)
!12357 = !DILocation(line: 3131, column: 17, scope: !12355)
!12358 = !DILocation(line: 3131, column: 6, scope: !12346)
!12359 = !DILocation(line: 3132, column: 10, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 3131, column: 27)
!12361 = !DILocation(line: 3132, column: 16, scope: !12360)
!12362 = !DILocation(line: 3132, column: 3, scope: !12360)
!12363 = !DILocation(line: 3135, column: 2, scope: !12346)
!12364 = !DILocation(line: 3136, column: 1, scope: !12346)
!12365 = distinct !DISubprogram(name: "DAG_get_node_name", scope: !3, file: !3, line: 3139, type: !12366, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!799, !4663, !348}
!12368 = !DILocalVariable(name: "scene", arg: 1, scope: !12365, file: !3, line: 3139, type: !4663)
!12369 = !DILocation(line: 3139, column: 38, scope: !12365)
!12370 = !DILocalVariable(name: "node_v", arg: 2, scope: !12365, file: !3, line: 3139, type: !348)
!12371 = !DILocation(line: 3139, column: 51, scope: !12365)
!12372 = !DILocalVariable(name: "node", scope: !12365, file: !3, line: 3141, type: !4397)
!12373 = !DILocation(line: 3141, column: 11, scope: !12365)
!12374 = !DILocation(line: 3141, column: 18, scope: !12365)
!12375 = !DILocation(line: 3143, column: 23, scope: !12365)
!12376 = !DILocation(line: 3143, column: 30, scope: !12365)
!12377 = !DILocation(line: 3143, column: 38, scope: !12365)
!12378 = !DILocation(line: 3143, column: 9, scope: !12365)
!12379 = !DILocation(line: 3143, column: 2, scope: !12365)
!12380 = distinct !DISubprogram(name: "dag_node_name", scope: !3, file: !3, line: 1146, type: !12381, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12381 = !DISubroutineType(types: !12382)
!12382 = !{!799, !5278, !4397}
!12383 = !DILocalVariable(name: "dag", arg: 1, scope: !12380, file: !3, line: 1146, type: !5278)
!12384 = !DILocation(line: 1146, column: 45, scope: !12380)
!12385 = !DILocalVariable(name: "node", arg: 2, scope: !12380, file: !3, line: 1146, type: !4397)
!12386 = !DILocation(line: 1146, column: 59, scope: !12380)
!12387 = !DILocation(line: 1148, column: 6, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 1148, column: 6)
!12389 = !DILocation(line: 1148, column: 12, scope: !12388)
!12390 = !DILocation(line: 1148, column: 15, scope: !12388)
!12391 = !DILocation(line: 1148, column: 6, scope: !12380)
!12392 = !DILocation(line: 1149, column: 3, scope: !12388)
!12393 = !DILocation(line: 1150, column: 11, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 1150, column: 11)
!12395 = !DILocation(line: 1150, column: 16, scope: !12394)
!12396 = !DILocation(line: 1150, column: 11, scope: !12388)
!12397 = !DILocation(line: 1151, column: 18, scope: !12394)
!12398 = !DILocation(line: 1151, column: 24, scope: !12394)
!12399 = !DILocation(line: 1151, column: 11, scope: !12394)
!12400 = !DILocation(line: 1151, column: 30, scope: !12394)
!12401 = !DILocation(line: 1151, column: 10, scope: !12394)
!12402 = !DILocation(line: 1151, column: 35, scope: !12394)
!12403 = !DILocation(line: 1151, column: 3, scope: !12394)
!12404 = !DILocation(line: 1153, column: 28, scope: !12394)
!12405 = !DILocation(line: 1153, column: 34, scope: !12394)
!12406 = !DILocation(line: 1153, column: 11, scope: !12394)
!12407 = !DILocation(line: 1153, column: 40, scope: !12394)
!12408 = !DILocation(line: 1153, column: 10, scope: !12394)
!12409 = !DILocation(line: 1153, column: 3, scope: !12394)
!12410 = !DILocation(line: 1154, column: 1, scope: !12380)
!12411 = distinct !DISubprogram(name: "DAG_get_eval_flags_for_object", scope: !3, file: !3, line: 3146, type: !12412, scopeLine: 3147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!387, !4663, !348}
!12414 = !DILocalVariable(name: "scene", arg: 1, scope: !12411, file: !3, line: 3146, type: !4663)
!12415 = !DILocation(line: 3146, column: 44, scope: !12411)
!12416 = !DILocalVariable(name: "object", arg: 2, scope: !12411, file: !3, line: 3146, type: !348)
!12417 = !DILocation(line: 3146, column: 57, scope: !12411)
!12418 = !DILocalVariable(name: "node", scope: !12411, file: !3, line: 3148, type: !4397)
!12419 = !DILocation(line: 3148, column: 11, scope: !12411)
!12420 = !DILocation(line: 3150, column: 6, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 3150, column: 6)
!12422 = !DILocation(line: 3150, column: 13, scope: !12421)
!12423 = !DILocation(line: 3150, column: 20, scope: !12421)
!12424 = !DILocation(line: 3150, column: 6, scope: !12411)
!12425 = !DILocation(line: 3157, column: 3, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 3150, column: 29)
!12427 = !DILocation(line: 3160, column: 23, scope: !12411)
!12428 = !DILocation(line: 3160, column: 30, scope: !12411)
!12429 = !DILocation(line: 3160, column: 38, scope: !12411)
!12430 = !DILocation(line: 3160, column: 9, scope: !12411)
!12431 = !DILocation(line: 3160, column: 7, scope: !12411)
!12432 = !DILocation(line: 3162, column: 6, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 3162, column: 6)
!12434 = !DILocation(line: 3162, column: 6, scope: !12411)
!12435 = !DILocation(line: 3163, column: 10, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 3162, column: 12)
!12437 = !DILocation(line: 3163, column: 16, scope: !12436)
!12438 = !DILocation(line: 3163, column: 3, scope: !12436)
!12439 = !DILocation(line: 3177, column: 7, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 3177, column: 7)
!12441 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 3165, column: 7)
!12442 = !DILocation(line: 3177, column: 14, scope: !12440)
!12443 = !DILocation(line: 3177, column: 7, scope: !12441)
!12444 = !DILocation(line: 3178, column: 41, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 3177, column: 19)
!12446 = !DILocation(line: 3178, column: 48, scope: !12445)
!12447 = !DILocation(line: 3178, column: 53, scope: !12445)
!12448 = !DILocation(line: 3178, column: 11, scope: !12445)
!12449 = !DILocation(line: 3178, column: 4, scope: !12445)
!12450 = !DILocation(line: 3180, column: 3, scope: !12441)
!12451 = !DILocation(line: 3182, column: 1, scope: !12411)
!12452 = distinct !DISubprogram(name: "DAG_is_acyclic", scope: !3, file: !3, line: 3184, type: !12453, scopeLine: 3185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!1940, !4663}
!12455 = !DILocalVariable(name: "scene", arg: 1, scope: !12452, file: !3, line: 3184, type: !4663)
!12456 = !DILocation(line: 3184, column: 28, scope: !12452)
!12457 = !DILocation(line: 3186, column: 9, scope: !12452)
!12458 = !DILocation(line: 3186, column: 16, scope: !12452)
!12459 = !DILocation(line: 3186, column: 24, scope: !12452)
!12460 = !DILocation(line: 3186, column: 2, scope: !12452)
!12461 = distinct !DISubprogram(name: "dag_add_driver_relation", scope: !3, file: !3, line: 318, type: !12462, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12462 = !DISubroutineType(types: !12463)
!12463 = !{null, !6459, !5278, !4397, !389}
!12464 = !DILocalVariable(name: "adt", arg: 1, scope: !12461, file: !3, line: 318, type: !6459)
!12465 = !DILocation(line: 318, column: 47, scope: !12461)
!12466 = !DILocalVariable(name: "dag", arg: 2, scope: !12461, file: !3, line: 318, type: !5278)
!12467 = !DILocation(line: 318, column: 63, scope: !12461)
!12468 = !DILocalVariable(name: "node", arg: 3, scope: !12461, file: !3, line: 318, type: !4397)
!12469 = !DILocation(line: 318, column: 77, scope: !12461)
!12470 = !DILocalVariable(name: "isdata", arg: 4, scope: !12461, file: !3, line: 318, type: !389)
!12471 = !DILocation(line: 318, column: 87, scope: !12461)
!12472 = !DILocalVariable(name: "fcu", scope: !12461, file: !3, line: 320, type: !12473)
!12473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12474, size: 64)
!12474 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !311, line: 463, baseType: !12475)
!12475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !311, line: 433, size: 896, elements: !12476)
!12476 = !{!12477, !12479, !12480, !12502, !12514, !12515, !12517, !12525, !12526, !12527, !12528, !12529, !12530, !12531, !12532, !12533, !12534}
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12475, file: !311, line: 434, baseType: !12478, size: 64)
!12478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12475, size: 64)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12475, file: !311, line: 434, baseType: !12478, size: 64, offset: 64)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !12475, file: !311, line: 437, baseType: !12481, size: 64, offset: 128)
!12481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 64)
!12482 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !324, line: 450, baseType: !12483)
!12483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !324, line: 440, size: 960, elements: !12484)
!12484 = !{!12485, !12487, !12488, !12489, !12490, !12491, !12492}
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12483, file: !324, line: 441, baseType: !12486, size: 64)
!12486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12483, size: 64)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12483, file: !324, line: 441, baseType: !12486, size: 64, offset: 64)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !12483, file: !324, line: 443, baseType: !414, size: 128, offset: 128)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12483, file: !324, line: 445, baseType: !389, size: 32, offset: 256)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !12483, file: !324, line: 446, baseType: !389, size: 32, offset: 288)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12483, file: !324, line: 447, baseType: !404, size: 512, offset: 320)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !12483, file: !324, line: 449, baseType: !12493, size: 128, offset: 832)
!12493 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !12494, line: 347, baseType: !12495)
!12494 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !12494, line: 340, size: 128, elements: !12496)
!12496 = !{!12497, !12498, !12499, !12500, !12501}
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !12495, file: !12494, line: 341, baseType: !1877, size: 32)
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !12495, file: !12494, line: 342, baseType: !1877, size: 32, offset: 32)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !12495, file: !12494, line: 343, baseType: !1877, size: 32, offset: 64)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12495, file: !12494, line: 345, baseType: !387, size: 16, offset: 96)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12495, file: !12494, line: 346, baseType: !387, size: 16, offset: 112)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !12475, file: !311, line: 440, baseType: !12503, size: 64, offset: 192)
!12503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12504, size: 64)
!12504 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !311, line: 386, baseType: !12505)
!12505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !311, line: 371, size: 2368, elements: !12506)
!12506 = !{!12507, !12508, !12509, !12510, !12511, !12512, !12513}
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !12505, file: !311, line: 372, baseType: !414, size: 128)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !12505, file: !311, line: 377, baseType: !701, size: 2048, offset: 128)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !12505, file: !311, line: 378, baseType: !348, size: 64, offset: 2176)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !12505, file: !311, line: 380, baseType: !469, size: 32, offset: 2240)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !12505, file: !311, line: 381, baseType: !469, size: 32, offset: 2272)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12505, file: !311, line: 384, baseType: !389, size: 32, offset: 2304)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12505, file: !311, line: 385, baseType: !389, size: 32, offset: 2336)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !12475, file: !311, line: 442, baseType: !414, size: 128, offset: 256)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !12475, file: !311, line: 445, baseType: !12516, size: 64, offset: 384)
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !12475, file: !311, line: 446, baseType: !12518, size: 64, offset: 448)
!12518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12519, size: 64)
!12519 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !311, line: 430, baseType: !12520)
!12520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !311, line: 426, size: 128, elements: !12521)
!12521 = !{!12522, !12523, !12524}
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !12520, file: !311, line: 427, baseType: !946, size: 64)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12520, file: !311, line: 428, baseType: !389, size: 32, offset: 64)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12520, file: !311, line: 429, baseType: !389, size: 32, offset: 96)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !12475, file: !311, line: 447, baseType: !7, size: 32, offset: 512)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !12475, file: !311, line: 450, baseType: !469, size: 32, offset: 544)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12475, file: !311, line: 451, baseType: !387, size: 16, offset: 576)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !12475, file: !311, line: 452, baseType: !387, size: 16, offset: 592)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !12475, file: !311, line: 455, baseType: !389, size: 32, offset: 608)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !12475, file: !311, line: 456, baseType: !1255, size: 64, offset: 640)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !12475, file: !311, line: 459, baseType: !389, size: 32, offset: 704)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !12475, file: !311, line: 460, baseType: !1364, size: 96, offset: 736)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !12475, file: !311, line: 462, baseType: !469, size: 32, offset: 832)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12475, file: !311, line: 462, baseType: !469, size: 32, offset: 864)
!12535 = !DILocation(line: 320, column: 10, scope: !12461)
!12536 = !DILocalVariable(name: "node1", scope: !12461, file: !3, line: 321, type: !4397)
!12537 = !DILocation(line: 321, column: 11, scope: !12461)
!12538 = !DILocation(line: 323, column: 13, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 323, column: 2)
!12540 = !DILocation(line: 323, column: 18, scope: !12539)
!12541 = !DILocation(line: 323, column: 26, scope: !12539)
!12542 = !DILocation(line: 323, column: 11, scope: !12539)
!12543 = !DILocation(line: 323, column: 7, scope: !12539)
!12544 = !DILocation(line: 323, column: 33, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12539, file: !3, line: 323, column: 2)
!12546 = !DILocation(line: 323, column: 2, scope: !12539)
!12547 = !DILocalVariable(name: "driver", scope: !12548, file: !3, line: 324, type: !12503)
!12548 = distinct !DILexicalBlock(scope: !12545, file: !3, line: 323, column: 55)
!12549 = !DILocation(line: 324, column: 18, scope: !12548)
!12550 = !DILocation(line: 324, column: 27, scope: !12548)
!12551 = !DILocation(line: 324, column: 32, scope: !12548)
!12552 = !DILocalVariable(name: "dvar", scope: !12548, file: !3, line: 325, type: !12553)
!12553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12554, size: 64)
!12554 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverVar", file: !311, line: 338, baseType: !12555)
!12555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverVar", file: !311, line: 328, size: 4288, elements: !12556)
!12556 = !{!12557, !12559, !12560, !12561, !12572, !12573, !12574}
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12555, file: !311, line: 329, baseType: !12558, size: 64)
!12558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12555, size: 64)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12555, file: !311, line: 329, baseType: !12558, size: 64, offset: 64)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12555, file: !311, line: 331, baseType: !404, size: 512, offset: 128)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !12555, file: !311, line: 333, baseType: !12562, size: 3584, offset: 640)
!12562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12563, size: 3584, elements: !1505)
!12563 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverTarget", file: !311, line: 279, baseType: !12564)
!12564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverTarget", file: !311, line: 269, size: 448, elements: !12565)
!12565 = !{!12566, !12567, !12568, !12569, !12570, !12571}
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12564, file: !311, line: 270, baseType: !368, size: 64)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !12564, file: !311, line: 272, baseType: !1255, size: 64, offset: 64)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "pchan_name", scope: !12564, file: !311, line: 274, baseType: !2369, size: 256, offset: 128)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "transChan", scope: !12564, file: !311, line: 275, baseType: !387, size: 16, offset: 384)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12564, file: !311, line: 277, baseType: !387, size: 16, offset: 400)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !12564, file: !311, line: 278, baseType: !389, size: 32, offset: 416)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "num_targets", scope: !12555, file: !311, line: 334, baseType: !387, size: 16, offset: 4224)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12555, file: !311, line: 336, baseType: !387, size: 16, offset: 4240)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !12555, file: !311, line: 337, baseType: !469, size: 32, offset: 4256)
!12575 = !DILocation(line: 325, column: 14, scope: !12548)
!12576 = !DILocalVariable(name: "isdata_fcu", scope: !12548, file: !3, line: 326, type: !389)
!12577 = !DILocation(line: 326, column: 7, scope: !12548)
!12578 = !DILocation(line: 326, column: 21, scope: !12548)
!12579 = !DILocation(line: 326, column: 20, scope: !12548)
!12580 = !DILocation(line: 326, column: 29, scope: !12548)
!12581 = !DILocation(line: 326, column: 33, scope: !12548)
!12582 = !DILocation(line: 326, column: 38, scope: !12548)
!12583 = !DILocation(line: 326, column: 47, scope: !12548)
!12584 = !DILocation(line: 326, column: 57, scope: !12548)
!12585 = !DILocation(line: 326, column: 62, scope: !12548)
!12586 = !DILocation(line: 326, column: 50, scope: !12548)
!12587 = !DILocation(line: 0, scope: !12548)
!12588 = !DILocation(line: 329, column: 15, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 329, column: 3)
!12590 = !DILocation(line: 329, column: 23, scope: !12589)
!12591 = !DILocation(line: 329, column: 33, scope: !12589)
!12592 = !DILocation(line: 329, column: 13, scope: !12589)
!12593 = !DILocation(line: 329, column: 8, scope: !12589)
!12594 = !DILocation(line: 329, column: 40, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 329, column: 3)
!12596 = !DILocation(line: 329, column: 3, scope: !12589)
!12597 = !DILocalVariable(name: "dtar", scope: !12598, file: !3, line: 331, type: !12600)
!12598 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 331, column: 4)
!12599 = distinct !DILexicalBlock(scope: !12595, file: !3, line: 329, column: 65)
!12600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12563, size: 64)
!12601 = !DILocation(line: 331, column: 4, scope: !12598)
!12602 = !DILocalVariable(name: "tarIndex", scope: !12598, file: !3, line: 331, type: !389)
!12603 = !DILocation(line: 331, column: 4, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !3, line: 331, column: 4)
!12605 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 331, column: 4)
!12606 = !DILocation(line: 331, column: 4, scope: !12605)
!12607 = !DILocation(line: 333, column: 9, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 333, column: 9)
!12609 = distinct !DILexicalBlock(scope: !12604, file: !3, line: 332, column: 4)
!12610 = !DILocation(line: 333, column: 15, scope: !12608)
!12611 = !DILocation(line: 333, column: 9, scope: !12609)
!12612 = !DILocation(line: 335, column: 10, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 335, column: 10)
!12614 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 333, column: 19)
!12615 = !DILocation(line: 335, column: 29, scope: !12613)
!12616 = !DILocation(line: 335, column: 10, scope: !12614)
!12617 = !DILocalVariable(name: "ob", scope: !12618, file: !3, line: 336, type: !349)
!12618 = distinct !DILexicalBlock(scope: !12613, file: !3, line: 335, column: 39)
!12619 = !DILocation(line: 336, column: 15, scope: !12618)
!12620 = !DILocation(line: 336, column: 30, scope: !12618)
!12621 = !DILocation(line: 336, column: 36, scope: !12618)
!12622 = !DILocation(line: 336, column: 20, scope: !12618)
!12623 = !DILocation(line: 339, column: 28, scope: !12618)
!12624 = !DILocation(line: 339, column: 33, scope: !12618)
!12625 = !DILocation(line: 339, column: 39, scope: !12618)
!12626 = !DILocation(line: 339, column: 15, scope: !12618)
!12627 = !DILocation(line: 339, column: 13, scope: !12618)
!12628 = !DILocation(line: 342, column: 12, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 342, column: 11)
!12630 = !DILocation(line: 342, column: 16, scope: !12629)
!12631 = !DILocation(line: 342, column: 21, scope: !12629)
!12632 = !DILocation(line: 342, column: 37, scope: !12629)
!12633 = !DILocation(line: 343, column: 15, scope: !12629)
!12634 = !DILocation(line: 343, column: 21, scope: !12629)
!12635 = !DILocation(line: 343, column: 14, scope: !12629)
!12636 = !DILocation(line: 343, column: 31, scope: !12629)
!12637 = !DILocation(line: 343, column: 41, scope: !12629)
!12638 = !DILocation(line: 343, column: 47, scope: !12629)
!12639 = !DILocation(line: 343, column: 34, scope: !12629)
!12640 = !DILocation(line: 343, column: 73, scope: !12629)
!12641 = !DILocation(line: 344, column: 15, scope: !12629)
!12642 = !DILocation(line: 344, column: 21, scope: !12629)
!12643 = !DILocation(line: 344, column: 26, scope: !12629)
!12644 = !DILocation(line: 344, column: 50, scope: !12629)
!12645 = !DILocation(line: 344, column: 54, scope: !12629)
!12646 = !DILocation(line: 344, column: 60, scope: !12629)
!12647 = !DILocation(line: 344, column: 53, scope: !12629)
!12648 = !DILocation(line: 342, column: 11, scope: !12618)
!12649 = !DILocation(line: 346, column: 25, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 345, column: 7)
!12651 = !DILocation(line: 346, column: 30, scope: !12650)
!12652 = !DILocation(line: 346, column: 37, scope: !12650)
!12653 = !DILocation(line: 346, column: 43, scope: !12650)
!12654 = !DILocation(line: 346, column: 8, scope: !12650)
!12655 = !DILocation(line: 347, column: 7, scope: !12650)
!12656 = !DILocation(line: 349, column: 16, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 349, column: 16)
!12658 = !DILocation(line: 349, column: 22, scope: !12657)
!12659 = !DILocation(line: 349, column: 31, scope: !12657)
!12660 = !DILocation(line: 349, column: 41, scope: !12657)
!12661 = !DILocation(line: 349, column: 47, scope: !12657)
!12662 = !DILocation(line: 349, column: 34, scope: !12657)
!12663 = !DILocation(line: 349, column: 16, scope: !12629)
!12664 = !DILocation(line: 350, column: 25, scope: !12657)
!12665 = !DILocation(line: 350, column: 30, scope: !12657)
!12666 = !DILocation(line: 350, column: 37, scope: !12657)
!12667 = !DILocation(line: 350, column: 43, scope: !12657)
!12668 = !DILocation(line: 350, column: 8, scope: !12657)
!12669 = !DILocation(line: 353, column: 25, scope: !12657)
!12670 = !DILocation(line: 353, column: 30, scope: !12657)
!12671 = !DILocation(line: 353, column: 37, scope: !12657)
!12672 = !DILocation(line: 353, column: 43, scope: !12657)
!12673 = !DILocation(line: 353, column: 8, scope: !12657)
!12674 = !DILocation(line: 354, column: 6, scope: !12618)
!12675 = !DILocation(line: 355, column: 5, scope: !12614)
!12676 = !DILocation(line: 356, column: 4, scope: !12609)
!12677 = distinct !{!12677, !12606, !12678}
!12678 = !DILocation(line: 356, column: 4, scope: !12605)
!12679 = !DILocation(line: 358, column: 3, scope: !12599)
!12680 = !DILocation(line: 329, column: 53, scope: !12595)
!12681 = !DILocation(line: 329, column: 59, scope: !12595)
!12682 = !DILocation(line: 329, column: 51, scope: !12595)
!12683 = !DILocation(line: 329, column: 3, scope: !12595)
!12684 = distinct !{!12684, !12596, !12685}
!12685 = !DILocation(line: 358, column: 3, scope: !12589)
!12686 = !DILocation(line: 359, column: 2, scope: !12548)
!12687 = !DILocation(line: 323, column: 44, scope: !12545)
!12688 = !DILocation(line: 323, column: 49, scope: !12545)
!12689 = !DILocation(line: 323, column: 42, scope: !12545)
!12690 = !DILocation(line: 323, column: 2, scope: !12545)
!12691 = distinct !{!12691, !12546, !12692}
!12692 = !DILocation(line: 359, column: 2, scope: !12539)
!12693 = !DILocation(line: 360, column: 1, scope: !12461)
!12694 = distinct !DISubprogram(name: "dag_add_collision_field_relation", scope: !3, file: !3, line: 453, type: !12695, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{null, !5278, !4663, !349, !4397, !389, !1940}
!12697 = !DILocalVariable(name: "dag", arg: 1, scope: !12694, file: !3, line: 453, type: !5278)
!12698 = !DILocation(line: 453, column: 57, scope: !12694)
!12699 = !DILocalVariable(name: "scene", arg: 2, scope: !12694, file: !3, line: 453, type: !4663)
!12700 = !DILocation(line: 453, column: 69, scope: !12694)
!12701 = !DILocalVariable(name: "ob", arg: 3, scope: !12694, file: !3, line: 453, type: !349)
!12702 = !DILocation(line: 453, column: 84, scope: !12694)
!12703 = !DILocalVariable(name: "node", arg: 4, scope: !12694, file: !3, line: 453, type: !4397)
!12704 = !DILocation(line: 453, column: 97, scope: !12694)
!12705 = !DILocalVariable(name: "skip_forcefield", arg: 5, scope: !12694, file: !3, line: 453, type: !389)
!12706 = !DILocation(line: 453, column: 107, scope: !12694)
!12707 = !DILocalVariable(name: "no_collision", arg: 6, scope: !12694, file: !3, line: 453, type: !1940)
!12708 = !DILocation(line: 453, column: 129, scope: !12694)
!12709 = !DILocalVariable(name: "base", scope: !12694, file: !3, line: 455, type: !5299)
!12710 = !DILocation(line: 455, column: 8, scope: !12694)
!12711 = !DILocalVariable(name: "particle_system", scope: !12694, file: !3, line: 456, type: !5729)
!12712 = !DILocation(line: 456, column: 18, scope: !12694)
!12713 = !DILocation(line: 458, column: 25, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 458, column: 2)
!12715 = !DILocation(line: 458, column: 29, scope: !12714)
!12716 = !DILocation(line: 458, column: 44, scope: !12714)
!12717 = !DILocation(line: 458, column: 23, scope: !12714)
!12718 = !DILocation(line: 458, column: 7, scope: !12714)
!12719 = !DILocation(line: 459, column: 7, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 458, column: 2)
!12721 = !DILocation(line: 458, column: 2, scope: !12714)
!12722 = !DILocalVariable(name: "effector_weights", scope: !12723, file: !3, line: 462, type: !12724)
!12723 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 461, column: 2)
!12724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12725, size: 64)
!12725 = !DIDerivedType(tag: DW_TAG_typedef, name: "EffectorWeights", file: !271, line: 125, baseType: !3665)
!12726 = !DILocation(line: 462, column: 20, scope: !12723)
!12727 = !DILocation(line: 462, column: 39, scope: !12723)
!12728 = !DILocation(line: 462, column: 56, scope: !12723)
!12729 = !DILocation(line: 462, column: 62, scope: !12723)
!12730 = !DILocation(line: 463, column: 7, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 463, column: 7)
!12732 = !DILocation(line: 463, column: 25, scope: !12731)
!12733 = !DILocation(line: 463, column: 7, scope: !12723)
!12734 = !DILocalVariable(name: "group_object", scope: !12735, file: !3, line: 464, type: !4527)
!12735 = distinct !DILexicalBlock(scope: !12731, file: !3, line: 463, column: 32)
!12736 = !DILocation(line: 464, column: 17, scope: !12735)
!12737 = !DILocation(line: 466, column: 24, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12735, file: !3, line: 466, column: 4)
!12739 = !DILocation(line: 466, column: 42, scope: !12738)
!12740 = !DILocation(line: 466, column: 49, scope: !12738)
!12741 = !DILocation(line: 466, column: 57, scope: !12738)
!12742 = !DILocation(line: 466, column: 22, scope: !12738)
!12743 = !DILocation(line: 466, column: 9, scope: !12738)
!12744 = !DILocation(line: 467, column: 9, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 466, column: 4)
!12746 = !DILocation(line: 466, column: 4, scope: !12738)
!12747 = !DILocation(line: 470, column: 10, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 470, column: 9)
!12749 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 469, column: 4)
!12750 = !DILocation(line: 470, column: 24, scope: !12748)
!12751 = !DILocation(line: 470, column: 28, scope: !12748)
!12752 = !DILocation(line: 470, column: 34, scope: !12748)
!12753 = !DILocation(line: 470, column: 38, scope: !12748)
!12754 = !DILocation(line: 470, column: 32, scope: !12748)
!12755 = !DILocation(line: 470, column: 9, scope: !12749)
!12756 = !DILocation(line: 471, column: 42, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12748, file: !3, line: 470, column: 44)
!12758 = !DILocation(line: 471, column: 47, scope: !12757)
!12759 = !DILocation(line: 471, column: 51, scope: !12757)
!12760 = !DILocation(line: 471, column: 57, scope: !12757)
!12761 = !DILocation(line: 471, column: 71, scope: !12757)
!12762 = !DILocation(line: 471, column: 75, scope: !12757)
!12763 = !DILocation(line: 471, column: 92, scope: !12757)
!12764 = !DILocation(line: 471, column: 6, scope: !12757)
!12765 = !DILocation(line: 472, column: 5, scope: !12757)
!12766 = !DILocation(line: 473, column: 4, scope: !12749)
!12767 = !DILocation(line: 468, column: 24, scope: !12745)
!12768 = !DILocation(line: 468, column: 38, scope: !12745)
!12769 = !DILocation(line: 468, column: 22, scope: !12745)
!12770 = !DILocation(line: 466, column: 4, scope: !12745)
!12771 = distinct !{!12771, !12746, !12772}
!12772 = !DILocation(line: 473, column: 4, scope: !12738)
!12773 = !DILocation(line: 474, column: 3, scope: !12735)
!12774 = !DILocation(line: 475, column: 2, scope: !12723)
!12775 = !DILocation(line: 460, column: 25, scope: !12720)
!12776 = !DILocation(line: 460, column: 42, scope: !12720)
!12777 = !DILocation(line: 460, column: 23, scope: !12720)
!12778 = !DILocation(line: 458, column: 2, scope: !12720)
!12779 = distinct !{!12779, !12721, !12780}
!12780 = !DILocation(line: 475, column: 2, scope: !12714)
!12781 = !DILocation(line: 479, column: 14, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 479, column: 2)
!12783 = !DILocation(line: 479, column: 21, scope: !12782)
!12784 = !DILocation(line: 479, column: 26, scope: !12782)
!12785 = !DILocation(line: 479, column: 12, scope: !12782)
!12786 = !DILocation(line: 479, column: 7, scope: !12782)
!12787 = !DILocation(line: 479, column: 33, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 479, column: 2)
!12789 = !DILocation(line: 479, column: 2, scope: !12782)
!12790 = !DILocation(line: 480, column: 8, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 480, column: 7)
!12792 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 479, column: 58)
!12793 = !DILocation(line: 480, column: 14, scope: !12791)
!12794 = !DILocation(line: 480, column: 20, scope: !12791)
!12795 = !DILocation(line: 480, column: 24, scope: !12791)
!12796 = !DILocation(line: 480, column: 18, scope: !12791)
!12797 = !DILocation(line: 480, column: 7, scope: !12792)
!12798 = !DILocalVariable(name: "ob1", scope: !12799, file: !3, line: 481, type: !349)
!12799 = distinct !DILexicalBlock(scope: !12791, file: !3, line: 480, column: 30)
!12800 = !DILocation(line: 481, column: 12, scope: !12799)
!12801 = !DILocation(line: 481, column: 18, scope: !12799)
!12802 = !DILocation(line: 481, column: 24, scope: !12799)
!12803 = !DILocation(line: 482, column: 40, scope: !12799)
!12804 = !DILocation(line: 482, column: 45, scope: !12799)
!12805 = !DILocation(line: 482, column: 49, scope: !12799)
!12806 = !DILocation(line: 482, column: 55, scope: !12799)
!12807 = !DILocation(line: 482, column: 60, scope: !12799)
!12808 = !DILocation(line: 482, column: 77, scope: !12799)
!12809 = !DILocation(line: 482, column: 4, scope: !12799)
!12810 = !DILocation(line: 483, column: 3, scope: !12799)
!12811 = !DILocation(line: 484, column: 2, scope: !12792)
!12812 = !DILocation(line: 479, column: 46, scope: !12788)
!12813 = !DILocation(line: 479, column: 52, scope: !12788)
!12814 = !DILocation(line: 479, column: 44, scope: !12788)
!12815 = !DILocation(line: 479, column: 2, scope: !12788)
!12816 = distinct !{!12816, !12789, !12817}
!12817 = !DILocation(line: 484, column: 2, scope: !12782)
!12818 = !DILocation(line: 485, column: 1, scope: !12694)
!12819 = distinct !DISubprogram(name: "dag_add_material_driver_relations", scope: !3, file: !3, line: 389, type: !12820, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12820 = !DISubroutineType(types: !12821)
!12821 = !{null, !5278, !4397, !4523}
!12822 = !DILocalVariable(name: "dag", arg: 1, scope: !12819, file: !3, line: 389, type: !5278)
!12823 = !DILocation(line: 389, column: 58, scope: !12819)
!12824 = !DILocalVariable(name: "node", arg: 2, scope: !12819, file: !3, line: 389, type: !4397)
!12825 = !DILocation(line: 389, column: 72, scope: !12819)
!12826 = !DILocalVariable(name: "ma", arg: 3, scope: !12819, file: !3, line: 389, type: !4523)
!12827 = !DILocation(line: 389, column: 88, scope: !12819)
!12828 = !DILocation(line: 395, column: 6, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 395, column: 6)
!12830 = !DILocation(line: 395, column: 10, scope: !12829)
!12831 = !DILocation(line: 395, column: 13, scope: !12829)
!12832 = !DILocation(line: 395, column: 18, scope: !12829)
!12833 = !DILocation(line: 395, column: 6, scope: !12819)
!12834 = !DILocation(line: 396, column: 3, scope: !12829)
!12835 = !DILocation(line: 398, column: 2, scope: !12819)
!12836 = !DILocation(line: 398, column: 6, scope: !12819)
!12837 = !DILocation(line: 398, column: 9, scope: !12819)
!12838 = !DILocation(line: 398, column: 14, scope: !12819)
!12839 = !DILocation(line: 401, column: 6, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 401, column: 6)
!12841 = !DILocation(line: 401, column: 10, scope: !12840)
!12842 = !DILocation(line: 401, column: 6, scope: !12819)
!12843 = !DILocation(line: 402, column: 27, scope: !12840)
!12844 = !DILocation(line: 402, column: 31, scope: !12840)
!12845 = !DILocation(line: 402, column: 36, scope: !12840)
!12846 = !DILocation(line: 402, column: 41, scope: !12840)
!12847 = !DILocation(line: 402, column: 3, scope: !12840)
!12848 = !DILocation(line: 409, column: 6, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 409, column: 6)
!12850 = !DILocation(line: 409, column: 10, scope: !12849)
!12851 = !DILocation(line: 409, column: 6, scope: !12819)
!12852 = !DILocation(line: 410, column: 44, scope: !12849)
!12853 = !DILocation(line: 410, column: 49, scope: !12849)
!12854 = !DILocation(line: 410, column: 55, scope: !12849)
!12855 = !DILocation(line: 410, column: 59, scope: !12849)
!12856 = !DILocation(line: 410, column: 3, scope: !12849)
!12857 = !DILocation(line: 412, column: 2, scope: !12819)
!12858 = !DILocation(line: 412, column: 6, scope: !12819)
!12859 = !DILocation(line: 412, column: 9, scope: !12819)
!12860 = !DILocation(line: 412, column: 14, scope: !12819)
!12861 = !DILocation(line: 413, column: 1, scope: !12819)
!12862 = distinct !DISubprogram(name: "dag_add_lamp_driver_relations", scope: !3, file: !3, line: 416, type: !12863, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12863 = !DISubroutineType(types: !12864)
!12864 = !{null, !5278, !4397, !10867}
!12865 = !DILocalVariable(name: "dag", arg: 1, scope: !12862, file: !3, line: 416, type: !5278)
!12866 = !DILocation(line: 416, column: 54, scope: !12862)
!12867 = !DILocalVariable(name: "node", arg: 2, scope: !12862, file: !3, line: 416, type: !4397)
!12868 = !DILocation(line: 416, column: 68, scope: !12862)
!12869 = !DILocalVariable(name: "la", arg: 3, scope: !12862, file: !3, line: 416, type: !10867)
!12870 = !DILocation(line: 416, column: 80, scope: !12862)
!12871 = !DILocation(line: 422, column: 6, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 422, column: 6)
!12873 = !DILocation(line: 422, column: 10, scope: !12872)
!12874 = !DILocation(line: 422, column: 13, scope: !12872)
!12875 = !DILocation(line: 422, column: 18, scope: !12872)
!12876 = !DILocation(line: 422, column: 6, scope: !12862)
!12877 = !DILocation(line: 423, column: 3, scope: !12872)
!12878 = !DILocation(line: 425, column: 2, scope: !12862)
!12879 = !DILocation(line: 425, column: 6, scope: !12862)
!12880 = !DILocation(line: 425, column: 9, scope: !12862)
!12881 = !DILocation(line: 425, column: 14, scope: !12862)
!12882 = !DILocation(line: 428, column: 6, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 428, column: 6)
!12884 = !DILocation(line: 428, column: 10, scope: !12883)
!12885 = !DILocation(line: 428, column: 6, scope: !12862)
!12886 = !DILocation(line: 429, column: 27, scope: !12883)
!12887 = !DILocation(line: 429, column: 31, scope: !12883)
!12888 = !DILocation(line: 429, column: 36, scope: !12883)
!12889 = !DILocation(line: 429, column: 41, scope: !12883)
!12890 = !DILocation(line: 429, column: 3, scope: !12883)
!12891 = !DILocation(line: 436, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 436, column: 6)
!12893 = !DILocation(line: 436, column: 10, scope: !12892)
!12894 = !DILocation(line: 436, column: 6, scope: !12862)
!12895 = !DILocation(line: 437, column: 44, scope: !12892)
!12896 = !DILocation(line: 437, column: 49, scope: !12892)
!12897 = !DILocation(line: 437, column: 55, scope: !12892)
!12898 = !DILocation(line: 437, column: 59, scope: !12892)
!12899 = !DILocation(line: 437, column: 3, scope: !12892)
!12900 = !DILocation(line: 439, column: 2, scope: !12862)
!12901 = !DILocation(line: 439, column: 6, scope: !12862)
!12902 = !DILocation(line: 439, column: 9, scope: !12862)
!12903 = !DILocation(line: 439, column: 14, scope: !12862)
!12904 = !DILocation(line: 440, column: 1, scope: !12862)
!12905 = distinct !DISubprogram(name: "check_and_create_collision_relation", scope: !3, file: !3, line: 442, type: !12906, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{null, !5278, !349, !4397, !349, !389, !1940}
!12908 = !DILocalVariable(name: "dag", arg: 1, scope: !12905, file: !3, line: 442, type: !5278)
!12909 = !DILocation(line: 442, column: 60, scope: !12905)
!12910 = !DILocalVariable(name: "ob", arg: 2, scope: !12905, file: !3, line: 442, type: !349)
!12911 = !DILocation(line: 442, column: 73, scope: !12905)
!12912 = !DILocalVariable(name: "node", arg: 3, scope: !12905, file: !3, line: 442, type: !4397)
!12913 = !DILocation(line: 442, column: 86, scope: !12905)
!12914 = !DILocalVariable(name: "ob1", arg: 4, scope: !12905, file: !3, line: 442, type: !349)
!12915 = !DILocation(line: 442, column: 100, scope: !12905)
!12916 = !DILocalVariable(name: "skip_forcefield", arg: 5, scope: !12905, file: !3, line: 442, type: !389)
!12917 = !DILocation(line: 442, column: 109, scope: !12905)
!12918 = !DILocalVariable(name: "no_collision", arg: 6, scope: !12905, file: !3, line: 442, type: !1940)
!12919 = !DILocation(line: 442, column: 131, scope: !12905)
!12920 = !DILocalVariable(name: "node2", scope: !12905, file: !3, line: 444, type: !4397)
!12921 = !DILocation(line: 444, column: 11, scope: !12905)
!12922 = !DILocation(line: 445, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 445, column: 6)
!12924 = !DILocation(line: 445, column: 11, scope: !12923)
!12925 = !DILocation(line: 445, column: 14, scope: !12923)
!12926 = !DILocation(line: 445, column: 18, scope: !12923)
!12927 = !DILocation(line: 445, column: 23, scope: !12923)
!12928 = !DILocation(line: 445, column: 27, scope: !12923)
!12929 = !DILocation(line: 445, column: 35, scope: !12923)
!12930 = !DILocation(line: 445, column: 38, scope: !12923)
!12931 = !DILocation(line: 445, column: 43, scope: !12923)
!12932 = !DILocation(line: 445, column: 47, scope: !12923)
!12933 = !DILocation(line: 445, column: 59, scope: !12923)
!12934 = !DILocation(line: 445, column: 63, scope: !12923)
!12935 = !DILocation(line: 445, column: 70, scope: !12923)
!12936 = !DILocation(line: 445, column: 67, scope: !12923)
!12937 = !DILocation(line: 445, column: 6, scope: !12905)
!12938 = !DILocation(line: 446, column: 8, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !3, line: 446, column: 7)
!12940 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 445, column: 75)
!12941 = !DILocation(line: 446, column: 24, scope: !12939)
!12942 = !DILocation(line: 446, column: 27, scope: !12939)
!12943 = !DILocation(line: 446, column: 32, scope: !12939)
!12944 = !DILocation(line: 446, column: 36, scope: !12939)
!12945 = !DILocation(line: 446, column: 50, scope: !12939)
!12946 = !DILocation(line: 446, column: 47, scope: !12939)
!12947 = !DILocation(line: 446, column: 67, scope: !12939)
!12948 = !DILocation(line: 446, column: 71, scope: !12939)
!12949 = !DILocation(line: 446, column: 84, scope: !12939)
!12950 = !DILocation(line: 446, column: 87, scope: !12939)
!12951 = !DILocation(line: 446, column: 92, scope: !12939)
!12952 = !DILocation(line: 446, column: 96, scope: !12939)
!12953 = !DILocation(line: 446, column: 107, scope: !12939)
!12954 = !DILocation(line: 446, column: 7, scope: !12940)
!12955 = !DILocation(line: 447, column: 4, scope: !12939)
!12956 = !DILocation(line: 448, column: 24, scope: !12940)
!12957 = !DILocation(line: 448, column: 29, scope: !12940)
!12958 = !DILocation(line: 448, column: 11, scope: !12940)
!12959 = !DILocation(line: 448, column: 9, scope: !12940)
!12960 = !DILocation(line: 449, column: 20, scope: !12940)
!12961 = !DILocation(line: 449, column: 25, scope: !12940)
!12962 = !DILocation(line: 449, column: 32, scope: !12940)
!12963 = !DILocation(line: 449, column: 3, scope: !12940)
!12964 = !DILocation(line: 450, column: 2, scope: !12940)
!12965 = !DILocation(line: 451, column: 1, scope: !12905)
!12966 = distinct !DISubprogram(name: "dag_add_shader_nodetree_driver_relations", scope: !3, file: !3, line: 366, type: !12967, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !5278, !4397, !4525}
!12969 = !DILocalVariable(name: "dag", arg: 1, scope: !12966, file: !3, line: 366, type: !5278)
!12970 = !DILocation(line: 366, column: 65, scope: !12966)
!12971 = !DILocalVariable(name: "node", arg: 2, scope: !12966, file: !3, line: 366, type: !4397)
!12972 = !DILocation(line: 366, column: 79, scope: !12966)
!12973 = !DILocalVariable(name: "ntree", arg: 3, scope: !12966, file: !3, line: 366, type: !4525)
!12974 = !DILocation(line: 366, column: 96, scope: !12966)
!12975 = !DILocalVariable(name: "n", scope: !12966, file: !3, line: 368, type: !876)
!12976 = !DILocation(line: 368, column: 9, scope: !12966)
!12977 = !DILocation(line: 371, column: 6, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12966, file: !3, line: 371, column: 6)
!12979 = !DILocation(line: 371, column: 13, scope: !12978)
!12980 = !DILocation(line: 371, column: 6, scope: !12966)
!12981 = !DILocation(line: 372, column: 27, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 371, column: 18)
!12983 = !DILocation(line: 372, column: 34, scope: !12982)
!12984 = !DILocation(line: 372, column: 39, scope: !12982)
!12985 = !DILocation(line: 372, column: 44, scope: !12982)
!12986 = !DILocation(line: 372, column: 3, scope: !12982)
!12987 = !DILocation(line: 373, column: 2, scope: !12982)
!12988 = !DILocation(line: 376, column: 11, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12966, file: !3, line: 376, column: 2)
!12990 = !DILocation(line: 376, column: 18, scope: !12989)
!12991 = !DILocation(line: 376, column: 24, scope: !12989)
!12992 = !DILocation(line: 376, column: 9, scope: !12989)
!12993 = !DILocation(line: 376, column: 7, scope: !12989)
!12994 = !DILocation(line: 376, column: 31, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 376, column: 2)
!12996 = !DILocation(line: 376, column: 2, scope: !12989)
!12997 = !DILocation(line: 377, column: 7, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 377, column: 7)
!12999 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 376, column: 47)
!13000 = !DILocation(line: 377, column: 10, scope: !12998)
!13001 = !DILocation(line: 377, column: 7, scope: !12999)
!13002 = !DILocation(line: 378, column: 8, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 378, column: 8)
!13004 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 377, column: 14)
!13005 = !DILocation(line: 378, column: 24, scope: !13003)
!13006 = !DILocation(line: 378, column: 8, scope: !13004)
!13007 = !DILocation(line: 379, column: 39, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 378, column: 34)
!13009 = !DILocation(line: 379, column: 44, scope: !13008)
!13010 = !DILocation(line: 379, column: 62, scope: !13008)
!13011 = !DILocation(line: 379, column: 65, scope: !13008)
!13012 = !DILocation(line: 379, column: 50, scope: !13008)
!13013 = !DILocation(line: 379, column: 5, scope: !13008)
!13014 = !DILocation(line: 380, column: 4, scope: !13008)
!13015 = !DILocation(line: 381, column: 13, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 381, column: 13)
!13017 = !DILocation(line: 381, column: 16, scope: !13016)
!13018 = !DILocation(line: 381, column: 21, scope: !13016)
!13019 = !DILocation(line: 381, column: 13, scope: !13003)
!13020 = !DILocation(line: 382, column: 46, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 381, column: 36)
!13022 = !DILocation(line: 382, column: 51, scope: !13021)
!13023 = !DILocation(line: 382, column: 70, scope: !13021)
!13024 = !DILocation(line: 382, column: 73, scope: !13021)
!13025 = !DILocation(line: 382, column: 57, scope: !13021)
!13026 = !DILocation(line: 382, column: 5, scope: !13021)
!13027 = !DILocation(line: 383, column: 4, scope: !13021)
!13028 = !DILocation(line: 384, column: 3, scope: !13004)
!13029 = !DILocation(line: 385, column: 2, scope: !12999)
!13030 = !DILocation(line: 376, column: 38, scope: !12995)
!13031 = !DILocation(line: 376, column: 41, scope: !12995)
!13032 = !DILocation(line: 376, column: 36, scope: !12995)
!13033 = !DILocation(line: 376, column: 2, scope: !12995)
!13034 = distinct !{!13034, !12996, !13035}
!13035 = !DILocation(line: 385, column: 2, scope: !12989)
!13036 = !DILocation(line: 386, column: 1, scope: !12966)
!13037 = distinct !DISubprogram(name: "scene_sort_groups", scope: !3, file: !3, line: 1345, type: !7818, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13038 = !DILocalVariable(name: "bmain", arg: 1, scope: !13037, file: !3, line: 1345, type: !4595)
!13039 = !DILocation(line: 1345, column: 37, scope: !13037)
!13040 = !DILocalVariable(name: "sce", arg: 2, scope: !13037, file: !3, line: 1345, type: !4663)
!13041 = !DILocation(line: 1345, column: 51, scope: !13037)
!13042 = !DILocalVariable(name: "base", scope: !13037, file: !3, line: 1347, type: !5299)
!13043 = !DILocation(line: 1347, column: 8, scope: !13037)
!13044 = !DILocalVariable(name: "group", scope: !13037, file: !3, line: 1348, type: !7293)
!13045 = !DILocation(line: 1348, column: 9, scope: !13037)
!13046 = !DILocalVariable(name: "go", scope: !13037, file: !3, line: 1349, type: !4527)
!13047 = !DILocation(line: 1349, column: 15, scope: !13037)
!13048 = !DILocalVariable(name: "ob", scope: !13037, file: !3, line: 1350, type: !349)
!13049 = !DILocation(line: 1350, column: 10, scope: !13037)
!13050 = !DILocation(line: 1353, column: 12, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 1353, column: 2)
!13052 = !DILocation(line: 1353, column: 19, scope: !13051)
!13053 = !DILocation(line: 1353, column: 26, scope: !13051)
!13054 = !DILocation(line: 1353, column: 10, scope: !13051)
!13055 = !DILocation(line: 1353, column: 7, scope: !13051)
!13056 = !DILocation(line: 1353, column: 33, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1353, column: 2)
!13058 = !DILocation(line: 1353, column: 2, scope: !13051)
!13059 = !DILocation(line: 1354, column: 3, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 1353, column: 55)
!13061 = !DILocation(line: 1354, column: 7, scope: !13060)
!13062 = !DILocation(line: 1354, column: 10, scope: !13060)
!13063 = !DILocation(line: 1354, column: 15, scope: !13060)
!13064 = !DILocation(line: 1355, column: 3, scope: !13060)
!13065 = !DILocation(line: 1355, column: 7, scope: !13060)
!13066 = !DILocation(line: 1355, column: 10, scope: !13060)
!13067 = !DILocation(line: 1355, column: 16, scope: !13060)
!13068 = !DILocation(line: 1356, column: 2, scope: !13060)
!13069 = !DILocation(line: 1353, column: 42, scope: !13057)
!13070 = !DILocation(line: 1353, column: 46, scope: !13057)
!13071 = !DILocation(line: 1353, column: 49, scope: !13057)
!13072 = !DILocation(line: 1353, column: 40, scope: !13057)
!13073 = !DILocation(line: 1353, column: 2, scope: !13057)
!13074 = distinct !{!13074, !13058, !13075}
!13075 = !DILocation(line: 1356, column: 2, scope: !13051)
!13076 = !DILocation(line: 1357, column: 14, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 1357, column: 2)
!13078 = !DILocation(line: 1357, column: 19, scope: !13077)
!13079 = !DILocation(line: 1357, column: 24, scope: !13077)
!13080 = !DILocation(line: 1357, column: 12, scope: !13077)
!13081 = !DILocation(line: 1357, column: 7, scope: !13077)
!13082 = !DILocation(line: 1357, column: 31, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 1357, column: 2)
!13084 = !DILocation(line: 1357, column: 2, scope: !13077)
!13085 = !DILocation(line: 1358, column: 3, scope: !13083)
!13086 = !DILocation(line: 1358, column: 9, scope: !13083)
!13087 = !DILocation(line: 1358, column: 17, scope: !13083)
!13088 = !DILocation(line: 1358, column: 20, scope: !13083)
!13089 = !DILocation(line: 1358, column: 25, scope: !13083)
!13090 = !DILocation(line: 1357, column: 44, scope: !13083)
!13091 = !DILocation(line: 1357, column: 50, scope: !13083)
!13092 = !DILocation(line: 1357, column: 42, scope: !13083)
!13093 = !DILocation(line: 1357, column: 2, scope: !13083)
!13094 = distinct !{!13094, !13084, !13095}
!13095 = !DILocation(line: 1358, column: 28, scope: !13077)
!13096 = !DILocation(line: 1360, column: 15, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 1360, column: 2)
!13098 = !DILocation(line: 1360, column: 22, scope: !13097)
!13099 = !DILocation(line: 1360, column: 28, scope: !13097)
!13100 = !DILocation(line: 1360, column: 13, scope: !13097)
!13101 = !DILocation(line: 1360, column: 7, scope: !13097)
!13102 = !DILocation(line: 1360, column: 35, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13097, file: !3, line: 1360, column: 2)
!13104 = !DILocation(line: 1360, column: 2, scope: !13097)
!13105 = !DILocation(line: 1361, column: 13, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 1361, column: 3)
!13107 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 1360, column: 66)
!13108 = !DILocation(line: 1361, column: 20, scope: !13106)
!13109 = !DILocation(line: 1361, column: 28, scope: !13106)
!13110 = !DILocation(line: 1361, column: 11, scope: !13106)
!13111 = !DILocation(line: 1361, column: 8, scope: !13106)
!13112 = !DILocation(line: 1361, column: 35, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13106, file: !3, line: 1361, column: 3)
!13114 = !DILocation(line: 1361, column: 3, scope: !13106)
!13115 = !DILocation(line: 1362, column: 9, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13117, file: !3, line: 1362, column: 8)
!13117 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 1361, column: 54)
!13118 = !DILocation(line: 1362, column: 13, scope: !13116)
!13119 = !DILocation(line: 1362, column: 17, scope: !13116)
!13120 = !DILocation(line: 1362, column: 20, scope: !13116)
!13121 = !DILocation(line: 1362, column: 25, scope: !13116)
!13122 = !DILocation(line: 1362, column: 37, scope: !13116)
!13123 = !DILocation(line: 1362, column: 8, scope: !13117)
!13124 = !DILocation(line: 1363, column: 5, scope: !13116)
!13125 = !DILocation(line: 1364, column: 3, scope: !13117)
!13126 = !DILocation(line: 1361, column: 44, scope: !13113)
!13127 = !DILocation(line: 1361, column: 48, scope: !13113)
!13128 = !DILocation(line: 1361, column: 42, scope: !13113)
!13129 = !DILocation(line: 1361, column: 3, scope: !13113)
!13130 = distinct !{!13130, !13114, !13131}
!13131 = !DILocation(line: 1364, column: 3, scope: !13106)
!13132 = !DILocation(line: 1366, column: 7, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 1366, column: 7)
!13134 = !DILocation(line: 1366, column: 10, scope: !13133)
!13135 = !DILocation(line: 1366, column: 7, scope: !13107)
!13136 = !DILocalVariable(name: "listb", scope: !13137, file: !3, line: 1367, type: !414)
!13137 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 1366, column: 19)
!13138 = !DILocation(line: 1367, column: 13, scope: !13137)
!13139 = !DILocation(line: 1369, column: 14, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13137, file: !3, line: 1369, column: 4)
!13141 = !DILocation(line: 1369, column: 21, scope: !13140)
!13142 = !DILocation(line: 1369, column: 29, scope: !13140)
!13143 = !DILocation(line: 1369, column: 12, scope: !13140)
!13144 = !DILocation(line: 1369, column: 9, scope: !13140)
!13145 = !DILocation(line: 1369, column: 36, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 1369, column: 4)
!13147 = !DILocation(line: 1369, column: 4, scope: !13140)
!13148 = !DILocation(line: 1370, column: 30, scope: !13146)
!13149 = !DILocation(line: 1370, column: 24, scope: !13146)
!13150 = !DILocation(line: 1370, column: 5, scope: !13146)
!13151 = !DILocation(line: 1370, column: 9, scope: !13146)
!13152 = !DILocation(line: 1370, column: 13, scope: !13146)
!13153 = !DILocation(line: 1370, column: 16, scope: !13146)
!13154 = !DILocation(line: 1370, column: 22, scope: !13146)
!13155 = !DILocation(line: 1369, column: 45, scope: !13146)
!13156 = !DILocation(line: 1369, column: 49, scope: !13146)
!13157 = !DILocation(line: 1369, column: 43, scope: !13146)
!13158 = !DILocation(line: 1369, column: 4, scope: !13146)
!13159 = distinct !{!13159, !13147, !13160}
!13160 = !DILocation(line: 1370, column: 30, scope: !13140)
!13161 = !DILocation(line: 1373, column: 16, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13137, file: !3, line: 1373, column: 4)
!13163 = !DILocation(line: 1373, column: 21, scope: !13162)
!13164 = !DILocation(line: 1373, column: 26, scope: !13162)
!13165 = !DILocation(line: 1373, column: 14, scope: !13162)
!13166 = !DILocation(line: 1373, column: 9, scope: !13162)
!13167 = !DILocation(line: 1373, column: 33, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13162, file: !3, line: 1373, column: 4)
!13169 = !DILocation(line: 1373, column: 4, scope: !13162)
!13170 = !DILocation(line: 1375, column: 9, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 1375, column: 9)
!13172 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 1373, column: 58)
!13173 = !DILocation(line: 1375, column: 15, scope: !13171)
!13174 = !DILocation(line: 1375, column: 23, scope: !13171)
!13175 = !DILocation(line: 1375, column: 26, scope: !13171)
!13176 = !DILocation(line: 1375, column: 9, scope: !13172)
!13177 = !DILocation(line: 1376, column: 26, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13171, file: !3, line: 1375, column: 33)
!13179 = !DILocation(line: 1376, column: 32, scope: !13178)
!13180 = !DILocation(line: 1376, column: 40, scope: !13178)
!13181 = !DILocation(line: 1376, column: 43, scope: !13178)
!13182 = !DILocation(line: 1376, column: 11, scope: !13178)
!13183 = !DILocation(line: 1376, column: 9, scope: !13178)
!13184 = !DILocation(line: 1377, column: 6, scope: !13178)
!13185 = !DILocation(line: 1377, column: 12, scope: !13178)
!13186 = !DILocation(line: 1377, column: 20, scope: !13178)
!13187 = !DILocation(line: 1377, column: 23, scope: !13178)
!13188 = !DILocation(line: 1377, column: 29, scope: !13178)
!13189 = !DILocation(line: 1378, column: 19, scope: !13178)
!13190 = !DILocation(line: 1378, column: 26, scope: !13178)
!13191 = !DILocation(line: 1378, column: 35, scope: !13178)
!13192 = !DILocation(line: 1378, column: 6, scope: !13178)
!13193 = !DILocation(line: 1379, column: 26, scope: !13178)
!13194 = !DILocation(line: 1379, column: 6, scope: !13178)
!13195 = !DILocation(line: 1380, column: 5, scope: !13178)
!13196 = !DILocation(line: 1381, column: 4, scope: !13172)
!13197 = !DILocation(line: 1373, column: 46, scope: !13168)
!13198 = !DILocation(line: 1373, column: 52, scope: !13168)
!13199 = !DILocation(line: 1373, column: 44, scope: !13168)
!13200 = !DILocation(line: 1373, column: 4, scope: !13168)
!13201 = distinct !{!13201, !13169, !13202}
!13202 = !DILocation(line: 1381, column: 4, scope: !13162)
!13203 = !DILocation(line: 1383, column: 4, scope: !13137)
!13204 = !DILocation(line: 1383, column: 11, scope: !13137)
!13205 = !DILocation(line: 1383, column: 21, scope: !13137)
!13206 = !DILocation(line: 1384, column: 3, scope: !13137)
!13207 = !DILocation(line: 1385, column: 2, scope: !13107)
!13208 = !DILocation(line: 1360, column: 50, scope: !13103)
!13209 = !DILocation(line: 1360, column: 57, scope: !13103)
!13210 = !DILocation(line: 1360, column: 60, scope: !13103)
!13211 = !DILocation(line: 1360, column: 48, scope: !13103)
!13212 = !DILocation(line: 1360, column: 2, scope: !13103)
!13213 = distinct !{!13213, !13104, !13214}
!13214 = !DILocation(line: 1385, column: 2, scope: !13097)
!13215 = !DILocation(line: 1386, column: 1, scope: !13037)
!13216 = distinct !DISubprogram(name: "flush_layer_node", scope: !3, file: !3, line: 1754, type: !13217, scopeLine: 1755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{!7, !4663, !4397, !389}
!13219 = !DILocalVariable(name: "sce", arg: 1, scope: !13216, file: !3, line: 1754, type: !4663)
!13220 = !DILocation(line: 1754, column: 45, scope: !13216)
!13221 = !DILocalVariable(name: "node", arg: 2, scope: !13216, file: !3, line: 1754, type: !4397)
!13222 = !DILocation(line: 1754, column: 59, scope: !13216)
!13223 = !DILocalVariable(name: "curtime", arg: 3, scope: !13216, file: !3, line: 1754, type: !389)
!13224 = !DILocation(line: 1754, column: 69, scope: !13216)
!13225 = !DILocalVariable(name: "itA", scope: !13216, file: !3, line: 1756, type: !5311)
!13226 = !DILocation(line: 1756, column: 14, scope: !13216)
!13227 = !DILocation(line: 1758, column: 19, scope: !13216)
!13228 = !DILocation(line: 1758, column: 2, scope: !13216)
!13229 = !DILocation(line: 1758, column: 8, scope: !13216)
!13230 = !DILocation(line: 1758, column: 17, scope: !13216)
!13231 = !DILocation(line: 1759, column: 14, scope: !13216)
!13232 = !DILocation(line: 1759, column: 20, scope: !13216)
!13233 = !DILocation(line: 1759, column: 2, scope: !13216)
!13234 = !DILocation(line: 1759, column: 8, scope: !13216)
!13235 = !DILocation(line: 1759, column: 12, scope: !13216)
!13236 = !DILocation(line: 1761, column: 13, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 1761, column: 2)
!13238 = !DILocation(line: 1761, column: 19, scope: !13237)
!13239 = !DILocation(line: 1761, column: 11, scope: !13237)
!13240 = !DILocation(line: 1761, column: 7, scope: !13237)
!13241 = !DILocation(line: 1761, column: 26, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 1761, column: 2)
!13243 = !DILocation(line: 1761, column: 2, scope: !13237)
!13244 = !DILocation(line: 1762, column: 7, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 1762, column: 7)
!13246 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 1761, column: 48)
!13247 = !DILocation(line: 1762, column: 12, scope: !13245)
!13248 = !DILocation(line: 1762, column: 18, scope: !13245)
!13249 = !DILocation(line: 1762, column: 23, scope: !13245)
!13250 = !DILocation(line: 1762, column: 7, scope: !13246)
!13251 = !DILocation(line: 1763, column: 8, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 1763, column: 8)
!13253 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 1762, column: 33)
!13254 = !DILocation(line: 1763, column: 13, scope: !13252)
!13255 = !DILocation(line: 1763, column: 19, scope: !13252)
!13256 = !DILocation(line: 1763, column: 31, scope: !13252)
!13257 = !DILocation(line: 1763, column: 28, scope: !13252)
!13258 = !DILocation(line: 1763, column: 8, scope: !13253)
!13259 = !DILocation(line: 1764, column: 33, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 1763, column: 40)
!13261 = !DILocation(line: 1764, column: 38, scope: !13260)
!13262 = !DILocation(line: 1764, column: 43, scope: !13260)
!13263 = !DILocation(line: 1764, column: 49, scope: !13260)
!13264 = !DILocation(line: 1764, column: 16, scope: !13260)
!13265 = !DILocation(line: 1764, column: 5, scope: !13260)
!13266 = !DILocation(line: 1764, column: 10, scope: !13260)
!13267 = !DILocation(line: 1764, column: 14, scope: !13260)
!13268 = !DILocation(line: 1765, column: 4, scope: !13260)
!13269 = !DILocation(line: 1767, column: 16, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 1766, column: 9)
!13271 = !DILocation(line: 1767, column: 21, scope: !13270)
!13272 = !DILocation(line: 1767, column: 27, scope: !13270)
!13273 = !DILocation(line: 1767, column: 5, scope: !13270)
!13274 = !DILocation(line: 1767, column: 10, scope: !13270)
!13275 = !DILocation(line: 1767, column: 14, scope: !13270)
!13276 = !DILocation(line: 1770, column: 17, scope: !13253)
!13277 = !DILocation(line: 1770, column: 22, scope: !13253)
!13278 = !DILocation(line: 1770, column: 4, scope: !13253)
!13279 = !DILocation(line: 1770, column: 10, scope: !13253)
!13280 = !DILocation(line: 1770, column: 14, scope: !13253)
!13281 = !DILocation(line: 1771, column: 3, scope: !13253)
!13282 = !DILocation(line: 1772, column: 2, scope: !13246)
!13283 = !DILocation(line: 1761, column: 37, scope: !13242)
!13284 = !DILocation(line: 1761, column: 42, scope: !13242)
!13285 = !DILocation(line: 1761, column: 35, scope: !13242)
!13286 = !DILocation(line: 1761, column: 2, scope: !13242)
!13287 = distinct !{!13287, !13243, !13288}
!13288 = !DILocation(line: 1772, column: 2, scope: !13237)
!13289 = !DILocation(line: 1774, column: 9, scope: !13216)
!13290 = !DILocation(line: 1774, column: 15, scope: !13216)
!13291 = !DILocation(line: 1774, column: 2, scope: !13216)
!13292 = distinct !DISubprogram(name: "animdata_use_time", scope: !3, file: !3, line: 1973, type: !13293, scopeLine: 1974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{!387, !6459}
!13295 = !DILocalVariable(name: "adt", arg: 1, scope: !13292, file: !3, line: 1973, type: !6459)
!13296 = !DILocation(line: 1973, column: 42, scope: !13292)
!13297 = !DILocalVariable(name: "nlt", scope: !13292, file: !3, line: 1975, type: !13298)
!13298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13299, size: 64)
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaTrack", file: !311, line: 682, baseType: !13300)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaTrack", file: !311, line: 673, size: 832, elements: !13301)
!13301 = !{!13302, !13304, !13305, !13306, !13307, !13308}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13300, file: !311, line: 674, baseType: !13303, size: 64)
!13303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13300, size: 64)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13300, file: !311, line: 674, baseType: !13303, size: 64, offset: 64)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !13300, file: !311, line: 676, baseType: !414, size: 128, offset: 128)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13300, file: !311, line: 678, baseType: !389, size: 32, offset: 256)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !13300, file: !311, line: 679, baseType: !389, size: 32, offset: 288)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13300, file: !311, line: 681, baseType: !404, size: 512, offset: 320)
!13309 = !DILocation(line: 1975, column: 12, scope: !13292)
!13310 = !DILocation(line: 1977, column: 6, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 1977, column: 6)
!13312 = !DILocation(line: 1977, column: 10, scope: !13311)
!13313 = !DILocation(line: 1977, column: 6, scope: !13292)
!13314 = !DILocation(line: 1977, column: 19, scope: !13311)
!13315 = !DILocation(line: 1980, column: 6, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 1980, column: 6)
!13317 = !DILocation(line: 1980, column: 11, scope: !13316)
!13318 = !DILocation(line: 1980, column: 18, scope: !13316)
!13319 = !DILocation(line: 1980, column: 21, scope: !13316)
!13320 = !DILocation(line: 1980, column: 26, scope: !13316)
!13321 = !DILocation(line: 1980, column: 34, scope: !13316)
!13322 = !DILocation(line: 1980, column: 41, scope: !13316)
!13323 = !DILocation(line: 1980, column: 6, scope: !13292)
!13324 = !DILocation(line: 1981, column: 3, scope: !13316)
!13325 = !DILocation(line: 1984, column: 13, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 1984, column: 2)
!13327 = !DILocation(line: 1984, column: 18, scope: !13326)
!13328 = !DILocation(line: 1984, column: 29, scope: !13326)
!13329 = !DILocation(line: 1984, column: 11, scope: !13326)
!13330 = !DILocation(line: 1984, column: 7, scope: !13326)
!13331 = !DILocation(line: 1984, column: 36, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 1984, column: 2)
!13333 = !DILocation(line: 1984, column: 2, scope: !13326)
!13334 = !DILocation(line: 1985, column: 7, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 1985, column: 7)
!13336 = distinct !DILexicalBlock(scope: !13332, file: !3, line: 1984, column: 58)
!13337 = !DILocation(line: 1985, column: 12, scope: !13335)
!13338 = !DILocation(line: 1985, column: 19, scope: !13335)
!13339 = !DILocation(line: 1985, column: 7, scope: !13336)
!13340 = !DILocation(line: 1986, column: 4, scope: !13335)
!13341 = !DILocation(line: 1987, column: 2, scope: !13336)
!13342 = !DILocation(line: 1984, column: 47, scope: !13332)
!13343 = !DILocation(line: 1984, column: 52, scope: !13332)
!13344 = !DILocation(line: 1984, column: 45, scope: !13332)
!13345 = !DILocation(line: 1984, column: 2, scope: !13332)
!13346 = distinct !{!13346, !13333, !13347}
!13347 = !DILocation(line: 1987, column: 2, scope: !13326)
!13348 = !DILocation(line: 2003, column: 6, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 2003, column: 6)
!13350 = !DILocation(line: 2003, column: 11, scope: !13349)
!13351 = !DILocation(line: 2003, column: 19, scope: !13349)
!13352 = !DILocation(line: 2003, column: 6, scope: !13292)
!13353 = !DILocation(line: 2004, column: 3, scope: !13349)
!13354 = !DILocation(line: 2006, column: 2, scope: !13292)
!13355 = !DILocation(line: 2007, column: 1, scope: !13292)
!13356 = distinct !DISubprogram(name: "object_modifiers_use_time", scope: !3, file: !3, line: 1933, type: !13357, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{!389, !349}
!13359 = !DILocalVariable(name: "ob", arg: 1, scope: !13356, file: !3, line: 1933, type: !349)
!13360 = !DILocation(line: 1933, column: 46, scope: !13356)
!13361 = !DILocalVariable(name: "md", scope: !13356, file: !3, line: 1935, type: !6010)
!13362 = !DILocation(line: 1935, column: 16, scope: !13356)
!13363 = !DILocation(line: 1938, column: 12, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 1938, column: 2)
!13365 = !DILocation(line: 1938, column: 16, scope: !13364)
!13366 = !DILocation(line: 1938, column: 26, scope: !13364)
!13367 = !DILocation(line: 1938, column: 10, scope: !13364)
!13368 = !DILocation(line: 1938, column: 7, scope: !13364)
!13369 = !DILocation(line: 1938, column: 33, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 1938, column: 2)
!13371 = !DILocation(line: 1938, column: 2, scope: !13364)
!13372 = !DILocation(line: 1939, column: 30, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13370, file: !3, line: 1939, column: 7)
!13374 = !DILocation(line: 1939, column: 7, scope: !13373)
!13375 = !DILocation(line: 1939, column: 7, scope: !13370)
!13376 = !DILocation(line: 1940, column: 4, scope: !13373)
!13377 = !DILocation(line: 1939, column: 32, scope: !13373)
!13378 = !DILocation(line: 1938, column: 42, scope: !13370)
!13379 = !DILocation(line: 1938, column: 46, scope: !13370)
!13380 = !DILocation(line: 1938, column: 40, scope: !13370)
!13381 = !DILocation(line: 1938, column: 2, scope: !13370)
!13382 = distinct !{!13382, !13371, !13383}
!13383 = !DILocation(line: 1940, column: 11, scope: !13364)
!13384 = !DILocation(line: 1943, column: 6, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 1943, column: 6)
!13386 = !DILocation(line: 1943, column: 10, scope: !13385)
!13387 = !DILocation(line: 1943, column: 6, scope: !13356)
!13388 = !DILocalVariable(name: "adt", scope: !13389, file: !3, line: 1944, type: !6459)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1943, column: 15)
!13390 = !DILocation(line: 1944, column: 13, scope: !13389)
!13391 = !DILocation(line: 1944, column: 19, scope: !13389)
!13392 = !DILocation(line: 1944, column: 23, scope: !13389)
!13393 = !DILocalVariable(name: "fcu", scope: !13389, file: !3, line: 1945, type: !12473)
!13394 = !DILocation(line: 1945, column: 11, scope: !13389)
!13395 = !DILocation(line: 1948, column: 7, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 1948, column: 7)
!13397 = !DILocation(line: 1948, column: 12, scope: !13396)
!13398 = !DILocation(line: 1948, column: 7, scope: !13389)
!13399 = !DILocation(line: 1949, column: 15, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 1949, column: 4)
!13401 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 1948, column: 20)
!13402 = !DILocation(line: 1949, column: 20, scope: !13400)
!13403 = !DILocation(line: 1949, column: 28, scope: !13400)
!13404 = !DILocation(line: 1949, column: 35, scope: !13400)
!13405 = !DILocation(line: 1949, column: 13, scope: !13400)
!13406 = !DILocation(line: 1949, column: 9, scope: !13400)
!13407 = !DILocation(line: 1949, column: 42, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1949, column: 4)
!13409 = !DILocation(line: 1949, column: 4, scope: !13400)
!13410 = !DILocation(line: 1950, column: 9, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 1950, column: 9)
!13412 = distinct !DILexicalBlock(scope: !13408, file: !3, line: 1949, column: 64)
!13413 = !DILocation(line: 1950, column: 14, scope: !13411)
!13414 = !DILocation(line: 1950, column: 23, scope: !13411)
!13415 = !DILocation(line: 1950, column: 33, scope: !13411)
!13416 = !DILocation(line: 1950, column: 38, scope: !13411)
!13417 = !DILocation(line: 1950, column: 26, scope: !13411)
!13418 = !DILocation(line: 1950, column: 9, scope: !13412)
!13419 = !DILocation(line: 1951, column: 6, scope: !13411)
!13420 = !DILocation(line: 1952, column: 4, scope: !13412)
!13421 = !DILocation(line: 1949, column: 53, scope: !13408)
!13422 = !DILocation(line: 1949, column: 58, scope: !13408)
!13423 = !DILocation(line: 1949, column: 51, scope: !13408)
!13424 = !DILocation(line: 1949, column: 4, scope: !13408)
!13425 = distinct !{!13425, !13409, !13426}
!13426 = !DILocation(line: 1952, column: 4, scope: !13400)
!13427 = !DILocation(line: 1953, column: 3, scope: !13401)
!13428 = !DILocation(line: 1961, column: 14, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 1961, column: 3)
!13430 = !DILocation(line: 1961, column: 19, scope: !13429)
!13431 = !DILocation(line: 1961, column: 27, scope: !13429)
!13432 = !DILocation(line: 1961, column: 12, scope: !13429)
!13433 = !DILocation(line: 1961, column: 8, scope: !13429)
!13434 = !DILocation(line: 1961, column: 34, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13429, file: !3, line: 1961, column: 3)
!13436 = !DILocation(line: 1961, column: 3, scope: !13429)
!13437 = !DILocation(line: 1962, column: 8, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 1962, column: 8)
!13439 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 1961, column: 56)
!13440 = !DILocation(line: 1962, column: 13, scope: !13438)
!13441 = !DILocation(line: 1962, column: 22, scope: !13438)
!13442 = !DILocation(line: 1962, column: 32, scope: !13438)
!13443 = !DILocation(line: 1962, column: 37, scope: !13438)
!13444 = !DILocation(line: 1962, column: 25, scope: !13438)
!13445 = !DILocation(line: 1962, column: 8, scope: !13439)
!13446 = !DILocation(line: 1963, column: 5, scope: !13438)
!13447 = !DILocation(line: 1964, column: 3, scope: !13439)
!13448 = !DILocation(line: 1961, column: 45, scope: !13435)
!13449 = !DILocation(line: 1961, column: 50, scope: !13435)
!13450 = !DILocation(line: 1961, column: 43, scope: !13435)
!13451 = !DILocation(line: 1961, column: 3, scope: !13435)
!13452 = distinct !{!13452, !13436, !13453}
!13453 = !DILocation(line: 1964, column: 3, scope: !13429)
!13454 = !DILocation(line: 1968, column: 2, scope: !13389)
!13455 = !DILocation(line: 1970, column: 2, scope: !13356)
!13456 = !DILocation(line: 1971, column: 1, scope: !13356)
!13457 = distinct !DISubprogram(name: "dag_invisible_dependencies_flush", scope: !3, file: !3, line: 1449, type: !7797, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13458 = !DILocalVariable(name: "scene", arg: 1, scope: !13457, file: !3, line: 1449, type: !4663)
!13459 = !DILocation(line: 1449, column: 53, scope: !13457)
!13460 = !DILocalVariable(name: "root_node", scope: !13457, file: !3, line: 1451, type: !4397)
!13461 = !DILocation(line: 1451, column: 11, scope: !13457)
!13462 = !DILocation(line: 1451, column: 23, scope: !13457)
!13463 = !DILocation(line: 1451, column: 30, scope: !13457)
!13464 = !DILocation(line: 1451, column: 38, scope: !13457)
!13465 = !DILocation(line: 1451, column: 46, scope: !13457)
!13466 = !DILocalVariable(name: "node", scope: !13457, file: !3, line: 1451, type: !4397)
!13467 = !DILocation(line: 1451, column: 54, scope: !13457)
!13468 = !DILocalVariable(name: "queue", scope: !13457, file: !3, line: 1452, type: !4685)
!13469 = !DILocation(line: 1452, column: 16, scope: !13457)
!13470 = !DILocation(line: 1454, column: 14, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13457, file: !3, line: 1454, column: 2)
!13472 = !DILocation(line: 1454, column: 12, scope: !13471)
!13473 = !DILocation(line: 1454, column: 7, scope: !13471)
!13474 = !DILocation(line: 1454, column: 25, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 1454, column: 2)
!13476 = !DILocation(line: 1454, column: 30, scope: !13475)
!13477 = !DILocation(line: 1454, column: 2, scope: !13471)
!13478 = !DILocation(line: 1455, column: 3, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13475, file: !3, line: 1454, column: 58)
!13480 = !DILocation(line: 1455, column: 9, scope: !13479)
!13481 = !DILocation(line: 1455, column: 15, scope: !13479)
!13482 = !DILocation(line: 1456, column: 2, scope: !13479)
!13483 = !DILocation(line: 1454, column: 46, scope: !13475)
!13484 = !DILocation(line: 1454, column: 52, scope: !13475)
!13485 = !DILocation(line: 1454, column: 44, scope: !13475)
!13486 = !DILocation(line: 1454, column: 2, scope: !13475)
!13487 = distinct !{!13487, !13477, !13488}
!13488 = !DILocation(line: 1456, column: 2, scope: !13471)
!13489 = !DILocation(line: 1458, column: 10, scope: !13457)
!13490 = !DILocation(line: 1458, column: 8, scope: !13457)
!13491 = !DILocation(line: 1460, column: 14, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13457, file: !3, line: 1460, column: 2)
!13493 = !DILocation(line: 1460, column: 12, scope: !13492)
!13494 = !DILocation(line: 1460, column: 7, scope: !13492)
!13495 = !DILocation(line: 1460, column: 25, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13492, file: !3, line: 1460, column: 2)
!13497 = !DILocation(line: 1460, column: 30, scope: !13496)
!13498 = !DILocation(line: 1460, column: 2, scope: !13492)
!13499 = !DILocation(line: 1461, column: 7, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 1461, column: 7)
!13501 = distinct !DILexicalBlock(scope: !13496, file: !3, line: 1460, column: 58)
!13502 = !DILocation(line: 1461, column: 13, scope: !13500)
!13503 = !DILocation(line: 1461, column: 19, scope: !13500)
!13504 = !DILocation(line: 1461, column: 7, scope: !13501)
!13505 = !DILocation(line: 1462, column: 15, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13500, file: !3, line: 1461, column: 33)
!13507 = !DILocation(line: 1462, column: 22, scope: !13506)
!13508 = !DILocation(line: 1462, column: 4, scope: !13506)
!13509 = !DILocation(line: 1463, column: 4, scope: !13506)
!13510 = !DILocation(line: 1463, column: 10, scope: !13506)
!13511 = !DILocation(line: 1463, column: 16, scope: !13506)
!13512 = !DILocation(line: 1465, column: 4, scope: !13506)
!13513 = !DILocation(line: 1465, column: 11, scope: !13506)
!13514 = !DILocation(line: 1465, column: 18, scope: !13506)
!13515 = !DILocalVariable(name: "current_node", scope: !13516, file: !3, line: 1466, type: !4397)
!13516 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 1465, column: 25)
!13517 = !DILocation(line: 1466, column: 14, scope: !13516)
!13518 = !DILocation(line: 1466, column: 48, scope: !13516)
!13519 = !DILocation(line: 1466, column: 29, scope: !13516)
!13520 = !DILocalVariable(name: "itA", scope: !13516, file: !3, line: 1467, type: !5311)
!13521 = !DILocation(line: 1467, column: 17, scope: !13516)
!13522 = !DILocalVariable(name: "skip", scope: !13516, file: !3, line: 1468, type: !1940)
!13523 = !DILocation(line: 1468, column: 10, scope: !13516)
!13524 = !DILocation(line: 1470, column: 16, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 1470, column: 5)
!13526 = !DILocation(line: 1470, column: 30, scope: !13525)
!13527 = !DILocation(line: 1470, column: 14, scope: !13525)
!13528 = !DILocation(line: 1470, column: 10, scope: !13525)
!13529 = !DILocation(line: 1470, column: 37, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13525, file: !3, line: 1470, column: 5)
!13531 = !DILocation(line: 1470, column: 5, scope: !13525)
!13532 = !DILocation(line: 1471, column: 10, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13534, file: !3, line: 1471, column: 10)
!13534 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1470, column: 59)
!13535 = !DILocation(line: 1471, column: 15, scope: !13533)
!13536 = !DILocation(line: 1471, column: 21, scope: !13533)
!13537 = !DILocation(line: 1471, column: 27, scope: !13533)
!13538 = !DILocation(line: 1471, column: 10, scope: !13534)
!13539 = !DILocation(line: 1472, column: 7, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13533, file: !3, line: 1471, column: 41)
!13541 = !DILocation(line: 1472, column: 12, scope: !13540)
!13542 = !DILocation(line: 1472, column: 18, scope: !13540)
!13543 = !DILocation(line: 1472, column: 24, scope: !13540)
!13544 = !DILocation(line: 1473, column: 18, scope: !13540)
!13545 = !DILocation(line: 1473, column: 25, scope: !13540)
!13546 = !DILocation(line: 1473, column: 30, scope: !13540)
!13547 = !DILocation(line: 1473, column: 7, scope: !13540)
!13548 = !DILocation(line: 1474, column: 12, scope: !13540)
!13549 = !DILocation(line: 1475, column: 7, scope: !13540)
!13550 = !DILocation(line: 1477, column: 5, scope: !13534)
!13551 = !DILocation(line: 1470, column: 48, scope: !13530)
!13552 = !DILocation(line: 1470, column: 53, scope: !13530)
!13553 = !DILocation(line: 1470, column: 46, scope: !13530)
!13554 = !DILocation(line: 1470, column: 5, scope: !13530)
!13555 = distinct !{!13555, !13531, !13556}
!13556 = !DILocation(line: 1477, column: 5, scope: !13525)
!13557 = !DILocation(line: 1479, column: 10, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 1479, column: 9)
!13559 = !DILocation(line: 1479, column: 9, scope: !13516)
!13560 = !DILocation(line: 1480, column: 31, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 1479, column: 16)
!13562 = !DILocation(line: 1480, column: 21, scope: !13561)
!13563 = !DILocation(line: 1480, column: 19, scope: !13561)
!13564 = !DILocation(line: 1482, column: 10, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13561, file: !3, line: 1482, column: 10)
!13566 = !DILocation(line: 1482, column: 24, scope: !13565)
!13567 = !DILocation(line: 1482, column: 29, scope: !13565)
!13568 = !DILocation(line: 1482, column: 10, scope: !13561)
!13569 = !DILocalVariable(name: "current_object", scope: !13570, file: !3, line: 1483, type: !349)
!13570 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 1482, column: 39)
!13571 = !DILocation(line: 1483, column: 15, scope: !13570)
!13572 = !DILocation(line: 1483, column: 32, scope: !13570)
!13573 = !DILocation(line: 1483, column: 46, scope: !13570)
!13574 = !DILocation(line: 1484, column: 41, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1484, column: 11)
!13576 = !DILocation(line: 1484, column: 11, scope: !13575)
!13577 = !DILocation(line: 1484, column: 11, scope: !13570)
!13578 = !DILocation(line: 1485, column: 19, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 1485, column: 8)
!13580 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 1484, column: 58)
!13581 = !DILocation(line: 1485, column: 33, scope: !13579)
!13582 = !DILocation(line: 1485, column: 17, scope: !13579)
!13583 = !DILocation(line: 1485, column: 13, scope: !13579)
!13584 = !DILocation(line: 1485, column: 40, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13579, file: !3, line: 1485, column: 8)
!13586 = !DILocation(line: 1485, column: 8, scope: !13579)
!13587 = !DILocation(line: 1486, column: 13, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !3, line: 1486, column: 13)
!13589 = distinct !DILexicalBlock(scope: !13585, file: !3, line: 1485, column: 62)
!13590 = !DILocation(line: 1486, column: 18, scope: !13588)
!13591 = !DILocation(line: 1486, column: 24, scope: !13588)
!13592 = !DILocation(line: 1486, column: 29, scope: !13588)
!13593 = !DILocation(line: 1486, column: 13, scope: !13589)
!13594 = !DILocalVariable(name: "object", scope: !13595, file: !3, line: 1487, type: !349)
!13595 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1486, column: 39)
!13596 = !DILocation(line: 1487, column: 18, scope: !13595)
!13597 = !DILocation(line: 1487, column: 27, scope: !13595)
!13598 = !DILocation(line: 1487, column: 32, scope: !13595)
!13599 = !DILocation(line: 1487, column: 38, scope: !13595)
!13600 = !DILocation(line: 1488, column: 45, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 1488, column: 14)
!13602 = !DILocation(line: 1488, column: 14, scope: !13601)
!13603 = !DILocation(line: 1488, column: 14, scope: !13595)
!13604 = !DILocation(line: 1489, column: 11, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13601, file: !3, line: 1488, column: 54)
!13606 = !DILocation(line: 1489, column: 27, scope: !13605)
!13607 = !DILocation(line: 1489, column: 34, scope: !13605)
!13608 = !DILocation(line: 1490, column: 10, scope: !13605)
!13609 = !DILocation(line: 1491, column: 9, scope: !13595)
!13610 = !DILocation(line: 1492, column: 8, scope: !13589)
!13611 = !DILocation(line: 1485, column: 51, scope: !13585)
!13612 = !DILocation(line: 1485, column: 56, scope: !13585)
!13613 = !DILocation(line: 1485, column: 49, scope: !13585)
!13614 = !DILocation(line: 1485, column: 8, scope: !13585)
!13615 = distinct !{!13615, !13586, !13616}
!13616 = !DILocation(line: 1492, column: 8, scope: !13579)
!13617 = !DILocation(line: 1493, column: 7, scope: !13580)
!13618 = !DILocation(line: 1494, column: 6, scope: !13570)
!13619 = !DILocation(line: 1495, column: 6, scope: !13561)
!13620 = !DILocation(line: 1495, column: 12, scope: !13561)
!13621 = !DILocation(line: 1495, column: 18, scope: !13561)
!13622 = !DILocation(line: 1496, column: 5, scope: !13561)
!13623 = distinct !{!13623, !13512, !13624}
!13624 = !DILocation(line: 1497, column: 4, scope: !13506)
!13625 = !DILocation(line: 1498, column: 3, scope: !13506)
!13626 = !DILocation(line: 1499, column: 2, scope: !13501)
!13627 = !DILocation(line: 1460, column: 46, scope: !13496)
!13628 = !DILocation(line: 1460, column: 52, scope: !13496)
!13629 = !DILocation(line: 1460, column: 44, scope: !13496)
!13630 = !DILocation(line: 1460, column: 2, scope: !13496)
!13631 = distinct !{!13631, !13498, !13632}
!13632 = !DILocation(line: 1499, column: 2, scope: !13492)
!13633 = !DILocation(line: 1501, column: 15, scope: !13457)
!13634 = !DILocation(line: 1501, column: 2, scope: !13457)
!13635 = !DILocation(line: 1502, column: 1, scope: !13457)
!13636 = distinct !DISubprogram(name: "check_object_needs_evaluation", scope: !3, file: !3, line: 1407, type: !13637, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!1940, !349}
!13639 = !DILocalVariable(name: "object", arg: 1, scope: !13636, file: !3, line: 1407, type: !349)
!13640 = !DILocation(line: 1407, column: 51, scope: !13636)
!13641 = !DILocation(line: 1409, column: 6, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 1409, column: 6)
!13643 = !DILocation(line: 1409, column: 14, scope: !13642)
!13644 = !DILocation(line: 1409, column: 21, scope: !13642)
!13645 = !DILocation(line: 1409, column: 6, scope: !13636)
!13646 = !DILocation(line: 1411, column: 3, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 1409, column: 38)
!13648 = !DILocation(line: 1414, column: 6, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 1414, column: 6)
!13650 = !DILocation(line: 1414, column: 14, scope: !13649)
!13651 = !DILocation(line: 1414, column: 19, scope: !13649)
!13652 = !DILocation(line: 1414, column: 6, scope: !13636)
!13653 = !DILocation(line: 1415, column: 10, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 1414, column: 31)
!13655 = !DILocation(line: 1415, column: 18, scope: !13654)
!13656 = !DILocation(line: 1415, column: 31, scope: !13654)
!13657 = !DILocation(line: 1415, column: 3, scope: !13654)
!13658 = !DILocation(line: 1417, column: 11, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 1417, column: 11)
!13660 = !DILocation(line: 1417, column: 11, scope: !13649)
!13661 = !DILocation(line: 1418, column: 10, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 1417, column: 81)
!13663 = !DILocation(line: 1418, column: 18, scope: !13662)
!13664 = !DILocation(line: 1418, column: 30, scope: !13662)
!13665 = !DILocation(line: 1418, column: 3, scope: !13662)
!13666 = !DILocation(line: 1421, column: 2, scope: !13636)
!13667 = !DILocation(line: 1422, column: 1, scope: !13636)
!13668 = distinct !DISubprogram(name: "check_object_tagged_for_update", scope: !3, file: !3, line: 1425, type: !13637, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13669 = !DILocalVariable(name: "object", arg: 1, scope: !13668, file: !3, line: 1425, type: !349)
!13670 = !DILocation(line: 1425, column: 52, scope: !13668)
!13671 = !DILocation(line: 1427, column: 6, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 1427, column: 6)
!13673 = !DILocation(line: 1427, column: 14, scope: !13672)
!13674 = !DILocation(line: 1427, column: 21, scope: !13672)
!13675 = !DILocation(line: 1427, column: 6, scope: !13668)
!13676 = !DILocation(line: 1428, column: 3, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 1427, column: 38)
!13678 = !DILocation(line: 1431, column: 6, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 1431, column: 6)
!13680 = !DILocation(line: 1431, column: 6, scope: !13668)
!13681 = !DILocalVariable(name: "data_id", scope: !13682, file: !3, line: 1432, type: !368)
!13682 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 1431, column: 85)
!13683 = !DILocation(line: 1432, column: 7, scope: !13682)
!13684 = !DILocation(line: 1432, column: 17, scope: !13682)
!13685 = !DILocation(line: 1432, column: 25, scope: !13682)
!13686 = !DILocation(line: 1433, column: 11, scope: !13682)
!13687 = !DILocation(line: 1433, column: 20, scope: !13682)
!13688 = !DILocation(line: 1433, column: 25, scope: !13682)
!13689 = !DILocation(line: 1433, column: 65, scope: !13682)
!13690 = !DILocation(line: 1433, column: 10, scope: !13682)
!13691 = !DILocation(line: 1433, column: 3, scope: !13682)
!13692 = !DILocation(line: 1436, column: 2, scope: !13668)
!13693 = !DILocation(line: 1437, column: 1, scope: !13668)
!13694 = distinct !DISubprogram(name: "dag_editors_id_update", scope: !3, file: !3, line: 1332, type: !4593, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13695 = !DILocalVariable(name: "bmain", arg: 1, scope: !13694, file: !3, line: 1332, type: !4595)
!13696 = !DILocation(line: 1332, column: 41, scope: !13694)
!13697 = !DILocalVariable(name: "id", arg: 2, scope: !13694, file: !3, line: 1332, type: !368)
!13698 = !DILocation(line: 1332, column: 52, scope: !13694)
!13699 = !DILocation(line: 1334, column: 6, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13694, file: !3, line: 1334, column: 6)
!13701 = !DILocation(line: 1334, column: 6, scope: !13694)
!13702 = !DILocation(line: 1335, column: 3, scope: !13700)
!13703 = !DILocation(line: 1335, column: 21, scope: !13700)
!13704 = !DILocation(line: 1335, column: 28, scope: !13700)
!13705 = !DILocation(line: 1336, column: 1, scope: !13694)
!13706 = distinct !DISubprogram(name: "dag_id_flush_update__isDependentTexture", scope: !3, file: !3, line: 2391, type: !13707, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13707 = !DISubroutineType(types: !13708)
!13708 = !{null, !348, !349, !13709}
!13709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!13710 = !DILocalVariable(name: "userData", arg: 1, scope: !13706, file: !3, line: 2391, type: !348)
!13711 = !DILocation(line: 2391, column: 59, scope: !13706)
!13712 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !13706, file: !3, line: 2391, type: !349)
!13713 = !DILocation(line: 2391, column: 77, scope: !13706)
!13714 = !DILocalVariable(name: "idpoin", arg: 3, scope: !13706, file: !3, line: 2391, type: !13709)
!13715 = !DILocation(line: 2391, column: 94, scope: !13706)
!13716 = !DILocalVariable(name: "data", scope: !13706, file: !3, line: 2393, type: !13717)
!13717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13718, size: 64)
!13718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13706, file: !3, line: 2393, size: 128, elements: !13719)
!13719 = !{!13720, !13721}
!13720 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13718, file: !3, line: 2393, baseType: !368, size: 64)
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "is_dependent", scope: !13718, file: !3, line: 2393, baseType: !1940, size: 8, offset: 64)
!13722 = !DILocation(line: 2393, column: 41, scope: !13706)
!13723 = !DILocation(line: 2393, column: 48, scope: !13706)
!13724 = !DILocation(line: 2395, column: 7, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 2395, column: 6)
!13726 = !DILocation(line: 2395, column: 6, scope: !13725)
!13727 = !DILocation(line: 2395, column: 14, scope: !13725)
!13728 = !DILocation(line: 2395, column: 17, scope: !13725)
!13729 = !DILocation(line: 2395, column: 37, scope: !13725)
!13730 = !DILocation(line: 2395, column: 6, scope: !13706)
!13731 = !DILocation(line: 2396, column: 7, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 2396, column: 7)
!13733 = distinct !DILexicalBlock(scope: !13725, file: !3, line: 2395, column: 47)
!13734 = !DILocation(line: 2396, column: 13, scope: !13732)
!13735 = !DILocation(line: 2396, column: 21, scope: !13732)
!13736 = !DILocation(line: 2396, column: 20, scope: !13732)
!13737 = !DILocation(line: 2396, column: 16, scope: !13732)
!13738 = !DILocation(line: 2396, column: 7, scope: !13733)
!13739 = !DILocation(line: 2397, column: 4, scope: !13732)
!13740 = !DILocation(line: 2397, column: 10, scope: !13732)
!13741 = !DILocation(line: 2397, column: 23, scope: !13732)
!13742 = !DILocation(line: 2398, column: 2, scope: !13733)
!13743 = !DILocation(line: 2399, column: 1, scope: !13706)
!13744 = distinct !DISubprogram(name: "dag_node_print_dependencies", scope: !3, file: !3, line: 1156, type: !13745, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13745 = !DISubroutineType(types: !13746)
!13746 = !{null, !5278, !4397}
!13747 = !DILocalVariable(name: "dag", arg: 1, scope: !13744, file: !3, line: 1156, type: !5278)
!13748 = !DILocation(line: 1156, column: 52, scope: !13744)
!13749 = !DILocalVariable(name: "node", arg: 2, scope: !13744, file: !3, line: 1156, type: !4397)
!13750 = !DILocation(line: 1156, column: 66, scope: !13744)
!13751 = !DILocalVariable(name: "itA", scope: !13744, file: !3, line: 1158, type: !5311)
!13752 = !DILocation(line: 1158, column: 14, scope: !13744)
!13753 = !DILocation(line: 1160, column: 43, scope: !13744)
!13754 = !DILocation(line: 1160, column: 48, scope: !13744)
!13755 = !DILocation(line: 1160, column: 29, scope: !13744)
!13756 = !DILocation(line: 1160, column: 2, scope: !13744)
!13757 = !DILocation(line: 1162, column: 13, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13744, file: !3, line: 1162, column: 2)
!13759 = !DILocation(line: 1162, column: 19, scope: !13758)
!13760 = !DILocation(line: 1162, column: 11, scope: !13758)
!13761 = !DILocation(line: 1162, column: 7, scope: !13758)
!13762 = !DILocation(line: 1162, column: 27, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13758, file: !3, line: 1162, column: 2)
!13764 = !DILocation(line: 1162, column: 2, scope: !13758)
!13765 = !DILocation(line: 1163, column: 45, scope: !13763)
!13766 = !DILocation(line: 1163, column: 50, scope: !13763)
!13767 = !DILocation(line: 1163, column: 55, scope: !13763)
!13768 = !DILocation(line: 1163, column: 31, scope: !13763)
!13769 = !DILocation(line: 1163, column: 62, scope: !13763)
!13770 = !DILocation(line: 1163, column: 67, scope: !13763)
!13771 = !DILocation(line: 1163, column: 3, scope: !13763)
!13772 = !DILocation(line: 1162, column: 38, scope: !13763)
!13773 = !DILocation(line: 1162, column: 43, scope: !13763)
!13774 = !DILocation(line: 1162, column: 36, scope: !13763)
!13775 = !DILocation(line: 1162, column: 2, scope: !13763)
!13776 = distinct !{!13776, !13764, !13777}
!13777 = !DILocation(line: 1163, column: 71, scope: !13758)
!13778 = !DILocation(line: 1164, column: 2, scope: !13744)
!13779 = !DILocation(line: 1165, column: 1, scope: !13744)
!13780 = distinct !DISubprogram(name: "dag_node_recurs_level", scope: !3, file: !3, line: 1201, type: !13781, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13781 = !DISubroutineType(types: !13782)
!13782 = !{!389, !4397, !389}
!13783 = !DILocalVariable(name: "node", arg: 1, scope: !13780, file: !3, line: 1201, type: !4397)
!13784 = !DILocation(line: 1201, column: 43, scope: !13780)
!13785 = !DILocalVariable(name: "level", arg: 2, scope: !13780, file: !3, line: 1201, type: !389)
!13786 = !DILocation(line: 1201, column: 53, scope: !13780)
!13787 = !DILocalVariable(name: "itA", scope: !13780, file: !3, line: 1203, type: !5311)
!13788 = !DILocation(line: 1203, column: 14, scope: !13780)
!13789 = !DILocalVariable(name: "newlevel", scope: !13780, file: !3, line: 1204, type: !389)
!13790 = !DILocation(line: 1204, column: 6, scope: !13780)
!13791 = !DILocation(line: 1206, column: 2, scope: !13780)
!13792 = !DILocation(line: 1206, column: 8, scope: !13780)
!13793 = !DILocation(line: 1206, column: 14, scope: !13780)
!13794 = !DILocation(line: 1207, column: 13, scope: !13780)
!13795 = !DILocation(line: 1207, column: 11, scope: !13780)
!13796 = !DILocation(line: 1209, column: 13, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 1209, column: 2)
!13798 = !DILocation(line: 1209, column: 19, scope: !13797)
!13799 = !DILocation(line: 1209, column: 11, scope: !13797)
!13800 = !DILocation(line: 1209, column: 7, scope: !13797)
!13801 = !DILocation(line: 1209, column: 27, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13797, file: !3, line: 1209, column: 2)
!13803 = !DILocation(line: 1209, column: 2, scope: !13797)
!13804 = !DILocation(line: 1210, column: 7, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 1210, column: 7)
!13806 = distinct !DILexicalBlock(scope: !13802, file: !3, line: 1209, column: 49)
!13807 = !DILocation(line: 1210, column: 12, scope: !13805)
!13808 = !DILocation(line: 1210, column: 18, scope: !13805)
!13809 = !DILocation(line: 1210, column: 24, scope: !13805)
!13810 = !DILocation(line: 1210, column: 7, scope: !13806)
!13811 = !DILocation(line: 1211, column: 54, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 1210, column: 38)
!13813 = !DILocation(line: 1211, column: 59, scope: !13812)
!13814 = !DILocation(line: 1211, column: 65, scope: !13812)
!13815 = !DILocation(line: 1211, column: 32, scope: !13812)
!13816 = !DILocation(line: 1211, column: 4, scope: !13812)
!13817 = !DILocation(line: 1211, column: 9, scope: !13812)
!13818 = !DILocation(line: 1211, column: 15, scope: !13812)
!13819 = !DILocation(line: 1211, column: 30, scope: !13812)
!13820 = !DILocation(line: 1212, column: 15, scope: !13812)
!13821 = !DILocation(line: 1212, column: 13, scope: !13812)
!13822 = !DILocation(line: 1213, column: 3, scope: !13812)
!13823 = !DILocation(line: 1215, column: 15, scope: !13805)
!13824 = !DILocation(line: 1215, column: 13, scope: !13805)
!13825 = !DILocation(line: 1216, column: 2, scope: !13806)
!13826 = !DILocation(line: 1209, column: 38, scope: !13802)
!13827 = !DILocation(line: 1209, column: 43, scope: !13802)
!13828 = !DILocation(line: 1209, column: 36, scope: !13802)
!13829 = !DILocation(line: 1209, column: 2, scope: !13802)
!13830 = distinct !{!13830, !13803, !13831}
!13831 = !DILocation(line: 1216, column: 2, scope: !13797)
!13832 = !DILocation(line: 1218, column: 9, scope: !13780)
!13833 = !DILocation(line: 1218, column: 2, scope: !13780)
!13834 = distinct !DISubprogram(name: "dag_node_print_dependency_cycle", scope: !3, file: !3, line: 1189, type: !13835, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13835 = !DISubroutineType(types: !13836)
!13836 = !{null, !5278, !4397, !4397, !799}
!13837 = !DILocalVariable(name: "dag", arg: 1, scope: !13834, file: !3, line: 1189, type: !5278)
!13838 = !DILocation(line: 1189, column: 56, scope: !13834)
!13839 = !DILocalVariable(name: "startnode", arg: 2, scope: !13834, file: !3, line: 1189, type: !4397)
!13840 = !DILocation(line: 1189, column: 70, scope: !13834)
!13841 = !DILocalVariable(name: "endnode", arg: 3, scope: !13834, file: !3, line: 1189, type: !4397)
!13842 = !DILocation(line: 1189, column: 90, scope: !13834)
!13843 = !DILocalVariable(name: "name", arg: 4, scope: !13834, file: !3, line: 1189, type: !799)
!13844 = !DILocation(line: 1189, column: 111, scope: !13834)
!13845 = !DILocalVariable(name: "node", scope: !13834, file: !3, line: 1191, type: !4397)
!13846 = !DILocation(line: 1191, column: 11, scope: !13834)
!13847 = !DILocation(line: 1193, column: 14, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13834, file: !3, line: 1193, column: 2)
!13849 = !DILocation(line: 1193, column: 19, scope: !13848)
!13850 = !DILocation(line: 1193, column: 27, scope: !13848)
!13851 = !DILocation(line: 1193, column: 12, scope: !13848)
!13852 = !DILocation(line: 1193, column: 7, scope: !13848)
!13853 = !DILocation(line: 1193, column: 34, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 1193, column: 2)
!13855 = !DILocation(line: 1193, column: 2, scope: !13848)
!13856 = !DILocation(line: 1194, column: 3, scope: !13854)
!13857 = !DILocation(line: 1194, column: 9, scope: !13854)
!13858 = !DILocation(line: 1194, column: 15, scope: !13854)
!13859 = !DILocation(line: 1193, column: 47, scope: !13854)
!13860 = !DILocation(line: 1193, column: 53, scope: !13854)
!13861 = !DILocation(line: 1193, column: 45, scope: !13854)
!13862 = !DILocation(line: 1193, column: 2, scope: !13854)
!13863 = distinct !{!13863, !13855, !13864}
!13864 = !DILocation(line: 1194, column: 17, scope: !13848)
!13865 = !DILocation(line: 1196, column: 59, scope: !13834)
!13866 = !DILocation(line: 1196, column: 64, scope: !13834)
!13867 = !DILocation(line: 1196, column: 45, scope: !13834)
!13868 = !DILocation(line: 1196, column: 88, scope: !13834)
!13869 = !DILocation(line: 1196, column: 93, scope: !13834)
!13870 = !DILocation(line: 1196, column: 74, scope: !13834)
!13871 = !DILocation(line: 1196, column: 105, scope: !13834)
!13872 = !DILocation(line: 1196, column: 2, scope: !13834)
!13873 = !DILocation(line: 1197, column: 35, scope: !13834)
!13874 = !DILocation(line: 1197, column: 40, scope: !13834)
!13875 = !DILocation(line: 1197, column: 51, scope: !13834)
!13876 = !DILocation(line: 1197, column: 2, scope: !13834)
!13877 = !DILocation(line: 1198, column: 2, scope: !13834)
!13878 = !DILocation(line: 1199, column: 1, scope: !13834)
!13879 = distinct !DISubprogram(name: "dag_node_print_dependency_recurs", scope: !3, file: !3, line: 1167, type: !13880, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4676)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!389, !5278, !4397, !4397}
!13882 = !DILocalVariable(name: "dag", arg: 1, scope: !13879, file: !3, line: 1167, type: !5278)
!13883 = !DILocation(line: 1167, column: 56, scope: !13879)
!13884 = !DILocalVariable(name: "node", arg: 2, scope: !13879, file: !3, line: 1167, type: !4397)
!13885 = !DILocation(line: 1167, column: 70, scope: !13879)
!13886 = !DILocalVariable(name: "endnode", arg: 3, scope: !13879, file: !3, line: 1167, type: !4397)
!13887 = !DILocation(line: 1167, column: 85, scope: !13879)
!13888 = !DILocalVariable(name: "itA", scope: !13879, file: !3, line: 1169, type: !5311)
!13889 = !DILocation(line: 1169, column: 14, scope: !13879)
!13890 = !DILocation(line: 1171, column: 6, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 1171, column: 6)
!13892 = !DILocation(line: 1171, column: 12, scope: !13891)
!13893 = !DILocation(line: 1171, column: 18, scope: !13891)
!13894 = !DILocation(line: 1171, column: 6, scope: !13879)
!13895 = !DILocation(line: 1172, column: 3, scope: !13891)
!13896 = !DILocation(line: 1174, column: 2, scope: !13879)
!13897 = !DILocation(line: 1174, column: 8, scope: !13879)
!13898 = !DILocation(line: 1174, column: 14, scope: !13879)
!13899 = !DILocation(line: 1176, column: 6, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 1176, column: 6)
!13901 = !DILocation(line: 1176, column: 14, scope: !13900)
!13902 = !DILocation(line: 1176, column: 11, scope: !13900)
!13903 = !DILocation(line: 1176, column: 6, scope: !13879)
!13904 = !DILocation(line: 1177, column: 3, scope: !13900)
!13905 = !DILocation(line: 1179, column: 13, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 1179, column: 2)
!13907 = !DILocation(line: 1179, column: 19, scope: !13906)
!13908 = !DILocation(line: 1179, column: 11, scope: !13906)
!13909 = !DILocation(line: 1179, column: 7, scope: !13906)
!13910 = !DILocation(line: 1179, column: 27, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13906, file: !3, line: 1179, column: 2)
!13912 = !DILocation(line: 1179, column: 2, scope: !13906)
!13913 = !DILocation(line: 1180, column: 40, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 1180, column: 7)
!13915 = distinct !DILexicalBlock(scope: !13911, file: !3, line: 1179, column: 49)
!13916 = !DILocation(line: 1180, column: 45, scope: !13914)
!13917 = !DILocation(line: 1180, column: 50, scope: !13914)
!13918 = !DILocation(line: 1180, column: 56, scope: !13914)
!13919 = !DILocation(line: 1180, column: 7, scope: !13914)
!13920 = !DILocation(line: 1180, column: 7, scope: !13915)
!13921 = !DILocation(line: 1181, column: 61, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 1180, column: 66)
!13923 = !DILocation(line: 1181, column: 66, scope: !13922)
!13924 = !DILocation(line: 1181, column: 47, scope: !13922)
!13925 = !DILocation(line: 1181, column: 87, scope: !13922)
!13926 = !DILocation(line: 1181, column: 92, scope: !13922)
!13927 = !DILocation(line: 1181, column: 97, scope: !13922)
!13928 = !DILocation(line: 1181, column: 73, scope: !13922)
!13929 = !DILocation(line: 1181, column: 104, scope: !13922)
!13930 = !DILocation(line: 1181, column: 109, scope: !13922)
!13931 = !DILocation(line: 1181, column: 4, scope: !13922)
!13932 = !DILocation(line: 1182, column: 4, scope: !13922)
!13933 = !DILocation(line: 1184, column: 2, scope: !13915)
!13934 = !DILocation(line: 1179, column: 38, scope: !13911)
!13935 = !DILocation(line: 1179, column: 43, scope: !13911)
!13936 = !DILocation(line: 1179, column: 36, scope: !13911)
!13937 = !DILocation(line: 1179, column: 2, scope: !13911)
!13938 = distinct !{!13938, !13912, !13939}
!13939 = !DILocation(line: 1184, column: 2, scope: !13906)
!13940 = !DILocation(line: 1186, column: 2, scope: !13879)
!13941 = !DILocation(line: 1187, column: 1, scope: !13879)
