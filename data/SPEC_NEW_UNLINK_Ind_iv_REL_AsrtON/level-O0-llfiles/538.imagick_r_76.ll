; ModuleID = 'magick/fx.c'
source_filename = "magick/fx.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FxInfo = type { %struct._Image*, i8*, %struct._IO_FILE*, %struct._SplayTreeInfo*, %struct._SplayTreeInfo*, %struct._CacheView**, %struct._RandomInfo*, %struct._ExceptionInfo* }
%struct._SplayTreeInfo = type opaque
%struct._CacheView = type opaque
%struct._RandomInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._GeometryInfo = type { double, double, double, double, double }
%struct.KernelInfo = type { i32, i64, i64, i64, i64, double*, double, double, double, double, double, %struct.KernelInfo*, i64 }
%struct._PointInfo = type { double, double }
%struct._SegmentInfo = type { double, double, double, double }
%struct._DrawInfo = type { i8*, i8*, %struct._RectangleInfo, %struct._AffineMatrix, i32, %struct._PixelPacket, %struct._PixelPacket, double, %struct._GradientInfo, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, i32, i32, i32, i64, double, i32, i32, i8*, i64, i8*, i8*, i8*, i32, i32, i64, i8*, double, i8*, i32, %struct._PixelPacket, %struct._PixelPacket, i8*, double*, i8*, %struct._SegmentInfo, i32, i16, i32, %struct._ElementReference, i32, i64, double, double, double, i32 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._GradientInfo = type { i32, %struct._RectangleInfo, %struct._SegmentInfo, %struct._StopInfo*, i64, i32, i32, i64, %struct._PointInfo, float }
%struct._StopInfo = type { %struct._MagickPixelPacket, float }
%struct._ElementReference = type { i8*, i32, %struct._GradientInfo, i64, %struct._ElementReference*, %struct._ElementReference* }
%struct._TypeMetric = type { %struct._PointInfo, double, double, double, double, double, double, double, %struct._SegmentInfo, %struct._PointInfo }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }

@.str = private unnamed_addr constant [12 x i8] c"magick/fx.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"-1.0*\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"^-1.0*\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"^-\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"E-1.0*\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"E-\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"e-1.0*\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"**\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"attenuate\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"AddNoise/Image\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"BlueShift/Image\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"Colorize/Image\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"  ColorMatrix image with color matrix:\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"%.20g: \00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"%+f \00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"ColorMatrix/Image\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"Fx/Image\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"Implode/Image\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"Morph/Image\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"Caption\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"+0+%g\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"SepiaTone/Image\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"Shadow/Image\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"50%\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"compose:args\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"20x80\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"Solarize/Image\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"Stegano/Image\00", align 1
@.str.45 = private unnamed_addr constant [29 x i8] c"LeftAndRightImageSizesDiffer\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"Stereo/Image\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"Swirl/Image\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"Tint/Image\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"#000000\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"#ffffff\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"ellipse %g,%g,%g,%g,0.0,360.0\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"Wave/Image\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"DivideByZero\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"UnableToParseExpression\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"airy\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"alt\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.70 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"cyan\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"magenta\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"yellow\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"%s[%.20g,%.20g].%s: %s=%.*g\0A\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"drc\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"epsilon\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.89 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"gauss\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"gcd\00", align 1
@.str.93 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"hue\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"hypot\00", align 1
@.str.97 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"intensity\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.102 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c"j0\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"j1\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"jinc\00", align 1
@.str.106 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"logtwo\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"lightness\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"MaxRGB\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"maxima\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"minima\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.116 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"Opaque\00", align 1
@.str.120 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"phi\00", align 1
@.str.122 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.124 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"QuantumRange\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"QuantumScale\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.129 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"saturation\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"sinc\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c"squish\00", align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.138 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.139 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.140 = private unnamed_addr constant [12 x i8] c"Transparent\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.142 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.143 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.144 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.146 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.147 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.148 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.150 = private unnamed_addr constant [3 x i8] c"xy\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"(+-/*%:&^|<>~,\00", align 1
@.str.152 = private unnamed_addr constant [22 x i8] c"UnbalancedParenthesis\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"suv\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"NoSuchImage\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"luma\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"luminance\00", align 1
@.str.157 = private unnamed_addr constant [28 x i8] c"ColorSeparatedImageRequired\00", align 1
@.str.158 = private unnamed_addr constant [8 x i8] c"channel\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"kurtosis\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c"image.depth\00", align 1
@.str.162 = private unnamed_addr constant [13 x i8] c"image.minima\00", align 1
@.str.163 = private unnamed_addr constant [13 x i8] c"image.maxima\00", align 1
@.str.164 = private unnamed_addr constant [11 x i8] c"image.mean\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"image.kurtosis\00", align 1
@.str.166 = private unnamed_addr constant [15 x i8] c"image.skewness\00", align 1
@.str.167 = private unnamed_addr constant [25 x i8] c"image.standard_deviation\00", align 1
@.str.168 = private unnamed_addr constant [19 x i8] c"image.resolution.x\00", align 1
@.str.169 = private unnamed_addr constant [19 x i8] c"image.resolution.y\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"mean\00", align 1
@.str.171 = private unnamed_addr constant [12 x i8] c"page.height\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c"page.width\00", align 1
@.str.173 = private unnamed_addr constant [7 x i8] c"page.x\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"page.y\00", align 1
@.str.175 = private unnamed_addr constant [13 x i8] c"resolution.x\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"resolution.y\00", align 1
@.str.177 = private unnamed_addr constant [9 x i8] c"skewness\00", align 1
@.str.178 = private unnamed_addr constant [19 x i8] c"standard_deviation\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"%p.%.20g.%s\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"%.20g\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._FxInfo* @AcquireFxInfo(%struct._Image* %image, i8* %expression) #0 !dbg !1317 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %expression.addr = alloca i8*, align 8
  %fx_op = alloca [2 x i8], align 1
  %next = alloca %struct._Image*, align 8
  %fx_info = alloca %struct._FxInfo*, align 8
  %i = alloca i64, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  %message17 = alloca i8*, align 8
  %exception18 = alloca %struct._ExceptionInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1320, metadata !DIExpression()), !dbg !1321
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !1322, metadata !DIExpression()), !dbg !1323
  call void @llvm.dbg.declare(metadata [2 x i8]* %fx_op, metadata !1324, metadata !DIExpression()), !dbg !1328
  call void @llvm.dbg.declare(metadata %struct._Image** %next, metadata !1329, metadata !DIExpression()), !dbg !1330
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info, metadata !1331, metadata !DIExpression()), !dbg !1332
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1333, metadata !DIExpression()), !dbg !1334
  %call = call i8* @AcquireMagickMemory(i64 64) #10, !dbg !1335
  %0 = bitcast i8* %call to %struct._FxInfo*, !dbg !1336
  store %struct._FxInfo* %0, %struct._FxInfo** %fx_info, align 8, !dbg !1337
  %1 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1338
  %cmp = icmp eq %struct._FxInfo* %1, null, !dbg !1340
  br i1 %cmp, label %if.then, label %if.end, !dbg !1341

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1342, metadata !DIExpression()), !dbg !1344
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1345, metadata !DIExpression()), !dbg !1344
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1344
  %call1 = call i32* @__errno_location() #11, !dbg !1344
  %2 = load i32, i32* %call1, align 4, !dbg !1344
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !1344
  store i8* %call2, i8** %message, align 8, !dbg !1344
  %3 = load i8*, i8** %message, align 8, !dbg !1344
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 175, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !1344
  %4 = load i8*, i8** %message, align 8, !dbg !1344
  %call4 = call i8* @DestroyString(i8* %4), !dbg !1344
  store i8* %call4, i8** %message, align 8, !dbg !1344
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1344
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1344
  call void @MagickCoreTerminus(), !dbg !1344
  call void @_exit(i32 1) #12, !dbg !1344
  unreachable, !dbg !1344

if.end:                                           ; preds = %entry
  %5 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1346
  %6 = bitcast %struct._FxInfo* %5 to i8*, !dbg !1346
  %call6 = call i8* @ResetMagickMemory(i8* %6, i32 0, i64 64), !dbg !1347
  %call7 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !1348
  %7 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1349
  %exception8 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %7, i32 0, i32 7, !dbg !1350
  store %struct._ExceptionInfo* %call7, %struct._ExceptionInfo** %exception8, align 8, !dbg !1351
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1352
  %9 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1353
  %images = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %9, i32 0, i32 0, !dbg !1354
  store %struct._Image* %8, %struct._Image** %images, align 8, !dbg !1355
  %call9 = call %struct._SplayTreeInfo* @NewSplayTree(i32 (i8*, i8*)* @CompareSplayTreeString, i8* (i8*)* @RelinquishMagickMemory, i8* (i8*)* @RelinquishAlignedMemory), !dbg !1356
  %10 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1357
  %colors = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %10, i32 0, i32 3, !dbg !1358
  store %struct._SplayTreeInfo* %call9, %struct._SplayTreeInfo** %colors, align 8, !dbg !1359
  %call10 = call %struct._SplayTreeInfo* @NewSplayTree(i32 (i8*, i8*)* @CompareSplayTreeString, i8* (i8*)* @RelinquishMagickMemory, i8* (i8*)* @RelinquishMagickMemory), !dbg !1360
  %11 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1361
  %symbols = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %11, i32 0, i32 4, !dbg !1362
  store %struct._SplayTreeInfo* %call10, %struct._SplayTreeInfo** %symbols, align 8, !dbg !1363
  %12 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1364
  %images11 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %12, i32 0, i32 0, !dbg !1365
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !1365
  %call12 = call i64 @GetImageListLength(%struct._Image* %13), !dbg !1366
  %call13 = call i8* @AcquireQuantumMemory(i64 %call12, i64 8) #13, !dbg !1367
  %14 = bitcast i8* %call13 to %struct._CacheView**, !dbg !1368
  %15 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1369
  %view = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %15, i32 0, i32 5, !dbg !1370
  store %struct._CacheView** %14, %struct._CacheView*** %view, align 8, !dbg !1371
  %16 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1372
  %view14 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %16, i32 0, i32 5, !dbg !1374
  %17 = load %struct._CacheView**, %struct._CacheView*** %view14, align 8, !dbg !1374
  %cmp15 = icmp eq %struct._CacheView** %17, null, !dbg !1375
  br i1 %cmp15, label %if.then16, label %if.end24, !dbg !1376

if.then16:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %message17, metadata !1377, metadata !DIExpression()), !dbg !1379
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception18, metadata !1380, metadata !DIExpression()), !dbg !1379
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception18), !dbg !1379
  %call19 = call i32* @__errno_location() #11, !dbg !1379
  %18 = load i32, i32* %call19, align 4, !dbg !1379
  %call20 = call i8* @GetExceptionMessage(i32 %18), !dbg !1379
  store i8* %call20, i8** %message17, align 8, !dbg !1379
  %19 = load i8*, i8** %message17, align 8, !dbg !1379
  %call21 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 186, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %19), !dbg !1379
  %20 = load i8*, i8** %message17, align 8, !dbg !1379
  %call22 = call i8* @DestroyString(i8* %20), !dbg !1379
  store i8* %call22, i8** %message17, align 8, !dbg !1379
  call void @CatchException(%struct._ExceptionInfo* %exception18), !dbg !1379
  %call23 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception18), !dbg !1379
  call void @MagickCoreTerminus(), !dbg !1379
  call void @_exit(i32 1) #12, !dbg !1379
  unreachable, !dbg !1379

if.end24:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !1381
  %21 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1382
  %images25 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %21, i32 0, i32 0, !dbg !1383
  %22 = load %struct._Image*, %struct._Image** %images25, align 8, !dbg !1383
  %call26 = call %struct._Image* @GetFirstImageInList(%struct._Image* %22), !dbg !1384
  store %struct._Image* %call26, %struct._Image** %next, align 8, !dbg !1385
  br label %for.cond, !dbg !1386

for.cond:                                         ; preds = %for.inc, %if.end24
  %23 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1387
  %cmp27 = icmp ne %struct._Image* %23, null, !dbg !1390
  br i1 %cmp27, label %for.body, label %for.end, !dbg !1391

for.body:                                         ; preds = %for.cond
  %24 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1392
  %25 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1394
  %exception28 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %25, i32 0, i32 7, !dbg !1395
  %26 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception28, align 8, !dbg !1395
  %call29 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %24, %struct._ExceptionInfo* %26), !dbg !1396
  %27 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1397
  %view30 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %27, i32 0, i32 5, !dbg !1398
  %28 = load %struct._CacheView**, %struct._CacheView*** %view30, align 8, !dbg !1398
  %29 = load i64, i64* %i, align 8, !dbg !1399
  %arrayidx = getelementptr inbounds %struct._CacheView*, %struct._CacheView** %28, i64 %29, !dbg !1397
  store %struct._CacheView* %call29, %struct._CacheView** %arrayidx, align 8, !dbg !1400
  %30 = load i64, i64* %i, align 8, !dbg !1401
  %inc = add nsw i64 %30, 1, !dbg !1401
  store i64 %inc, i64* %i, align 8, !dbg !1401
  br label %for.inc, !dbg !1402

for.inc:                                          ; preds = %for.body
  %31 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1403
  %next31 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 69, !dbg !1404
  %32 = load %struct._Image*, %struct._Image** %next31, align 8, !dbg !1404
  store %struct._Image* %32, %struct._Image** %next, align 8, !dbg !1405
  br label %for.cond, !dbg !1406, !llvm.loop !1407

for.end:                                          ; preds = %for.cond
  %call32 = call %struct._RandomInfo* @AcquireRandomInfo(), !dbg !1409
  %33 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1410
  %random_info = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %33, i32 0, i32 6, !dbg !1411
  store %struct._RandomInfo* %call32, %struct._RandomInfo** %random_info, align 8, !dbg !1412
  %34 = load i8*, i8** %expression.addr, align 8, !dbg !1413
  %call33 = call i8* @ConstantString(i8* %34), !dbg !1414
  %35 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1415
  %expression34 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %35, i32 0, i32 1, !dbg !1416
  store i8* %call33, i8** %expression34, align 8, !dbg !1417
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1418
  %37 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1419
  %file = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %37, i32 0, i32 2, !dbg !1420
  store %struct._IO_FILE* %36, %struct._IO_FILE** %file, align 8, !dbg !1421
  %38 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1422
  %expression35 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %38, i32 0, i32 1, !dbg !1423
  %call36 = call i32 @SubstituteString(i8** %expression35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)), !dbg !1424
  %39 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1425
  %expression37 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %39, i32 0, i32 1, !dbg !1426
  %call38 = call i32 @SubstituteString(i8** %expression37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)), !dbg !1427
  %40 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1428
  %expression39 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %40, i32 0, i32 1, !dbg !1429
  %call40 = call i32 @SubstituteString(i8** %expression39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !1430
  %41 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1431
  %expression41 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %41, i32 0, i32 1, !dbg !1432
  %call42 = call i32 @SubstituteString(i8** %expression41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)), !dbg !1433
  %42 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1434
  %expression43 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %42, i32 0, i32 1, !dbg !1435
  %call44 = call i32 @SubstituteString(i8** %expression43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)), !dbg !1436
  %arrayidx45 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 1, !dbg !1437
  store i8 0, i8* %arrayidx45, align 1, !dbg !1438
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1439
  store i8 -11, i8* %arraydecay, align 1, !dbg !1440
  %43 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1441
  %expression46 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %43, i32 0, i32 1, !dbg !1442
  %arraydecay47 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1443
  %call48 = call i32 @SubstituteString(i8** %expression46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay47), !dbg !1444
  %arraydecay49 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1445
  store i8 -10, i8* %arraydecay49, align 1, !dbg !1446
  %44 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1447
  %expression50 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %44, i32 0, i32 1, !dbg !1448
  %arraydecay51 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1449
  %call52 = call i32 @SubstituteString(i8** %expression50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay51), !dbg !1450
  %arraydecay53 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1451
  store i8 -9, i8* %arraydecay53, align 1, !dbg !1452
  %45 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1453
  %expression54 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %45, i32 0, i32 1, !dbg !1454
  %arraydecay55 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1455
  %call56 = call i32 @SubstituteString(i8** %expression54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay55), !dbg !1456
  %arraydecay57 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1457
  store i8 -8, i8* %arraydecay57, align 1, !dbg !1458
  %46 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1459
  %expression58 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %46, i32 0, i32 1, !dbg !1460
  %arraydecay59 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1461
  %call60 = call i32 @SubstituteString(i8** %expression58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i8* %arraydecay59), !dbg !1462
  %arraydecay61 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1463
  store i8 -7, i8* %arraydecay61, align 1, !dbg !1464
  %47 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1465
  %expression62 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %47, i32 0, i32 1, !dbg !1466
  %arraydecay63 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1467
  %call64 = call i32 @SubstituteString(i8** %expression62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay63), !dbg !1468
  %arraydecay65 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1469
  store i8 -6, i8* %arraydecay65, align 1, !dbg !1470
  %48 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1471
  %expression66 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %48, i32 0, i32 1, !dbg !1472
  %arraydecay67 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1473
  %call68 = call i32 @SubstituteString(i8** %expression66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8* %arraydecay67), !dbg !1474
  %arraydecay69 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1475
  store i8 -5, i8* %arraydecay69, align 1, !dbg !1476
  %49 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1477
  %expression70 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %49, i32 0, i32 1, !dbg !1478
  %arraydecay71 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1479
  %call72 = call i32 @SubstituteString(i8** %expression70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay71), !dbg !1480
  %arraydecay73 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1481
  store i8 -4, i8* %arraydecay73, align 1, !dbg !1482
  %50 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1483
  %expression74 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %50, i32 0, i32 1, !dbg !1484
  %arraydecay75 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1485
  %call76 = call i32 @SubstituteString(i8** %expression74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay75), !dbg !1486
  %arraydecay77 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1487
  store i8 -3, i8* %arraydecay77, align 1, !dbg !1488
  %51 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1489
  %expression78 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %51, i32 0, i32 1, !dbg !1490
  %arraydecay79 = getelementptr inbounds [2 x i8], [2 x i8]* %fx_op, i64 0, i64 0, !dbg !1491
  %call80 = call i32 @SubstituteString(i8** %expression78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay79), !dbg !1492
  %52 = load %struct._FxInfo*, %struct._FxInfo** %fx_info, align 8, !dbg !1493
  ret %struct._FxInfo* %52, !dbg !1494
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #2

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local i8* @GetExceptionMessage(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #3

declare dso_local i8* @DestroyString(i8*) #3

declare dso_local void @CatchException(%struct._ExceptionInfo*) #3

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local void @MagickCoreTerminus() #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #3

declare dso_local %struct._ExceptionInfo* @AcquireExceptionInfo() #3

declare dso_local %struct._SplayTreeInfo* @NewSplayTree(i32 (i8*, i8*)*, i8* (i8*)*, i8* (i8*)*) #3

declare dso_local i32 @CompareSplayTreeString(i8*, i8*) #3

declare dso_local i8* @RelinquishMagickMemory(i8*) #3

declare dso_local i8* @RelinquishAlignedMemory(i8*) #3

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #6

declare dso_local i64 @GetImageListLength(%struct._Image*) #3

declare dso_local %struct._Image* @GetFirstImageInList(%struct._Image*) #3

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._RandomInfo* @AcquireRandomInfo() #3

declare dso_local i8* @ConstantString(i8*) #3

declare dso_local i32 @SubstituteString(i8**, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AddNoiseImage(%struct._Image* %image, i32 %noise_type, %struct._ExceptionInfo* %exception) #0 !dbg !1495 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %noise_type.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %noise_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1500, metadata !DIExpression()), !dbg !1501
  store i32 %noise_type, i32* %noise_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %noise_type.addr, metadata !1502, metadata !DIExpression()), !dbg !1503
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1504, metadata !DIExpression()), !dbg !1505
  call void @llvm.dbg.declare(metadata %struct._Image** %noise_image, metadata !1506, metadata !DIExpression()), !dbg !1507
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1508
  %1 = load i32, i32* %noise_type.addr, align 4, !dbg !1509
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1510
  %call = call %struct._Image* @AddNoiseImageChannel(%struct._Image* %0, i32 134217719, i32 %1, %struct._ExceptionInfo* %2), !dbg !1511
  store %struct._Image* %call, %struct._Image** %noise_image, align 8, !dbg !1512
  %3 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1513
  ret %struct._Image* %3, !dbg !1514
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AddNoiseImageChannel(%struct._Image* %image, i32 %channel, i32 %noise_type, %struct._ExceptionInfo* %exception) #0 !dbg !1515 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %noise_type.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %noise_view = alloca %struct._CacheView*, align 8
  %option = alloca i8*, align 8
  %attenuate = alloca double, align 8
  %noise_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %sync = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %noise_indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1519, metadata !DIExpression()), !dbg !1520
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1521, metadata !DIExpression()), !dbg !1522
  store i32 %noise_type, i32* %noise_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %noise_type.addr, metadata !1523, metadata !DIExpression()), !dbg !1524
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1525, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1527, metadata !DIExpression()), !dbg !1528
  call void @llvm.dbg.declare(metadata %struct._CacheView** %noise_view, metadata !1529, metadata !DIExpression()), !dbg !1530
  call void @llvm.dbg.declare(metadata i8** %option, metadata !1531, metadata !DIExpression()), !dbg !1532
  call void @llvm.dbg.declare(metadata double* %attenuate, metadata !1533, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.declare(metadata %struct._Image** %noise_image, metadata !1535, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1537, metadata !DIExpression()), !dbg !1538
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !1539, metadata !DIExpression()), !dbg !1540
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !1541, metadata !DIExpression()), !dbg !1543
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1544, metadata !DIExpression()), !dbg !1545
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1546
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1548
  %1 = load i32, i32* %debug, align 8, !dbg !1548
  %cmp = icmp ne i32 %1, 0, !dbg !1549
  br i1 %cmp, label %if.then, label %if.end, !dbg !1550

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1551
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1552
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1551
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !1553
  br label %if.end, !dbg !1554

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1555
  %4 = load i32, i32* %channel.addr, align 4, !dbg !1556
  %5 = load i32, i32* %noise_type.addr, align 4, !dbg !1557
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1558
  %call1 = call %struct._Image* @AccelerateAddNoiseImage(%struct._Image* %3, i32 %4, i32 %5, %struct._ExceptionInfo* %6), !dbg !1559
  store %struct._Image* %call1, %struct._Image** %noise_image, align 8, !dbg !1560
  %7 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1561
  %cmp2 = icmp ne %struct._Image* %7, null, !dbg !1563
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1564

if.then3:                                         ; preds = %if.end
  %8 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1565
  store %struct._Image* %8, %struct._Image** %retval, align 8, !dbg !1566
  br label %return, !dbg !1566

if.end4:                                          ; preds = %if.end
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1567
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1568
  %call5 = call %struct._Image* @CloneImage(%struct._Image* %9, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %10), !dbg !1569
  store %struct._Image* %call5, %struct._Image** %noise_image, align 8, !dbg !1570
  %11 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1571
  %cmp6 = icmp eq %struct._Image* %11, null, !dbg !1573
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1574

if.then7:                                         ; preds = %if.end4
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1575
  br label %return, !dbg !1575

if.end8:                                          ; preds = %if.end4
  %12 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1576
  %call9 = call i32 @SetImageStorageClass(%struct._Image* %12, i32 1), !dbg !1578
  %cmp10 = icmp eq i32 %call9, 0, !dbg !1579
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !1580

if.then11:                                        ; preds = %if.end8
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1581
  %14 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1583
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !1584
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception12), !dbg !1585
  %15 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1586
  %call13 = call %struct._Image* @DestroyImage(%struct._Image* %15), !dbg !1587
  store %struct._Image* %call13, %struct._Image** %noise_image, align 8, !dbg !1588
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1589
  br label %return, !dbg !1589

if.end14:                                         ; preds = %if.end8
  store double 1.000000e+00, double* %attenuate, align 8, !dbg !1590
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1591
  %call15 = call i8* @GetImageArtifact(%struct._Image* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)), !dbg !1592
  store i8* %call15, i8** %option, align 8, !dbg !1593
  %17 = load i8*, i8** %option, align 8, !dbg !1594
  %cmp16 = icmp ne i8* %17, null, !dbg !1596
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !1597

if.then17:                                        ; preds = %if.end14
  %18 = load i8*, i8** %option, align 8, !dbg !1598
  %call18 = call double @StringToDouble(i8* %18, i8** null), !dbg !1599
  store double %call18, double* %attenuate, align 8, !dbg !1600
  br label %if.end19, !dbg !1601

if.end19:                                         ; preds = %if.then17, %if.end14
  store i32 1, i32* %status, align 4, !dbg !1602
  store i64 0, i64* %progress, align 8, !dbg !1603
  %call20 = call %struct._RandomInfo** @AcquireRandomInfoThreadSet(), !dbg !1604
  store %struct._RandomInfo** %call20, %struct._RandomInfo*** %random_info, align 8, !dbg !1605
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1606
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1607
  %call21 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %19, %struct._ExceptionInfo* %20), !dbg !1608
  store %struct._CacheView* %call21, %struct._CacheView** %image_view, align 8, !dbg !1609
  %21 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1610
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1611
  %call22 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %21, %struct._ExceptionInfo* %22), !dbg !1612
  store %struct._CacheView* %call22, %struct._CacheView** %noise_view, align 8, !dbg !1613
  store i64 0, i64* %y, align 8, !dbg !1614
  br label %for.cond, !dbg !1616

for.cond:                                         ; preds = %for.inc135, %if.end19
  %23 = load i64, i64* %y, align 8, !dbg !1617
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1619
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 8, !dbg !1620
  %25 = load i64, i64* %rows, align 8, !dbg !1620
  %cmp23 = icmp slt i64 %23, %25, !dbg !1621
  br i1 %cmp23, label %for.body, label %for.end137, !dbg !1622

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !1623, metadata !DIExpression()), !dbg !1626
  %call24 = call i32 @GetOpenMPThreadId(), !dbg !1627
  store i32 %call24, i32* %id, align 4, !dbg !1626
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !1628, metadata !DIExpression()), !dbg !1629
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1630, metadata !DIExpression()), !dbg !1632
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !1633, metadata !DIExpression()), !dbg !1635
  call void @llvm.dbg.declare(metadata i16** %noise_indexes, metadata !1636, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1639, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !1641, metadata !DIExpression()), !dbg !1643
  %26 = load i32, i32* %status, align 4, !dbg !1644
  %cmp25 = icmp eq i32 %26, 0, !dbg !1646
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !1647

if.then26:                                        ; preds = %for.body
  br label %for.inc135, !dbg !1648

if.end27:                                         ; preds = %for.body
  %27 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1649
  %28 = load i64, i64* %y, align 8, !dbg !1650
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1651
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 7, !dbg !1652
  %30 = load i64, i64* %columns, align 8, !dbg !1652
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1653
  %call28 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %27, i64 0, i64 %28, i64 %30, i64 1, %struct._ExceptionInfo* %31), !dbg !1654
  store %struct._PixelPacket* %call28, %struct._PixelPacket** %p, align 8, !dbg !1655
  %32 = load %struct._CacheView*, %struct._CacheView** %noise_view, align 8, !dbg !1656
  %33 = load i64, i64* %y, align 8, !dbg !1657
  %34 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1658
  %columns29 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !1659
  %35 = load i64, i64* %columns29, align 8, !dbg !1659
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1660
  %call30 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %32, i64 0, i64 %33, i64 %35, i64 1, %struct._ExceptionInfo* %36), !dbg !1661
  store %struct._PixelPacket* %call30, %struct._PixelPacket** %q, align 8, !dbg !1662
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1663
  %cmp31 = icmp eq %struct._PixelPacket* %37, null, !dbg !1665
  br i1 %cmp31, label %if.then33, label %lor.lhs.false, !dbg !1666

lor.lhs.false:                                    ; preds = %if.end27
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1667
  %cmp32 = icmp eq %struct._PixelPacket* %38, null, !dbg !1668
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !1669

if.then33:                                        ; preds = %lor.lhs.false, %if.end27
  store i32 0, i32* %status, align 4, !dbg !1670
  br label %for.inc135, !dbg !1672

if.end34:                                         ; preds = %lor.lhs.false
  %39 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1673
  %call35 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %39), !dbg !1674
  store i16* %call35, i16** %indexes, align 8, !dbg !1675
  %40 = load %struct._CacheView*, %struct._CacheView** %noise_view, align 8, !dbg !1676
  %call36 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %40), !dbg !1677
  store i16* %call36, i16** %noise_indexes, align 8, !dbg !1678
  store i64 0, i64* %x, align 8, !dbg !1679
  br label %for.cond37, !dbg !1681

for.cond37:                                       ; preds = %for.inc, %if.end34
  %41 = load i64, i64* %x, align 8, !dbg !1682
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1684
  %columns38 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 7, !dbg !1685
  %43 = load i64, i64* %columns38, align 8, !dbg !1685
  %cmp39 = icmp slt i64 %41, %43, !dbg !1686
  br i1 %cmp39, label %for.body40, label %for.end, !dbg !1687

for.body40:                                       ; preds = %for.cond37
  %44 = load i32, i32* %channel.addr, align 4, !dbg !1688
  %and = and i32 %44, 1, !dbg !1691
  %cmp41 = icmp ne i32 %and, 0, !dbg !1692
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !1693

if.then42:                                        ; preds = %for.body40
  %45 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1694
  %46 = load i32, i32* %id, align 4, !dbg !1694
  %idxprom = sext i32 %46 to i64, !dbg !1694
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %45, i64 %idxprom, !dbg !1694
  %47 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx, align 8, !dbg !1694
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1694
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 2, !dbg !1694
  %49 = load i16, i16* %red, align 2, !dbg !1694
  %50 = load i32, i32* %noise_type.addr, align 4, !dbg !1694
  %51 = load double, double* %attenuate, align 8, !dbg !1694
  %conv = fptrunc double %51 to float, !dbg !1694
  %call43 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %47, i16 zeroext %49, i32 %50, float %conv), !dbg !1694
  %conv44 = fptrunc double %call43 to float, !dbg !1694
  %call45 = call zeroext i16 @ClampToQuantum(float %conv44), !dbg !1694
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1694
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 2, !dbg !1694
  store i16 %call45, i16* %red46, align 2, !dbg !1694
  br label %if.end47, !dbg !1694

if.end47:                                         ; preds = %if.then42, %for.body40
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1695
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 1, !dbg !1697
  %54 = load i32, i32* %colorspace, align 4, !dbg !1697
  %call48 = call i32 @IsGrayColorspace(i32 %54), !dbg !1698
  %cmp49 = icmp ne i32 %call48, 0, !dbg !1699
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !1700

if.then51:                                        ; preds = %if.end47
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1701
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 2, !dbg !1701
  %56 = load i16, i16* %red52, align 2, !dbg !1701
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1701
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 1, !dbg !1701
  store i16 %56, i16* %green, align 2, !dbg !1701
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1703
  %red53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 2, !dbg !1703
  %59 = load i16, i16* %red53, align 2, !dbg !1703
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1703
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 0, !dbg !1703
  store i16 %59, i16* %blue, align 2, !dbg !1703
  br label %if.end80, !dbg !1704

if.else:                                          ; preds = %if.end47
  %61 = load i32, i32* %channel.addr, align 4, !dbg !1705
  %and54 = and i32 %61, 2, !dbg !1708
  %cmp55 = icmp ne i32 %and54, 0, !dbg !1709
  br i1 %cmp55, label %if.then57, label %if.end66, !dbg !1710

if.then57:                                        ; preds = %if.else
  %62 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1711
  %63 = load i32, i32* %id, align 4, !dbg !1711
  %idxprom58 = sext i32 %63 to i64, !dbg !1711
  %arrayidx59 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %62, i64 %idxprom58, !dbg !1711
  %64 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx59, align 8, !dbg !1711
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1711
  %green60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 1, !dbg !1711
  %66 = load i16, i16* %green60, align 2, !dbg !1711
  %67 = load i32, i32* %noise_type.addr, align 4, !dbg !1711
  %68 = load double, double* %attenuate, align 8, !dbg !1711
  %conv61 = fptrunc double %68 to float, !dbg !1711
  %call62 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %64, i16 zeroext %66, i32 %67, float %conv61), !dbg !1711
  %conv63 = fptrunc double %call62 to float, !dbg !1711
  %call64 = call zeroext i16 @ClampToQuantum(float %conv63), !dbg !1711
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1711
  %green65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 1, !dbg !1711
  store i16 %call64, i16* %green65, align 2, !dbg !1711
  br label %if.end66, !dbg !1711

if.end66:                                         ; preds = %if.then57, %if.else
  %70 = load i32, i32* %channel.addr, align 4, !dbg !1712
  %and67 = and i32 %70, 4, !dbg !1714
  %cmp68 = icmp ne i32 %and67, 0, !dbg !1715
  br i1 %cmp68, label %if.then70, label %if.end79, !dbg !1716

if.then70:                                        ; preds = %if.end66
  %71 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1717
  %72 = load i32, i32* %id, align 4, !dbg !1717
  %idxprom71 = sext i32 %72 to i64, !dbg !1717
  %arrayidx72 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %71, i64 %idxprom71, !dbg !1717
  %73 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx72, align 8, !dbg !1717
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1717
  %blue73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 0, !dbg !1717
  %75 = load i16, i16* %blue73, align 2, !dbg !1717
  %76 = load i32, i32* %noise_type.addr, align 4, !dbg !1717
  %77 = load double, double* %attenuate, align 8, !dbg !1717
  %conv74 = fptrunc double %77 to float, !dbg !1717
  %call75 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %73, i16 zeroext %75, i32 %76, float %conv74), !dbg !1717
  %conv76 = fptrunc double %call75 to float, !dbg !1717
  %call77 = call zeroext i16 @ClampToQuantum(float %conv76), !dbg !1717
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1717
  %blue78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 0, !dbg !1717
  store i16 %call77, i16* %blue78, align 2, !dbg !1717
  br label %if.end79, !dbg !1717

if.end79:                                         ; preds = %if.then70, %if.end66
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then51
  %79 = load i32, i32* %channel.addr, align 4, !dbg !1718
  %and81 = and i32 %79, 8, !dbg !1720
  %cmp82 = icmp ne i32 %and81, 0, !dbg !1721
  br i1 %cmp82, label %if.then84, label %if.end92, !dbg !1722

if.then84:                                        ; preds = %if.end80
  %80 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1723
  %81 = load i32, i32* %id, align 4, !dbg !1723
  %idxprom85 = sext i32 %81 to i64, !dbg !1723
  %arrayidx86 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %80, i64 %idxprom85, !dbg !1723
  %82 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx86, align 8, !dbg !1723
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1723
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 3, !dbg !1723
  %84 = load i16, i16* %opacity, align 2, !dbg !1723
  %85 = load i32, i32* %noise_type.addr, align 4, !dbg !1723
  %86 = load double, double* %attenuate, align 8, !dbg !1723
  %conv87 = fptrunc double %86 to float, !dbg !1723
  %call88 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %82, i16 zeroext %84, i32 %85, float %conv87), !dbg !1723
  %conv89 = fptrunc double %call88 to float, !dbg !1723
  %call90 = call zeroext i16 @ClampToQuantum(float %conv89), !dbg !1723
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1723
  %opacity91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 3, !dbg !1723
  store i16 %call90, i16* %opacity91, align 2, !dbg !1723
  br label %if.end92, !dbg !1723

if.end92:                                         ; preds = %if.then84, %if.end80
  %88 = load i32, i32* %channel.addr, align 4, !dbg !1724
  %and93 = and i32 %88, 32, !dbg !1726
  %cmp94 = icmp ne i32 %and93, 0, !dbg !1727
  br i1 %cmp94, label %land.lhs.true, label %if.end117, !dbg !1728

land.lhs.true:                                    ; preds = %if.end92
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1729
  %colorspace96 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 1, !dbg !1730
  %90 = load i32, i32* %colorspace96, align 4, !dbg !1730
  %cmp97 = icmp eq i32 %90, 12, !dbg !1731
  br i1 %cmp97, label %if.then99, label %if.end117, !dbg !1732

if.then99:                                        ; preds = %land.lhs.true
  %91 = load i16*, i16** %noise_indexes, align 8, !dbg !1733
  %92 = load i64, i64* %x, align 8, !dbg !1733
  %add.ptr = getelementptr inbounds i16, i16* %91, i64 %92, !dbg !1733
  %cmp100 = icmp ne i16* %add.ptr, null, !dbg !1733
  br i1 %cmp100, label %if.then102, label %if.end116, !dbg !1736

if.then102:                                       ; preds = %if.then99
  %93 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1733
  %94 = load i32, i32* %id, align 4, !dbg !1733
  %idxprom103 = sext i32 %94 to i64, !dbg !1733
  %arrayidx104 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %93, i64 %idxprom103, !dbg !1733
  %95 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx104, align 8, !dbg !1733
  %96 = load i16*, i16** %indexes, align 8, !dbg !1733
  %97 = load i64, i64* %x, align 8, !dbg !1733
  %add.ptr105 = getelementptr inbounds i16, i16* %96, i64 %97, !dbg !1733
  %cmp106 = icmp eq i16* %add.ptr105, null, !dbg !1733
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !1733

cond.true:                                        ; preds = %if.then102
  br label %cond.end, !dbg !1733

cond.false:                                       ; preds = %if.then102
  %98 = load i16*, i16** %indexes, align 8, !dbg !1733
  %99 = load i64, i64* %x, align 8, !dbg !1733
  %add.ptr108 = getelementptr inbounds i16, i16* %98, i64 %99, !dbg !1733
  %100 = load i16, i16* %add.ptr108, align 2, !dbg !1733
  %conv109 = zext i16 %100 to i32, !dbg !1733
  br label %cond.end, !dbg !1733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv109, %cond.false ], !dbg !1733
  %conv110 = trunc i32 %cond to i16, !dbg !1733
  %101 = load i32, i32* %noise_type.addr, align 4, !dbg !1733
  %102 = load double, double* %attenuate, align 8, !dbg !1733
  %conv111 = fptrunc double %102 to float, !dbg !1733
  %call112 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %95, i16 zeroext %conv110, i32 %101, float %conv111), !dbg !1733
  %conv113 = fptrunc double %call112 to float, !dbg !1733
  %call114 = call zeroext i16 @ClampToQuantum(float %conv113), !dbg !1733
  %103 = load i16*, i16** %noise_indexes, align 8, !dbg !1733
  %104 = load i64, i64* %x, align 8, !dbg !1733
  %add.ptr115 = getelementptr inbounds i16, i16* %103, i64 %104, !dbg !1733
  store i16 %call114, i16* %add.ptr115, align 2, !dbg !1733
  br label %if.end116, !dbg !1733

if.end116:                                        ; preds = %cond.end, %if.then99
  br label %if.end117, !dbg !1736

if.end117:                                        ; preds = %if.end116, %land.lhs.true, %if.end92
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1737
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 1, !dbg !1737
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !1737
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1738
  %incdec.ptr118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 1, !dbg !1738
  store %struct._PixelPacket* %incdec.ptr118, %struct._PixelPacket** %q, align 8, !dbg !1738
  br label %for.inc, !dbg !1739

for.inc:                                          ; preds = %if.end117
  %107 = load i64, i64* %x, align 8, !dbg !1740
  %inc = add nsw i64 %107, 1, !dbg !1740
  store i64 %inc, i64* %x, align 8, !dbg !1740
  br label %for.cond37, !dbg !1741, !llvm.loop !1742

for.end:                                          ; preds = %for.cond37
  %108 = load %struct._CacheView*, %struct._CacheView** %noise_view, align 8, !dbg !1744
  %109 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1745
  %call119 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %108, %struct._ExceptionInfo* %109), !dbg !1746
  store i32 %call119, i32* %sync, align 4, !dbg !1747
  %110 = load i32, i32* %sync, align 4, !dbg !1748
  %cmp120 = icmp eq i32 %110, 0, !dbg !1750
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !1751

if.then122:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !1752
  br label %if.end123, !dbg !1753

if.end123:                                        ; preds = %if.then122, %for.end
  %111 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1754
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %111, i32 0, i32 47, !dbg !1756
  %112 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1756
  %cmp124 = icmp ne i32 (i8*, i64, i64, i8*)* %112, null, !dbg !1757
  br i1 %cmp124, label %if.then126, label %if.end134, !dbg !1758

if.then126:                                       ; preds = %if.end123
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1759, metadata !DIExpression()), !dbg !1761
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1762
  %114 = load i64, i64* %progress, align 8, !dbg !1763
  %inc127 = add nsw i64 %114, 1, !dbg !1763
  store i64 %inc127, i64* %progress, align 8, !dbg !1763
  %115 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1764
  %rows128 = getelementptr inbounds %struct._Image, %struct._Image* %115, i32 0, i32 8, !dbg !1765
  %116 = load i64, i64* %rows128, align 8, !dbg !1765
  %call129 = call i32 @SetImageProgress(%struct._Image* %113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i64 %114, i64 %116), !dbg !1766
  store i32 %call129, i32* %proceed, align 4, !dbg !1767
  %117 = load i32, i32* %proceed, align 4, !dbg !1768
  %cmp130 = icmp eq i32 %117, 0, !dbg !1770
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !1771

if.then132:                                       ; preds = %if.then126
  store i32 0, i32* %status, align 4, !dbg !1772
  br label %if.end133, !dbg !1773

if.end133:                                        ; preds = %if.then132, %if.then126
  br label %if.end134, !dbg !1774

if.end134:                                        ; preds = %if.end133, %if.end123
  br label %for.inc135, !dbg !1775

for.inc135:                                       ; preds = %if.end134, %if.then33, %if.then26
  %118 = load i64, i64* %y, align 8, !dbg !1776
  %inc136 = add nsw i64 %118, 1, !dbg !1776
  store i64 %inc136, i64* %y, align 8, !dbg !1776
  br label %for.cond, !dbg !1777, !llvm.loop !1778

for.end137:                                       ; preds = %for.cond
  %119 = load %struct._CacheView*, %struct._CacheView** %noise_view, align 8, !dbg !1780
  %call138 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %119), !dbg !1781
  store %struct._CacheView* %call138, %struct._CacheView** %noise_view, align 8, !dbg !1782
  %120 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1783
  %call139 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %120), !dbg !1784
  store %struct._CacheView* %call139, %struct._CacheView** %image_view, align 8, !dbg !1785
  %121 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1786
  %call140 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %121), !dbg !1787
  store %struct._RandomInfo** %call140, %struct._RandomInfo*** %random_info, align 8, !dbg !1788
  %122 = load i32, i32* %status, align 4, !dbg !1789
  %cmp141 = icmp eq i32 %122, 0, !dbg !1791
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !1792

if.then143:                                       ; preds = %for.end137
  %123 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1793
  %call144 = call %struct._Image* @DestroyImage(%struct._Image* %123), !dbg !1794
  store %struct._Image* %call144, %struct._Image** %noise_image, align 8, !dbg !1795
  br label %if.end145, !dbg !1796

if.end145:                                        ; preds = %if.then143, %for.end137
  %124 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1797
  store %struct._Image* %124, %struct._Image** %retval, align 8, !dbg !1798
  br label %return, !dbg !1798

return:                                           ; preds = %if.end145, %if.then11, %if.then7, %if.then3
  %125 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !1799
  ret %struct._Image* %125, !dbg !1799
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #3

declare dso_local %struct._Image* @AccelerateAddNoiseImage(%struct._Image*, i32, i32, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #3

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #3

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #3

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !1800 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !1806, metadata !DIExpression()), !dbg !1807
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !1808, metadata !DIExpression()), !dbg !1809
  %0 = load i8*, i8** %string.addr, align 8, !dbg !1810
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !1811
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !1812
  ret double %call, !dbg !1813
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._RandomInfo** @AcquireRandomInfoThreadSet() #0 !dbg !1814 {
entry:
  %retval = alloca %struct._RandomInfo**, align 8
  %i = alloca i64, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %number_threads = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1818, metadata !DIExpression()), !dbg !1819
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !1820, metadata !DIExpression()), !dbg !1821
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !1822, metadata !DIExpression()), !dbg !1823
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !1824
  store i64 %call, i64* %number_threads, align 8, !dbg !1825
  %0 = load i64, i64* %number_threads, align 8, !dbg !1826
  %call1 = call i8* @AcquireAlignedMemory(i64 %0, i64 8) #13, !dbg !1827
  %1 = bitcast i8* %call1 to %struct._RandomInfo**, !dbg !1828
  store %struct._RandomInfo** %1, %struct._RandomInfo*** %random_info, align 8, !dbg !1829
  %2 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1830
  %cmp = icmp eq %struct._RandomInfo** %2, null, !dbg !1832
  br i1 %cmp, label %if.then, label %if.end, !dbg !1833

if.then:                                          ; preds = %entry
  store %struct._RandomInfo** null, %struct._RandomInfo*** %retval, align 8, !dbg !1834
  br label %return, !dbg !1834

if.end:                                           ; preds = %entry
  %3 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1835
  %4 = bitcast %struct._RandomInfo** %3 to i8*, !dbg !1835
  %5 = load i64, i64* %number_threads, align 8, !dbg !1836
  %mul = mul i64 %5, 8, !dbg !1837
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !1838
  store i64 0, i64* %i, align 8, !dbg !1839
  br label %for.cond, !dbg !1841

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !1842
  %7 = load i64, i64* %number_threads, align 8, !dbg !1844
  %cmp3 = icmp slt i64 %6, %7, !dbg !1845
  br i1 %cmp3, label %for.body, label %for.end, !dbg !1846

for.body:                                         ; preds = %for.cond
  %call4 = call %struct._RandomInfo* @AcquireRandomInfo(), !dbg !1847
  %8 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1849
  %9 = load i64, i64* %i, align 8, !dbg !1850
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %8, i64 %9, !dbg !1849
  store %struct._RandomInfo* %call4, %struct._RandomInfo** %arrayidx, align 8, !dbg !1851
  %10 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1852
  %11 = load i64, i64* %i, align 8, !dbg !1854
  %arrayidx5 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %10, i64 %11, !dbg !1852
  %12 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx5, align 8, !dbg !1852
  %cmp6 = icmp eq %struct._RandomInfo* %12, null, !dbg !1855
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !1856

if.then7:                                         ; preds = %for.body
  %13 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1857
  %call8 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %13), !dbg !1858
  store %struct._RandomInfo** %call8, %struct._RandomInfo*** %retval, align 8, !dbg !1859
  br label %return, !dbg !1859

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !1860

for.inc:                                          ; preds = %if.end9
  %14 = load i64, i64* %i, align 8, !dbg !1861
  %inc = add nsw i64 %14, 1, !dbg !1861
  store i64 %inc, i64* %i, align 8, !dbg !1861
  br label %for.cond, !dbg !1862, !llvm.loop !1863

for.end:                                          ; preds = %for.cond
  %15 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1865
  store %struct._RandomInfo** %15, %struct._RandomInfo*** %retval, align 8, !dbg !1866
  br label %return, !dbg !1866

return:                                           ; preds = %for.end, %if.then7, %if.then
  %16 = load %struct._RandomInfo**, %struct._RandomInfo*** %retval, align 8, !dbg !1867
  ret %struct._RandomInfo** %16, !dbg !1867
}

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !1868 {
entry:
  ret i32 0, !dbg !1872
}

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #3

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !1873 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !1877, metadata !DIExpression()), !dbg !1878
  %0 = load float, float* %value.addr, align 4, !dbg !1879
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !1881
  br i1 %cmp, label %if.then, label %if.end, !dbg !1882

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !1883
  br label %return, !dbg !1883

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !1884
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !1886
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1887

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !1888
  br label %return, !dbg !1888

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !1889
  %add = fadd float %2, 5.000000e-01, !dbg !1890
  %conv = fptoui float %add to i16, !dbg !1891
  store i16 %conv, i16* %retval, align 2, !dbg !1892
  br label %return, !dbg !1892

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !1893
  ret i16 %3, !dbg !1893
}

declare dso_local double @GenerateDifferentialNoise(%struct._RandomInfo*, i16 zeroext, i32, float) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !1894 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !1899, metadata !DIExpression()), !dbg !1900
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !1901
  %cmp = icmp eq i32 %0, 2, !dbg !1903
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1904

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !1905
  %cmp1 = icmp eq i32 %1, 17, !dbg !1906
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !1907

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !1908
  %cmp3 = icmp eq i32 %2, 19, !dbg !1909
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1910

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !1911
  br label %return, !dbg !1911

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !1912
  br label %return, !dbg !1912

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !1913
  ret i32 %3, !dbg !1913
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !1914 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1918, metadata !DIExpression()), !dbg !1919
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !1920, metadata !DIExpression()), !dbg !1921
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1922, metadata !DIExpression()), !dbg !1923
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !1924, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !1926, metadata !DIExpression()), !dbg !1927
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1928
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !1930
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1930
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !1931
  br i1 %cmp, label %if.then, label %if.end, !dbg !1932

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !1933
  br label %return, !dbg !1933

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !1934
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !1935
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1936
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !1937
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1936
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !1938
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1939
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !1940
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !1940
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !1941
  %6 = load i64, i64* %offset.addr, align 8, !dbg !1942
  %7 = load i64, i64* %extent.addr, align 8, !dbg !1943
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1944
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !1945
  %9 = load i8*, i8** %client_data, align 8, !dbg !1945
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !1939
  store i32 %call4, i32* %retval, align 4, !dbg !1946
  br label %return, !dbg !1946

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !1947
  ret i32 %10, !dbg !1947
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %random_info) #0 !dbg !1948 {
entry:
  %random_info.addr = alloca %struct._RandomInfo**, align 8
  %i = alloca i64, align 8
  store %struct._RandomInfo** %random_info, %struct._RandomInfo*** %random_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info.addr, metadata !1951, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1953, metadata !DIExpression()), !dbg !1954
  store i64 0, i64* %i, align 8, !dbg !1955
  br label %for.cond, !dbg !1957

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !1958
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !1960
  %cmp = icmp slt i64 %0, %call, !dbg !1961
  br i1 %cmp, label %for.body, label %for.end, !dbg !1962

for.body:                                         ; preds = %for.cond
  %1 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !1963
  %2 = load i64, i64* %i, align 8, !dbg !1965
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %1, i64 %2, !dbg !1963
  %3 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx, align 8, !dbg !1963
  %cmp1 = icmp ne %struct._RandomInfo* %3, null, !dbg !1966
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1967

if.then:                                          ; preds = %for.body
  %4 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !1968
  %5 = load i64, i64* %i, align 8, !dbg !1969
  %arrayidx2 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %4, i64 %5, !dbg !1968
  %6 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx2, align 8, !dbg !1968
  %call3 = call %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo* %6), !dbg !1970
  %7 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !1971
  %8 = load i64, i64* %i, align 8, !dbg !1972
  %arrayidx4 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %7, i64 %8, !dbg !1971
  store %struct._RandomInfo* %call3, %struct._RandomInfo** %arrayidx4, align 8, !dbg !1973
  br label %if.end, !dbg !1971

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !1974

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !1975
  %inc = add nsw i64 %9, 1, !dbg !1975
  store i64 %inc, i64* %i, align 8, !dbg !1975
  br label %for.cond, !dbg !1976, !llvm.loop !1977

for.end:                                          ; preds = %for.cond
  %10 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !1979
  %11 = bitcast %struct._RandomInfo** %10 to i8*, !dbg !1979
  %call5 = call i8* @RelinquishAlignedMemory(i8* %11), !dbg !1980
  %12 = bitcast i8* %call5 to %struct._RandomInfo**, !dbg !1981
  ret %struct._RandomInfo** %12, !dbg !1982
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @BlueShiftImage(%struct._Image* %image, double %factor, %struct._ExceptionInfo* %exception) #0 !dbg !1983 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %factor.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %shift_view = alloca %struct._CacheView*, align 8
  %shift_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %sync = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %quantum = alloca i16, align 2
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1987, metadata !DIExpression()), !dbg !1988
  store double %factor, double* %factor.addr, align 8
  call void @llvm.dbg.declare(metadata double* %factor.addr, metadata !1989, metadata !DIExpression()), !dbg !1990
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1991, metadata !DIExpression()), !dbg !1992
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1993, metadata !DIExpression()), !dbg !1994
  call void @llvm.dbg.declare(metadata %struct._CacheView** %shift_view, metadata !1995, metadata !DIExpression()), !dbg !1996
  call void @llvm.dbg.declare(metadata %struct._Image** %shift_image, metadata !1997, metadata !DIExpression()), !dbg !1998
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1999, metadata !DIExpression()), !dbg !2000
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2001, metadata !DIExpression()), !dbg !2002
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2003, metadata !DIExpression()), !dbg !2004
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2005
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2007
  %1 = load i32, i32* %debug, align 8, !dbg !2007
  %cmp = icmp ne i32 %1, 0, !dbg !2008
  br i1 %cmp, label %if.then, label %if.end, !dbg !2009

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2010
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2011
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2010
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 494, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !2012
  br label %if.end, !dbg !2013

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2014
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2015
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !2016
  %5 = load i64, i64* %columns, align 8, !dbg !2016
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2017
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !2018
  %7 = load i64, i64* %rows, align 8, !dbg !2018
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2019
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %7, i32 1, %struct._ExceptionInfo* %8), !dbg !2020
  store %struct._Image* %call1, %struct._Image** %shift_image, align 8, !dbg !2021
  %9 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2022
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !2024
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2025

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2026
  br label %return, !dbg !2026

if.end4:                                          ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2027
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %10, i32 1), !dbg !2029
  %cmp6 = icmp eq i32 %call5, 0, !dbg !2030
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2031

if.then7:                                         ; preds = %if.end4
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2032
  %12 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2034
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !2035
  call void @InheritException(%struct._ExceptionInfo* %11, %struct._ExceptionInfo* %exception8), !dbg !2036
  %13 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2037
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %13), !dbg !2038
  store %struct._Image* %call9, %struct._Image** %shift_image, align 8, !dbg !2039
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2040
  br label %return, !dbg !2040

if.end10:                                         ; preds = %if.end4
  store i32 1, i32* %status, align 4, !dbg !2041
  store i64 0, i64* %progress, align 8, !dbg !2042
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2043
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2044
  %call11 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %14, %struct._ExceptionInfo* %15), !dbg !2045
  store %struct._CacheView* %call11, %struct._CacheView** %image_view, align 8, !dbg !2046
  %16 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2047
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2048
  %call12 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %16, %struct._ExceptionInfo* %17), !dbg !2049
  store %struct._CacheView* %call12, %struct._CacheView** %shift_view, align 8, !dbg !2050
  store i64 0, i64* %y, align 8, !dbg !2051
  br label %for.cond, !dbg !2053

for.cond:                                         ; preds = %for.inc141, %if.end10
  %18 = load i64, i64* %y, align 8, !dbg !2054
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2056
  %rows13 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !2057
  %20 = load i64, i64* %rows13, align 8, !dbg !2057
  %cmp14 = icmp slt i64 %18, %20, !dbg !2058
  br i1 %cmp14, label %for.body, label %for.end143, !dbg !2059

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !2060, metadata !DIExpression()), !dbg !2062
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2063, metadata !DIExpression()), !dbg !2064
  call void @llvm.dbg.declare(metadata i16* %quantum, metadata !2065, metadata !DIExpression()), !dbg !2066
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2067, metadata !DIExpression()), !dbg !2068
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2069, metadata !DIExpression()), !dbg !2070
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2071, metadata !DIExpression()), !dbg !2072
  %21 = load i32, i32* %status, align 4, !dbg !2073
  %cmp15 = icmp eq i32 %21, 0, !dbg !2075
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2076

if.then16:                                        ; preds = %for.body
  br label %for.inc141, !dbg !2077

if.end17:                                         ; preds = %for.body
  %22 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2078
  %23 = load i64, i64* %y, align 8, !dbg !2079
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2080
  %columns18 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 7, !dbg !2081
  %25 = load i64, i64* %columns18, align 8, !dbg !2081
  %26 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2082
  %call19 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %22, i64 0, i64 %23, i64 %25, i64 1, %struct._ExceptionInfo* %26), !dbg !2083
  store %struct._PixelPacket* %call19, %struct._PixelPacket** %p, align 8, !dbg !2084
  %27 = load %struct._CacheView*, %struct._CacheView** %shift_view, align 8, !dbg !2085
  %28 = load i64, i64* %y, align 8, !dbg !2086
  %29 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2087
  %columns20 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 7, !dbg !2088
  %30 = load i64, i64* %columns20, align 8, !dbg !2088
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2089
  %call21 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %27, i64 0, i64 %28, i64 %30, i64 1, %struct._ExceptionInfo* %31), !dbg !2090
  store %struct._PixelPacket* %call21, %struct._PixelPacket** %q, align 8, !dbg !2091
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2092
  %cmp22 = icmp eq %struct._PixelPacket* %32, null, !dbg !2094
  br i1 %cmp22, label %if.then24, label %lor.lhs.false, !dbg !2095

lor.lhs.false:                                    ; preds = %if.end17
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2096
  %cmp23 = icmp eq %struct._PixelPacket* %33, null, !dbg !2097
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !2098

if.then24:                                        ; preds = %lor.lhs.false, %if.end17
  store i32 0, i32* %status, align 4, !dbg !2099
  br label %for.inc141, !dbg !2101

if.end25:                                         ; preds = %lor.lhs.false
  store i64 0, i64* %x, align 8, !dbg !2102
  br label %for.cond26, !dbg !2104

for.cond26:                                       ; preds = %for.inc, %if.end25
  %34 = load i64, i64* %x, align 8, !dbg !2105
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2107
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !2108
  %36 = load i64, i64* %columns27, align 8, !dbg !2108
  %cmp28 = icmp slt i64 %34, %36, !dbg !2109
  br i1 %cmp28, label %for.body29, label %for.end, !dbg !2110

for.body29:                                       ; preds = %for.cond26
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2111
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 2, !dbg !2111
  %38 = load i16, i16* %red, align 2, !dbg !2111
  store i16 %38, i16* %quantum, align 2, !dbg !2113
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2114
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !2114
  %40 = load i16, i16* %green, align 2, !dbg !2114
  %conv = zext i16 %40 to i32, !dbg !2114
  %41 = load i16, i16* %quantum, align 2, !dbg !2116
  %conv30 = zext i16 %41 to i32, !dbg !2116
  %cmp31 = icmp slt i32 %conv, %conv30, !dbg !2117
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !2118

if.then33:                                        ; preds = %for.body29
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2119
  %green34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 1, !dbg !2119
  %43 = load i16, i16* %green34, align 2, !dbg !2119
  store i16 %43, i16* %quantum, align 2, !dbg !2120
  br label %if.end35, !dbg !2121

if.end35:                                         ; preds = %if.then33, %for.body29
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2122
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 0, !dbg !2122
  %45 = load i16, i16* %blue, align 2, !dbg !2122
  %conv36 = zext i16 %45 to i32, !dbg !2122
  %46 = load i16, i16* %quantum, align 2, !dbg !2124
  %conv37 = zext i16 %46 to i32, !dbg !2124
  %cmp38 = icmp slt i32 %conv36, %conv37, !dbg !2125
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !2126

if.then40:                                        ; preds = %if.end35
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2127
  %blue41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 0, i32 0, !dbg !2127
  %48 = load i16, i16* %blue41, align 2, !dbg !2127
  store i16 %48, i16* %quantum, align 2, !dbg !2128
  br label %if.end42, !dbg !2129

if.end42:                                         ; preds = %if.then40, %if.end35
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2130
  %red43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 2, !dbg !2130
  %50 = load i16, i16* %red43, align 2, !dbg !2130
  %conv44 = zext i16 %50 to i32, !dbg !2130
  %conv45 = sitofp i32 %conv44 to double, !dbg !2130
  %51 = load double, double* %factor.addr, align 8, !dbg !2131
  %52 = load i16, i16* %quantum, align 2, !dbg !2132
  %conv46 = zext i16 %52 to i32, !dbg !2132
  %conv47 = sitofp i32 %conv46 to double, !dbg !2132
  %mul = fmul double %51, %conv47, !dbg !2133
  %add = fadd double %conv45, %mul, !dbg !2134
  %mul48 = fmul double 5.000000e-01, %add, !dbg !2135
  %conv49 = fptrunc double %mul48 to float, !dbg !2136
  %red50 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2137
  store float %conv49, float* %red50, align 8, !dbg !2138
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2139
  %green51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 1, !dbg !2139
  %54 = load i16, i16* %green51, align 2, !dbg !2139
  %conv52 = zext i16 %54 to i32, !dbg !2139
  %conv53 = sitofp i32 %conv52 to double, !dbg !2139
  %55 = load double, double* %factor.addr, align 8, !dbg !2140
  %56 = load i16, i16* %quantum, align 2, !dbg !2141
  %conv54 = zext i16 %56 to i32, !dbg !2141
  %conv55 = sitofp i32 %conv54 to double, !dbg !2141
  %mul56 = fmul double %55, %conv55, !dbg !2142
  %add57 = fadd double %conv53, %mul56, !dbg !2143
  %mul58 = fmul double 5.000000e-01, %add57, !dbg !2144
  %conv59 = fptrunc double %mul58 to float, !dbg !2145
  %green60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2146
  store float %conv59, float* %green60, align 4, !dbg !2147
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2148
  %blue61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 0, !dbg !2148
  %58 = load i16, i16* %blue61, align 2, !dbg !2148
  %conv62 = zext i16 %58 to i32, !dbg !2148
  %conv63 = sitofp i32 %conv62 to double, !dbg !2148
  %59 = load double, double* %factor.addr, align 8, !dbg !2149
  %60 = load i16, i16* %quantum, align 2, !dbg !2150
  %conv64 = zext i16 %60 to i32, !dbg !2150
  %conv65 = sitofp i32 %conv64 to double, !dbg !2150
  %mul66 = fmul double %59, %conv65, !dbg !2151
  %add67 = fadd double %conv63, %mul66, !dbg !2152
  %mul68 = fmul double 5.000000e-01, %add67, !dbg !2153
  %conv69 = fptrunc double %mul68 to float, !dbg !2154
  %blue70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2155
  store float %conv69, float* %blue70, align 8, !dbg !2156
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2157
  %red71 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !2157
  %62 = load i16, i16* %red71, align 2, !dbg !2157
  store i16 %62, i16* %quantum, align 2, !dbg !2158
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2159
  %green72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 1, !dbg !2159
  %64 = load i16, i16* %green72, align 2, !dbg !2159
  %conv73 = zext i16 %64 to i32, !dbg !2159
  %65 = load i16, i16* %quantum, align 2, !dbg !2161
  %conv74 = zext i16 %65 to i32, !dbg !2161
  %cmp75 = icmp sgt i32 %conv73, %conv74, !dbg !2162
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !2163

if.then77:                                        ; preds = %if.end42
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2164
  %green78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 1, !dbg !2164
  %67 = load i16, i16* %green78, align 2, !dbg !2164
  store i16 %67, i16* %quantum, align 2, !dbg !2165
  br label %if.end79, !dbg !2166

if.end79:                                         ; preds = %if.then77, %if.end42
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2167
  %blue80 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 0, !dbg !2167
  %69 = load i16, i16* %blue80, align 2, !dbg !2167
  %conv81 = zext i16 %69 to i32, !dbg !2167
  %70 = load i16, i16* %quantum, align 2, !dbg !2169
  %conv82 = zext i16 %70 to i32, !dbg !2169
  %cmp83 = icmp sgt i32 %conv81, %conv82, !dbg !2170
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !2171

if.then85:                                        ; preds = %if.end79
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2172
  %blue86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 0, !dbg !2172
  %72 = load i16, i16* %blue86, align 2, !dbg !2172
  store i16 %72, i16* %quantum, align 2, !dbg !2173
  br label %if.end87, !dbg !2174

if.end87:                                         ; preds = %if.then85, %if.end79
  %red88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2175
  %73 = load float, float* %red88, align 8, !dbg !2175
  %conv89 = fpext float %73 to double, !dbg !2176
  %74 = load double, double* %factor.addr, align 8, !dbg !2177
  %75 = load i16, i16* %quantum, align 2, !dbg !2178
  %conv90 = zext i16 %75 to i32, !dbg !2178
  %conv91 = sitofp i32 %conv90 to double, !dbg !2178
  %mul92 = fmul double %74, %conv91, !dbg !2179
  %add93 = fadd double %conv89, %mul92, !dbg !2180
  %mul94 = fmul double 5.000000e-01, %add93, !dbg !2181
  %conv95 = fptrunc double %mul94 to float, !dbg !2182
  %red96 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2183
  store float %conv95, float* %red96, align 8, !dbg !2184
  %green97 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2185
  %76 = load float, float* %green97, align 4, !dbg !2185
  %conv98 = fpext float %76 to double, !dbg !2186
  %77 = load double, double* %factor.addr, align 8, !dbg !2187
  %78 = load i16, i16* %quantum, align 2, !dbg !2188
  %conv99 = zext i16 %78 to i32, !dbg !2188
  %conv100 = sitofp i32 %conv99 to double, !dbg !2188
  %mul101 = fmul double %77, %conv100, !dbg !2189
  %add102 = fadd double %conv98, %mul101, !dbg !2190
  %mul103 = fmul double 5.000000e-01, %add102, !dbg !2191
  %conv104 = fptrunc double %mul103 to float, !dbg !2192
  %green105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2193
  store float %conv104, float* %green105, align 4, !dbg !2194
  %blue106 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2195
  %79 = load float, float* %blue106, align 8, !dbg !2195
  %conv107 = fpext float %79 to double, !dbg !2196
  %80 = load double, double* %factor.addr, align 8, !dbg !2197
  %81 = load i16, i16* %quantum, align 2, !dbg !2198
  %conv108 = zext i16 %81 to i32, !dbg !2198
  %conv109 = sitofp i32 %conv108 to double, !dbg !2198
  %mul110 = fmul double %80, %conv109, !dbg !2199
  %add111 = fadd double %conv107, %mul110, !dbg !2200
  %mul112 = fmul double 5.000000e-01, %add111, !dbg !2201
  %conv113 = fptrunc double %mul112 to float, !dbg !2202
  %blue114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2203
  store float %conv113, float* %blue114, align 8, !dbg !2204
  %red115 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2205
  %82 = load float, float* %red115, align 8, !dbg !2205
  %call116 = call zeroext i16 @ClampToQuantum(float %82), !dbg !2205
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2205
  %red117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 2, !dbg !2205
  store i16 %call116, i16* %red117, align 2, !dbg !2205
  %green118 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2206
  %84 = load float, float* %green118, align 4, !dbg !2206
  %call119 = call zeroext i16 @ClampToQuantum(float %84), !dbg !2206
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2206
  %green120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 1, !dbg !2206
  store i16 %call119, i16* %green120, align 2, !dbg !2206
  %blue121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2207
  %86 = load float, float* %blue121, align 8, !dbg !2207
  %call122 = call zeroext i16 @ClampToQuantum(float %86), !dbg !2207
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2207
  %blue123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 0, !dbg !2207
  store i16 %call122, i16* %blue123, align 2, !dbg !2207
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2208
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !2208
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !2208
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2209
  %incdec.ptr124 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !2209
  store %struct._PixelPacket* %incdec.ptr124, %struct._PixelPacket** %q, align 8, !dbg !2209
  br label %for.inc, !dbg !2210

for.inc:                                          ; preds = %if.end87
  %90 = load i64, i64* %x, align 8, !dbg !2211
  %inc = add nsw i64 %90, 1, !dbg !2211
  store i64 %inc, i64* %x, align 8, !dbg !2211
  br label %for.cond26, !dbg !2212, !llvm.loop !2213

for.end:                                          ; preds = %for.cond26
  %91 = load %struct._CacheView*, %struct._CacheView** %shift_view, align 8, !dbg !2215
  %92 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2216
  %call125 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %91, %struct._ExceptionInfo* %92), !dbg !2217
  store i32 %call125, i32* %sync, align 4, !dbg !2218
  %93 = load i32, i32* %sync, align 4, !dbg !2219
  %cmp126 = icmp eq i32 %93, 0, !dbg !2221
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !2222

if.then128:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !2223
  br label %if.end129, !dbg !2224

if.end129:                                        ; preds = %if.then128, %for.end
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2225
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 47, !dbg !2227
  %95 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2227
  %cmp130 = icmp ne i32 (i8*, i64, i64, i8*)* %95, null, !dbg !2228
  br i1 %cmp130, label %if.then132, label %if.end140, !dbg !2229

if.then132:                                       ; preds = %if.end129
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2230, metadata !DIExpression()), !dbg !2232
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2233
  %97 = load i64, i64* %progress, align 8, !dbg !2234
  %inc133 = add nsw i64 %97, 1, !dbg !2234
  store i64 %inc133, i64* %progress, align 8, !dbg !2234
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2235
  %rows134 = getelementptr inbounds %struct._Image, %struct._Image* %98, i32 0, i32 8, !dbg !2236
  %99 = load i64, i64* %rows134, align 8, !dbg !2236
  %call135 = call i32 @SetImageProgress(%struct._Image* %96, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i64 %97, i64 %99), !dbg !2237
  store i32 %call135, i32* %proceed, align 4, !dbg !2238
  %100 = load i32, i32* %proceed, align 4, !dbg !2239
  %cmp136 = icmp eq i32 %100, 0, !dbg !2241
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !2242

if.then138:                                       ; preds = %if.then132
  store i32 0, i32* %status, align 4, !dbg !2243
  br label %if.end139, !dbg !2244

if.end139:                                        ; preds = %if.then138, %if.then132
  br label %if.end140, !dbg !2245

if.end140:                                        ; preds = %if.end139, %if.end129
  br label %for.inc141, !dbg !2246

for.inc141:                                       ; preds = %if.end140, %if.then24, %if.then16
  %101 = load i64, i64* %y, align 8, !dbg !2247
  %inc142 = add nsw i64 %101, 1, !dbg !2247
  store i64 %inc142, i64* %y, align 8, !dbg !2247
  br label %for.cond, !dbg !2248, !llvm.loop !2249

for.end143:                                       ; preds = %for.cond
  %102 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2251
  %call144 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %102), !dbg !2252
  store %struct._CacheView* %call144, %struct._CacheView** %image_view, align 8, !dbg !2253
  %103 = load %struct._CacheView*, %struct._CacheView** %shift_view, align 8, !dbg !2254
  %call145 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %103), !dbg !2255
  store %struct._CacheView* %call145, %struct._CacheView** %shift_view, align 8, !dbg !2256
  %104 = load i32, i32* %status, align 4, !dbg !2257
  %cmp146 = icmp eq i32 %104, 0, !dbg !2259
  br i1 %cmp146, label %if.then148, label %if.end150, !dbg !2260

if.then148:                                       ; preds = %for.end143
  %105 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2261
  %call149 = call %struct._Image* @DestroyImage(%struct._Image* %105), !dbg !2262
  store %struct._Image* %call149, %struct._Image** %shift_image, align 8, !dbg !2263
  br label %if.end150, !dbg !2264

if.end150:                                        ; preds = %if.then148, %for.end143
  %106 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2265
  store %struct._Image* %106, %struct._Image** %retval, align 8, !dbg !2266
  br label %return, !dbg !2266

return:                                           ; preds = %if.end150, %if.then7, %if.then3
  %107 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !2267
  ret %struct._Image* %107, !dbg !2267
}

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @CharcoalImage(%struct._Image* %image, double %radius, double %sigma, %struct._ExceptionInfo* %exception) #0 !dbg !2268 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %charcoal_image = alloca %struct._Image*, align 8
  %clone_image = alloca %struct._Image*, align 8
  %edge_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2271, metadata !DIExpression()), !dbg !2272
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !2273, metadata !DIExpression()), !dbg !2274
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !2275, metadata !DIExpression()), !dbg !2276
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2277, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.declare(metadata %struct._Image** %charcoal_image, metadata !2279, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.declare(metadata %struct._Image** %clone_image, metadata !2281, metadata !DIExpression()), !dbg !2282
  call void @llvm.dbg.declare(metadata %struct._Image** %edge_image, metadata !2283, metadata !DIExpression()), !dbg !2284
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2285
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2287
  %1 = load i32, i32* %debug, align 8, !dbg !2287
  %cmp = icmp ne i32 %1, 0, !dbg !2288
  br i1 %cmp, label %if.then, label %if.end, !dbg !2289

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2290
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2291
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2290
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 638, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !2292
  br label %if.end, !dbg !2293

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2294
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2295
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !2296
  store %struct._Image* %call1, %struct._Image** %clone_image, align 8, !dbg !2297
  %5 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2298
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !2300
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2301

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2302
  br label %return, !dbg !2302

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2303
  %7 = load double, double* %radius.addr, align 8, !dbg !2304
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2305
  %call5 = call %struct._Image* @EdgeImage(%struct._Image* %6, double %7, %struct._ExceptionInfo* %8), !dbg !2306
  store %struct._Image* %call5, %struct._Image** %edge_image, align 8, !dbg !2307
  %9 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2308
  %call6 = call %struct._Image* @DestroyImage(%struct._Image* %9), !dbg !2309
  store %struct._Image* %call6, %struct._Image** %clone_image, align 8, !dbg !2310
  %10 = load %struct._Image*, %struct._Image** %edge_image, align 8, !dbg !2311
  %cmp7 = icmp eq %struct._Image* %10, null, !dbg !2313
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2314

if.then8:                                         ; preds = %if.end4
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2315
  br label %return, !dbg !2315

if.end9:                                          ; preds = %if.end4
  %11 = load %struct._Image*, %struct._Image** %edge_image, align 8, !dbg !2316
  %12 = load double, double* %radius.addr, align 8, !dbg !2317
  %13 = load double, double* %sigma.addr, align 8, !dbg !2318
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2319
  %call10 = call %struct._Image* @BlurImage(%struct._Image* %11, double %12, double %13, %struct._ExceptionInfo* %14), !dbg !2320
  store %struct._Image* %call10, %struct._Image** %charcoal_image, align 8, !dbg !2321
  %15 = load %struct._Image*, %struct._Image** %edge_image, align 8, !dbg !2322
  %call11 = call %struct._Image* @DestroyImage(%struct._Image* %15), !dbg !2323
  store %struct._Image* %call11, %struct._Image** %edge_image, align 8, !dbg !2324
  %16 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2325
  %cmp12 = icmp eq %struct._Image* %16, null, !dbg !2327
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2328

if.then13:                                        ; preds = %if.end9
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2329
  br label %return, !dbg !2329

if.end14:                                         ; preds = %if.end9
  %17 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2330
  %call15 = call i32 @NormalizeImage(%struct._Image* %17), !dbg !2331
  %18 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2332
  %call16 = call i32 @NegateImage(%struct._Image* %18, i32 0), !dbg !2333
  %19 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2334
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2335
  %intensity = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 83, !dbg !2336
  %21 = load i32, i32* %intensity, align 8, !dbg !2336
  %call17 = call i32 @GrayscaleImage(%struct._Image* %19, i32 %21), !dbg !2337
  %22 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2338
  store %struct._Image* %22, %struct._Image** %retval, align 8, !dbg !2339
  br label %return, !dbg !2339

return:                                           ; preds = %if.end14, %if.then13, %if.then8, %if.then3
  %23 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !2340
  ret %struct._Image* %23, !dbg !2340
}

declare dso_local %struct._Image* @EdgeImage(%struct._Image*, double, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @BlurImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #3

declare dso_local i32 @NormalizeImage(%struct._Image*) #3

declare dso_local i32 @NegateImage(%struct._Image*, i32) #3

declare dso_local i32 @GrayscaleImage(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ColorizeImage(%struct._Image* %image, i8* %opacity, i64 %colorize.coerce, %struct._ExceptionInfo* %exception) #0 !dbg !2341 {
entry:
  %retval = alloca %struct._Image*, align 8
  %colorize = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %colorize_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %colorize_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %flags = alloca i32, align 4
  %y = alloca i64, align 8
  %sync = alloca i32, align 4
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  %0 = bitcast %struct._PixelPacket* %colorize to i64*
  store i64 %colorize.coerce, i64* %0, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2344, metadata !DIExpression()), !dbg !2345
  store i8* %opacity, i8** %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opacity.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %colorize, metadata !2348, metadata !DIExpression()), !dbg !2349
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2350, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.declare(metadata %struct._CacheView** %colorize_view, metadata !2352, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2354, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !2356, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.declare(metadata %struct._Image** %colorize_image, metadata !2366, metadata !DIExpression()), !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2368, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2370, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2372, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2374, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2377, metadata !DIExpression()), !dbg !2378
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2379
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !2381
  %2 = load i32, i32* %debug, align 8, !dbg !2381
  %cmp = icmp ne i32 %2, 0, !dbg !2382
  br i1 %cmp, label %if.then, label %if.end, !dbg !2383

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2384
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2385
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2384
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 727, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !2386
  br label %if.end, !dbg !2387

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2388
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2389
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 7, !dbg !2390
  %6 = load i64, i64* %columns, align 8, !dbg !2390
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2391
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !2392
  %8 = load i64, i64* %rows, align 8, !dbg !2392
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2393
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %4, i64 %6, i64 %8, i32 1, %struct._ExceptionInfo* %9), !dbg !2394
  store %struct._Image* %call1, %struct._Image** %colorize_image, align 8, !dbg !2395
  %10 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2396
  %cmp2 = icmp eq %struct._Image* %10, null, !dbg !2398
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2399

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2400
  br label %return, !dbg !2400

if.end4:                                          ; preds = %if.end
  %11 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2401
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %11, i32 1), !dbg !2403
  %cmp6 = icmp eq i32 %call5, 0, !dbg !2404
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2405

if.then7:                                         ; preds = %if.end4
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2406
  %13 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2408
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !2409
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception8), !dbg !2410
  %14 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2411
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %14), !dbg !2412
  store %struct._Image* %call9, %struct._Image** %colorize_image, align 8, !dbg !2413
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2414
  br label %return, !dbg !2414

if.end10:                                         ; preds = %if.end4
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2415
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 1, !dbg !2417
  %16 = load i32, i32* %colorspace, align 4, !dbg !2417
  %call11 = call i32 @IsGrayColorspace(i32 %16), !dbg !2418
  %cmp12 = icmp ne i32 %call11, 0, !dbg !2419
  br i1 %cmp12, label %if.then15, label %lor.lhs.false, !dbg !2420

lor.lhs.false:                                    ; preds = %if.end10
  %call13 = call i32 @IsPixelGray(%struct._PixelPacket* %colorize), !dbg !2421
  %cmp14 = icmp ne i32 %call13, 0, !dbg !2422
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !2423

if.then15:                                        ; preds = %lor.lhs.false, %if.end10
  %17 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2424
  %call16 = call i32 @SetImageColorspace(%struct._Image* %17, i32 13), !dbg !2425
  br label %if.end17, !dbg !2426

if.end17:                                         ; preds = %if.then15, %lor.lhs.false
  %18 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2427
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 6, !dbg !2429
  %19 = load i32, i32* %matte, align 8, !dbg !2429
  %cmp18 = icmp eq i32 %19, 0, !dbg !2430
  br i1 %cmp18, label %land.lhs.true, label %if.end24, !dbg !2431

land.lhs.true:                                    ; preds = %if.end17
  %opacity19 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %colorize, i32 0, i32 3, !dbg !2432
  %20 = load i16, i16* %opacity19, align 2, !dbg !2432
  %conv = zext i16 %20 to i32, !dbg !2433
  %cmp20 = icmp ne i32 %conv, 0, !dbg !2434
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !2435

if.then22:                                        ; preds = %land.lhs.true
  %21 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2436
  %call23 = call i32 @SetImageAlphaChannel(%struct._Image* %21, i32 6), !dbg !2437
  br label %if.end24, !dbg !2438

if.end24:                                         ; preds = %if.then22, %land.lhs.true, %if.end17
  %22 = load i8*, i8** %opacity.addr, align 8, !dbg !2439
  %cmp25 = icmp eq i8* %22, null, !dbg !2441
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !2442

if.then27:                                        ; preds = %if.end24
  %23 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2443
  store %struct._Image* %23, %struct._Image** %retval, align 8, !dbg !2444
  br label %return, !dbg !2444

if.end28:                                         ; preds = %if.end24
  %24 = load i8*, i8** %opacity.addr, align 8, !dbg !2445
  %call29 = call i32 @ParseGeometry(i8* %24, %struct._GeometryInfo* %geometry_info), !dbg !2446
  store i32 %call29, i32* %flags, align 4, !dbg !2447
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2448
  %25 = load double, double* %rho, align 8, !dbg !2448
  %conv30 = fptrunc double %25 to float, !dbg !2449
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2450
  store float %conv30, float* %red, align 8, !dbg !2451
  %rho31 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2452
  %26 = load double, double* %rho31, align 8, !dbg !2452
  %conv32 = fptrunc double %26 to float, !dbg !2453
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2454
  store float %conv32, float* %green, align 4, !dbg !2455
  %rho33 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2456
  %27 = load double, double* %rho33, align 8, !dbg !2456
  %conv34 = fptrunc double %27 to float, !dbg !2457
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2458
  store float %conv34, float* %blue, align 8, !dbg !2459
  %opacity35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !2460
  store float 0.000000e+00, float* %opacity35, align 4, !dbg !2461
  %28 = load i32, i32* %flags, align 4, !dbg !2462
  %and = and i32 %28, 8, !dbg !2464
  %cmp36 = icmp ne i32 %and, 0, !dbg !2465
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !2466

if.then38:                                        ; preds = %if.end28
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !2467
  %29 = load double, double* %sigma, align 8, !dbg !2467
  %conv39 = fptrunc double %29 to float, !dbg !2468
  %green40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2469
  store float %conv39, float* %green40, align 4, !dbg !2470
  br label %if.end41, !dbg !2471

if.end41:                                         ; preds = %if.then38, %if.end28
  %30 = load i32, i32* %flags, align 4, !dbg !2472
  %and42 = and i32 %30, 1, !dbg !2474
  %cmp43 = icmp ne i32 %and42, 0, !dbg !2475
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !2476

if.then45:                                        ; preds = %if.end41
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !2477
  %31 = load double, double* %xi, align 8, !dbg !2477
  %conv46 = fptrunc double %31 to float, !dbg !2478
  %blue47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2479
  store float %conv46, float* %blue47, align 8, !dbg !2480
  br label %if.end48, !dbg !2481

if.end48:                                         ; preds = %if.then45, %if.end41
  %32 = load i32, i32* %flags, align 4, !dbg !2482
  %and49 = and i32 %32, 2, !dbg !2484
  %cmp50 = icmp ne i32 %and49, 0, !dbg !2485
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !2486

if.then52:                                        ; preds = %if.end48
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !2487
  %33 = load double, double* %psi, align 8, !dbg !2487
  %conv53 = fptrunc double %33 to float, !dbg !2488
  %opacity54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !2489
  store float %conv53, float* %opacity54, align 4, !dbg !2490
  br label %if.end55, !dbg !2491

if.end55:                                         ; preds = %if.then52, %if.end48
  store i32 1, i32* %status, align 4, !dbg !2492
  store i64 0, i64* %progress, align 8, !dbg !2493
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2494
  %35 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2495
  %call56 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %34, %struct._ExceptionInfo* %35), !dbg !2496
  store %struct._CacheView* %call56, %struct._CacheView** %image_view, align 8, !dbg !2497
  %36 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2498
  %37 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2499
  %call57 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %36, %struct._ExceptionInfo* %37), !dbg !2500
  store %struct._CacheView* %call57, %struct._CacheView** %colorize_view, align 8, !dbg !2501
  store i64 0, i64* %y, align 8, !dbg !2502
  br label %for.cond, !dbg !2504

for.cond:                                         ; preds = %for.inc169, %if.end55
  %38 = load i64, i64* %y, align 8, !dbg !2505
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2507
  %rows58 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 8, !dbg !2508
  %40 = load i64, i64* %rows58, align 8, !dbg !2508
  %cmp59 = icmp slt i64 %38, %40, !dbg !2509
  br i1 %cmp59, label %for.body, label %for.end171, !dbg !2510

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !2511, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2514, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2516, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2518, metadata !DIExpression()), !dbg !2519
  %41 = load i32, i32* %status, align 4, !dbg !2520
  %cmp61 = icmp eq i32 %41, 0, !dbg !2522
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !2523

if.then63:                                        ; preds = %for.body
  br label %for.inc169, !dbg !2524

if.end64:                                         ; preds = %for.body
  %42 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2525
  %43 = load i64, i64* %y, align 8, !dbg !2526
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2527
  %columns65 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 7, !dbg !2528
  %45 = load i64, i64* %columns65, align 8, !dbg !2528
  %46 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2529
  %call66 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %42, i64 0, i64 %43, i64 %45, i64 1, %struct._ExceptionInfo* %46), !dbg !2530
  store %struct._PixelPacket* %call66, %struct._PixelPacket** %p, align 8, !dbg !2531
  %47 = load %struct._CacheView*, %struct._CacheView** %colorize_view, align 8, !dbg !2532
  %48 = load i64, i64* %y, align 8, !dbg !2533
  %49 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2534
  %columns67 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 7, !dbg !2535
  %50 = load i64, i64* %columns67, align 8, !dbg !2535
  %51 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2536
  %call68 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %47, i64 0, i64 %48, i64 %50, i64 1, %struct._ExceptionInfo* %51), !dbg !2537
  store %struct._PixelPacket* %call68, %struct._PixelPacket** %q, align 8, !dbg !2538
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2539
  %cmp69 = icmp eq %struct._PixelPacket* %52, null, !dbg !2541
  br i1 %cmp69, label %if.then74, label %lor.lhs.false71, !dbg !2542

lor.lhs.false71:                                  ; preds = %if.end64
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2543
  %cmp72 = icmp eq %struct._PixelPacket* %53, null, !dbg !2544
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !2545

if.then74:                                        ; preds = %lor.lhs.false71, %if.end64
  store i32 0, i32* %status, align 4, !dbg !2546
  br label %for.inc169, !dbg !2548

if.end75:                                         ; preds = %lor.lhs.false71
  store i64 0, i64* %x, align 8, !dbg !2549
  br label %for.cond76, !dbg !2551

for.cond76:                                       ; preds = %for.inc, %if.end75
  %54 = load i64, i64* %x, align 8, !dbg !2552
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2554
  %columns77 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 7, !dbg !2555
  %56 = load i64, i64* %columns77, align 8, !dbg !2555
  %cmp78 = icmp slt i64 %54, %56, !dbg !2556
  br i1 %cmp78, label %for.body80, label %for.end, !dbg !2557

for.body80:                                       ; preds = %for.cond76
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2558
  %red81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 2, !dbg !2558
  %58 = load i16, i16* %red81, align 2, !dbg !2558
  %conv82 = zext i16 %58 to i32, !dbg !2558
  %conv83 = sitofp i32 %conv82 to double, !dbg !2558
  %red84 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2558
  %59 = load float, float* %red84, align 8, !dbg !2558
  %conv85 = fpext float %59 to double, !dbg !2558
  %sub = fsub double 1.000000e+02, %conv85, !dbg !2558
  %mul = fmul double %conv83, %sub, !dbg !2558
  %red86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %colorize, i32 0, i32 2, !dbg !2558
  %60 = load i16, i16* %red86, align 2, !dbg !2558
  %conv87 = zext i16 %60 to i32, !dbg !2558
  %conv88 = sitofp i32 %conv87 to float, !dbg !2558
  %red89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2558
  %61 = load float, float* %red89, align 8, !dbg !2558
  %mul90 = fmul float %conv88, %61, !dbg !2558
  %conv91 = fpext float %mul90 to double, !dbg !2558
  %add = fadd double %mul, %conv91, !dbg !2558
  %div = fdiv double %add, 1.000000e+02, !dbg !2558
  %conv92 = fptoui double %div to i16, !dbg !2558
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2558
  %red93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 2, !dbg !2558
  store i16 %conv92, i16* %red93, align 2, !dbg !2558
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2560
  %green94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 1, !dbg !2560
  %64 = load i16, i16* %green94, align 2, !dbg !2560
  %conv95 = zext i16 %64 to i32, !dbg !2560
  %conv96 = sitofp i32 %conv95 to double, !dbg !2560
  %green97 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2560
  %65 = load float, float* %green97, align 4, !dbg !2560
  %conv98 = fpext float %65 to double, !dbg !2560
  %sub99 = fsub double 1.000000e+02, %conv98, !dbg !2560
  %mul100 = fmul double %conv96, %sub99, !dbg !2560
  %green101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %colorize, i32 0, i32 1, !dbg !2560
  %66 = load i16, i16* %green101, align 2, !dbg !2560
  %conv102 = zext i16 %66 to i32, !dbg !2560
  %conv103 = sitofp i32 %conv102 to float, !dbg !2560
  %green104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !2560
  %67 = load float, float* %green104, align 4, !dbg !2560
  %mul105 = fmul float %conv103, %67, !dbg !2560
  %conv106 = fpext float %mul105 to double, !dbg !2560
  %add107 = fadd double %mul100, %conv106, !dbg !2560
  %div108 = fdiv double %add107, 1.000000e+02, !dbg !2560
  %conv109 = fptoui double %div108 to i16, !dbg !2560
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2560
  %green110 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 1, !dbg !2560
  store i16 %conv109, i16* %green110, align 2, !dbg !2560
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2561
  %blue111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 0, !dbg !2561
  %70 = load i16, i16* %blue111, align 2, !dbg !2561
  %conv112 = zext i16 %70 to i32, !dbg !2561
  %conv113 = sitofp i32 %conv112 to double, !dbg !2561
  %blue114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2561
  %71 = load float, float* %blue114, align 8, !dbg !2561
  %conv115 = fpext float %71 to double, !dbg !2561
  %sub116 = fsub double 1.000000e+02, %conv115, !dbg !2561
  %mul117 = fmul double %conv113, %sub116, !dbg !2561
  %blue118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %colorize, i32 0, i32 0, !dbg !2561
  %72 = load i16, i16* %blue118, align 2, !dbg !2561
  %conv119 = zext i16 %72 to i32, !dbg !2561
  %conv120 = sitofp i32 %conv119 to float, !dbg !2561
  %blue121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !2561
  %73 = load float, float* %blue121, align 8, !dbg !2561
  %mul122 = fmul float %conv120, %73, !dbg !2561
  %conv123 = fpext float %mul122 to double, !dbg !2561
  %add124 = fadd double %mul117, %conv123, !dbg !2561
  %div125 = fdiv double %add124, 1.000000e+02, !dbg !2561
  %conv126 = fptoui double %div125 to i16, !dbg !2561
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2561
  %blue127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 0, !dbg !2561
  store i16 %conv126, i16* %blue127, align 2, !dbg !2561
  %75 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2562
  %matte128 = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 6, !dbg !2564
  %76 = load i32, i32* %matte128, align 8, !dbg !2564
  %cmp129 = icmp eq i32 %76, 0, !dbg !2565
  br i1 %cmp129, label %if.then131, label %if.else, !dbg !2566

if.then131:                                       ; preds = %for.body80
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2567
  %opacity132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 3, !dbg !2567
  %78 = load i16, i16* %opacity132, align 2, !dbg !2567
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2567
  %opacity133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 3, !dbg !2567
  store i16 %78, i16* %opacity133, align 2, !dbg !2567
  br label %if.end151, !dbg !2567

if.else:                                          ; preds = %for.body80
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2568
  %opacity134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 3, !dbg !2568
  %81 = load i16, i16* %opacity134, align 2, !dbg !2568
  %conv135 = zext i16 %81 to i32, !dbg !2568
  %conv136 = sitofp i32 %conv135 to double, !dbg !2568
  %opacity137 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !2568
  %82 = load float, float* %opacity137, align 4, !dbg !2568
  %conv138 = fpext float %82 to double, !dbg !2568
  %sub139 = fsub double 1.000000e+02, %conv138, !dbg !2568
  %mul140 = fmul double %conv136, %sub139, !dbg !2568
  %opacity141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %colorize, i32 0, i32 3, !dbg !2568
  %83 = load i16, i16* %opacity141, align 2, !dbg !2568
  %conv142 = zext i16 %83 to i32, !dbg !2568
  %conv143 = sitofp i32 %conv142 to float, !dbg !2568
  %opacity144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !2568
  %84 = load float, float* %opacity144, align 4, !dbg !2568
  %mul145 = fmul float %conv143, %84, !dbg !2568
  %conv146 = fpext float %mul145 to double, !dbg !2568
  %add147 = fadd double %mul140, %conv146, !dbg !2568
  %div148 = fdiv double %add147, 1.000000e+02, !dbg !2568
  %conv149 = fptoui double %div148 to i16, !dbg !2568
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2568
  %opacity150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 3, !dbg !2568
  store i16 %conv149, i16* %opacity150, align 2, !dbg !2568
  br label %if.end151

if.end151:                                        ; preds = %if.else, %if.then131
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2569
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 1, !dbg !2569
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !2569
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2570
  %incdec.ptr152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 1, !dbg !2570
  store %struct._PixelPacket* %incdec.ptr152, %struct._PixelPacket** %q, align 8, !dbg !2570
  br label %for.inc, !dbg !2571

for.inc:                                          ; preds = %if.end151
  %88 = load i64, i64* %x, align 8, !dbg !2572
  %inc = add nsw i64 %88, 1, !dbg !2572
  store i64 %inc, i64* %x, align 8, !dbg !2572
  br label %for.cond76, !dbg !2573, !llvm.loop !2574

for.end:                                          ; preds = %for.cond76
  %89 = load %struct._CacheView*, %struct._CacheView** %colorize_view, align 8, !dbg !2576
  %90 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2577
  %call153 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %89, %struct._ExceptionInfo* %90), !dbg !2578
  store i32 %call153, i32* %sync, align 4, !dbg !2579
  %91 = load i32, i32* %sync, align 4, !dbg !2580
  %cmp154 = icmp eq i32 %91, 0, !dbg !2582
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !2583

if.then156:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !2584
  br label %if.end157, !dbg !2585

if.end157:                                        ; preds = %if.then156, %for.end
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2586
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 47, !dbg !2588
  %93 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2588
  %cmp158 = icmp ne i32 (i8*, i64, i64, i8*)* %93, null, !dbg !2589
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !2590

if.then160:                                       ; preds = %if.end157
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2591, metadata !DIExpression()), !dbg !2593
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2594
  %95 = load i64, i64* %progress, align 8, !dbg !2595
  %inc161 = add nsw i64 %95, 1, !dbg !2595
  store i64 %inc161, i64* %progress, align 8, !dbg !2595
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2596
  %rows162 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 8, !dbg !2597
  %97 = load i64, i64* %rows162, align 8, !dbg !2597
  %call163 = call i32 @SetImageProgress(%struct._Image* %94, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i64 %95, i64 %97), !dbg !2598
  store i32 %call163, i32* %proceed, align 4, !dbg !2599
  %98 = load i32, i32* %proceed, align 4, !dbg !2600
  %cmp164 = icmp eq i32 %98, 0, !dbg !2602
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !2603

if.then166:                                       ; preds = %if.then160
  store i32 0, i32* %status, align 4, !dbg !2604
  br label %if.end167, !dbg !2605

if.end167:                                        ; preds = %if.then166, %if.then160
  br label %if.end168, !dbg !2606

if.end168:                                        ; preds = %if.end167, %if.end157
  br label %for.inc169, !dbg !2607

for.inc169:                                       ; preds = %if.end168, %if.then74, %if.then63
  %99 = load i64, i64* %y, align 8, !dbg !2608
  %inc170 = add nsw i64 %99, 1, !dbg !2608
  store i64 %inc170, i64* %y, align 8, !dbg !2608
  br label %for.cond, !dbg !2609, !llvm.loop !2610

for.end171:                                       ; preds = %for.cond
  %100 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2612
  %call172 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %100), !dbg !2613
  store %struct._CacheView* %call172, %struct._CacheView** %image_view, align 8, !dbg !2614
  %101 = load %struct._CacheView*, %struct._CacheView** %colorize_view, align 8, !dbg !2615
  %call173 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %101), !dbg !2616
  store %struct._CacheView* %call173, %struct._CacheView** %colorize_view, align 8, !dbg !2617
  %102 = load i32, i32* %status, align 4, !dbg !2618
  %cmp174 = icmp eq i32 %102, 0, !dbg !2620
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !2621

if.then176:                                       ; preds = %for.end171
  %103 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2622
  %call177 = call %struct._Image* @DestroyImage(%struct._Image* %103), !dbg !2623
  store %struct._Image* %call177, %struct._Image** %colorize_image, align 8, !dbg !2624
  br label %if.end178, !dbg !2625

if.end178:                                        ; preds = %if.then176, %for.end171
  %104 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !2626
  store %struct._Image* %104, %struct._Image** %retval, align 8, !dbg !2627
  br label %return, !dbg !2627

return:                                           ; preds = %if.end178, %if.then27, %if.then7, %if.then3
  %105 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !2628
  ret %struct._Image* %105, !dbg !2628
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPixelGray(%struct._PixelPacket* %pixel) #0 !dbg !2629 {
entry:
  %retval = alloca i32, align 4
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %red = alloca float, align 4
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.declare(metadata float* %blue, metadata !2635, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.declare(metadata float* %green, metadata !2637, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.declare(metadata float* %red, metadata !2639, metadata !DIExpression()), !dbg !2640
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2641
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !2642
  %1 = load i16, i16* %red1, align 2, !dbg !2642
  %conv = uitofp i16 %1 to float, !dbg !2643
  store float %conv, float* %red, align 4, !dbg !2644
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2645
  %green2 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !2646
  %3 = load i16, i16* %green2, align 2, !dbg !2646
  %conv3 = uitofp i16 %3 to float, !dbg !2647
  store float %conv3, float* %green, align 4, !dbg !2648
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2649
  %blue4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !2650
  %5 = load i16, i16* %blue4, align 2, !dbg !2650
  %conv5 = uitofp i16 %5 to float, !dbg !2651
  store float %conv5, float* %blue, align 4, !dbg !2652
  %6 = load float, float* %red, align 4, !dbg !2653
  %7 = load float, float* %green, align 4, !dbg !2655
  %sub = fsub float %6, %7, !dbg !2656
  %call = call float @AbsolutePixelValue(float %sub), !dbg !2657
  %conv6 = fpext float %call to double, !dbg !2657
  %cmp = fcmp olt double %conv6, 1.000000e-15, !dbg !2658
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2659

land.lhs.true:                                    ; preds = %entry
  %8 = load float, float* %green, align 4, !dbg !2660
  %9 = load float, float* %blue, align 4, !dbg !2661
  %sub8 = fsub float %8, %9, !dbg !2662
  %call9 = call float @AbsolutePixelValue(float %sub8), !dbg !2663
  %conv10 = fpext float %call9 to double, !dbg !2663
  %cmp11 = fcmp olt double %conv10, 1.000000e-15, !dbg !2664
  br i1 %cmp11, label %if.then, label %if.end, !dbg !2665

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2666
  br label %return, !dbg !2666

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2667
  br label %return, !dbg !2667

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2668
  ret i32 %10, !dbg !2668
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #3

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #3

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ColorMatrixImage(%struct._Image* %image, %struct.KernelInfo* %color_matrix, %struct._ExceptionInfo* %exception) #0 !dbg !2669 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %color_matrix.addr = alloca %struct.KernelInfo*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %color_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %ColorMatrix = alloca [6 x [6 x double]], align 16
  %color_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %u = alloca i64, align 8
  %v = alloca i64, align 8
  %y = alloca i64, align 8
  %format = alloca [4096 x i8], align 16
  %message = alloca i8*, align 8
  %pixel = alloca float, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %color_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %v82 = alloca i64, align 8
  %height83 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  store %struct.KernelInfo* %color_matrix, %struct.KernelInfo** %color_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %color_matrix.addr, metadata !2694, metadata !DIExpression()), !dbg !2695
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2696, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata %struct._CacheView** %color_view, metadata !2698, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2700, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata [6 x [6 x double]]* %ColorMatrix, metadata !2702, metadata !DIExpression()), !dbg !2706
  %0 = bitcast [6 x [6 x double]]* %ColorMatrix to i8*, !dbg !2706
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 288, i1 false), !dbg !2706
  %1 = bitcast i8* %0 to [6 x [6 x double]]*, !dbg !2706
  %2 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 0, !dbg !2706
  %3 = getelementptr inbounds [6 x double], [6 x double]* %2, i32 0, i32 0, !dbg !2706
  store double 1.000000e+00, double* %3, align 16, !dbg !2706
  %4 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 1, !dbg !2706
  %5 = getelementptr inbounds [6 x double], [6 x double]* %4, i32 0, i32 1, !dbg !2706
  store double 1.000000e+00, double* %5, align 8, !dbg !2706
  %6 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 2, !dbg !2706
  %7 = getelementptr inbounds [6 x double], [6 x double]* %6, i32 0, i32 2, !dbg !2706
  store double 1.000000e+00, double* %7, align 16, !dbg !2706
  %8 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 3, !dbg !2706
  %9 = getelementptr inbounds [6 x double], [6 x double]* %8, i32 0, i32 3, !dbg !2706
  store double 1.000000e+00, double* %9, align 8, !dbg !2706
  %10 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 4, !dbg !2706
  %11 = getelementptr inbounds [6 x double], [6 x double]* %10, i32 0, i32 4, !dbg !2706
  store double 1.000000e+00, double* %11, align 16, !dbg !2706
  %12 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %1, i32 0, i32 5, !dbg !2706
  %13 = getelementptr inbounds [6 x double], [6 x double]* %12, i32 0, i32 5, !dbg !2706
  store double 1.000000e+00, double* %13, align 8, !dbg !2706
  call void @llvm.dbg.declare(metadata %struct._Image** %color_image, metadata !2707, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2709, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2711, metadata !DIExpression()), !dbg !2712
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata i64* %u, metadata !2715, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata i64* %v, metadata !2717, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2719, metadata !DIExpression()), !dbg !2720
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2721
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 59, !dbg !2723
  %15 = load i32, i32* %debug, align 8, !dbg !2723
  %cmp = icmp ne i32 %15, 0, !dbg !2724
  br i1 %cmp, label %if.then, label %if.end, !dbg !2725

if.then:                                          ; preds = %entry
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2726
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 53, !dbg !2727
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2726
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 912, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !2728
  br label %if.end, !dbg !2729

if.end:                                           ; preds = %if.then, %entry
  store i64 0, i64* %i, align 8, !dbg !2730
  store i64 0, i64* %v, align 8, !dbg !2731
  br label %for.cond, !dbg !2733

for.cond:                                         ; preds = %for.inc12, %if.end
  %17 = load i64, i64* %v, align 8, !dbg !2734
  %18 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !2736
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %18, i32 0, i32 2, !dbg !2737
  %19 = load i64, i64* %height, align 8, !dbg !2737
  %cmp1 = icmp slt i64 %17, %19, !dbg !2738
  br i1 %cmp1, label %for.body, label %for.end14, !dbg !2739

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %u, align 8, !dbg !2740
  br label %for.cond2, !dbg !2742

for.cond2:                                        ; preds = %for.inc, %for.body
  %20 = load i64, i64* %u, align 8, !dbg !2743
  %21 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !2745
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %21, i32 0, i32 1, !dbg !2746
  %22 = load i64, i64* %width, align 8, !dbg !2746
  %cmp3 = icmp slt i64 %20, %22, !dbg !2747
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2748

for.body4:                                        ; preds = %for.cond2
  %23 = load i64, i64* %v, align 8, !dbg !2749
  %cmp5 = icmp slt i64 %23, 6, !dbg !2752
  br i1 %cmp5, label %land.lhs.true, label %if.end10, !dbg !2753

land.lhs.true:                                    ; preds = %for.body4
  %24 = load i64, i64* %u, align 8, !dbg !2754
  %cmp6 = icmp slt i64 %24, 6, !dbg !2755
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2756

if.then7:                                         ; preds = %land.lhs.true
  %25 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !2757
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %25, i32 0, i32 5, !dbg !2758
  %26 = load double*, double** %values, align 8, !dbg !2758
  %27 = load i64, i64* %i, align 8, !dbg !2759
  %arrayidx = getelementptr inbounds double, double* %26, i64 %27, !dbg !2757
  %28 = load double, double* %arrayidx, align 8, !dbg !2757
  %29 = load i64, i64* %v, align 8, !dbg !2760
  %arrayidx8 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %29, !dbg !2761
  %30 = load i64, i64* %u, align 8, !dbg !2762
  %arrayidx9 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx8, i64 0, i64 %30, !dbg !2761
  store double %28, double* %arrayidx9, align 8, !dbg !2763
  br label %if.end10, !dbg !2761

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %for.body4
  %31 = load i64, i64* %i, align 8, !dbg !2764
  %inc = add nsw i64 %31, 1, !dbg !2764
  store i64 %inc, i64* %i, align 8, !dbg !2764
  br label %for.inc, !dbg !2765

for.inc:                                          ; preds = %if.end10
  %32 = load i64, i64* %u, align 8, !dbg !2766
  %inc11 = add nsw i64 %32, 1, !dbg !2766
  store i64 %inc11, i64* %u, align 8, !dbg !2766
  br label %for.cond2, !dbg !2767, !llvm.loop !2768

for.end:                                          ; preds = %for.cond2
  br label %for.inc12, !dbg !2769

for.inc12:                                        ; preds = %for.end
  %33 = load i64, i64* %v, align 8, !dbg !2770
  %inc13 = add nsw i64 %33, 1, !dbg !2770
  store i64 %inc13, i64* %v, align 8, !dbg !2770
  br label %for.cond, !dbg !2771, !llvm.loop !2772

for.end14:                                        ; preds = %for.cond
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2774
  %35 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2775
  %call15 = call %struct._Image* @CloneImage(%struct._Image* %34, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %35), !dbg !2776
  store %struct._Image* %call15, %struct._Image** %color_image, align 8, !dbg !2777
  %36 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2778
  %cmp16 = icmp eq %struct._Image* %36, null, !dbg !2780
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2781

if.then17:                                        ; preds = %for.end14
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2782
  br label %return, !dbg !2782

if.end18:                                         ; preds = %for.end14
  %37 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2783
  %call19 = call i32 @SetImageStorageClass(%struct._Image* %37, i32 1), !dbg !2785
  %cmp20 = icmp eq i32 %call19, 0, !dbg !2786
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !2787

if.then21:                                        ; preds = %if.end18
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2788
  %39 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2790
  %exception22 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 58, !dbg !2791
  call void @InheritException(%struct._ExceptionInfo* %38, %struct._ExceptionInfo* %exception22), !dbg !2792
  %40 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2793
  %call23 = call %struct._Image* @DestroyImage(%struct._Image* %40), !dbg !2794
  store %struct._Image* %call23, %struct._Image** %color_image, align 8, !dbg !2795
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2796
  br label %return, !dbg !2796

if.end24:                                         ; preds = %if.end18
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2797
  %debug25 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 59, !dbg !2799
  %42 = load i32, i32* %debug25, align 8, !dbg !2799
  %cmp26 = icmp ne i32 %42, 0, !dbg !2800
  br i1 %cmp26, label %if.then27, label %if.end55, !dbg !2801

if.then27:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata [4096 x i8]* %format, metadata !2802, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata i8** %message, metadata !2805, metadata !DIExpression()), !dbg !2806
  %call28 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 941, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0)), !dbg !2807
  %call29 = call i8* @AcquireString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)), !dbg !2808
  store i8* %call29, i8** %message, align 8, !dbg !2809
  store i64 0, i64* %v, align 8, !dbg !2810
  br label %for.cond30, !dbg !2812

for.cond30:                                       ; preds = %for.inc51, %if.then27
  %43 = load i64, i64* %v, align 8, !dbg !2813
  %cmp31 = icmp slt i64 %43, 6, !dbg !2815
  br i1 %cmp31, label %for.body32, label %for.end53, !dbg !2816

for.body32:                                       ; preds = %for.cond30
  %44 = load i8*, i8** %message, align 8, !dbg !2817
  store i8 0, i8* %44, align 1, !dbg !2819
  %arraydecay33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %format, i64 0, i64 0, !dbg !2820
  %45 = load i64, i64* %v, align 8, !dbg !2821
  %conv = sitofp i64 %45 to double, !dbg !2822
  %call34 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay33, i64 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), double %conv), !dbg !2823
  %arraydecay35 = getelementptr inbounds [4096 x i8], [4096 x i8]* %format, i64 0, i64 0, !dbg !2824
  %call36 = call i32 @ConcatenateString(i8** %message, i8* %arraydecay35), !dbg !2825
  store i64 0, i64* %u, align 8, !dbg !2826
  br label %for.cond37, !dbg !2828

for.cond37:                                       ; preds = %for.inc47, %for.body32
  %46 = load i64, i64* %u, align 8, !dbg !2829
  %cmp38 = icmp slt i64 %46, 6, !dbg !2831
  br i1 %cmp38, label %for.body40, label %for.end49, !dbg !2832

for.body40:                                       ; preds = %for.cond37
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %format, i64 0, i64 0, !dbg !2833
  %47 = load i64, i64* %v, align 8, !dbg !2835
  %arrayidx42 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %47, !dbg !2836
  %48 = load i64, i64* %u, align 8, !dbg !2837
  %arrayidx43 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx42, i64 0, i64 %48, !dbg !2836
  %49 = load double, double* %arrayidx43, align 8, !dbg !2836
  %call44 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay41, i64 4096, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), double %49), !dbg !2838
  %arraydecay45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %format, i64 0, i64 0, !dbg !2839
  %call46 = call i32 @ConcatenateString(i8** %message, i8* %arraydecay45), !dbg !2840
  br label %for.inc47, !dbg !2841

for.inc47:                                        ; preds = %for.body40
  %50 = load i64, i64* %u, align 8, !dbg !2842
  %inc48 = add nsw i64 %50, 1, !dbg !2842
  store i64 %inc48, i64* %u, align 8, !dbg !2842
  br label %for.cond37, !dbg !2843, !llvm.loop !2844

for.end49:                                        ; preds = %for.cond37
  %51 = load i8*, i8** %message, align 8, !dbg !2846
  %call50 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 955, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %51), !dbg !2847
  br label %for.inc51, !dbg !2848

for.inc51:                                        ; preds = %for.end49
  %52 = load i64, i64* %v, align 8, !dbg !2849
  %inc52 = add nsw i64 %52, 1, !dbg !2849
  store i64 %inc52, i64* %v, align 8, !dbg !2849
  br label %for.cond30, !dbg !2850, !llvm.loop !2851

for.end53:                                        ; preds = %for.cond30
  %53 = load i8*, i8** %message, align 8, !dbg !2853
  %call54 = call i8* @DestroyString(i8* %53), !dbg !2854
  store i8* %call54, i8** %message, align 8, !dbg !2855
  br label %if.end55, !dbg !2856

if.end55:                                         ; preds = %for.end53, %if.end24
  store i32 1, i32* %status, align 4, !dbg !2857
  store i64 0, i64* %progress, align 8, !dbg !2858
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2859
  %55 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2860
  %call56 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %54, %struct._ExceptionInfo* %55), !dbg !2861
  store %struct._CacheView* %call56, %struct._CacheView** %image_view, align 8, !dbg !2862
  %56 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2863
  %57 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2864
  %call57 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %56, %struct._ExceptionInfo* %57), !dbg !2865
  store %struct._CacheView* %call57, %struct._CacheView** %color_view, align 8, !dbg !2866
  store i64 0, i64* %y, align 8, !dbg !2867
  br label %for.cond58, !dbg !2869

for.cond58:                                       ; preds = %for.inc200, %if.end55
  %58 = load i64, i64* %y, align 8, !dbg !2870
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2872
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 8, !dbg !2873
  %60 = load i64, i64* %rows, align 8, !dbg !2873
  %cmp59 = icmp slt i64 %58, %60, !dbg !2874
  br i1 %cmp59, label %for.body61, label %for.end202, !dbg !2875

for.body61:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata float* %pixel, metadata !2876, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2879, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2881, metadata !DIExpression()), !dbg !2882
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2883, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.declare(metadata i16** %color_indexes, metadata !2885, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2887, metadata !DIExpression()), !dbg !2888
  %61 = load i32, i32* %status, align 4, !dbg !2889
  %cmp62 = icmp eq i32 %61, 0, !dbg !2891
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !2892

if.then64:                                        ; preds = %for.body61
  br label %for.inc200, !dbg !2893

if.end65:                                         ; preds = %for.body61
  %62 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2894
  %63 = load i64, i64* %y, align 8, !dbg !2895
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2896
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 7, !dbg !2897
  %65 = load i64, i64* %columns, align 8, !dbg !2897
  %66 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2898
  %call66 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %62, i64 0, i64 %63, i64 %65, i64 1, %struct._ExceptionInfo* %66), !dbg !2899
  store %struct._PixelPacket* %call66, %struct._PixelPacket** %p, align 8, !dbg !2900
  %67 = load %struct._CacheView*, %struct._CacheView** %color_view, align 8, !dbg !2901
  %68 = load i64, i64* %y, align 8, !dbg !2902
  %69 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !2903
  %columns67 = getelementptr inbounds %struct._Image, %struct._Image* %69, i32 0, i32 7, !dbg !2904
  %70 = load i64, i64* %columns67, align 8, !dbg !2904
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2905
  %call68 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %67, i64 0, i64 %68, i64 %70, i64 1, %struct._ExceptionInfo* %71), !dbg !2906
  store %struct._PixelPacket* %call68, %struct._PixelPacket** %q, align 8, !dbg !2907
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2908
  %cmp69 = icmp eq %struct._PixelPacket* %72, null, !dbg !2910
  br i1 %cmp69, label %if.then73, label %lor.lhs.false, !dbg !2911

lor.lhs.false:                                    ; preds = %if.end65
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2912
  %cmp71 = icmp eq %struct._PixelPacket* %73, null, !dbg !2913
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !2914

if.then73:                                        ; preds = %lor.lhs.false, %if.end65
  store i32 0, i32* %status, align 4, !dbg !2915
  br label %for.inc200, !dbg !2917

if.end74:                                         ; preds = %lor.lhs.false
  %74 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2918
  %call75 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %74), !dbg !2919
  store i16* %call75, i16** %indexes, align 8, !dbg !2920
  %75 = load %struct._CacheView*, %struct._CacheView** %color_view, align 8, !dbg !2921
  %call76 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %75), !dbg !2922
  store i16* %call76, i16** %color_indexes, align 8, !dbg !2923
  store i64 0, i64* %x, align 8, !dbg !2924
  br label %for.cond77, !dbg !2926

for.cond77:                                       ; preds = %for.inc181, %if.end74
  %76 = load i64, i64* %x, align 8, !dbg !2927
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2929
  %columns78 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 7, !dbg !2930
  %78 = load i64, i64* %columns78, align 8, !dbg !2930
  %cmp79 = icmp slt i64 %76, %78, !dbg !2931
  br i1 %cmp79, label %for.body81, label %for.end183, !dbg !2932

for.body81:                                       ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata i64* %v82, metadata !2933, metadata !DIExpression()), !dbg !2935
  call void @llvm.dbg.declare(metadata i64* %height83, metadata !2936, metadata !DIExpression()), !dbg !2937
  %79 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !2938
  %height84 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %79, i32 0, i32 2, !dbg !2939
  %80 = load i64, i64* %height84, align 8, !dbg !2939
  %cmp85 = icmp ugt i64 %80, 6, !dbg !2940
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !2938

cond.true:                                        ; preds = %for.body81
  br label %cond.end, !dbg !2938

cond.false:                                       ; preds = %for.body81
  %81 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !2941
  %height87 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %81, i32 0, i32 2, !dbg !2942
  %82 = load i64, i64* %height87, align 8, !dbg !2942
  br label %cond.end, !dbg !2938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 6, %cond.true ], [ %82, %cond.false ], !dbg !2938
  store i64 %cond, i64* %height83, align 8, !dbg !2943
  store i64 0, i64* %v82, align 8, !dbg !2944
  br label %for.cond88, !dbg !2946

for.cond88:                                       ; preds = %for.inc177, %cond.end
  %83 = load i64, i64* %v82, align 8, !dbg !2947
  %84 = load i64, i64* %height83, align 8, !dbg !2949
  %cmp89 = icmp slt i64 %83, %84, !dbg !2950
  br i1 %cmp89, label %for.body91, label %for.end179, !dbg !2951

for.body91:                                       ; preds = %for.cond88
  %85 = load i64, i64* %v82, align 8, !dbg !2952
  %arrayidx92 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %85, !dbg !2954
  %arrayidx93 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx92, i64 0, i64 0, !dbg !2954
  %86 = load double, double* %arrayidx93, align 16, !dbg !2954
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2955
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 2, !dbg !2955
  %88 = load i16, i16* %red, align 2, !dbg !2955
  %conv94 = zext i16 %88 to i32, !dbg !2955
  %conv95 = sitofp i32 %conv94 to double, !dbg !2955
  %mul = fmul double %86, %conv95, !dbg !2956
  %89 = load i64, i64* %v82, align 8, !dbg !2957
  %arrayidx96 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %89, !dbg !2958
  %arrayidx97 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx96, i64 0, i64 1, !dbg !2958
  %90 = load double, double* %arrayidx97, align 8, !dbg !2958
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2959
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 1, !dbg !2959
  %92 = load i16, i16* %green, align 2, !dbg !2959
  %conv98 = zext i16 %92 to i32, !dbg !2959
  %conv99 = sitofp i32 %conv98 to double, !dbg !2959
  %mul100 = fmul double %90, %conv99, !dbg !2960
  %add = fadd double %mul, %mul100, !dbg !2961
  %93 = load i64, i64* %v82, align 8, !dbg !2962
  %arrayidx101 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %93, !dbg !2963
  %arrayidx102 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx101, i64 0, i64 2, !dbg !2963
  %94 = load double, double* %arrayidx102, align 16, !dbg !2963
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2964
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 0, !dbg !2964
  %96 = load i16, i16* %blue, align 2, !dbg !2964
  %conv103 = zext i16 %96 to i32, !dbg !2964
  %conv104 = sitofp i32 %conv103 to double, !dbg !2964
  %mul105 = fmul double %94, %conv104, !dbg !2965
  %add106 = fadd double %add, %mul105, !dbg !2966
  %conv107 = fptrunc double %add106 to float, !dbg !2954
  store float %conv107, float* %pixel, align 4, !dbg !2967
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2968
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %97, i32 0, i32 6, !dbg !2970
  %98 = load i32, i32* %matte, align 8, !dbg !2970
  %cmp108 = icmp ne i32 %98, 0, !dbg !2971
  br i1 %cmp108, label %if.then110, label %if.end119, !dbg !2972

if.then110:                                       ; preds = %for.body91
  %99 = load i64, i64* %v82, align 8, !dbg !2973
  %arrayidx111 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %99, !dbg !2974
  %arrayidx112 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx111, i64 0, i64 3, !dbg !2974
  %100 = load double, double* %arrayidx112, align 8, !dbg !2974
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2975
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 3, !dbg !2975
  %102 = load i16, i16* %opacity, align 2, !dbg !2975
  %conv113 = zext i16 %102 to i32, !dbg !2975
  %sub = sub nsw i32 65535, %conv113, !dbg !2976
  %conv114 = sitofp i32 %sub to double, !dbg !2977
  %mul115 = fmul double %100, %conv114, !dbg !2978
  %103 = load float, float* %pixel, align 4, !dbg !2979
  %conv116 = fpext float %103 to double, !dbg !2979
  %add117 = fadd double %conv116, %mul115, !dbg !2979
  %conv118 = fptrunc double %add117 to float, !dbg !2979
  store float %conv118, float* %pixel, align 4, !dbg !2979
  br label %if.end119, !dbg !2980

if.end119:                                        ; preds = %if.then110, %for.body91
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2981
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %104, i32 0, i32 1, !dbg !2983
  %105 = load i32, i32* %colorspace, align 4, !dbg !2983
  %cmp120 = icmp eq i32 %105, 12, !dbg !2984
  br i1 %cmp120, label %if.then122, label %if.end138, !dbg !2985

if.then122:                                       ; preds = %if.end119
  %106 = load i64, i64* %v82, align 8, !dbg !2986
  %arrayidx123 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %106, !dbg !2987
  %arrayidx124 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx123, i64 0, i64 4, !dbg !2987
  %107 = load double, double* %arrayidx124, align 16, !dbg !2987
  %108 = load i16*, i16** %indexes, align 8, !dbg !2988
  %109 = load i64, i64* %x, align 8, !dbg !2988
  %add.ptr = getelementptr inbounds i16, i16* %108, i64 %109, !dbg !2988
  %cmp125 = icmp eq i16* %add.ptr, null, !dbg !2988
  br i1 %cmp125, label %cond.true127, label %cond.false128, !dbg !2988

cond.true127:                                     ; preds = %if.then122
  br label %cond.end131, !dbg !2988

cond.false128:                                    ; preds = %if.then122
  %110 = load i16*, i16** %indexes, align 8, !dbg !2988
  %111 = load i64, i64* %x, align 8, !dbg !2988
  %add.ptr129 = getelementptr inbounds i16, i16* %110, i64 %111, !dbg !2988
  %112 = load i16, i16* %add.ptr129, align 2, !dbg !2988
  %conv130 = zext i16 %112 to i32, !dbg !2988
  br label %cond.end131, !dbg !2988

cond.end131:                                      ; preds = %cond.false128, %cond.true127
  %cond132 = phi i32 [ 0, %cond.true127 ], [ %conv130, %cond.false128 ], !dbg !2988
  %conv133 = sitofp i32 %cond132 to double, !dbg !2988
  %mul134 = fmul double %107, %conv133, !dbg !2989
  %113 = load float, float* %pixel, align 4, !dbg !2990
  %conv135 = fpext float %113 to double, !dbg !2990
  %add136 = fadd double %conv135, %mul134, !dbg !2990
  %conv137 = fptrunc double %add136 to float, !dbg !2990
  store float %conv137, float* %pixel, align 4, !dbg !2990
  br label %if.end138, !dbg !2991

if.end138:                                        ; preds = %cond.end131, %if.end119
  %114 = load i64, i64* %v82, align 8, !dbg !2992
  %arrayidx139 = getelementptr inbounds [6 x [6 x double]], [6 x [6 x double]]* %ColorMatrix, i64 0, i64 %114, !dbg !2993
  %arrayidx140 = getelementptr inbounds [6 x double], [6 x double]* %arrayidx139, i64 0, i64 5, !dbg !2993
  %115 = load double, double* %arrayidx140, align 8, !dbg !2993
  %mul141 = fmul double 6.553500e+04, %115, !dbg !2994
  %116 = load float, float* %pixel, align 4, !dbg !2995
  %conv142 = fpext float %116 to double, !dbg !2995
  %add143 = fadd double %conv142, %mul141, !dbg !2995
  %conv144 = fptrunc double %add143 to float, !dbg !2995
  store float %conv144, float* %pixel, align 4, !dbg !2995
  %117 = load i64, i64* %v82, align 8, !dbg !2996
  switch i64 %117, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb147
    i64 2, label %sw.bb150
    i64 3, label %sw.bb153
    i64 4, label %sw.bb164
  ], !dbg !2997

sw.bb:                                            ; preds = %if.end138
  %118 = load float, float* %pixel, align 4, !dbg !2998
  %call145 = call zeroext i16 @ClampToQuantum(float %118), !dbg !2998
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2998
  %red146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 2, !dbg !2998
  store i16 %call145, i16* %red146, align 2, !dbg !2998
  br label %sw.epilog, !dbg !3000

sw.bb147:                                         ; preds = %if.end138
  %120 = load float, float* %pixel, align 4, !dbg !3001
  %call148 = call zeroext i16 @ClampToQuantum(float %120), !dbg !3001
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3001
  %green149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 0, i32 1, !dbg !3001
  store i16 %call148, i16* %green149, align 2, !dbg !3001
  br label %sw.epilog, !dbg !3002

sw.bb150:                                         ; preds = %if.end138
  %122 = load float, float* %pixel, align 4, !dbg !3003
  %call151 = call zeroext i16 @ClampToQuantum(float %122), !dbg !3003
  %123 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3003
  %blue152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %123, i32 0, i32 0, !dbg !3003
  store i16 %call151, i16* %blue152, align 2, !dbg !3003
  br label %sw.epilog, !dbg !3004

sw.bb153:                                         ; preds = %if.end138
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3005
  %matte154 = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 6, !dbg !3008
  %125 = load i32, i32* %matte154, align 8, !dbg !3008
  %cmp155 = icmp ne i32 %125, 0, !dbg !3009
  br i1 %cmp155, label %if.then157, label %if.end163, !dbg !3010

if.then157:                                       ; preds = %sw.bb153
  %126 = load float, float* %pixel, align 4, !dbg !3011
  %call158 = call zeroext i16 @ClampToQuantum(float %126), !dbg !3011
  %conv159 = zext i16 %call158 to i32, !dbg !3011
  %sub160 = sub nsw i32 65535, %conv159, !dbg !3011
  %conv161 = trunc i32 %sub160 to i16, !dbg !3011
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3011
  %opacity162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 3, !dbg !3011
  store i16 %conv161, i16* %opacity162, align 2, !dbg !3011
  br label %if.end163, !dbg !3011

if.end163:                                        ; preds = %if.then157, %sw.bb153
  br label %sw.epilog, !dbg !3012

sw.bb164:                                         ; preds = %if.end138
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3013
  %colorspace165 = getelementptr inbounds %struct._Image, %struct._Image* %128, i32 0, i32 1, !dbg !3016
  %129 = load i32, i32* %colorspace165, align 4, !dbg !3016
  %cmp166 = icmp eq i32 %129, 12, !dbg !3017
  br i1 %cmp166, label %if.then168, label %if.end176, !dbg !3018

if.then168:                                       ; preds = %sw.bb164
  %130 = load i16*, i16** %color_indexes, align 8, !dbg !3019
  %131 = load i64, i64* %x, align 8, !dbg !3019
  %add.ptr169 = getelementptr inbounds i16, i16* %130, i64 %131, !dbg !3019
  %cmp170 = icmp ne i16* %add.ptr169, null, !dbg !3019
  br i1 %cmp170, label %if.then172, label %if.end175, !dbg !3022

if.then172:                                       ; preds = %if.then168
  %132 = load float, float* %pixel, align 4, !dbg !3019
  %call173 = call zeroext i16 @ClampToQuantum(float %132), !dbg !3019
  %133 = load i16*, i16** %color_indexes, align 8, !dbg !3019
  %134 = load i64, i64* %x, align 8, !dbg !3019
  %add.ptr174 = getelementptr inbounds i16, i16* %133, i64 %134, !dbg !3019
  store i16 %call173, i16* %add.ptr174, align 2, !dbg !3019
  br label %if.end175, !dbg !3019

if.end175:                                        ; preds = %if.then172, %if.then168
  br label %if.end176, !dbg !3022

if.end176:                                        ; preds = %if.end175, %sw.bb164
  br label %sw.epilog, !dbg !3023

sw.epilog:                                        ; preds = %if.end138, %if.end176, %if.end163, %sw.bb150, %sw.bb147, %sw.bb
  br label %for.inc177, !dbg !3024

for.inc177:                                       ; preds = %sw.epilog
  %135 = load i64, i64* %v82, align 8, !dbg !3025
  %inc178 = add nsw i64 %135, 1, !dbg !3025
  store i64 %inc178, i64* %v82, align 8, !dbg !3025
  br label %for.cond88, !dbg !3026, !llvm.loop !3027

for.end179:                                       ; preds = %for.cond88
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3029
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 1, !dbg !3029
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !3029
  %137 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3030
  %incdec.ptr180 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %137, i32 1, !dbg !3030
  store %struct._PixelPacket* %incdec.ptr180, %struct._PixelPacket** %q, align 8, !dbg !3030
  br label %for.inc181, !dbg !3031

for.inc181:                                       ; preds = %for.end179
  %138 = load i64, i64* %x, align 8, !dbg !3032
  %inc182 = add nsw i64 %138, 1, !dbg !3032
  store i64 %inc182, i64* %x, align 8, !dbg !3032
  br label %for.cond77, !dbg !3033, !llvm.loop !3034

for.end183:                                       ; preds = %for.cond77
  %139 = load %struct._CacheView*, %struct._CacheView** %color_view, align 8, !dbg !3036
  %140 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3038
  %call184 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %139, %struct._ExceptionInfo* %140), !dbg !3039
  %cmp185 = icmp eq i32 %call184, 0, !dbg !3040
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !3041

if.then187:                                       ; preds = %for.end183
  store i32 0, i32* %status, align 4, !dbg !3042
  br label %if.end188, !dbg !3043

if.end188:                                        ; preds = %if.then187, %for.end183
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3044
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %141, i32 0, i32 47, !dbg !3046
  %142 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3046
  %cmp189 = icmp ne i32 (i8*, i64, i64, i8*)* %142, null, !dbg !3047
  br i1 %cmp189, label %if.then191, label %if.end199, !dbg !3048

if.then191:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3049, metadata !DIExpression()), !dbg !3051
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3052
  %144 = load i64, i64* %progress, align 8, !dbg !3053
  %inc192 = add nsw i64 %144, 1, !dbg !3053
  store i64 %inc192, i64* %progress, align 8, !dbg !3053
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3054
  %rows193 = getelementptr inbounds %struct._Image, %struct._Image* %145, i32 0, i32 8, !dbg !3055
  %146 = load i64, i64* %rows193, align 8, !dbg !3055
  %call194 = call i32 @SetImageProgress(%struct._Image* %143, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i64 %144, i64 %146), !dbg !3056
  store i32 %call194, i32* %proceed, align 4, !dbg !3057
  %147 = load i32, i32* %proceed, align 4, !dbg !3058
  %cmp195 = icmp eq i32 %147, 0, !dbg !3060
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !3061

if.then197:                                       ; preds = %if.then191
  store i32 0, i32* %status, align 4, !dbg !3062
  br label %if.end198, !dbg !3063

if.end198:                                        ; preds = %if.then197, %if.then191
  br label %if.end199, !dbg !3064

if.end199:                                        ; preds = %if.end198, %if.end188
  br label %for.inc200, !dbg !3065

for.inc200:                                       ; preds = %if.end199, %if.then73, %if.then64
  %148 = load i64, i64* %y, align 8, !dbg !3066
  %inc201 = add nsw i64 %148, 1, !dbg !3066
  store i64 %inc201, i64* %y, align 8, !dbg !3066
  br label %for.cond58, !dbg !3067, !llvm.loop !3068

for.end202:                                       ; preds = %for.cond58
  %149 = load %struct._CacheView*, %struct._CacheView** %color_view, align 8, !dbg !3070
  %call203 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %149), !dbg !3071
  store %struct._CacheView* %call203, %struct._CacheView** %color_view, align 8, !dbg !3072
  %150 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3073
  %call204 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %150), !dbg !3074
  store %struct._CacheView* %call204, %struct._CacheView** %image_view, align 8, !dbg !3075
  %151 = load i32, i32* %status, align 4, !dbg !3076
  %cmp205 = icmp eq i32 %151, 0, !dbg !3078
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !3079

if.then207:                                       ; preds = %for.end202
  %152 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !3080
  %call208 = call %struct._Image* @DestroyImage(%struct._Image* %152), !dbg !3081
  store %struct._Image* %call208, %struct._Image** %color_image, align 8, !dbg !3082
  br label %if.end209, !dbg !3083

if.end209:                                        ; preds = %if.then207, %for.end202
  %153 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !3084
  store %struct._Image* %153, %struct._Image** %retval, align 8, !dbg !3085
  br label %return, !dbg !3085

return:                                           ; preds = %if.end209, %if.then21, %if.then17
  %154 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3086
  ret %struct._Image* %154, !dbg !3086
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare dso_local i8* @AcquireString(i8*) #3

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #3

declare dso_local i32 @ConcatenateString(i8**, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._FxInfo* @DestroyFxInfo(%struct._FxInfo* %fx_info) #0 !dbg !3087 {
entry:
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %i = alloca i64, align 8
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !3090, metadata !DIExpression()), !dbg !3091
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3092, metadata !DIExpression()), !dbg !3093
  %0 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3094
  %exception = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %0, i32 0, i32 7, !dbg !3095
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3095
  %call = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %1), !dbg !3096
  %2 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3097
  %exception1 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %2, i32 0, i32 7, !dbg !3098
  store %struct._ExceptionInfo* %call, %struct._ExceptionInfo** %exception1, align 8, !dbg !3099
  %3 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3100
  %expression = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %3, i32 0, i32 1, !dbg !3101
  %4 = load i8*, i8** %expression, align 8, !dbg !3101
  %call2 = call i8* @DestroyString(i8* %4), !dbg !3102
  %5 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3103
  %expression3 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %5, i32 0, i32 1, !dbg !3104
  store i8* %call2, i8** %expression3, align 8, !dbg !3105
  %6 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3106
  %symbols = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %6, i32 0, i32 4, !dbg !3107
  %7 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols, align 8, !dbg !3107
  %call4 = call %struct._SplayTreeInfo* @DestroySplayTree(%struct._SplayTreeInfo* %7), !dbg !3108
  %8 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3109
  %symbols5 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %8, i32 0, i32 4, !dbg !3110
  store %struct._SplayTreeInfo* %call4, %struct._SplayTreeInfo** %symbols5, align 8, !dbg !3111
  %9 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3112
  %colors = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %9, i32 0, i32 3, !dbg !3113
  %10 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %colors, align 8, !dbg !3113
  %call6 = call %struct._SplayTreeInfo* @DestroySplayTree(%struct._SplayTreeInfo* %10), !dbg !3114
  %11 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3115
  %colors7 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %11, i32 0, i32 3, !dbg !3116
  store %struct._SplayTreeInfo* %call6, %struct._SplayTreeInfo** %colors7, align 8, !dbg !3117
  %12 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3118
  %images = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %12, i32 0, i32 0, !dbg !3120
  %13 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3120
  %call8 = call i64 @GetImageListLength(%struct._Image* %13), !dbg !3121
  %sub = sub nsw i64 %call8, 1, !dbg !3122
  store i64 %sub, i64* %i, align 8, !dbg !3123
  br label %for.cond, !dbg !3124

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i64, i64* %i, align 8, !dbg !3125
  %cmp = icmp sge i64 %14, 0, !dbg !3127
  br i1 %cmp, label %for.body, label %for.end, !dbg !3128

for.body:                                         ; preds = %for.cond
  %15 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3129
  %view = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %15, i32 0, i32 5, !dbg !3130
  %16 = load %struct._CacheView**, %struct._CacheView*** %view, align 8, !dbg !3130
  %17 = load i64, i64* %i, align 8, !dbg !3131
  %arrayidx = getelementptr inbounds %struct._CacheView*, %struct._CacheView** %16, i64 %17, !dbg !3129
  %18 = load %struct._CacheView*, %struct._CacheView** %arrayidx, align 8, !dbg !3129
  %call9 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %18), !dbg !3132
  %19 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3133
  %view10 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %19, i32 0, i32 5, !dbg !3134
  %20 = load %struct._CacheView**, %struct._CacheView*** %view10, align 8, !dbg !3134
  %21 = load i64, i64* %i, align 8, !dbg !3135
  %arrayidx11 = getelementptr inbounds %struct._CacheView*, %struct._CacheView** %20, i64 %21, !dbg !3133
  store %struct._CacheView* %call9, %struct._CacheView** %arrayidx11, align 8, !dbg !3136
  br label %for.inc, !dbg !3133

for.inc:                                          ; preds = %for.body
  %22 = load i64, i64* %i, align 8, !dbg !3137
  %dec = add nsw i64 %22, -1, !dbg !3137
  store i64 %dec, i64* %i, align 8, !dbg !3137
  br label %for.cond, !dbg !3138, !llvm.loop !3139

for.end:                                          ; preds = %for.cond
  %23 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3141
  %view12 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %23, i32 0, i32 5, !dbg !3142
  %24 = load %struct._CacheView**, %struct._CacheView*** %view12, align 8, !dbg !3142
  %25 = bitcast %struct._CacheView** %24 to i8*, !dbg !3141
  %call13 = call i8* @RelinquishMagickMemory(i8* %25), !dbg !3143
  %26 = bitcast i8* %call13 to %struct._CacheView**, !dbg !3144
  %27 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3145
  %view14 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %27, i32 0, i32 5, !dbg !3146
  store %struct._CacheView** %26, %struct._CacheView*** %view14, align 8, !dbg !3147
  %28 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3148
  %random_info = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %28, i32 0, i32 6, !dbg !3149
  %29 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !3149
  %call15 = call %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo* %29), !dbg !3150
  %30 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3151
  %random_info16 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %30, i32 0, i32 6, !dbg !3152
  store %struct._RandomInfo* %call15, %struct._RandomInfo** %random_info16, align 8, !dbg !3153
  %31 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3154
  %32 = bitcast %struct._FxInfo* %31 to i8*, !dbg !3154
  %call17 = call i8* @RelinquishMagickMemory(i8* %32), !dbg !3155
  %33 = bitcast i8* %call17 to %struct._FxInfo*, !dbg !3156
  store %struct._FxInfo* %33, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3157
  %34 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3158
  ret %struct._FxInfo* %34, !dbg !3159
}

declare dso_local %struct._SplayTreeInfo* @DestroySplayTree(%struct._SplayTreeInfo*) #3

declare dso_local %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FxEvaluateExpression(%struct._FxInfo* %fx_info, double* %alpha, %struct._ExceptionInfo* %exception) #0 !dbg !3160 {
entry:
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %alpha.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store double* %alpha, double** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double** %alpha.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3169, metadata !DIExpression()), !dbg !3170
  %0 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3171
  %1 = load double*, double** %alpha.addr, align 8, !dbg !3172
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3173
  %call = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %0, i32 1, i64 0, i64 0, double* %1, %struct._ExceptionInfo* %2), !dbg !3174
  store i32 %call, i32* %status, align 4, !dbg !3175
  %3 = load i32, i32* %status, align 4, !dbg !3176
  ret i32 %3, !dbg !3177
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FxEvaluateChannelExpression(%struct._FxInfo* %fx_info, i32 %channel, i64 %x, i64 %y, double* %alpha, %struct._ExceptionInfo* %exception) #0 !dbg !3178 {
entry:
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %channel.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %alpha.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %beta = alloca double, align 8
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !3182, metadata !DIExpression()), !dbg !3183
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3184, metadata !DIExpression()), !dbg !3185
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3186, metadata !DIExpression()), !dbg !3187
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3188, metadata !DIExpression()), !dbg !3189
  store double* %alpha, double** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double** %alpha.addr, metadata !3190, metadata !DIExpression()), !dbg !3191
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.declare(metadata double* %beta, metadata !3194, metadata !DIExpression()), !dbg !3195
  store double 0.000000e+00, double* %beta, align 8, !dbg !3196
  %0 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3197
  %1 = load i32, i32* %channel.addr, align 4, !dbg !3198
  %2 = load i64, i64* %x.addr, align 8, !dbg !3199
  %3 = load i64, i64* %y.addr, align 8, !dbg !3200
  %4 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3201
  %expression = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %4, i32 0, i32 1, !dbg !3202
  %5 = load i8*, i8** %expression, align 8, !dbg !3202
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3203
  %call = call double @FxEvaluateSubexpression(%struct._FxInfo* %0, i32 %1, i64 %2, i64 %3, i8* %5, double* %beta, %struct._ExceptionInfo* %6), !dbg !3204
  %7 = load double*, double** %alpha.addr, align 8, !dbg !3205
  store double %call, double* %7, align 8, !dbg !3206
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3207
  %severity = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %8, i32 0, i32 0, !dbg !3208
  %9 = load i32, i32* %severity, align 8, !dbg !3208
  %cmp = icmp eq i32 %9, 410, !dbg !3209
  %10 = zext i1 %cmp to i64, !dbg !3207
  %cond = select i1 %cmp, i32 0, i32 1, !dbg !3207
  ret i32 %cond, !dbg !3210
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FxPreprocessExpression(%struct._FxInfo* %fx_info, double* %alpha, %struct._ExceptionInfo* %exception) #0 !dbg !3211 {
entry:
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %alpha.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %file = alloca %struct._IO_FILE*, align 8
  %status = alloca i32, align 4
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !3212, metadata !DIExpression()), !dbg !3213
  store double* %alpha, double** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double** %alpha.addr, metadata !3214, metadata !DIExpression()), !dbg !3215
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3216, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file, metadata !3218, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3220, metadata !DIExpression()), !dbg !3221
  %0 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3222
  %file1 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %0, i32 0, i32 2, !dbg !3223
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %file1, align 8, !dbg !3223
  store %struct._IO_FILE* %1, %struct._IO_FILE** %file, align 8, !dbg !3224
  %2 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3225
  %file2 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %2, i32 0, i32 2, !dbg !3226
  store %struct._IO_FILE* null, %struct._IO_FILE** %file2, align 8, !dbg !3227
  %3 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3228
  %4 = load double*, double** %alpha.addr, align 8, !dbg !3229
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3230
  %call = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %3, i32 1, i64 0, i64 0, double* %4, %struct._ExceptionInfo* %5), !dbg !3231
  store i32 %call, i32* %status, align 4, !dbg !3232
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !3233
  %7 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3234
  %file3 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %7, i32 0, i32 2, !dbg !3235
  store %struct._IO_FILE* %6, %struct._IO_FILE** %file3, align 8, !dbg !3236
  %8 = load i32, i32* %status, align 4, !dbg !3237
  ret i32 %8, !dbg !3238
}

; Function Attrs: noinline nounwind uwtable
define internal double @FxEvaluateSubexpression(%struct._FxInfo* %fx_info, i32 %channel, i64 %x, i64 %y, i8* %expression, double* %beta, %struct._ExceptionInfo* %exception) #0 !dbg !3239 {
entry:
  %retval = alloca double, align 8
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %channel.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %expression.addr = alloca i8*, align 8
  %beta.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %q = alloca i8*, align 8
  %subexpression = alloca [4096 x i8], align 16
  %alpha = alloca double, align 8
  %gamma = alloca double, align 8
  %p = alloca i8*, align 8
  %gamma152 = alloca double, align 8
  %numeric = alloca [4096 x i8], align 16
  %type = alloca i8*, align 8
  %gcd = alloca i64, align 8
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !3242, metadata !DIExpression()), !dbg !3243
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3246, metadata !DIExpression()), !dbg !3247
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3248, metadata !DIExpression()), !dbg !3249
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !3250, metadata !DIExpression()), !dbg !3251
  store double* %beta, double** %beta.addr, align 8
  call void @llvm.dbg.declare(metadata double** %beta.addr, metadata !3252, metadata !DIExpression()), !dbg !3253
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3254, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.declare(metadata i8** %q, metadata !3256, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.declare(metadata [4096 x i8]* %subexpression, metadata !3258, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3264, metadata !DIExpression()), !dbg !3265
  %0 = load double*, double** %beta.addr, align 8, !dbg !3266
  store double 0.000000e+00, double* %0, align 8, !dbg !3267
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3268
  %severity = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %1, i32 0, i32 0, !dbg !3270
  %2 = load i32, i32* %severity, align 8, !dbg !3270
  %cmp = icmp ne i32 %2, 0, !dbg !3271
  br i1 %cmp, label %if.then, label %if.end, !dbg !3272

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !3273
  br label %return, !dbg !3273

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !3274

while.cond:                                       ; preds = %while.body, %if.end
  %call = call i16** @__ctype_b_loc() #11, !dbg !3275
  %3 = load i16*, i16** %call, align 8, !dbg !3275
  %4 = load i8*, i8** %expression.addr, align 8, !dbg !3275
  %5 = load i8, i8* %4, align 1, !dbg !3275
  %conv = zext i8 %5 to i32, !dbg !3275
  %idxprom = sext i32 %conv to i64, !dbg !3275
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !3275
  %6 = load i16, i16* %arrayidx, align 2, !dbg !3275
  %conv1 = zext i16 %6 to i32, !dbg !3275
  %and = and i32 %conv1, 8192, !dbg !3275
  %cmp2 = icmp ne i32 %and, 0, !dbg !3276
  br i1 %cmp2, label %while.body, label %while.end, !dbg !3274

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %expression.addr, align 8, !dbg !3277
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3277
  store i8* %incdec.ptr, i8** %expression.addr, align 8, !dbg !3277
  br label %while.cond, !dbg !3274, !llvm.loop !3278

while.end:                                        ; preds = %while.cond
  %8 = load i8*, i8** %expression.addr, align 8, !dbg !3279
  %9 = load i8, i8* %8, align 1, !dbg !3281
  %conv4 = sext i8 %9 to i32, !dbg !3281
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !3282
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3283

if.then7:                                         ; preds = %while.end
  store double 0.000000e+00, double* %retval, align 8, !dbg !3284
  br label %return, !dbg !3284

if.end8:                                          ; preds = %while.end
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3285
  store i8 0, i8* %arraydecay, align 16, !dbg !3286
  %10 = load i8*, i8** %expression.addr, align 8, !dbg !3287
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3288
  %call9 = call i8* @FxOperatorPrecedence(i8* %10, %struct._ExceptionInfo* %11), !dbg !3289
  store i8* %call9, i8** %p, align 8, !dbg !3290
  %12 = load i8*, i8** %p, align 8, !dbg !3291
  %cmp10 = icmp ne i8* %12, null, !dbg !3293
  br i1 %cmp10, label %if.then12, label %if.end211, !dbg !3294

if.then12:                                        ; preds = %if.end8
  %arraydecay13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3295
  %13 = load i8*, i8** %expression.addr, align 8, !dbg !3297
  %14 = load i8*, i8** %p, align 8, !dbg !3298
  %15 = load i8*, i8** %expression.addr, align 8, !dbg !3299
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64, !dbg !3300
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64, !dbg !3300
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3300
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !3301
  %call14 = call i64 @CopyMagickString(i8* %arraydecay13, i8* %13, i64 %add), !dbg !3302
  %16 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3303
  %17 = load i32, i32* %channel.addr, align 4, !dbg !3304
  %18 = load i64, i64* %x.addr, align 8, !dbg !3305
  %19 = load i64, i64* %y.addr, align 8, !dbg !3306
  %arraydecay15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3307
  %20 = load double*, double** %beta.addr, align 8, !dbg !3308
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3309
  %call16 = call double @FxEvaluateSubexpression(%struct._FxInfo* %16, i32 %17, i64 %18, i64 %19, i8* %arraydecay15, double* %20, %struct._ExceptionInfo* %21), !dbg !3310
  store double %call16, double* %alpha, align 8, !dbg !3311
  %22 = load i8*, i8** %p, align 8, !dbg !3312
  %23 = load i8, i8* %22, align 1, !dbg !3313
  %conv17 = zext i8 %23 to i32, !dbg !3314
  switch i32 %conv17, label %sw.default [
    i32 126, label %sw.bb
    i32 33, label %sw.bb22
    i32 94, label %sw.bb27
    i32 42, label %sw.bb31
    i32 253, label %sw.bb31
    i32 47, label %sw.bb34
    i32 37, label %sw.bb47
    i32 43, label %sw.bb57
    i32 45, label %sw.bb61
    i32 245, label %sw.bb64
    i32 246, label %sw.bb72
    i32 60, label %sw.bb80
    i32 247, label %sw.bb86
    i32 62, label %sw.bb92
    i32 248, label %sw.bb98
    i32 249, label %sw.bb104
    i32 250, label %sw.bb111
    i32 38, label %sw.bb118
    i32 124, label %sw.bb127
    i32 251, label %sw.bb135
    i32 252, label %sw.bb143
    i32 63, label %sw.bb151
    i32 61, label %sw.bb170
    i32 44, label %sw.bb203
    i32 59, label %sw.bb206
  ], !dbg !3315

sw.bb:                                            ; preds = %if.then12
  %24 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3316
  %25 = load i32, i32* %channel.addr, align 4, !dbg !3319
  %26 = load i64, i64* %x.addr, align 8, !dbg !3320
  %27 = load i64, i64* %y.addr, align 8, !dbg !3321
  %28 = load i8*, i8** %p, align 8, !dbg !3322
  %incdec.ptr18 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !3322
  store i8* %incdec.ptr18, i8** %p, align 8, !dbg !3322
  %29 = load double*, double** %beta.addr, align 8, !dbg !3323
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3324
  %call19 = call double @FxEvaluateSubexpression(%struct._FxInfo* %24, i32 %25, i64 %26, i64 %27, i8* %incdec.ptr18, double* %29, %struct._ExceptionInfo* %30), !dbg !3325
  %31 = load double*, double** %beta.addr, align 8, !dbg !3326
  store double %call19, double* %31, align 8, !dbg !3327
  %32 = load double*, double** %beta.addr, align 8, !dbg !3328
  %33 = load double, double* %32, align 8, !dbg !3329
  %conv20 = fptoui double %33 to i64, !dbg !3330
  %neg = xor i64 %conv20, -1, !dbg !3331
  %conv21 = uitofp i64 %neg to double, !dbg !3332
  %34 = load double*, double** %beta.addr, align 8, !dbg !3333
  store double %conv21, double* %34, align 8, !dbg !3334
  %35 = load double*, double** %beta.addr, align 8, !dbg !3335
  %36 = load double, double* %35, align 8, !dbg !3336
  store double %36, double* %retval, align 8, !dbg !3337
  br label %return, !dbg !3337

sw.bb22:                                          ; preds = %if.then12
  %37 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3338
  %38 = load i32, i32* %channel.addr, align 4, !dbg !3340
  %39 = load i64, i64* %x.addr, align 8, !dbg !3341
  %40 = load i64, i64* %y.addr, align 8, !dbg !3342
  %41 = load i8*, i8** %p, align 8, !dbg !3343
  %incdec.ptr23 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !3343
  store i8* %incdec.ptr23, i8** %p, align 8, !dbg !3343
  %42 = load double*, double** %beta.addr, align 8, !dbg !3344
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3345
  %call24 = call double @FxEvaluateSubexpression(%struct._FxInfo* %37, i32 %38, i64 %39, i64 %40, i8* %incdec.ptr23, double* %42, %struct._ExceptionInfo* %43), !dbg !3346
  %44 = load double*, double** %beta.addr, align 8, !dbg !3347
  store double %call24, double* %44, align 8, !dbg !3348
  %45 = load double*, double** %beta.addr, align 8, !dbg !3349
  %46 = load double, double* %45, align 8, !dbg !3350
  %cmp25 = fcmp oeq double %46, 0.000000e+00, !dbg !3351
  %47 = zext i1 %cmp25 to i64, !dbg !3350
  %cond = select i1 %cmp25, double 1.000000e+00, double 0.000000e+00, !dbg !3350
  store double %cond, double* %retval, align 8, !dbg !3352
  br label %return, !dbg !3352

sw.bb27:                                          ; preds = %if.then12
  %48 = load double, double* %alpha, align 8, !dbg !3353
  %49 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3355
  %50 = load i32, i32* %channel.addr, align 4, !dbg !3356
  %51 = load i64, i64* %x.addr, align 8, !dbg !3357
  %52 = load i64, i64* %y.addr, align 8, !dbg !3358
  %53 = load i8*, i8** %p, align 8, !dbg !3359
  %incdec.ptr28 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !3359
  store i8* %incdec.ptr28, i8** %p, align 8, !dbg !3359
  %54 = load double*, double** %beta.addr, align 8, !dbg !3360
  %55 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3361
  %call29 = call double @FxEvaluateSubexpression(%struct._FxInfo* %49, i32 %50, i64 %51, i64 %52, i8* %incdec.ptr28, double* %54, %struct._ExceptionInfo* %55), !dbg !3362
  %call30 = call double @pow(double %48, double %call29) #14, !dbg !3363
  %56 = load double*, double** %beta.addr, align 8, !dbg !3364
  store double %call30, double* %56, align 8, !dbg !3365
  %57 = load double*, double** %beta.addr, align 8, !dbg !3366
  %58 = load double, double* %57, align 8, !dbg !3367
  store double %58, double* %retval, align 8, !dbg !3368
  br label %return, !dbg !3368

sw.bb31:                                          ; preds = %if.then12, %if.then12
  %59 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3369
  %60 = load i32, i32* %channel.addr, align 4, !dbg !3371
  %61 = load i64, i64* %x.addr, align 8, !dbg !3372
  %62 = load i64, i64* %y.addr, align 8, !dbg !3373
  %63 = load i8*, i8** %p, align 8, !dbg !3374
  %incdec.ptr32 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !3374
  store i8* %incdec.ptr32, i8** %p, align 8, !dbg !3374
  %64 = load double*, double** %beta.addr, align 8, !dbg !3375
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3376
  %call33 = call double @FxEvaluateSubexpression(%struct._FxInfo* %59, i32 %60, i64 %61, i64 %62, i8* %incdec.ptr32, double* %64, %struct._ExceptionInfo* %65), !dbg !3377
  %66 = load double*, double** %beta.addr, align 8, !dbg !3378
  store double %call33, double* %66, align 8, !dbg !3379
  %67 = load double, double* %alpha, align 8, !dbg !3380
  %68 = load double*, double** %beta.addr, align 8, !dbg !3381
  %69 = load double, double* %68, align 8, !dbg !3382
  %mul = fmul double %67, %69, !dbg !3383
  store double %mul, double* %retval, align 8, !dbg !3384
  br label %return, !dbg !3384

sw.bb34:                                          ; preds = %if.then12
  %70 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3385
  %71 = load i32, i32* %channel.addr, align 4, !dbg !3387
  %72 = load i64, i64* %x.addr, align 8, !dbg !3388
  %73 = load i64, i64* %y.addr, align 8, !dbg !3389
  %74 = load i8*, i8** %p, align 8, !dbg !3390
  %incdec.ptr35 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !3390
  store i8* %incdec.ptr35, i8** %p, align 8, !dbg !3390
  %75 = load double*, double** %beta.addr, align 8, !dbg !3391
  %76 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3392
  %call36 = call double @FxEvaluateSubexpression(%struct._FxInfo* %70, i32 %71, i64 %72, i64 %73, i8* %incdec.ptr35, double* %75, %struct._ExceptionInfo* %76), !dbg !3393
  %77 = load double*, double** %beta.addr, align 8, !dbg !3394
  store double %call36, double* %77, align 8, !dbg !3395
  %78 = load double*, double** %beta.addr, align 8, !dbg !3396
  %79 = load double, double* %78, align 8, !dbg !3398
  %cmp37 = fcmp oeq double %79, 0.000000e+00, !dbg !3399
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !3400

if.then39:                                        ; preds = %sw.bb34
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3401
  %severity40 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %80, i32 0, i32 0, !dbg !3404
  %81 = load i32, i32* %severity40, align 8, !dbg !3404
  %cmp41 = icmp eq i32 %81, 0, !dbg !3405
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !3406

if.then43:                                        ; preds = %if.then39
  %82 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3407
  %83 = load i8*, i8** %expression.addr, align 8, !dbg !3408
  %call44 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %82, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2176, i32 410, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %83), !dbg !3409
  br label %if.end45, !dbg !3410

if.end45:                                         ; preds = %if.then43, %if.then39
  store double 0.000000e+00, double* %retval, align 8, !dbg !3411
  br label %return, !dbg !3411

if.end46:                                         ; preds = %sw.bb34
  %84 = load double, double* %alpha, align 8, !dbg !3412
  %85 = load double*, double** %beta.addr, align 8, !dbg !3413
  %86 = load double, double* %85, align 8, !dbg !3414
  %div = fdiv double %84, %86, !dbg !3415
  store double %div, double* %retval, align 8, !dbg !3416
  br label %return, !dbg !3416

sw.bb47:                                          ; preds = %if.then12
  %87 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3417
  %88 = load i32, i32* %channel.addr, align 4, !dbg !3419
  %89 = load i64, i64* %x.addr, align 8, !dbg !3420
  %90 = load i64, i64* %y.addr, align 8, !dbg !3421
  %91 = load i8*, i8** %p, align 8, !dbg !3422
  %incdec.ptr48 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !3422
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !3422
  %92 = load double*, double** %beta.addr, align 8, !dbg !3423
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3424
  %call49 = call double @FxEvaluateSubexpression(%struct._FxInfo* %87, i32 %88, i64 %89, i64 %90, i8* %incdec.ptr48, double* %92, %struct._ExceptionInfo* %93), !dbg !3425
  %94 = load double*, double** %beta.addr, align 8, !dbg !3426
  store double %call49, double* %94, align 8, !dbg !3427
  %95 = load double*, double** %beta.addr, align 8, !dbg !3428
  %96 = load double, double* %95, align 8, !dbg !3429
  %add50 = fadd double %96, 5.000000e-01, !dbg !3430
  %97 = call double @llvm.floor.f64(double %add50), !dbg !3431
  %98 = call double @llvm.fabs.f64(double %97), !dbg !3432
  %99 = load double*, double** %beta.addr, align 8, !dbg !3433
  store double %98, double* %99, align 8, !dbg !3434
  %100 = load double*, double** %beta.addr, align 8, !dbg !3435
  %101 = load double, double* %100, align 8, !dbg !3437
  %cmp51 = fcmp oeq double %101, 0.000000e+00, !dbg !3438
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !3439

if.then53:                                        ; preds = %sw.bb47
  %102 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3440
  %103 = load i8*, i8** %expression.addr, align 8, !dbg !3442
  %call54 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2188, i32 410, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %103), !dbg !3443
  store double 0.000000e+00, double* %retval, align 8, !dbg !3444
  br label %return, !dbg !3444

if.end55:                                         ; preds = %sw.bb47
  %104 = load double, double* %alpha, align 8, !dbg !3445
  %105 = load double*, double** %beta.addr, align 8, !dbg !3446
  %106 = load double, double* %105, align 8, !dbg !3447
  %call56 = call double @fmod(double %104, double %106) #14, !dbg !3448
  store double %call56, double* %retval, align 8, !dbg !3449
  br label %return, !dbg !3449

sw.bb57:                                          ; preds = %if.then12
  %107 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3450
  %108 = load i32, i32* %channel.addr, align 4, !dbg !3452
  %109 = load i64, i64* %x.addr, align 8, !dbg !3453
  %110 = load i64, i64* %y.addr, align 8, !dbg !3454
  %111 = load i8*, i8** %p, align 8, !dbg !3455
  %incdec.ptr58 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !3455
  store i8* %incdec.ptr58, i8** %p, align 8, !dbg !3455
  %112 = load double*, double** %beta.addr, align 8, !dbg !3456
  %113 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3457
  %call59 = call double @FxEvaluateSubexpression(%struct._FxInfo* %107, i32 %108, i64 %109, i64 %110, i8* %incdec.ptr58, double* %112, %struct._ExceptionInfo* %113), !dbg !3458
  %114 = load double*, double** %beta.addr, align 8, !dbg !3459
  store double %call59, double* %114, align 8, !dbg !3460
  %115 = load double, double* %alpha, align 8, !dbg !3461
  %116 = load double*, double** %beta.addr, align 8, !dbg !3462
  %117 = load double, double* %116, align 8, !dbg !3463
  %add60 = fadd double %115, %117, !dbg !3464
  store double %add60, double* %retval, align 8, !dbg !3465
  br label %return, !dbg !3465

sw.bb61:                                          ; preds = %if.then12
  %118 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3466
  %119 = load i32, i32* %channel.addr, align 4, !dbg !3468
  %120 = load i64, i64* %x.addr, align 8, !dbg !3469
  %121 = load i64, i64* %y.addr, align 8, !dbg !3470
  %122 = load i8*, i8** %p, align 8, !dbg !3471
  %incdec.ptr62 = getelementptr inbounds i8, i8* %122, i32 1, !dbg !3471
  store i8* %incdec.ptr62, i8** %p, align 8, !dbg !3471
  %123 = load double*, double** %beta.addr, align 8, !dbg !3472
  %124 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3473
  %call63 = call double @FxEvaluateSubexpression(%struct._FxInfo* %118, i32 %119, i64 %120, i64 %121, i8* %incdec.ptr62, double* %123, %struct._ExceptionInfo* %124), !dbg !3474
  %125 = load double*, double** %beta.addr, align 8, !dbg !3475
  store double %call63, double* %125, align 8, !dbg !3476
  %126 = load double, double* %alpha, align 8, !dbg !3477
  %127 = load double*, double** %beta.addr, align 8, !dbg !3478
  %128 = load double, double* %127, align 8, !dbg !3479
  %sub = fsub double %126, %128, !dbg !3480
  store double %sub, double* %retval, align 8, !dbg !3481
  br label %return, !dbg !3481

sw.bb64:                                          ; preds = %if.then12
  %129 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3482
  %130 = load i32, i32* %channel.addr, align 4, !dbg !3484
  %131 = load i64, i64* %x.addr, align 8, !dbg !3485
  %132 = load i64, i64* %y.addr, align 8, !dbg !3486
  %133 = load i8*, i8** %p, align 8, !dbg !3487
  %incdec.ptr65 = getelementptr inbounds i8, i8* %133, i32 1, !dbg !3487
  store i8* %incdec.ptr65, i8** %p, align 8, !dbg !3487
  %134 = load double*, double** %beta.addr, align 8, !dbg !3488
  %135 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3489
  %call66 = call double @FxEvaluateSubexpression(%struct._FxInfo* %129, i32 %130, i64 %131, i64 %132, i8* %incdec.ptr65, double* %134, %struct._ExceptionInfo* %135), !dbg !3490
  store double %call66, double* %gamma, align 8, !dbg !3491
  %136 = load double, double* %alpha, align 8, !dbg !3492
  %add67 = fadd double %136, 5.000000e-01, !dbg !3493
  %conv68 = fptoui double %add67 to i64, !dbg !3494
  %137 = load double, double* %gamma, align 8, !dbg !3495
  %add69 = fadd double %137, 5.000000e-01, !dbg !3496
  %conv70 = fptoui double %add69 to i64, !dbg !3497
  %shl = shl i64 %conv68, %conv70, !dbg !3498
  %conv71 = uitofp i64 %shl to double, !dbg !3499
  %138 = load double*, double** %beta.addr, align 8, !dbg !3500
  store double %conv71, double* %138, align 8, !dbg !3501
  %139 = load double*, double** %beta.addr, align 8, !dbg !3502
  %140 = load double, double* %139, align 8, !dbg !3503
  store double %140, double* %retval, align 8, !dbg !3504
  br label %return, !dbg !3504

sw.bb72:                                          ; preds = %if.then12
  %141 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3505
  %142 = load i32, i32* %channel.addr, align 4, !dbg !3507
  %143 = load i64, i64* %x.addr, align 8, !dbg !3508
  %144 = load i64, i64* %y.addr, align 8, !dbg !3509
  %145 = load i8*, i8** %p, align 8, !dbg !3510
  %incdec.ptr73 = getelementptr inbounds i8, i8* %145, i32 1, !dbg !3510
  store i8* %incdec.ptr73, i8** %p, align 8, !dbg !3510
  %146 = load double*, double** %beta.addr, align 8, !dbg !3511
  %147 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3512
  %call74 = call double @FxEvaluateSubexpression(%struct._FxInfo* %141, i32 %142, i64 %143, i64 %144, i8* %incdec.ptr73, double* %146, %struct._ExceptionInfo* %147), !dbg !3513
  store double %call74, double* %gamma, align 8, !dbg !3514
  %148 = load double, double* %alpha, align 8, !dbg !3515
  %add75 = fadd double %148, 5.000000e-01, !dbg !3516
  %conv76 = fptoui double %add75 to i64, !dbg !3517
  %149 = load double, double* %gamma, align 8, !dbg !3518
  %add77 = fadd double %149, 5.000000e-01, !dbg !3519
  %conv78 = fptoui double %add77 to i64, !dbg !3520
  %shr = lshr i64 %conv76, %conv78, !dbg !3521
  %conv79 = uitofp i64 %shr to double, !dbg !3522
  %150 = load double*, double** %beta.addr, align 8, !dbg !3523
  store double %conv79, double* %150, align 8, !dbg !3524
  %151 = load double*, double** %beta.addr, align 8, !dbg !3525
  %152 = load double, double* %151, align 8, !dbg !3526
  store double %152, double* %retval, align 8, !dbg !3527
  br label %return, !dbg !3527

sw.bb80:                                          ; preds = %if.then12
  %153 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3528
  %154 = load i32, i32* %channel.addr, align 4, !dbg !3530
  %155 = load i64, i64* %x.addr, align 8, !dbg !3531
  %156 = load i64, i64* %y.addr, align 8, !dbg !3532
  %157 = load i8*, i8** %p, align 8, !dbg !3533
  %incdec.ptr81 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !3533
  store i8* %incdec.ptr81, i8** %p, align 8, !dbg !3533
  %158 = load double*, double** %beta.addr, align 8, !dbg !3534
  %159 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3535
  %call82 = call double @FxEvaluateSubexpression(%struct._FxInfo* %153, i32 %154, i64 %155, i64 %156, i8* %incdec.ptr81, double* %158, %struct._ExceptionInfo* %159), !dbg !3536
  %160 = load double*, double** %beta.addr, align 8, !dbg !3537
  store double %call82, double* %160, align 8, !dbg !3538
  %161 = load double, double* %alpha, align 8, !dbg !3539
  %162 = load double*, double** %beta.addr, align 8, !dbg !3540
  %163 = load double, double* %162, align 8, !dbg !3541
  %cmp83 = fcmp olt double %161, %163, !dbg !3542
  %164 = zext i1 %cmp83 to i64, !dbg !3539
  %cond85 = select i1 %cmp83, double 1.000000e+00, double 0.000000e+00, !dbg !3539
  store double %cond85, double* %retval, align 8, !dbg !3543
  br label %return, !dbg !3543

sw.bb86:                                          ; preds = %if.then12
  %165 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3544
  %166 = load i32, i32* %channel.addr, align 4, !dbg !3546
  %167 = load i64, i64* %x.addr, align 8, !dbg !3547
  %168 = load i64, i64* %y.addr, align 8, !dbg !3548
  %169 = load i8*, i8** %p, align 8, !dbg !3549
  %incdec.ptr87 = getelementptr inbounds i8, i8* %169, i32 1, !dbg !3549
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !3549
  %170 = load double*, double** %beta.addr, align 8, !dbg !3550
  %171 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3551
  %call88 = call double @FxEvaluateSubexpression(%struct._FxInfo* %165, i32 %166, i64 %167, i64 %168, i8* %incdec.ptr87, double* %170, %struct._ExceptionInfo* %171), !dbg !3552
  %172 = load double*, double** %beta.addr, align 8, !dbg !3553
  store double %call88, double* %172, align 8, !dbg !3554
  %173 = load double, double* %alpha, align 8, !dbg !3555
  %174 = load double*, double** %beta.addr, align 8, !dbg !3556
  %175 = load double, double* %174, align 8, !dbg !3557
  %cmp89 = fcmp ole double %173, %175, !dbg !3558
  %176 = zext i1 %cmp89 to i64, !dbg !3555
  %cond91 = select i1 %cmp89, double 1.000000e+00, double 0.000000e+00, !dbg !3555
  store double %cond91, double* %retval, align 8, !dbg !3559
  br label %return, !dbg !3559

sw.bb92:                                          ; preds = %if.then12
  %177 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3560
  %178 = load i32, i32* %channel.addr, align 4, !dbg !3562
  %179 = load i64, i64* %x.addr, align 8, !dbg !3563
  %180 = load i64, i64* %y.addr, align 8, !dbg !3564
  %181 = load i8*, i8** %p, align 8, !dbg !3565
  %incdec.ptr93 = getelementptr inbounds i8, i8* %181, i32 1, !dbg !3565
  store i8* %incdec.ptr93, i8** %p, align 8, !dbg !3565
  %182 = load double*, double** %beta.addr, align 8, !dbg !3566
  %183 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3567
  %call94 = call double @FxEvaluateSubexpression(%struct._FxInfo* %177, i32 %178, i64 %179, i64 %180, i8* %incdec.ptr93, double* %182, %struct._ExceptionInfo* %183), !dbg !3568
  %184 = load double*, double** %beta.addr, align 8, !dbg !3569
  store double %call94, double* %184, align 8, !dbg !3570
  %185 = load double, double* %alpha, align 8, !dbg !3571
  %186 = load double*, double** %beta.addr, align 8, !dbg !3572
  %187 = load double, double* %186, align 8, !dbg !3573
  %cmp95 = fcmp ogt double %185, %187, !dbg !3574
  %188 = zext i1 %cmp95 to i64, !dbg !3571
  %cond97 = select i1 %cmp95, double 1.000000e+00, double 0.000000e+00, !dbg !3571
  store double %cond97, double* %retval, align 8, !dbg !3575
  br label %return, !dbg !3575

sw.bb98:                                          ; preds = %if.then12
  %189 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3576
  %190 = load i32, i32* %channel.addr, align 4, !dbg !3578
  %191 = load i64, i64* %x.addr, align 8, !dbg !3579
  %192 = load i64, i64* %y.addr, align 8, !dbg !3580
  %193 = load i8*, i8** %p, align 8, !dbg !3581
  %incdec.ptr99 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !3581
  store i8* %incdec.ptr99, i8** %p, align 8, !dbg !3581
  %194 = load double*, double** %beta.addr, align 8, !dbg !3582
  %195 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3583
  %call100 = call double @FxEvaluateSubexpression(%struct._FxInfo* %189, i32 %190, i64 %191, i64 %192, i8* %incdec.ptr99, double* %194, %struct._ExceptionInfo* %195), !dbg !3584
  %196 = load double*, double** %beta.addr, align 8, !dbg !3585
  store double %call100, double* %196, align 8, !dbg !3586
  %197 = load double, double* %alpha, align 8, !dbg !3587
  %198 = load double*, double** %beta.addr, align 8, !dbg !3588
  %199 = load double, double* %198, align 8, !dbg !3589
  %cmp101 = fcmp oge double %197, %199, !dbg !3590
  %200 = zext i1 %cmp101 to i64, !dbg !3587
  %cond103 = select i1 %cmp101, double 1.000000e+00, double 0.000000e+00, !dbg !3587
  store double %cond103, double* %retval, align 8, !dbg !3591
  br label %return, !dbg !3591

sw.bb104:                                         ; preds = %if.then12
  %201 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3592
  %202 = load i32, i32* %channel.addr, align 4, !dbg !3594
  %203 = load i64, i64* %x.addr, align 8, !dbg !3595
  %204 = load i64, i64* %y.addr, align 8, !dbg !3596
  %205 = load i8*, i8** %p, align 8, !dbg !3597
  %incdec.ptr105 = getelementptr inbounds i8, i8* %205, i32 1, !dbg !3597
  store i8* %incdec.ptr105, i8** %p, align 8, !dbg !3597
  %206 = load double*, double** %beta.addr, align 8, !dbg !3598
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3599
  %call106 = call double @FxEvaluateSubexpression(%struct._FxInfo* %201, i32 %202, i64 %203, i64 %204, i8* %incdec.ptr105, double* %206, %struct._ExceptionInfo* %207), !dbg !3600
  %208 = load double*, double** %beta.addr, align 8, !dbg !3601
  store double %call106, double* %208, align 8, !dbg !3602
  %209 = load double, double* %alpha, align 8, !dbg !3603
  %210 = load double*, double** %beta.addr, align 8, !dbg !3604
  %211 = load double, double* %210, align 8, !dbg !3605
  %sub107 = fsub double %209, %211, !dbg !3606
  %212 = call double @llvm.fabs.f64(double %sub107), !dbg !3607
  %cmp108 = fcmp olt double %212, 1.000000e-15, !dbg !3608
  %213 = zext i1 %cmp108 to i64, !dbg !3607
  %cond110 = select i1 %cmp108, double 1.000000e-15, double 0.000000e+00, !dbg !3607
  store double %cond110, double* %retval, align 8, !dbg !3609
  br label %return, !dbg !3609

sw.bb111:                                         ; preds = %if.then12
  %214 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3610
  %215 = load i32, i32* %channel.addr, align 4, !dbg !3612
  %216 = load i64, i64* %x.addr, align 8, !dbg !3613
  %217 = load i64, i64* %y.addr, align 8, !dbg !3614
  %218 = load i8*, i8** %p, align 8, !dbg !3615
  %incdec.ptr112 = getelementptr inbounds i8, i8* %218, i32 1, !dbg !3615
  store i8* %incdec.ptr112, i8** %p, align 8, !dbg !3615
  %219 = load double*, double** %beta.addr, align 8, !dbg !3616
  %220 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3617
  %call113 = call double @FxEvaluateSubexpression(%struct._FxInfo* %214, i32 %215, i64 %216, i64 %217, i8* %incdec.ptr112, double* %219, %struct._ExceptionInfo* %220), !dbg !3618
  %221 = load double*, double** %beta.addr, align 8, !dbg !3619
  store double %call113, double* %221, align 8, !dbg !3620
  %222 = load double, double* %alpha, align 8, !dbg !3621
  %223 = load double*, double** %beta.addr, align 8, !dbg !3622
  %224 = load double, double* %223, align 8, !dbg !3623
  %sub114 = fsub double %222, %224, !dbg !3624
  %225 = call double @llvm.fabs.f64(double %sub114), !dbg !3625
  %cmp115 = fcmp oge double %225, 1.000000e-15, !dbg !3626
  %226 = zext i1 %cmp115 to i64, !dbg !3625
  %cond117 = select i1 %cmp115, double 1.000000e+00, double 0.000000e+00, !dbg !3625
  store double %cond117, double* %retval, align 8, !dbg !3627
  br label %return, !dbg !3627

sw.bb118:                                         ; preds = %if.then12
  %227 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3628
  %228 = load i32, i32* %channel.addr, align 4, !dbg !3630
  %229 = load i64, i64* %x.addr, align 8, !dbg !3631
  %230 = load i64, i64* %y.addr, align 8, !dbg !3632
  %231 = load i8*, i8** %p, align 8, !dbg !3633
  %incdec.ptr119 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !3633
  store i8* %incdec.ptr119, i8** %p, align 8, !dbg !3633
  %232 = load double*, double** %beta.addr, align 8, !dbg !3634
  %233 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3635
  %call120 = call double @FxEvaluateSubexpression(%struct._FxInfo* %227, i32 %228, i64 %229, i64 %230, i8* %incdec.ptr119, double* %232, %struct._ExceptionInfo* %233), !dbg !3636
  store double %call120, double* %gamma, align 8, !dbg !3637
  %234 = load double, double* %alpha, align 8, !dbg !3638
  %add121 = fadd double %234, 5.000000e-01, !dbg !3639
  %conv122 = fptoui double %add121 to i64, !dbg !3640
  %235 = load double, double* %gamma, align 8, !dbg !3641
  %add123 = fadd double %235, 5.000000e-01, !dbg !3642
  %conv124 = fptoui double %add123 to i64, !dbg !3643
  %and125 = and i64 %conv122, %conv124, !dbg !3644
  %conv126 = uitofp i64 %and125 to double, !dbg !3645
  %236 = load double*, double** %beta.addr, align 8, !dbg !3646
  store double %conv126, double* %236, align 8, !dbg !3647
  %237 = load double*, double** %beta.addr, align 8, !dbg !3648
  %238 = load double, double* %237, align 8, !dbg !3649
  store double %238, double* %retval, align 8, !dbg !3650
  br label %return, !dbg !3650

sw.bb127:                                         ; preds = %if.then12
  %239 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3651
  %240 = load i32, i32* %channel.addr, align 4, !dbg !3653
  %241 = load i64, i64* %x.addr, align 8, !dbg !3654
  %242 = load i64, i64* %y.addr, align 8, !dbg !3655
  %243 = load i8*, i8** %p, align 8, !dbg !3656
  %incdec.ptr128 = getelementptr inbounds i8, i8* %243, i32 1, !dbg !3656
  store i8* %incdec.ptr128, i8** %p, align 8, !dbg !3656
  %244 = load double*, double** %beta.addr, align 8, !dbg !3657
  %245 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3658
  %call129 = call double @FxEvaluateSubexpression(%struct._FxInfo* %239, i32 %240, i64 %241, i64 %242, i8* %incdec.ptr128, double* %244, %struct._ExceptionInfo* %245), !dbg !3659
  store double %call129, double* %gamma, align 8, !dbg !3660
  %246 = load double, double* %alpha, align 8, !dbg !3661
  %add130 = fadd double %246, 5.000000e-01, !dbg !3662
  %conv131 = fptoui double %add130 to i64, !dbg !3663
  %247 = load double, double* %gamma, align 8, !dbg !3664
  %add132 = fadd double %247, 5.000000e-01, !dbg !3665
  %conv133 = fptoui double %add132 to i64, !dbg !3666
  %or = or i64 %conv131, %conv133, !dbg !3667
  %conv134 = uitofp i64 %or to double, !dbg !3668
  %248 = load double*, double** %beta.addr, align 8, !dbg !3669
  store double %conv134, double* %248, align 8, !dbg !3670
  %249 = load double*, double** %beta.addr, align 8, !dbg !3671
  %250 = load double, double* %249, align 8, !dbg !3672
  store double %250, double* %retval, align 8, !dbg !3673
  br label %return, !dbg !3673

sw.bb135:                                         ; preds = %if.then12
  %251 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3674
  %252 = load i32, i32* %channel.addr, align 4, !dbg !3676
  %253 = load i64, i64* %x.addr, align 8, !dbg !3677
  %254 = load i64, i64* %y.addr, align 8, !dbg !3678
  %255 = load i8*, i8** %p, align 8, !dbg !3679
  %incdec.ptr136 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !3679
  store i8* %incdec.ptr136, i8** %p, align 8, !dbg !3679
  %256 = load double*, double** %beta.addr, align 8, !dbg !3680
  %257 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3681
  %call137 = call double @FxEvaluateSubexpression(%struct._FxInfo* %251, i32 %252, i64 %253, i64 %254, i8* %incdec.ptr136, double* %256, %struct._ExceptionInfo* %257), !dbg !3682
  store double %call137, double* %gamma, align 8, !dbg !3683
  %258 = load double, double* %alpha, align 8, !dbg !3684
  %cmp138 = fcmp ogt double %258, 0.000000e+00, !dbg !3685
  br i1 %cmp138, label %land.rhs, label %land.end, !dbg !3686

land.rhs:                                         ; preds = %sw.bb135
  %259 = load double, double* %gamma, align 8, !dbg !3687
  %cmp140 = fcmp ogt double %259, 0.000000e+00, !dbg !3688
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb135
  %260 = phi i1 [ false, %sw.bb135 ], [ %cmp140, %land.rhs ], !dbg !3689
  %261 = zext i1 %260 to i64, !dbg !3690
  %cond142 = select i1 %260, double 1.000000e+00, double 0.000000e+00, !dbg !3690
  %262 = load double*, double** %beta.addr, align 8, !dbg !3691
  store double %cond142, double* %262, align 8, !dbg !3692
  %263 = load double*, double** %beta.addr, align 8, !dbg !3693
  %264 = load double, double* %263, align 8, !dbg !3694
  store double %264, double* %retval, align 8, !dbg !3695
  br label %return, !dbg !3695

sw.bb143:                                         ; preds = %if.then12
  %265 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3696
  %266 = load i32, i32* %channel.addr, align 4, !dbg !3698
  %267 = load i64, i64* %x.addr, align 8, !dbg !3699
  %268 = load i64, i64* %y.addr, align 8, !dbg !3700
  %269 = load i8*, i8** %p, align 8, !dbg !3701
  %incdec.ptr144 = getelementptr inbounds i8, i8* %269, i32 1, !dbg !3701
  store i8* %incdec.ptr144, i8** %p, align 8, !dbg !3701
  %270 = load double*, double** %beta.addr, align 8, !dbg !3702
  %271 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3703
  %call145 = call double @FxEvaluateSubexpression(%struct._FxInfo* %265, i32 %266, i64 %267, i64 %268, i8* %incdec.ptr144, double* %270, %struct._ExceptionInfo* %271), !dbg !3704
  store double %call145, double* %gamma, align 8, !dbg !3705
  %272 = load double, double* %alpha, align 8, !dbg !3706
  %cmp146 = fcmp ogt double %272, 0.000000e+00, !dbg !3707
  br i1 %cmp146, label %lor.end, label %lor.rhs, !dbg !3708

lor.rhs:                                          ; preds = %sw.bb143
  %273 = load double, double* %gamma, align 8, !dbg !3709
  %cmp148 = fcmp ogt double %273, 0.000000e+00, !dbg !3710
  br label %lor.end, !dbg !3708

lor.end:                                          ; preds = %lor.rhs, %sw.bb143
  %274 = phi i1 [ true, %sw.bb143 ], [ %cmp148, %lor.rhs ]
  %275 = zext i1 %274 to i64, !dbg !3711
  %cond150 = select i1 %274, double 1.000000e+00, double 0.000000e+00, !dbg !3711
  %276 = load double*, double** %beta.addr, align 8, !dbg !3712
  store double %cond150, double* %276, align 8, !dbg !3713
  %277 = load double*, double** %beta.addr, align 8, !dbg !3714
  %278 = load double, double* %277, align 8, !dbg !3715
  store double %278, double* %retval, align 8, !dbg !3716
  br label %return, !dbg !3716

sw.bb151:                                         ; preds = %if.then12
  call void @llvm.dbg.declare(metadata double* %gamma152, metadata !3717, metadata !DIExpression()), !dbg !3719
  %arraydecay153 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3720
  %279 = load i8*, i8** %p, align 8, !dbg !3721
  %incdec.ptr154 = getelementptr inbounds i8, i8* %279, i32 1, !dbg !3721
  store i8* %incdec.ptr154, i8** %p, align 8, !dbg !3721
  %call155 = call i64 @CopyMagickString(i8* %arraydecay153, i8* %incdec.ptr154, i64 4096), !dbg !3722
  %arraydecay156 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3723
  store i8* %arraydecay156, i8** %q, align 8, !dbg !3724
  %call157 = call i8* @StringToken(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i8** %q), !dbg !3725
  store i8* %call157, i8** %p, align 8, !dbg !3726
  %280 = load i8*, i8** %q, align 8, !dbg !3727
  %cmp158 = icmp eq i8* %280, null, !dbg !3729
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !3730

if.then160:                                       ; preds = %sw.bb151
  %281 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3731
  %arraydecay161 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3733
  %call162 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %281, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2280, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay161), !dbg !3734
  store double 0.000000e+00, double* %retval, align 8, !dbg !3735
  br label %return, !dbg !3735

if.end163:                                        ; preds = %sw.bb151
  %282 = load double, double* %alpha, align 8, !dbg !3736
  %283 = call double @llvm.fabs.f64(double %282), !dbg !3738
  %cmp164 = fcmp oge double %283, 1.000000e-15, !dbg !3739
  br i1 %cmp164, label %if.then166, label %if.else, !dbg !3740

if.then166:                                       ; preds = %if.end163
  %284 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3741
  %285 = load i32, i32* %channel.addr, align 4, !dbg !3742
  %286 = load i64, i64* %x.addr, align 8, !dbg !3743
  %287 = load i64, i64* %y.addr, align 8, !dbg !3744
  %288 = load i8*, i8** %p, align 8, !dbg !3745
  %289 = load double*, double** %beta.addr, align 8, !dbg !3746
  %290 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3747
  %call167 = call double @FxEvaluateSubexpression(%struct._FxInfo* %284, i32 %285, i64 %286, i64 %287, i8* %288, double* %289, %struct._ExceptionInfo* %290), !dbg !3748
  store double %call167, double* %gamma152, align 8, !dbg !3749
  br label %if.end169, !dbg !3750

if.else:                                          ; preds = %if.end163
  %291 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3751
  %292 = load i32, i32* %channel.addr, align 4, !dbg !3752
  %293 = load i64, i64* %x.addr, align 8, !dbg !3753
  %294 = load i64, i64* %y.addr, align 8, !dbg !3754
  %295 = load i8*, i8** %q, align 8, !dbg !3755
  %296 = load double*, double** %beta.addr, align 8, !dbg !3756
  %297 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3757
  %call168 = call double @FxEvaluateSubexpression(%struct._FxInfo* %291, i32 %292, i64 %293, i64 %294, i8* %295, double* %296, %struct._ExceptionInfo* %297), !dbg !3758
  store double %call168, double* %gamma152, align 8, !dbg !3759
  br label %if.end169

if.end169:                                        ; preds = %if.else, %if.then166
  %298 = load double, double* %gamma152, align 8, !dbg !3760
  store double %298, double* %retval, align 8, !dbg !3761
  br label %return, !dbg !3761

sw.bb170:                                         ; preds = %if.then12
  call void @llvm.dbg.declare(metadata [4096 x i8]* %numeric, metadata !3762, metadata !DIExpression()), !dbg !3764
  %arraydecay171 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3765
  store i8* %arraydecay171, i8** %q, align 8, !dbg !3766
  br label %while.cond172, !dbg !3767

while.cond172:                                    ; preds = %while.body181, %sw.bb170
  %call173 = call i16** @__ctype_b_loc() #11, !dbg !3768
  %299 = load i16*, i16** %call173, align 8, !dbg !3768
  %300 = load i8*, i8** %q, align 8, !dbg !3768
  %301 = load i8, i8* %300, align 1, !dbg !3768
  %conv174 = zext i8 %301 to i32, !dbg !3768
  %idxprom175 = sext i32 %conv174 to i64, !dbg !3768
  %arrayidx176 = getelementptr inbounds i16, i16* %299, i64 %idxprom175, !dbg !3768
  %302 = load i16, i16* %arrayidx176, align 2, !dbg !3768
  %conv177 = zext i16 %302 to i32, !dbg !3768
  %and178 = and i32 %conv177, 1024, !dbg !3768
  %cmp179 = icmp ne i32 %and178, 0, !dbg !3769
  br i1 %cmp179, label %while.body181, label %while.end183, !dbg !3767

while.body181:                                    ; preds = %while.cond172
  %303 = load i8*, i8** %q, align 8, !dbg !3770
  %incdec.ptr182 = getelementptr inbounds i8, i8* %303, i32 1, !dbg !3770
  store i8* %incdec.ptr182, i8** %q, align 8, !dbg !3770
  br label %while.cond172, !dbg !3767, !llvm.loop !3771

while.end183:                                     ; preds = %while.cond172
  %304 = load i8*, i8** %q, align 8, !dbg !3772
  %305 = load i8, i8* %304, align 1, !dbg !3774
  %conv184 = sext i8 %305 to i32, !dbg !3774
  %cmp185 = icmp ne i32 %conv184, 0, !dbg !3775
  br i1 %cmp185, label %if.then187, label %if.end190, !dbg !3776

if.then187:                                       ; preds = %while.end183
  %306 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3777
  %arraydecay188 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3779
  %call189 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %306, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2300, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay188), !dbg !3780
  store double 0.000000e+00, double* %retval, align 8, !dbg !3781
  br label %return, !dbg !3781

if.end190:                                        ; preds = %while.end183
  %307 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3782
  call void @ClearMagickException(%struct._ExceptionInfo* %307), !dbg !3783
  %308 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3784
  %309 = load i32, i32* %channel.addr, align 4, !dbg !3785
  %310 = load i64, i64* %x.addr, align 8, !dbg !3786
  %311 = load i64, i64* %y.addr, align 8, !dbg !3787
  %312 = load i8*, i8** %p, align 8, !dbg !3788
  %incdec.ptr191 = getelementptr inbounds i8, i8* %312, i32 1, !dbg !3788
  store i8* %incdec.ptr191, i8** %p, align 8, !dbg !3788
  %313 = load double*, double** %beta.addr, align 8, !dbg !3789
  %314 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3790
  %call192 = call double @FxEvaluateSubexpression(%struct._FxInfo* %308, i32 %309, i64 %310, i64 %311, i8* %incdec.ptr191, double* %313, %struct._ExceptionInfo* %314), !dbg !3791
  %315 = load double*, double** %beta.addr, align 8, !dbg !3792
  store double %call192, double* %315, align 8, !dbg !3793
  %arraydecay193 = getelementptr inbounds [4096 x i8], [4096 x i8]* %numeric, i64 0, i64 0, !dbg !3794
  %316 = load double*, double** %beta.addr, align 8, !dbg !3795
  %317 = load double, double* %316, align 8, !dbg !3796
  %call194 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay193, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %317), !dbg !3797
  %318 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3798
  %symbols = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %318, i32 0, i32 4, !dbg !3799
  %319 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols, align 8, !dbg !3799
  %arraydecay195 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3800
  %call196 = call i32 @DeleteNodeFromSplayTree(%struct._SplayTreeInfo* %319, i8* %arraydecay195), !dbg !3801
  %320 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3802
  %symbols197 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %320, i32 0, i32 4, !dbg !3803
  %321 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols197, align 8, !dbg !3803
  %arraydecay198 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3804
  %call199 = call i8* @ConstantString(i8* %arraydecay198), !dbg !3805
  %arraydecay200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %numeric, i64 0, i64 0, !dbg !3806
  %call201 = call i8* @ConstantString(i8* %arraydecay200), !dbg !3807
  %call202 = call i32 @AddValueToSplayTree(%struct._SplayTreeInfo* %321, i8* %call199, i8* %call201), !dbg !3808
  %322 = load double*, double** %beta.addr, align 8, !dbg !3809
  %323 = load double, double* %322, align 8, !dbg !3810
  store double %323, double* %retval, align 8, !dbg !3811
  br label %return, !dbg !3811

sw.bb203:                                         ; preds = %if.then12
  %324 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3812
  %325 = load i32, i32* %channel.addr, align 4, !dbg !3814
  %326 = load i64, i64* %x.addr, align 8, !dbg !3815
  %327 = load i64, i64* %y.addr, align 8, !dbg !3816
  %328 = load i8*, i8** %p, align 8, !dbg !3817
  %incdec.ptr204 = getelementptr inbounds i8, i8* %328, i32 1, !dbg !3817
  store i8* %incdec.ptr204, i8** %p, align 8, !dbg !3817
  %329 = load double*, double** %beta.addr, align 8, !dbg !3818
  %330 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3819
  %call205 = call double @FxEvaluateSubexpression(%struct._FxInfo* %324, i32 %325, i64 %326, i64 %327, i8* %incdec.ptr204, double* %329, %struct._ExceptionInfo* %330), !dbg !3820
  %331 = load double*, double** %beta.addr, align 8, !dbg !3821
  store double %call205, double* %331, align 8, !dbg !3822
  %332 = load double, double* %alpha, align 8, !dbg !3823
  store double %332, double* %retval, align 8, !dbg !3824
  br label %return, !dbg !3824

sw.bb206:                                         ; preds = %if.then12
  %333 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3825
  %334 = load i32, i32* %channel.addr, align 4, !dbg !3827
  %335 = load i64, i64* %x.addr, align 8, !dbg !3828
  %336 = load i64, i64* %y.addr, align 8, !dbg !3829
  %337 = load i8*, i8** %p, align 8, !dbg !3830
  %incdec.ptr207 = getelementptr inbounds i8, i8* %337, i32 1, !dbg !3830
  store i8* %incdec.ptr207, i8** %p, align 8, !dbg !3830
  %338 = load double*, double** %beta.addr, align 8, !dbg !3831
  %339 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3832
  %call208 = call double @FxEvaluateSubexpression(%struct._FxInfo* %333, i32 %334, i64 %335, i64 %336, i8* %incdec.ptr207, double* %338, %struct._ExceptionInfo* %339), !dbg !3833
  %340 = load double*, double** %beta.addr, align 8, !dbg !3834
  store double %call208, double* %340, align 8, !dbg !3835
  %341 = load double*, double** %beta.addr, align 8, !dbg !3836
  %342 = load double, double* %341, align 8, !dbg !3837
  store double %342, double* %retval, align 8, !dbg !3838
  br label %return, !dbg !3838

sw.default:                                       ; preds = %if.then12
  %343 = load double, double* %alpha, align 8, !dbg !3839
  %344 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3841
  %345 = load i32, i32* %channel.addr, align 4, !dbg !3842
  %346 = load i64, i64* %x.addr, align 8, !dbg !3843
  %347 = load i64, i64* %y.addr, align 8, !dbg !3844
  %348 = load i8*, i8** %p, align 8, !dbg !3845
  %349 = load double*, double** %beta.addr, align 8, !dbg !3846
  %350 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3847
  %call209 = call double @FxEvaluateSubexpression(%struct._FxInfo* %344, i32 %345, i64 %346, i64 %347, i8* %348, double* %349, %struct._ExceptionInfo* %350), !dbg !3848
  %mul210 = fmul double %343, %call209, !dbg !3849
  store double %mul210, double* %gamma, align 8, !dbg !3850
  %351 = load double, double* %gamma, align 8, !dbg !3851
  store double %351, double* %retval, align 8, !dbg !3852
  br label %return, !dbg !3852

if.end211:                                        ; preds = %if.end8
  %352 = load i8*, i8** %expression.addr, align 8, !dbg !3853
  %353 = load i8, i8* %352, align 1, !dbg !3855
  %conv212 = sext i8 %353 to i32, !dbg !3856
  %call213 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 %conv212) #15, !dbg !3857
  %cmp214 = icmp ne i8* %call213, null, !dbg !3858
  br i1 %cmp214, label %if.then216, label %if.end225, !dbg !3859

if.then216:                                       ; preds = %if.end211
  %arraydecay217 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3860
  %354 = load i8*, i8** %expression.addr, align 8, !dbg !3862
  %add.ptr = getelementptr inbounds i8, i8* %354, i64 1, !dbg !3863
  %call218 = call i64 @CopyMagickString(i8* %arraydecay217, i8* %add.ptr, i64 4096), !dbg !3864
  %arraydecay219 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3865
  %call220 = call i64 @strlen(i8* %arraydecay219) #15, !dbg !3866
  %sub221 = sub i64 %call220, 1, !dbg !3867
  %arrayidx222 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 %sub221, !dbg !3868
  store i8 0, i8* %arrayidx222, align 1, !dbg !3869
  %355 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3870
  %356 = load i32, i32* %channel.addr, align 4, !dbg !3871
  %357 = load i64, i64* %x.addr, align 8, !dbg !3872
  %358 = load i64, i64* %y.addr, align 8, !dbg !3873
  %arraydecay223 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !3874
  %359 = load double*, double** %beta.addr, align 8, !dbg !3875
  %360 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3876
  %call224 = call double @FxEvaluateSubexpression(%struct._FxInfo* %355, i32 %356, i64 %357, i64 %358, i8* %arraydecay223, double* %359, %struct._ExceptionInfo* %360), !dbg !3877
  store double %call224, double* %gamma, align 8, !dbg !3878
  %361 = load double, double* %gamma, align 8, !dbg !3879
  store double %361, double* %retval, align 8, !dbg !3880
  br label %return, !dbg !3880

if.end225:                                        ; preds = %if.end211
  %362 = load i8*, i8** %expression.addr, align 8, !dbg !3881
  %363 = load i8, i8* %362, align 1, !dbg !3882
  %conv226 = sext i8 %363 to i32, !dbg !3882
  switch i32 %conv226, label %sw.default923 [
    i32 43, label %sw.bb227
    i32 45, label %sw.bb231
    i32 126, label %sw.bb235
    i32 65, label %sw.bb242
    i32 97, label %sw.bb242
    i32 66, label %sw.bb339
    i32 98, label %sw.bb339
    i32 67, label %sw.bb346
    i32 99, label %sw.bb346
    i32 68, label %sw.bb376
    i32 100, label %sw.bb376
    i32 69, label %sw.bb437
    i32 101, label %sw.bb437
    i32 70, label %sw.bb456
    i32 102, label %sw.bb456
    i32 71, label %sw.bb464
    i32 103, label %sw.bb464
    i32 72, label %sw.bb496
    i32 104, label %sw.bb496
    i32 75, label %sw.bb517
    i32 107, label %sw.bb517
    i32 73, label %sw.bb524
    i32 105, label %sw.bb524
    i32 74, label %sw.bb554
    i32 106, label %sw.bb554
    i32 76, label %sw.bb593
    i32 108, label %sw.bb593
    i32 77, label %sw.bb626
    i32 109, label %sw.bb626
    i32 78, label %sw.bb681
    i32 110, label %sw.bb681
    i32 79, label %sw.bb698
    i32 111, label %sw.bb698
    i32 80, label %sw.bb710
    i32 112, label %sw.bb710
    i32 81, label %sw.bb735
    i32 113, label %sw.bb735
    i32 82, label %sw.bb746
    i32 114, label %sw.bb746
    i32 83, label %sw.bb767
    i32 115, label %sw.bb767
    i32 84, label %sw.bb840
    i32 116, label %sw.bb840
    i32 85, label %sw.bb879
    i32 117, label %sw.bb879
    i32 86, label %sw.bb886
    i32 118, label %sw.bb886
    i32 87, label %sw.bb893
    i32 119, label %sw.bb893
    i32 89, label %sw.bb909
    i32 121, label %sw.bb909
    i32 90, label %sw.bb916
    i32 122, label %sw.bb916
  ], !dbg !3883

sw.bb227:                                         ; preds = %if.end225
  %364 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3884
  %365 = load i32, i32* %channel.addr, align 4, !dbg !3887
  %366 = load i64, i64* %x.addr, align 8, !dbg !3888
  %367 = load i64, i64* %y.addr, align 8, !dbg !3889
  %368 = load i8*, i8** %expression.addr, align 8, !dbg !3890
  %add.ptr228 = getelementptr inbounds i8, i8* %368, i64 1, !dbg !3891
  %369 = load double*, double** %beta.addr, align 8, !dbg !3892
  %370 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3893
  %call229 = call double @FxEvaluateSubexpression(%struct._FxInfo* %364, i32 %365, i64 %366, i64 %367, i8* %add.ptr228, double* %369, %struct._ExceptionInfo* %370), !dbg !3894
  store double %call229, double* %gamma, align 8, !dbg !3895
  %371 = load double, double* %gamma, align 8, !dbg !3896
  %mul230 = fmul double 1.000000e+00, %371, !dbg !3897
  store double %mul230, double* %retval, align 8, !dbg !3898
  br label %return, !dbg !3898

sw.bb231:                                         ; preds = %if.end225
  %372 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3899
  %373 = load i32, i32* %channel.addr, align 4, !dbg !3901
  %374 = load i64, i64* %x.addr, align 8, !dbg !3902
  %375 = load i64, i64* %y.addr, align 8, !dbg !3903
  %376 = load i8*, i8** %expression.addr, align 8, !dbg !3904
  %add.ptr232 = getelementptr inbounds i8, i8* %376, i64 1, !dbg !3905
  %377 = load double*, double** %beta.addr, align 8, !dbg !3906
  %378 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3907
  %call233 = call double @FxEvaluateSubexpression(%struct._FxInfo* %372, i32 %373, i64 %374, i64 %375, i8* %add.ptr232, double* %377, %struct._ExceptionInfo* %378), !dbg !3908
  store double %call233, double* %gamma, align 8, !dbg !3909
  %379 = load double, double* %gamma, align 8, !dbg !3910
  %mul234 = fmul double -1.000000e+00, %379, !dbg !3911
  store double %mul234, double* %retval, align 8, !dbg !3912
  br label %return, !dbg !3912

sw.bb235:                                         ; preds = %if.end225
  %380 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3913
  %381 = load i32, i32* %channel.addr, align 4, !dbg !3915
  %382 = load i64, i64* %x.addr, align 8, !dbg !3916
  %383 = load i64, i64* %y.addr, align 8, !dbg !3917
  %384 = load i8*, i8** %expression.addr, align 8, !dbg !3918
  %add.ptr236 = getelementptr inbounds i8, i8* %384, i64 1, !dbg !3919
  %385 = load double*, double** %beta.addr, align 8, !dbg !3920
  %386 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3921
  %call237 = call double @FxEvaluateSubexpression(%struct._FxInfo* %380, i32 %381, i64 %382, i64 %383, i8* %add.ptr236, double* %385, %struct._ExceptionInfo* %386), !dbg !3922
  store double %call237, double* %gamma, align 8, !dbg !3923
  %387 = load double, double* %gamma, align 8, !dbg !3924
  %add238 = fadd double %387, 5.000000e-01, !dbg !3925
  %conv239 = fptoui double %add238 to i64, !dbg !3926
  %neg240 = xor i64 %conv239, -1, !dbg !3927
  %conv241 = uitofp i64 %neg240 to double, !dbg !3928
  store double %conv241, double* %retval, align 8, !dbg !3929
  br label %return, !dbg !3929

sw.bb242:                                         ; preds = %if.end225, %if.end225
  %388 = load i8*, i8** %expression.addr, align 8, !dbg !3930
  %call243 = call i32 @LocaleNCompare(i8* %388, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i64 3), !dbg !3933
  %cmp244 = icmp eq i32 %call243, 0, !dbg !3934
  br i1 %cmp244, label %if.then246, label %if.end249, !dbg !3935

if.then246:                                       ; preds = %sw.bb242
  %389 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3936
  %390 = load i32, i32* %channel.addr, align 4, !dbg !3938
  %391 = load i64, i64* %x.addr, align 8, !dbg !3939
  %392 = load i64, i64* %y.addr, align 8, !dbg !3940
  %393 = load i8*, i8** %expression.addr, align 8, !dbg !3941
  %add.ptr247 = getelementptr inbounds i8, i8* %393, i64 3, !dbg !3942
  %394 = load double*, double** %beta.addr, align 8, !dbg !3943
  %395 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3944
  %call248 = call double @FxEvaluateSubexpression(%struct._FxInfo* %389, i32 %390, i64 %391, i64 %392, i8* %add.ptr247, double* %394, %struct._ExceptionInfo* %395), !dbg !3945
  store double %call248, double* %alpha, align 8, !dbg !3946
  %396 = load double, double* %alpha, align 8, !dbg !3947
  %397 = call double @llvm.fabs.f64(double %396), !dbg !3948
  store double %397, double* %retval, align 8, !dbg !3949
  br label %return, !dbg !3949

if.end249:                                        ; preds = %sw.bb242
  %398 = load i8*, i8** %expression.addr, align 8, !dbg !3950
  %call250 = call i32 @LocaleNCompare(i8* %398, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 5), !dbg !3952
  %cmp251 = icmp eq i32 %call250, 0, !dbg !3953
  br i1 %cmp251, label %if.then253, label %if.end257, !dbg !3954

if.then253:                                       ; preds = %if.end249
  %399 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3955
  %400 = load i32, i32* %channel.addr, align 4, !dbg !3957
  %401 = load i64, i64* %x.addr, align 8, !dbg !3958
  %402 = load i64, i64* %y.addr, align 8, !dbg !3959
  %403 = load i8*, i8** %expression.addr, align 8, !dbg !3960
  %add.ptr254 = getelementptr inbounds i8, i8* %403, i64 5, !dbg !3961
  %404 = load double*, double** %beta.addr, align 8, !dbg !3962
  %405 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3963
  %call255 = call double @FxEvaluateSubexpression(%struct._FxInfo* %399, i32 %400, i64 %401, i64 %402, i8* %add.ptr254, double* %404, %struct._ExceptionInfo* %405), !dbg !3964
  store double %call255, double* %alpha, align 8, !dbg !3965
  %406 = load double, double* %alpha, align 8, !dbg !3966
  %call256 = call double @acosh(double %406) #14, !dbg !3967
  store double %call256, double* %retval, align 8, !dbg !3968
  br label %return, !dbg !3968

if.end257:                                        ; preds = %if.end249
  %407 = load i8*, i8** %expression.addr, align 8, !dbg !3969
  %call258 = call i32 @LocaleNCompare(i8* %407, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i64 4), !dbg !3971
  %cmp259 = icmp eq i32 %call258, 0, !dbg !3972
  br i1 %cmp259, label %if.then261, label %if.end265, !dbg !3973

if.then261:                                       ; preds = %if.end257
  %408 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3974
  %409 = load i32, i32* %channel.addr, align 4, !dbg !3976
  %410 = load i64, i64* %x.addr, align 8, !dbg !3977
  %411 = load i64, i64* %y.addr, align 8, !dbg !3978
  %412 = load i8*, i8** %expression.addr, align 8, !dbg !3979
  %add.ptr262 = getelementptr inbounds i8, i8* %412, i64 4, !dbg !3980
  %413 = load double*, double** %beta.addr, align 8, !dbg !3981
  %414 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3982
  %call263 = call double @FxEvaluateSubexpression(%struct._FxInfo* %408, i32 %409, i64 %410, i64 %411, i8* %add.ptr262, double* %413, %struct._ExceptionInfo* %414), !dbg !3983
  store double %call263, double* %alpha, align 8, !dbg !3984
  %415 = load double, double* %alpha, align 8, !dbg !3985
  %call264 = call double @acos(double %415) #14, !dbg !3986
  store double %call264, double* %retval, align 8, !dbg !3987
  br label %return, !dbg !3987

if.end265:                                        ; preds = %if.end257
  %416 = load i8*, i8** %expression.addr, align 8, !dbg !3988
  %call266 = call i32 @LocaleNCompare(i8* %416, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 4), !dbg !3990
  %cmp267 = icmp eq i32 %call266, 0, !dbg !3991
  br i1 %cmp267, label %if.then269, label %if.end282, !dbg !3992

if.then269:                                       ; preds = %if.end265
  %417 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !3993
  %418 = load i32, i32* %channel.addr, align 4, !dbg !3995
  %419 = load i64, i64* %x.addr, align 8, !dbg !3996
  %420 = load i64, i64* %y.addr, align 8, !dbg !3997
  %421 = load i8*, i8** %expression.addr, align 8, !dbg !3998
  %add.ptr270 = getelementptr inbounds i8, i8* %421, i64 4, !dbg !3999
  %422 = load double*, double** %beta.addr, align 8, !dbg !4000
  %423 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4001
  %call271 = call double @FxEvaluateSubexpression(%struct._FxInfo* %417, i32 %418, i64 %419, i64 %420, i8* %add.ptr270, double* %422, %struct._ExceptionInfo* %423), !dbg !4002
  store double %call271, double* %alpha, align 8, !dbg !4003
  %424 = load double, double* %alpha, align 8, !dbg !4004
  %cmp272 = fcmp oeq double %424, 0.000000e+00, !dbg !4006
  br i1 %cmp272, label %if.then274, label %if.end275, !dbg !4007

if.then274:                                       ; preds = %if.then269
  store double 1.000000e+00, double* %retval, align 8, !dbg !4008
  br label %return, !dbg !4008

if.end275:                                        ; preds = %if.then269
  %425 = load double, double* %alpha, align 8, !dbg !4009
  %mul276 = fmul double 0x400921FB54442D18, %425, !dbg !4010
  %call277 = call double @j1(double %mul276) #14, !dbg !4011
  %mul278 = fmul double 2.000000e+00, %call277, !dbg !4012
  %426 = load double, double* %alpha, align 8, !dbg !4013
  %mul279 = fmul double 0x400921FB54442D18, %426, !dbg !4014
  %div280 = fdiv double %mul278, %mul279, !dbg !4015
  store double %div280, double* %gamma, align 8, !dbg !4016
  %427 = load double, double* %gamma, align 8, !dbg !4017
  %428 = load double, double* %gamma, align 8, !dbg !4018
  %mul281 = fmul double %427, %428, !dbg !4019
  store double %mul281, double* %retval, align 8, !dbg !4020
  br label %return, !dbg !4020

if.end282:                                        ; preds = %if.end265
  %429 = load i8*, i8** %expression.addr, align 8, !dbg !4021
  %call283 = call i32 @LocaleNCompare(i8* %429, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i64 5), !dbg !4023
  %cmp284 = icmp eq i32 %call283, 0, !dbg !4024
  br i1 %cmp284, label %if.then286, label %if.end290, !dbg !4025

if.then286:                                       ; preds = %if.end282
  %430 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4026
  %431 = load i32, i32* %channel.addr, align 4, !dbg !4028
  %432 = load i64, i64* %x.addr, align 8, !dbg !4029
  %433 = load i64, i64* %y.addr, align 8, !dbg !4030
  %434 = load i8*, i8** %expression.addr, align 8, !dbg !4031
  %add.ptr287 = getelementptr inbounds i8, i8* %434, i64 5, !dbg !4032
  %435 = load double*, double** %beta.addr, align 8, !dbg !4033
  %436 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4034
  %call288 = call double @FxEvaluateSubexpression(%struct._FxInfo* %430, i32 %431, i64 %432, i64 %433, i8* %add.ptr287, double* %435, %struct._ExceptionInfo* %436), !dbg !4035
  store double %call288, double* %alpha, align 8, !dbg !4036
  %437 = load double, double* %alpha, align 8, !dbg !4037
  %call289 = call double @asinh(double %437) #14, !dbg !4038
  store double %call289, double* %retval, align 8, !dbg !4039
  br label %return, !dbg !4039

if.end290:                                        ; preds = %if.end282
  %438 = load i8*, i8** %expression.addr, align 8, !dbg !4040
  %call291 = call i32 @LocaleNCompare(i8* %438, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i64 4), !dbg !4042
  %cmp292 = icmp eq i32 %call291, 0, !dbg !4043
  br i1 %cmp292, label %if.then294, label %if.end298, !dbg !4044

if.then294:                                       ; preds = %if.end290
  %439 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4045
  %440 = load i32, i32* %channel.addr, align 4, !dbg !4047
  %441 = load i64, i64* %x.addr, align 8, !dbg !4048
  %442 = load i64, i64* %y.addr, align 8, !dbg !4049
  %443 = load i8*, i8** %expression.addr, align 8, !dbg !4050
  %add.ptr295 = getelementptr inbounds i8, i8* %443, i64 4, !dbg !4051
  %444 = load double*, double** %beta.addr, align 8, !dbg !4052
  %445 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4053
  %call296 = call double @FxEvaluateSubexpression(%struct._FxInfo* %439, i32 %440, i64 %441, i64 %442, i8* %add.ptr295, double* %444, %struct._ExceptionInfo* %445), !dbg !4054
  store double %call296, double* %alpha, align 8, !dbg !4055
  %446 = load double, double* %alpha, align 8, !dbg !4056
  %call297 = call double @asin(double %446) #14, !dbg !4057
  store double %call297, double* %retval, align 8, !dbg !4058
  br label %return, !dbg !4058

if.end298:                                        ; preds = %if.end290
  %447 = load i8*, i8** %expression.addr, align 8, !dbg !4059
  %call299 = call i32 @LocaleNCompare(i8* %447, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0), i64 3), !dbg !4061
  %cmp300 = icmp eq i32 %call299, 0, !dbg !4062
  br i1 %cmp300, label %if.then302, label %if.end308, !dbg !4063

if.then302:                                       ; preds = %if.end298
  %448 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4064
  %449 = load i32, i32* %channel.addr, align 4, !dbg !4066
  %450 = load i64, i64* %x.addr, align 8, !dbg !4067
  %451 = load i64, i64* %y.addr, align 8, !dbg !4068
  %452 = load i8*, i8** %expression.addr, align 8, !dbg !4069
  %add.ptr303 = getelementptr inbounds i8, i8* %452, i64 3, !dbg !4070
  %453 = load double*, double** %beta.addr, align 8, !dbg !4071
  %454 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4072
  %call304 = call double @FxEvaluateSubexpression(%struct._FxInfo* %448, i32 %449, i64 %450, i64 %451, i8* %add.ptr303, double* %453, %struct._ExceptionInfo* %454), !dbg !4073
  store double %call304, double* %alpha, align 8, !dbg !4074
  %455 = load double, double* %alpha, align 8, !dbg !4075
  %conv305 = fptosi double %455 to i64, !dbg !4076
  %and306 = and i64 %conv305, 1, !dbg !4077
  %tobool = icmp ne i64 %and306, 0, !dbg !4078
  %456 = zext i1 %tobool to i64, !dbg !4078
  %cond307 = select i1 %tobool, double -1.000000e+00, double 1.000000e+00, !dbg !4078
  store double %cond307, double* %retval, align 8, !dbg !4079
  br label %return, !dbg !4079

if.end308:                                        ; preds = %if.end298
  %457 = load i8*, i8** %expression.addr, align 8, !dbg !4080
  %call309 = call i32 @LocaleNCompare(i8* %457, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 5), !dbg !4082
  %cmp310 = icmp eq i32 %call309, 0, !dbg !4083
  br i1 %cmp310, label %if.then312, label %if.end316, !dbg !4084

if.then312:                                       ; preds = %if.end308
  %458 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4085
  %459 = load i32, i32* %channel.addr, align 4, !dbg !4087
  %460 = load i64, i64* %x.addr, align 8, !dbg !4088
  %461 = load i64, i64* %y.addr, align 8, !dbg !4089
  %462 = load i8*, i8** %expression.addr, align 8, !dbg !4090
  %add.ptr313 = getelementptr inbounds i8, i8* %462, i64 5, !dbg !4091
  %463 = load double*, double** %beta.addr, align 8, !dbg !4092
  %464 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4093
  %call314 = call double @FxEvaluateSubexpression(%struct._FxInfo* %458, i32 %459, i64 %460, i64 %461, i8* %add.ptr313, double* %463, %struct._ExceptionInfo* %464), !dbg !4094
  store double %call314, double* %alpha, align 8, !dbg !4095
  %465 = load double, double* %alpha, align 8, !dbg !4096
  %466 = load double*, double** %beta.addr, align 8, !dbg !4097
  %467 = load double, double* %466, align 8, !dbg !4098
  %call315 = call double @atan2(double %465, double %467) #14, !dbg !4099
  store double %call315, double* %retval, align 8, !dbg !4100
  br label %return, !dbg !4100

if.end316:                                        ; preds = %if.end308
  %468 = load i8*, i8** %expression.addr, align 8, !dbg !4101
  %call317 = call i32 @LocaleNCompare(i8* %468, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0), i64 5), !dbg !4103
  %cmp318 = icmp eq i32 %call317, 0, !dbg !4104
  br i1 %cmp318, label %if.then320, label %if.end324, !dbg !4105

if.then320:                                       ; preds = %if.end316
  %469 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4106
  %470 = load i32, i32* %channel.addr, align 4, !dbg !4108
  %471 = load i64, i64* %x.addr, align 8, !dbg !4109
  %472 = load i64, i64* %y.addr, align 8, !dbg !4110
  %473 = load i8*, i8** %expression.addr, align 8, !dbg !4111
  %add.ptr321 = getelementptr inbounds i8, i8* %473, i64 5, !dbg !4112
  %474 = load double*, double** %beta.addr, align 8, !dbg !4113
  %475 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4114
  %call322 = call double @FxEvaluateSubexpression(%struct._FxInfo* %469, i32 %470, i64 %471, i64 %472, i8* %add.ptr321, double* %474, %struct._ExceptionInfo* %475), !dbg !4115
  store double %call322, double* %alpha, align 8, !dbg !4116
  %476 = load double, double* %alpha, align 8, !dbg !4117
  %call323 = call double @atanh(double %476) #14, !dbg !4118
  store double %call323, double* %retval, align 8, !dbg !4119
  br label %return, !dbg !4119

if.end324:                                        ; preds = %if.end316
  %477 = load i8*, i8** %expression.addr, align 8, !dbg !4120
  %call325 = call i32 @LocaleNCompare(i8* %477, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i64 4), !dbg !4122
  %cmp326 = icmp eq i32 %call325, 0, !dbg !4123
  br i1 %cmp326, label %if.then328, label %if.end332, !dbg !4124

if.then328:                                       ; preds = %if.end324
  %478 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4125
  %479 = load i32, i32* %channel.addr, align 4, !dbg !4127
  %480 = load i64, i64* %x.addr, align 8, !dbg !4128
  %481 = load i64, i64* %y.addr, align 8, !dbg !4129
  %482 = load i8*, i8** %expression.addr, align 8, !dbg !4130
  %add.ptr329 = getelementptr inbounds i8, i8* %482, i64 4, !dbg !4131
  %483 = load double*, double** %beta.addr, align 8, !dbg !4132
  %484 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4133
  %call330 = call double @FxEvaluateSubexpression(%struct._FxInfo* %478, i32 %479, i64 %480, i64 %481, i8* %add.ptr329, double* %483, %struct._ExceptionInfo* %484), !dbg !4134
  store double %call330, double* %alpha, align 8, !dbg !4135
  %485 = load double, double* %alpha, align 8, !dbg !4136
  %call331 = call double @atan(double %485) #14, !dbg !4137
  store double %call331, double* %retval, align 8, !dbg !4138
  br label %return, !dbg !4138

if.end332:                                        ; preds = %if.end324
  %486 = load i8*, i8** %expression.addr, align 8, !dbg !4139
  %call333 = call i32 @LocaleCompare(i8* %486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)), !dbg !4141
  %cmp334 = icmp eq i32 %call333, 0, !dbg !4142
  br i1 %cmp334, label %if.then336, label %if.end338, !dbg !4143

if.then336:                                       ; preds = %if.end332
  %487 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4144
  %488 = load i32, i32* %channel.addr, align 4, !dbg !4145
  %489 = load i64, i64* %x.addr, align 8, !dbg !4146
  %490 = load i64, i64* %y.addr, align 8, !dbg !4147
  %491 = load i8*, i8** %expression.addr, align 8, !dbg !4148
  %492 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4149
  %call337 = call double @FxGetSymbol(%struct._FxInfo* %487, i32 %488, i64 %489, i64 %490, i8* %491, %struct._ExceptionInfo* %492), !dbg !4150
  store double %call337, double* %retval, align 8, !dbg !4151
  br label %return, !dbg !4151

if.end338:                                        ; preds = %if.end332
  br label %sw.epilog924, !dbg !4152

sw.bb339:                                         ; preds = %if.end225, %if.end225
  %493 = load i8*, i8** %expression.addr, align 8, !dbg !4153
  %call340 = call i32 @LocaleCompare(i8* %493, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70, i64 0, i64 0)), !dbg !4156
  %cmp341 = icmp eq i32 %call340, 0, !dbg !4157
  br i1 %cmp341, label %if.then343, label %if.end345, !dbg !4158

if.then343:                                       ; preds = %sw.bb339
  %494 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4159
  %495 = load i32, i32* %channel.addr, align 4, !dbg !4160
  %496 = load i64, i64* %x.addr, align 8, !dbg !4161
  %497 = load i64, i64* %y.addr, align 8, !dbg !4162
  %498 = load i8*, i8** %expression.addr, align 8, !dbg !4163
  %499 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4164
  %call344 = call double @FxGetSymbol(%struct._FxInfo* %494, i32 %495, i64 %496, i64 %497, i8* %498, %struct._ExceptionInfo* %499), !dbg !4165
  store double %call344, double* %retval, align 8, !dbg !4166
  br label %return, !dbg !4166

if.end345:                                        ; preds = %sw.bb339
  br label %sw.epilog924, !dbg !4167

sw.bb346:                                         ; preds = %if.end225, %if.end225
  %500 = load i8*, i8** %expression.addr, align 8, !dbg !4168
  %call347 = call i32 @LocaleNCompare(i8* %500, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i64 4), !dbg !4171
  %cmp348 = icmp eq i32 %call347, 0, !dbg !4172
  br i1 %cmp348, label %if.then350, label %if.end353, !dbg !4173

if.then350:                                       ; preds = %sw.bb346
  %501 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4174
  %502 = load i32, i32* %channel.addr, align 4, !dbg !4176
  %503 = load i64, i64* %x.addr, align 8, !dbg !4177
  %504 = load i64, i64* %y.addr, align 8, !dbg !4178
  %505 = load i8*, i8** %expression.addr, align 8, !dbg !4179
  %add.ptr351 = getelementptr inbounds i8, i8* %505, i64 4, !dbg !4180
  %506 = load double*, double** %beta.addr, align 8, !dbg !4181
  %507 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4182
  %call352 = call double @FxEvaluateSubexpression(%struct._FxInfo* %501, i32 %502, i64 %503, i64 %504, i8* %add.ptr351, double* %506, %struct._ExceptionInfo* %507), !dbg !4183
  store double %call352, double* %alpha, align 8, !dbg !4184
  %508 = load double, double* %alpha, align 8, !dbg !4185
  %509 = call double @llvm.ceil.f64(double %508), !dbg !4186
  store double %509, double* %retval, align 8, !dbg !4187
  br label %return, !dbg !4187

if.end353:                                        ; preds = %sw.bb346
  %510 = load i8*, i8** %expression.addr, align 8, !dbg !4188
  %call354 = call i32 @LocaleNCompare(i8* %510, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), i64 4), !dbg !4190
  %cmp355 = icmp eq i32 %call354, 0, !dbg !4191
  br i1 %cmp355, label %if.then357, label %if.end361, !dbg !4192

if.then357:                                       ; preds = %if.end353
  %511 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4193
  %512 = load i32, i32* %channel.addr, align 4, !dbg !4195
  %513 = load i64, i64* %x.addr, align 8, !dbg !4196
  %514 = load i64, i64* %y.addr, align 8, !dbg !4197
  %515 = load i8*, i8** %expression.addr, align 8, !dbg !4198
  %add.ptr358 = getelementptr inbounds i8, i8* %515, i64 4, !dbg !4199
  %516 = load double*, double** %beta.addr, align 8, !dbg !4200
  %517 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4201
  %call359 = call double @FxEvaluateSubexpression(%struct._FxInfo* %511, i32 %512, i64 %513, i64 %514, i8* %add.ptr358, double* %516, %struct._ExceptionInfo* %517), !dbg !4202
  store double %call359, double* %alpha, align 8, !dbg !4203
  %518 = load double, double* %alpha, align 8, !dbg !4204
  %call360 = call double @cosh(double %518) #14, !dbg !4205
  store double %call360, double* %retval, align 8, !dbg !4206
  br label %return, !dbg !4206

if.end361:                                        ; preds = %if.end353
  %519 = load i8*, i8** %expression.addr, align 8, !dbg !4207
  %call362 = call i32 @LocaleNCompare(i8* %519, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0), i64 3), !dbg !4209
  %cmp363 = icmp eq i32 %call362, 0, !dbg !4210
  br i1 %cmp363, label %if.then365, label %if.end369, !dbg !4211

if.then365:                                       ; preds = %if.end361
  %520 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4212
  %521 = load i32, i32* %channel.addr, align 4, !dbg !4214
  %522 = load i64, i64* %x.addr, align 8, !dbg !4215
  %523 = load i64, i64* %y.addr, align 8, !dbg !4216
  %524 = load i8*, i8** %expression.addr, align 8, !dbg !4217
  %add.ptr366 = getelementptr inbounds i8, i8* %524, i64 3, !dbg !4218
  %525 = load double*, double** %beta.addr, align 8, !dbg !4219
  %526 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4220
  %call367 = call double @FxEvaluateSubexpression(%struct._FxInfo* %520, i32 %521, i64 %522, i64 %523, i8* %add.ptr366, double* %525, %struct._ExceptionInfo* %526), !dbg !4221
  store double %call367, double* %alpha, align 8, !dbg !4222
  %527 = load double, double* %alpha, align 8, !dbg !4223
  %call368 = call double @cos(double %527) #14, !dbg !4224
  store double %call368, double* %retval, align 8, !dbg !4225
  br label %return, !dbg !4225

if.end369:                                        ; preds = %if.end361
  %528 = load i8*, i8** %expression.addr, align 8, !dbg !4226
  %call370 = call i32 @LocaleCompare(i8* %528, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0)), !dbg !4228
  %cmp371 = icmp eq i32 %call370, 0, !dbg !4229
  br i1 %cmp371, label %if.then373, label %if.end375, !dbg !4230

if.then373:                                       ; preds = %if.end369
  %529 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4231
  %530 = load i32, i32* %channel.addr, align 4, !dbg !4232
  %531 = load i64, i64* %x.addr, align 8, !dbg !4233
  %532 = load i64, i64* %y.addr, align 8, !dbg !4234
  %533 = load i8*, i8** %expression.addr, align 8, !dbg !4235
  %534 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4236
  %call374 = call double @FxGetSymbol(%struct._FxInfo* %529, i32 %530, i64 %531, i64 %532, i8* %533, %struct._ExceptionInfo* %534), !dbg !4237
  store double %call374, double* %retval, align 8, !dbg !4238
  br label %return, !dbg !4238

if.end375:                                        ; preds = %if.end369
  br label %sw.epilog924, !dbg !4239

sw.bb376:                                         ; preds = %if.end225, %if.end225
  %535 = load i8*, i8** %expression.addr, align 8, !dbg !4240
  %call377 = call i32 @LocaleNCompare(i8* %535, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i64 5), !dbg !4243
  %cmp378 = icmp eq i32 %call377, 0, !dbg !4244
  br i1 %cmp378, label %if.then380, label %if.end425, !dbg !4245

if.then380:                                       ; preds = %sw.bb376
  call void @llvm.dbg.declare(metadata i8** %type, metadata !4246, metadata !DIExpression()), !dbg !4248
  %536 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4249
  %537 = load i32, i32* %channel.addr, align 4, !dbg !4250
  %538 = load i64, i64* %x.addr, align 8, !dbg !4251
  %539 = load i64, i64* %y.addr, align 8, !dbg !4252
  %540 = load i8*, i8** %expression.addr, align 8, !dbg !4253
  %add.ptr381 = getelementptr inbounds i8, i8* %540, i64 5, !dbg !4254
  %541 = load double*, double** %beta.addr, align 8, !dbg !4255
  %542 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4256
  %call382 = call double @FxEvaluateSubexpression(%struct._FxInfo* %536, i32 %537, i64 %538, i64 %539, i8* %add.ptr381, double* %541, %struct._ExceptionInfo* %542), !dbg !4257
  store double %call382, double* %alpha, align 8, !dbg !4258
  %543 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4259
  %images = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %543, i32 0, i32 0, !dbg !4261
  %544 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4261
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %544, i32 0, i32 1, !dbg !4262
  %545 = load i32, i32* %colorspace, align 4, !dbg !4262
  %cmp383 = icmp eq i32 %545, 12, !dbg !4263
  br i1 %cmp383, label %if.then385, label %if.else392, !dbg !4264

if.then385:                                       ; preds = %if.then380
  %546 = load i32, i32* %channel.addr, align 4, !dbg !4265
  switch i32 %546, label %sw.default391 [
    i32 1, label %sw.bb386
    i32 2, label %sw.bb387
    i32 4, label %sw.bb388
    i32 8, label %sw.bb389
    i32 32, label %sw.bb390
  ], !dbg !4266

sw.bb386:                                         ; preds = %if.then385
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i64 0, i64 0), i8** %type, align 8, !dbg !4267
  br label %sw.epilog, !dbg !4269

sw.bb387:                                         ; preds = %if.then385
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8** %type, align 8, !dbg !4270
  br label %sw.epilog, !dbg !4271

sw.bb388:                                         ; preds = %if.then385
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), i8** %type, align 8, !dbg !4272
  br label %sw.epilog, !dbg !4273

sw.bb389:                                         ; preds = %if.then385
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i8** %type, align 8, !dbg !4274
  br label %sw.epilog, !dbg !4275

sw.bb390:                                         ; preds = %if.then385
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0), i8** %type, align 8, !dbg !4276
  br label %sw.epilog, !dbg !4277

sw.default391:                                    ; preds = %if.then385
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), i8** %type, align 8, !dbg !4278
  br label %sw.epilog, !dbg !4279

sw.epilog:                                        ; preds = %sw.default391, %sw.bb390, %sw.bb389, %sw.bb388, %sw.bb387, %sw.bb386
  br label %if.end399, !dbg !4280

if.else392:                                       ; preds = %if.then380
  %547 = load i32, i32* %channel.addr, align 4, !dbg !4281
  switch i32 %547, label %sw.default397 [
    i32 1, label %sw.bb393
    i32 2, label %sw.bb394
    i32 4, label %sw.bb395
    i32 8, label %sw.bb396
  ], !dbg !4282

sw.bb393:                                         ; preds = %if.else392
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i64 0, i64 0), i8** %type, align 8, !dbg !4283
  br label %sw.epilog398, !dbg !4285

sw.bb394:                                         ; preds = %if.else392
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), i8** %type, align 8, !dbg !4286
  br label %sw.epilog398, !dbg !4287

sw.bb395:                                         ; preds = %if.else392
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i64 0, i64 0), i8** %type, align 8, !dbg !4288
  br label %sw.epilog398, !dbg !4289

sw.bb396:                                         ; preds = %if.else392
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i8** %type, align 8, !dbg !4290
  br label %sw.epilog398, !dbg !4291

sw.default397:                                    ; preds = %if.else392
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), i8** %type, align 8, !dbg !4292
  br label %sw.epilog398, !dbg !4293

sw.epilog398:                                     ; preds = %sw.default397, %sw.bb396, %sw.bb395, %sw.bb394, %sw.bb393
  br label %if.end399

if.end399:                                        ; preds = %sw.epilog398, %sw.epilog
  %arraydecay400 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !4294
  %548 = load i8*, i8** %expression.addr, align 8, !dbg !4295
  %add.ptr401 = getelementptr inbounds i8, i8* %548, i64 6, !dbg !4296
  %call402 = call i64 @CopyMagickString(i8* %arraydecay400, i8* %add.ptr401, i64 4096), !dbg !4297
  %arraydecay403 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !4298
  %call404 = call i64 @strlen(i8* %arraydecay403) #15, !dbg !4300
  %cmp405 = icmp ugt i64 %call404, 1, !dbg !4301
  br i1 %cmp405, label %if.then407, label %if.end412, !dbg !4302

if.then407:                                       ; preds = %if.end399
  %arraydecay408 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !4303
  %call409 = call i64 @strlen(i8* %arraydecay408) #15, !dbg !4304
  %sub410 = sub i64 %call409, 1, !dbg !4305
  %arrayidx411 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 %sub410, !dbg !4306
  store i8 0, i8* %arrayidx411, align 1, !dbg !4307
  br label %if.end412, !dbg !4306

if.end412:                                        ; preds = %if.then407, %if.end399
  %549 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4308
  %file = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %549, i32 0, i32 2, !dbg !4310
  %550 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !4310
  %cmp413 = icmp ne %struct._IO_FILE* %550, null, !dbg !4311
  br i1 %cmp413, label %if.then415, label %if.end424, !dbg !4312

if.then415:                                       ; preds = %if.end412
  %551 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4313
  %file416 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %551, i32 0, i32 2, !dbg !4314
  %552 = load %struct._IO_FILE*, %struct._IO_FILE** %file416, align 8, !dbg !4314
  %553 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4315
  %images417 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %553, i32 0, i32 0, !dbg !4316
  %554 = load %struct._Image*, %struct._Image** %images417, align 8, !dbg !4316
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %554, i32 0, i32 53, !dbg !4317
  %arraydecay418 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4315
  %555 = load i64, i64* %x.addr, align 8, !dbg !4318
  %conv419 = sitofp i64 %555 to double, !dbg !4319
  %556 = load i64, i64* %y.addr, align 8, !dbg !4320
  %conv420 = sitofp i64 %556 to double, !dbg !4321
  %557 = load i8*, i8** %type, align 8, !dbg !4322
  %arraydecay421 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !4323
  %call422 = call i32 @GetMagickPrecision(), !dbg !4324
  %558 = load double, double* %alpha, align 8, !dbg !4325
  %call423 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i64 0, i64 0), i8* %arraydecay418, double %conv419, double %conv420, i8* %557, i8* %arraydecay421, i32 %call422, double %558), !dbg !4326
  br label %if.end424, !dbg !4327

if.end424:                                        ; preds = %if.then415, %if.end412
  store double 0.000000e+00, double* %retval, align 8, !dbg !4328
  br label %return, !dbg !4328

if.end425:                                        ; preds = %sw.bb376
  %559 = load i8*, i8** %expression.addr, align 8, !dbg !4329
  %call426 = call i32 @LocaleNCompare(i8* %559, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i64 0, i64 0), i64 3), !dbg !4331
  %cmp427 = icmp eq i32 %call426, 0, !dbg !4332
  br i1 %cmp427, label %if.then429, label %if.end436, !dbg !4333

if.then429:                                       ; preds = %if.end425
  %560 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4334
  %561 = load i32, i32* %channel.addr, align 4, !dbg !4336
  %562 = load i64, i64* %x.addr, align 8, !dbg !4337
  %563 = load i64, i64* %y.addr, align 8, !dbg !4338
  %564 = load i8*, i8** %expression.addr, align 8, !dbg !4339
  %add.ptr430 = getelementptr inbounds i8, i8* %564, i64 3, !dbg !4340
  %565 = load double*, double** %beta.addr, align 8, !dbg !4341
  %566 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4342
  %call431 = call double @FxEvaluateSubexpression(%struct._FxInfo* %560, i32 %561, i64 %562, i64 %563, i8* %add.ptr430, double* %565, %struct._ExceptionInfo* %566), !dbg !4343
  store double %call431, double* %alpha, align 8, !dbg !4344
  %567 = load double, double* %alpha, align 8, !dbg !4345
  %568 = load double*, double** %beta.addr, align 8, !dbg !4346
  %569 = load double, double* %568, align 8, !dbg !4347
  %570 = load double, double* %alpha, align 8, !dbg !4348
  %sub432 = fsub double %570, 1.000000e+00, !dbg !4349
  %mul433 = fmul double %569, %sub432, !dbg !4350
  %add434 = fadd double %mul433, 1.000000e+00, !dbg !4351
  %div435 = fdiv double %567, %add434, !dbg !4352
  store double %div435, double* %retval, align 8, !dbg !4353
  br label %return, !dbg !4353

if.end436:                                        ; preds = %if.end425
  br label %sw.epilog924, !dbg !4354

sw.bb437:                                         ; preds = %if.end225, %if.end225
  %571 = load i8*, i8** %expression.addr, align 8, !dbg !4355
  %call438 = call i32 @LocaleCompare(i8* %571, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0)), !dbg !4358
  %cmp439 = icmp eq i32 %call438, 0, !dbg !4359
  br i1 %cmp439, label %if.then441, label %if.end442, !dbg !4360

if.then441:                                       ; preds = %sw.bb437
  store double 1.000000e-15, double* %retval, align 8, !dbg !4361
  br label %return, !dbg !4361

if.end442:                                        ; preds = %sw.bb437
  %572 = load i8*, i8** %expression.addr, align 8, !dbg !4362
  %call443 = call i32 @LocaleNCompare(i8* %572, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i64 0, i64 0), i64 3), !dbg !4364
  %cmp444 = icmp eq i32 %call443, 0, !dbg !4365
  br i1 %cmp444, label %if.then446, label %if.end450, !dbg !4366

if.then446:                                       ; preds = %if.end442
  %573 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4367
  %574 = load i32, i32* %channel.addr, align 4, !dbg !4369
  %575 = load i64, i64* %x.addr, align 8, !dbg !4370
  %576 = load i64, i64* %y.addr, align 8, !dbg !4371
  %577 = load i8*, i8** %expression.addr, align 8, !dbg !4372
  %add.ptr447 = getelementptr inbounds i8, i8* %577, i64 3, !dbg !4373
  %578 = load double*, double** %beta.addr, align 8, !dbg !4374
  %579 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4375
  %call448 = call double @FxEvaluateSubexpression(%struct._FxInfo* %573, i32 %574, i64 %575, i64 %576, i8* %add.ptr447, double* %578, %struct._ExceptionInfo* %579), !dbg !4376
  store double %call448, double* %alpha, align 8, !dbg !4377
  %580 = load double, double* %alpha, align 8, !dbg !4378
  %call449 = call double @exp(double %580) #14, !dbg !4379
  store double %call449, double* %retval, align 8, !dbg !4380
  br label %return, !dbg !4380

if.end450:                                        ; preds = %if.end442
  %581 = load i8*, i8** %expression.addr, align 8, !dbg !4381
  %call451 = call i32 @LocaleCompare(i8* %581, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i64 0, i64 0)), !dbg !4383
  %cmp452 = icmp eq i32 %call451, 0, !dbg !4384
  br i1 %cmp452, label %if.then454, label %if.end455, !dbg !4385

if.then454:                                       ; preds = %if.end450
  store double 0x4005BF0A8B145769, double* %retval, align 8, !dbg !4386
  br label %return, !dbg !4386

if.end455:                                        ; preds = %if.end450
  br label %sw.epilog924, !dbg !4387

sw.bb456:                                         ; preds = %if.end225, %if.end225
  %582 = load i8*, i8** %expression.addr, align 8, !dbg !4388
  %call457 = call i32 @LocaleNCompare(i8* %582, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i64 5), !dbg !4391
  %cmp458 = icmp eq i32 %call457, 0, !dbg !4392
  br i1 %cmp458, label %if.then460, label %if.end463, !dbg !4393

if.then460:                                       ; preds = %sw.bb456
  %583 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4394
  %584 = load i32, i32* %channel.addr, align 4, !dbg !4396
  %585 = load i64, i64* %x.addr, align 8, !dbg !4397
  %586 = load i64, i64* %y.addr, align 8, !dbg !4398
  %587 = load i8*, i8** %expression.addr, align 8, !dbg !4399
  %add.ptr461 = getelementptr inbounds i8, i8* %587, i64 5, !dbg !4400
  %588 = load double*, double** %beta.addr, align 8, !dbg !4401
  %589 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4402
  %call462 = call double @FxEvaluateSubexpression(%struct._FxInfo* %583, i32 %584, i64 %585, i64 %586, i8* %add.ptr461, double* %588, %struct._ExceptionInfo* %589), !dbg !4403
  store double %call462, double* %alpha, align 8, !dbg !4404
  %590 = load double, double* %alpha, align 8, !dbg !4405
  %591 = call double @llvm.floor.f64(double %590), !dbg !4406
  store double %591, double* %retval, align 8, !dbg !4407
  br label %return, !dbg !4407

if.end463:                                        ; preds = %sw.bb456
  br label %sw.epilog924, !dbg !4408

sw.bb464:                                         ; preds = %if.end225, %if.end225
  %592 = load i8*, i8** %expression.addr, align 8, !dbg !4409
  %call465 = call i32 @LocaleNCompare(i8* %592, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0), i64 5), !dbg !4412
  %cmp466 = icmp eq i32 %call465, 0, !dbg !4413
  br i1 %cmp466, label %if.then468, label %if.end476, !dbg !4414

if.then468:                                       ; preds = %sw.bb464
  %593 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4415
  %594 = load i32, i32* %channel.addr, align 4, !dbg !4417
  %595 = load i64, i64* %x.addr, align 8, !dbg !4418
  %596 = load i64, i64* %y.addr, align 8, !dbg !4419
  %597 = load i8*, i8** %expression.addr, align 8, !dbg !4420
  %add.ptr469 = getelementptr inbounds i8, i8* %597, i64 5, !dbg !4421
  %598 = load double*, double** %beta.addr, align 8, !dbg !4422
  %599 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4423
  %call470 = call double @FxEvaluateSubexpression(%struct._FxInfo* %593, i32 %594, i64 %595, i64 %596, i8* %add.ptr469, double* %598, %struct._ExceptionInfo* %599), !dbg !4424
  store double %call470, double* %alpha, align 8, !dbg !4425
  %600 = load double, double* %alpha, align 8, !dbg !4426
  %fneg = fneg double %600, !dbg !4427
  %601 = load double, double* %alpha, align 8, !dbg !4428
  %mul471 = fmul double %fneg, %601, !dbg !4429
  %div472 = fdiv double %mul471, 2.000000e+00, !dbg !4430
  %call473 = call double @exp(double %div472) #14, !dbg !4431
  %call474 = call double @sqrt(double 0x401921FB54442D18) #14, !dbg !4432
  %div475 = fdiv double %call473, %call474, !dbg !4433
  store double %div475, double* %gamma, align 8, !dbg !4434
  %602 = load double, double* %gamma, align 8, !dbg !4435
  store double %602, double* %retval, align 8, !dbg !4436
  br label %return, !dbg !4436

if.end476:                                        ; preds = %sw.bb464
  %603 = load i8*, i8** %expression.addr, align 8, !dbg !4437
  %call477 = call i32 @LocaleNCompare(i8* %603, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i64 0, i64 0), i64 3), !dbg !4439
  %cmp478 = icmp eq i32 %call477, 0, !dbg !4440
  br i1 %cmp478, label %if.then480, label %if.end489, !dbg !4441

if.then480:                                       ; preds = %if.end476
  call void @llvm.dbg.declare(metadata i64* %gcd, metadata !4442, metadata !DIExpression()), !dbg !4444
  %604 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4445
  %605 = load i32, i32* %channel.addr, align 4, !dbg !4446
  %606 = load i64, i64* %x.addr, align 8, !dbg !4447
  %607 = load i64, i64* %y.addr, align 8, !dbg !4448
  %608 = load i8*, i8** %expression.addr, align 8, !dbg !4449
  %add.ptr481 = getelementptr inbounds i8, i8* %608, i64 3, !dbg !4450
  %609 = load double*, double** %beta.addr, align 8, !dbg !4451
  %610 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4452
  %call482 = call double @FxEvaluateSubexpression(%struct._FxInfo* %604, i32 %605, i64 %606, i64 %607, i8* %add.ptr481, double* %609, %struct._ExceptionInfo* %610), !dbg !4453
  store double %call482, double* %alpha, align 8, !dbg !4454
  %611 = load double, double* %alpha, align 8, !dbg !4455
  %add483 = fadd double %611, 5.000000e-01, !dbg !4456
  %conv484 = fptosi double %add483 to i64, !dbg !4457
  %612 = load double*, double** %beta.addr, align 8, !dbg !4458
  %613 = load double, double* %612, align 8, !dbg !4459
  %add485 = fadd double %613, 5.000000e-01, !dbg !4460
  %conv486 = fptosi double %add485 to i64, !dbg !4461
  %call487 = call i64 @FxGCD(i64 %conv484, i64 %conv486), !dbg !4462
  store i64 %call487, i64* %gcd, align 8, !dbg !4463
  %614 = load i64, i64* %gcd, align 8, !dbg !4464
  %conv488 = sitofp i64 %614 to double, !dbg !4465
  store double %conv488, double* %retval, align 8, !dbg !4466
  br label %return, !dbg !4466

if.end489:                                        ; preds = %if.end476
  %615 = load i8*, i8** %expression.addr, align 8, !dbg !4467
  %call490 = call i32 @LocaleCompare(i8* %615, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i64 0, i64 0)), !dbg !4469
  %cmp491 = icmp eq i32 %call490, 0, !dbg !4470
  br i1 %cmp491, label %if.then493, label %if.end495, !dbg !4471

if.then493:                                       ; preds = %if.end489
  %616 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4472
  %617 = load i32, i32* %channel.addr, align 4, !dbg !4473
  %618 = load i64, i64* %x.addr, align 8, !dbg !4474
  %619 = load i64, i64* %y.addr, align 8, !dbg !4475
  %620 = load i8*, i8** %expression.addr, align 8, !dbg !4476
  %621 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4477
  %call494 = call double @FxGetSymbol(%struct._FxInfo* %616, i32 %617, i64 %618, i64 %619, i8* %620, %struct._ExceptionInfo* %621), !dbg !4478
  store double %call494, double* %retval, align 8, !dbg !4479
  br label %return, !dbg !4479

if.end495:                                        ; preds = %if.end489
  br label %sw.epilog924, !dbg !4480

sw.bb496:                                         ; preds = %if.end225, %if.end225
  %622 = load i8*, i8** %expression.addr, align 8, !dbg !4481
  %call497 = call i32 @LocaleCompare(i8* %622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i64 0, i64 0)), !dbg !4484
  %cmp498 = icmp eq i32 %call497, 0, !dbg !4485
  br i1 %cmp498, label %if.then500, label %if.end502, !dbg !4486

if.then500:                                       ; preds = %sw.bb496
  %623 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4487
  %624 = load i32, i32* %channel.addr, align 4, !dbg !4488
  %625 = load i64, i64* %x.addr, align 8, !dbg !4489
  %626 = load i64, i64* %y.addr, align 8, !dbg !4490
  %627 = load i8*, i8** %expression.addr, align 8, !dbg !4491
  %628 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4492
  %call501 = call double @FxGetSymbol(%struct._FxInfo* %623, i32 %624, i64 %625, i64 %626, i8* %627, %struct._ExceptionInfo* %628), !dbg !4493
  store double %call501, double* %retval, align 8, !dbg !4494
  br label %return, !dbg !4494

if.end502:                                        ; preds = %sw.bb496
  %629 = load i8*, i8** %expression.addr, align 8, !dbg !4495
  %call503 = call i32 @LocaleCompare(i8* %629, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)), !dbg !4497
  %cmp504 = icmp eq i32 %call503, 0, !dbg !4498
  br i1 %cmp504, label %if.then506, label %if.end508, !dbg !4499

if.then506:                                       ; preds = %if.end502
  %630 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4500
  %631 = load i32, i32* %channel.addr, align 4, !dbg !4501
  %632 = load i64, i64* %x.addr, align 8, !dbg !4502
  %633 = load i64, i64* %y.addr, align 8, !dbg !4503
  %634 = load i8*, i8** %expression.addr, align 8, !dbg !4504
  %635 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4505
  %call507 = call double @FxGetSymbol(%struct._FxInfo* %630, i32 %631, i64 %632, i64 %633, i8* %634, %struct._ExceptionInfo* %635), !dbg !4506
  store double %call507, double* %retval, align 8, !dbg !4507
  br label %return, !dbg !4507

if.end508:                                        ; preds = %if.end502
  %636 = load i8*, i8** %expression.addr, align 8, !dbg !4508
  %call509 = call i32 @LocaleNCompare(i8* %636, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0), i64 5), !dbg !4510
  %cmp510 = icmp eq i32 %call509, 0, !dbg !4511
  br i1 %cmp510, label %if.then512, label %if.end516, !dbg !4512

if.then512:                                       ; preds = %if.end508
  %637 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4513
  %638 = load i32, i32* %channel.addr, align 4, !dbg !4515
  %639 = load i64, i64* %x.addr, align 8, !dbg !4516
  %640 = load i64, i64* %y.addr, align 8, !dbg !4517
  %641 = load i8*, i8** %expression.addr, align 8, !dbg !4518
  %add.ptr513 = getelementptr inbounds i8, i8* %641, i64 5, !dbg !4519
  %642 = load double*, double** %beta.addr, align 8, !dbg !4520
  %643 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4521
  %call514 = call double @FxEvaluateSubexpression(%struct._FxInfo* %637, i32 %638, i64 %639, i64 %640, i8* %add.ptr513, double* %642, %struct._ExceptionInfo* %643), !dbg !4522
  store double %call514, double* %alpha, align 8, !dbg !4523
  %644 = load double, double* %alpha, align 8, !dbg !4524
  %645 = load double*, double** %beta.addr, align 8, !dbg !4525
  %646 = load double, double* %645, align 8, !dbg !4526
  %call515 = call double @hypot(double %644, double %646) #14, !dbg !4527
  store double %call515, double* %retval, align 8, !dbg !4528
  br label %return, !dbg !4528

if.end516:                                        ; preds = %if.end508
  br label %sw.epilog924, !dbg !4529

sw.bb517:                                         ; preds = %if.end225, %if.end225
  %647 = load i8*, i8** %expression.addr, align 8, !dbg !4530
  %call518 = call i32 @LocaleCompare(i8* %647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i64 0, i64 0)), !dbg !4533
  %cmp519 = icmp eq i32 %call518, 0, !dbg !4534
  br i1 %cmp519, label %if.then521, label %if.end523, !dbg !4535

if.then521:                                       ; preds = %sw.bb517
  %648 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4536
  %649 = load i32, i32* %channel.addr, align 4, !dbg !4537
  %650 = load i64, i64* %x.addr, align 8, !dbg !4538
  %651 = load i64, i64* %y.addr, align 8, !dbg !4539
  %652 = load i8*, i8** %expression.addr, align 8, !dbg !4540
  %653 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4541
  %call522 = call double @FxGetSymbol(%struct._FxInfo* %648, i32 %649, i64 %650, i64 %651, i8* %652, %struct._ExceptionInfo* %653), !dbg !4542
  store double %call522, double* %retval, align 8, !dbg !4543
  br label %return, !dbg !4543

if.end523:                                        ; preds = %sw.bb517
  br label %sw.epilog924, !dbg !4544

sw.bb524:                                         ; preds = %if.end225, %if.end225
  %654 = load i8*, i8** %expression.addr, align 8, !dbg !4545
  %call525 = call i32 @LocaleCompare(i8* %654, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i64 0, i64 0)), !dbg !4548
  %cmp526 = icmp eq i32 %call525, 0, !dbg !4549
  br i1 %cmp526, label %if.then528, label %if.end530, !dbg !4550

if.then528:                                       ; preds = %sw.bb524
  %655 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4551
  %656 = load i32, i32* %channel.addr, align 4, !dbg !4552
  %657 = load i64, i64* %x.addr, align 8, !dbg !4553
  %658 = load i64, i64* %y.addr, align 8, !dbg !4554
  %659 = load i8*, i8** %expression.addr, align 8, !dbg !4555
  %660 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4556
  %call529 = call double @FxGetSymbol(%struct._FxInfo* %655, i32 %656, i64 %657, i64 %658, i8* %659, %struct._ExceptionInfo* %660), !dbg !4557
  store double %call529, double* %retval, align 8, !dbg !4558
  br label %return, !dbg !4558

if.end530:                                        ; preds = %sw.bb524
  %661 = load i8*, i8** %expression.addr, align 8, !dbg !4559
  %call531 = call i32 @LocaleNCompare(i8* %661, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), i64 3), !dbg !4561
  %cmp532 = icmp eq i32 %call531, 0, !dbg !4562
  br i1 %cmp532, label %if.then534, label %if.end537, !dbg !4563

if.then534:                                       ; preds = %if.end530
  %662 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4564
  %663 = load i32, i32* %channel.addr, align 4, !dbg !4566
  %664 = load i64, i64* %x.addr, align 8, !dbg !4567
  %665 = load i64, i64* %y.addr, align 8, !dbg !4568
  %666 = load i8*, i8** %expression.addr, align 8, !dbg !4569
  %add.ptr535 = getelementptr inbounds i8, i8* %666, i64 3, !dbg !4570
  %667 = load double*, double** %beta.addr, align 8, !dbg !4571
  %668 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4572
  %call536 = call double @FxEvaluateSubexpression(%struct._FxInfo* %662, i32 %663, i64 %664, i64 %665, i8* %add.ptr535, double* %667, %struct._ExceptionInfo* %668), !dbg !4573
  store double %call536, double* %alpha, align 8, !dbg !4574
  %669 = load double, double* %alpha, align 8, !dbg !4575
  %670 = call double @llvm.floor.f64(double %669), !dbg !4576
  store double %670, double* %retval, align 8, !dbg !4577
  br label %return, !dbg !4577

if.end537:                                        ; preds = %if.end530
  %671 = load i8*, i8** %expression.addr, align 8, !dbg !4578
  %call538 = call i32 @LocaleNCompare(i8* %671, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), i64 5), !dbg !4580
  %cmp539 = icmp eq i32 %call538, 0, !dbg !4581
  br i1 %cmp539, label %if.then541, label %if.end547, !dbg !4582

if.then541:                                       ; preds = %if.end537
  %672 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4583
  %673 = load i32, i32* %channel.addr, align 4, !dbg !4585
  %674 = load i64, i64* %x.addr, align 8, !dbg !4586
  %675 = load i64, i64* %y.addr, align 8, !dbg !4587
  %676 = load i8*, i8** %expression.addr, align 8, !dbg !4588
  %add.ptr542 = getelementptr inbounds i8, i8* %676, i64 5, !dbg !4589
  %677 = load double*, double** %beta.addr, align 8, !dbg !4590
  %678 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4591
  %call543 = call double @FxEvaluateSubexpression(%struct._FxInfo* %672, i32 %673, i64 %674, i64 %675, i8* %add.ptr542, double* %677, %struct._ExceptionInfo* %678), !dbg !4592
  store double %call543, double* %alpha, align 8, !dbg !4593
  %679 = load double, double* %alpha, align 8, !dbg !4594
  %cmp544 = fcmp uno double %679, %679, !dbg !4594
  %lnot = xor i1 %cmp544, true, !dbg !4595
  %lnot545 = xor i1 %lnot, true, !dbg !4596
  %lnot.ext = zext i1 %lnot545 to i32, !dbg !4596
  %conv546 = sitofp i32 %lnot.ext to double, !dbg !4597
  store double %conv546, double* %retval, align 8, !dbg !4598
  br label %return, !dbg !4598

if.end547:                                        ; preds = %if.end537
  %680 = load i8*, i8** %expression.addr, align 8, !dbg !4599
  %call548 = call i32 @LocaleCompare(i8* %680, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0)), !dbg !4601
  %cmp549 = icmp eq i32 %call548, 0, !dbg !4602
  br i1 %cmp549, label %if.then551, label %if.end553, !dbg !4603

if.then551:                                       ; preds = %if.end547
  %681 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4604
  %682 = load i32, i32* %channel.addr, align 4, !dbg !4605
  %683 = load i64, i64* %x.addr, align 8, !dbg !4606
  %684 = load i64, i64* %y.addr, align 8, !dbg !4607
  %685 = load i8*, i8** %expression.addr, align 8, !dbg !4608
  %686 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4609
  %call552 = call double @FxGetSymbol(%struct._FxInfo* %681, i32 %682, i64 %683, i64 %684, i8* %685, %struct._ExceptionInfo* %686), !dbg !4610
  store double %call552, double* %retval, align 8, !dbg !4611
  br label %return, !dbg !4611

if.end553:                                        ; preds = %if.end547
  br label %sw.epilog924, !dbg !4612

sw.bb554:                                         ; preds = %if.end225, %if.end225
  %687 = load i8*, i8** %expression.addr, align 8, !dbg !4613
  %call555 = call i32 @LocaleCompare(i8* %687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i64 0, i64 0)), !dbg !4616
  %cmp556 = icmp eq i32 %call555, 0, !dbg !4617
  br i1 %cmp556, label %if.then558, label %if.end560, !dbg !4618

if.then558:                                       ; preds = %sw.bb554
  %688 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4619
  %689 = load i32, i32* %channel.addr, align 4, !dbg !4620
  %690 = load i64, i64* %x.addr, align 8, !dbg !4621
  %691 = load i64, i64* %y.addr, align 8, !dbg !4622
  %692 = load i8*, i8** %expression.addr, align 8, !dbg !4623
  %693 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4624
  %call559 = call double @FxGetSymbol(%struct._FxInfo* %688, i32 %689, i64 %690, i64 %691, i8* %692, %struct._ExceptionInfo* %693), !dbg !4625
  store double %call559, double* %retval, align 8, !dbg !4626
  br label %return, !dbg !4626

if.end560:                                        ; preds = %sw.bb554
  %694 = load i8*, i8** %expression.addr, align 8, !dbg !4627
  %call561 = call i32 @LocaleNCompare(i8* %694, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i64 2), !dbg !4629
  %cmp562 = icmp eq i32 %call561, 0, !dbg !4630
  br i1 %cmp562, label %if.then564, label %if.end568, !dbg !4631

if.then564:                                       ; preds = %if.end560
  %695 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4632
  %696 = load i32, i32* %channel.addr, align 4, !dbg !4634
  %697 = load i64, i64* %x.addr, align 8, !dbg !4635
  %698 = load i64, i64* %y.addr, align 8, !dbg !4636
  %699 = load i8*, i8** %expression.addr, align 8, !dbg !4637
  %add.ptr565 = getelementptr inbounds i8, i8* %699, i64 2, !dbg !4638
  %700 = load double*, double** %beta.addr, align 8, !dbg !4639
  %701 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4640
  %call566 = call double @FxEvaluateSubexpression(%struct._FxInfo* %695, i32 %696, i64 %697, i64 %698, i8* %add.ptr565, double* %700, %struct._ExceptionInfo* %701), !dbg !4641
  store double %call566, double* %alpha, align 8, !dbg !4642
  %702 = load double, double* %alpha, align 8, !dbg !4643
  %call567 = call double @j0(double %702) #14, !dbg !4644
  store double %call567, double* %retval, align 8, !dbg !4645
  br label %return, !dbg !4645

if.end568:                                        ; preds = %if.end560
  %703 = load i8*, i8** %expression.addr, align 8, !dbg !4646
  %call569 = call i32 @LocaleNCompare(i8* %703, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i64 0, i64 0), i64 2), !dbg !4648
  %cmp570 = icmp eq i32 %call569, 0, !dbg !4649
  br i1 %cmp570, label %if.then572, label %if.end576, !dbg !4650

if.then572:                                       ; preds = %if.end568
  %704 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4651
  %705 = load i32, i32* %channel.addr, align 4, !dbg !4653
  %706 = load i64, i64* %x.addr, align 8, !dbg !4654
  %707 = load i64, i64* %y.addr, align 8, !dbg !4655
  %708 = load i8*, i8** %expression.addr, align 8, !dbg !4656
  %add.ptr573 = getelementptr inbounds i8, i8* %708, i64 2, !dbg !4657
  %709 = load double*, double** %beta.addr, align 8, !dbg !4658
  %710 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4659
  %call574 = call double @FxEvaluateSubexpression(%struct._FxInfo* %704, i32 %705, i64 %706, i64 %707, i8* %add.ptr573, double* %709, %struct._ExceptionInfo* %710), !dbg !4660
  store double %call574, double* %alpha, align 8, !dbg !4661
  %711 = load double, double* %alpha, align 8, !dbg !4662
  %call575 = call double @j1(double %711) #14, !dbg !4663
  store double %call575, double* %retval, align 8, !dbg !4664
  br label %return, !dbg !4664

if.end576:                                        ; preds = %if.end568
  %712 = load i8*, i8** %expression.addr, align 8, !dbg !4665
  %call577 = call i32 @LocaleNCompare(i8* %712, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), i64 4), !dbg !4667
  %cmp578 = icmp eq i32 %call577, 0, !dbg !4668
  br i1 %cmp578, label %if.then580, label %if.end592, !dbg !4669

if.then580:                                       ; preds = %if.end576
  %713 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4670
  %714 = load i32, i32* %channel.addr, align 4, !dbg !4672
  %715 = load i64, i64* %x.addr, align 8, !dbg !4673
  %716 = load i64, i64* %y.addr, align 8, !dbg !4674
  %717 = load i8*, i8** %expression.addr, align 8, !dbg !4675
  %add.ptr581 = getelementptr inbounds i8, i8* %717, i64 4, !dbg !4676
  %718 = load double*, double** %beta.addr, align 8, !dbg !4677
  %719 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4678
  %call582 = call double @FxEvaluateSubexpression(%struct._FxInfo* %713, i32 %714, i64 %715, i64 %716, i8* %add.ptr581, double* %718, %struct._ExceptionInfo* %719), !dbg !4679
  store double %call582, double* %alpha, align 8, !dbg !4680
  %720 = load double, double* %alpha, align 8, !dbg !4681
  %cmp583 = fcmp oeq double %720, 0.000000e+00, !dbg !4683
  br i1 %cmp583, label %if.then585, label %if.end586, !dbg !4684

if.then585:                                       ; preds = %if.then580
  store double 1.000000e+00, double* %retval, align 8, !dbg !4685
  br label %return, !dbg !4685

if.end586:                                        ; preds = %if.then580
  %721 = load double, double* %alpha, align 8, !dbg !4686
  %mul587 = fmul double 0x400921FB54442D18, %721, !dbg !4687
  %call588 = call double @j1(double %mul587) #14, !dbg !4688
  %mul589 = fmul double 2.000000e+00, %call588, !dbg !4689
  %722 = load double, double* %alpha, align 8, !dbg !4690
  %mul590 = fmul double 0x400921FB54442D18, %722, !dbg !4691
  %div591 = fdiv double %mul589, %mul590, !dbg !4692
  store double %div591, double* %gamma, align 8, !dbg !4693
  %723 = load double, double* %gamma, align 8, !dbg !4694
  store double %723, double* %retval, align 8, !dbg !4695
  br label %return, !dbg !4695

if.end592:                                        ; preds = %if.end576
  br label %sw.epilog924, !dbg !4696

sw.bb593:                                         ; preds = %if.end225, %if.end225
  %724 = load i8*, i8** %expression.addr, align 8, !dbg !4697
  %call594 = call i32 @LocaleNCompare(i8* %724, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i64 0, i64 0), i64 2), !dbg !4700
  %cmp595 = icmp eq i32 %call594, 0, !dbg !4701
  br i1 %cmp595, label %if.then597, label %if.end601, !dbg !4702

if.then597:                                       ; preds = %sw.bb593
  %725 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4703
  %726 = load i32, i32* %channel.addr, align 4, !dbg !4705
  %727 = load i64, i64* %x.addr, align 8, !dbg !4706
  %728 = load i64, i64* %y.addr, align 8, !dbg !4707
  %729 = load i8*, i8** %expression.addr, align 8, !dbg !4708
  %add.ptr598 = getelementptr inbounds i8, i8* %729, i64 2, !dbg !4709
  %730 = load double*, double** %beta.addr, align 8, !dbg !4710
  %731 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4711
  %call599 = call double @FxEvaluateSubexpression(%struct._FxInfo* %725, i32 %726, i64 %727, i64 %728, i8* %add.ptr598, double* %730, %struct._ExceptionInfo* %731), !dbg !4712
  store double %call599, double* %alpha, align 8, !dbg !4713
  %732 = load double, double* %alpha, align 8, !dbg !4714
  %call600 = call double @log(double %732) #14, !dbg !4715
  store double %call600, double* %retval, align 8, !dbg !4716
  br label %return, !dbg !4716

if.end601:                                        ; preds = %sw.bb593
  %733 = load i8*, i8** %expression.addr, align 8, !dbg !4717
  %call602 = call i32 @LocaleNCompare(i8* %733, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), i64 6), !dbg !4719
  %cmp603 = icmp eq i32 %call602, 0, !dbg !4720
  br i1 %cmp603, label %if.then605, label %if.end611, !dbg !4721

if.then605:                                       ; preds = %if.end601
  %734 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4722
  %735 = load i32, i32* %channel.addr, align 4, !dbg !4724
  %736 = load i64, i64* %x.addr, align 8, !dbg !4725
  %737 = load i64, i64* %y.addr, align 8, !dbg !4726
  %738 = load i8*, i8** %expression.addr, align 8, !dbg !4727
  %add.ptr606 = getelementptr inbounds i8, i8* %738, i64 6, !dbg !4728
  %739 = load double*, double** %beta.addr, align 8, !dbg !4729
  %740 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4730
  %call607 = call double @FxEvaluateSubexpression(%struct._FxInfo* %734, i32 %735, i64 %736, i64 %737, i8* %add.ptr606, double* %739, %struct._ExceptionInfo* %740), !dbg !4731
  store double %call607, double* %alpha, align 8, !dbg !4732
  %741 = load double, double* %alpha, align 8, !dbg !4733
  %call608 = call double @log10(double %741) #14, !dbg !4734
  %call609 = call double @log10(double 2.000000e+00) #14, !dbg !4735
  %div610 = fdiv double %call608, %call609, !dbg !4736
  store double %div610, double* %retval, align 8, !dbg !4737
  br label %return, !dbg !4737

if.end611:                                        ; preds = %if.end601
  %742 = load i8*, i8** %expression.addr, align 8, !dbg !4738
  %call612 = call i32 @LocaleNCompare(i8* %742, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0), i64 3), !dbg !4740
  %cmp613 = icmp eq i32 %call612, 0, !dbg !4741
  br i1 %cmp613, label %if.then615, label %if.end619, !dbg !4742

if.then615:                                       ; preds = %if.end611
  %743 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4743
  %744 = load i32, i32* %channel.addr, align 4, !dbg !4745
  %745 = load i64, i64* %x.addr, align 8, !dbg !4746
  %746 = load i64, i64* %y.addr, align 8, !dbg !4747
  %747 = load i8*, i8** %expression.addr, align 8, !dbg !4748
  %add.ptr616 = getelementptr inbounds i8, i8* %747, i64 3, !dbg !4749
  %748 = load double*, double** %beta.addr, align 8, !dbg !4750
  %749 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4751
  %call617 = call double @FxEvaluateSubexpression(%struct._FxInfo* %743, i32 %744, i64 %745, i64 %746, i8* %add.ptr616, double* %748, %struct._ExceptionInfo* %749), !dbg !4752
  store double %call617, double* %alpha, align 8, !dbg !4753
  %750 = load double, double* %alpha, align 8, !dbg !4754
  %call618 = call double @log10(double %750) #14, !dbg !4755
  store double %call618, double* %retval, align 8, !dbg !4756
  br label %return, !dbg !4756

if.end619:                                        ; preds = %if.end611
  %751 = load i8*, i8** %expression.addr, align 8, !dbg !4757
  %call620 = call i32 @LocaleCompare(i8* %751, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i64 0, i64 0)), !dbg !4759
  %cmp621 = icmp eq i32 %call620, 0, !dbg !4760
  br i1 %cmp621, label %if.then623, label %if.end625, !dbg !4761

if.then623:                                       ; preds = %if.end619
  %752 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4762
  %753 = load i32, i32* %channel.addr, align 4, !dbg !4763
  %754 = load i64, i64* %x.addr, align 8, !dbg !4764
  %755 = load i64, i64* %y.addr, align 8, !dbg !4765
  %756 = load i8*, i8** %expression.addr, align 8, !dbg !4766
  %757 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4767
  %call624 = call double @FxGetSymbol(%struct._FxInfo* %752, i32 %753, i64 %754, i64 %755, i8* %756, %struct._ExceptionInfo* %757), !dbg !4768
  store double %call624, double* %retval, align 8, !dbg !4769
  br label %return, !dbg !4769

if.end625:                                        ; preds = %if.end619
  br label %sw.epilog924, !dbg !4770

sw.bb626:                                         ; preds = %if.end225, %if.end225
  %758 = load i8*, i8** %expression.addr, align 8, !dbg !4771
  %call627 = call i32 @LocaleCompare(i8* %758, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0)), !dbg !4774
  %cmp628 = icmp eq i32 %call627, 0, !dbg !4775
  br i1 %cmp628, label %if.then630, label %if.end631, !dbg !4776

if.then630:                                       ; preds = %sw.bb626
  store double 6.553500e+04, double* %retval, align 8, !dbg !4777
  br label %return, !dbg !4777

if.end631:                                        ; preds = %sw.bb626
  %759 = load i8*, i8** %expression.addr, align 8, !dbg !4778
  %call632 = call i32 @LocaleNCompare(i8* %759, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), i64 6), !dbg !4780
  %cmp633 = icmp eq i32 %call632, 0, !dbg !4781
  br i1 %cmp633, label %if.then635, label %if.end636, !dbg !4782

if.then635:                                       ; preds = %if.end631
  br label %sw.epilog924, !dbg !4783

if.end636:                                        ; preds = %if.end631
  %760 = load i8*, i8** %expression.addr, align 8, !dbg !4784
  %call637 = call i32 @LocaleNCompare(i8* %760, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0), i64 3), !dbg !4786
  %cmp638 = icmp eq i32 %call637, 0, !dbg !4787
  br i1 %cmp638, label %if.then640, label %if.end646, !dbg !4788

if.then640:                                       ; preds = %if.end636
  %761 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4789
  %762 = load i32, i32* %channel.addr, align 4, !dbg !4791
  %763 = load i64, i64* %x.addr, align 8, !dbg !4792
  %764 = load i64, i64* %y.addr, align 8, !dbg !4793
  %765 = load i8*, i8** %expression.addr, align 8, !dbg !4794
  %add.ptr641 = getelementptr inbounds i8, i8* %765, i64 3, !dbg !4795
  %766 = load double*, double** %beta.addr, align 8, !dbg !4796
  %767 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4797
  %call642 = call double @FxEvaluateSubexpression(%struct._FxInfo* %761, i32 %762, i64 %763, i64 %764, i8* %add.ptr641, double* %766, %struct._ExceptionInfo* %767), !dbg !4798
  store double %call642, double* %alpha, align 8, !dbg !4799
  %768 = load double, double* %alpha, align 8, !dbg !4800
  %769 = load double*, double** %beta.addr, align 8, !dbg !4801
  %770 = load double, double* %769, align 8, !dbg !4802
  %cmp643 = fcmp ogt double %768, %770, !dbg !4803
  br i1 %cmp643, label %cond.true, label %cond.false, !dbg !4800

cond.true:                                        ; preds = %if.then640
  %771 = load double, double* %alpha, align 8, !dbg !4804
  br label %cond.end, !dbg !4800

cond.false:                                       ; preds = %if.then640
  %772 = load double*, double** %beta.addr, align 8, !dbg !4805
  %773 = load double, double* %772, align 8, !dbg !4806
  br label %cond.end, !dbg !4800

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond645 = phi double [ %771, %cond.true ], [ %773, %cond.false ], !dbg !4800
  store double %cond645, double* %retval, align 8, !dbg !4807
  br label %return, !dbg !4807

if.end646:                                        ; preds = %if.end636
  %774 = load i8*, i8** %expression.addr, align 8, !dbg !4808
  %call647 = call i32 @LocaleNCompare(i8* %774, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0), i64 6), !dbg !4810
  %cmp648 = icmp eq i32 %call647, 0, !dbg !4811
  br i1 %cmp648, label %if.then650, label %if.end651, !dbg !4812

if.then650:                                       ; preds = %if.end646
  br label %sw.epilog924, !dbg !4813

if.end651:                                        ; preds = %if.end646
  %775 = load i8*, i8** %expression.addr, align 8, !dbg !4814
  %call652 = call i32 @LocaleNCompare(i8* %775, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i64 0, i64 0), i64 3), !dbg !4816
  %cmp653 = icmp eq i32 %call652, 0, !dbg !4817
  br i1 %cmp653, label %if.then655, label %if.end664, !dbg !4818

if.then655:                                       ; preds = %if.end651
  %776 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4819
  %777 = load i32, i32* %channel.addr, align 4, !dbg !4821
  %778 = load i64, i64* %x.addr, align 8, !dbg !4822
  %779 = load i64, i64* %y.addr, align 8, !dbg !4823
  %780 = load i8*, i8** %expression.addr, align 8, !dbg !4824
  %add.ptr656 = getelementptr inbounds i8, i8* %780, i64 3, !dbg !4825
  %781 = load double*, double** %beta.addr, align 8, !dbg !4826
  %782 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4827
  %call657 = call double @FxEvaluateSubexpression(%struct._FxInfo* %776, i32 %777, i64 %778, i64 %779, i8* %add.ptr656, double* %781, %struct._ExceptionInfo* %782), !dbg !4828
  store double %call657, double* %alpha, align 8, !dbg !4829
  %783 = load double, double* %alpha, align 8, !dbg !4830
  %784 = load double*, double** %beta.addr, align 8, !dbg !4831
  %785 = load double, double* %784, align 8, !dbg !4832
  %cmp658 = fcmp olt double %783, %785, !dbg !4833
  br i1 %cmp658, label %cond.true660, label %cond.false661, !dbg !4830

cond.true660:                                     ; preds = %if.then655
  %786 = load double, double* %alpha, align 8, !dbg !4834
  br label %cond.end662, !dbg !4830

cond.false661:                                    ; preds = %if.then655
  %787 = load double*, double** %beta.addr, align 8, !dbg !4835
  %788 = load double, double* %787, align 8, !dbg !4836
  br label %cond.end662, !dbg !4830

cond.end662:                                      ; preds = %cond.false661, %cond.true660
  %cond663 = phi double [ %786, %cond.true660 ], [ %788, %cond.false661 ], !dbg !4830
  store double %cond663, double* %retval, align 8, !dbg !4837
  br label %return, !dbg !4837

if.end664:                                        ; preds = %if.end651
  %789 = load i8*, i8** %expression.addr, align 8, !dbg !4838
  %call665 = call i32 @LocaleNCompare(i8* %789, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i64 3), !dbg !4840
  %cmp666 = icmp eq i32 %call665, 0, !dbg !4841
  br i1 %cmp666, label %if.then668, label %if.end674, !dbg !4842

if.then668:                                       ; preds = %if.end664
  %790 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4843
  %791 = load i32, i32* %channel.addr, align 4, !dbg !4845
  %792 = load i64, i64* %x.addr, align 8, !dbg !4846
  %793 = load i64, i64* %y.addr, align 8, !dbg !4847
  %794 = load i8*, i8** %expression.addr, align 8, !dbg !4848
  %add.ptr669 = getelementptr inbounds i8, i8* %794, i64 3, !dbg !4849
  %795 = load double*, double** %beta.addr, align 8, !dbg !4850
  %796 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4851
  %call670 = call double @FxEvaluateSubexpression(%struct._FxInfo* %790, i32 %791, i64 %792, i64 %793, i8* %add.ptr669, double* %795, %struct._ExceptionInfo* %796), !dbg !4852
  store double %call670, double* %alpha, align 8, !dbg !4853
  %797 = load double, double* %alpha, align 8, !dbg !4854
  %798 = load double, double* %alpha, align 8, !dbg !4855
  %799 = load double*, double** %beta.addr, align 8, !dbg !4856
  %800 = load double, double* %799, align 8, !dbg !4857
  %div671 = fdiv double %798, %800, !dbg !4858
  %801 = call double @llvm.floor.f64(double %div671), !dbg !4859
  %802 = load double*, double** %beta.addr, align 8, !dbg !4860
  %803 = load double, double* %802, align 8, !dbg !4861
  %mul672 = fmul double %801, %803, !dbg !4862
  %sub673 = fsub double %797, %mul672, !dbg !4863
  store double %sub673, double* %gamma, align 8, !dbg !4864
  %804 = load double, double* %gamma, align 8, !dbg !4865
  store double %804, double* %retval, align 8, !dbg !4866
  br label %return, !dbg !4866

if.end674:                                        ; preds = %if.end664
  %805 = load i8*, i8** %expression.addr, align 8, !dbg !4867
  %call675 = call i32 @LocaleCompare(i8* %805, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i64 0, i64 0)), !dbg !4869
  %cmp676 = icmp eq i32 %call675, 0, !dbg !4870
  br i1 %cmp676, label %if.then678, label %if.end680, !dbg !4871

if.then678:                                       ; preds = %if.end674
  %806 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4872
  %807 = load i32, i32* %channel.addr, align 4, !dbg !4873
  %808 = load i64, i64* %x.addr, align 8, !dbg !4874
  %809 = load i64, i64* %y.addr, align 8, !dbg !4875
  %810 = load i8*, i8** %expression.addr, align 8, !dbg !4876
  %811 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4877
  %call679 = call double @FxGetSymbol(%struct._FxInfo* %806, i32 %807, i64 %808, i64 %809, i8* %810, %struct._ExceptionInfo* %811), !dbg !4878
  store double %call679, double* %retval, align 8, !dbg !4879
  br label %return, !dbg !4879

if.end680:                                        ; preds = %if.end674
  br label %sw.epilog924, !dbg !4880

sw.bb681:                                         ; preds = %if.end225, %if.end225
  %812 = load i8*, i8** %expression.addr, align 8, !dbg !4881
  %call682 = call i32 @LocaleNCompare(i8* %812, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i64 0, i64 0), i64 3), !dbg !4884
  %cmp683 = icmp eq i32 %call682, 0, !dbg !4885
  br i1 %cmp683, label %if.then685, label %if.end691, !dbg !4886

if.then685:                                       ; preds = %sw.bb681
  %813 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4887
  %814 = load i32, i32* %channel.addr, align 4, !dbg !4889
  %815 = load i64, i64* %x.addr, align 8, !dbg !4890
  %816 = load i64, i64* %y.addr, align 8, !dbg !4891
  %817 = load i8*, i8** %expression.addr, align 8, !dbg !4892
  %add.ptr686 = getelementptr inbounds i8, i8* %817, i64 3, !dbg !4893
  %818 = load double*, double** %beta.addr, align 8, !dbg !4894
  %819 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4895
  %call687 = call double @FxEvaluateSubexpression(%struct._FxInfo* %813, i32 %814, i64 %815, i64 %816, i8* %add.ptr686, double* %818, %struct._ExceptionInfo* %819), !dbg !4896
  store double %call687, double* %alpha, align 8, !dbg !4897
  %820 = load double, double* %alpha, align 8, !dbg !4898
  %cmp688 = fcmp olt double %820, 1.000000e-15, !dbg !4899
  %conv689 = zext i1 %cmp688 to i32, !dbg !4899
  %conv690 = sitofp i32 %conv689 to double, !dbg !4900
  store double %conv690, double* %retval, align 8, !dbg !4901
  br label %return, !dbg !4901

if.end691:                                        ; preds = %sw.bb681
  %821 = load i8*, i8** %expression.addr, align 8, !dbg !4902
  %call692 = call i32 @LocaleCompare(i8* %821, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)), !dbg !4904
  %cmp693 = icmp eq i32 %call692, 0, !dbg !4905
  br i1 %cmp693, label %if.then695, label %if.end697, !dbg !4906

if.then695:                                       ; preds = %if.end691
  %822 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4907
  %823 = load i32, i32* %channel.addr, align 4, !dbg !4908
  %824 = load i64, i64* %x.addr, align 8, !dbg !4909
  %825 = load i64, i64* %y.addr, align 8, !dbg !4910
  %826 = load i8*, i8** %expression.addr, align 8, !dbg !4911
  %827 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4912
  %call696 = call double @FxGetSymbol(%struct._FxInfo* %822, i32 %823, i64 %824, i64 %825, i8* %826, %struct._ExceptionInfo* %827), !dbg !4913
  store double %call696, double* %retval, align 8, !dbg !4914
  br label %return, !dbg !4914

if.end697:                                        ; preds = %if.end691
  br label %sw.epilog924, !dbg !4915

sw.bb698:                                         ; preds = %if.end225, %if.end225
  %828 = load i8*, i8** %expression.addr, align 8, !dbg !4916
  %call699 = call i32 @LocaleCompare(i8* %828, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0)), !dbg !4919
  %cmp700 = icmp eq i32 %call699, 0, !dbg !4920
  br i1 %cmp700, label %if.then702, label %if.end703, !dbg !4921

if.then702:                                       ; preds = %sw.bb698
  store double 1.000000e+00, double* %retval, align 8, !dbg !4922
  br label %return, !dbg !4922

if.end703:                                        ; preds = %sw.bb698
  %829 = load i8*, i8** %expression.addr, align 8, !dbg !4923
  %call704 = call i32 @LocaleCompare(i8* %829, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0)), !dbg !4925
  %cmp705 = icmp eq i32 %call704, 0, !dbg !4926
  br i1 %cmp705, label %if.then707, label %if.end709, !dbg !4927

if.then707:                                       ; preds = %if.end703
  %830 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4928
  %831 = load i32, i32* %channel.addr, align 4, !dbg !4929
  %832 = load i64, i64* %x.addr, align 8, !dbg !4930
  %833 = load i64, i64* %y.addr, align 8, !dbg !4931
  %834 = load i8*, i8** %expression.addr, align 8, !dbg !4932
  %835 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4933
  %call708 = call double @FxGetSymbol(%struct._FxInfo* %830, i32 %831, i64 %832, i64 %833, i8* %834, %struct._ExceptionInfo* %835), !dbg !4934
  store double %call708, double* %retval, align 8, !dbg !4935
  br label %return, !dbg !4935

if.end709:                                        ; preds = %if.end703
  br label %sw.epilog924, !dbg !4936

sw.bb710:                                         ; preds = %if.end225, %if.end225
  %836 = load i8*, i8** %expression.addr, align 8, !dbg !4937
  %call711 = call i32 @LocaleCompare(i8* %836, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i64 0, i64 0)), !dbg !4940
  %cmp712 = icmp eq i32 %call711, 0, !dbg !4941
  br i1 %cmp712, label %if.then714, label %if.end715, !dbg !4942

if.then714:                                       ; preds = %sw.bb710
  store double 0x3FF9E3779B97F4A8, double* %retval, align 8, !dbg !4943
  br label %return, !dbg !4943

if.end715:                                        ; preds = %sw.bb710
  %837 = load i8*, i8** %expression.addr, align 8, !dbg !4944
  %call716 = call i32 @LocaleCompare(i8* %837, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.122, i64 0, i64 0)), !dbg !4946
  %cmp717 = icmp eq i32 %call716, 0, !dbg !4947
  br i1 %cmp717, label %if.then719, label %if.end720, !dbg !4948

if.then719:                                       ; preds = %if.end715
  store double 0x400921FB54442D18, double* %retval, align 8, !dbg !4949
  br label %return, !dbg !4949

if.end720:                                        ; preds = %if.end715
  %838 = load i8*, i8** %expression.addr, align 8, !dbg !4950
  %call721 = call i32 @LocaleNCompare(i8* %838, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0), i64 3), !dbg !4952
  %cmp722 = icmp eq i32 %call721, 0, !dbg !4953
  br i1 %cmp722, label %if.then724, label %if.end728, !dbg !4954

if.then724:                                       ; preds = %if.end720
  %839 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4955
  %840 = load i32, i32* %channel.addr, align 4, !dbg !4957
  %841 = load i64, i64* %x.addr, align 8, !dbg !4958
  %842 = load i64, i64* %y.addr, align 8, !dbg !4959
  %843 = load i8*, i8** %expression.addr, align 8, !dbg !4960
  %add.ptr725 = getelementptr inbounds i8, i8* %843, i64 3, !dbg !4961
  %844 = load double*, double** %beta.addr, align 8, !dbg !4962
  %845 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4963
  %call726 = call double @FxEvaluateSubexpression(%struct._FxInfo* %839, i32 %840, i64 %841, i64 %842, i8* %add.ptr725, double* %844, %struct._ExceptionInfo* %845), !dbg !4964
  store double %call726, double* %alpha, align 8, !dbg !4965
  %846 = load double, double* %alpha, align 8, !dbg !4966
  %847 = load double*, double** %beta.addr, align 8, !dbg !4967
  %848 = load double, double* %847, align 8, !dbg !4968
  %call727 = call double @pow(double %846, double %848) #14, !dbg !4969
  store double %call727, double* %retval, align 8, !dbg !4970
  br label %return, !dbg !4970

if.end728:                                        ; preds = %if.end720
  %849 = load i8*, i8** %expression.addr, align 8, !dbg !4971
  %call729 = call i32 @LocaleCompare(i8* %849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i64 0, i64 0)), !dbg !4973
  %cmp730 = icmp eq i32 %call729, 0, !dbg !4974
  br i1 %cmp730, label %if.then732, label %if.end734, !dbg !4975

if.then732:                                       ; preds = %if.end728
  %850 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !4976
  %851 = load i32, i32* %channel.addr, align 4, !dbg !4977
  %852 = load i64, i64* %x.addr, align 8, !dbg !4978
  %853 = load i64, i64* %y.addr, align 8, !dbg !4979
  %854 = load i8*, i8** %expression.addr, align 8, !dbg !4980
  %855 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4981
  %call733 = call double @FxGetSymbol(%struct._FxInfo* %850, i32 %851, i64 %852, i64 %853, i8* %854, %struct._ExceptionInfo* %855), !dbg !4982
  store double %call733, double* %retval, align 8, !dbg !4983
  br label %return, !dbg !4983

if.end734:                                        ; preds = %if.end728
  br label %sw.epilog924, !dbg !4984

sw.bb735:                                         ; preds = %if.end225, %if.end225
  %856 = load i8*, i8** %expression.addr, align 8, !dbg !4985
  %call736 = call i32 @LocaleCompare(i8* %856, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i64 0, i64 0)), !dbg !4988
  %cmp737 = icmp eq i32 %call736, 0, !dbg !4989
  br i1 %cmp737, label %if.then739, label %if.end740, !dbg !4990

if.then739:                                       ; preds = %sw.bb735
  store double 6.553500e+04, double* %retval, align 8, !dbg !4991
  br label %return, !dbg !4991

if.end740:                                        ; preds = %sw.bb735
  %857 = load i8*, i8** %expression.addr, align 8, !dbg !4992
  %call741 = call i32 @LocaleCompare(i8* %857, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i64 0, i64 0)), !dbg !4994
  %cmp742 = icmp eq i32 %call741, 0, !dbg !4995
  br i1 %cmp742, label %if.then744, label %if.end745, !dbg !4996

if.then744:                                       ; preds = %if.end740
  store double 0x3EF0001000100010, double* %retval, align 8, !dbg !4997
  br label %return, !dbg !4997

if.end745:                                        ; preds = %if.end740
  br label %sw.epilog924, !dbg !4998

sw.bb746:                                         ; preds = %if.end225, %if.end225
  %858 = load i8*, i8** %expression.addr, align 8, !dbg !4999
  %call747 = call i32 @LocaleNCompare(i8* %858, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i64 0, i64 0), i64 4), !dbg !5002
  %cmp748 = icmp eq i32 %call747, 0, !dbg !5003
  br i1 %cmp748, label %if.then750, label %if.end752, !dbg !5004

if.then750:                                       ; preds = %sw.bb746
  %859 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5005
  %random_info = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %859, i32 0, i32 6, !dbg !5006
  %860 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !5006
  %call751 = call double @GetPseudoRandomValue(%struct._RandomInfo* %860), !dbg !5007
  store double %call751, double* %retval, align 8, !dbg !5008
  br label %return, !dbg !5008

if.end752:                                        ; preds = %sw.bb746
  %861 = load i8*, i8** %expression.addr, align 8, !dbg !5009
  %call753 = call i32 @LocaleNCompare(i8* %861, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i64 0, i64 0), i64 5), !dbg !5011
  %cmp754 = icmp eq i32 %call753, 0, !dbg !5012
  br i1 %cmp754, label %if.then756, label %if.end760, !dbg !5013

if.then756:                                       ; preds = %if.end752
  %862 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5014
  %863 = load i32, i32* %channel.addr, align 4, !dbg !5016
  %864 = load i64, i64* %x.addr, align 8, !dbg !5017
  %865 = load i64, i64* %y.addr, align 8, !dbg !5018
  %866 = load i8*, i8** %expression.addr, align 8, !dbg !5019
  %add.ptr757 = getelementptr inbounds i8, i8* %866, i64 5, !dbg !5020
  %867 = load double*, double** %beta.addr, align 8, !dbg !5021
  %868 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5022
  %call758 = call double @FxEvaluateSubexpression(%struct._FxInfo* %862, i32 %863, i64 %864, i64 %865, i8* %add.ptr757, double* %867, %struct._ExceptionInfo* %868), !dbg !5023
  store double %call758, double* %alpha, align 8, !dbg !5024
  %869 = load double, double* %alpha, align 8, !dbg !5025
  %add759 = fadd double %869, 5.000000e-01, !dbg !5026
  %870 = call double @llvm.floor.f64(double %add759), !dbg !5027
  store double %870, double* %retval, align 8, !dbg !5028
  br label %return, !dbg !5028

if.end760:                                        ; preds = %if.end752
  %871 = load i8*, i8** %expression.addr, align 8, !dbg !5029
  %call761 = call i32 @LocaleCompare(i8* %871, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.129, i64 0, i64 0)), !dbg !5031
  %cmp762 = icmp eq i32 %call761, 0, !dbg !5032
  br i1 %cmp762, label %if.then764, label %if.end766, !dbg !5033

if.then764:                                       ; preds = %if.end760
  %872 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5034
  %873 = load i32, i32* %channel.addr, align 4, !dbg !5035
  %874 = load i64, i64* %x.addr, align 8, !dbg !5036
  %875 = load i64, i64* %y.addr, align 8, !dbg !5037
  %876 = load i8*, i8** %expression.addr, align 8, !dbg !5038
  %877 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5039
  %call765 = call double @FxGetSymbol(%struct._FxInfo* %872, i32 %873, i64 %874, i64 %875, i8* %876, %struct._ExceptionInfo* %877), !dbg !5040
  store double %call765, double* %retval, align 8, !dbg !5041
  br label %return, !dbg !5041

if.end766:                                        ; preds = %if.end760
  br label %sw.epilog924, !dbg !5042

sw.bb767:                                         ; preds = %if.end225, %if.end225
  %878 = load i8*, i8** %expression.addr, align 8, !dbg !5043
  %call768 = call i32 @LocaleCompare(i8* %878, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0)), !dbg !5046
  %cmp769 = icmp eq i32 %call768, 0, !dbg !5047
  br i1 %cmp769, label %if.then771, label %if.end773, !dbg !5048

if.then771:                                       ; preds = %sw.bb767
  %879 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5049
  %880 = load i32, i32* %channel.addr, align 4, !dbg !5050
  %881 = load i64, i64* %x.addr, align 8, !dbg !5051
  %882 = load i64, i64* %y.addr, align 8, !dbg !5052
  %883 = load i8*, i8** %expression.addr, align 8, !dbg !5053
  %884 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5054
  %call772 = call double @FxGetSymbol(%struct._FxInfo* %879, i32 %880, i64 %881, i64 %882, i8* %883, %struct._ExceptionInfo* %884), !dbg !5055
  store double %call772, double* %retval, align 8, !dbg !5056
  br label %return, !dbg !5056

if.end773:                                        ; preds = %sw.bb767
  %885 = load i8*, i8** %expression.addr, align 8, !dbg !5057
  %call774 = call i32 @LocaleNCompare(i8* %885, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0), i64 4), !dbg !5059
  %cmp775 = icmp eq i32 %call774, 0, !dbg !5060
  br i1 %cmp775, label %if.then777, label %if.end783, !dbg !5061

if.then777:                                       ; preds = %if.end773
  %886 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5062
  %887 = load i32, i32* %channel.addr, align 4, !dbg !5064
  %888 = load i64, i64* %x.addr, align 8, !dbg !5065
  %889 = load i64, i64* %y.addr, align 8, !dbg !5066
  %890 = load i8*, i8** %expression.addr, align 8, !dbg !5067
  %add.ptr778 = getelementptr inbounds i8, i8* %890, i64 4, !dbg !5068
  %891 = load double*, double** %beta.addr, align 8, !dbg !5069
  %892 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5070
  %call779 = call double @FxEvaluateSubexpression(%struct._FxInfo* %886, i32 %887, i64 %888, i64 %889, i8* %add.ptr778, double* %891, %struct._ExceptionInfo* %892), !dbg !5071
  store double %call779, double* %alpha, align 8, !dbg !5072
  %893 = load double, double* %alpha, align 8, !dbg !5073
  %cmp780 = fcmp olt double %893, 0.000000e+00, !dbg !5074
  %894 = zext i1 %cmp780 to i64, !dbg !5073
  %cond782 = select i1 %cmp780, double -1.000000e+00, double 1.000000e+00, !dbg !5073
  store double %cond782, double* %retval, align 8, !dbg !5075
  br label %return, !dbg !5075

if.end783:                                        ; preds = %if.end773
  %895 = load i8*, i8** %expression.addr, align 8, !dbg !5076
  %call784 = call i32 @LocaleNCompare(i8* %895, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i64 0, i64 0), i64 4), !dbg !5078
  %cmp785 = icmp eq i32 %call784, 0, !dbg !5079
  br i1 %cmp785, label %if.then787, label %if.end798, !dbg !5080

if.then787:                                       ; preds = %if.end783
  %896 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5081
  %897 = load i32, i32* %channel.addr, align 4, !dbg !5083
  %898 = load i64, i64* %x.addr, align 8, !dbg !5084
  %899 = load i64, i64* %y.addr, align 8, !dbg !5085
  %900 = load i8*, i8** %expression.addr, align 8, !dbg !5086
  %add.ptr788 = getelementptr inbounds i8, i8* %900, i64 4, !dbg !5087
  %901 = load double*, double** %beta.addr, align 8, !dbg !5088
  %902 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5089
  %call789 = call double @FxEvaluateSubexpression(%struct._FxInfo* %896, i32 %897, i64 %898, i64 %899, i8* %add.ptr788, double* %901, %struct._ExceptionInfo* %902), !dbg !5090
  store double %call789, double* %alpha, align 8, !dbg !5091
  %903 = load double, double* %alpha, align 8, !dbg !5092
  %cmp790 = fcmp oeq double %903, 0.000000e+00, !dbg !5094
  br i1 %cmp790, label %if.then792, label %if.end793, !dbg !5095

if.then792:                                       ; preds = %if.then787
  store double 1.000000e+00, double* %retval, align 8, !dbg !5096
  br label %return, !dbg !5096

if.end793:                                        ; preds = %if.then787
  %904 = load double, double* %alpha, align 8, !dbg !5097
  %mul794 = fmul double 0x400921FB54442D18, %904, !dbg !5098
  %call795 = call double @sin(double %mul794) #14, !dbg !5099
  %905 = load double, double* %alpha, align 8, !dbg !5100
  %mul796 = fmul double 0x400921FB54442D18, %905, !dbg !5101
  %div797 = fdiv double %call795, %mul796, !dbg !5102
  store double %div797, double* %gamma, align 8, !dbg !5103
  %906 = load double, double* %gamma, align 8, !dbg !5104
  store double %906, double* %retval, align 8, !dbg !5105
  br label %return, !dbg !5105

if.end798:                                        ; preds = %if.end783
  %907 = load i8*, i8** %expression.addr, align 8, !dbg !5106
  %call799 = call i32 @LocaleNCompare(i8* %907, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0), i64 4), !dbg !5108
  %cmp800 = icmp eq i32 %call799, 0, !dbg !5109
  br i1 %cmp800, label %if.then802, label %if.end806, !dbg !5110

if.then802:                                       ; preds = %if.end798
  %908 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5111
  %909 = load i32, i32* %channel.addr, align 4, !dbg !5113
  %910 = load i64, i64* %x.addr, align 8, !dbg !5114
  %911 = load i64, i64* %y.addr, align 8, !dbg !5115
  %912 = load i8*, i8** %expression.addr, align 8, !dbg !5116
  %add.ptr803 = getelementptr inbounds i8, i8* %912, i64 4, !dbg !5117
  %913 = load double*, double** %beta.addr, align 8, !dbg !5118
  %914 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5119
  %call804 = call double @FxEvaluateSubexpression(%struct._FxInfo* %908, i32 %909, i64 %910, i64 %911, i8* %add.ptr803, double* %913, %struct._ExceptionInfo* %914), !dbg !5120
  store double %call804, double* %alpha, align 8, !dbg !5121
  %915 = load double, double* %alpha, align 8, !dbg !5122
  %call805 = call double @sinh(double %915) #14, !dbg !5123
  store double %call805, double* %retval, align 8, !dbg !5124
  br label %return, !dbg !5124

if.end806:                                        ; preds = %if.end798
  %916 = load i8*, i8** %expression.addr, align 8, !dbg !5125
  %call807 = call i32 @LocaleNCompare(i8* %916, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0), i64 3), !dbg !5127
  %cmp808 = icmp eq i32 %call807, 0, !dbg !5128
  br i1 %cmp808, label %if.then810, label %if.end814, !dbg !5129

if.then810:                                       ; preds = %if.end806
  %917 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5130
  %918 = load i32, i32* %channel.addr, align 4, !dbg !5132
  %919 = load i64, i64* %x.addr, align 8, !dbg !5133
  %920 = load i64, i64* %y.addr, align 8, !dbg !5134
  %921 = load i8*, i8** %expression.addr, align 8, !dbg !5135
  %add.ptr811 = getelementptr inbounds i8, i8* %921, i64 3, !dbg !5136
  %922 = load double*, double** %beta.addr, align 8, !dbg !5137
  %923 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5138
  %call812 = call double @FxEvaluateSubexpression(%struct._FxInfo* %917, i32 %918, i64 %919, i64 %920, i8* %add.ptr811, double* %922, %struct._ExceptionInfo* %923), !dbg !5139
  store double %call812, double* %alpha, align 8, !dbg !5140
  %924 = load double, double* %alpha, align 8, !dbg !5141
  %call813 = call double @sin(double %924) #14, !dbg !5142
  store double %call813, double* %retval, align 8, !dbg !5143
  br label %return, !dbg !5143

if.end814:                                        ; preds = %if.end806
  %925 = load i8*, i8** %expression.addr, align 8, !dbg !5144
  %call815 = call i32 @LocaleNCompare(i8* %925, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i64 4), !dbg !5146
  %cmp816 = icmp eq i32 %call815, 0, !dbg !5147
  br i1 %cmp816, label %if.then818, label %if.end822, !dbg !5148

if.then818:                                       ; preds = %if.end814
  %926 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5149
  %927 = load i32, i32* %channel.addr, align 4, !dbg !5151
  %928 = load i64, i64* %x.addr, align 8, !dbg !5152
  %929 = load i64, i64* %y.addr, align 8, !dbg !5153
  %930 = load i8*, i8** %expression.addr, align 8, !dbg !5154
  %add.ptr819 = getelementptr inbounds i8, i8* %930, i64 4, !dbg !5155
  %931 = load double*, double** %beta.addr, align 8, !dbg !5156
  %932 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5157
  %call820 = call double @FxEvaluateSubexpression(%struct._FxInfo* %926, i32 %927, i64 %928, i64 %929, i8* %add.ptr819, double* %931, %struct._ExceptionInfo* %932), !dbg !5158
  store double %call820, double* %alpha, align 8, !dbg !5159
  %933 = load double, double* %alpha, align 8, !dbg !5160
  %call821 = call double @sqrt(double %933) #14, !dbg !5161
  store double %call821, double* %retval, align 8, !dbg !5162
  br label %return, !dbg !5162

if.end822:                                        ; preds = %if.end814
  %934 = load i8*, i8** %expression.addr, align 8, !dbg !5163
  %call823 = call i32 @LocaleNCompare(i8* %934, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i64 0, i64 0), i64 6), !dbg !5165
  %cmp824 = icmp eq i32 %call823, 0, !dbg !5166
  br i1 %cmp824, label %if.then826, label %if.end833, !dbg !5167

if.then826:                                       ; preds = %if.end822
  %935 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5168
  %936 = load i32, i32* %channel.addr, align 4, !dbg !5170
  %937 = load i64, i64* %x.addr, align 8, !dbg !5171
  %938 = load i64, i64* %y.addr, align 8, !dbg !5172
  %939 = load i8*, i8** %expression.addr, align 8, !dbg !5173
  %add.ptr827 = getelementptr inbounds i8, i8* %939, i64 6, !dbg !5174
  %940 = load double*, double** %beta.addr, align 8, !dbg !5175
  %941 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5176
  %call828 = call double @FxEvaluateSubexpression(%struct._FxInfo* %935, i32 %936, i64 %937, i64 %938, i8* %add.ptr827, double* %940, %struct._ExceptionInfo* %941), !dbg !5177
  store double %call828, double* %alpha, align 8, !dbg !5178
  %942 = load double, double* %alpha, align 8, !dbg !5179
  %fneg829 = fneg double %942, !dbg !5180
  %call830 = call double @exp(double %fneg829) #14, !dbg !5181
  %add831 = fadd double 1.000000e+00, %call830, !dbg !5182
  %div832 = fdiv double 1.000000e+00, %add831, !dbg !5183
  store double %div832, double* %retval, align 8, !dbg !5184
  br label %return, !dbg !5184

if.end833:                                        ; preds = %if.end822
  %943 = load i8*, i8** %expression.addr, align 8, !dbg !5185
  %call834 = call i32 @LocaleCompare(i8* %943, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i64 0, i64 0)), !dbg !5187
  %cmp835 = icmp eq i32 %call834, 0, !dbg !5188
  br i1 %cmp835, label %if.then837, label %if.end839, !dbg !5189

if.then837:                                       ; preds = %if.end833
  %944 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5190
  %945 = load i32, i32* %channel.addr, align 4, !dbg !5191
  %946 = load i64, i64* %x.addr, align 8, !dbg !5192
  %947 = load i64, i64* %y.addr, align 8, !dbg !5193
  %948 = load i8*, i8** %expression.addr, align 8, !dbg !5194
  %949 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5195
  %call838 = call double @FxGetSymbol(%struct._FxInfo* %944, i32 %945, i64 %946, i64 %947, i8* %948, %struct._ExceptionInfo* %949), !dbg !5196
  store double %call838, double* %retval, align 8, !dbg !5197
  br label %return, !dbg !5197

if.end839:                                        ; preds = %if.end833
  br label %sw.epilog924, !dbg !5198

sw.bb840:                                         ; preds = %if.end225, %if.end225
  %950 = load i8*, i8** %expression.addr, align 8, !dbg !5199
  %call841 = call i32 @LocaleNCompare(i8* %950, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.138, i64 0, i64 0), i64 4), !dbg !5202
  %cmp842 = icmp eq i32 %call841, 0, !dbg !5203
  br i1 %cmp842, label %if.then844, label %if.end848, !dbg !5204

if.then844:                                       ; preds = %sw.bb840
  %951 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5205
  %952 = load i32, i32* %channel.addr, align 4, !dbg !5207
  %953 = load i64, i64* %x.addr, align 8, !dbg !5208
  %954 = load i64, i64* %y.addr, align 8, !dbg !5209
  %955 = load i8*, i8** %expression.addr, align 8, !dbg !5210
  %add.ptr845 = getelementptr inbounds i8, i8* %955, i64 4, !dbg !5211
  %956 = load double*, double** %beta.addr, align 8, !dbg !5212
  %957 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5213
  %call846 = call double @FxEvaluateSubexpression(%struct._FxInfo* %951, i32 %952, i64 %953, i64 %954, i8* %add.ptr845, double* %956, %struct._ExceptionInfo* %957), !dbg !5214
  store double %call846, double* %alpha, align 8, !dbg !5215
  %958 = load double, double* %alpha, align 8, !dbg !5216
  %call847 = call double @tanh(double %958) #14, !dbg !5217
  store double %call847, double* %retval, align 8, !dbg !5218
  br label %return, !dbg !5218

if.end848:                                        ; preds = %sw.bb840
  %959 = load i8*, i8** %expression.addr, align 8, !dbg !5219
  %call849 = call i32 @LocaleNCompare(i8* %959, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.139, i64 0, i64 0), i64 3), !dbg !5221
  %cmp850 = icmp eq i32 %call849, 0, !dbg !5222
  br i1 %cmp850, label %if.then852, label %if.end856, !dbg !5223

if.then852:                                       ; preds = %if.end848
  %960 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5224
  %961 = load i32, i32* %channel.addr, align 4, !dbg !5226
  %962 = load i64, i64* %x.addr, align 8, !dbg !5227
  %963 = load i64, i64* %y.addr, align 8, !dbg !5228
  %964 = load i8*, i8** %expression.addr, align 8, !dbg !5229
  %add.ptr853 = getelementptr inbounds i8, i8* %964, i64 3, !dbg !5230
  %965 = load double*, double** %beta.addr, align 8, !dbg !5231
  %966 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5232
  %call854 = call double @FxEvaluateSubexpression(%struct._FxInfo* %960, i32 %961, i64 %962, i64 %963, i8* %add.ptr853, double* %965, %struct._ExceptionInfo* %966), !dbg !5233
  store double %call854, double* %alpha, align 8, !dbg !5234
  %967 = load double, double* %alpha, align 8, !dbg !5235
  %call855 = call double @tan(double %967) #14, !dbg !5236
  store double %call855, double* %retval, align 8, !dbg !5237
  br label %return, !dbg !5237

if.end856:                                        ; preds = %if.end848
  %968 = load i8*, i8** %expression.addr, align 8, !dbg !5238
  %call857 = call i32 @LocaleCompare(i8* %968, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.140, i64 0, i64 0)), !dbg !5240
  %cmp858 = icmp eq i32 %call857, 0, !dbg !5241
  br i1 %cmp858, label %if.then860, label %if.end861, !dbg !5242

if.then860:                                       ; preds = %if.end856
  store double 0.000000e+00, double* %retval, align 8, !dbg !5243
  br label %return, !dbg !5243

if.end861:                                        ; preds = %if.end856
  %969 = load i8*, i8** %expression.addr, align 8, !dbg !5244
  %call862 = call i32 @LocaleNCompare(i8* %969, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i64 0, i64 0), i64 5), !dbg !5246
  %cmp863 = icmp eq i32 %call862, 0, !dbg !5247
  br i1 %cmp863, label %if.then865, label %if.end872, !dbg !5248

if.then865:                                       ; preds = %if.end861
  %970 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5249
  %971 = load i32, i32* %channel.addr, align 4, !dbg !5251
  %972 = load i64, i64* %x.addr, align 8, !dbg !5252
  %973 = load i64, i64* %y.addr, align 8, !dbg !5253
  %974 = load i8*, i8** %expression.addr, align 8, !dbg !5254
  %add.ptr866 = getelementptr inbounds i8, i8* %974, i64 5, !dbg !5255
  %975 = load double*, double** %beta.addr, align 8, !dbg !5256
  %976 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5257
  %call867 = call double @FxEvaluateSubexpression(%struct._FxInfo* %970, i32 %971, i64 %972, i64 %973, i8* %add.ptr866, double* %975, %struct._ExceptionInfo* %976), !dbg !5258
  store double %call867, double* %alpha, align 8, !dbg !5259
  %977 = load double, double* %alpha, align 8, !dbg !5260
  %cmp868 = fcmp oge double %977, 0.000000e+00, !dbg !5262
  br i1 %cmp868, label %if.then870, label %if.end871, !dbg !5263

if.then870:                                       ; preds = %if.then865
  %978 = load double, double* %alpha, align 8, !dbg !5264
  %979 = call double @llvm.floor.f64(double %978), !dbg !5265
  store double %979, double* %retval, align 8, !dbg !5266
  br label %return, !dbg !5266

if.end871:                                        ; preds = %if.then865
  %980 = load double, double* %alpha, align 8, !dbg !5267
  %981 = call double @llvm.ceil.f64(double %980), !dbg !5268
  store double %981, double* %retval, align 8, !dbg !5269
  br label %return, !dbg !5269

if.end872:                                        ; preds = %if.end861
  %982 = load i8*, i8** %expression.addr, align 8, !dbg !5270
  %call873 = call i32 @LocaleCompare(i8* %982, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.142, i64 0, i64 0)), !dbg !5272
  %cmp874 = icmp eq i32 %call873, 0, !dbg !5273
  br i1 %cmp874, label %if.then876, label %if.end878, !dbg !5274

if.then876:                                       ; preds = %if.end872
  %983 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5275
  %984 = load i32, i32* %channel.addr, align 4, !dbg !5276
  %985 = load i64, i64* %x.addr, align 8, !dbg !5277
  %986 = load i64, i64* %y.addr, align 8, !dbg !5278
  %987 = load i8*, i8** %expression.addr, align 8, !dbg !5279
  %988 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5280
  %call877 = call double @FxGetSymbol(%struct._FxInfo* %983, i32 %984, i64 %985, i64 %986, i8* %987, %struct._ExceptionInfo* %988), !dbg !5281
  store double %call877, double* %retval, align 8, !dbg !5282
  br label %return, !dbg !5282

if.end878:                                        ; preds = %if.end872
  br label %sw.epilog924, !dbg !5283

sw.bb879:                                         ; preds = %if.end225, %if.end225
  %989 = load i8*, i8** %expression.addr, align 8, !dbg !5284
  %call880 = call i32 @LocaleCompare(i8* %989, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i64 0, i64 0)), !dbg !5287
  %cmp881 = icmp eq i32 %call880, 0, !dbg !5288
  br i1 %cmp881, label %if.then883, label %if.end885, !dbg !5289

if.then883:                                       ; preds = %sw.bb879
  %990 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5290
  %991 = load i32, i32* %channel.addr, align 4, !dbg !5291
  %992 = load i64, i64* %x.addr, align 8, !dbg !5292
  %993 = load i64, i64* %y.addr, align 8, !dbg !5293
  %994 = load i8*, i8** %expression.addr, align 8, !dbg !5294
  %995 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5295
  %call884 = call double @FxGetSymbol(%struct._FxInfo* %990, i32 %991, i64 %992, i64 %993, i8* %994, %struct._ExceptionInfo* %995), !dbg !5296
  store double %call884, double* %retval, align 8, !dbg !5297
  br label %return, !dbg !5297

if.end885:                                        ; preds = %sw.bb879
  br label %sw.epilog924, !dbg !5298

sw.bb886:                                         ; preds = %if.end225, %if.end225
  %996 = load i8*, i8** %expression.addr, align 8, !dbg !5299
  %call887 = call i32 @LocaleCompare(i8* %996, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.144, i64 0, i64 0)), !dbg !5302
  %cmp888 = icmp eq i32 %call887, 0, !dbg !5303
  br i1 %cmp888, label %if.then890, label %if.end892, !dbg !5304

if.then890:                                       ; preds = %sw.bb886
  %997 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5305
  %998 = load i32, i32* %channel.addr, align 4, !dbg !5306
  %999 = load i64, i64* %x.addr, align 8, !dbg !5307
  %1000 = load i64, i64* %y.addr, align 8, !dbg !5308
  %1001 = load i8*, i8** %expression.addr, align 8, !dbg !5309
  %1002 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5310
  %call891 = call double @FxGetSymbol(%struct._FxInfo* %997, i32 %998, i64 %999, i64 %1000, i8* %1001, %struct._ExceptionInfo* %1002), !dbg !5311
  store double %call891, double* %retval, align 8, !dbg !5312
  br label %return, !dbg !5312

if.end892:                                        ; preds = %sw.bb886
  br label %sw.epilog924, !dbg !5313

sw.bb893:                                         ; preds = %if.end225, %if.end225
  %1003 = load i8*, i8** %expression.addr, align 8, !dbg !5314
  %call894 = call i32 @LocaleNCompare(i8* %1003, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i64 0, i64 0), i64 5), !dbg !5317
  %cmp895 = icmp eq i32 %call894, 0, !dbg !5318
  br i1 %cmp895, label %if.then897, label %if.end902, !dbg !5319

if.then897:                                       ; preds = %sw.bb893
  br label %do.body, !dbg !5320

do.body:                                          ; preds = %do.cond, %if.then897
  %1004 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5322
  %1005 = load i32, i32* %channel.addr, align 4, !dbg !5324
  %1006 = load i64, i64* %x.addr, align 8, !dbg !5325
  %1007 = load i64, i64* %y.addr, align 8, !dbg !5326
  %1008 = load i8*, i8** %expression.addr, align 8, !dbg !5327
  %add.ptr898 = getelementptr inbounds i8, i8* %1008, i64 5, !dbg !5328
  %1009 = load double*, double** %beta.addr, align 8, !dbg !5329
  %1010 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5330
  %call899 = call double @FxEvaluateSubexpression(%struct._FxInfo* %1004, i32 %1005, i64 %1006, i64 %1007, i8* %add.ptr898, double* %1009, %struct._ExceptionInfo* %1010), !dbg !5331
  store double %call899, double* %alpha, align 8, !dbg !5332
  br label %do.cond, !dbg !5333

do.cond:                                          ; preds = %do.body
  %1011 = load double, double* %alpha, align 8, !dbg !5334
  %1012 = call double @llvm.fabs.f64(double %1011), !dbg !5335
  %cmp900 = fcmp oge double %1012, 1.000000e-15, !dbg !5336
  br i1 %cmp900, label %do.body, label %do.end, !dbg !5333, !llvm.loop !5337

do.end:                                           ; preds = %do.cond
  %1013 = load double*, double** %beta.addr, align 8, !dbg !5339
  %1014 = load double, double* %1013, align 8, !dbg !5340
  store double %1014, double* %retval, align 8, !dbg !5341
  br label %return, !dbg !5341

if.end902:                                        ; preds = %sw.bb893
  %1015 = load i8*, i8** %expression.addr, align 8, !dbg !5342
  %call903 = call i32 @LocaleCompare(i8* %1015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0)), !dbg !5344
  %cmp904 = icmp eq i32 %call903, 0, !dbg !5345
  br i1 %cmp904, label %if.then906, label %if.end908, !dbg !5346

if.then906:                                       ; preds = %if.end902
  %1016 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5347
  %1017 = load i32, i32* %channel.addr, align 4, !dbg !5348
  %1018 = load i64, i64* %x.addr, align 8, !dbg !5349
  %1019 = load i64, i64* %y.addr, align 8, !dbg !5350
  %1020 = load i8*, i8** %expression.addr, align 8, !dbg !5351
  %1021 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5352
  %call907 = call double @FxGetSymbol(%struct._FxInfo* %1016, i32 %1017, i64 %1018, i64 %1019, i8* %1020, %struct._ExceptionInfo* %1021), !dbg !5353
  store double %call907, double* %retval, align 8, !dbg !5354
  br label %return, !dbg !5354

if.end908:                                        ; preds = %if.end902
  br label %sw.epilog924, !dbg !5355

sw.bb909:                                         ; preds = %if.end225, %if.end225
  %1022 = load i8*, i8** %expression.addr, align 8, !dbg !5356
  %call910 = call i32 @LocaleCompare(i8* %1022, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i64 0, i64 0)), !dbg !5359
  %cmp911 = icmp eq i32 %call910, 0, !dbg !5360
  br i1 %cmp911, label %if.then913, label %if.end915, !dbg !5361

if.then913:                                       ; preds = %sw.bb909
  %1023 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5362
  %1024 = load i32, i32* %channel.addr, align 4, !dbg !5363
  %1025 = load i64, i64* %x.addr, align 8, !dbg !5364
  %1026 = load i64, i64* %y.addr, align 8, !dbg !5365
  %1027 = load i8*, i8** %expression.addr, align 8, !dbg !5366
  %1028 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5367
  %call914 = call double @FxGetSymbol(%struct._FxInfo* %1023, i32 %1024, i64 %1025, i64 %1026, i8* %1027, %struct._ExceptionInfo* %1028), !dbg !5368
  store double %call914, double* %retval, align 8, !dbg !5369
  br label %return, !dbg !5369

if.end915:                                        ; preds = %sw.bb909
  br label %sw.epilog924, !dbg !5370

sw.bb916:                                         ; preds = %if.end225, %if.end225
  %1029 = load i8*, i8** %expression.addr, align 8, !dbg !5371
  %call917 = call i32 @LocaleCompare(i8* %1029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.148, i64 0, i64 0)), !dbg !5374
  %cmp918 = icmp eq i32 %call917, 0, !dbg !5375
  br i1 %cmp918, label %if.then920, label %if.end922, !dbg !5376

if.then920:                                       ; preds = %sw.bb916
  %1030 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5377
  %1031 = load i32, i32* %channel.addr, align 4, !dbg !5378
  %1032 = load i64, i64* %x.addr, align 8, !dbg !5379
  %1033 = load i64, i64* %y.addr, align 8, !dbg !5380
  %1034 = load i8*, i8** %expression.addr, align 8, !dbg !5381
  %1035 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5382
  %call921 = call double @FxGetSymbol(%struct._FxInfo* %1030, i32 %1031, i64 %1032, i64 %1033, i8* %1034, %struct._ExceptionInfo* %1035), !dbg !5383
  store double %call921, double* %retval, align 8, !dbg !5384
  br label %return, !dbg !5384

if.end922:                                        ; preds = %sw.bb916
  br label %sw.epilog924, !dbg !5385

sw.default923:                                    ; preds = %if.end225
  br label %sw.epilog924, !dbg !5386

sw.epilog924:                                     ; preds = %sw.default923, %if.end922, %if.end915, %if.end908, %if.end892, %if.end885, %if.end878, %if.end839, %if.end766, %if.end745, %if.end734, %if.end709, %if.end697, %if.end680, %if.then650, %if.then635, %if.end625, %if.end592, %if.end553, %if.end523, %if.end516, %if.end495, %if.end463, %if.end455, %if.end436, %if.end375, %if.end345, %if.end338
  %1036 = load i8*, i8** %expression.addr, align 8, !dbg !5387
  store i8* %1036, i8** %q, align 8, !dbg !5388
  %1037 = load i8*, i8** %expression.addr, align 8, !dbg !5389
  %call925 = call double @InterpretSiPrefixValue(i8* %1037, i8** %q), !dbg !5390
  store double %call925, double* %alpha, align 8, !dbg !5391
  %1038 = load i8*, i8** %q, align 8, !dbg !5392
  %1039 = load i8*, i8** %expression.addr, align 8, !dbg !5394
  %cmp926 = icmp eq i8* %1038, %1039, !dbg !5395
  br i1 %cmp926, label %if.then928, label %if.end930, !dbg !5396

if.then928:                                       ; preds = %sw.epilog924
  %1040 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !5397
  %1041 = load i32, i32* %channel.addr, align 4, !dbg !5398
  %1042 = load i64, i64* %x.addr, align 8, !dbg !5399
  %1043 = load i64, i64* %y.addr, align 8, !dbg !5400
  %1044 = load i8*, i8** %expression.addr, align 8, !dbg !5401
  %1045 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5402
  %call929 = call double @FxGetSymbol(%struct._FxInfo* %1040, i32 %1041, i64 %1042, i64 %1043, i8* %1044, %struct._ExceptionInfo* %1045), !dbg !5403
  store double %call929, double* %retval, align 8, !dbg !5404
  br label %return, !dbg !5404

if.end930:                                        ; preds = %sw.epilog924
  %1046 = load double, double* %alpha, align 8, !dbg !5405
  store double %1046, double* %retval, align 8, !dbg !5406
  br label %return, !dbg !5406

return:                                           ; preds = %if.end930, %if.then928, %if.then920, %if.then913, %if.then906, %do.end, %if.then890, %if.then883, %if.then876, %if.end871, %if.then870, %if.then860, %if.then852, %if.then844, %if.then837, %if.then826, %if.then818, %if.then810, %if.then802, %if.end793, %if.then792, %if.then777, %if.then771, %if.then764, %if.then756, %if.then750, %if.then744, %if.then739, %if.then732, %if.then724, %if.then719, %if.then714, %if.then707, %if.then702, %if.then695, %if.then685, %if.then678, %if.then668, %cond.end662, %cond.end, %if.then630, %if.then623, %if.then615, %if.then605, %if.then597, %if.end586, %if.then585, %if.then572, %if.then564, %if.then558, %if.then551, %if.then541, %if.then534, %if.then528, %if.then521, %if.then512, %if.then506, %if.then500, %if.then493, %if.then480, %if.then468, %if.then460, %if.then454, %if.then446, %if.then441, %if.then429, %if.end424, %if.then373, %if.then365, %if.then357, %if.then350, %if.then343, %if.then336, %if.then328, %if.then320, %if.then312, %if.then302, %if.then294, %if.then286, %if.end275, %if.then274, %if.then261, %if.then253, %if.then246, %sw.bb235, %sw.bb231, %sw.bb227, %if.then216, %sw.default, %sw.bb206, %sw.bb203, %if.end190, %if.then187, %if.end169, %if.then160, %lor.end, %land.end, %sw.bb127, %sw.bb118, %sw.bb111, %sw.bb104, %sw.bb98, %sw.bb92, %sw.bb86, %sw.bb80, %sw.bb72, %sw.bb64, %sw.bb61, %sw.bb57, %if.end55, %if.then53, %if.end46, %if.end45, %sw.bb31, %sw.bb27, %sw.bb22, %sw.bb, %if.then7, %if.then
  %1047 = load double, double* %retval, align 8, !dbg !5407
  ret double %1047, !dbg !5407
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @FxImage(%struct._Image* %image, i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !5408 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %fx_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !5413, metadata !DIExpression()), !dbg !5414
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata %struct._Image** %fx_image, metadata !5417, metadata !DIExpression()), !dbg !5418
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5419
  %1 = load i8*, i8** %expression.addr, align 8, !dbg !5420
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5421
  %call = call %struct._Image* @FxImageChannel(%struct._Image* %0, i32 1, i8* %1, %struct._ExceptionInfo* %2), !dbg !5422
  store %struct._Image* %call, %struct._Image** %fx_image, align 8, !dbg !5423
  %3 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5424
  ret %struct._Image* %3, !dbg !5425
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @FxImageChannel(%struct._Image* %image, i32 %channel, i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !5426 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %fx_view = alloca %struct._CacheView*, align 8
  %fx_info = alloca %struct._FxInfo**, align 8
  %fx_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %alpha = alloca double, align 8
  %fx_indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata %struct._CacheView** %fx_view, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata %struct._FxInfo*** %fx_info, metadata !5439, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.declare(metadata %struct._Image** %fx_image, metadata !5442, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5444, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5448, metadata !DIExpression()), !dbg !5449
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5450
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5452
  %1 = load i32, i32* %debug, align 8, !dbg !5452
  %cmp = icmp ne i32 %1, 0, !dbg !5453
  br i1 %cmp, label %if.then, label %if.end, !dbg !5454

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5455
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5456
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5455
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3066, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !5457
  br label %if.end, !dbg !5458

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5459
  %4 = load i8*, i8** %expression.addr, align 8, !dbg !5460
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5461
  %call1 = call %struct._FxInfo** @AcquireFxThreadSet(%struct._Image* %3, i8* %4, %struct._ExceptionInfo* %5), !dbg !5462
  store %struct._FxInfo** %call1, %struct._FxInfo*** %fx_info, align 8, !dbg !5463
  %6 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5464
  %cmp2 = icmp eq %struct._FxInfo** %6, null, !dbg !5466
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5467

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5468
  br label %return, !dbg !5468

if.end4:                                          ; preds = %if.end
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5469
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5470
  %call5 = call %struct._Image* @CloneImage(%struct._Image* %7, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %8), !dbg !5471
  store %struct._Image* %call5, %struct._Image** %fx_image, align 8, !dbg !5472
  %9 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5473
  %cmp6 = icmp eq %struct._Image* %9, null, !dbg !5475
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !5476

if.then7:                                         ; preds = %if.end4
  %10 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5477
  %call8 = call %struct._FxInfo** @DestroyFxThreadSet(%struct._FxInfo** %10), !dbg !5479
  store %struct._FxInfo** %call8, %struct._FxInfo*** %fx_info, align 8, !dbg !5480
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5481
  br label %return, !dbg !5481

if.end9:                                          ; preds = %if.end4
  %11 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5482
  %call10 = call i32 @SetImageStorageClass(%struct._Image* %11, i32 1), !dbg !5484
  %cmp11 = icmp eq i32 %call10, 0, !dbg !5485
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !5486

if.then12:                                        ; preds = %if.end9
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5487
  %13 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5489
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !5490
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception13), !dbg !5491
  %14 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5492
  %call14 = call %struct._FxInfo** @DestroyFxThreadSet(%struct._FxInfo** %14), !dbg !5493
  store %struct._FxInfo** %call14, %struct._FxInfo*** %fx_info, align 8, !dbg !5494
  %15 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5495
  %call15 = call %struct._Image* @DestroyImage(%struct._Image* %15), !dbg !5496
  store %struct._Image* %call15, %struct._Image** %fx_image, align 8, !dbg !5497
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5498
  br label %return, !dbg !5498

if.end16:                                         ; preds = %if.end9
  store i32 1, i32* %status, align 4, !dbg !5499
  store i64 0, i64* %progress, align 8, !dbg !5500
  %16 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5501
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5502
  %call17 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %16, %struct._ExceptionInfo* %17), !dbg !5503
  store %struct._CacheView* %call17, %struct._CacheView** %fx_view, align 8, !dbg !5504
  store i64 0, i64* %y, align 8, !dbg !5505
  br label %for.cond, !dbg !5507

for.cond:                                         ; preds = %for.inc112, %if.end16
  %18 = load i64, i64* %y, align 8, !dbg !5508
  %19 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5510
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !5511
  %20 = load i64, i64* %rows, align 8, !dbg !5511
  %cmp18 = icmp slt i64 %18, %20, !dbg !5512
  br i1 %cmp18, label %for.body, label %for.end114, !dbg !5513

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !5514, metadata !DIExpression()), !dbg !5516
  %call19 = call i32 @GetOpenMPThreadId(), !dbg !5517
  store i32 %call19, i32* %id, align 4, !dbg !5516
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !5518, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i16** %fx_indexes, metadata !5520, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5522, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5524, metadata !DIExpression()), !dbg !5525
  %21 = load i32, i32* %status, align 4, !dbg !5526
  %cmp20 = icmp eq i32 %21, 0, !dbg !5528
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !5529

if.then21:                                        ; preds = %for.body
  br label %for.inc112, !dbg !5530

if.end22:                                         ; preds = %for.body
  %22 = load %struct._CacheView*, %struct._CacheView** %fx_view, align 8, !dbg !5531
  %23 = load i64, i64* %y, align 8, !dbg !5532
  %24 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5533
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 7, !dbg !5534
  %25 = load i64, i64* %columns, align 8, !dbg !5534
  %26 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5535
  %call23 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %22, i64 0, i64 %23, i64 %25, i64 1, %struct._ExceptionInfo* %26), !dbg !5536
  store %struct._PixelPacket* %call23, %struct._PixelPacket** %q, align 8, !dbg !5537
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5538
  %cmp24 = icmp eq %struct._PixelPacket* %27, null, !dbg !5540
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5541

if.then25:                                        ; preds = %if.end22
  store i32 0, i32* %status, align 4, !dbg !5542
  br label %for.inc112, !dbg !5544

if.end26:                                         ; preds = %if.end22
  %28 = load %struct._CacheView*, %struct._CacheView** %fx_view, align 8, !dbg !5545
  %call27 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %28), !dbg !5546
  store i16* %call27, i16** %fx_indexes, align 8, !dbg !5547
  store double 0.000000e+00, double* %alpha, align 8, !dbg !5548
  store i64 0, i64* %x, align 8, !dbg !5549
  br label %for.cond28, !dbg !5551

for.cond28:                                       ; preds = %for.inc, %if.end26
  %29 = load i64, i64* %x, align 8, !dbg !5552
  %30 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5554
  %columns29 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !5555
  %31 = load i64, i64* %columns29, align 8, !dbg !5555
  %cmp30 = icmp slt i64 %29, %31, !dbg !5556
  br i1 %cmp30, label %for.body31, label %for.end, !dbg !5557

for.body31:                                       ; preds = %for.cond28
  %32 = load i32, i32* %channel.addr, align 4, !dbg !5558
  %and = and i32 %32, 1, !dbg !5561
  %cmp32 = icmp ne i32 %and, 0, !dbg !5562
  br i1 %cmp32, label %if.then33, label %if.end36, !dbg !5563

if.then33:                                        ; preds = %for.body31
  %33 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5564
  %34 = load i32, i32* %id, align 4, !dbg !5566
  %idxprom = sext i32 %34 to i64, !dbg !5564
  %arrayidx = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %33, i64 %idxprom, !dbg !5564
  %35 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx, align 8, !dbg !5564
  %36 = load i64, i64* %x, align 8, !dbg !5567
  %37 = load i64, i64* %y, align 8, !dbg !5568
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5569
  %call34 = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %35, i32 1, i64 %36, i64 %37, double* %alpha, %struct._ExceptionInfo* %38), !dbg !5570
  %39 = load double, double* %alpha, align 8, !dbg !5571
  %mul = fmul double 6.553500e+04, %39, !dbg !5571
  %conv = fptrunc double %mul to float, !dbg !5571
  %call35 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5571
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5571
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 2, !dbg !5571
  store i16 %call35, i16* %red, align 2, !dbg !5571
  br label %if.end36, !dbg !5572

if.end36:                                         ; preds = %if.then33, %for.body31
  %41 = load i32, i32* %channel.addr, align 4, !dbg !5573
  %and37 = and i32 %41, 2, !dbg !5575
  %cmp38 = icmp ne i32 %and37, 0, !dbg !5576
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !5577

if.then40:                                        ; preds = %if.end36
  %42 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5578
  %43 = load i32, i32* %id, align 4, !dbg !5580
  %idxprom41 = sext i32 %43 to i64, !dbg !5578
  %arrayidx42 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %42, i64 %idxprom41, !dbg !5578
  %44 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx42, align 8, !dbg !5578
  %45 = load i64, i64* %x, align 8, !dbg !5581
  %46 = load i64, i64* %y, align 8, !dbg !5582
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5583
  %call43 = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %44, i32 2, i64 %45, i64 %46, double* %alpha, %struct._ExceptionInfo* %47), !dbg !5584
  %48 = load double, double* %alpha, align 8, !dbg !5585
  %mul44 = fmul double 6.553500e+04, %48, !dbg !5585
  %conv45 = fptrunc double %mul44 to float, !dbg !5585
  %call46 = call zeroext i16 @ClampToQuantum(float %conv45), !dbg !5585
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5585
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 1, !dbg !5585
  store i16 %call46, i16* %green, align 2, !dbg !5585
  br label %if.end47, !dbg !5586

if.end47:                                         ; preds = %if.then40, %if.end36
  %50 = load i32, i32* %channel.addr, align 4, !dbg !5587
  %and48 = and i32 %50, 4, !dbg !5589
  %cmp49 = icmp ne i32 %and48, 0, !dbg !5590
  br i1 %cmp49, label %if.then51, label %if.end58, !dbg !5591

if.then51:                                        ; preds = %if.end47
  %51 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5592
  %52 = load i32, i32* %id, align 4, !dbg !5594
  %idxprom52 = sext i32 %52 to i64, !dbg !5592
  %arrayidx53 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %51, i64 %idxprom52, !dbg !5592
  %53 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx53, align 8, !dbg !5592
  %54 = load i64, i64* %x, align 8, !dbg !5595
  %55 = load i64, i64* %y, align 8, !dbg !5596
  %56 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5597
  %call54 = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %53, i32 4, i64 %54, i64 %55, double* %alpha, %struct._ExceptionInfo* %56), !dbg !5598
  %57 = load double, double* %alpha, align 8, !dbg !5599
  %mul55 = fmul double 6.553500e+04, %57, !dbg !5599
  %conv56 = fptrunc double %mul55 to float, !dbg !5599
  %call57 = call zeroext i16 @ClampToQuantum(float %conv56), !dbg !5599
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5599
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 0, !dbg !5599
  store i16 %call57, i16* %blue, align 2, !dbg !5599
  br label %if.end58, !dbg !5600

if.end58:                                         ; preds = %if.then51, %if.end47
  %59 = load i32, i32* %channel.addr, align 4, !dbg !5601
  %and59 = and i32 %59, 8, !dbg !5603
  %cmp60 = icmp ne i32 %and59, 0, !dbg !5604
  br i1 %cmp60, label %if.then62, label %if.end77, !dbg !5605

if.then62:                                        ; preds = %if.end58
  %60 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5606
  %61 = load i32, i32* %id, align 4, !dbg !5608
  %idxprom63 = sext i32 %61 to i64, !dbg !5606
  %arrayidx64 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %60, i64 %idxprom63, !dbg !5606
  %62 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx64, align 8, !dbg !5606
  %63 = load i64, i64* %x, align 8, !dbg !5609
  %64 = load i64, i64* %y, align 8, !dbg !5610
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5611
  %call65 = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %62, i32 8, i64 %63, i64 %64, double* %alpha, %struct._ExceptionInfo* %65), !dbg !5612
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5613
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 6, !dbg !5615
  %67 = load i32, i32* %matte, align 8, !dbg !5615
  %cmp66 = icmp eq i32 %67, 0, !dbg !5616
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !5617

if.then68:                                        ; preds = %if.then62
  %68 = load double, double* %alpha, align 8, !dbg !5618
  %mul69 = fmul double 6.553500e+04, %68, !dbg !5618
  %conv70 = fptrunc double %mul69 to float, !dbg !5618
  %call71 = call zeroext i16 @ClampToQuantum(float %conv70), !dbg !5618
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5618
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 3, !dbg !5618
  store i16 %call71, i16* %opacity, align 2, !dbg !5618
  br label %if.end76, !dbg !5618

if.else:                                          ; preds = %if.then62
  %70 = load double, double* %alpha, align 8, !dbg !5619
  %mul72 = fmul double 6.553500e+04, %70, !dbg !5619
  %sub = fsub double 6.553500e+04, %mul72, !dbg !5619
  %conv73 = fptrunc double %sub to float, !dbg !5619
  %call74 = call zeroext i16 @ClampToQuantum(float %conv73), !dbg !5619
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5619
  %opacity75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 3, !dbg !5619
  store i16 %call74, i16* %opacity75, align 2, !dbg !5619
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then68
  br label %if.end77, !dbg !5620

if.end77:                                         ; preds = %if.end76, %if.end58
  %72 = load i32, i32* %channel.addr, align 4, !dbg !5621
  %and78 = and i32 %72, 32, !dbg !5623
  %cmp79 = icmp ne i32 %and78, 0, !dbg !5624
  br i1 %cmp79, label %land.lhs.true, label %if.end95, !dbg !5625

land.lhs.true:                                    ; preds = %if.end77
  %73 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5626
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 1, !dbg !5627
  %74 = load i32, i32* %colorspace, align 4, !dbg !5627
  %cmp81 = icmp eq i32 %74, 12, !dbg !5628
  br i1 %cmp81, label %if.then83, label %if.end95, !dbg !5629

if.then83:                                        ; preds = %land.lhs.true
  %75 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5630
  %76 = load i32, i32* %id, align 4, !dbg !5632
  %idxprom84 = sext i32 %76 to i64, !dbg !5630
  %arrayidx85 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %75, i64 %idxprom84, !dbg !5630
  %77 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx85, align 8, !dbg !5630
  %78 = load i64, i64* %x, align 8, !dbg !5633
  %79 = load i64, i64* %y, align 8, !dbg !5634
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5635
  %call86 = call i32 @FxEvaluateChannelExpression(%struct._FxInfo* %77, i32 32, i64 %78, i64 %79, double* %alpha, %struct._ExceptionInfo* %80), !dbg !5636
  %81 = load i16*, i16** %fx_indexes, align 8, !dbg !5637
  %82 = load i64, i64* %x, align 8, !dbg !5637
  %add.ptr = getelementptr inbounds i16, i16* %81, i64 %82, !dbg !5637
  %cmp87 = icmp ne i16* %add.ptr, null, !dbg !5637
  br i1 %cmp87, label %if.then89, label %if.end94, !dbg !5640

if.then89:                                        ; preds = %if.then83
  %83 = load double, double* %alpha, align 8, !dbg !5637
  %mul90 = fmul double 6.553500e+04, %83, !dbg !5637
  %conv91 = fptrunc double %mul90 to float, !dbg !5637
  %call92 = call zeroext i16 @ClampToQuantum(float %conv91), !dbg !5637
  %84 = load i16*, i16** %fx_indexes, align 8, !dbg !5637
  %85 = load i64, i64* %x, align 8, !dbg !5637
  %add.ptr93 = getelementptr inbounds i16, i16* %84, i64 %85, !dbg !5637
  store i16 %call92, i16* %add.ptr93, align 2, !dbg !5637
  br label %if.end94, !dbg !5637

if.end94:                                         ; preds = %if.then89, %if.then83
  br label %if.end95, !dbg !5641

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end77
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5642
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 1, !dbg !5642
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !5642
  br label %for.inc, !dbg !5643

for.inc:                                          ; preds = %if.end95
  %87 = load i64, i64* %x, align 8, !dbg !5644
  %inc = add nsw i64 %87, 1, !dbg !5644
  store i64 %inc, i64* %x, align 8, !dbg !5644
  br label %for.cond28, !dbg !5645, !llvm.loop !5646

for.end:                                          ; preds = %for.cond28
  %88 = load %struct._CacheView*, %struct._CacheView** %fx_view, align 8, !dbg !5648
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5650
  %call96 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %88, %struct._ExceptionInfo* %89), !dbg !5651
  %cmp97 = icmp eq i32 %call96, 0, !dbg !5652
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !5653

if.then99:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !5654
  br label %if.end100, !dbg !5655

if.end100:                                        ; preds = %if.then99, %for.end
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5656
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 47, !dbg !5658
  %91 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5658
  %cmp101 = icmp ne i32 (i8*, i64, i64, i8*)* %91, null, !dbg !5659
  br i1 %cmp101, label %if.then103, label %if.end111, !dbg !5660

if.then103:                                       ; preds = %if.end100
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5661, metadata !DIExpression()), !dbg !5663
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5664
  %93 = load i64, i64* %progress, align 8, !dbg !5665
  %inc104 = add nsw i64 %93, 1, !dbg !5665
  store i64 %inc104, i64* %progress, align 8, !dbg !5665
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5666
  %rows105 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 8, !dbg !5667
  %95 = load i64, i64* %rows105, align 8, !dbg !5667
  %call106 = call i32 @SetImageProgress(%struct._Image* %92, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i64 %93, i64 %95), !dbg !5668
  store i32 %call106, i32* %proceed, align 4, !dbg !5669
  %96 = load i32, i32* %proceed, align 4, !dbg !5670
  %cmp107 = icmp eq i32 %96, 0, !dbg !5672
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !5673

if.then109:                                       ; preds = %if.then103
  store i32 0, i32* %status, align 4, !dbg !5674
  br label %if.end110, !dbg !5675

if.end110:                                        ; preds = %if.then109, %if.then103
  br label %if.end111, !dbg !5676

if.end111:                                        ; preds = %if.end110, %if.end100
  br label %for.inc112, !dbg !5677

for.inc112:                                       ; preds = %if.end111, %if.then25, %if.then21
  %97 = load i64, i64* %y, align 8, !dbg !5678
  %inc113 = add nsw i64 %97, 1, !dbg !5678
  store i64 %inc113, i64* %y, align 8, !dbg !5678
  br label %for.cond, !dbg !5679, !llvm.loop !5680

for.end114:                                       ; preds = %for.cond
  %98 = load %struct._CacheView*, %struct._CacheView** %fx_view, align 8, !dbg !5682
  %call115 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %98), !dbg !5683
  store %struct._CacheView* %call115, %struct._CacheView** %fx_view, align 8, !dbg !5684
  %99 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5685
  %call116 = call %struct._FxInfo** @DestroyFxThreadSet(%struct._FxInfo** %99), !dbg !5686
  store %struct._FxInfo** %call116, %struct._FxInfo*** %fx_info, align 8, !dbg !5687
  %100 = load i32, i32* %status, align 4, !dbg !5688
  %cmp117 = icmp eq i32 %100, 0, !dbg !5690
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !5691

if.then119:                                       ; preds = %for.end114
  %101 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5692
  %call120 = call %struct._Image* @DestroyImage(%struct._Image* %101), !dbg !5693
  store %struct._Image* %call120, %struct._Image** %fx_image, align 8, !dbg !5694
  br label %if.end121, !dbg !5695

if.end121:                                        ; preds = %if.then119, %for.end114
  %102 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5696
  store %struct._Image* %102, %struct._Image** %retval, align 8, !dbg !5697
  br label %return, !dbg !5697

return:                                           ; preds = %if.end121, %if.then12, %if.then7, %if.then3
  %103 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !5698
  ret %struct._Image* %103, !dbg !5698
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._FxInfo** @AcquireFxThreadSet(%struct._Image* %image, i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !5699 {
entry:
  %retval = alloca %struct._FxInfo**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %fx_expression = alloca i8*, align 8
  %alpha = alloca double, align 8
  %fx_info = alloca %struct._FxInfo**, align 8
  %i = alloca i64, align 8
  %number_threads = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !5704, metadata !DIExpression()), !dbg !5705
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5706, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.declare(metadata i8** %fx_expression, metadata !5708, metadata !DIExpression()), !dbg !5709
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !5710, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.declare(metadata %struct._FxInfo*** %fx_info, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5714, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !5716, metadata !DIExpression()), !dbg !5717
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !5718
  store i64 %call, i64* %number_threads, align 8, !dbg !5719
  %0 = load i64, i64* %number_threads, align 8, !dbg !5720
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #13, !dbg !5721
  %1 = bitcast i8* %call1 to %struct._FxInfo**, !dbg !5722
  store %struct._FxInfo** %1, %struct._FxInfo*** %fx_info, align 8, !dbg !5723
  %2 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5724
  %cmp = icmp eq %struct._FxInfo** %2, null, !dbg !5726
  br i1 %cmp, label %if.then, label %if.end, !dbg !5727

if.then:                                          ; preds = %entry
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5728
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5730
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 53, !dbg !5731
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5730
  %call2 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3003, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !5732
  store %struct._FxInfo** null, %struct._FxInfo*** %retval, align 8, !dbg !5733
  br label %return, !dbg !5733

if.end:                                           ; preds = %entry
  %5 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5734
  %6 = bitcast %struct._FxInfo** %5 to i8*, !dbg !5734
  %7 = load i64, i64* %number_threads, align 8, !dbg !5735
  %mul = mul i64 %7, 8, !dbg !5736
  %call3 = call i8* @ResetMagickMemory(i8* %6, i32 0, i64 %mul), !dbg !5737
  %8 = load i8*, i8** %expression.addr, align 8, !dbg !5738
  %9 = load i8, i8* %8, align 1, !dbg !5740
  %conv = sext i8 %9 to i32, !dbg !5740
  %cmp4 = icmp ne i32 %conv, 64, !dbg !5741
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !5742

if.then6:                                         ; preds = %if.end
  %10 = load i8*, i8** %expression.addr, align 8, !dbg !5743
  %call7 = call i8* @ConstantString(i8* %10), !dbg !5744
  store i8* %call7, i8** %fx_expression, align 8, !dbg !5745
  br label %if.end9, !dbg !5746

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %expression.addr, align 8, !dbg !5747
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 1, !dbg !5748
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5749
  %call8 = call i8* @FileToString(i8* %add.ptr, i64 -1, %struct._ExceptionInfo* %12), !dbg !5750
  store i8* %call8, i8** %fx_expression, align 8, !dbg !5751
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  store i64 0, i64* %i, align 8, !dbg !5752
  br label %for.cond, !dbg !5754

for.cond:                                         ; preds = %for.inc, %if.end9
  %13 = load i64, i64* %i, align 8, !dbg !5755
  %14 = load i64, i64* %number_threads, align 8, !dbg !5757
  %cmp10 = icmp slt i64 %13, %14, !dbg !5758
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5759

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5760, metadata !DIExpression()), !dbg !5762
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5763
  %16 = load i8*, i8** %fx_expression, align 8, !dbg !5764
  %call12 = call %struct._FxInfo* @AcquireFxInfo(%struct._Image* %15, i8* %16), !dbg !5765
  %17 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5766
  %18 = load i64, i64* %i, align 8, !dbg !5767
  %arrayidx = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %17, i64 %18, !dbg !5766
  store %struct._FxInfo* %call12, %struct._FxInfo** %arrayidx, align 8, !dbg !5768
  %19 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5769
  %20 = load i64, i64* %i, align 8, !dbg !5771
  %arrayidx13 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %19, i64 %20, !dbg !5769
  %21 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx13, align 8, !dbg !5769
  %cmp14 = icmp eq %struct._FxInfo* %21, null, !dbg !5772
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5773

if.then16:                                        ; preds = %for.body
  br label %for.end, !dbg !5774

if.end17:                                         ; preds = %for.body
  %22 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5775
  %23 = load i64, i64* %i, align 8, !dbg !5776
  %arrayidx18 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %22, i64 %23, !dbg !5775
  %24 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx18, align 8, !dbg !5775
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5777
  %call19 = call i32 @FxPreprocessExpression(%struct._FxInfo* %24, double* %alpha, %struct._ExceptionInfo* %25), !dbg !5778
  store i32 %call19, i32* %status, align 4, !dbg !5779
  %26 = load i32, i32* %status, align 4, !dbg !5780
  %cmp20 = icmp eq i32 %26, 0, !dbg !5782
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5783

if.then22:                                        ; preds = %if.end17
  br label %for.end, !dbg !5784

if.end23:                                         ; preds = %if.end17
  br label %for.inc, !dbg !5785

for.inc:                                          ; preds = %if.end23
  %27 = load i64, i64* %i, align 8, !dbg !5786
  %inc = add nsw i64 %27, 1, !dbg !5786
  store i64 %inc, i64* %i, align 8, !dbg !5786
  br label %for.cond, !dbg !5787, !llvm.loop !5788

for.end:                                          ; preds = %if.then22, %if.then16, %for.cond
  %28 = load i8*, i8** %fx_expression, align 8, !dbg !5790
  %call24 = call i8* @DestroyString(i8* %28), !dbg !5791
  store i8* %call24, i8** %fx_expression, align 8, !dbg !5792
  %29 = load i64, i64* %i, align 8, !dbg !5793
  %30 = load i64, i64* %number_threads, align 8, !dbg !5795
  %cmp25 = icmp slt i64 %29, %30, !dbg !5796
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !5797

if.then27:                                        ; preds = %for.end
  %31 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5798
  %call28 = call %struct._FxInfo** @DestroyFxThreadSet(%struct._FxInfo** %31), !dbg !5799
  store %struct._FxInfo** %call28, %struct._FxInfo*** %fx_info, align 8, !dbg !5800
  br label %if.end29, !dbg !5801

if.end29:                                         ; preds = %if.then27, %for.end
  %32 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info, align 8, !dbg !5802
  store %struct._FxInfo** %32, %struct._FxInfo*** %retval, align 8, !dbg !5803
  br label %return, !dbg !5803

return:                                           ; preds = %if.end29, %if.then
  %33 = load %struct._FxInfo**, %struct._FxInfo*** %retval, align 8, !dbg !5804
  ret %struct._FxInfo** %33, !dbg !5804
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._FxInfo** @DestroyFxThreadSet(%struct._FxInfo** %fx_info) #0 !dbg !5805 {
entry:
  %fx_info.addr = alloca %struct._FxInfo**, align 8
  %i = alloca i64, align 8
  store %struct._FxInfo** %fx_info, %struct._FxInfo*** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo*** %fx_info.addr, metadata !5808, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5810, metadata !DIExpression()), !dbg !5811
  store i64 0, i64* %i, align 8, !dbg !5812
  br label %for.cond, !dbg !5814

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !5815
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !5817
  %cmp = icmp slt i64 %0, %call, !dbg !5818
  br i1 %cmp, label %for.body, label %for.end, !dbg !5819

for.body:                                         ; preds = %for.cond
  %1 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5820
  %2 = load i64, i64* %i, align 8, !dbg !5822
  %arrayidx = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %1, i64 %2, !dbg !5820
  %3 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx, align 8, !dbg !5820
  %cmp1 = icmp ne %struct._FxInfo* %3, null, !dbg !5823
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5824

if.then:                                          ; preds = %for.body
  %4 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5825
  %5 = load i64, i64* %i, align 8, !dbg !5826
  %arrayidx2 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %4, i64 %5, !dbg !5825
  %6 = load %struct._FxInfo*, %struct._FxInfo** %arrayidx2, align 8, !dbg !5825
  %call3 = call %struct._FxInfo* @DestroyFxInfo(%struct._FxInfo* %6), !dbg !5827
  %7 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5828
  %8 = load i64, i64* %i, align 8, !dbg !5829
  %arrayidx4 = getelementptr inbounds %struct._FxInfo*, %struct._FxInfo** %7, i64 %8, !dbg !5828
  store %struct._FxInfo* %call3, %struct._FxInfo** %arrayidx4, align 8, !dbg !5830
  br label %if.end, !dbg !5828

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5831

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !5832
  %inc = add nsw i64 %9, 1, !dbg !5832
  store i64 %inc, i64* %i, align 8, !dbg !5832
  br label %for.cond, !dbg !5833, !llvm.loop !5834

for.end:                                          ; preds = %for.cond
  %10 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5836
  %11 = bitcast %struct._FxInfo** %10 to i8*, !dbg !5836
  %call5 = call i8* @RelinquishMagickMemory(i8* %11), !dbg !5837
  %12 = bitcast i8* %call5 to %struct._FxInfo**, !dbg !5838
  store %struct._FxInfo** %12, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5839
  %13 = load %struct._FxInfo**, %struct._FxInfo*** %fx_info.addr, align 8, !dbg !5840
  ret %struct._FxInfo** %13, !dbg !5841
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ImplodeImage(%struct._Image* %image, double %amount, %struct._ExceptionInfo* %exception) #0 !dbg !5842 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %amount.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %implode_view = alloca %struct._CacheView*, align 8
  %radius = alloca double, align 8
  %implode_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %center = alloca %struct._PointInfo, align 8
  %scale = alloca %struct._PointInfo, align 8
  %y = alloca i64, align 8
  %distance = alloca double, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %delta = alloca %struct._PointInfo, align 8
  %implode_indexes = alloca i16*, align 8
  %x51 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %factor = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  store double %amount, double* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amount.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata %struct._CacheView** %implode_view, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata double* %radius, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata %struct._Image** %implode_image, metadata !5855, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5857, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %scale, metadata !5865, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5867, metadata !DIExpression()), !dbg !5868
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5869
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5871
  %1 = load i32, i32* %debug, align 8, !dbg !5871
  %cmp = icmp ne i32 %1, 0, !dbg !5872
  br i1 %cmp, label %if.then, label %if.end, !dbg !5873

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5874
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5875
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5874
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3254, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !5876
  br label %if.end, !dbg !5877

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5878
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5879
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !5880
  store %struct._Image* %call1, %struct._Image** %implode_image, align 8, !dbg !5881
  %5 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5882
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !5884
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5885

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5886
  br label %return, !dbg !5886

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5887
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 1), !dbg !5889
  %cmp6 = icmp eq i32 %call5, 0, !dbg !5890
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !5891

if.then7:                                         ; preds = %if.end4
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5892
  %8 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5894
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !5895
  call void @InheritException(%struct._ExceptionInfo* %7, %struct._ExceptionInfo* %exception8), !dbg !5896
  %9 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5897
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %9), !dbg !5898
  store %struct._Image* %call9, %struct._Image** %implode_image, align 8, !dbg !5899
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5900
  br label %return, !dbg !5900

if.end10:                                         ; preds = %if.end4
  %10 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5901
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !5903
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !5904
  %11 = load i16, i16* %opacity, align 2, !dbg !5904
  %conv = zext i16 %11 to i32, !dbg !5901
  %cmp11 = icmp ne i32 %conv, 0, !dbg !5905
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !5906

if.then13:                                        ; preds = %if.end10
  %12 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5907
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 6, !dbg !5908
  store i32 1, i32* %matte, align 8, !dbg !5909
  br label %if.end14, !dbg !5907

if.end14:                                         ; preds = %if.then13, %if.end10
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !5910
  store double 1.000000e+00, double* %x, align 8, !dbg !5911
  %y15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5912
  store double 1.000000e+00, double* %y15, align 8, !dbg !5913
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5914
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !5915
  %14 = load i64, i64* %columns, align 8, !dbg !5915
  %conv16 = uitofp i64 %14 to double, !dbg !5914
  %mul = fmul double 5.000000e-01, %conv16, !dbg !5916
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !5917
  store double %mul, double* %x17, align 8, !dbg !5918
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5919
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !5920
  %16 = load i64, i64* %rows, align 8, !dbg !5920
  %conv18 = uitofp i64 %16 to double, !dbg !5919
  %mul19 = fmul double 5.000000e-01, %conv18, !dbg !5921
  %y20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !5922
  store double %mul19, double* %y20, align 8, !dbg !5923
  %x21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !5924
  %17 = load double, double* %x21, align 8, !dbg !5924
  store double %17, double* %radius, align 8, !dbg !5925
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5926
  %columns22 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 7, !dbg !5928
  %19 = load i64, i64* %columns22, align 8, !dbg !5928
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5929
  %rows23 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 8, !dbg !5930
  %21 = load i64, i64* %rows23, align 8, !dbg !5930
  %cmp24 = icmp ugt i64 %19, %21, !dbg !5931
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !5932

if.then26:                                        ; preds = %if.end14
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5933
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !5934
  %23 = load i64, i64* %columns27, align 8, !dbg !5934
  %conv28 = uitofp i64 %23 to double, !dbg !5935
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5936
  %rows29 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 8, !dbg !5937
  %25 = load i64, i64* %rows29, align 8, !dbg !5937
  %conv30 = uitofp i64 %25 to double, !dbg !5938
  %div = fdiv double %conv28, %conv30, !dbg !5939
  %y31 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5940
  store double %div, double* %y31, align 8, !dbg !5941
  br label %if.end45, !dbg !5942

if.else:                                          ; preds = %if.end14
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5943
  %columns32 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !5945
  %27 = load i64, i64* %columns32, align 8, !dbg !5945
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5946
  %rows33 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 8, !dbg !5947
  %29 = load i64, i64* %rows33, align 8, !dbg !5947
  %cmp34 = icmp ult i64 %27, %29, !dbg !5948
  br i1 %cmp34, label %if.then36, label %if.end44, !dbg !5949

if.then36:                                        ; preds = %if.else
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5950
  %rows37 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !5952
  %31 = load i64, i64* %rows37, align 8, !dbg !5952
  %conv38 = uitofp i64 %31 to double, !dbg !5953
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5954
  %columns39 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 7, !dbg !5955
  %33 = load i64, i64* %columns39, align 8, !dbg !5955
  %conv40 = uitofp i64 %33 to double, !dbg !5956
  %div41 = fdiv double %conv38, %conv40, !dbg !5957
  %x42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !5958
  store double %div41, double* %x42, align 8, !dbg !5959
  %y43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !5960
  %34 = load double, double* %y43, align 8, !dbg !5960
  store double %34, double* %radius, align 8, !dbg !5961
  br label %if.end44, !dbg !5962

if.end44:                                         ; preds = %if.then36, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then26
  store i32 1, i32* %status, align 4, !dbg !5963
  store i64 0, i64* %progress, align 8, !dbg !5964
  %35 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5965
  call void @GetMagickPixelPacket(%struct._Image* %35, %struct._MagickPixelPacket* %zero), !dbg !5966
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5967
  %37 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5968
  %call46 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %36, %struct._ExceptionInfo* %37), !dbg !5969
  store %struct._CacheView* %call46, %struct._CacheView** %image_view, align 8, !dbg !5970
  %38 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !5971
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5972
  %call47 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %38, %struct._ExceptionInfo* %39), !dbg !5973
  store %struct._CacheView* %call47, %struct._CacheView** %implode_view, align 8, !dbg !5974
  store i64 0, i64* %y, align 8, !dbg !5975
  br label %for.cond, !dbg !5977

for.cond:                                         ; preds = %for.inc129, %if.end45
  %40 = load i64, i64* %y, align 8, !dbg !5978
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5980
  %rows48 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 8, !dbg !5981
  %42 = load i64, i64* %rows48, align 8, !dbg !5981
  %cmp49 = icmp slt i64 %40, %42, !dbg !5982
  br i1 %cmp49, label %for.body, label %for.end131, !dbg !5983

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %distance, metadata !5984, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.declare(metadata i16** %implode_indexes, metadata !5991, metadata !DIExpression()), !dbg !5992
  call void @llvm.dbg.declare(metadata i64* %x51, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5995, metadata !DIExpression()), !dbg !5996
  %43 = load i32, i32* %status, align 4, !dbg !5997
  %cmp52 = icmp eq i32 %43, 0, !dbg !5999
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !6000

if.then54:                                        ; preds = %for.body
  br label %for.inc129, !dbg !6001

if.end55:                                         ; preds = %for.body
  %44 = load %struct._CacheView*, %struct._CacheView** %implode_view, align 8, !dbg !6002
  %45 = load i64, i64* %y, align 8, !dbg !6003
  %46 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !6004
  %columns56 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 7, !dbg !6005
  %47 = load i64, i64* %columns56, align 8, !dbg !6005
  %48 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6006
  %call57 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %44, i64 0, i64 %45, i64 %47, i64 1, %struct._ExceptionInfo* %48), !dbg !6007
  store %struct._PixelPacket* %call57, %struct._PixelPacket** %q, align 8, !dbg !6008
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6009
  %cmp58 = icmp eq %struct._PixelPacket* %49, null, !dbg !6011
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !6012

if.then60:                                        ; preds = %if.end55
  store i32 0, i32* %status, align 4, !dbg !6013
  br label %for.inc129, !dbg !6015

if.end61:                                         ; preds = %if.end55
  %50 = load %struct._CacheView*, %struct._CacheView** %implode_view, align 8, !dbg !6016
  %call62 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %50), !dbg !6017
  store i16* %call62, i16** %implode_indexes, align 8, !dbg !6018
  %y63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !6019
  %51 = load double, double* %y63, align 8, !dbg !6019
  %52 = load i64, i64* %y, align 8, !dbg !6020
  %conv64 = sitofp i64 %52 to double, !dbg !6020
  %y65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !6021
  %53 = load double, double* %y65, align 8, !dbg !6021
  %sub = fsub double %conv64, %53, !dbg !6022
  %mul66 = fmul double %51, %sub, !dbg !6023
  %y67 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !6024
  store double %mul66, double* %y67, align 8, !dbg !6025
  %54 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !6026
  %55 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 56, i1 false), !dbg !6026
  store i64 0, i64* %x51, align 8, !dbg !6027
  br label %for.cond68, !dbg !6029

for.cond68:                                       ; preds = %for.inc, %if.end61
  %56 = load i64, i64* %x51, align 8, !dbg !6030
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6032
  %columns69 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 7, !dbg !6033
  %58 = load i64, i64* %columns69, align 8, !dbg !6033
  %cmp70 = icmp slt i64 %56, %58, !dbg !6034
  br i1 %cmp70, label %for.body72, label %for.end, !dbg !6035

for.body72:                                       ; preds = %for.cond68
  %x73 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6036
  %59 = load double, double* %x73, align 8, !dbg !6036
  %60 = load i64, i64* %x51, align 8, !dbg !6038
  %conv74 = sitofp i64 %60 to double, !dbg !6038
  %x75 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !6039
  %61 = load double, double* %x75, align 8, !dbg !6039
  %sub76 = fsub double %conv74, %61, !dbg !6040
  %mul77 = fmul double %59, %sub76, !dbg !6041
  %x78 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !6042
  store double %mul77, double* %x78, align 8, !dbg !6043
  %x79 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !6044
  %62 = load double, double* %x79, align 8, !dbg !6044
  %x80 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !6045
  %63 = load double, double* %x80, align 8, !dbg !6045
  %mul81 = fmul double %62, %63, !dbg !6046
  %y82 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !6047
  %64 = load double, double* %y82, align 8, !dbg !6047
  %y83 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !6048
  %65 = load double, double* %y83, align 8, !dbg !6048
  %mul84 = fmul double %64, %65, !dbg !6049
  %add = fadd double %mul81, %mul84, !dbg !6050
  store double %add, double* %distance, align 8, !dbg !6051
  %66 = load double, double* %distance, align 8, !dbg !6052
  %67 = load double, double* %radius, align 8, !dbg !6054
  %68 = load double, double* %radius, align 8, !dbg !6055
  %mul85 = fmul double %67, %68, !dbg !6056
  %cmp86 = fcmp olt double %66, %mul85, !dbg !6057
  br i1 %cmp86, label %if.then88, label %if.end112, !dbg !6058

if.then88:                                        ; preds = %for.body72
  call void @llvm.dbg.declare(metadata double* %factor, metadata !6059, metadata !DIExpression()), !dbg !6061
  store double 1.000000e+00, double* %factor, align 8, !dbg !6062
  %69 = load double, double* %distance, align 8, !dbg !6063
  %cmp89 = fcmp ogt double %69, 0.000000e+00, !dbg !6065
  br i1 %cmp89, label %if.then91, label %if.end98, !dbg !6066

if.then91:                                        ; preds = %if.then88
  %70 = load double, double* %distance, align 8, !dbg !6067
  %call92 = call double @sqrt(double %70) #14, !dbg !6068
  %mul93 = fmul double 0x400921FB54442D18, %call92, !dbg !6069
  %71 = load double, double* %radius, align 8, !dbg !6070
  %div94 = fdiv double %mul93, %71, !dbg !6071
  %div95 = fdiv double %div94, 2.000000e+00, !dbg !6072
  %call96 = call double @sin(double %div95) #14, !dbg !6073
  %72 = load double, double* %amount.addr, align 8, !dbg !6074
  %fneg = fneg double %72, !dbg !6075
  %call97 = call double @pow(double %call96, double %fneg) #14, !dbg !6076
  store double %call97, double* %factor, align 8, !dbg !6077
  br label %if.end98, !dbg !6078

if.end98:                                         ; preds = %if.then91, %if.then88
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6079
  %74 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6080
  %75 = load double, double* %factor, align 8, !dbg !6081
  %x99 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !6082
  %76 = load double, double* %x99, align 8, !dbg !6082
  %mul100 = fmul double %75, %76, !dbg !6083
  %x101 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6084
  %77 = load double, double* %x101, align 8, !dbg !6084
  %div102 = fdiv double %mul100, %77, !dbg !6085
  %x103 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !6086
  %78 = load double, double* %x103, align 8, !dbg !6086
  %add104 = fadd double %div102, %78, !dbg !6087
  %79 = load double, double* %factor, align 8, !dbg !6088
  %y105 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !6089
  %80 = load double, double* %y105, align 8, !dbg !6089
  %mul106 = fmul double %79, %80, !dbg !6090
  %y107 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !6091
  %81 = load double, double* %y107, align 8, !dbg !6091
  %div108 = fdiv double %mul106, %81, !dbg !6092
  %y109 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !6093
  %82 = load double, double* %y109, align 8, !dbg !6093
  %add110 = fadd double %div108, %82, !dbg !6094
  %83 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6095
  %call111 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %73, %struct._CacheView* %74, i32 0, double %add104, double %add110, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %83), !dbg !6096
  %84 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !6097
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6098
  %86 = load i16*, i16** %implode_indexes, align 8, !dbg !6099
  %87 = load i64, i64* %x51, align 8, !dbg !6100
  %add.ptr = getelementptr inbounds i16, i16* %86, i64 %87, !dbg !6101
  call void @SetPixelPacket(%struct._Image* %84, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %85, i16* %add.ptr), !dbg !6102
  br label %if.end112, !dbg !6103

if.end112:                                        ; preds = %if.end98, %for.body72
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6104
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !6104
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !6104
  br label %for.inc, !dbg !6105

for.inc:                                          ; preds = %if.end112
  %89 = load i64, i64* %x51, align 8, !dbg !6106
  %inc = add nsw i64 %89, 1, !dbg !6106
  store i64 %inc, i64* %x51, align 8, !dbg !6106
  br label %for.cond68, !dbg !6107, !llvm.loop !6108

for.end:                                          ; preds = %for.cond68
  %90 = load %struct._CacheView*, %struct._CacheView** %implode_view, align 8, !dbg !6110
  %91 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6112
  %call113 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %90, %struct._ExceptionInfo* %91), !dbg !6113
  %cmp114 = icmp eq i32 %call113, 0, !dbg !6114
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !6115

if.then116:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !6116
  br label %if.end117, !dbg !6117

if.end117:                                        ; preds = %if.then116, %for.end
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6118
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 47, !dbg !6120
  %93 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !6120
  %cmp118 = icmp ne i32 (i8*, i64, i64, i8*)* %93, null, !dbg !6121
  br i1 %cmp118, label %if.then120, label %if.end128, !dbg !6122

if.then120:                                       ; preds = %if.end117
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !6123, metadata !DIExpression()), !dbg !6125
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6126
  %95 = load i64, i64* %progress, align 8, !dbg !6127
  %inc121 = add nsw i64 %95, 1, !dbg !6127
  store i64 %inc121, i64* %progress, align 8, !dbg !6127
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6128
  %rows122 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 8, !dbg !6129
  %97 = load i64, i64* %rows122, align 8, !dbg !6129
  %call123 = call i32 @SetImageProgress(%struct._Image* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i64 %95, i64 %97), !dbg !6130
  store i32 %call123, i32* %proceed, align 4, !dbg !6131
  %98 = load i32, i32* %proceed, align 4, !dbg !6132
  %cmp124 = icmp eq i32 %98, 0, !dbg !6134
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !6135

if.then126:                                       ; preds = %if.then120
  store i32 0, i32* %status, align 4, !dbg !6136
  br label %if.end127, !dbg !6137

if.end127:                                        ; preds = %if.then126, %if.then120
  br label %if.end128, !dbg !6138

if.end128:                                        ; preds = %if.end127, %if.end117
  br label %for.inc129, !dbg !6139

for.inc129:                                       ; preds = %if.end128, %if.then60, %if.then54
  %99 = load i64, i64* %y, align 8, !dbg !6140
  %inc130 = add nsw i64 %99, 1, !dbg !6140
  store i64 %inc130, i64* %y, align 8, !dbg !6140
  br label %for.cond, !dbg !6141, !llvm.loop !6142

for.end131:                                       ; preds = %for.cond
  %100 = load %struct._CacheView*, %struct._CacheView** %implode_view, align 8, !dbg !6144
  %call132 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %100), !dbg !6145
  store %struct._CacheView* %call132, %struct._CacheView** %implode_view, align 8, !dbg !6146
  %101 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6147
  %call133 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %101), !dbg !6148
  store %struct._CacheView* %call133, %struct._CacheView** %image_view, align 8, !dbg !6149
  %102 = load i32, i32* %status, align 4, !dbg !6150
  %cmp134 = icmp eq i32 %102, 0, !dbg !6152
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !6153

if.then136:                                       ; preds = %for.end131
  %103 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !6154
  %call137 = call %struct._Image* @DestroyImage(%struct._Image* %103), !dbg !6155
  store %struct._Image* %call137, %struct._Image** %implode_image, align 8, !dbg !6156
  br label %if.end138, !dbg !6157

if.end138:                                        ; preds = %if.then136, %for.end131
  %104 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !6158
  store %struct._Image* %104, %struct._Image** %retval, align 8, !dbg !6159
  br label %return, !dbg !6159

return:                                           ; preds = %if.end138, %if.then7, %if.then3
  %105 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !6160
  ret %struct._Image* %105, !dbg !6160
}

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #8

; Function Attrs: nounwind
declare dso_local double @sin(double) #8

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #8

declare dso_local i32 @InterpolateMagickPixelPacket(%struct._Image*, %struct._CacheView*, i32, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !6161 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6167, metadata !DIExpression()), !dbg !6168
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6169, metadata !DIExpression()), !dbg !6170
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6175
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !6175
  %1 = load float, float* %red, align 8, !dbg !6175
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !6175
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6175
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !6175
  store i16 %call, i16* %red1, align 2, !dbg !6175
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6176
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !6176
  %4 = load float, float* %green, align 4, !dbg !6176
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !6176
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6176
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !6176
  store i16 %call2, i16* %green3, align 2, !dbg !6176
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6177
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !6177
  %7 = load float, float* %blue, align 8, !dbg !6177
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !6177
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6177
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !6177
  store i16 %call4, i16* %blue5, align 2, !dbg !6177
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6178
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !6178
  %10 = load float, float* %opacity, align 4, !dbg !6178
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !6178
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6178
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !6178
  store i16 %call6, i16* %opacity7, align 2, !dbg !6178
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6179
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !6181
  %13 = load i32, i32* %colorspace, align 4, !dbg !6181
  %cmp = icmp eq i32 %13, 12, !dbg !6182
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6183

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6184
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !6185
  %15 = load i32, i32* %storage_class, align 8, !dbg !6185
  %cmp8 = icmp eq i32 %15, 2, !dbg !6186
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !6187

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !6188
  %cmp9 = icmp ne i16* %16, null, !dbg !6188
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !6191

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6188
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !6188
  %18 = load float, float* %index11, align 8, !dbg !6188
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !6188
  %19 = load i16*, i16** %index.addr, align 8, !dbg !6188
  store i16 %call12, i16* %19, align 2, !dbg !6188
  br label %if.end, !dbg !6188

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !6191

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !6192
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MorphImages(%struct._Image* %image, i64 %number_frames, %struct._ExceptionInfo* %exception) #0 !dbg !6193 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %number_frames.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %morph_image = alloca %struct._Image*, align 8
  %morph_images = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %scene = alloca i64, align 8
  %next = alloca %struct._Image*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %proceed = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %morph_view = alloca %struct._CacheView*, align 8
  %sync = alloca i32, align 4
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed180 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  store i64 %number_frames, i64* %number_frames.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_frames.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !6202, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.declare(metadata double* %beta, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata %struct._Image** %morph_image, metadata !6206, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.declare(metadata %struct._Image** %morph_images, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i64* %scene, metadata !6212, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.declare(metadata %struct._Image** %next, metadata !6214, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6216, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6218, metadata !DIExpression()), !dbg !6219
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6220
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6222
  %1 = load i32, i32* %debug, align 8, !dbg !6222
  %cmp = icmp ne i32 %1, 0, !dbg !6223
  br i1 %cmp, label %if.then, label %if.end, !dbg !6224

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6225
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6226
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6225
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3441, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !6227
  br label %if.end, !dbg !6228

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6229
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6230
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !6231
  store %struct._Image* %call1, %struct._Image** %morph_images, align 8, !dbg !6232
  %5 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6233
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !6235
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6236

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6237
  br label %return, !dbg !6237

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6238
  %call5 = call %struct._Image* @GetNextImageInList(%struct._Image* %6), !dbg !6240
  %cmp6 = icmp eq %struct._Image* %call5, null, !dbg !6241
  br i1 %cmp6, label %if.then7, label %if.end22, !dbg !6242

if.then7:                                         ; preds = %if.end4
  store i64 1, i64* %i, align 8, !dbg !6243
  br label %for.cond, !dbg !6246

for.cond:                                         ; preds = %for.inc, %if.then7
  %7 = load i64, i64* %i, align 8, !dbg !6247
  %8 = load i64, i64* %number_frames.addr, align 8, !dbg !6249
  %cmp8 = icmp slt i64 %7, %8, !dbg !6250
  br i1 %cmp8, label %for.body, label %for.end, !dbg !6251

for.body:                                         ; preds = %for.cond
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6252
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6254
  %call9 = call %struct._Image* @CloneImage(%struct._Image* %9, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %10), !dbg !6255
  store %struct._Image* %call9, %struct._Image** %morph_image, align 8, !dbg !6256
  %11 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6257
  %cmp10 = icmp eq %struct._Image* %11, null, !dbg !6259
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !6260

if.then11:                                        ; preds = %for.body
  %12 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6261
  %call12 = call %struct._Image* @DestroyImageList(%struct._Image* %12), !dbg !6263
  store %struct._Image* %call12, %struct._Image** %morph_images, align 8, !dbg !6264
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6265
  br label %return, !dbg !6265

if.end13:                                         ; preds = %for.body
  %13 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6266
  call void @AppendImageToList(%struct._Image** %morph_images, %struct._Image* %13), !dbg !6267
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6268
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 47, !dbg !6270
  %15 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !6270
  %cmp14 = icmp ne i32 (i8*, i64, i64, i8*)* %15, null, !dbg !6271
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !6272

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !6273, metadata !DIExpression()), !dbg !6275
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6276
  %17 = load i64, i64* %i, align 8, !dbg !6277
  %18 = load i64, i64* %number_frames.addr, align 8, !dbg !6278
  %call16 = call i32 @SetImageProgress(%struct._Image* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i64 %17, i64 %18), !dbg !6279
  store i32 %call16, i32* %proceed, align 4, !dbg !6280
  %19 = load i32, i32* %proceed, align 4, !dbg !6281
  %cmp17 = icmp eq i32 %19, 0, !dbg !6283
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6284

if.then18:                                        ; preds = %if.then15
  store i32 0, i32* %status, align 4, !dbg !6285
  br label %if.end19, !dbg !6286

if.end19:                                         ; preds = %if.then18, %if.then15
  br label %if.end20, !dbg !6287

if.end20:                                         ; preds = %if.end19, %if.end13
  br label %for.inc, !dbg !6288

for.inc:                                          ; preds = %if.end20
  %20 = load i64, i64* %i, align 8, !dbg !6289
  %inc = add nsw i64 %20, 1, !dbg !6289
  store i64 %inc, i64* %i, align 8, !dbg !6289
  br label %for.cond, !dbg !6290, !llvm.loop !6291

for.end:                                          ; preds = %for.cond
  %21 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6293
  %call21 = call %struct._Image* @GetFirstImageInList(%struct._Image* %21), !dbg !6294
  store %struct._Image* %call21, %struct._Image** %retval, align 8, !dbg !6295
  br label %return, !dbg !6295

if.end22:                                         ; preds = %if.end4
  store i32 1, i32* %status, align 4, !dbg !6296
  store i64 0, i64* %scene, align 8, !dbg !6297
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6298
  store %struct._Image* %22, %struct._Image** %next, align 8, !dbg !6299
  br label %for.cond23, !dbg !6300

for.cond23:                                       ; preds = %for.inc189, %if.end22
  %23 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6301
  %call24 = call %struct._Image* @GetNextImageInList(%struct._Image* %23), !dbg !6304
  %cmp25 = icmp ne %struct._Image* %call24, null, !dbg !6305
  br i1 %cmp25, label %for.body26, label %for.end191, !dbg !6306

for.body26:                                       ; preds = %for.cond23
  store i64 0, i64* %i, align 8, !dbg !6307
  br label %for.cond27, !dbg !6310

for.cond27:                                       ; preds = %for.inc161, %for.body26
  %24 = load i64, i64* %i, align 8, !dbg !6311
  %25 = load i64, i64* %number_frames.addr, align 8, !dbg !6313
  %cmp28 = icmp slt i64 %24, %25, !dbg !6314
  br i1 %cmp28, label %for.body29, label %for.end163, !dbg !6315

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !6316, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.declare(metadata %struct._CacheView** %morph_view, metadata !6319, metadata !DIExpression()), !dbg !6320
  %26 = load i64, i64* %i, align 8, !dbg !6321
  %conv = sitofp i64 %26 to double, !dbg !6321
  %add = fadd double %conv, 1.000000e+00, !dbg !6322
  %27 = load i64, i64* %number_frames.addr, align 8, !dbg !6323
  %conv30 = uitofp i64 %27 to double, !dbg !6323
  %add31 = fadd double %conv30, 1.000000e+00, !dbg !6324
  %div = fdiv double %add, %add31, !dbg !6325
  store double %div, double* %beta, align 8, !dbg !6326
  %28 = load double, double* %beta, align 8, !dbg !6327
  %sub = fsub double 1.000000e+00, %28, !dbg !6328
  store double %sub, double* %alpha, align 8, !dbg !6329
  %29 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6330
  %30 = load double, double* %alpha, align 8, !dbg !6331
  %31 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6332
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 7, !dbg !6333
  %32 = load i64, i64* %columns, align 8, !dbg !6333
  %conv32 = uitofp i64 %32 to double, !dbg !6332
  %mul = fmul double %30, %conv32, !dbg !6334
  %33 = load double, double* %beta, align 8, !dbg !6335
  %34 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6336
  %call33 = call %struct._Image* @GetNextImageInList(%struct._Image* %34), !dbg !6337
  %columns34 = getelementptr inbounds %struct._Image, %struct._Image* %call33, i32 0, i32 7, !dbg !6338
  %35 = load i64, i64* %columns34, align 8, !dbg !6338
  %conv35 = uitofp i64 %35 to double, !dbg !6337
  %mul36 = fmul double %33, %conv35, !dbg !6339
  %add37 = fadd double %mul, %mul36, !dbg !6340
  %add38 = fadd double %add37, 5.000000e-01, !dbg !6341
  %conv39 = fptoui double %add38 to i64, !dbg !6342
  %36 = load double, double* %alpha, align 8, !dbg !6343
  %37 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6344
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 8, !dbg !6345
  %38 = load i64, i64* %rows, align 8, !dbg !6345
  %conv40 = uitofp i64 %38 to double, !dbg !6344
  %mul41 = fmul double %36, %conv40, !dbg !6346
  %39 = load double, double* %beta, align 8, !dbg !6347
  %40 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6348
  %call42 = call %struct._Image* @GetNextImageInList(%struct._Image* %40), !dbg !6349
  %rows43 = getelementptr inbounds %struct._Image, %struct._Image* %call42, i32 0, i32 8, !dbg !6350
  %41 = load i64, i64* %rows43, align 8, !dbg !6350
  %conv44 = uitofp i64 %41 to double, !dbg !6349
  %mul45 = fmul double %39, %conv44, !dbg !6351
  %add46 = fadd double %mul41, %mul45, !dbg !6352
  %add47 = fadd double %add46, 5.000000e-01, !dbg !6353
  %conv48 = fptoui double %add47 to i64, !dbg !6354
  %42 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6355
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 32, !dbg !6356
  %43 = load i32, i32* %filter, align 8, !dbg !6356
  %44 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6357
  %blur = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 30, !dbg !6358
  %45 = load double, double* %blur, align 8, !dbg !6358
  %46 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6359
  %call49 = call %struct._Image* @ResizeImage(%struct._Image* %29, i64 %conv39, i64 %conv48, i32 %43, double %45, %struct._ExceptionInfo* %46), !dbg !6360
  store %struct._Image* %call49, %struct._Image** %morph_image, align 8, !dbg !6361
  %47 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6362
  %cmp50 = icmp eq %struct._Image* %47, null, !dbg !6364
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !6365

if.then52:                                        ; preds = %for.body29
  %48 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6366
  %call53 = call %struct._Image* @DestroyImageList(%struct._Image* %48), !dbg !6368
  store %struct._Image* %call53, %struct._Image** %morph_images, align 8, !dbg !6369
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6370
  br label %return, !dbg !6370

if.end54:                                         ; preds = %for.body29
  %49 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6371
  %call55 = call i32 @SetImageStorageClass(%struct._Image* %49, i32 1), !dbg !6373
  %cmp56 = icmp eq i32 %call55, 0, !dbg !6374
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !6375

if.then58:                                        ; preds = %if.end54
  %50 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6376
  %51 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6378
  %exception59 = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 58, !dbg !6379
  call void @InheritException(%struct._ExceptionInfo* %50, %struct._ExceptionInfo* %exception59), !dbg !6380
  %52 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6381
  %call60 = call %struct._Image* @DestroyImage(%struct._Image* %52), !dbg !6382
  store %struct._Image* %call60, %struct._Image** %morph_image, align 8, !dbg !6383
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6384
  br label %return, !dbg !6384

if.end61:                                         ; preds = %if.end54
  %53 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6385
  call void @AppendImageToList(%struct._Image** %morph_images, %struct._Image* %53), !dbg !6386
  %54 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6387
  %call62 = call %struct._Image* @GetLastImageInList(%struct._Image* %54), !dbg !6388
  store %struct._Image* %call62, %struct._Image** %morph_images, align 8, !dbg !6389
  %55 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6390
  %call63 = call %struct._Image* @GetNextImageInList(%struct._Image* %55), !dbg !6391
  %56 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6392
  %columns64 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 7, !dbg !6393
  %57 = load i64, i64* %columns64, align 8, !dbg !6393
  %58 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6394
  %rows65 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 8, !dbg !6395
  %59 = load i64, i64* %rows65, align 8, !dbg !6395
  %60 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6396
  %call66 = call %struct._Image* @GetNextImageInList(%struct._Image* %60), !dbg !6397
  %filter67 = getelementptr inbounds %struct._Image, %struct._Image* %call66, i32 0, i32 32, !dbg !6398
  %61 = load i32, i32* %filter67, align 8, !dbg !6398
  %62 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6399
  %call68 = call %struct._Image* @GetNextImageInList(%struct._Image* %62), !dbg !6400
  %blur69 = getelementptr inbounds %struct._Image, %struct._Image* %call68, i32 0, i32 30, !dbg !6401
  %63 = load double, double* %blur69, align 8, !dbg !6401
  %64 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6402
  %call70 = call %struct._Image* @ResizeImage(%struct._Image* %call63, i64 %57, i64 %59, i32 %61, double %63, %struct._ExceptionInfo* %64), !dbg !6403
  store %struct._Image* %call70, %struct._Image** %morph_image, align 8, !dbg !6404
  %65 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6405
  %cmp71 = icmp eq %struct._Image* %65, null, !dbg !6407
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !6408

if.then73:                                        ; preds = %if.end61
  %66 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6409
  %call74 = call %struct._Image* @DestroyImageList(%struct._Image* %66), !dbg !6411
  store %struct._Image* %call74, %struct._Image** %morph_images, align 8, !dbg !6412
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6413
  br label %return, !dbg !6413

if.end75:                                         ; preds = %if.end61
  %67 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6414
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6415
  %call76 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %67, %struct._ExceptionInfo* %68), !dbg !6416
  store %struct._CacheView* %call76, %struct._CacheView** %image_view, align 8, !dbg !6417
  %69 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6418
  %70 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6419
  %call77 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %69, %struct._ExceptionInfo* %70), !dbg !6420
  store %struct._CacheView* %call77, %struct._CacheView** %morph_view, align 8, !dbg !6421
  store i64 0, i64* %y, align 8, !dbg !6422
  br label %for.cond78, !dbg !6424

for.cond78:                                       ; preds = %for.inc155, %if.end75
  %71 = load i64, i64* %y, align 8, !dbg !6425
  %72 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6427
  %rows79 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 8, !dbg !6428
  %73 = load i64, i64* %rows79, align 8, !dbg !6428
  %cmp80 = icmp slt i64 %71, %73, !dbg !6429
  br i1 %cmp80, label %for.body82, label %for.end157, !dbg !6430

for.body82:                                       ; preds = %for.cond78
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !6431, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6438, metadata !DIExpression()), !dbg !6439
  %74 = load i32, i32* %status, align 4, !dbg !6440
  %cmp83 = icmp eq i32 %74, 0, !dbg !6442
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !6443

if.then85:                                        ; preds = %for.body82
  br label %for.inc155, !dbg !6444

if.end86:                                         ; preds = %for.body82
  %75 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6445
  %76 = load i64, i64* %y, align 8, !dbg !6446
  %77 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6447
  %columns87 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 7, !dbg !6448
  %78 = load i64, i64* %columns87, align 8, !dbg !6448
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6449
  %call88 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %75, i64 0, i64 %76, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !6450
  store %struct._PixelPacket* %call88, %struct._PixelPacket** %p, align 8, !dbg !6451
  %80 = load %struct._CacheView*, %struct._CacheView** %morph_view, align 8, !dbg !6452
  %81 = load i64, i64* %y, align 8, !dbg !6453
  %82 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6454
  %columns89 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 7, !dbg !6455
  %83 = load i64, i64* %columns89, align 8, !dbg !6455
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6456
  %call90 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %80, i64 0, i64 %81, i64 %83, i64 1, %struct._ExceptionInfo* %84), !dbg !6457
  store %struct._PixelPacket* %call90, %struct._PixelPacket** %q, align 8, !dbg !6458
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6459
  %cmp91 = icmp eq %struct._PixelPacket* %85, null, !dbg !6461
  br i1 %cmp91, label %if.then95, label %lor.lhs.false, !dbg !6462

lor.lhs.false:                                    ; preds = %if.end86
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6463
  %cmp93 = icmp eq %struct._PixelPacket* %86, null, !dbg !6464
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !6465

if.then95:                                        ; preds = %lor.lhs.false, %if.end86
  store i32 0, i32* %status, align 4, !dbg !6466
  br label %for.inc155, !dbg !6468

if.end96:                                         ; preds = %lor.lhs.false
  store i64 0, i64* %x, align 8, !dbg !6469
  br label %for.cond97, !dbg !6471

for.cond97:                                       ; preds = %for.inc147, %if.end96
  %87 = load i64, i64* %x, align 8, !dbg !6472
  %88 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6474
  %columns98 = getelementptr inbounds %struct._Image, %struct._Image* %88, i32 0, i32 7, !dbg !6475
  %89 = load i64, i64* %columns98, align 8, !dbg !6475
  %cmp99 = icmp slt i64 %87, %89, !dbg !6476
  br i1 %cmp99, label %for.body101, label %for.end149, !dbg !6477

for.body101:                                      ; preds = %for.cond97
  %90 = load double, double* %alpha, align 8, !dbg !6478
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6478
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 2, !dbg !6478
  %92 = load i16, i16* %red, align 2, !dbg !6478
  %conv102 = zext i16 %92 to i32, !dbg !6478
  %conv103 = sitofp i32 %conv102 to double, !dbg !6478
  %mul104 = fmul double %90, %conv103, !dbg !6478
  %93 = load double, double* %beta, align 8, !dbg !6478
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6478
  %red105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 2, !dbg !6478
  %95 = load i16, i16* %red105, align 2, !dbg !6478
  %conv106 = zext i16 %95 to i32, !dbg !6478
  %conv107 = sitofp i32 %conv106 to double, !dbg !6478
  %mul108 = fmul double %93, %conv107, !dbg !6478
  %add109 = fadd double %mul104, %mul108, !dbg !6478
  %conv110 = fptrunc double %add109 to float, !dbg !6478
  %call111 = call zeroext i16 @ClampToQuantum(float %conv110), !dbg !6478
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6478
  %red112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 2, !dbg !6478
  store i16 %call111, i16* %red112, align 2, !dbg !6478
  %97 = load double, double* %alpha, align 8, !dbg !6480
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6480
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i32 0, i32 1, !dbg !6480
  %99 = load i16, i16* %green, align 2, !dbg !6480
  %conv113 = zext i16 %99 to i32, !dbg !6480
  %conv114 = sitofp i32 %conv113 to double, !dbg !6480
  %mul115 = fmul double %97, %conv114, !dbg !6480
  %100 = load double, double* %beta, align 8, !dbg !6480
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6480
  %green116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 1, !dbg !6480
  %102 = load i16, i16* %green116, align 2, !dbg !6480
  %conv117 = zext i16 %102 to i32, !dbg !6480
  %conv118 = sitofp i32 %conv117 to double, !dbg !6480
  %mul119 = fmul double %100, %conv118, !dbg !6480
  %add120 = fadd double %mul115, %mul119, !dbg !6480
  %conv121 = fptrunc double %add120 to float, !dbg !6480
  %call122 = call zeroext i16 @ClampToQuantum(float %conv121), !dbg !6480
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6480
  %green123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 0, i32 1, !dbg !6480
  store i16 %call122, i16* %green123, align 2, !dbg !6480
  %104 = load double, double* %alpha, align 8, !dbg !6481
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6481
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 0, !dbg !6481
  %106 = load i16, i16* %blue, align 2, !dbg !6481
  %conv124 = zext i16 %106 to i32, !dbg !6481
  %conv125 = sitofp i32 %conv124 to double, !dbg !6481
  %mul126 = fmul double %104, %conv125, !dbg !6481
  %107 = load double, double* %beta, align 8, !dbg !6481
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6481
  %blue127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 0, !dbg !6481
  %109 = load i16, i16* %blue127, align 2, !dbg !6481
  %conv128 = zext i16 %109 to i32, !dbg !6481
  %conv129 = sitofp i32 %conv128 to double, !dbg !6481
  %mul130 = fmul double %107, %conv129, !dbg !6481
  %add131 = fadd double %mul126, %mul130, !dbg !6481
  %conv132 = fptrunc double %add131 to float, !dbg !6481
  %call133 = call zeroext i16 @ClampToQuantum(float %conv132), !dbg !6481
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6481
  %blue134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 0, !dbg !6481
  store i16 %call133, i16* %blue134, align 2, !dbg !6481
  %111 = load double, double* %alpha, align 8, !dbg !6482
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6482
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 3, !dbg !6482
  %113 = load i16, i16* %opacity, align 2, !dbg !6482
  %conv135 = zext i16 %113 to i32, !dbg !6482
  %conv136 = sitofp i32 %conv135 to double, !dbg !6482
  %mul137 = fmul double %111, %conv136, !dbg !6482
  %114 = load double, double* %beta, align 8, !dbg !6482
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6482
  %opacity138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 3, !dbg !6482
  %116 = load i16, i16* %opacity138, align 2, !dbg !6482
  %conv139 = zext i16 %116 to i32, !dbg !6482
  %conv140 = sitofp i32 %conv139 to double, !dbg !6482
  %mul141 = fmul double %114, %conv140, !dbg !6482
  %add142 = fadd double %mul137, %mul141, !dbg !6482
  %conv143 = fptrunc double %add142 to float, !dbg !6482
  %call144 = call zeroext i16 @ClampToQuantum(float %conv143), !dbg !6482
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6482
  %opacity145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i32 0, i32 3, !dbg !6482
  store i16 %call144, i16* %opacity145, align 2, !dbg !6482
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6483
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 1, !dbg !6483
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !6483
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6484
  %incdec.ptr146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 1, !dbg !6484
  store %struct._PixelPacket* %incdec.ptr146, %struct._PixelPacket** %q, align 8, !dbg !6484
  br label %for.inc147, !dbg !6485

for.inc147:                                       ; preds = %for.body101
  %120 = load i64, i64* %x, align 8, !dbg !6486
  %inc148 = add nsw i64 %120, 1, !dbg !6486
  store i64 %inc148, i64* %x, align 8, !dbg !6486
  br label %for.cond97, !dbg !6487, !llvm.loop !6488

for.end149:                                       ; preds = %for.cond97
  %121 = load %struct._CacheView*, %struct._CacheView** %morph_view, align 8, !dbg !6490
  %122 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6491
  %call150 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %121, %struct._ExceptionInfo* %122), !dbg !6492
  store i32 %call150, i32* %sync, align 4, !dbg !6493
  %123 = load i32, i32* %sync, align 4, !dbg !6494
  %cmp151 = icmp eq i32 %123, 0, !dbg !6496
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !6497

if.then153:                                       ; preds = %for.end149
  store i32 0, i32* %status, align 4, !dbg !6498
  br label %if.end154, !dbg !6499

if.end154:                                        ; preds = %if.then153, %for.end149
  br label %for.inc155, !dbg !6500

for.inc155:                                       ; preds = %if.end154, %if.then95, %if.then85
  %124 = load i64, i64* %y, align 8, !dbg !6501
  %inc156 = add nsw i64 %124, 1, !dbg !6501
  store i64 %inc156, i64* %y, align 8, !dbg !6501
  br label %for.cond78, !dbg !6502, !llvm.loop !6503

for.end157:                                       ; preds = %for.cond78
  %125 = load %struct._CacheView*, %struct._CacheView** %morph_view, align 8, !dbg !6505
  %call158 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %125), !dbg !6506
  store %struct._CacheView* %call158, %struct._CacheView** %morph_view, align 8, !dbg !6507
  %126 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6508
  %call159 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %126), !dbg !6509
  store %struct._CacheView* %call159, %struct._CacheView** %image_view, align 8, !dbg !6510
  %127 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6511
  %call160 = call %struct._Image* @DestroyImage(%struct._Image* %127), !dbg !6512
  store %struct._Image* %call160, %struct._Image** %morph_image, align 8, !dbg !6513
  br label %for.inc161, !dbg !6514

for.inc161:                                       ; preds = %for.end157
  %128 = load i64, i64* %i, align 8, !dbg !6515
  %inc162 = add nsw i64 %128, 1, !dbg !6515
  store i64 %inc162, i64* %i, align 8, !dbg !6515
  br label %for.cond27, !dbg !6516, !llvm.loop !6517

for.end163:                                       ; preds = %for.cond27
  %129 = load i64, i64* %i, align 8, !dbg !6519
  %130 = load i64, i64* %number_frames.addr, align 8, !dbg !6521
  %cmp164 = icmp slt i64 %129, %130, !dbg !6522
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !6523

if.then166:                                       ; preds = %for.end163
  br label %for.end191, !dbg !6524

if.end167:                                        ; preds = %for.end163
  %131 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6525
  %call168 = call %struct._Image* @GetNextImageInList(%struct._Image* %131), !dbg !6526
  %132 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6527
  %call169 = call %struct._Image* @CloneImage(%struct._Image* %call168, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %132), !dbg !6528
  store %struct._Image* %call169, %struct._Image** %morph_image, align 8, !dbg !6529
  %133 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6530
  %cmp170 = icmp eq %struct._Image* %133, null, !dbg !6532
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !6533

if.then172:                                       ; preds = %if.end167
  %134 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6534
  %call173 = call %struct._Image* @DestroyImageList(%struct._Image* %134), !dbg !6536
  store %struct._Image* %call173, %struct._Image** %morph_images, align 8, !dbg !6537
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6538
  br label %return, !dbg !6538

if.end174:                                        ; preds = %if.end167
  %135 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !6539
  call void @AppendImageToList(%struct._Image** %morph_images, %struct._Image* %135), !dbg !6540
  %136 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6541
  %call175 = call %struct._Image* @GetLastImageInList(%struct._Image* %136), !dbg !6542
  store %struct._Image* %call175, %struct._Image** %morph_images, align 8, !dbg !6543
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6544
  %progress_monitor176 = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 47, !dbg !6546
  %138 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor176, align 8, !dbg !6546
  %cmp177 = icmp ne i32 (i8*, i64, i64, i8*)* %138, null, !dbg !6547
  br i1 %cmp177, label %if.then179, label %if.end187, !dbg !6548

if.then179:                                       ; preds = %if.end174
  call void @llvm.dbg.declare(metadata i32* %proceed180, metadata !6549, metadata !DIExpression()), !dbg !6551
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6552
  %140 = load i64, i64* %scene, align 8, !dbg !6553
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6554
  %call181 = call i64 @GetImageListLength(%struct._Image* %141), !dbg !6555
  %call182 = call i32 @SetImageProgress(%struct._Image* %139, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i64 %140, i64 %call181), !dbg !6556
  store i32 %call182, i32* %proceed180, align 4, !dbg !6557
  %142 = load i32, i32* %proceed180, align 4, !dbg !6558
  %cmp183 = icmp eq i32 %142, 0, !dbg !6560
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !6561

if.then185:                                       ; preds = %if.then179
  store i32 0, i32* %status, align 4, !dbg !6562
  br label %if.end186, !dbg !6563

if.end186:                                        ; preds = %if.then185, %if.then179
  br label %if.end187, !dbg !6564

if.end187:                                        ; preds = %if.end186, %if.end174
  %143 = load i64, i64* %scene, align 8, !dbg !6565
  %inc188 = add nsw i64 %143, 1, !dbg !6565
  store i64 %inc188, i64* %scene, align 8, !dbg !6565
  br label %for.inc189, !dbg !6566

for.inc189:                                       ; preds = %if.end187
  %144 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6567
  %call190 = call %struct._Image* @GetNextImageInList(%struct._Image* %144), !dbg !6568
  store %struct._Image* %call190, %struct._Image** %next, align 8, !dbg !6569
  br label %for.cond23, !dbg !6570, !llvm.loop !6571

for.end191:                                       ; preds = %if.then166, %for.cond23
  %145 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !6573
  %call192 = call %struct._Image* @GetNextImageInList(%struct._Image* %145), !dbg !6575
  %cmp193 = icmp ne %struct._Image* %call192, null, !dbg !6576
  br i1 %cmp193, label %if.then195, label %if.end197, !dbg !6577

if.then195:                                       ; preds = %for.end191
  %146 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6578
  %call196 = call %struct._Image* @DestroyImageList(%struct._Image* %146), !dbg !6580
  store %struct._Image* %call196, %struct._Image** %morph_images, align 8, !dbg !6581
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6582
  br label %return, !dbg !6582

if.end197:                                        ; preds = %for.end191
  %147 = load %struct._Image*, %struct._Image** %morph_images, align 8, !dbg !6583
  %call198 = call %struct._Image* @GetFirstImageInList(%struct._Image* %147), !dbg !6584
  store %struct._Image* %call198, %struct._Image** %retval, align 8, !dbg !6585
  br label %return, !dbg !6585

return:                                           ; preds = %if.end197, %if.then195, %if.then172, %if.then73, %if.then58, %if.then52, %for.end, %if.then11, %if.then3
  %148 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !6586
  ret %struct._Image* %148, !dbg !6586
}

declare dso_local %struct._Image* @GetNextImageInList(%struct._Image*) #3

declare dso_local %struct._Image* @DestroyImageList(%struct._Image*) #3

declare dso_local void @AppendImageToList(%struct._Image**, %struct._Image*) #3

declare dso_local %struct._Image* @ResizeImage(%struct._Image*, i64, i64, i32, double, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @GetLastImageInList(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PlasmaImageProxy(%struct._Image* %image, %struct._CacheView* %image_view, %struct._RandomInfo* %random_info, %struct._SegmentInfo* %segment, i64 %attenuate, i64 %depth) #0 !dbg !6587 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %random_info.addr = alloca %struct._RandomInfo*, align 8
  %segment.addr = alloca %struct._SegmentInfo*, align 8
  %attenuate.addr = alloca i64, align 8
  %depth.addr = alloca i64, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %plasma = alloca double, align 8
  %u = alloca %struct._PixelPacket, align 2
  %v = alloca %struct._PixelPacket, align 2
  %x = alloca i64, align 8
  %x_mid = alloca i64, align 8
  %y = alloca i64, align 8
  %y_mid = alloca i64, align 8
  %local_info = alloca %struct._SegmentInfo, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %q203 = alloca %struct._PixelPacket*, align 8
  %q260 = alloca %struct._PixelPacket*, align 8
  %q323 = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store %struct._RandomInfo* %random_info, %struct._RandomInfo** %random_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RandomInfo** %random_info.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store %struct._SegmentInfo* %segment, %struct._SegmentInfo** %segment.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %segment.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store i64 %attenuate, i64* %attenuate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attenuate.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata double* %plasma, metadata !6606, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %u, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %v, metadata !6610, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6612, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata i64* %x_mid, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6616, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.declare(metadata i64* %y_mid, metadata !6618, metadata !DIExpression()), !dbg !6619
  %0 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6620
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %0, i32 0, i32 2, !dbg !6622
  %1 = load double, double* %x2, align 8, !dbg !6622
  %2 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6623
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %2, i32 0, i32 0, !dbg !6624
  %3 = load double, double* %x1, align 8, !dbg !6624
  %sub = fsub double %1, %3, !dbg !6625
  %cmp = fcmp oeq double %sub, 0.000000e+00, !dbg !6626
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6627

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6628
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %4, i32 0, i32 3, !dbg !6629
  %5 = load double, double* %y2, align 8, !dbg !6629
  %6 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6630
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %6, i32 0, i32 1, !dbg !6631
  %7 = load double, double* %y1, align 8, !dbg !6631
  %sub1 = fsub double %5, %7, !dbg !6632
  %cmp2 = fcmp oeq double %sub1, 0.000000e+00, !dbg !6633
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6634

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6635
  br label %return, !dbg !6635

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load i64, i64* %depth.addr, align 8, !dbg !6636
  %cmp3 = icmp ne i64 %8, 0, !dbg !6638
  br i1 %cmp3, label %if.then4, label %if.end33, !dbg !6639

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %local_info, metadata !6640, metadata !DIExpression()), !dbg !6642
  %9 = load i64, i64* %depth.addr, align 8, !dbg !6643
  %dec = add i64 %9, -1, !dbg !6643
  store i64 %dec, i64* %depth.addr, align 8, !dbg !6643
  %10 = load i64, i64* %attenuate.addr, align 8, !dbg !6644
  %inc = add i64 %10, 1, !dbg !6644
  store i64 %inc, i64* %attenuate.addr, align 8, !dbg !6644
  %11 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6645
  %x15 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %11, i32 0, i32 0, !dbg !6646
  %12 = load double, double* %x15, align 8, !dbg !6646
  %13 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6647
  %x26 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %13, i32 0, i32 2, !dbg !6648
  %14 = load double, double* %x26, align 8, !dbg !6648
  %add = fadd double %12, %14, !dbg !6649
  %div = fdiv double %add, 2.000000e+00, !dbg !6650
  %sub7 = fsub double %div, 5.000000e-01, !dbg !6651
  %15 = call double @llvm.ceil.f64(double %sub7), !dbg !6652
  %conv = fptosi double %15 to i64, !dbg !6653
  store i64 %conv, i64* %x_mid, align 8, !dbg !6654
  %16 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6655
  %y18 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %16, i32 0, i32 1, !dbg !6656
  %17 = load double, double* %y18, align 8, !dbg !6656
  %18 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6657
  %y29 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %18, i32 0, i32 3, !dbg !6658
  %19 = load double, double* %y29, align 8, !dbg !6658
  %add10 = fadd double %17, %19, !dbg !6659
  %div11 = fdiv double %add10, 2.000000e+00, !dbg !6660
  %sub12 = fsub double %div11, 5.000000e-01, !dbg !6661
  %20 = call double @llvm.ceil.f64(double %sub12), !dbg !6662
  %conv13 = fptosi double %20 to i64, !dbg !6663
  store i64 %conv13, i64* %y_mid, align 8, !dbg !6664
  %21 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6665
  %22 = bitcast %struct._SegmentInfo* %local_info to i8*, !dbg !6666
  %23 = bitcast %struct._SegmentInfo* %21 to i8*, !dbg !6666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false), !dbg !6666
  %24 = load i64, i64* %x_mid, align 8, !dbg !6667
  %conv14 = sitofp i64 %24 to double, !dbg !6668
  %x215 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 2, !dbg !6669
  store double %conv14, double* %x215, align 8, !dbg !6670
  %25 = load i64, i64* %y_mid, align 8, !dbg !6671
  %conv16 = sitofp i64 %25 to double, !dbg !6672
  %y217 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 3, !dbg !6673
  store double %conv16, double* %y217, align 8, !dbg !6674
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6675
  %27 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6676
  %28 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6677
  %29 = load i64, i64* %attenuate.addr, align 8, !dbg !6678
  %30 = load i64, i64* %depth.addr, align 8, !dbg !6679
  %call = call i32 @PlasmaImageProxy(%struct._Image* %26, %struct._CacheView* %27, %struct._RandomInfo* %28, %struct._SegmentInfo* %local_info, i64 %29, i64 %30), !dbg !6680
  %31 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6681
  %32 = bitcast %struct._SegmentInfo* %local_info to i8*, !dbg !6682
  %33 = bitcast %struct._SegmentInfo* %31 to i8*, !dbg !6682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false), !dbg !6682
  %34 = load i64, i64* %y_mid, align 8, !dbg !6683
  %conv18 = sitofp i64 %34 to double, !dbg !6684
  %y119 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 1, !dbg !6685
  store double %conv18, double* %y119, align 8, !dbg !6686
  %35 = load i64, i64* %x_mid, align 8, !dbg !6687
  %conv20 = sitofp i64 %35 to double, !dbg !6688
  %x221 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 2, !dbg !6689
  store double %conv20, double* %x221, align 8, !dbg !6690
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6691
  %37 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6692
  %38 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6693
  %39 = load i64, i64* %attenuate.addr, align 8, !dbg !6694
  %40 = load i64, i64* %depth.addr, align 8, !dbg !6695
  %call22 = call i32 @PlasmaImageProxy(%struct._Image* %36, %struct._CacheView* %37, %struct._RandomInfo* %38, %struct._SegmentInfo* %local_info, i64 %39, i64 %40), !dbg !6696
  %41 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6697
  %42 = bitcast %struct._SegmentInfo* %local_info to i8*, !dbg !6698
  %43 = bitcast %struct._SegmentInfo* %41 to i8*, !dbg !6698
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false), !dbg !6698
  %44 = load i64, i64* %x_mid, align 8, !dbg !6699
  %conv23 = sitofp i64 %44 to double, !dbg !6700
  %x124 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 0, !dbg !6701
  store double %conv23, double* %x124, align 8, !dbg !6702
  %45 = load i64, i64* %y_mid, align 8, !dbg !6703
  %conv25 = sitofp i64 %45 to double, !dbg !6704
  %y226 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 3, !dbg !6705
  store double %conv25, double* %y226, align 8, !dbg !6706
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6707
  %47 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6708
  %48 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6709
  %49 = load i64, i64* %attenuate.addr, align 8, !dbg !6710
  %50 = load i64, i64* %depth.addr, align 8, !dbg !6711
  %call27 = call i32 @PlasmaImageProxy(%struct._Image* %46, %struct._CacheView* %47, %struct._RandomInfo* %48, %struct._SegmentInfo* %local_info, i64 %49, i64 %50), !dbg !6712
  %51 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6713
  %52 = bitcast %struct._SegmentInfo* %local_info to i8*, !dbg !6714
  %53 = bitcast %struct._SegmentInfo* %51 to i8*, !dbg !6714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 32, i1 false), !dbg !6714
  %54 = load i64, i64* %x_mid, align 8, !dbg !6715
  %conv28 = sitofp i64 %54 to double, !dbg !6716
  %x129 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 0, !dbg !6717
  store double %conv28, double* %x129, align 8, !dbg !6718
  %55 = load i64, i64* %y_mid, align 8, !dbg !6719
  %conv30 = sitofp i64 %55 to double, !dbg !6720
  %y131 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %local_info, i32 0, i32 1, !dbg !6721
  store double %conv30, double* %y131, align 8, !dbg !6722
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6723
  %57 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6724
  %58 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6725
  %59 = load i64, i64* %attenuate.addr, align 8, !dbg !6726
  %60 = load i64, i64* %depth.addr, align 8, !dbg !6727
  %call32 = call i32 @PlasmaImageProxy(%struct._Image* %56, %struct._CacheView* %57, %struct._RandomInfo* %58, %struct._SegmentInfo* %local_info, i64 %59, i64 %60), !dbg !6728
  store i32 %call32, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

if.end33:                                         ; preds = %if.end
  %61 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6730
  %x134 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %61, i32 0, i32 0, !dbg !6731
  %62 = load double, double* %x134, align 8, !dbg !6731
  %63 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6732
  %x235 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %63, i32 0, i32 2, !dbg !6733
  %64 = load double, double* %x235, align 8, !dbg !6733
  %add36 = fadd double %62, %64, !dbg !6734
  %div37 = fdiv double %add36, 2.000000e+00, !dbg !6735
  %sub38 = fsub double %div37, 5.000000e-01, !dbg !6736
  %65 = call double @llvm.ceil.f64(double %sub38), !dbg !6737
  %conv39 = fptosi double %65 to i64, !dbg !6738
  store i64 %conv39, i64* %x_mid, align 8, !dbg !6739
  %66 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6740
  %y140 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %66, i32 0, i32 1, !dbg !6741
  %67 = load double, double* %y140, align 8, !dbg !6741
  %68 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6742
  %y241 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %68, i32 0, i32 3, !dbg !6743
  %69 = load double, double* %y241, align 8, !dbg !6743
  %add42 = fadd double %67, %69, !dbg !6744
  %div43 = fdiv double %add42, 2.000000e+00, !dbg !6745
  %sub44 = fsub double %div43, 5.000000e-01, !dbg !6746
  %70 = call double @llvm.ceil.f64(double %sub44), !dbg !6747
  %conv45 = fptosi double %70 to i64, !dbg !6748
  store i64 %conv45, i64* %y_mid, align 8, !dbg !6749
  %71 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6750
  %x146 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %71, i32 0, i32 0, !dbg !6752
  %72 = load double, double* %x146, align 8, !dbg !6752
  %73 = load i64, i64* %x_mid, align 8, !dbg !6753
  %conv47 = sitofp i64 %73 to double, !dbg !6754
  %cmp48 = fcmp oeq double %72, %conv47, !dbg !6755
  br i1 %cmp48, label %land.lhs.true50, label %if.end66, !dbg !6756

land.lhs.true50:                                  ; preds = %if.end33
  %74 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6757
  %x251 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %74, i32 0, i32 2, !dbg !6758
  %75 = load double, double* %x251, align 8, !dbg !6758
  %76 = load i64, i64* %x_mid, align 8, !dbg !6759
  %conv52 = sitofp i64 %76 to double, !dbg !6760
  %cmp53 = fcmp oeq double %75, %conv52, !dbg !6761
  br i1 %cmp53, label %land.lhs.true55, label %if.end66, !dbg !6762

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %77 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6763
  %y156 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %77, i32 0, i32 1, !dbg !6764
  %78 = load double, double* %y156, align 8, !dbg !6764
  %79 = load i64, i64* %y_mid, align 8, !dbg !6765
  %conv57 = sitofp i64 %79 to double, !dbg !6766
  %cmp58 = fcmp oeq double %78, %conv57, !dbg !6767
  br i1 %cmp58, label %land.lhs.true60, label %if.end66, !dbg !6768

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %80 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6769
  %y261 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %80, i32 0, i32 3, !dbg !6770
  %81 = load double, double* %y261, align 8, !dbg !6770
  %82 = load i64, i64* %y_mid, align 8, !dbg !6771
  %conv62 = sitofp i64 %82 to double, !dbg !6772
  %cmp63 = fcmp oeq double %81, %conv62, !dbg !6773
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !6774

if.then65:                                        ; preds = %land.lhs.true60
  store i32 0, i32* %retval, align 4, !dbg !6775
  br label %return, !dbg !6775

if.end66:                                         ; preds = %land.lhs.true60, %land.lhs.true55, %land.lhs.true50, %if.end33
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6776
  %exception67 = getelementptr inbounds %struct._Image, %struct._Image* %83, i32 0, i32 58, !dbg !6777
  store %struct._ExceptionInfo* %exception67, %struct._ExceptionInfo** %exception, align 8, !dbg !6778
  %84 = load i64, i64* %attenuate.addr, align 8, !dbg !6779
  %conv68 = uitofp i64 %84 to double, !dbg !6779
  %mul = fmul double 2.000000e+00, %conv68, !dbg !6780
  %div69 = fdiv double 6.553500e+04, %mul, !dbg !6781
  store double %div69, double* %plasma, align 8, !dbg !6782
  %85 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6783
  %x170 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %85, i32 0, i32 0, !dbg !6785
  %86 = load double, double* %x170, align 8, !dbg !6785
  %87 = load i64, i64* %x_mid, align 8, !dbg !6786
  %conv71 = sitofp i64 %87 to double, !dbg !6787
  %cmp72 = fcmp une double %86, %conv71, !dbg !6788
  br i1 %cmp72, label %if.then78, label %lor.lhs.false, !dbg !6789

lor.lhs.false:                                    ; preds = %if.end66
  %88 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6790
  %x274 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %88, i32 0, i32 2, !dbg !6791
  %89 = load double, double* %x274, align 8, !dbg !6791
  %90 = load i64, i64* %x_mid, align 8, !dbg !6792
  %conv75 = sitofp i64 %90 to double, !dbg !6793
  %cmp76 = fcmp une double %89, %conv75, !dbg !6794
  br i1 %cmp76, label %if.then78, label %if.end182, !dbg !6795

if.then78:                                        ; preds = %lor.lhs.false, %if.end66
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6796, metadata !DIExpression()), !dbg !6798
  %91 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6799
  %x179 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %91, i32 0, i32 0, !dbg !6800
  %92 = load double, double* %x179, align 8, !dbg !6800
  %sub80 = fsub double %92, 5.000000e-01, !dbg !6801
  %93 = call double @llvm.ceil.f64(double %sub80), !dbg !6802
  %conv81 = fptosi double %93 to i64, !dbg !6803
  store i64 %conv81, i64* %x, align 8, !dbg !6804
  %94 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6805
  %95 = load i64, i64* %x, align 8, !dbg !6806
  %96 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6807
  %y182 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %96, i32 0, i32 1, !dbg !6808
  %97 = load double, double* %y182, align 8, !dbg !6808
  %sub83 = fsub double %97, 5.000000e-01, !dbg !6809
  %98 = call double @llvm.ceil.f64(double %sub83), !dbg !6810
  %conv84 = fptosi double %98 to i64, !dbg !6811
  %99 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6812
  %call85 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %94, i64 %95, i64 %conv84, %struct._PixelPacket* %u, %struct._ExceptionInfo* %99), !dbg !6813
  %100 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6814
  %101 = load i64, i64* %x, align 8, !dbg !6815
  %102 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6816
  %y286 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %102, i32 0, i32 3, !dbg !6817
  %103 = load double, double* %y286, align 8, !dbg !6817
  %sub87 = fsub double %103, 5.000000e-01, !dbg !6818
  %104 = call double @llvm.ceil.f64(double %sub87), !dbg !6819
  %conv88 = fptosi double %104 to i64, !dbg !6820
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6821
  %call89 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %100, i64 %101, i64 %conv88, %struct._PixelPacket* %v, %struct._ExceptionInfo* %105), !dbg !6822
  %106 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6823
  %107 = load i64, i64* %x, align 8, !dbg !6824
  %108 = load i64, i64* %y_mid, align 8, !dbg !6825
  %109 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6826
  %call90 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %106, i64 %107, i64 %108, i64 1, i64 1, %struct._ExceptionInfo* %109), !dbg !6827
  store %struct._PixelPacket* %call90, %struct._PixelPacket** %q, align 8, !dbg !6828
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6829
  %cmp91 = icmp eq %struct._PixelPacket* %110, null, !dbg !6831
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !6832

if.then93:                                        ; preds = %if.then78
  store i32 1, i32* %retval, align 4, !dbg !6833
  br label %return, !dbg !6833

if.end94:                                         ; preds = %if.then78
  %111 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6834
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 2, !dbg !6834
  %112 = load i16, i16* %red, align 2, !dbg !6834
  %conv95 = zext i16 %112 to i32, !dbg !6834
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 2, !dbg !6834
  %113 = load i16, i16* %red96, align 2, !dbg !6834
  %conv97 = zext i16 %113 to i32, !dbg !6834
  %add98 = add nsw i32 %conv95, %conv97, !dbg !6834
  %conv99 = sitofp i32 %add98 to float, !dbg !6834
  %conv100 = fpext float %conv99 to double, !dbg !6834
  %div101 = fdiv double %conv100, 2.000000e+00, !dbg !6834
  %conv102 = fptrunc double %div101 to float, !dbg !6834
  %114 = load double, double* %plasma, align 8, !dbg !6834
  %call103 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %111, float %conv102, double %114), !dbg !6834
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6834
  %red104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 2, !dbg !6834
  store i16 %call103, i16* %red104, align 2, !dbg !6834
  %116 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6835
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 1, !dbg !6835
  %117 = load i16, i16* %green, align 2, !dbg !6835
  %conv105 = zext i16 %117 to i32, !dbg !6835
  %green106 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 1, !dbg !6835
  %118 = load i16, i16* %green106, align 2, !dbg !6835
  %conv107 = zext i16 %118 to i32, !dbg !6835
  %add108 = add nsw i32 %conv105, %conv107, !dbg !6835
  %conv109 = sitofp i32 %add108 to float, !dbg !6835
  %conv110 = fpext float %conv109 to double, !dbg !6835
  %div111 = fdiv double %conv110, 2.000000e+00, !dbg !6835
  %conv112 = fptrunc double %div111 to float, !dbg !6835
  %119 = load double, double* %plasma, align 8, !dbg !6835
  %call113 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %116, float %conv112, double %119), !dbg !6835
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6835
  %green114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %120, i32 0, i32 1, !dbg !6835
  store i16 %call113, i16* %green114, align 2, !dbg !6835
  %121 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6836
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 0, !dbg !6836
  %122 = load i16, i16* %blue, align 2, !dbg !6836
  %conv115 = zext i16 %122 to i32, !dbg !6836
  %blue116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 0, !dbg !6836
  %123 = load i16, i16* %blue116, align 2, !dbg !6836
  %conv117 = zext i16 %123 to i32, !dbg !6836
  %add118 = add nsw i32 %conv115, %conv117, !dbg !6836
  %conv119 = sitofp i32 %add118 to float, !dbg !6836
  %conv120 = fpext float %conv119 to double, !dbg !6836
  %div121 = fdiv double %conv120, 2.000000e+00, !dbg !6836
  %conv122 = fptrunc double %div121 to float, !dbg !6836
  %124 = load double, double* %plasma, align 8, !dbg !6836
  %call123 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %121, float %conv122, double %124), !dbg !6836
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6836
  %blue124 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 0, i32 0, !dbg !6836
  store i16 %call123, i16* %blue124, align 2, !dbg !6836
  %126 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6837
  %127 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6838
  %call125 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %126, %struct._ExceptionInfo* %127), !dbg !6839
  %128 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6840
  %x1126 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %128, i32 0, i32 0, !dbg !6842
  %129 = load double, double* %x1126, align 8, !dbg !6842
  %130 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6843
  %x2127 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %130, i32 0, i32 2, !dbg !6844
  %131 = load double, double* %x2127, align 8, !dbg !6844
  %cmp128 = fcmp une double %129, %131, !dbg !6845
  br i1 %cmp128, label %if.then130, label %if.end181, !dbg !6846

if.then130:                                       ; preds = %if.end94
  %132 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6847
  %x2131 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %132, i32 0, i32 2, !dbg !6849
  %133 = load double, double* %x2131, align 8, !dbg !6849
  %sub132 = fsub double %133, 5.000000e-01, !dbg !6850
  %134 = call double @llvm.ceil.f64(double %sub132), !dbg !6851
  %conv133 = fptosi double %134 to i64, !dbg !6852
  store i64 %conv133, i64* %x, align 8, !dbg !6853
  %135 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6854
  %136 = load i64, i64* %x, align 8, !dbg !6855
  %137 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6856
  %y1134 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %137, i32 0, i32 1, !dbg !6857
  %138 = load double, double* %y1134, align 8, !dbg !6857
  %sub135 = fsub double %138, 5.000000e-01, !dbg !6858
  %139 = call double @llvm.ceil.f64(double %sub135), !dbg !6859
  %conv136 = fptosi double %139 to i64, !dbg !6860
  %140 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6861
  %call137 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %135, i64 %136, i64 %conv136, %struct._PixelPacket* %u, %struct._ExceptionInfo* %140), !dbg !6862
  %141 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6863
  %142 = load i64, i64* %x, align 8, !dbg !6864
  %143 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6865
  %y2138 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %143, i32 0, i32 3, !dbg !6866
  %144 = load double, double* %y2138, align 8, !dbg !6866
  %sub139 = fsub double %144, 5.000000e-01, !dbg !6867
  %145 = call double @llvm.ceil.f64(double %sub139), !dbg !6868
  %conv140 = fptosi double %145 to i64, !dbg !6869
  %146 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6870
  %call141 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %141, i64 %142, i64 %conv140, %struct._PixelPacket* %v, %struct._ExceptionInfo* %146), !dbg !6871
  %147 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6872
  %148 = load i64, i64* %x, align 8, !dbg !6873
  %149 = load i64, i64* %y_mid, align 8, !dbg !6874
  %150 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6875
  %call142 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %147, i64 %148, i64 %149, i64 1, i64 1, %struct._ExceptionInfo* %150), !dbg !6876
  store %struct._PixelPacket* %call142, %struct._PixelPacket** %q, align 8, !dbg !6877
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6878
  %cmp143 = icmp eq %struct._PixelPacket* %151, null, !dbg !6880
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !6881

if.then145:                                       ; preds = %if.then130
  store i32 1, i32* %retval, align 4, !dbg !6882
  br label %return, !dbg !6882

if.end146:                                        ; preds = %if.then130
  %152 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6883
  %red147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 2, !dbg !6883
  %153 = load i16, i16* %red147, align 2, !dbg !6883
  %conv148 = zext i16 %153 to i32, !dbg !6883
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 2, !dbg !6883
  %154 = load i16, i16* %red149, align 2, !dbg !6883
  %conv150 = zext i16 %154 to i32, !dbg !6883
  %add151 = add nsw i32 %conv148, %conv150, !dbg !6883
  %conv152 = sitofp i32 %add151 to float, !dbg !6883
  %conv153 = fpext float %conv152 to double, !dbg !6883
  %div154 = fdiv double %conv153, 2.000000e+00, !dbg !6883
  %conv155 = fptrunc double %div154 to float, !dbg !6883
  %155 = load double, double* %plasma, align 8, !dbg !6883
  %call156 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %152, float %conv155, double %155), !dbg !6883
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6883
  %red157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 2, !dbg !6883
  store i16 %call156, i16* %red157, align 2, !dbg !6883
  %157 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6884
  %green158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 1, !dbg !6884
  %158 = load i16, i16* %green158, align 2, !dbg !6884
  %conv159 = zext i16 %158 to i32, !dbg !6884
  %green160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 1, !dbg !6884
  %159 = load i16, i16* %green160, align 2, !dbg !6884
  %conv161 = zext i16 %159 to i32, !dbg !6884
  %add162 = add nsw i32 %conv159, %conv161, !dbg !6884
  %conv163 = sitofp i32 %add162 to float, !dbg !6884
  %conv164 = fpext float %conv163 to double, !dbg !6884
  %div165 = fdiv double %conv164, 2.000000e+00, !dbg !6884
  %conv166 = fptrunc double %div165 to float, !dbg !6884
  %160 = load double, double* %plasma, align 8, !dbg !6884
  %call167 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %157, float %conv166, double %160), !dbg !6884
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6884
  %green168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 1, !dbg !6884
  store i16 %call167, i16* %green168, align 2, !dbg !6884
  %162 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6885
  %blue169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 0, !dbg !6885
  %163 = load i16, i16* %blue169, align 2, !dbg !6885
  %conv170 = zext i16 %163 to i32, !dbg !6885
  %blue171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 0, !dbg !6885
  %164 = load i16, i16* %blue171, align 2, !dbg !6885
  %conv172 = zext i16 %164 to i32, !dbg !6885
  %add173 = add nsw i32 %conv170, %conv172, !dbg !6885
  %conv174 = sitofp i32 %add173 to float, !dbg !6885
  %conv175 = fpext float %conv174 to double, !dbg !6885
  %div176 = fdiv double %conv175, 2.000000e+00, !dbg !6885
  %conv177 = fptrunc double %div176 to float, !dbg !6885
  %165 = load double, double* %plasma, align 8, !dbg !6885
  %call178 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %162, float %conv177, double %165), !dbg !6885
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6885
  %blue179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 0, !dbg !6885
  store i16 %call178, i16* %blue179, align 2, !dbg !6885
  %167 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6886
  %168 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6887
  %call180 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %167, %struct._ExceptionInfo* %168), !dbg !6888
  br label %if.end181, !dbg !6889

if.end181:                                        ; preds = %if.end146, %if.end94
  br label %if.end182, !dbg !6890

if.end182:                                        ; preds = %if.end181, %lor.lhs.false
  %169 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6891
  %y1183 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %169, i32 0, i32 1, !dbg !6893
  %170 = load double, double* %y1183, align 8, !dbg !6893
  %171 = load i64, i64* %y_mid, align 8, !dbg !6894
  %conv184 = sitofp i64 %171 to double, !dbg !6895
  %cmp185 = fcmp une double %170, %conv184, !dbg !6896
  br i1 %cmp185, label %if.then192, label %lor.lhs.false187, !dbg !6897

lor.lhs.false187:                                 ; preds = %if.end182
  %172 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6898
  %y2188 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %172, i32 0, i32 3, !dbg !6899
  %173 = load double, double* %y2188, align 8, !dbg !6899
  %174 = load i64, i64* %y_mid, align 8, !dbg !6900
  %conv189 = sitofp i64 %174 to double, !dbg !6901
  %cmp190 = fcmp une double %173, %conv189, !dbg !6902
  br i1 %cmp190, label %if.then192, label %if.end312, !dbg !6903

if.then192:                                       ; preds = %lor.lhs.false187, %if.end182
  %175 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6904
  %x1193 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %175, i32 0, i32 0, !dbg !6907
  %176 = load double, double* %x1193, align 8, !dbg !6907
  %177 = load i64, i64* %x_mid, align 8, !dbg !6908
  %conv194 = sitofp i64 %177 to double, !dbg !6909
  %cmp195 = fcmp une double %176, %conv194, !dbg !6910
  br i1 %cmp195, label %if.then202, label %lor.lhs.false197, !dbg !6911

lor.lhs.false197:                                 ; preds = %if.then192
  %178 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6912
  %y2198 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %178, i32 0, i32 3, !dbg !6913
  %179 = load double, double* %y2198, align 8, !dbg !6913
  %180 = load i64, i64* %y_mid, align 8, !dbg !6914
  %conv199 = sitofp i64 %180 to double, !dbg !6915
  %cmp200 = fcmp une double %179, %conv199, !dbg !6916
  br i1 %cmp200, label %if.then202, label %if.end254, !dbg !6917

if.then202:                                       ; preds = %lor.lhs.false197, %if.then192
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q203, metadata !6918, metadata !DIExpression()), !dbg !6920
  %181 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6921
  %y2204 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %181, i32 0, i32 3, !dbg !6922
  %182 = load double, double* %y2204, align 8, !dbg !6922
  %sub205 = fsub double %182, 5.000000e-01, !dbg !6923
  %183 = call double @llvm.ceil.f64(double %sub205), !dbg !6924
  %conv206 = fptosi double %183 to i64, !dbg !6925
  store i64 %conv206, i64* %y, align 8, !dbg !6926
  %184 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6927
  %185 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6928
  %x1207 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %185, i32 0, i32 0, !dbg !6929
  %186 = load double, double* %x1207, align 8, !dbg !6929
  %sub208 = fsub double %186, 5.000000e-01, !dbg !6930
  %187 = call double @llvm.ceil.f64(double %sub208), !dbg !6931
  %conv209 = fptosi double %187 to i64, !dbg !6932
  %188 = load i64, i64* %y, align 8, !dbg !6933
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6934
  %call210 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %184, i64 %conv209, i64 %188, %struct._PixelPacket* %u, %struct._ExceptionInfo* %189), !dbg !6935
  %190 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6936
  %191 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6937
  %x2211 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %191, i32 0, i32 2, !dbg !6938
  %192 = load double, double* %x2211, align 8, !dbg !6938
  %sub212 = fsub double %192, 5.000000e-01, !dbg !6939
  %193 = call double @llvm.ceil.f64(double %sub212), !dbg !6940
  %conv213 = fptosi double %193 to i64, !dbg !6941
  %194 = load i64, i64* %y, align 8, !dbg !6942
  %195 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6943
  %call214 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %190, i64 %conv213, i64 %194, %struct._PixelPacket* %v, %struct._ExceptionInfo* %195), !dbg !6944
  %196 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6945
  %197 = load i64, i64* %x_mid, align 8, !dbg !6946
  %198 = load i64, i64* %y, align 8, !dbg !6947
  %199 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6948
  %call215 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %196, i64 %197, i64 %198, i64 1, i64 1, %struct._ExceptionInfo* %199), !dbg !6949
  store %struct._PixelPacket* %call215, %struct._PixelPacket** %q203, align 8, !dbg !6950
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q203, align 8, !dbg !6951
  %cmp216 = icmp eq %struct._PixelPacket* %200, null, !dbg !6953
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6954

if.then218:                                       ; preds = %if.then202
  store i32 1, i32* %retval, align 4, !dbg !6955
  br label %return, !dbg !6955

if.end219:                                        ; preds = %if.then202
  %201 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6956
  %red220 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 2, !dbg !6956
  %202 = load i16, i16* %red220, align 2, !dbg !6956
  %conv221 = zext i16 %202 to i32, !dbg !6956
  %red222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 2, !dbg !6956
  %203 = load i16, i16* %red222, align 2, !dbg !6956
  %conv223 = zext i16 %203 to i32, !dbg !6956
  %add224 = add nsw i32 %conv221, %conv223, !dbg !6956
  %conv225 = sitofp i32 %add224 to float, !dbg !6956
  %conv226 = fpext float %conv225 to double, !dbg !6956
  %div227 = fdiv double %conv226, 2.000000e+00, !dbg !6956
  %conv228 = fptrunc double %div227 to float, !dbg !6956
  %204 = load double, double* %plasma, align 8, !dbg !6956
  %call229 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %201, float %conv228, double %204), !dbg !6956
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q203, align 8, !dbg !6956
  %red230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 0, i32 2, !dbg !6956
  store i16 %call229, i16* %red230, align 2, !dbg !6956
  %206 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6957
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 1, !dbg !6957
  %207 = load i16, i16* %green231, align 2, !dbg !6957
  %conv232 = zext i16 %207 to i32, !dbg !6957
  %green233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 1, !dbg !6957
  %208 = load i16, i16* %green233, align 2, !dbg !6957
  %conv234 = zext i16 %208 to i32, !dbg !6957
  %add235 = add nsw i32 %conv232, %conv234, !dbg !6957
  %conv236 = sitofp i32 %add235 to float, !dbg !6957
  %conv237 = fpext float %conv236 to double, !dbg !6957
  %div238 = fdiv double %conv237, 2.000000e+00, !dbg !6957
  %conv239 = fptrunc double %div238 to float, !dbg !6957
  %209 = load double, double* %plasma, align 8, !dbg !6957
  %call240 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %206, float %conv239, double %209), !dbg !6957
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %q203, align 8, !dbg !6957
  %green241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 0, i32 1, !dbg !6957
  store i16 %call240, i16* %green241, align 2, !dbg !6957
  %211 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !6958
  %blue242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 0, !dbg !6958
  %212 = load i16, i16* %blue242, align 2, !dbg !6958
  %conv243 = zext i16 %212 to i32, !dbg !6958
  %blue244 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 0, !dbg !6958
  %213 = load i16, i16* %blue244, align 2, !dbg !6958
  %conv245 = zext i16 %213 to i32, !dbg !6958
  %add246 = add nsw i32 %conv243, %conv245, !dbg !6958
  %conv247 = sitofp i32 %add246 to float, !dbg !6958
  %conv248 = fpext float %conv247 to double, !dbg !6958
  %div249 = fdiv double %conv248, 2.000000e+00, !dbg !6958
  %conv250 = fptrunc double %div249 to float, !dbg !6958
  %214 = load double, double* %plasma, align 8, !dbg !6958
  %call251 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %211, float %conv250, double %214), !dbg !6958
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %q203, align 8, !dbg !6958
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i32 0, i32 0, !dbg !6958
  store i16 %call251, i16* %blue252, align 2, !dbg !6958
  %216 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6959
  %217 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6960
  %call253 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %216, %struct._ExceptionInfo* %217), !dbg !6961
  br label %if.end254, !dbg !6962

if.end254:                                        ; preds = %if.end219, %lor.lhs.false197
  %218 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6963
  %y1255 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %218, i32 0, i32 1, !dbg !6965
  %219 = load double, double* %y1255, align 8, !dbg !6965
  %220 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6966
  %y2256 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %220, i32 0, i32 3, !dbg !6967
  %221 = load double, double* %y2256, align 8, !dbg !6967
  %cmp257 = fcmp une double %219, %221, !dbg !6968
  br i1 %cmp257, label %if.then259, label %if.end311, !dbg !6969

if.then259:                                       ; preds = %if.end254
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q260, metadata !6970, metadata !DIExpression()), !dbg !6972
  %222 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6973
  %y1261 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %222, i32 0, i32 1, !dbg !6974
  %223 = load double, double* %y1261, align 8, !dbg !6974
  %sub262 = fsub double %223, 5.000000e-01, !dbg !6975
  %224 = call double @llvm.ceil.f64(double %sub262), !dbg !6976
  %conv263 = fptosi double %224 to i64, !dbg !6977
  store i64 %conv263, i64* %y, align 8, !dbg !6978
  %225 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6979
  %226 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6980
  %x1264 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %226, i32 0, i32 0, !dbg !6981
  %227 = load double, double* %x1264, align 8, !dbg !6981
  %sub265 = fsub double %227, 5.000000e-01, !dbg !6982
  %228 = call double @llvm.ceil.f64(double %sub265), !dbg !6983
  %conv266 = fptosi double %228 to i64, !dbg !6984
  %229 = load i64, i64* %y, align 8, !dbg !6985
  %230 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6986
  %call267 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %225, i64 %conv266, i64 %229, %struct._PixelPacket* %u, %struct._ExceptionInfo* %230), !dbg !6987
  %231 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6988
  %232 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !6989
  %x2268 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %232, i32 0, i32 2, !dbg !6990
  %233 = load double, double* %x2268, align 8, !dbg !6990
  %sub269 = fsub double %233, 5.000000e-01, !dbg !6991
  %234 = call double @llvm.ceil.f64(double %sub269), !dbg !6992
  %conv270 = fptosi double %234 to i64, !dbg !6993
  %235 = load i64, i64* %y, align 8, !dbg !6994
  %236 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6995
  %call271 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %231, i64 %conv270, i64 %235, %struct._PixelPacket* %v, %struct._ExceptionInfo* %236), !dbg !6996
  %237 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !6997
  %238 = load i64, i64* %x_mid, align 8, !dbg !6998
  %239 = load i64, i64* %y, align 8, !dbg !6999
  %240 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7000
  %call272 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %237, i64 %238, i64 %239, i64 1, i64 1, %struct._ExceptionInfo* %240), !dbg !7001
  store %struct._PixelPacket* %call272, %struct._PixelPacket** %q260, align 8, !dbg !7002
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q260, align 8, !dbg !7003
  %cmp273 = icmp eq %struct._PixelPacket* %241, null, !dbg !7005
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !7006

if.then275:                                       ; preds = %if.then259
  store i32 1, i32* %retval, align 4, !dbg !7007
  br label %return, !dbg !7007

if.end276:                                        ; preds = %if.then259
  %242 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7008
  %red277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 2, !dbg !7008
  %243 = load i16, i16* %red277, align 2, !dbg !7008
  %conv278 = zext i16 %243 to i32, !dbg !7008
  %red279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 2, !dbg !7008
  %244 = load i16, i16* %red279, align 2, !dbg !7008
  %conv280 = zext i16 %244 to i32, !dbg !7008
  %add281 = add nsw i32 %conv278, %conv280, !dbg !7008
  %conv282 = sitofp i32 %add281 to float, !dbg !7008
  %conv283 = fpext float %conv282 to double, !dbg !7008
  %div284 = fdiv double %conv283, 2.000000e+00, !dbg !7008
  %conv285 = fptrunc double %div284 to float, !dbg !7008
  %245 = load double, double* %plasma, align 8, !dbg !7008
  %call286 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %242, float %conv285, double %245), !dbg !7008
  %246 = load %struct._PixelPacket*, %struct._PixelPacket** %q260, align 8, !dbg !7008
  %red287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %246, i32 0, i32 2, !dbg !7008
  store i16 %call286, i16* %red287, align 2, !dbg !7008
  %247 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7009
  %green288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 1, !dbg !7009
  %248 = load i16, i16* %green288, align 2, !dbg !7009
  %conv289 = zext i16 %248 to i32, !dbg !7009
  %green290 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 1, !dbg !7009
  %249 = load i16, i16* %green290, align 2, !dbg !7009
  %conv291 = zext i16 %249 to i32, !dbg !7009
  %add292 = add nsw i32 %conv289, %conv291, !dbg !7009
  %conv293 = sitofp i32 %add292 to float, !dbg !7009
  %conv294 = fpext float %conv293 to double, !dbg !7009
  %div295 = fdiv double %conv294, 2.000000e+00, !dbg !7009
  %conv296 = fptrunc double %div295 to float, !dbg !7009
  %250 = load double, double* %plasma, align 8, !dbg !7009
  %call297 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %247, float %conv296, double %250), !dbg !7009
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %q260, align 8, !dbg !7009
  %green298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 1, !dbg !7009
  store i16 %call297, i16* %green298, align 2, !dbg !7009
  %252 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7010
  %blue299 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 0, !dbg !7010
  %253 = load i16, i16* %blue299, align 2, !dbg !7010
  %conv300 = zext i16 %253 to i32, !dbg !7010
  %blue301 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 0, !dbg !7010
  %254 = load i16, i16* %blue301, align 2, !dbg !7010
  %conv302 = zext i16 %254 to i32, !dbg !7010
  %add303 = add nsw i32 %conv300, %conv302, !dbg !7010
  %conv304 = sitofp i32 %add303 to float, !dbg !7010
  %conv305 = fpext float %conv304 to double, !dbg !7010
  %div306 = fdiv double %conv305, 2.000000e+00, !dbg !7010
  %conv307 = fptrunc double %div306 to float, !dbg !7010
  %255 = load double, double* %plasma, align 8, !dbg !7010
  %call308 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %252, float %conv307, double %255), !dbg !7010
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q260, align 8, !dbg !7010
  %blue309 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 0, !dbg !7010
  store i16 %call308, i16* %blue309, align 2, !dbg !7010
  %257 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !7011
  %258 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7012
  %call310 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %257, %struct._ExceptionInfo* %258), !dbg !7013
  br label %if.end311, !dbg !7014

if.end311:                                        ; preds = %if.end276, %if.end254
  br label %if.end312, !dbg !7015

if.end312:                                        ; preds = %if.end311, %lor.lhs.false187
  %259 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7016
  %x1313 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %259, i32 0, i32 0, !dbg !7018
  %260 = load double, double* %x1313, align 8, !dbg !7018
  %261 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7019
  %x2314 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %261, i32 0, i32 2, !dbg !7020
  %262 = load double, double* %x2314, align 8, !dbg !7020
  %cmp315 = fcmp une double %260, %262, !dbg !7021
  br i1 %cmp315, label %if.then322, label %lor.lhs.false317, !dbg !7022

lor.lhs.false317:                                 ; preds = %if.end312
  %263 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7023
  %y1318 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %263, i32 0, i32 1, !dbg !7024
  %264 = load double, double* %y1318, align 8, !dbg !7024
  %265 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7025
  %y2319 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %265, i32 0, i32 3, !dbg !7026
  %266 = load double, double* %y2319, align 8, !dbg !7026
  %cmp320 = fcmp une double %264, %266, !dbg !7027
  br i1 %cmp320, label %if.then322, label %if.end377, !dbg !7028

if.then322:                                       ; preds = %lor.lhs.false317, %if.end312
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q323, metadata !7029, metadata !DIExpression()), !dbg !7031
  %267 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7032
  %x1324 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %267, i32 0, i32 0, !dbg !7033
  %268 = load double, double* %x1324, align 8, !dbg !7033
  %sub325 = fsub double %268, 5.000000e-01, !dbg !7034
  %269 = call double @llvm.ceil.f64(double %sub325), !dbg !7035
  %conv326 = fptosi double %269 to i64, !dbg !7036
  store i64 %conv326, i64* %x, align 8, !dbg !7037
  %270 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7038
  %y1327 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %270, i32 0, i32 1, !dbg !7039
  %271 = load double, double* %y1327, align 8, !dbg !7039
  %sub328 = fsub double %271, 5.000000e-01, !dbg !7040
  %272 = call double @llvm.ceil.f64(double %sub328), !dbg !7041
  %conv329 = fptosi double %272 to i64, !dbg !7042
  store i64 %conv329, i64* %y, align 8, !dbg !7043
  %273 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7044
  %274 = load i64, i64* %x, align 8, !dbg !7045
  %275 = load i64, i64* %y, align 8, !dbg !7046
  %276 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7047
  %call330 = call i32 @GetOneVirtualPixel(%struct._Image* %273, i64 %274, i64 %275, %struct._PixelPacket* %u, %struct._ExceptionInfo* %276), !dbg !7048
  %277 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7049
  %x2331 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %277, i32 0, i32 2, !dbg !7050
  %278 = load double, double* %x2331, align 8, !dbg !7050
  %sub332 = fsub double %278, 5.000000e-01, !dbg !7051
  %279 = call double @llvm.ceil.f64(double %sub332), !dbg !7052
  %conv333 = fptosi double %279 to i64, !dbg !7053
  store i64 %conv333, i64* %x, align 8, !dbg !7054
  %280 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7055
  %y2334 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %280, i32 0, i32 3, !dbg !7056
  %281 = load double, double* %y2334, align 8, !dbg !7056
  %sub335 = fsub double %281, 5.000000e-01, !dbg !7057
  %282 = call double @llvm.ceil.f64(double %sub335), !dbg !7058
  %conv336 = fptosi double %282 to i64, !dbg !7059
  store i64 %conv336, i64* %y, align 8, !dbg !7060
  %283 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !7061
  %284 = load i64, i64* %x, align 8, !dbg !7062
  %285 = load i64, i64* %y, align 8, !dbg !7063
  %286 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7064
  %call337 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %283, i64 %284, i64 %285, %struct._PixelPacket* %v, %struct._ExceptionInfo* %286), !dbg !7065
  %287 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !7066
  %288 = load i64, i64* %x_mid, align 8, !dbg !7067
  %289 = load i64, i64* %y_mid, align 8, !dbg !7068
  %290 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7069
  %call338 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %287, i64 %288, i64 %289, i64 1, i64 1, %struct._ExceptionInfo* %290), !dbg !7070
  store %struct._PixelPacket* %call338, %struct._PixelPacket** %q323, align 8, !dbg !7071
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %q323, align 8, !dbg !7072
  %cmp339 = icmp eq %struct._PixelPacket* %291, null, !dbg !7074
  br i1 %cmp339, label %if.then341, label %if.end342, !dbg !7075

if.then341:                                       ; preds = %if.then322
  store i32 1, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

if.end342:                                        ; preds = %if.then322
  %292 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7077
  %red343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 2, !dbg !7077
  %293 = load i16, i16* %red343, align 2, !dbg !7077
  %conv344 = zext i16 %293 to i32, !dbg !7077
  %red345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 2, !dbg !7077
  %294 = load i16, i16* %red345, align 2, !dbg !7077
  %conv346 = zext i16 %294 to i32, !dbg !7077
  %add347 = add nsw i32 %conv344, %conv346, !dbg !7077
  %conv348 = sitofp i32 %add347 to float, !dbg !7077
  %conv349 = fpext float %conv348 to double, !dbg !7077
  %div350 = fdiv double %conv349, 2.000000e+00, !dbg !7077
  %conv351 = fptrunc double %div350 to float, !dbg !7077
  %295 = load double, double* %plasma, align 8, !dbg !7077
  %call352 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %292, float %conv351, double %295), !dbg !7077
  %296 = load %struct._PixelPacket*, %struct._PixelPacket** %q323, align 8, !dbg !7077
  %red353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %296, i32 0, i32 2, !dbg !7077
  store i16 %call352, i16* %red353, align 2, !dbg !7077
  %297 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7078
  %green354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 1, !dbg !7078
  %298 = load i16, i16* %green354, align 2, !dbg !7078
  %conv355 = zext i16 %298 to i32, !dbg !7078
  %green356 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 1, !dbg !7078
  %299 = load i16, i16* %green356, align 2, !dbg !7078
  %conv357 = zext i16 %299 to i32, !dbg !7078
  %add358 = add nsw i32 %conv355, %conv357, !dbg !7078
  %conv359 = sitofp i32 %add358 to float, !dbg !7078
  %conv360 = fpext float %conv359 to double, !dbg !7078
  %div361 = fdiv double %conv360, 2.000000e+00, !dbg !7078
  %conv362 = fptrunc double %div361 to float, !dbg !7078
  %300 = load double, double* %plasma, align 8, !dbg !7078
  %call363 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %297, float %conv362, double %300), !dbg !7078
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %q323, align 8, !dbg !7078
  %green364 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 1, !dbg !7078
  store i16 %call363, i16* %green364, align 2, !dbg !7078
  %302 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7079
  %blue365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %u, i32 0, i32 0, !dbg !7079
  %303 = load i16, i16* %blue365, align 2, !dbg !7079
  %conv366 = zext i16 %303 to i32, !dbg !7079
  %blue367 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %v, i32 0, i32 0, !dbg !7079
  %304 = load i16, i16* %blue367, align 2, !dbg !7079
  %conv368 = zext i16 %304 to i32, !dbg !7079
  %add369 = add nsw i32 %conv366, %conv368, !dbg !7079
  %conv370 = sitofp i32 %add369 to float, !dbg !7079
  %conv371 = fpext float %conv370 to double, !dbg !7079
  %div372 = fdiv double %conv371, 2.000000e+00, !dbg !7079
  %conv373 = fptrunc double %div372 to float, !dbg !7079
  %305 = load double, double* %plasma, align 8, !dbg !7079
  %call374 = call zeroext i16 @PlasmaPixel(%struct._RandomInfo* %302, float %conv373, double %305), !dbg !7079
  %306 = load %struct._PixelPacket*, %struct._PixelPacket** %q323, align 8, !dbg !7079
  %blue375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %306, i32 0, i32 0, !dbg !7079
  store i16 %call374, i16* %blue375, align 2, !dbg !7079
  %307 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !7080
  %308 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7081
  %call376 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %307, %struct._ExceptionInfo* %308), !dbg !7082
  br label %if.end377, !dbg !7083

if.end377:                                        ; preds = %if.end342, %lor.lhs.false317
  %309 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7084
  %x2378 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %309, i32 0, i32 2, !dbg !7086
  %310 = load double, double* %x2378, align 8, !dbg !7086
  %311 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7087
  %x1379 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %311, i32 0, i32 0, !dbg !7088
  %312 = load double, double* %x1379, align 8, !dbg !7088
  %sub380 = fsub double %310, %312, !dbg !7089
  %cmp381 = fcmp olt double %sub380, 3.000000e+00, !dbg !7090
  br i1 %cmp381, label %land.lhs.true383, label %if.end390, !dbg !7091

land.lhs.true383:                                 ; preds = %if.end377
  %313 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7092
  %y2384 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %313, i32 0, i32 3, !dbg !7093
  %314 = load double, double* %y2384, align 8, !dbg !7093
  %315 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7094
  %y1385 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %315, i32 0, i32 1, !dbg !7095
  %316 = load double, double* %y1385, align 8, !dbg !7095
  %sub386 = fsub double %314, %316, !dbg !7096
  %cmp387 = fcmp olt double %sub386, 3.000000e+00, !dbg !7097
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !7098

if.then389:                                       ; preds = %land.lhs.true383
  store i32 1, i32* %retval, align 4, !dbg !7099
  br label %return, !dbg !7099

if.end390:                                        ; preds = %land.lhs.true383, %if.end377
  store i32 0, i32* %retval, align 4, !dbg !7100
  br label %return, !dbg !7100

return:                                           ; preds = %if.end390, %if.then389, %if.then341, %if.then275, %if.then218, %if.then145, %if.then93, %if.then65, %if.then4, %if.then
  %317 = load i32, i32* %retval, align 4, !dbg !7101
  ret i32 %317, !dbg !7101
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

declare dso_local i32 @GetOneCacheViewVirtualPixel(%struct._CacheView*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @PlasmaPixel(%struct._RandomInfo* %random_info, float %pixel, double %noise) #0 !dbg !7102 {
entry:
  %random_info.addr = alloca %struct._RandomInfo*, align 8
  %pixel.addr = alloca float, align 4
  %noise.addr = alloca double, align 8
  %plasma = alloca i16, align 2
  store %struct._RandomInfo* %random_info, %struct._RandomInfo** %random_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RandomInfo** %random_info.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store double %noise, double* %noise.addr, align 8
  call void @llvm.dbg.declare(metadata double* %noise.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.declare(metadata i16* %plasma, metadata !7111, metadata !DIExpression()), !dbg !7112
  %0 = load float, float* %pixel.addr, align 4, !dbg !7113
  %conv = fpext float %0 to double, !dbg !7113
  %1 = load double, double* %noise.addr, align 8, !dbg !7114
  %2 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !7115
  %call = call double @GetPseudoRandomValue(%struct._RandomInfo* %2), !dbg !7116
  %mul = fmul double %1, %call, !dbg !7117
  %add = fadd double %conv, %mul, !dbg !7118
  %3 = load double, double* %noise.addr, align 8, !dbg !7119
  %div = fdiv double %3, 2.000000e+00, !dbg !7120
  %sub = fsub double %add, %div, !dbg !7121
  %conv1 = fptrunc double %sub to float, !dbg !7113
  %call2 = call zeroext i16 @ClampToQuantum(float %conv1), !dbg !7122
  store i16 %call2, i16* %plasma, align 2, !dbg !7123
  %4 = load i16, i16* %plasma, align 2, !dbg !7124
  ret i16 %4, !dbg !7125
}

declare dso_local i32 @GetOneVirtualPixel(%struct._Image*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PlasmaImage(%struct._Image* %image, %struct._SegmentInfo* %segment, i64 %attenuate, i64 %depth) #0 !dbg !7126 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %segment.addr = alloca %struct._SegmentInfo*, align 8
  %attenuate.addr = alloca i64, align 8
  %depth.addr = alloca i64, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %random_info = alloca %struct._RandomInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7129, metadata !DIExpression()), !dbg !7130
  store %struct._SegmentInfo* %segment, %struct._SegmentInfo** %segment.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %segment.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store i64 %attenuate, i64* %attenuate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attenuate.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata %struct._RandomInfo** %random_info, metadata !7141, metadata !DIExpression()), !dbg !7142
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7143
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7145
  %1 = load i32, i32* %debug, align 8, !dbg !7145
  %cmp = icmp ne i32 %1, 0, !dbg !7146
  br i1 %cmp, label %if.then, label %if.end, !dbg !7147

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3850, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)), !dbg !7148
  br label %if.end, !dbg !7149

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7150
  %debug1 = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 59, !dbg !7152
  %3 = load i32, i32* %debug1, align 8, !dbg !7152
  %cmp2 = icmp ne i32 %3, 0, !dbg !7153
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7154

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3854, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)), !dbg !7155
  br label %if.end5, !dbg !7156

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7157
  %call6 = call i32 @SetImageStorageClass(%struct._Image* %4, i32 1), !dbg !7159
  %cmp7 = icmp eq i32 %call6, 0, !dbg !7160
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7161

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !7162
  br label %return, !dbg !7162

if.end9:                                          ; preds = %if.end5
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7163
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7164
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 58, !dbg !7165
  %call10 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %5, %struct._ExceptionInfo* %exception), !dbg !7166
  store %struct._CacheView* %call10, %struct._CacheView** %image_view, align 8, !dbg !7167
  %call11 = call %struct._RandomInfo* @AcquireRandomInfo(), !dbg !7168
  store %struct._RandomInfo* %call11, %struct._RandomInfo** %random_info, align 8, !dbg !7169
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7170
  %8 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7171
  %9 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !7172
  %10 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment.addr, align 8, !dbg !7173
  %11 = load i64, i64* %attenuate.addr, align 8, !dbg !7174
  %12 = load i64, i64* %depth.addr, align 8, !dbg !7175
  %call12 = call i32 @PlasmaImageProxy(%struct._Image* %7, %struct._CacheView* %8, %struct._RandomInfo* %9, %struct._SegmentInfo* %10, i64 %11, i64 %12), !dbg !7176
  store i32 %call12, i32* %status, align 4, !dbg !7177
  %13 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !7178
  %call13 = call %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo* %13), !dbg !7179
  store %struct._RandomInfo* %call13, %struct._RandomInfo** %random_info, align 8, !dbg !7180
  %14 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7181
  %call14 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %14), !dbg !7182
  store %struct._CacheView* %call14, %struct._CacheView** %image_view, align 8, !dbg !7183
  %15 = load i32, i32* %status, align 4, !dbg !7184
  store i32 %15, i32* %retval, align 4, !dbg !7185
  br label %return, !dbg !7185

return:                                           ; preds = %if.end9, %if.then8
  %16 = load i32, i32* %retval, align 4, !dbg !7186
  ret i32 %16, !dbg !7186
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @PolaroidImage(%struct._Image* %image, %struct._DrawInfo* %draw_info, double %angle, %struct._ExceptionInfo* %exception) #0 !dbg !7187 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %angle.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %value = alloca i8*, align 8
  %bend_image = alloca %struct._Image*, align 8
  %caption_image = alloca %struct._Image*, align 8
  %flop_image = alloca %struct._Image*, align 8
  %picture_image = alloca %struct._Image*, align 8
  %polaroid_image = alloca %struct._Image*, align 8
  %rotate_image = alloca %struct._Image*, align 8
  %trim_image = alloca %struct._Image*, align 8
  %height = alloca i64, align 8
  %quantum = alloca i64, align 8
  %caption = alloca i8*, align 8
  %geometry = alloca [4096 x i8], align 16
  %annotate_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  %count = alloca i64, align 8
  %metrics = alloca %struct._TypeMetric, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7190, metadata !DIExpression()), !dbg !7191
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !7192, metadata !DIExpression()), !dbg !7193
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !7194, metadata !DIExpression()), !dbg !7195
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata i8** %value, metadata !7198, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.declare(metadata %struct._Image** %bend_image, metadata !7200, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.declare(metadata %struct._Image** %caption_image, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct._Image** %flop_image, metadata !7204, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.declare(metadata %struct._Image** %picture_image, metadata !7206, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.declare(metadata %struct._Image** %polaroid_image, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.declare(metadata %struct._Image** %rotate_image, metadata !7210, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.declare(metadata %struct._Image** %trim_image, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.declare(metadata i64* %height, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !7216, metadata !DIExpression()), !dbg !7217
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7218
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7220
  %1 = load i32, i32* %debug, align 8, !dbg !7220
  %cmp = icmp ne i32 %1, 0, !dbg !7221
  br i1 %cmp, label %if.then, label %if.end, !dbg !7222

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7223
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7224
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7223
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3921, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !7225
  br label %if.end, !dbg !7226

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7227
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 7, !dbg !7228
  %4 = load i64, i64* %columns, align 8, !dbg !7228
  %conv = uitofp i64 %4 to double, !dbg !7229
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7230
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 8, !dbg !7231
  %6 = load i64, i64* %rows, align 8, !dbg !7231
  %conv1 = uitofp i64 %6 to double, !dbg !7232
  %call2 = call double @MagickMax(double %conv, double %conv1), !dbg !7233
  %div = fdiv double %call2, 2.500000e+01, !dbg !7234
  %call3 = call double @MagickMax(double %div, double 1.000000e+01), !dbg !7235
  %conv4 = fptosi double %call3 to i64, !dbg !7236
  store i64 %conv4, i64* %quantum, align 8, !dbg !7237
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7238
  %rows5 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !7239
  %8 = load i64, i64* %rows5, align 8, !dbg !7239
  %9 = load i64, i64* %quantum, align 8, !dbg !7240
  %mul = mul nsw i64 2, %9, !dbg !7241
  %add = add i64 %8, %mul, !dbg !7242
  store i64 %add, i64* %height, align 8, !dbg !7243
  store %struct._Image* null, %struct._Image** %caption_image, align 8, !dbg !7244
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7245
  %call6 = call i8* @GetImageProperty(%struct._Image* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0)), !dbg !7246
  store i8* %call6, i8** %value, align 8, !dbg !7247
  %11 = load i8*, i8** %value, align 8, !dbg !7248
  %cmp7 = icmp ne i8* %11, null, !dbg !7250
  br i1 %cmp7, label %if.then9, label %if.end51, !dbg !7251

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %caption, metadata !7252, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %annotate_info, metadata !7257, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata i64* %count, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata %struct._TypeMetric* %metrics, metadata !7264, metadata !DIExpression()), !dbg !7278
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7279
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7280
  %columns10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !7281
  %14 = load i64, i64* %columns10, align 8, !dbg !7281
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7282
  %call11 = call %struct._Image* @CloneImage(%struct._Image* %12, i64 %14, i64 1, i32 1, %struct._ExceptionInfo* %15), !dbg !7283
  store %struct._Image* %call11, %struct._Image** %caption_image, align 8, !dbg !7284
  %16 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7285
  %cmp12 = icmp eq %struct._Image* %16, null, !dbg !7287
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7288

if.then14:                                        ; preds = %if.then9
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7289
  br label %return, !dbg !7289

if.end15:                                         ; preds = %if.then9
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !7290
  %call16 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %17), !dbg !7291
  store %struct._DrawInfo* %call16, %struct._DrawInfo** %annotate_info, align 8, !dbg !7292
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7293
  %19 = load i8*, i8** %value, align 8, !dbg !7294
  %call17 = call i8* @InterpretImageProperties(%struct._ImageInfo* null, %struct._Image* %18, i8* %19), !dbg !7295
  store i8* %call17, i8** %caption, align 8, !dbg !7296
  %20 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7297
  %text = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %20, i32 0, i32 21, !dbg !7298
  %21 = load i8*, i8** %caption, align 8, !dbg !7299
  %call18 = call i8* @CloneString(i8** %text, i8* %21), !dbg !7300
  %22 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7301
  %23 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7302
  %call19 = call i64 @FormatMagickCaption(%struct._Image* %22, %struct._DrawInfo* %23, i32 1, %struct._TypeMetric* %metrics, i8** %caption), !dbg !7303
  store i64 %call19, i64* %count, align 8, !dbg !7304
  %24 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7305
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7306
  %columns20 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 7, !dbg !7307
  %26 = load i64, i64* %columns20, align 8, !dbg !7307
  %27 = load i64, i64* %count, align 8, !dbg !7308
  %add21 = add nsw i64 %27, 1, !dbg !7309
  %conv22 = sitofp i64 %add21 to double, !dbg !7310
  %ascent = getelementptr inbounds %struct._TypeMetric, %struct._TypeMetric* %metrics, i32 0, i32 1, !dbg !7311
  %28 = load double, double* %ascent, align 8, !dbg !7311
  %descent = getelementptr inbounds %struct._TypeMetric, %struct._TypeMetric* %metrics, i32 0, i32 2, !dbg !7312
  %29 = load double, double* %descent, align 8, !dbg !7312
  %sub = fsub double %28, %29, !dbg !7313
  %mul23 = fmul double %conv22, %sub, !dbg !7314
  %add24 = fadd double %mul23, 5.000000e-01, !dbg !7315
  %conv25 = fptoui double %add24 to i64, !dbg !7316
  %call26 = call i32 @SetImageExtent(%struct._Image* %24, i64 %26, i64 %conv25), !dbg !7317
  store i32 %call26, i32* %status, align 4, !dbg !7318
  %30 = load i32, i32* %status, align 4, !dbg !7319
  %cmp27 = icmp eq i32 %30, 0, !dbg !7321
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7322

if.then29:                                        ; preds = %if.end15
  %31 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7323
  %call30 = call %struct._Image* @DestroyImage(%struct._Image* %31), !dbg !7324
  store %struct._Image* %call30, %struct._Image** %caption_image, align 8, !dbg !7325
  br label %if.end48, !dbg !7326

if.else:                                          ; preds = %if.end15
  %32 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7327
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 12, !dbg !7329
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7330
  %border_color = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 13, !dbg !7331
  %34 = bitcast %struct._PixelPacket* %background_color to i8*, !dbg !7331
  %35 = bitcast %struct._PixelPacket* %border_color to i8*, !dbg !7331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 8, i1 false), !dbg !7331
  %36 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7332
  %call31 = call i32 @SetImageBackgroundColor(%struct._Image* %36), !dbg !7333
  %37 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7334
  %text32 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %37, i32 0, i32 21, !dbg !7335
  %38 = load i8*, i8** %caption, align 8, !dbg !7336
  %call33 = call i8* @CloneString(i8** %text32, i8* %38), !dbg !7337
  %arraydecay34 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !7338
  %ascent35 = getelementptr inbounds %struct._TypeMetric, %struct._TypeMetric* %metrics, i32 0, i32 1, !dbg !7339
  %39 = load double, double* %ascent35, align 8, !dbg !7339
  %call36 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay34, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), double %39), !dbg !7340
  %40 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7341
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %40, i32 0, i32 4, !dbg !7343
  %41 = load i32, i32* %gravity, align 8, !dbg !7343
  %cmp37 = icmp eq i32 %41, 0, !dbg !7344
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !7345

if.then39:                                        ; preds = %if.else
  %42 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7346
  %geometry40 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %42, i32 0, i32 1, !dbg !7347
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !7348
  %call42 = call i8* @AcquireString(i8* %arraydecay41), !dbg !7349
  %call43 = call i8* @CloneString(i8** %geometry40, i8* %call42), !dbg !7350
  br label %if.end44, !dbg !7351

if.end44:                                         ; preds = %if.then39, %if.else
  %43 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7352
  %44 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7353
  %call45 = call i32 @AnnotateImage(%struct._Image* %43, %struct._DrawInfo* %44), !dbg !7354
  %45 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7355
  %rows46 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 8, !dbg !7356
  %46 = load i64, i64* %rows46, align 8, !dbg !7356
  %47 = load i64, i64* %height, align 8, !dbg !7357
  %add47 = add i64 %47, %46, !dbg !7357
  store i64 %add47, i64* %height, align 8, !dbg !7357
  br label %if.end48

if.end48:                                         ; preds = %if.end44, %if.then29
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %annotate_info, align 8, !dbg !7358
  %call49 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %48), !dbg !7359
  store %struct._DrawInfo* %call49, %struct._DrawInfo** %annotate_info, align 8, !dbg !7360
  %49 = load i8*, i8** %caption, align 8, !dbg !7361
  %call50 = call i8* @DestroyString(i8* %49), !dbg !7362
  store i8* %call50, i8** %caption, align 8, !dbg !7363
  br label %if.end51, !dbg !7364

if.end51:                                         ; preds = %if.end48, %if.end
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7365
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7366
  %columns52 = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 7, !dbg !7367
  %52 = load i64, i64* %columns52, align 8, !dbg !7367
  %53 = load i64, i64* %quantum, align 8, !dbg !7368
  %mul53 = mul nsw i64 2, %53, !dbg !7369
  %add54 = add i64 %52, %mul53, !dbg !7370
  %54 = load i64, i64* %height, align 8, !dbg !7371
  %55 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7372
  %call55 = call %struct._Image* @CloneImage(%struct._Image* %50, i64 %add54, i64 %54, i32 1, %struct._ExceptionInfo* %55), !dbg !7373
  store %struct._Image* %call55, %struct._Image** %picture_image, align 8, !dbg !7374
  %56 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7375
  %cmp56 = icmp eq %struct._Image* %56, null, !dbg !7377
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !7378

if.then58:                                        ; preds = %if.end51
  %57 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7379
  %cmp59 = icmp ne %struct._Image* %57, null, !dbg !7382
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !7383

if.then61:                                        ; preds = %if.then58
  %58 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7384
  %call62 = call %struct._Image* @DestroyImage(%struct._Image* %58), !dbg !7385
  store %struct._Image* %call62, %struct._Image** %caption_image, align 8, !dbg !7386
  br label %if.end63, !dbg !7387

if.end63:                                         ; preds = %if.then61, %if.then58
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7388
  br label %return, !dbg !7388

if.end64:                                         ; preds = %if.end51
  %59 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7389
  %background_color65 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 12, !dbg !7390
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7391
  %border_color66 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 13, !dbg !7392
  %61 = bitcast %struct._PixelPacket* %background_color65 to i8*, !dbg !7392
  %62 = bitcast %struct._PixelPacket* %border_color66 to i8*, !dbg !7392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 8, i1 false), !dbg !7392
  %63 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7393
  %call67 = call i32 @SetImageBackgroundColor(%struct._Image* %63), !dbg !7394
  %64 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7395
  %65 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7396
  %66 = load i64, i64* %quantum, align 8, !dbg !7397
  %67 = load i64, i64* %quantum, align 8, !dbg !7398
  %call68 = call i32 @CompositeImage(%struct._Image* %64, i32 40, %struct._Image* %65, i64 %66, i64 %67), !dbg !7399
  %68 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7400
  %cmp69 = icmp ne %struct._Image* %68, null, !dbg !7402
  br i1 %cmp69, label %if.then71, label %if.end78, !dbg !7403

if.then71:                                        ; preds = %if.end64
  %69 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7404
  %70 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7406
  %71 = load i64, i64* %quantum, align 8, !dbg !7407
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7408
  %rows72 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 8, !dbg !7409
  %73 = load i64, i64* %rows72, align 8, !dbg !7409
  %74 = load i64, i64* %quantum, align 8, !dbg !7410
  %mul73 = mul nsw i64 3, %74, !dbg !7411
  %div74 = sdiv i64 %mul73, 2, !dbg !7412
  %add75 = add i64 %73, %div74, !dbg !7413
  %call76 = call i32 @CompositeImage(%struct._Image* %69, i32 40, %struct._Image* %70, i64 %71, i64 %add75), !dbg !7414
  %75 = load %struct._Image*, %struct._Image** %caption_image, align 8, !dbg !7415
  %call77 = call %struct._Image* @DestroyImage(%struct._Image* %75), !dbg !7416
  store %struct._Image* %call77, %struct._Image** %caption_image, align 8, !dbg !7417
  br label %if.end78, !dbg !7418

if.end78:                                         ; preds = %if.then71, %if.end64
  %76 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7419
  %background_color79 = getelementptr inbounds %struct._Image, %struct._Image* %76, i32 0, i32 12, !dbg !7420
  %77 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7421
  %call80 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), %struct._PixelPacket* %background_color79, %struct._ExceptionInfo* %77), !dbg !7422
  %78 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7423
  %call81 = call i32 @SetImageAlphaChannel(%struct._Image* %78, i32 6), !dbg !7424
  %79 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7425
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7426
  %call82 = call %struct._Image* @RotateImage(%struct._Image* %79, double 9.000000e+01, %struct._ExceptionInfo* %80), !dbg !7427
  store %struct._Image* %call82, %struct._Image** %rotate_image, align 8, !dbg !7428
  %81 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7429
  %call83 = call %struct._Image* @DestroyImage(%struct._Image* %81), !dbg !7430
  store %struct._Image* %call83, %struct._Image** %picture_image, align 8, !dbg !7431
  %82 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7432
  %cmp84 = icmp eq %struct._Image* %82, null, !dbg !7434
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !7435

if.then86:                                        ; preds = %if.end78
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7436
  br label %return, !dbg !7436

if.end87:                                         ; preds = %if.end78
  %83 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7437
  store %struct._Image* %83, %struct._Image** %picture_image, align 8, !dbg !7438
  %84 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7439
  %85 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7440
  %rows88 = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 8, !dbg !7441
  %86 = load i64, i64* %rows88, align 8, !dbg !7441
  %conv89 = uitofp i64 %86 to double, !dbg !7440
  %mul90 = fmul double 1.000000e-02, %conv89, !dbg !7442
  %87 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7443
  %columns91 = getelementptr inbounds %struct._Image, %struct._Image* %87, i32 0, i32 7, !dbg !7444
  %88 = load i64, i64* %columns91, align 8, !dbg !7444
  %conv92 = uitofp i64 %88 to double, !dbg !7443
  %mul93 = fmul double 2.000000e+00, %conv92, !dbg !7445
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7446
  %call94 = call %struct._Image* @WaveImage(%struct._Image* %84, double %mul90, double %mul93, %struct._ExceptionInfo* %89), !dbg !7447
  store %struct._Image* %call94, %struct._Image** %bend_image, align 8, !dbg !7448
  %90 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7449
  %call95 = call %struct._Image* @DestroyImage(%struct._Image* %90), !dbg !7450
  store %struct._Image* %call95, %struct._Image** %picture_image, align 8, !dbg !7451
  %91 = load %struct._Image*, %struct._Image** %bend_image, align 8, !dbg !7452
  %cmp96 = icmp eq %struct._Image* %91, null, !dbg !7454
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !7455

if.then98:                                        ; preds = %if.end87
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7456
  br label %return, !dbg !7456

if.end99:                                         ; preds = %if.end87
  %92 = load %struct._Image*, %struct._Image** %bend_image, align 8, !dbg !7457
  %exception100 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 58, !dbg !7458
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7459
  call void @InheritException(%struct._ExceptionInfo* %exception100, %struct._ExceptionInfo* %93), !dbg !7460
  %94 = load %struct._Image*, %struct._Image** %bend_image, align 8, !dbg !7461
  store %struct._Image* %94, %struct._Image** %picture_image, align 8, !dbg !7462
  %95 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7463
  %96 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7464
  %call101 = call %struct._Image* @RotateImage(%struct._Image* %95, double -9.000000e+01, %struct._ExceptionInfo* %96), !dbg !7465
  store %struct._Image* %call101, %struct._Image** %rotate_image, align 8, !dbg !7466
  %97 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7467
  %call102 = call %struct._Image* @DestroyImage(%struct._Image* %97), !dbg !7468
  store %struct._Image* %call102, %struct._Image** %picture_image, align 8, !dbg !7469
  %98 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7470
  %cmp103 = icmp eq %struct._Image* %98, null, !dbg !7472
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !7473

if.then105:                                       ; preds = %if.end99
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7474
  br label %return, !dbg !7474

if.end106:                                        ; preds = %if.end99
  %99 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7475
  store %struct._Image* %99, %struct._Image** %picture_image, align 8, !dbg !7476
  %100 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7477
  %background_color107 = getelementptr inbounds %struct._Image, %struct._Image* %100, i32 0, i32 12, !dbg !7478
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7479
  %background_color108 = getelementptr inbounds %struct._Image, %struct._Image* %101, i32 0, i32 12, !dbg !7480
  %102 = bitcast %struct._PixelPacket* %background_color107 to i8*, !dbg !7480
  %103 = bitcast %struct._PixelPacket* %background_color108 to i8*, !dbg !7480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 8, i1 false), !dbg !7480
  %104 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7481
  %105 = load i64, i64* %quantum, align 8, !dbg !7482
  %div109 = sdiv i64 %105, 3, !dbg !7483
  %106 = load i64, i64* %quantum, align 8, !dbg !7484
  %div110 = sdiv i64 %106, 3, !dbg !7485
  %107 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7486
  %call111 = call %struct._Image* @ShadowImage(%struct._Image* %104, double 8.000000e+01, double 2.000000e+00, i64 %div109, i64 %div110, %struct._ExceptionInfo* %107), !dbg !7487
  store %struct._Image* %call111, %struct._Image** %polaroid_image, align 8, !dbg !7488
  %108 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7489
  %cmp112 = icmp eq %struct._Image* %108, null, !dbg !7491
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !7492

if.then114:                                       ; preds = %if.end106
  %109 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7493
  %call115 = call %struct._Image* @DestroyImage(%struct._Image* %109), !dbg !7495
  store %struct._Image* %call115, %struct._Image** %picture_image, align 8, !dbg !7496
  %110 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7497
  store %struct._Image* %110, %struct._Image** %retval, align 8, !dbg !7498
  br label %return, !dbg !7498

if.end116:                                        ; preds = %if.end106
  %111 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7499
  %112 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7500
  %call117 = call %struct._Image* @FlopImage(%struct._Image* %111, %struct._ExceptionInfo* %112), !dbg !7501
  store %struct._Image* %call117, %struct._Image** %flop_image, align 8, !dbg !7502
  %113 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7503
  %call118 = call %struct._Image* @DestroyImage(%struct._Image* %113), !dbg !7504
  store %struct._Image* %call118, %struct._Image** %polaroid_image, align 8, !dbg !7505
  %114 = load %struct._Image*, %struct._Image** %flop_image, align 8, !dbg !7506
  %cmp119 = icmp eq %struct._Image* %114, null, !dbg !7508
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !7509

if.then121:                                       ; preds = %if.end116
  %115 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7510
  %call122 = call %struct._Image* @DestroyImage(%struct._Image* %115), !dbg !7512
  store %struct._Image* %call122, %struct._Image** %picture_image, align 8, !dbg !7513
  %116 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7514
  store %struct._Image* %116, %struct._Image** %retval, align 8, !dbg !7515
  br label %return, !dbg !7515

if.end123:                                        ; preds = %if.end116
  %117 = load %struct._Image*, %struct._Image** %flop_image, align 8, !dbg !7516
  store %struct._Image* %117, %struct._Image** %polaroid_image, align 8, !dbg !7517
  %118 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7518
  %119 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7519
  %120 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7520
  %columns124 = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 7, !dbg !7521
  %121 = load i64, i64* %columns124, align 8, !dbg !7521
  %conv125 = uitofp i64 %121 to double, !dbg !7520
  %mul126 = fmul double -1.000000e-02, %conv125, !dbg !7522
  %div127 = fdiv double %mul126, 2.000000e+00, !dbg !7523
  %conv128 = fptosi double %div127 to i64, !dbg !7524
  %call129 = call i32 @CompositeImage(%struct._Image* %118, i32 40, %struct._Image* %119, i64 %conv128, i64 0), !dbg !7525
  %122 = load %struct._Image*, %struct._Image** %picture_image, align 8, !dbg !7526
  %call130 = call %struct._Image* @DestroyImage(%struct._Image* %122), !dbg !7527
  store %struct._Image* %call130, %struct._Image** %picture_image, align 8, !dbg !7528
  %123 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7529
  %background_color131 = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 12, !dbg !7530
  %124 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7531
  %call132 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), %struct._PixelPacket* %background_color131, %struct._ExceptionInfo* %124), !dbg !7532
  %125 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7533
  %126 = load double, double* %angle.addr, align 8, !dbg !7534
  %127 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7535
  %call133 = call %struct._Image* @RotateImage(%struct._Image* %125, double %126, %struct._ExceptionInfo* %127), !dbg !7536
  store %struct._Image* %call133, %struct._Image** %rotate_image, align 8, !dbg !7537
  %128 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7538
  %call134 = call %struct._Image* @DestroyImage(%struct._Image* %128), !dbg !7539
  store %struct._Image* %call134, %struct._Image** %polaroid_image, align 8, !dbg !7540
  %129 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7541
  %cmp135 = icmp eq %struct._Image* %129, null, !dbg !7543
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !7544

if.then137:                                       ; preds = %if.end123
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7545
  br label %return, !dbg !7545

if.end138:                                        ; preds = %if.end123
  %130 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !7546
  store %struct._Image* %130, %struct._Image** %polaroid_image, align 8, !dbg !7547
  %131 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7548
  %132 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7549
  %call139 = call %struct._Image* @TrimImage(%struct._Image* %131, %struct._ExceptionInfo* %132), !dbg !7550
  store %struct._Image* %call139, %struct._Image** %trim_image, align 8, !dbg !7551
  %133 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7552
  %call140 = call %struct._Image* @DestroyImage(%struct._Image* %133), !dbg !7553
  store %struct._Image* %call140, %struct._Image** %polaroid_image, align 8, !dbg !7554
  %134 = load %struct._Image*, %struct._Image** %trim_image, align 8, !dbg !7555
  %cmp141 = icmp eq %struct._Image* %134, null, !dbg !7557
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !7558

if.then143:                                       ; preds = %if.end138
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7559
  br label %return, !dbg !7559

if.end144:                                        ; preds = %if.end138
  %135 = load %struct._Image*, %struct._Image** %trim_image, align 8, !dbg !7560
  store %struct._Image* %135, %struct._Image** %polaroid_image, align 8, !dbg !7561
  %136 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !7562
  store %struct._Image* %136, %struct._Image** %retval, align 8, !dbg !7563
  br label %return, !dbg !7563

return:                                           ; preds = %if.end144, %if.then143, %if.then137, %if.then121, %if.then114, %if.then105, %if.then98, %if.then86, %if.end63, %if.then14
  %137 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !7564
  ret %struct._Image* %137, !dbg !7564
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !7565 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  %0 = load double, double* %x.addr, align 8, !dbg !7572
  %1 = load double, double* %y.addr, align 8, !dbg !7574
  %cmp = fcmp ogt double %0, %1, !dbg !7575
  br i1 %cmp, label %if.then, label %if.end, !dbg !7576

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !7577
  store double %2, double* %retval, align 8, !dbg !7578
  br label %return, !dbg !7578

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !7579
  store double %3, double* %retval, align 8, !dbg !7580
  br label %return, !dbg !7580

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !7581
  ret double %4, !dbg !7581
}

declare dso_local i8* @GetImageProperty(%struct._Image*, i8*) #3

declare dso_local %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo*, %struct._DrawInfo*) #3

declare dso_local i8* @InterpretImageProperties(%struct._ImageInfo*, %struct._Image*, i8*) #3

declare dso_local i8* @CloneString(i8**, i8*) #3

declare dso_local i64 @FormatMagickCaption(%struct._Image*, %struct._DrawInfo*, i32, %struct._TypeMetric*, i8**) #3

declare dso_local i32 @SetImageExtent(%struct._Image*, i64, i64) #3

declare dso_local i32 @SetImageBackgroundColor(%struct._Image*) #3

declare dso_local i32 @AnnotateImage(%struct._Image*, %struct._DrawInfo*) #3

declare dso_local %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo*) #3

declare dso_local i32 @CompositeImage(%struct._Image*, i32, %struct._Image*, i64, i64) #3

declare dso_local i32 @QueryColorDatabase(i8*, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @RotateImage(%struct._Image*, double, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @WaveImage(%struct._Image* %image, double %amplitude, double %wave_length, %struct._ExceptionInfo* %exception) #0 !dbg !7582 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %amplitude.addr = alloca double, align 8
  %wave_length.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %wave_view = alloca %struct._CacheView*, align 8
  %wave_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %sine_map = alloca float*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  store double %amplitude, double* %amplitude.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amplitude.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  store double %wave_length, double* %wave_length.addr, align 8
  call void @llvm.dbg.declare(metadata double* %wave_length.addr, metadata !7587, metadata !DIExpression()), !dbg !7588
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7591, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata %struct._CacheView** %wave_view, metadata !7593, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata %struct._Image** %wave_image, metadata !7595, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7597, metadata !DIExpression()), !dbg !7598
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.declare(metadata float** %sine_map, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7607, metadata !DIExpression()), !dbg !7608
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7609
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7611
  %1 = load i32, i32* %debug, align 8, !dbg !7611
  %cmp = icmp ne i32 %1, 0, !dbg !7612
  br i1 %cmp, label %if.then, label %if.end, !dbg !7613

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7614
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7615
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7614
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5519, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !7616
  br label %if.end, !dbg !7617

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7618
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7619
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !7620
  %5 = load i64, i64* %columns, align 8, !dbg !7620
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7621
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !7622
  %7 = load i64, i64* %rows, align 8, !dbg !7622
  %conv = uitofp i64 %7 to double, !dbg !7621
  %8 = load double, double* %amplitude.addr, align 8, !dbg !7623
  %9 = call double @llvm.fabs.f64(double %8), !dbg !7624
  %mul = fmul double 2.000000e+00, %9, !dbg !7625
  %add = fadd double %conv, %mul, !dbg !7626
  %conv1 = fptoui double %add to i64, !dbg !7627
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7628
  %call2 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %conv1, i32 1, %struct._ExceptionInfo* %10), !dbg !7629
  store %struct._Image* %call2, %struct._Image** %wave_image, align 8, !dbg !7630
  %11 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7631
  %cmp3 = icmp eq %struct._Image* %11, null, !dbg !7633
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !7634

if.then5:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7635
  br label %return, !dbg !7635

if.end6:                                          ; preds = %if.end
  %12 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7636
  %call7 = call i32 @SetImageStorageClass(%struct._Image* %12, i32 1), !dbg !7638
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7639
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !7640

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7641
  %14 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7643
  %exception11 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !7644
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception11), !dbg !7645
  %15 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7646
  %call12 = call %struct._Image* @DestroyImage(%struct._Image* %15), !dbg !7647
  store %struct._Image* %call12, %struct._Image** %wave_image, align 8, !dbg !7648
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7649
  br label %return, !dbg !7649

if.end13:                                         ; preds = %if.end6
  %16 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7650
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 12, !dbg !7652
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !7653
  %17 = load i16, i16* %opacity, align 2, !dbg !7653
  %conv14 = zext i16 %17 to i32, !dbg !7650
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !7654
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7655

if.then17:                                        ; preds = %if.end13
  %18 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7656
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 6, !dbg !7657
  store i32 1, i32* %matte, align 8, !dbg !7658
  br label %if.end18, !dbg !7656

if.end18:                                         ; preds = %if.then17, %if.end13
  %19 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7659
  %columns19 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !7660
  %20 = load i64, i64* %columns19, align 8, !dbg !7660
  %call20 = call i8* @AcquireQuantumMemory(i64 %20, i64 4) #13, !dbg !7661
  %21 = bitcast i8* %call20 to float*, !dbg !7662
  store float* %21, float** %sine_map, align 8, !dbg !7663
  %22 = load float*, float** %sine_map, align 8, !dbg !7664
  %cmp21 = icmp eq float* %22, null, !dbg !7666
  br i1 %cmp21, label %if.then23, label %if.end28, !dbg !7667

if.then23:                                        ; preds = %if.end18
  %23 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7668
  %call24 = call %struct._Image* @DestroyImage(%struct._Image* %23), !dbg !7670
  store %struct._Image* %call24, %struct._Image** %wave_image, align 8, !dbg !7671
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7672
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7672
  %filename25 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 53, !dbg !7672
  %arraydecay26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename25, i64 0, i64 0, !dbg !7672
  %call27 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5542, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay26), !dbg !7672
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7672
  br label %return, !dbg !7672

if.end28:                                         ; preds = %if.end18
  store i64 0, i64* %i, align 8, !dbg !7674
  br label %for.cond, !dbg !7676

for.cond:                                         ; preds = %for.inc, %if.end28
  %26 = load i64, i64* %i, align 8, !dbg !7677
  %27 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7679
  %columns29 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 7, !dbg !7680
  %28 = load i64, i64* %columns29, align 8, !dbg !7680
  %cmp30 = icmp slt i64 %26, %28, !dbg !7681
  br i1 %cmp30, label %for.body, label %for.end, !dbg !7682

for.body:                                         ; preds = %for.cond
  %29 = load double, double* %amplitude.addr, align 8, !dbg !7683
  %30 = call double @llvm.fabs.f64(double %29), !dbg !7684
  %31 = load double, double* %amplitude.addr, align 8, !dbg !7685
  %32 = load i64, i64* %i, align 8, !dbg !7686
  %conv32 = sitofp i64 %32 to double, !dbg !7686
  %mul33 = fmul double 0x401921FB54442D18, %conv32, !dbg !7687
  %33 = load double, double* %wave_length.addr, align 8, !dbg !7688
  %div = fdiv double %mul33, %33, !dbg !7689
  %call34 = call double @sin(double %div) #14, !dbg !7690
  %mul35 = fmul double %31, %call34, !dbg !7691
  %add36 = fadd double %30, %mul35, !dbg !7692
  %conv37 = fptrunc double %add36 to float, !dbg !7684
  %34 = load float*, float** %sine_map, align 8, !dbg !7693
  %35 = load i64, i64* %i, align 8, !dbg !7694
  %arrayidx = getelementptr inbounds float, float* %34, i64 %35, !dbg !7693
  store float %conv37, float* %arrayidx, align 4, !dbg !7695
  br label %for.inc, !dbg !7693

for.inc:                                          ; preds = %for.body
  %36 = load i64, i64* %i, align 8, !dbg !7696
  %inc = add nsw i64 %36, 1, !dbg !7696
  store i64 %inc, i64* %i, align 8, !dbg !7696
  br label %for.cond, !dbg !7697, !llvm.loop !7698

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %status, align 4, !dbg !7700
  store i64 0, i64* %progress, align 8, !dbg !7701
  %37 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7702
  call void @GetMagickPixelPacket(%struct._Image* %37, %struct._MagickPixelPacket* %zero), !dbg !7703
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7704
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7705
  %call38 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %38, %struct._ExceptionInfo* %39), !dbg !7706
  store %struct._CacheView* %call38, %struct._CacheView** %image_view, align 8, !dbg !7707
  %40 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7708
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7709
  %call39 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %40, %struct._ExceptionInfo* %41), !dbg !7710
  store %struct._CacheView* %call39, %struct._CacheView** %wave_view, align 8, !dbg !7711
  %42 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7712
  %call40 = call i32 @SetCacheViewVirtualPixelMethod(%struct._CacheView* %42, i32 1), !dbg !7713
  store i64 0, i64* %y, align 8, !dbg !7714
  br label %for.cond41, !dbg !7716

for.cond41:                                       ; preds = %for.inc86, %for.end
  %43 = load i64, i64* %y, align 8, !dbg !7717
  %44 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7719
  %rows42 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 8, !dbg !7720
  %45 = load i64, i64* %rows42, align 8, !dbg !7720
  %cmp43 = icmp slt i64 %43, %45, !dbg !7721
  br i1 %cmp43, label %for.body45, label %for.end88, !dbg !7722

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !7723, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7726, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7730, metadata !DIExpression()), !dbg !7731
  %46 = load i32, i32* %status, align 4, !dbg !7732
  %cmp46 = icmp eq i32 %46, 0, !dbg !7734
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !7735

if.then48:                                        ; preds = %for.body45
  br label %for.inc86, !dbg !7736

if.end49:                                         ; preds = %for.body45
  %47 = load %struct._CacheView*, %struct._CacheView** %wave_view, align 8, !dbg !7737
  %48 = load i64, i64* %y, align 8, !dbg !7738
  %49 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7739
  %columns50 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 7, !dbg !7740
  %50 = load i64, i64* %columns50, align 8, !dbg !7740
  %51 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7741
  %call51 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %47, i64 0, i64 %48, i64 %50, i64 1, %struct._ExceptionInfo* %51), !dbg !7742
  store %struct._PixelPacket* %call51, %struct._PixelPacket** %q, align 8, !dbg !7743
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7744
  %cmp52 = icmp eq %struct._PixelPacket* %52, null, !dbg !7746
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !7747

if.then54:                                        ; preds = %if.end49
  store i32 0, i32* %status, align 4, !dbg !7748
  br label %for.inc86, !dbg !7750

if.end55:                                         ; preds = %if.end49
  %53 = load %struct._CacheView*, %struct._CacheView** %wave_view, align 8, !dbg !7751
  %call56 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %53), !dbg !7752
  store i16* %call56, i16** %indexes, align 8, !dbg !7753
  %54 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !7754
  %55 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !7754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 56, i1 false), !dbg !7754
  store i64 0, i64* %x, align 8, !dbg !7755
  br label %for.cond57, !dbg !7757

for.cond57:                                       ; preds = %for.inc67, %if.end55
  %56 = load i64, i64* %x, align 8, !dbg !7758
  %57 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7760
  %columns58 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 7, !dbg !7761
  %58 = load i64, i64* %columns58, align 8, !dbg !7761
  %cmp59 = icmp slt i64 %56, %58, !dbg !7762
  br i1 %cmp59, label %for.body61, label %for.end69, !dbg !7763

for.body61:                                       ; preds = %for.cond57
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7764
  %60 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7766
  %61 = load i64, i64* %x, align 8, !dbg !7767
  %conv62 = sitofp i64 %61 to double, !dbg !7768
  %62 = load i64, i64* %y, align 8, !dbg !7769
  %conv63 = sitofp i64 %62 to float, !dbg !7769
  %63 = load float*, float** %sine_map, align 8, !dbg !7770
  %64 = load i64, i64* %x, align 8, !dbg !7771
  %arrayidx64 = getelementptr inbounds float, float* %63, i64 %64, !dbg !7770
  %65 = load float, float* %arrayidx64, align 4, !dbg !7770
  %sub = fsub float %conv63, %65, !dbg !7772
  %conv65 = fpext float %sub to double, !dbg !7773
  %66 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7774
  %call66 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %59, %struct._CacheView* %60, i32 0, double %conv62, double %conv65, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %66), !dbg !7775
  %67 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7776
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7777
  %69 = load i16*, i16** %indexes, align 8, !dbg !7778
  %70 = load i64, i64* %x, align 8, !dbg !7779
  %add.ptr = getelementptr inbounds i16, i16* %69, i64 %70, !dbg !7780
  call void @SetPixelPacket(%struct._Image* %67, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %68, i16* %add.ptr), !dbg !7781
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7782
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 1, !dbg !7782
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !7782
  br label %for.inc67, !dbg !7783

for.inc67:                                        ; preds = %for.body61
  %72 = load i64, i64* %x, align 8, !dbg !7784
  %inc68 = add nsw i64 %72, 1, !dbg !7784
  store i64 %inc68, i64* %x, align 8, !dbg !7784
  br label %for.cond57, !dbg !7785, !llvm.loop !7786

for.end69:                                        ; preds = %for.cond57
  %73 = load %struct._CacheView*, %struct._CacheView** %wave_view, align 8, !dbg !7788
  %74 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7790
  %call70 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %73, %struct._ExceptionInfo* %74), !dbg !7791
  %cmp71 = icmp eq i32 %call70, 0, !dbg !7792
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !7793

if.then73:                                        ; preds = %for.end69
  store i32 0, i32* %status, align 4, !dbg !7794
  br label %if.end74, !dbg !7795

if.end74:                                         ; preds = %if.then73, %for.end69
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7796
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 47, !dbg !7798
  %76 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7798
  %cmp75 = icmp ne i32 (i8*, i64, i64, i8*)* %76, null, !dbg !7799
  br i1 %cmp75, label %if.then77, label %if.end85, !dbg !7800

if.then77:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7801, metadata !DIExpression()), !dbg !7803
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7804
  %78 = load i64, i64* %progress, align 8, !dbg !7805
  %inc78 = add nsw i64 %78, 1, !dbg !7805
  store i64 %inc78, i64* %progress, align 8, !dbg !7805
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7806
  %rows79 = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 8, !dbg !7807
  %80 = load i64, i64* %rows79, align 8, !dbg !7807
  %call80 = call i32 @SetImageProgress(%struct._Image* %77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i64 %78, i64 %80), !dbg !7808
  store i32 %call80, i32* %proceed, align 4, !dbg !7809
  %81 = load i32, i32* %proceed, align 4, !dbg !7810
  %cmp81 = icmp eq i32 %81, 0, !dbg !7812
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !7813

if.then83:                                        ; preds = %if.then77
  store i32 0, i32* %status, align 4, !dbg !7814
  br label %if.end84, !dbg !7815

if.end84:                                         ; preds = %if.then83, %if.then77
  br label %if.end85, !dbg !7816

if.end85:                                         ; preds = %if.end84, %if.end74
  br label %for.inc86, !dbg !7817

for.inc86:                                        ; preds = %if.end85, %if.then54, %if.then48
  %82 = load i64, i64* %y, align 8, !dbg !7818
  %inc87 = add nsw i64 %82, 1, !dbg !7818
  store i64 %inc87, i64* %y, align 8, !dbg !7818
  br label %for.cond41, !dbg !7819, !llvm.loop !7820

for.end88:                                        ; preds = %for.cond41
  %83 = load %struct._CacheView*, %struct._CacheView** %wave_view, align 8, !dbg !7822
  %call89 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %83), !dbg !7823
  store %struct._CacheView* %call89, %struct._CacheView** %wave_view, align 8, !dbg !7824
  %84 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7825
  %call90 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %84), !dbg !7826
  store %struct._CacheView* %call90, %struct._CacheView** %image_view, align 8, !dbg !7827
  %85 = load float*, float** %sine_map, align 8, !dbg !7828
  %86 = bitcast float* %85 to i8*, !dbg !7828
  %call91 = call i8* @RelinquishMagickMemory(i8* %86), !dbg !7829
  %87 = bitcast i8* %call91 to float*, !dbg !7830
  store float* %87, float** %sine_map, align 8, !dbg !7831
  %88 = load i32, i32* %status, align 4, !dbg !7832
  %cmp92 = icmp eq i32 %88, 0, !dbg !7834
  br i1 %cmp92, label %if.then94, label %if.end96, !dbg !7835

if.then94:                                        ; preds = %for.end88
  %89 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7836
  %call95 = call %struct._Image* @DestroyImage(%struct._Image* %89), !dbg !7837
  store %struct._Image* %call95, %struct._Image** %wave_image, align 8, !dbg !7838
  br label %if.end96, !dbg !7839

if.end96:                                         ; preds = %if.then94, %for.end88
  %90 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !7840
  store %struct._Image* %90, %struct._Image** %retval, align 8, !dbg !7841
  br label %return, !dbg !7841

return:                                           ; preds = %if.end96, %if.then23, %if.then10, %if.then5
  %91 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !7842
  ret %struct._Image* %91, !dbg !7842
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ShadowImage(%struct._Image* %image, double %opacity, double %sigma, i64 %x_offset, i64 %y_offset, %struct._ExceptionInfo* %exception) #0 !dbg !7843 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %border_image = alloca %struct._Image*, align 8
  %clone_image = alloca %struct._Image*, align 8
  %shadow_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %border_info = alloca %struct._RectangleInfo, align 8
  %y = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x30 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  store double %opacity, double* %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %opacity.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7858, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata %struct._Image** %border_image, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata %struct._Image** %clone_image, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata %struct._Image** %shadow_image, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %border_info, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7872, metadata !DIExpression()), !dbg !7873
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7874
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7876
  %1 = load i32, i32* %debug, align 8, !dbg !7876
  %cmp = icmp ne i32 %1, 0, !dbg !7877
  br i1 %cmp, label %if.then, label %if.end, !dbg !7878

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7879
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7880
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7879
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !7881
  br label %if.end, !dbg !7882

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7883
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7884
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !7885
  store %struct._Image* %call1, %struct._Image** %clone_image, align 8, !dbg !7886
  %5 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7887
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !7889
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7890

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7891
  br label %return, !dbg !7891

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7892
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 1, !dbg !7894
  %7 = load i32, i32* %colorspace, align 4, !dbg !7894
  %call5 = call i32 @IsGrayColorspace(i32 %7), !dbg !7895
  %cmp6 = icmp ne i32 %call5, 0, !dbg !7896
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !7897

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7898
  %call8 = call i32 @SetImageColorspace(%struct._Image* %8, i32 13), !dbg !7899
  br label %if.end9, !dbg !7900

if.end9:                                          ; preds = %if.then7, %if.end4
  %9 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7901
  %call10 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %9, i32 4), !dbg !7902
  %10 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7903
  %compose = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 36, !dbg !7904
  store i32 40, i32* %compose, align 8, !dbg !7905
  %11 = load double, double* %sigma.addr, align 8, !dbg !7906
  %mul = fmul double 2.000000e+00, %11, !dbg !7907
  %add = fadd double %mul, 5.000000e-01, !dbg !7908
  %12 = call double @llvm.floor.f64(double %add), !dbg !7909
  %conv = fptoui double %12 to i64, !dbg !7910
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 0, !dbg !7911
  store i64 %conv, i64* %width, align 8, !dbg !7912
  %13 = load double, double* %sigma.addr, align 8, !dbg !7913
  %mul11 = fmul double 2.000000e+00, %13, !dbg !7914
  %add12 = fadd double %mul11, 5.000000e-01, !dbg !7915
  %14 = call double @llvm.floor.f64(double %add12), !dbg !7916
  %conv13 = fptoui double %14 to i64, !dbg !7917
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 1, !dbg !7918
  store i64 %conv13, i64* %height, align 8, !dbg !7919
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 2, !dbg !7920
  store i64 0, i64* %x, align 8, !dbg !7921
  %y14 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 3, !dbg !7922
  store i64 0, i64* %y14, align 8, !dbg !7923
  %15 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7924
  %border_color = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 13, !dbg !7925
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7926
  %call15 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), %struct._PixelPacket* %border_color, %struct._ExceptionInfo* %16), !dbg !7927
  %17 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7928
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7929
  %call16 = call %struct._Image* @BorderImage(%struct._Image* %17, %struct._RectangleInfo* %border_info, %struct._ExceptionInfo* %18), !dbg !7930
  store %struct._Image* %call16, %struct._Image** %border_image, align 8, !dbg !7931
  %19 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !7932
  %call17 = call %struct._Image* @DestroyImage(%struct._Image* %19), !dbg !7933
  store %struct._Image* %call17, %struct._Image** %clone_image, align 8, !dbg !7934
  %20 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7935
  %cmp18 = icmp eq %struct._Image* %20, null, !dbg !7937
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7938

if.then20:                                        ; preds = %if.end9
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7939
  br label %return, !dbg !7939

if.end21:                                         ; preds = %if.end9
  %21 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7940
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 6, !dbg !7942
  %22 = load i32, i32* %matte, align 8, !dbg !7942
  %cmp22 = icmp eq i32 %22, 0, !dbg !7943
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !7944

if.then24:                                        ; preds = %if.end21
  %23 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7945
  %call25 = call i32 @SetImageAlphaChannel(%struct._Image* %23, i32 6), !dbg !7946
  br label %if.end26, !dbg !7947

if.end26:                                         ; preds = %if.then24, %if.end21
  store i32 1, i32* %status, align 4, !dbg !7948
  store i64 0, i64* %progress, align 8, !dbg !7949
  %24 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7950
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7951
  %call27 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %24, %struct._ExceptionInfo* %25), !dbg !7952
  store %struct._CacheView* %call27, %struct._CacheView** %image_view, align 8, !dbg !7953
  store i64 0, i64* %y, align 8, !dbg !7954
  br label %for.cond, !dbg !7956

for.cond:                                         ; preds = %for.inc82, %if.end26
  %26 = load i64, i64* %y, align 8, !dbg !7957
  %27 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7959
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 8, !dbg !7960
  %28 = load i64, i64* %rows, align 8, !dbg !7960
  %cmp28 = icmp slt i64 %26, %28, !dbg !7961
  br i1 %cmp28, label %for.body, label %for.end84, !dbg !7962

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata i64* %x30, metadata !7966, metadata !DIExpression()), !dbg !7967
  %29 = load i32, i32* %status, align 4, !dbg !7968
  %cmp31 = icmp eq i32 %29, 0, !dbg !7970
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7971

if.then33:                                        ; preds = %for.body
  br label %for.inc82, !dbg !7972

if.end34:                                         ; preds = %for.body
  %30 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7973
  %31 = load i64, i64* %y, align 8, !dbg !7974
  %32 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7975
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 7, !dbg !7976
  %33 = load i64, i64* %columns, align 8, !dbg !7976
  %34 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7977
  %call35 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %30, i64 0, i64 %31, i64 %33, i64 1, %struct._ExceptionInfo* %34), !dbg !7978
  store %struct._PixelPacket* %call35, %struct._PixelPacket** %q, align 8, !dbg !7979
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7980
  %cmp36 = icmp eq %struct._PixelPacket* %35, null, !dbg !7982
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !7983

if.then38:                                        ; preds = %if.end34
  store i32 0, i32* %status, align 4, !dbg !7984
  br label %for.inc82, !dbg !7986

if.end39:                                         ; preds = %if.end34
  store i64 0, i64* %x30, align 8, !dbg !7987
  br label %for.cond40, !dbg !7989

for.cond40:                                       ; preds = %for.inc, %if.end39
  %36 = load i64, i64* %x30, align 8, !dbg !7990
  %37 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7992
  %columns41 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 7, !dbg !7993
  %38 = load i64, i64* %columns41, align 8, !dbg !7993
  %cmp42 = icmp slt i64 %36, %38, !dbg !7994
  br i1 %cmp42, label %for.body44, label %for.end, !dbg !7995

for.body44:                                       ; preds = %for.cond40
  %39 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7996
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 12, !dbg !7996
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 2, !dbg !7996
  %40 = load i16, i16* %red, align 4, !dbg !7996
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7996
  %red45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 0, i32 2, !dbg !7996
  store i16 %40, i16* %red45, align 2, !dbg !7996
  %42 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7998
  %background_color46 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 12, !dbg !7998
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color46, i32 0, i32 1, !dbg !7998
  %43 = load i16, i16* %green, align 2, !dbg !7998
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7998
  %green47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 1, !dbg !7998
  store i16 %43, i16* %green47, align 2, !dbg !7998
  %45 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !7999
  %background_color48 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 12, !dbg !7999
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color48, i32 0, i32 0, !dbg !7999
  %46 = load i16, i16* %blue, align 8, !dbg !7999
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7999
  %blue49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 0, i32 0, !dbg !7999
  store i16 %46, i16* %blue49, align 2, !dbg !7999
  %48 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !8000
  %matte50 = getelementptr inbounds %struct._Image, %struct._Image* %48, i32 0, i32 6, !dbg !8002
  %49 = load i32, i32* %matte50, align 8, !dbg !8002
  %cmp51 = icmp eq i32 %49, 0, !dbg !8003
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !8004

if.then53:                                        ; preds = %for.body44
  %50 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !8005
  %background_color54 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 12, !dbg !8005
  %opacity55 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color54, i32 0, i32 3, !dbg !8005
  %51 = load i16, i16* %opacity55, align 2, !dbg !8005
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8005
  %opacity56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 3, !dbg !8005
  store i16 %51, i16* %opacity56, align 2, !dbg !8005
  br label %if.end65, !dbg !8005

if.else:                                          ; preds = %for.body44
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8006
  %opacity57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 3, !dbg !8006
  %54 = load i16, i16* %opacity57, align 2, !dbg !8006
  %conv58 = zext i16 %54 to i32, !dbg !8006
  %sub = sub nsw i32 65535, %conv58, !dbg !8006
  %conv59 = sitofp i32 %sub to double, !dbg !8006
  %55 = load double, double* %opacity.addr, align 8, !dbg !8006
  %mul60 = fmul double %conv59, %55, !dbg !8006
  %div = fdiv double %mul60, 1.000000e+02, !dbg !8006
  %sub61 = fsub double 6.553500e+04, %div, !dbg !8006
  %conv62 = fptrunc double %sub61 to float, !dbg !8006
  %call63 = call zeroext i16 @ClampToQuantum(float %conv62), !dbg !8006
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8006
  %opacity64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 3, !dbg !8006
  store i16 %call63, i16* %opacity64, align 2, !dbg !8006
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then53
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8007
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 1, !dbg !8007
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8007
  br label %for.inc, !dbg !8008

for.inc:                                          ; preds = %if.end65
  %58 = load i64, i64* %x30, align 8, !dbg !8009
  %inc = add nsw i64 %58, 1, !dbg !8009
  store i64 %inc, i64* %x30, align 8, !dbg !8009
  br label %for.cond40, !dbg !8010, !llvm.loop !8011

for.end:                                          ; preds = %for.cond40
  %59 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8013
  %60 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8015
  %call66 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %59, %struct._ExceptionInfo* %60), !dbg !8016
  %cmp67 = icmp eq i32 %call66, 0, !dbg !8017
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !8018

if.then69:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !8019
  br label %if.end70, !dbg !8020

if.end70:                                         ; preds = %if.then69, %for.end
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8021
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 47, !dbg !8023
  %62 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8023
  %cmp71 = icmp ne i32 (i8*, i64, i64, i8*)* %62, null, !dbg !8024
  br i1 %cmp71, label %if.then73, label %if.end81, !dbg !8025

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8026, metadata !DIExpression()), !dbg !8028
  %63 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8029
  %64 = load i64, i64* %progress, align 8, !dbg !8030
  %inc74 = add nsw i64 %64, 1, !dbg !8030
  store i64 %inc74, i64* %progress, align 8, !dbg !8030
  %65 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !8031
  %rows75 = getelementptr inbounds %struct._Image, %struct._Image* %65, i32 0, i32 8, !dbg !8032
  %66 = load i64, i64* %rows75, align 8, !dbg !8032
  %call76 = call i32 @SetImageProgress(%struct._Image* %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i64 %64, i64 %66), !dbg !8033
  store i32 %call76, i32* %proceed, align 4, !dbg !8034
  %67 = load i32, i32* %proceed, align 4, !dbg !8035
  %cmp77 = icmp eq i32 %67, 0, !dbg !8037
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !8038

if.then79:                                        ; preds = %if.then73
  store i32 0, i32* %status, align 4, !dbg !8039
  br label %if.end80, !dbg !8040

if.end80:                                         ; preds = %if.then79, %if.then73
  br label %if.end81, !dbg !8041

if.end81:                                         ; preds = %if.end80, %if.end70
  br label %for.inc82, !dbg !8042

for.inc82:                                        ; preds = %if.end81, %if.then38, %if.then33
  %68 = load i64, i64* %y, align 8, !dbg !8043
  %inc83 = add nsw i64 %68, 1, !dbg !8043
  store i64 %inc83, i64* %y, align 8, !dbg !8043
  br label %for.cond, !dbg !8044, !llvm.loop !8045

for.end84:                                        ; preds = %for.cond
  %69 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8047
  %call85 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %69), !dbg !8048
  store %struct._CacheView* %call85, %struct._CacheView** %image_view, align 8, !dbg !8049
  %70 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !8050
  %71 = load double, double* %sigma.addr, align 8, !dbg !8051
  %72 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8052
  %call86 = call %struct._Image* @BlurImageChannel(%struct._Image* %70, i32 8, double 0.000000e+00, double %71, %struct._ExceptionInfo* %72), !dbg !8053
  store %struct._Image* %call86, %struct._Image** %shadow_image, align 8, !dbg !8054
  %73 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !8055
  %call87 = call %struct._Image* @DestroyImage(%struct._Image* %73), !dbg !8056
  store %struct._Image* %call87, %struct._Image** %border_image, align 8, !dbg !8057
  %74 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8058
  %cmp88 = icmp eq %struct._Image* %74, null, !dbg !8060
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !8061

if.then90:                                        ; preds = %for.end84
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8062
  br label %return, !dbg !8062

if.end91:                                         ; preds = %for.end84
  %75 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8063
  %page = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 26, !dbg !8065
  %width92 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 0, !dbg !8066
  %76 = load i64, i64* %width92, align 8, !dbg !8066
  %cmp93 = icmp eq i64 %76, 0, !dbg !8067
  br i1 %cmp93, label %if.then95, label %if.end99, !dbg !8068

if.then95:                                        ; preds = %if.end91
  %77 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8069
  %columns96 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 7, !dbg !8070
  %78 = load i64, i64* %columns96, align 8, !dbg !8070
  %79 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8071
  %page97 = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 26, !dbg !8072
  %width98 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page97, i32 0, i32 0, !dbg !8073
  store i64 %78, i64* %width98, align 8, !dbg !8074
  br label %if.end99, !dbg !8071

if.end99:                                         ; preds = %if.then95, %if.end91
  %80 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8075
  %page100 = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 26, !dbg !8077
  %height101 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page100, i32 0, i32 1, !dbg !8078
  %81 = load i64, i64* %height101, align 8, !dbg !8078
  %cmp102 = icmp eq i64 %81, 0, !dbg !8079
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !8080

if.then104:                                       ; preds = %if.end99
  %82 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8081
  %rows105 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 8, !dbg !8082
  %83 = load i64, i64* %rows105, align 8, !dbg !8082
  %84 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8083
  %page106 = getelementptr inbounds %struct._Image, %struct._Image* %84, i32 0, i32 26, !dbg !8084
  %height107 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page106, i32 0, i32 1, !dbg !8085
  store i64 %83, i64* %height107, align 8, !dbg !8086
  br label %if.end108, !dbg !8083

if.end108:                                        ; preds = %if.then104, %if.end99
  %85 = load i64, i64* %x_offset.addr, align 8, !dbg !8087
  %width109 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 0, !dbg !8088
  %86 = load i64, i64* %width109, align 8, !dbg !8088
  %sub110 = sub nsw i64 %85, %86, !dbg !8089
  %87 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8090
  %page111 = getelementptr inbounds %struct._Image, %struct._Image* %87, i32 0, i32 26, !dbg !8091
  %width112 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page111, i32 0, i32 0, !dbg !8092
  %88 = load i64, i64* %width112, align 8, !dbg !8093
  %add113 = add i64 %88, %sub110, !dbg !8093
  store i64 %add113, i64* %width112, align 8, !dbg !8093
  %89 = load i64, i64* %y_offset.addr, align 8, !dbg !8094
  %height114 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 1, !dbg !8095
  %90 = load i64, i64* %height114, align 8, !dbg !8095
  %sub115 = sub nsw i64 %89, %90, !dbg !8096
  %91 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8097
  %page116 = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 26, !dbg !8098
  %height117 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page116, i32 0, i32 1, !dbg !8099
  %92 = load i64, i64* %height117, align 8, !dbg !8100
  %add118 = add i64 %92, %sub115, !dbg !8100
  store i64 %add118, i64* %height117, align 8, !dbg !8100
  %93 = load i64, i64* %x_offset.addr, align 8, !dbg !8101
  %width119 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 0, !dbg !8102
  %94 = load i64, i64* %width119, align 8, !dbg !8102
  %sub120 = sub nsw i64 %93, %94, !dbg !8103
  %95 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8104
  %page121 = getelementptr inbounds %struct._Image, %struct._Image* %95, i32 0, i32 26, !dbg !8105
  %x122 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page121, i32 0, i32 2, !dbg !8106
  %96 = load i64, i64* %x122, align 8, !dbg !8107
  %add123 = add nsw i64 %96, %sub120, !dbg !8107
  store i64 %add123, i64* %x122, align 8, !dbg !8107
  %97 = load i64, i64* %y_offset.addr, align 8, !dbg !8108
  %height124 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 1, !dbg !8109
  %98 = load i64, i64* %height124, align 8, !dbg !8109
  %sub125 = sub nsw i64 %97, %98, !dbg !8110
  %99 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8111
  %page126 = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 26, !dbg !8112
  %y127 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page126, i32 0, i32 3, !dbg !8113
  %100 = load i64, i64* %y127, align 8, !dbg !8114
  %add128 = add nsw i64 %100, %sub125, !dbg !8114
  store i64 %add128, i64* %y127, align 8, !dbg !8114
  %101 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !8115
  store %struct._Image* %101, %struct._Image** %retval, align 8, !dbg !8116
  br label %return, !dbg !8116

return:                                           ; preds = %if.end108, %if.then90, %if.then20, %if.then3
  %102 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8117
  ret %struct._Image* %102, !dbg !8117
}

declare dso_local %struct._Image* @FlopImage(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @TrimImage(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SepiaToneImage(%struct._Image* %image, double %threshold, %struct._ExceptionInfo* %exception) #0 !dbg !8118 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %threshold.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %sepia_view = alloca %struct._CacheView*, align 8
  %sepia_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %intensity = alloca double, align 8
  %tone = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !8125, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata %struct._CacheView** %sepia_view, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata %struct._Image** %sepia_image, metadata !8129, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8131, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !8133, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8135, metadata !DIExpression()), !dbg !8136
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8137
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8139
  %1 = load i32, i32* %debug, align 8, !dbg !8139
  %cmp = icmp ne i32 %1, 0, !dbg !8140
  br i1 %cmp, label %if.then, label %if.end, !dbg !8141

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8142
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !8143
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !8142
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !8144
  br label %if.end, !dbg !8145

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8146
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8147
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !8148
  %5 = load i64, i64* %columns, align 8, !dbg !8148
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8149
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !8150
  %7 = load i64, i64* %rows, align 8, !dbg !8150
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8151
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %7, i32 1, %struct._ExceptionInfo* %8), !dbg !8152
  store %struct._Image* %call1, %struct._Image** %sepia_image, align 8, !dbg !8153
  %9 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8154
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !8156
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8157

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8158
  br label %return, !dbg !8158

if.end4:                                          ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8159
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %10, i32 1), !dbg !8161
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8162
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !8163

if.then7:                                         ; preds = %if.end4
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8164
  %12 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8166
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !8167
  call void @InheritException(%struct._ExceptionInfo* %11, %struct._ExceptionInfo* %exception8), !dbg !8168
  %13 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8169
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %13), !dbg !8170
  store %struct._Image* %call9, %struct._Image** %sepia_image, align 8, !dbg !8171
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8172
  br label %return, !dbg !8172

if.end10:                                         ; preds = %if.end4
  store i32 1, i32* %status, align 4, !dbg !8173
  store i64 0, i64* %progress, align 8, !dbg !8174
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8175
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8176
  %call11 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %14, %struct._ExceptionInfo* %15), !dbg !8177
  store %struct._CacheView* %call11, %struct._CacheView** %image_view, align 8, !dbg !8178
  %16 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8179
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8180
  %call12 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %16, %struct._ExceptionInfo* %17), !dbg !8181
  store %struct._CacheView* %call12, %struct._CacheView** %sepia_view, align 8, !dbg !8182
  store i64 0, i64* %y, align 8, !dbg !8183
  br label %for.cond, !dbg !8185

for.cond:                                         ; preds = %for.inc95, %if.end10
  %18 = load i64, i64* %y, align 8, !dbg !8186
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8188
  %rows13 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !8189
  %20 = load i64, i64* %rows13, align 8, !dbg !8189
  %cmp14 = icmp slt i64 %18, %20, !dbg !8190
  br i1 %cmp14, label %for.body, label %for.end97, !dbg !8191

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8197, metadata !DIExpression()), !dbg !8198
  %21 = load i32, i32* %status, align 4, !dbg !8199
  %cmp15 = icmp eq i32 %21, 0, !dbg !8201
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8202

if.then16:                                        ; preds = %for.body
  br label %for.inc95, !dbg !8203

if.end17:                                         ; preds = %for.body
  %22 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8204
  %23 = load i64, i64* %y, align 8, !dbg !8205
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8206
  %columns18 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 7, !dbg !8207
  %25 = load i64, i64* %columns18, align 8, !dbg !8207
  %26 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8208
  %call19 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %22, i64 0, i64 %23, i64 %25, i64 1, %struct._ExceptionInfo* %26), !dbg !8209
  store %struct._PixelPacket* %call19, %struct._PixelPacket** %p, align 8, !dbg !8210
  %27 = load %struct._CacheView*, %struct._CacheView** %sepia_view, align 8, !dbg !8211
  %28 = load i64, i64* %y, align 8, !dbg !8212
  %29 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8213
  %columns20 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 7, !dbg !8214
  %30 = load i64, i64* %columns20, align 8, !dbg !8214
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8215
  %call21 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %27, i64 0, i64 %28, i64 %30, i64 1, %struct._ExceptionInfo* %31), !dbg !8216
  store %struct._PixelPacket* %call21, %struct._PixelPacket** %q, align 8, !dbg !8217
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8218
  %cmp22 = icmp eq %struct._PixelPacket* %32, null, !dbg !8220
  br i1 %cmp22, label %if.then24, label %lor.lhs.false, !dbg !8221

lor.lhs.false:                                    ; preds = %if.end17
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8222
  %cmp23 = icmp eq %struct._PixelPacket* %33, null, !dbg !8223
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !8224

if.then24:                                        ; preds = %lor.lhs.false, %if.end17
  store i32 0, i32* %status, align 4, !dbg !8225
  br label %for.inc95, !dbg !8227

if.end25:                                         ; preds = %lor.lhs.false
  store i64 0, i64* %x, align 8, !dbg !8228
  br label %for.cond26, !dbg !8230

for.cond26:                                       ; preds = %for.inc, %if.end25
  %34 = load i64, i64* %x, align 8, !dbg !8231
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8233
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !8234
  %36 = load i64, i64* %columns27, align 8, !dbg !8234
  %cmp28 = icmp slt i64 %34, %36, !dbg !8235
  br i1 %cmp28, label %for.body29, label %for.end, !dbg !8236

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata double* %intensity, metadata !8237, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.declare(metadata double* %tone, metadata !8240, metadata !DIExpression()), !dbg !8241
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8242
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8243
  %call30 = call float @GetPixelIntensity(%struct._Image* %37, %struct._PixelPacket* %38), !dbg !8244
  %conv = fpext float %call30 to double, !dbg !8244
  store double %conv, double* %intensity, align 8, !dbg !8245
  %39 = load double, double* %intensity, align 8, !dbg !8246
  %40 = load double, double* %threshold.addr, align 8, !dbg !8247
  %cmp31 = fcmp ogt double %39, %40, !dbg !8248
  br i1 %cmp31, label %cond.true, label %cond.false, !dbg !8246

cond.true:                                        ; preds = %for.body29
  br label %cond.end, !dbg !8246

cond.false:                                       ; preds = %for.body29
  %41 = load double, double* %intensity, align 8, !dbg !8249
  %add = fadd double %41, 6.553500e+04, !dbg !8250
  %42 = load double, double* %threshold.addr, align 8, !dbg !8251
  %sub = fsub double %add, %42, !dbg !8252
  br label %cond.end, !dbg !8246

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 6.553500e+04, %cond.true ], [ %sub, %cond.false ], !dbg !8246
  store double %cond, double* %tone, align 8, !dbg !8253
  %43 = load double, double* %tone, align 8, !dbg !8254
  %conv33 = fptrunc double %43 to float, !dbg !8254
  %call34 = call zeroext i16 @ClampToQuantum(float %conv33), !dbg !8254
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8254
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 2, !dbg !8254
  store i16 %call34, i16* %red, align 2, !dbg !8254
  %45 = load double, double* %intensity, align 8, !dbg !8255
  %46 = load double, double* %threshold.addr, align 8, !dbg !8256
  %mul = fmul double 7.000000e+00, %46, !dbg !8257
  %div = fdiv double %mul, 6.000000e+00, !dbg !8258
  %cmp35 = fcmp ogt double %45, %div, !dbg !8259
  br i1 %cmp35, label %cond.true37, label %cond.false38, !dbg !8255

cond.true37:                                      ; preds = %cond.end
  br label %cond.end43, !dbg !8255

cond.false38:                                     ; preds = %cond.end
  %47 = load double, double* %intensity, align 8, !dbg !8260
  %add39 = fadd double %47, 6.553500e+04, !dbg !8261
  %48 = load double, double* %threshold.addr, align 8, !dbg !8262
  %mul40 = fmul double 7.000000e+00, %48, !dbg !8263
  %div41 = fdiv double %mul40, 6.000000e+00, !dbg !8264
  %sub42 = fsub double %add39, %div41, !dbg !8265
  br label %cond.end43, !dbg !8255

cond.end43:                                       ; preds = %cond.false38, %cond.true37
  %cond44 = phi double [ 6.553500e+04, %cond.true37 ], [ %sub42, %cond.false38 ], !dbg !8255
  store double %cond44, double* %tone, align 8, !dbg !8266
  %49 = load double, double* %tone, align 8, !dbg !8267
  %conv45 = fptrunc double %49 to float, !dbg !8267
  %call46 = call zeroext i16 @ClampToQuantum(float %conv45), !dbg !8267
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8267
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 1, !dbg !8267
  store i16 %call46, i16* %green, align 2, !dbg !8267
  %51 = load double, double* %intensity, align 8, !dbg !8268
  %52 = load double, double* %threshold.addr, align 8, !dbg !8269
  %div47 = fdiv double %52, 6.000000e+00, !dbg !8270
  %cmp48 = fcmp olt double %51, %div47, !dbg !8271
  br i1 %cmp48, label %cond.true50, label %cond.false51, !dbg !8268

cond.true50:                                      ; preds = %cond.end43
  br label %cond.end54, !dbg !8268

cond.false51:                                     ; preds = %cond.end43
  %53 = load double, double* %intensity, align 8, !dbg !8272
  %54 = load double, double* %threshold.addr, align 8, !dbg !8273
  %div52 = fdiv double %54, 6.000000e+00, !dbg !8274
  %sub53 = fsub double %53, %div52, !dbg !8275
  br label %cond.end54, !dbg !8268

cond.end54:                                       ; preds = %cond.false51, %cond.true50
  %cond55 = phi double [ 0.000000e+00, %cond.true50 ], [ %sub53, %cond.false51 ], !dbg !8268
  store double %cond55, double* %tone, align 8, !dbg !8276
  %55 = load double, double* %tone, align 8, !dbg !8277
  %conv56 = fptrunc double %55 to float, !dbg !8277
  %call57 = call zeroext i16 @ClampToQuantum(float %conv56), !dbg !8277
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8277
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 0, !dbg !8277
  store i16 %call57, i16* %blue, align 2, !dbg !8277
  %57 = load double, double* %threshold.addr, align 8, !dbg !8278
  %div58 = fdiv double %57, 7.000000e+00, !dbg !8279
  store double %div58, double* %tone, align 8, !dbg !8280
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8281
  %green59 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 1, !dbg !8281
  %59 = load i16, i16* %green59, align 2, !dbg !8281
  %conv60 = uitofp i16 %59 to double, !dbg !8283
  %60 = load double, double* %tone, align 8, !dbg !8284
  %cmp61 = fcmp olt double %conv60, %60, !dbg !8285
  br i1 %cmp61, label %if.then63, label %if.end67, !dbg !8286

if.then63:                                        ; preds = %cond.end54
  %61 = load double, double* %tone, align 8, !dbg !8287
  %conv64 = fptrunc double %61 to float, !dbg !8287
  %call65 = call zeroext i16 @ClampToQuantum(float %conv64), !dbg !8287
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8287
  %green66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 1, !dbg !8287
  store i16 %call65, i16* %green66, align 2, !dbg !8287
  br label %if.end67, !dbg !8287

if.end67:                                         ; preds = %if.then63, %cond.end54
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8288
  %blue68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 0, !dbg !8288
  %64 = load i16, i16* %blue68, align 2, !dbg !8288
  %conv69 = uitofp i16 %64 to double, !dbg !8290
  %65 = load double, double* %tone, align 8, !dbg !8291
  %cmp70 = fcmp olt double %conv69, %65, !dbg !8292
  br i1 %cmp70, label %if.then72, label %if.end76, !dbg !8293

if.then72:                                        ; preds = %if.end67
  %66 = load double, double* %tone, align 8, !dbg !8294
  %conv73 = fptrunc double %66 to float, !dbg !8294
  %call74 = call zeroext i16 @ClampToQuantum(float %conv73), !dbg !8294
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8294
  %blue75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 0, !dbg !8294
  store i16 %call74, i16* %blue75, align 2, !dbg !8294
  br label %if.end76, !dbg !8294

if.end76:                                         ; preds = %if.then72, %if.end67
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8295
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 3, !dbg !8295
  %69 = load i16, i16* %opacity, align 2, !dbg !8295
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8295
  %opacity77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 3, !dbg !8295
  store i16 %69, i16* %opacity77, align 2, !dbg !8295
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !8296
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 1, !dbg !8296
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !8296
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8297
  %incdec.ptr78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 1, !dbg !8297
  store %struct._PixelPacket* %incdec.ptr78, %struct._PixelPacket** %q, align 8, !dbg !8297
  br label %for.inc, !dbg !8298

for.inc:                                          ; preds = %if.end76
  %73 = load i64, i64* %x, align 8, !dbg !8299
  %inc = add nsw i64 %73, 1, !dbg !8299
  store i64 %inc, i64* %x, align 8, !dbg !8299
  br label %for.cond26, !dbg !8300, !llvm.loop !8301

for.end:                                          ; preds = %for.cond26
  %74 = load %struct._CacheView*, %struct._CacheView** %sepia_view, align 8, !dbg !8303
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8305
  %call79 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %74, %struct._ExceptionInfo* %75), !dbg !8306
  %cmp80 = icmp eq i32 %call79, 0, !dbg !8307
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8308

if.then82:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !8309
  br label %if.end83, !dbg !8310

if.end83:                                         ; preds = %if.then82, %for.end
  %76 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8311
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %76, i32 0, i32 47, !dbg !8313
  %77 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8313
  %cmp84 = icmp ne i32 (i8*, i64, i64, i8*)* %77, null, !dbg !8314
  br i1 %cmp84, label %if.then86, label %if.end94, !dbg !8315

if.then86:                                        ; preds = %if.end83
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8316, metadata !DIExpression()), !dbg !8318
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8319
  %79 = load i64, i64* %progress, align 8, !dbg !8320
  %inc87 = add nsw i64 %79, 1, !dbg !8320
  store i64 %inc87, i64* %progress, align 8, !dbg !8320
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8321
  %rows88 = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 8, !dbg !8322
  %81 = load i64, i64* %rows88, align 8, !dbg !8322
  %call89 = call i32 @SetImageProgress(%struct._Image* %78, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i64 %79, i64 %81), !dbg !8323
  store i32 %call89, i32* %proceed, align 4, !dbg !8324
  %82 = load i32, i32* %proceed, align 4, !dbg !8325
  %cmp90 = icmp eq i32 %82, 0, !dbg !8327
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !8328

if.then92:                                        ; preds = %if.then86
  store i32 0, i32* %status, align 4, !dbg !8329
  br label %if.end93, !dbg !8330

if.end93:                                         ; preds = %if.then92, %if.then86
  br label %if.end94, !dbg !8331

if.end94:                                         ; preds = %if.end93, %if.end83
  br label %for.inc95, !dbg !8332

for.inc95:                                        ; preds = %if.end94, %if.then24, %if.then16
  %83 = load i64, i64* %y, align 8, !dbg !8333
  %inc96 = add nsw i64 %83, 1, !dbg !8333
  store i64 %inc96, i64* %y, align 8, !dbg !8333
  br label %for.cond, !dbg !8334, !llvm.loop !8335

for.end97:                                        ; preds = %for.cond
  %84 = load %struct._CacheView*, %struct._CacheView** %sepia_view, align 8, !dbg !8337
  %call98 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %84), !dbg !8338
  store %struct._CacheView* %call98, %struct._CacheView** %sepia_view, align 8, !dbg !8339
  %85 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8340
  %call99 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %85), !dbg !8341
  store %struct._CacheView* %call99, %struct._CacheView** %image_view, align 8, !dbg !8342
  %86 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8343
  %call100 = call i32 @NormalizeImage(%struct._Image* %86), !dbg !8344
  %87 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8345
  %call101 = call i32 @ContrastImage(%struct._Image* %87, i32 1), !dbg !8346
  %88 = load i32, i32* %status, align 4, !dbg !8347
  %cmp102 = icmp eq i32 %88, 0, !dbg !8349
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !8350

if.then104:                                       ; preds = %for.end97
  %89 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8351
  %call105 = call %struct._Image* @DestroyImage(%struct._Image* %89), !dbg !8352
  store %struct._Image* %call105, %struct._Image** %sepia_image, align 8, !dbg !8353
  br label %if.end106, !dbg !8354

if.end106:                                        ; preds = %if.then104, %for.end97
  %90 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !8355
  store %struct._Image* %90, %struct._Image** %retval, align 8, !dbg !8356
  br label %return, !dbg !8356

return:                                           ; preds = %if.end106, %if.then7, %if.then3
  %91 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8357
  ret %struct._Image* %91, !dbg !8357
}

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #3

declare dso_local i32 @ContrastImage(%struct._Image*, i32) #3

declare dso_local i32 @SetImageVirtualPixelMethod(%struct._Image*, i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local %struct._Image* @BorderImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @BlurImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SketchImage(%struct._Image* %image, double %radius, double %sigma, double %angle, %struct._ExceptionInfo* %exception) #0 !dbg !8358 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %angle.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %random_view = alloca %struct._CacheView*, align 8
  %blend_image = alloca %struct._Image*, align 8
  %blur_image = alloca %struct._Image*, align 8
  %dodge_image = alloca %struct._Image*, align 8
  %random_image = alloca %struct._Image*, align 8
  %sketch_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %zero = alloca %struct._MagickPixelPacket, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8361, metadata !DIExpression()), !dbg !8362
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !8363, metadata !DIExpression()), !dbg !8364
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8369, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.declare(metadata %struct._CacheView** %random_view, metadata !8371, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.declare(metadata %struct._Image** %blend_image, metadata !8373, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata %struct._Image** %dodge_image, metadata !8377, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.declare(metadata %struct._Image** %random_image, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata %struct._Image** %sketch_image, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !8387, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8389, metadata !DIExpression()), !dbg !8390
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8391
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8392
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 7, !dbg !8393
  %2 = load i64, i64* %columns, align 8, !dbg !8393
  %shl = shl i64 %2, 1, !dbg !8394
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8395
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 8, !dbg !8396
  %4 = load i64, i64* %rows, align 8, !dbg !8396
  %shl1 = shl i64 %4, 1, !dbg !8397
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8398
  %call = call %struct._Image* @CloneImage(%struct._Image* %0, i64 %shl, i64 %shl1, i32 1, %struct._ExceptionInfo* %5), !dbg !8399
  store %struct._Image* %call, %struct._Image** %random_image, align 8, !dbg !8400
  %6 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8401
  %cmp = icmp eq %struct._Image* %6, null, !dbg !8403
  br i1 %cmp, label %if.then, label %if.end, !dbg !8404

if.then:                                          ; preds = %entry
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8405
  br label %return, !dbg !8405

if.end:                                           ; preds = %entry
  %7 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8406
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8407
  %call2 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %7, %struct._ExceptionInfo* %8), !dbg !8408
  store %struct._CacheView* %call2, %struct._CacheView** %random_view, align 8, !dbg !8409
  %9 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8410
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8412
  %call3 = call i32 @AccelerateRandomImage(%struct._Image* %9, %struct._ExceptionInfo* %10), !dbg !8413
  %cmp4 = icmp eq i32 %call3, 0, !dbg !8414
  br i1 %cmp4, label %if.then5, label %if.end47, !dbg !8415

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %status, align 4, !dbg !8416
  %11 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8418
  call void @GetMagickPixelPacket(%struct._Image* %11, %struct._MagickPixelPacket* %zero), !dbg !8419
  %call6 = call %struct._RandomInfo** @AcquireRandomInfoThreadSet(), !dbg !8420
  store %struct._RandomInfo** %call6, %struct._RandomInfo*** %random_info, align 8, !dbg !8421
  %12 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8422
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8423
  %call7 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %12, %struct._ExceptionInfo* %13), !dbg !8424
  store %struct._CacheView* %call7, %struct._CacheView** %random_view, align 8, !dbg !8425
  store i64 0, i64* %y, align 8, !dbg !8426
  br label %for.cond, !dbg !8428

for.cond:                                         ; preds = %for.inc37, %if.then5
  %14 = load i64, i64* %y, align 8, !dbg !8429
  %15 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8431
  %rows8 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !8432
  %16 = load i64, i64* %rows8, align 8, !dbg !8432
  %cmp9 = icmp slt i64 %14, %16, !dbg !8433
  br i1 %cmp9, label %for.body, label %for.end39, !dbg !8434

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8435, metadata !DIExpression()), !dbg !8437
  %call10 = call i32 @GetOpenMPThreadId(), !dbg !8438
  store i32 %call10, i32* %id, align 4, !dbg !8437
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !8439, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8441, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8445, metadata !DIExpression()), !dbg !8446
  %17 = load i32, i32* %status, align 4, !dbg !8447
  %cmp11 = icmp eq i32 %17, 0, !dbg !8449
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8450

if.then12:                                        ; preds = %for.body
  br label %for.inc37, !dbg !8451

if.end13:                                         ; preds = %for.body
  %18 = load %struct._CacheView*, %struct._CacheView** %random_view, align 8, !dbg !8452
  %19 = load i64, i64* %y, align 8, !dbg !8453
  %20 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8454
  %columns14 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 7, !dbg !8455
  %21 = load i64, i64* %columns14, align 8, !dbg !8455
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8456
  %call15 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %18, i64 0, i64 %19, i64 %21, i64 1, %struct._ExceptionInfo* %22), !dbg !8457
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %q, align 8, !dbg !8458
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8459
  %cmp16 = icmp eq %struct._PixelPacket* %23, null, !dbg !8461
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !8462

if.then17:                                        ; preds = %if.end13
  store i32 0, i32* %status, align 4, !dbg !8463
  br label %for.inc37, !dbg !8465

if.end18:                                         ; preds = %if.end13
  %24 = load %struct._CacheView*, %struct._CacheView** %random_view, align 8, !dbg !8466
  %call19 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %24), !dbg !8467
  store i16* %call19, i16** %indexes, align 8, !dbg !8468
  %25 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !8469
  %26 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !8469
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 56, i1 false), !dbg !8469
  store i64 0, i64* %x, align 8, !dbg !8470
  br label %for.cond20, !dbg !8472

for.cond20:                                       ; preds = %for.inc, %if.end18
  %27 = load i64, i64* %x, align 8, !dbg !8473
  %28 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8475
  %columns21 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !8476
  %29 = load i64, i64* %columns21, align 8, !dbg !8476
  %cmp22 = icmp slt i64 %27, %29, !dbg !8477
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !8478

for.body23:                                       ; preds = %for.cond20
  %30 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !8479
  %31 = load i32, i32* %id, align 4, !dbg !8481
  %idxprom = sext i32 %31 to i64, !dbg !8479
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %30, i64 %idxprom, !dbg !8479
  %32 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx, align 8, !dbg !8479
  %call24 = call double @GetPseudoRandomValue(%struct._RandomInfo* %32), !dbg !8482
  %mul = fmul double 6.553500e+04, %call24, !dbg !8483
  %conv = fptrunc double %mul to float, !dbg !8484
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8485
  store float %conv, float* %red, align 8, !dbg !8486
  %red25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8487
  %33 = load float, float* %red25, align 8, !dbg !8487
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !8488
  store float %33, float* %green, align 4, !dbg !8489
  %red26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8490
  %34 = load float, float* %red26, align 8, !dbg !8490
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !8491
  store float %34, float* %blue, align 8, !dbg !8492
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8493
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 1, !dbg !8495
  %36 = load i32, i32* %colorspace, align 4, !dbg !8495
  %cmp27 = icmp eq i32 %36, 12, !dbg !8496
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !8497

if.then29:                                        ; preds = %for.body23
  %red30 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !8498
  %37 = load float, float* %red30, align 8, !dbg !8498
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !8499
  store float %37, float* %index, align 8, !dbg !8500
  br label %if.end31, !dbg !8501

if.end31:                                         ; preds = %if.then29, %for.body23
  %38 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8502
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8503
  %40 = load i16*, i16** %indexes, align 8, !dbg !8504
  %41 = load i64, i64* %x, align 8, !dbg !8505
  %add.ptr = getelementptr inbounds i16, i16* %40, i64 %41, !dbg !8506
  call void @SetPixelPacket(%struct._Image* %38, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %39, i16* %add.ptr), !dbg !8507
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8508
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 1, !dbg !8508
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8508
  br label %for.inc, !dbg !8509

for.inc:                                          ; preds = %if.end31
  %43 = load i64, i64* %x, align 8, !dbg !8510
  %inc = add nsw i64 %43, 1, !dbg !8510
  store i64 %inc, i64* %x, align 8, !dbg !8510
  br label %for.cond20, !dbg !8511, !llvm.loop !8512

for.end:                                          ; preds = %for.cond20
  %44 = load %struct._CacheView*, %struct._CacheView** %random_view, align 8, !dbg !8514
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8516
  %call32 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %44, %struct._ExceptionInfo* %45), !dbg !8517
  %cmp33 = icmp eq i32 %call32, 0, !dbg !8518
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8519

if.then35:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !8520
  br label %if.end36, !dbg !8521

if.end36:                                         ; preds = %if.then35, %for.end
  br label %for.inc37, !dbg !8522

for.inc37:                                        ; preds = %if.end36, %if.then17, %if.then12
  %46 = load i64, i64* %y, align 8, !dbg !8523
  %inc38 = add nsw i64 %46, 1, !dbg !8523
  store i64 %inc38, i64* %y, align 8, !dbg !8523
  br label %for.cond, !dbg !8524, !llvm.loop !8525

for.end39:                                        ; preds = %for.cond
  %47 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !8527
  %call40 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %47), !dbg !8528
  store %struct._RandomInfo** %call40, %struct._RandomInfo*** %random_info, align 8, !dbg !8529
  %48 = load i32, i32* %status, align 4, !dbg !8530
  %cmp41 = icmp eq i32 %48, 0, !dbg !8532
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !8533

if.then43:                                        ; preds = %for.end39
  %49 = load %struct._CacheView*, %struct._CacheView** %random_view, align 8, !dbg !8534
  %call44 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %49), !dbg !8536
  store %struct._CacheView* %call44, %struct._CacheView** %random_view, align 8, !dbg !8537
  %50 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8538
  %call45 = call %struct._Image* @DestroyImage(%struct._Image* %50), !dbg !8539
  store %struct._Image* %call45, %struct._Image** %random_image, align 8, !dbg !8540
  %51 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8541
  store %struct._Image* %51, %struct._Image** %retval, align 8, !dbg !8542
  br label %return, !dbg !8542

if.end46:                                         ; preds = %for.end39
  br label %if.end47, !dbg !8543

if.end47:                                         ; preds = %if.end46, %if.end
  %52 = load %struct._CacheView*, %struct._CacheView** %random_view, align 8, !dbg !8544
  %call48 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %52), !dbg !8545
  store %struct._CacheView* %call48, %struct._CacheView** %random_view, align 8, !dbg !8546
  %53 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8547
  %54 = load double, double* %radius.addr, align 8, !dbg !8548
  %55 = load double, double* %sigma.addr, align 8, !dbg !8549
  %56 = load double, double* %angle.addr, align 8, !dbg !8550
  %57 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8551
  %call49 = call %struct._Image* @MotionBlurImage(%struct._Image* %53, double %54, double %55, double %56, %struct._ExceptionInfo* %57), !dbg !8552
  store %struct._Image* %call49, %struct._Image** %blur_image, align 8, !dbg !8553
  %58 = load %struct._Image*, %struct._Image** %random_image, align 8, !dbg !8554
  %call50 = call %struct._Image* @DestroyImage(%struct._Image* %58), !dbg !8555
  store %struct._Image* %call50, %struct._Image** %random_image, align 8, !dbg !8556
  %59 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !8557
  %cmp51 = icmp eq %struct._Image* %59, null, !dbg !8559
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !8560

if.then53:                                        ; preds = %if.end47
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8561
  br label %return, !dbg !8561

if.end54:                                         ; preds = %if.end47
  %60 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !8562
  %61 = load double, double* %radius.addr, align 8, !dbg !8563
  %62 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8564
  %call55 = call %struct._Image* @EdgeImage(%struct._Image* %60, double %61, %struct._ExceptionInfo* %62), !dbg !8565
  store %struct._Image* %call55, %struct._Image** %dodge_image, align 8, !dbg !8566
  %63 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !8567
  %call56 = call %struct._Image* @DestroyImage(%struct._Image* %63), !dbg !8568
  store %struct._Image* %call56, %struct._Image** %blur_image, align 8, !dbg !8569
  %64 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8570
  %cmp57 = icmp eq %struct._Image* %64, null, !dbg !8572
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !8573

if.then59:                                        ; preds = %if.end54
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8574
  br label %return, !dbg !8574

if.end60:                                         ; preds = %if.end54
  %65 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8575
  %call61 = call i32 @NormalizeImage(%struct._Image* %65), !dbg !8576
  %66 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8577
  %call62 = call i32 @NegateImage(%struct._Image* %66, i32 0), !dbg !8578
  %call63 = call i32 @TransformImage(%struct._Image** %dodge_image, i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)), !dbg !8579
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8580
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8581
  %call64 = call %struct._Image* @CloneImage(%struct._Image* %67, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %68), !dbg !8582
  store %struct._Image* %call64, %struct._Image** %sketch_image, align 8, !dbg !8583
  %69 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !8584
  %cmp65 = icmp eq %struct._Image* %69, null, !dbg !8586
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !8587

if.then67:                                        ; preds = %if.end60
  %70 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8588
  %call68 = call %struct._Image* @DestroyImage(%struct._Image* %70), !dbg !8590
  store %struct._Image* %call68, %struct._Image** %dodge_image, align 8, !dbg !8591
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8592
  br label %return, !dbg !8592

if.end69:                                         ; preds = %if.end60
  %71 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !8593
  %72 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8594
  %call70 = call i32 @CompositeImage(%struct._Image* %71, i32 9, %struct._Image* %72, i64 0, i64 0), !dbg !8595
  %73 = load %struct._Image*, %struct._Image** %dodge_image, align 8, !dbg !8596
  %call71 = call %struct._Image* @DestroyImage(%struct._Image* %73), !dbg !8597
  store %struct._Image* %call71, %struct._Image** %dodge_image, align 8, !dbg !8598
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8599
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8600
  %call72 = call %struct._Image* @CloneImage(%struct._Image* %74, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %75), !dbg !8601
  store %struct._Image* %call72, %struct._Image** %blend_image, align 8, !dbg !8602
  %76 = load %struct._Image*, %struct._Image** %blend_image, align 8, !dbg !8603
  %cmp73 = icmp eq %struct._Image* %76, null, !dbg !8605
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !8606

if.then75:                                        ; preds = %if.end69
  %77 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !8607
  %call76 = call %struct._Image* @DestroyImage(%struct._Image* %77), !dbg !8609
  store %struct._Image* %call76, %struct._Image** %sketch_image, align 8, !dbg !8610
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8611
  br label %return, !dbg !8611

if.end77:                                         ; preds = %if.end69
  %78 = load %struct._Image*, %struct._Image** %blend_image, align 8, !dbg !8612
  %call78 = call i32 @SetImageArtifact(%struct._Image* %78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)), !dbg !8613
  %79 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !8614
  %80 = load %struct._Image*, %struct._Image** %blend_image, align 8, !dbg !8615
  %call79 = call i32 @CompositeImage(%struct._Image* %79, i32 4, %struct._Image* %80, i64 0, i64 0), !dbg !8616
  %81 = load %struct._Image*, %struct._Image** %blend_image, align 8, !dbg !8617
  %call80 = call %struct._Image* @DestroyImage(%struct._Image* %81), !dbg !8618
  store %struct._Image* %call80, %struct._Image** %blend_image, align 8, !dbg !8619
  %82 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !8620
  store %struct._Image* %82, %struct._Image** %retval, align 8, !dbg !8621
  br label %return, !dbg !8621

return:                                           ; preds = %if.end77, %if.then75, %if.then67, %if.then59, %if.then53, %if.then43, %if.then
  %83 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8622
  ret %struct._Image* %83, !dbg !8622
}

declare dso_local i32 @AccelerateRandomImage(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local double @GetPseudoRandomValue(%struct._RandomInfo*) #3

declare dso_local %struct._Image* @MotionBlurImage(%struct._Image*, double, double, double, %struct._ExceptionInfo*) #3

declare dso_local i32 @TransformImage(%struct._Image**, i8*, i8*) #3

declare dso_local i32 @SetImageArtifact(%struct._Image*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SolarizeImage(%struct._Image* %image, double %threshold) #0 !dbg !8623 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !8628, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8630, metadata !DIExpression()), !dbg !8631
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8632
  %1 = load double, double* %threshold.addr, align 8, !dbg !8633
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8634
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 58, !dbg !8635
  %call = call i32 @SolarizeImageChannel(%struct._Image* %0, i32 134217719, double %1, %struct._ExceptionInfo* %exception), !dbg !8636
  store i32 %call, i32* %status, align 4, !dbg !8637
  %3 = load i32, i32* %status, align 4, !dbg !8638
  ret i32 %3, !dbg !8639
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SolarizeImageChannel(%struct._Image* %image, i32 %channel, double %threshold, %struct._ExceptionInfo* %exception) #0 !dbg !8640 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %threshold.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !8647, metadata !DIExpression()), !dbg !8648
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8649, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !8651, metadata !DIExpression()), !dbg !8652
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8653, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !8655, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8657, metadata !DIExpression()), !dbg !8658
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8659
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8661
  %1 = load i32, i32* %debug, align 8, !dbg !8661
  %cmp = icmp ne i32 %1, 0, !dbg !8662
  br i1 %cmp, label %if.then, label %if.end, !dbg !8663

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8664
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !8665
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !8664
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4590, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !8666
  br label %if.end, !dbg !8667

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8668
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 1, !dbg !8670
  %4 = load i32, i32* %colorspace, align 4, !dbg !8670
  %call1 = call i32 @IsGrayColorspace(i32 %4), !dbg !8671
  %cmp2 = icmp ne i32 %call1, 0, !dbg !8672
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !8673

if.then3:                                         ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8674
  %call4 = call i32 @SetImageColorspace(%struct._Image* %5, i32 13), !dbg !8675
  br label %if.end5, !dbg !8676

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8677
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 0, !dbg !8679
  %7 = load i32, i32* %storage_class, align 8, !dbg !8679
  %cmp6 = icmp eq i32 %7, 2, !dbg !8680
  br i1 %cmp6, label %if.then7, label %if.end66, !dbg !8681

if.then7:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8682, metadata !DIExpression()), !dbg !8684
  store i64 0, i64* %i, align 8, !dbg !8685
  br label %for.cond, !dbg !8687

for.cond:                                         ; preds = %for.inc, %if.then7
  %8 = load i64, i64* %i, align 8, !dbg !8688
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8690
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 10, !dbg !8691
  %10 = load i64, i64* %colors, align 8, !dbg !8691
  %cmp8 = icmp slt i64 %8, %10, !dbg !8692
  br i1 %cmp8, label %for.body, label %for.end, !dbg !8693

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %channel.addr, align 4, !dbg !8694
  %and = and i32 %11, 1, !dbg !8697
  %cmp9 = icmp ne i32 %and, 0, !dbg !8698
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !8699

if.then10:                                        ; preds = %for.body
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8700
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 11, !dbg !8702
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !8702
  %14 = load i64, i64* %i, align 8, !dbg !8703
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i64 %14, !dbg !8700
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !8704
  %15 = load i16, i16* %red, align 2, !dbg !8704
  %conv = uitofp i16 %15 to double, !dbg !8705
  %16 = load double, double* %threshold.addr, align 8, !dbg !8706
  %cmp11 = fcmp ogt double %conv, %16, !dbg !8707
  br i1 %cmp11, label %if.then13, label %if.end22, !dbg !8708

if.then13:                                        ; preds = %if.then10
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8709
  %colormap14 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 11, !dbg !8710
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap14, align 8, !dbg !8710
  %19 = load i64, i64* %i, align 8, !dbg !8711
  %arrayidx15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i64 %19, !dbg !8709
  %red16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx15, i32 0, i32 2, !dbg !8712
  %20 = load i16, i16* %red16, align 2, !dbg !8712
  %conv17 = zext i16 %20 to i32, !dbg !8709
  %sub = sub nsw i32 65535, %conv17, !dbg !8713
  %conv18 = trunc i32 %sub to i16, !dbg !8714
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8715
  %colormap19 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 11, !dbg !8716
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap19, align 8, !dbg !8716
  %23 = load i64, i64* %i, align 8, !dbg !8717
  %arrayidx20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i64 %23, !dbg !8715
  %red21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx20, i32 0, i32 2, !dbg !8718
  store i16 %conv18, i16* %red21, align 2, !dbg !8719
  br label %if.end22, !dbg !8715

if.end22:                                         ; preds = %if.then13, %if.then10
  br label %if.end23, !dbg !8706

if.end23:                                         ; preds = %if.end22, %for.body
  %24 = load i32, i32* %channel.addr, align 4, !dbg !8720
  %and24 = and i32 %24, 2, !dbg !8722
  %cmp25 = icmp ne i32 %and24, 0, !dbg !8723
  br i1 %cmp25, label %if.then27, label %if.end44, !dbg !8724

if.then27:                                        ; preds = %if.end23
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8725
  %colormap28 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 11, !dbg !8727
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap28, align 8, !dbg !8727
  %27 = load i64, i64* %i, align 8, !dbg !8728
  %arrayidx29 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i64 %27, !dbg !8725
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx29, i32 0, i32 1, !dbg !8729
  %28 = load i16, i16* %green, align 2, !dbg !8729
  %conv30 = uitofp i16 %28 to double, !dbg !8730
  %29 = load double, double* %threshold.addr, align 8, !dbg !8731
  %cmp31 = fcmp ogt double %conv30, %29, !dbg !8732
  br i1 %cmp31, label %if.then33, label %if.end43, !dbg !8733

if.then33:                                        ; preds = %if.then27
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8734
  %colormap34 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 11, !dbg !8735
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap34, align 8, !dbg !8735
  %32 = load i64, i64* %i, align 8, !dbg !8736
  %arrayidx35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i64 %32, !dbg !8734
  %green36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx35, i32 0, i32 1, !dbg !8737
  %33 = load i16, i16* %green36, align 2, !dbg !8737
  %conv37 = zext i16 %33 to i32, !dbg !8734
  %sub38 = sub nsw i32 65535, %conv37, !dbg !8738
  %conv39 = trunc i32 %sub38 to i16, !dbg !8739
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8740
  %colormap40 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 11, !dbg !8741
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap40, align 8, !dbg !8741
  %36 = load i64, i64* %i, align 8, !dbg !8742
  %arrayidx41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i64 %36, !dbg !8740
  %green42 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx41, i32 0, i32 1, !dbg !8743
  store i16 %conv39, i16* %green42, align 2, !dbg !8744
  br label %if.end43, !dbg !8740

if.end43:                                         ; preds = %if.then33, %if.then27
  br label %if.end44, !dbg !8731

if.end44:                                         ; preds = %if.end43, %if.end23
  %37 = load i32, i32* %channel.addr, align 4, !dbg !8745
  %and45 = and i32 %37, 4, !dbg !8747
  %cmp46 = icmp ne i32 %and45, 0, !dbg !8748
  br i1 %cmp46, label %if.then48, label %if.end65, !dbg !8749

if.then48:                                        ; preds = %if.end44
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8750
  %colormap49 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 11, !dbg !8752
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap49, align 8, !dbg !8752
  %40 = load i64, i64* %i, align 8, !dbg !8753
  %arrayidx50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i64 %40, !dbg !8750
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx50, i32 0, i32 0, !dbg !8754
  %41 = load i16, i16* %blue, align 2, !dbg !8754
  %conv51 = uitofp i16 %41 to double, !dbg !8755
  %42 = load double, double* %threshold.addr, align 8, !dbg !8756
  %cmp52 = fcmp ogt double %conv51, %42, !dbg !8757
  br i1 %cmp52, label %if.then54, label %if.end64, !dbg !8758

if.then54:                                        ; preds = %if.then48
  %43 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8759
  %colormap55 = getelementptr inbounds %struct._Image, %struct._Image* %43, i32 0, i32 11, !dbg !8760
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap55, align 8, !dbg !8760
  %45 = load i64, i64* %i, align 8, !dbg !8761
  %arrayidx56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i64 %45, !dbg !8759
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx56, i32 0, i32 0, !dbg !8762
  %46 = load i16, i16* %blue57, align 2, !dbg !8762
  %conv58 = zext i16 %46 to i32, !dbg !8759
  %sub59 = sub nsw i32 65535, %conv58, !dbg !8763
  %conv60 = trunc i32 %sub59 to i16, !dbg !8764
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8765
  %colormap61 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 11, !dbg !8766
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap61, align 8, !dbg !8766
  %49 = load i64, i64* %i, align 8, !dbg !8767
  %arrayidx62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i64 %49, !dbg !8765
  %blue63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx62, i32 0, i32 0, !dbg !8768
  store i16 %conv60, i16* %blue63, align 2, !dbg !8769
  br label %if.end64, !dbg !8765

if.end64:                                         ; preds = %if.then54, %if.then48
  br label %if.end65, !dbg !8756

if.end65:                                         ; preds = %if.end64, %if.end44
  br label %for.inc, !dbg !8770

for.inc:                                          ; preds = %if.end65
  %50 = load i64, i64* %i, align 8, !dbg !8771
  %inc = add nsw i64 %50, 1, !dbg !8771
  store i64 %inc, i64* %i, align 8, !dbg !8771
  br label %for.cond, !dbg !8772, !llvm.loop !8773

for.end:                                          ; preds = %for.cond
  br label %if.end66, !dbg !8775

if.end66:                                         ; preds = %for.end, %if.end5
  store i32 1, i32* %status, align 4, !dbg !8776
  store i64 0, i64* %progress, align 8, !dbg !8777
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8778
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8779
  %call67 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %51, %struct._ExceptionInfo* %52), !dbg !8780
  store %struct._CacheView* %call67, %struct._CacheView** %image_view, align 8, !dbg !8781
  store i64 0, i64* %y, align 8, !dbg !8782
  br label %for.cond68, !dbg !8784

for.cond68:                                       ; preds = %for.inc153, %if.end66
  %53 = load i64, i64* %y, align 8, !dbg !8785
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8787
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 8, !dbg !8788
  %55 = load i64, i64* %rows, align 8, !dbg !8788
  %cmp69 = icmp slt i64 %53, %55, !dbg !8789
  br i1 %cmp69, label %for.body71, label %for.end155, !dbg !8790

for.body71:                                       ; preds = %for.cond68
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8794, metadata !DIExpression()), !dbg !8795
  %56 = load i32, i32* %status, align 4, !dbg !8796
  %cmp72 = icmp eq i32 %56, 0, !dbg !8798
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8799

if.then74:                                        ; preds = %for.body71
  br label %for.inc153, !dbg !8800

if.end75:                                         ; preds = %for.body71
  %57 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8801
  %58 = load i64, i64* %y, align 8, !dbg !8802
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8803
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 7, !dbg !8804
  %60 = load i64, i64* %columns, align 8, !dbg !8804
  %61 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8805
  %call76 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %57, i64 0, i64 %58, i64 %60, i64 1, %struct._ExceptionInfo* %61), !dbg !8806
  store %struct._PixelPacket* %call76, %struct._PixelPacket** %q, align 8, !dbg !8807
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8808
  %cmp77 = icmp eq %struct._PixelPacket* %62, null, !dbg !8810
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !8811

if.then79:                                        ; preds = %if.end75
  store i32 0, i32* %status, align 4, !dbg !8812
  br label %for.inc153, !dbg !8814

if.end80:                                         ; preds = %if.end75
  store i64 0, i64* %x, align 8, !dbg !8815
  br label %for.cond81, !dbg !8817

for.cond81:                                       ; preds = %for.inc134, %if.end80
  %63 = load i64, i64* %x, align 8, !dbg !8818
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8820
  %columns82 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 7, !dbg !8821
  %65 = load i64, i64* %columns82, align 8, !dbg !8821
  %cmp83 = icmp slt i64 %63, %65, !dbg !8822
  br i1 %cmp83, label %for.body85, label %for.end136, !dbg !8823

for.body85:                                       ; preds = %for.cond81
  %66 = load i32, i32* %channel.addr, align 4, !dbg !8824
  %and86 = and i32 %66, 1, !dbg !8827
  %cmp87 = icmp ne i32 %and86, 0, !dbg !8828
  br i1 %cmp87, label %if.then89, label %if.end101, !dbg !8829

if.then89:                                        ; preds = %for.body85
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8830
  %red90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 2, !dbg !8830
  %68 = load i16, i16* %red90, align 2, !dbg !8830
  %conv91 = uitofp i16 %68 to double, !dbg !8832
  %69 = load double, double* %threshold.addr, align 8, !dbg !8833
  %cmp92 = fcmp ogt double %conv91, %69, !dbg !8834
  br i1 %cmp92, label %if.then94, label %if.end100, !dbg !8835

if.then94:                                        ; preds = %if.then89
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8836
  %red95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 2, !dbg !8836
  %71 = load i16, i16* %red95, align 2, !dbg !8836
  %conv96 = zext i16 %71 to i32, !dbg !8836
  %sub97 = sub nsw i32 65535, %conv96, !dbg !8836
  %conv98 = trunc i32 %sub97 to i16, !dbg !8836
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8836
  %red99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 2, !dbg !8836
  store i16 %conv98, i16* %red99, align 2, !dbg !8836
  br label %if.end100, !dbg !8836

if.end100:                                        ; preds = %if.then94, %if.then89
  br label %if.end101, !dbg !8833

if.end101:                                        ; preds = %if.end100, %for.body85
  %73 = load i32, i32* %channel.addr, align 4, !dbg !8837
  %and102 = and i32 %73, 2, !dbg !8839
  %cmp103 = icmp ne i32 %and102, 0, !dbg !8840
  br i1 %cmp103, label %if.then105, label %if.end117, !dbg !8841

if.then105:                                       ; preds = %if.end101
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8842
  %green106 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 1, !dbg !8842
  %75 = load i16, i16* %green106, align 2, !dbg !8842
  %conv107 = uitofp i16 %75 to double, !dbg !8844
  %76 = load double, double* %threshold.addr, align 8, !dbg !8845
  %cmp108 = fcmp ogt double %conv107, %76, !dbg !8846
  br i1 %cmp108, label %if.then110, label %if.end116, !dbg !8847

if.then110:                                       ; preds = %if.then105
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8848
  %green111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 1, !dbg !8848
  %78 = load i16, i16* %green111, align 2, !dbg !8848
  %conv112 = zext i16 %78 to i32, !dbg !8848
  %sub113 = sub nsw i32 65535, %conv112, !dbg !8848
  %conv114 = trunc i32 %sub113 to i16, !dbg !8848
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8848
  %green115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 1, !dbg !8848
  store i16 %conv114, i16* %green115, align 2, !dbg !8848
  br label %if.end116, !dbg !8848

if.end116:                                        ; preds = %if.then110, %if.then105
  br label %if.end117, !dbg !8845

if.end117:                                        ; preds = %if.end116, %if.end101
  %80 = load i32, i32* %channel.addr, align 4, !dbg !8849
  %and118 = and i32 %80, 4, !dbg !8851
  %cmp119 = icmp ne i32 %and118, 0, !dbg !8852
  br i1 %cmp119, label %if.then121, label %if.end133, !dbg !8853

if.then121:                                       ; preds = %if.end117
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8854
  %blue122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 0, !dbg !8854
  %82 = load i16, i16* %blue122, align 2, !dbg !8854
  %conv123 = uitofp i16 %82 to double, !dbg !8856
  %83 = load double, double* %threshold.addr, align 8, !dbg !8857
  %cmp124 = fcmp ogt double %conv123, %83, !dbg !8858
  br i1 %cmp124, label %if.then126, label %if.end132, !dbg !8859

if.then126:                                       ; preds = %if.then121
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8860
  %blue127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 0, !dbg !8860
  %85 = load i16, i16* %blue127, align 2, !dbg !8860
  %conv128 = zext i16 %85 to i32, !dbg !8860
  %sub129 = sub nsw i32 65535, %conv128, !dbg !8860
  %conv130 = trunc i32 %sub129 to i16, !dbg !8860
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8860
  %blue131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !8860
  store i16 %conv130, i16* %blue131, align 2, !dbg !8860
  br label %if.end132, !dbg !8860

if.end132:                                        ; preds = %if.then126, %if.then121
  br label %if.end133, !dbg !8857

if.end133:                                        ; preds = %if.end132, %if.end117
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8861
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 1, !dbg !8861
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8861
  br label %for.inc134, !dbg !8862

for.inc134:                                       ; preds = %if.end133
  %88 = load i64, i64* %x, align 8, !dbg !8863
  %inc135 = add nsw i64 %88, 1, !dbg !8863
  store i64 %inc135, i64* %x, align 8, !dbg !8863
  br label %for.cond81, !dbg !8864, !llvm.loop !8865

for.end136:                                       ; preds = %for.cond81
  %89 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8867
  %90 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8869
  %call137 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %89, %struct._ExceptionInfo* %90), !dbg !8870
  %cmp138 = icmp eq i32 %call137, 0, !dbg !8871
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !8872

if.then140:                                       ; preds = %for.end136
  store i32 0, i32* %status, align 4, !dbg !8873
  br label %if.end141, !dbg !8874

if.end141:                                        ; preds = %if.then140, %for.end136
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8875
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 47, !dbg !8877
  %92 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8877
  %cmp142 = icmp ne i32 (i8*, i64, i64, i8*)* %92, null, !dbg !8878
  br i1 %cmp142, label %if.then144, label %if.end152, !dbg !8879

if.then144:                                       ; preds = %if.end141
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8880, metadata !DIExpression()), !dbg !8882
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8883
  %94 = load i64, i64* %progress, align 8, !dbg !8884
  %inc145 = add nsw i64 %94, 1, !dbg !8884
  store i64 %inc145, i64* %progress, align 8, !dbg !8884
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8885
  %rows146 = getelementptr inbounds %struct._Image, %struct._Image* %95, i32 0, i32 8, !dbg !8886
  %96 = load i64, i64* %rows146, align 8, !dbg !8886
  %call147 = call i32 @SetImageProgress(%struct._Image* %93, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0), i64 %94, i64 %96), !dbg !8887
  store i32 %call147, i32* %proceed, align 4, !dbg !8888
  %97 = load i32, i32* %proceed, align 4, !dbg !8889
  %cmp148 = icmp eq i32 %97, 0, !dbg !8891
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !8892

if.then150:                                       ; preds = %if.then144
  store i32 0, i32* %status, align 4, !dbg !8893
  br label %if.end151, !dbg !8894

if.end151:                                        ; preds = %if.then150, %if.then144
  br label %if.end152, !dbg !8895

if.end152:                                        ; preds = %if.end151, %if.end141
  br label %for.inc153, !dbg !8896

for.inc153:                                       ; preds = %if.end152, %if.then79, %if.then74
  %98 = load i64, i64* %y, align 8, !dbg !8897
  %inc154 = add nsw i64 %98, 1, !dbg !8897
  store i64 %inc154, i64* %y, align 8, !dbg !8897
  br label %for.cond68, !dbg !8898, !llvm.loop !8899

for.end155:                                       ; preds = %for.cond68
  %99 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8901
  %call156 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %99), !dbg !8902
  store %struct._CacheView* %call156, %struct._CacheView** %image_view, align 8, !dbg !8903
  %100 = load i32, i32* %status, align 4, !dbg !8904
  ret i32 %100, !dbg !8905
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SteganoImage(%struct._Image* %image, %struct._Image* %watermark, %struct._ExceptionInfo* %exception) #0 !dbg !8906 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %watermark.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %stegano_view = alloca %struct._CacheView*, align 8
  %watermark_view = alloca %struct._CacheView*, align 8
  %stegano_image = alloca %struct._Image*, align 8
  %c = alloca i32, align 4
  %status = alloca i32, align 4
  %pixel = alloca %struct._PixelPacket, align 2
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %depth = alloca i64, align 8
  %one = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %k = alloca i64, align 8
  %y = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  store %struct._Image* %watermark, %struct._Image** %watermark.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %watermark.addr, metadata !8911, metadata !DIExpression()), !dbg !8912
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.declare(metadata %struct._CacheView** %stegano_view, metadata !8915, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.declare(metadata %struct._CacheView** %watermark_view, metadata !8917, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.declare(metadata %struct._Image** %stegano_image, metadata !8919, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8921, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8923, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %pixel, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8929, metadata !DIExpression()), !dbg !8930
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata i64* %one, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata i64* %j, metadata !8937, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.declare(metadata i64* %k, metadata !8939, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8941, metadata !DIExpression()), !dbg !8942
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8943
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8945
  %1 = load i32, i32* %debug, align 8, !dbg !8945
  %cmp = icmp ne i32 %1, 0, !dbg !8946
  br i1 %cmp, label %if.then, label %if.end, !dbg !8947

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8948
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !8949
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !8948
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4748, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !8950
  br label %if.end, !dbg !8951

if.end:                                           ; preds = %if.then, %entry
  store i64 1, i64* %one, align 8, !dbg !8952
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8953
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8954
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !8955
  store %struct._Image* %call1, %struct._Image** %stegano_image, align 8, !dbg !8956
  %5 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8957
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !8959
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8960

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8961
  br label %return, !dbg !8961

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8962
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 1), !dbg !8964
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8965
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !8966

if.then7:                                         ; preds = %if.end4
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8967
  %8 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8969
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !8970
  call void @InheritException(%struct._ExceptionInfo* %7, %struct._ExceptionInfo* %exception8), !dbg !8971
  %9 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8972
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %9), !dbg !8973
  store %struct._Image* %call9, %struct._Image** %stegano_image, align 8, !dbg !8974
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8975
  br label %return, !dbg !8975

if.end10:                                         ; preds = %if.end4
  %10 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8976
  %depth11 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 9, !dbg !8977
  store i64 16, i64* %depth11, align 8, !dbg !8978
  store i32 0, i32* %c, align 4, !dbg !8979
  store i64 0, i64* %i, align 8, !dbg !8980
  store i64 0, i64* %j, align 8, !dbg !8981
  %11 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8982
  %depth12 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 9, !dbg !8983
  %12 = load i64, i64* %depth12, align 8, !dbg !8983
  store i64 %12, i64* %depth, align 8, !dbg !8984
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8985
  %offset = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 23, !dbg !8986
  %14 = load i64, i64* %offset, align 8, !dbg !8986
  store i64 %14, i64* %k, align 8, !dbg !8987
  store i32 1, i32* %status, align 4, !dbg !8988
  %15 = load %struct._Image*, %struct._Image** %watermark.addr, align 8, !dbg !8989
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8990
  %call13 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %15, %struct._ExceptionInfo* %16), !dbg !8991
  store %struct._CacheView* %call13, %struct._CacheView** %watermark_view, align 8, !dbg !8992
  %17 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !8993
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8994
  %call14 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %17, %struct._ExceptionInfo* %18), !dbg !8995
  store %struct._CacheView* %call14, %struct._CacheView** %stegano_view, align 8, !dbg !8996
  %19 = load i64, i64* %depth, align 8, !dbg !8997
  %sub = sub nsw i64 %19, 1, !dbg !8999
  store i64 %sub, i64* %i, align 8, !dbg !9000
  br label %for.cond, !dbg !9001

for.cond:                                         ; preds = %for.inc139, %if.end10
  %20 = load i64, i64* %i, align 8, !dbg !9002
  %cmp15 = icmp sge i64 %20, 0, !dbg !9004
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !9005

land.rhs:                                         ; preds = %for.cond
  %21 = load i64, i64* %j, align 8, !dbg !9006
  %22 = load i64, i64* %depth, align 8, !dbg !9007
  %cmp16 = icmp slt i64 %21, %22, !dbg !9008
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %23 = phi i1 [ false, %for.cond ], [ %cmp16, %land.rhs ], !dbg !9009
  br i1 %23, label %for.body, label %for.end140, !dbg !9010

for.body:                                         ; preds = %land.end
  store i64 0, i64* %y, align 8, !dbg !9011
  br label %for.cond17, !dbg !9014

for.cond17:                                       ; preds = %for.inc126, %for.body
  %24 = load i64, i64* %y, align 8, !dbg !9015
  %25 = load %struct._Image*, %struct._Image** %watermark.addr, align 8, !dbg !9017
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 8, !dbg !9018
  %26 = load i64, i64* %rows, align 8, !dbg !9018
  %cmp18 = icmp slt i64 %24, %26, !dbg !9019
  br i1 %cmp18, label %land.rhs19, label %land.end21, !dbg !9020

land.rhs19:                                       ; preds = %for.cond17
  %27 = load i64, i64* %j, align 8, !dbg !9021
  %28 = load i64, i64* %depth, align 8, !dbg !9022
  %cmp20 = icmp slt i64 %27, %28, !dbg !9023
  br label %land.end21

land.end21:                                       ; preds = %land.rhs19, %for.cond17
  %29 = phi i1 [ false, %for.cond17 ], [ %cmp20, %land.rhs19 ], !dbg !9024
  br i1 %29, label %for.body22, label %for.end128, !dbg !9025

for.body22:                                       ; preds = %land.end21
  store i64 0, i64* %x, align 8, !dbg !9026
  br label %for.cond23, !dbg !9029

for.cond23:                                       ; preds = %for.inc, %for.body22
  %30 = load i64, i64* %x, align 8, !dbg !9030
  %31 = load %struct._Image*, %struct._Image** %watermark.addr, align 8, !dbg !9032
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 7, !dbg !9033
  %32 = load i64, i64* %columns, align 8, !dbg !9033
  %cmp24 = icmp slt i64 %30, %32, !dbg !9034
  br i1 %cmp24, label %land.rhs25, label %land.end27, !dbg !9035

land.rhs25:                                       ; preds = %for.cond23
  %33 = load i64, i64* %j, align 8, !dbg !9036
  %34 = load i64, i64* %depth, align 8, !dbg !9037
  %cmp26 = icmp slt i64 %33, %34, !dbg !9038
  br label %land.end27

land.end27:                                       ; preds = %land.rhs25, %for.cond23
  %35 = phi i1 [ false, %for.cond23 ], [ %cmp26, %land.rhs25 ], !dbg !9039
  br i1 %35, label %for.body28, label %for.end, !dbg !9040

for.body28:                                       ; preds = %land.end27
  %36 = load %struct._CacheView*, %struct._CacheView** %watermark_view, align 8, !dbg !9041
  %37 = load i64, i64* %x, align 8, !dbg !9043
  %38 = load i64, i64* %y, align 8, !dbg !9044
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9045
  %call29 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %36, i64 %37, i64 %38, %struct._PixelPacket* %pixel, %struct._ExceptionInfo* %39), !dbg !9046
  %40 = load i64, i64* %k, align 8, !dbg !9047
  %41 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9049
  %columns30 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 7, !dbg !9050
  %42 = load i64, i64* %columns30, align 8, !dbg !9050
  %div = sdiv i64 %40, %42, !dbg !9051
  %43 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9052
  %rows31 = getelementptr inbounds %struct._Image, %struct._Image* %43, i32 0, i32 8, !dbg !9053
  %44 = load i64, i64* %rows31, align 8, !dbg !9053
  %cmp32 = icmp sge i64 %div, %44, !dbg !9054
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !9055

if.then33:                                        ; preds = %for.body28
  br label %for.end, !dbg !9056

if.end34:                                         ; preds = %for.body28
  %45 = load %struct._CacheView*, %struct._CacheView** %stegano_view, align 8, !dbg !9057
  %46 = load i64, i64* %k, align 8, !dbg !9058
  %47 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9059
  %columns35 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 7, !dbg !9060
  %48 = load i64, i64* %columns35, align 8, !dbg !9060
  %rem = srem i64 %46, %48, !dbg !9061
  %49 = load i64, i64* %k, align 8, !dbg !9062
  %50 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9063
  %columns36 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 7, !dbg !9064
  %51 = load i64, i64* %columns36, align 8, !dbg !9064
  %div37 = sdiv i64 %49, %51, !dbg !9065
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9066
  %call38 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %45, i64 %rem, i64 %div37, i64 1, i64 1, %struct._ExceptionInfo* %52), !dbg !9067
  store %struct._PixelPacket* %call38, %struct._PixelPacket** %q, align 8, !dbg !9068
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9069
  %cmp39 = icmp eq %struct._PixelPacket* %53, null, !dbg !9071
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9072

if.then40:                                        ; preds = %if.end34
  br label %for.end, !dbg !9073

if.end41:                                         ; preds = %if.end34
  %54 = load i32, i32* %c, align 4, !dbg !9074
  switch i32 %54, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb55
    i32 2, label %sw.bb79
  ], !dbg !9075

sw.bb:                                            ; preds = %if.end41
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9076
  %call42 = call float @GetPixelIntensity(%struct._Image* %55, %struct._PixelPacket* %pixel), !dbg !9076
  %call43 = call zeroext i16 @ClampToQuantum(float %call42), !dbg !9076
  %conv = zext i16 %call43 to i64, !dbg !9076
  %56 = load i64, i64* %i, align 8, !dbg !9076
  %shr = lshr i64 %conv, %56, !dbg !9076
  %and = and i64 %shr, 1, !dbg !9076
  %cmp44 = icmp ne i64 %and, 0, !dbg !9076
  %conv45 = zext i1 %cmp44 to i32, !dbg !9076
  %cmp46 = icmp ne i32 %conv45, 0, !dbg !9076
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !9076

cond.true:                                        ; preds = %sw.bb
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9076
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 2, !dbg !9076
  %58 = load i16, i16* %red, align 2, !dbg !9076
  %conv48 = zext i16 %58 to i64, !dbg !9076
  %59 = load i64, i64* %one, align 8, !dbg !9076
  %60 = load i64, i64* %j, align 8, !dbg !9076
  %shl = shl i64 %59, %60, !dbg !9076
  %or = or i64 %conv48, %shl, !dbg !9076
  br label %cond.end, !dbg !9076

cond.false:                                       ; preds = %sw.bb
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9076
  %red49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !9076
  %62 = load i16, i16* %red49, align 2, !dbg !9076
  %conv50 = zext i16 %62 to i64, !dbg !9076
  %63 = load i64, i64* %one, align 8, !dbg !9076
  %64 = load i64, i64* %j, align 8, !dbg !9076
  %shl51 = shl i64 %63, %64, !dbg !9076
  %neg = xor i64 %shl51, -1, !dbg !9076
  %and52 = and i64 %conv50, %neg, !dbg !9076
  br label %cond.end, !dbg !9076

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or, %cond.true ], [ %and52, %cond.false ], !dbg !9076
  %conv53 = trunc i64 %cond to i16, !dbg !9076
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9076
  %red54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 2, !dbg !9076
  store i16 %conv53, i16* %red54, align 2, !dbg !9076
  br label %sw.epilog, !dbg !9079

sw.bb55:                                          ; preds = %if.end41
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9080
  %call56 = call float @GetPixelIntensity(%struct._Image* %66, %struct._PixelPacket* %pixel), !dbg !9080
  %call57 = call zeroext i16 @ClampToQuantum(float %call56), !dbg !9080
  %conv58 = zext i16 %call57 to i64, !dbg !9080
  %67 = load i64, i64* %i, align 8, !dbg !9080
  %shr59 = lshr i64 %conv58, %67, !dbg !9080
  %and60 = and i64 %shr59, 1, !dbg !9080
  %cmp61 = icmp ne i64 %and60, 0, !dbg !9080
  %conv62 = zext i1 %cmp61 to i32, !dbg !9080
  %cmp63 = icmp ne i32 %conv62, 0, !dbg !9080
  br i1 %cmp63, label %cond.true65, label %cond.false69, !dbg !9080

cond.true65:                                      ; preds = %sw.bb55
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9080
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 1, !dbg !9080
  %69 = load i16, i16* %green, align 2, !dbg !9080
  %conv66 = zext i16 %69 to i64, !dbg !9080
  %70 = load i64, i64* %one, align 8, !dbg !9080
  %71 = load i64, i64* %j, align 8, !dbg !9080
  %shl67 = shl i64 %70, %71, !dbg !9080
  %or68 = or i64 %conv66, %shl67, !dbg !9080
  br label %cond.end75, !dbg !9080

cond.false69:                                     ; preds = %sw.bb55
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9080
  %green70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 1, !dbg !9080
  %73 = load i16, i16* %green70, align 2, !dbg !9080
  %conv71 = zext i16 %73 to i64, !dbg !9080
  %74 = load i64, i64* %one, align 8, !dbg !9080
  %75 = load i64, i64* %j, align 8, !dbg !9080
  %shl72 = shl i64 %74, %75, !dbg !9080
  %neg73 = xor i64 %shl72, -1, !dbg !9080
  %and74 = and i64 %conv71, %neg73, !dbg !9080
  br label %cond.end75, !dbg !9080

cond.end75:                                       ; preds = %cond.false69, %cond.true65
  %cond76 = phi i64 [ %or68, %cond.true65 ], [ %and74, %cond.false69 ], !dbg !9080
  %conv77 = trunc i64 %cond76 to i16, !dbg !9080
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9080
  %green78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 1, !dbg !9080
  store i16 %conv77, i16* %green78, align 2, !dbg !9080
  br label %sw.epilog, !dbg !9082

sw.bb79:                                          ; preds = %if.end41
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9083
  %call80 = call float @GetPixelIntensity(%struct._Image* %77, %struct._PixelPacket* %pixel), !dbg !9083
  %call81 = call zeroext i16 @ClampToQuantum(float %call80), !dbg !9083
  %conv82 = zext i16 %call81 to i64, !dbg !9083
  %78 = load i64, i64* %i, align 8, !dbg !9083
  %shr83 = lshr i64 %conv82, %78, !dbg !9083
  %and84 = and i64 %shr83, 1, !dbg !9083
  %cmp85 = icmp ne i64 %and84, 0, !dbg !9083
  %conv86 = zext i1 %cmp85 to i32, !dbg !9083
  %cmp87 = icmp ne i32 %conv86, 0, !dbg !9083
  br i1 %cmp87, label %cond.true89, label %cond.false93, !dbg !9083

cond.true89:                                      ; preds = %sw.bb79
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9083
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !9083
  %80 = load i16, i16* %blue, align 2, !dbg !9083
  %conv90 = zext i16 %80 to i64, !dbg !9083
  %81 = load i64, i64* %one, align 8, !dbg !9083
  %82 = load i64, i64* %j, align 8, !dbg !9083
  %shl91 = shl i64 %81, %82, !dbg !9083
  %or92 = or i64 %conv90, %shl91, !dbg !9083
  br label %cond.end99, !dbg !9083

cond.false93:                                     ; preds = %sw.bb79
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9083
  %blue94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !9083
  %84 = load i16, i16* %blue94, align 2, !dbg !9083
  %conv95 = zext i16 %84 to i64, !dbg !9083
  %85 = load i64, i64* %one, align 8, !dbg !9083
  %86 = load i64, i64* %j, align 8, !dbg !9083
  %shl96 = shl i64 %85, %86, !dbg !9083
  %neg97 = xor i64 %shl96, -1, !dbg !9083
  %and98 = and i64 %conv95, %neg97, !dbg !9083
  br label %cond.end99, !dbg !9083

cond.end99:                                       ; preds = %cond.false93, %cond.true89
  %cond100 = phi i64 [ %or92, %cond.true89 ], [ %and98, %cond.false93 ], !dbg !9083
  %conv101 = trunc i64 %cond100 to i16, !dbg !9083
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9083
  %blue102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 0, !dbg !9083
  store i16 %conv101, i16* %blue102, align 2, !dbg !9083
  br label %sw.epilog, !dbg !9085

sw.epilog:                                        ; preds = %if.end41, %cond.end99, %cond.end75, %cond.end
  %88 = load %struct._CacheView*, %struct._CacheView** %stegano_view, align 8, !dbg !9086
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9088
  %call103 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %88, %struct._ExceptionInfo* %89), !dbg !9089
  %cmp104 = icmp eq i32 %call103, 0, !dbg !9090
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !9091

if.then106:                                       ; preds = %sw.epilog
  br label %for.end, !dbg !9092

if.end107:                                        ; preds = %sw.epilog
  %90 = load i32, i32* %c, align 4, !dbg !9093
  %inc = add nsw i32 %90, 1, !dbg !9093
  store i32 %inc, i32* %c, align 4, !dbg !9093
  %91 = load i32, i32* %c, align 4, !dbg !9094
  %cmp108 = icmp eq i32 %91, 3, !dbg !9096
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !9097

if.then110:                                       ; preds = %if.end107
  store i32 0, i32* %c, align 4, !dbg !9098
  br label %if.end111, !dbg !9099

if.end111:                                        ; preds = %if.then110, %if.end107
  %92 = load i64, i64* %k, align 8, !dbg !9100
  %inc112 = add nsw i64 %92, 1, !dbg !9100
  store i64 %inc112, i64* %k, align 8, !dbg !9100
  %93 = load i64, i64* %k, align 8, !dbg !9101
  %94 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9103
  %columns113 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 7, !dbg !9104
  %95 = load i64, i64* %columns113, align 8, !dbg !9104
  %96 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9105
  %columns114 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 7, !dbg !9106
  %97 = load i64, i64* %columns114, align 8, !dbg !9106
  %mul = mul i64 %95, %97, !dbg !9107
  %cmp115 = icmp eq i64 %93, %mul, !dbg !9108
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !9109

if.then117:                                       ; preds = %if.end111
  store i64 0, i64* %k, align 8, !dbg !9110
  br label %if.end118, !dbg !9111

if.end118:                                        ; preds = %if.then117, %if.end111
  %98 = load i64, i64* %k, align 8, !dbg !9112
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9114
  %offset119 = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 23, !dbg !9115
  %100 = load i64, i64* %offset119, align 8, !dbg !9115
  %cmp120 = icmp eq i64 %98, %100, !dbg !9116
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !9117

if.then122:                                       ; preds = %if.end118
  %101 = load i64, i64* %j, align 8, !dbg !9118
  %inc123 = add nsw i64 %101, 1, !dbg !9118
  store i64 %inc123, i64* %j, align 8, !dbg !9118
  br label %if.end124, !dbg !9119

if.end124:                                        ; preds = %if.then122, %if.end118
  br label %for.inc, !dbg !9120

for.inc:                                          ; preds = %if.end124
  %102 = load i64, i64* %x, align 8, !dbg !9121
  %inc125 = add nsw i64 %102, 1, !dbg !9121
  store i64 %inc125, i64* %x, align 8, !dbg !9121
  br label %for.cond23, !dbg !9122, !llvm.loop !9123

for.end:                                          ; preds = %if.then106, %if.then40, %if.then33, %land.end27
  br label %for.inc126, !dbg !9125

for.inc126:                                       ; preds = %for.end
  %103 = load i64, i64* %y, align 8, !dbg !9126
  %inc127 = add nsw i64 %103, 1, !dbg !9126
  store i64 %inc127, i64* %y, align 8, !dbg !9126
  br label %for.cond17, !dbg !9127, !llvm.loop !9128

for.end128:                                       ; preds = %land.end21
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9130
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %104, i32 0, i32 47, !dbg !9132
  %105 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !9132
  %cmp129 = icmp ne i32 (i8*, i64, i64, i8*)* %105, null, !dbg !9133
  br i1 %cmp129, label %if.then131, label %if.end138, !dbg !9134

if.then131:                                       ; preds = %for.end128
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !9135, metadata !DIExpression()), !dbg !9137
  %106 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9138
  %107 = load i64, i64* %depth, align 8, !dbg !9139
  %108 = load i64, i64* %i, align 8, !dbg !9140
  %sub132 = sub i64 %107, %108, !dbg !9141
  %109 = load i64, i64* %depth, align 8, !dbg !9142
  %call133 = call i32 @SetImageProgress(%struct._Image* %106, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0), i64 %sub132, i64 %109), !dbg !9143
  store i32 %call133, i32* %proceed, align 4, !dbg !9144
  %110 = load i32, i32* %proceed, align 4, !dbg !9145
  %cmp134 = icmp eq i32 %110, 0, !dbg !9147
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !9148

if.then136:                                       ; preds = %if.then131
  store i32 0, i32* %status, align 4, !dbg !9149
  br label %if.end137, !dbg !9150

if.end137:                                        ; preds = %if.then136, %if.then131
  br label %if.end138, !dbg !9151

if.end138:                                        ; preds = %if.end137, %for.end128
  br label %for.inc139, !dbg !9152

for.inc139:                                       ; preds = %if.end138
  %111 = load i64, i64* %i, align 8, !dbg !9153
  %dec = add nsw i64 %111, -1, !dbg !9153
  store i64 %dec, i64* %i, align 8, !dbg !9153
  br label %for.cond, !dbg !9154, !llvm.loop !9155

for.end140:                                       ; preds = %land.end
  %112 = load %struct._CacheView*, %struct._CacheView** %stegano_view, align 8, !dbg !9157
  %call141 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %112), !dbg !9158
  store %struct._CacheView* %call141, %struct._CacheView** %stegano_view, align 8, !dbg !9159
  %113 = load %struct._CacheView*, %struct._CacheView** %watermark_view, align 8, !dbg !9160
  %call142 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %113), !dbg !9161
  store %struct._CacheView* %call142, %struct._CacheView** %watermark_view, align 8, !dbg !9162
  %114 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9163
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %114, i32 0, i32 0, !dbg !9165
  %115 = load i32, i32* %storage_class, align 8, !dbg !9165
  %cmp143 = icmp eq i32 %115, 2, !dbg !9166
  br i1 %cmp143, label %if.then145, label %if.end147, !dbg !9167

if.then145:                                       ; preds = %for.end140
  %116 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9168
  %call146 = call i32 @SyncImage(%struct._Image* %116), !dbg !9169
  br label %if.end147, !dbg !9170

if.end147:                                        ; preds = %if.then145, %for.end140
  %117 = load i32, i32* %status, align 4, !dbg !9171
  %cmp148 = icmp eq i32 %117, 0, !dbg !9173
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !9174

if.then150:                                       ; preds = %if.end147
  %118 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9175
  %call151 = call %struct._Image* @DestroyImage(%struct._Image* %118), !dbg !9176
  store %struct._Image* %call151, %struct._Image** %stegano_image, align 8, !dbg !9177
  br label %if.end152, !dbg !9178

if.end152:                                        ; preds = %if.then150, %if.end147
  %119 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !9179
  store %struct._Image* %119, %struct._Image** %retval, align 8, !dbg !9180
  br label %return, !dbg !9180

return:                                           ; preds = %if.end152, %if.then7, %if.then3
  %120 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !9181
  ret %struct._Image* %120, !dbg !9181
}

declare dso_local i32 @SyncImage(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @StereoImage(%struct._Image* %left_image, %struct._Image* %right_image, %struct._ExceptionInfo* %exception) #0 !dbg !9182 {
entry:
  %left_image.addr = alloca %struct._Image*, align 8
  %right_image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %left_image, %struct._Image** %left_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %left_image.addr, metadata !9183, metadata !DIExpression()), !dbg !9184
  store %struct._Image* %right_image, %struct._Image** %right_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %right_image.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  %0 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9189
  %1 = load %struct._Image*, %struct._Image** %right_image.addr, align 8, !dbg !9190
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9191
  %call = call %struct._Image* @StereoAnaglyphImage(%struct._Image* %0, %struct._Image* %1, i64 0, i64 0, %struct._ExceptionInfo* %2), !dbg !9192
  ret %struct._Image* %call, !dbg !9193
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @StereoAnaglyphImage(%struct._Image* %left_image, %struct._Image* %right_image, i64 %x_offset, i64 %y_offset, %struct._ExceptionInfo* %exception) #0 !dbg !9194 {
entry:
  %retval = alloca %struct._Image*, align 8
  %left_image.addr = alloca %struct._Image*, align 8
  %right_image.addr = alloca %struct._Image*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image = alloca %struct._Image*, align 8
  %stereo_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %r = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %left_image, %struct._Image** %left_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %left_image.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  store %struct._Image* %right_image, %struct._Image** %right_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %right_image.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !9203, metadata !DIExpression()), !dbg !9204
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata %struct._Image** %stereo_image, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9211, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9213, metadata !DIExpression()), !dbg !9214
  %0 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9215
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9217
  %1 = load i32, i32* %debug, align 8, !dbg !9217
  %cmp = icmp ne i32 %1, 0, !dbg !9218
  br i1 %cmp, label %if.then, label %if.end, !dbg !9219

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9220
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !9221
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9220
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4908, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !9222
  br label %if.end, !dbg !9223

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9224
  store %struct._Image* %3, %struct._Image** %image, align 8, !dbg !9225
  %4 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9226
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !9228
  %5 = load i64, i64* %columns, align 8, !dbg !9228
  %6 = load %struct._Image*, %struct._Image** %right_image.addr, align 8, !dbg !9229
  %columns1 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !9230
  %7 = load i64, i64* %columns1, align 8, !dbg !9230
  %cmp2 = icmp ne i64 %5, %7, !dbg !9231
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !9232

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9233
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 8, !dbg !9234
  %9 = load i64, i64* %rows, align 8, !dbg !9234
  %10 = load %struct._Image*, %struct._Image** %right_image.addr, align 8, !dbg !9235
  %rows3 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !9236
  %11 = load i64, i64* %rows3, align 8, !dbg !9236
  %cmp4 = icmp ne i64 %9, %11, !dbg !9237
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !9238

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9239
  %13 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !9239
  %filename6 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 53, !dbg !9239
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename6, i64 0, i64 0, !dbg !9239
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4918, i32 465, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay7), !dbg !9239
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9239
  br label %return, !dbg !9239

if.end9:                                          ; preds = %lor.lhs.false
  %14 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9241
  %15 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9242
  %columns10 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 7, !dbg !9243
  %16 = load i64, i64* %columns10, align 8, !dbg !9243
  %17 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9244
  %rows11 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 8, !dbg !9245
  %18 = load i64, i64* %rows11, align 8, !dbg !9245
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9246
  %call12 = call %struct._Image* @CloneImage(%struct._Image* %14, i64 %16, i64 %18, i32 1, %struct._ExceptionInfo* %19), !dbg !9247
  store %struct._Image* %call12, %struct._Image** %stereo_image, align 8, !dbg !9248
  %20 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9249
  %cmp13 = icmp eq %struct._Image* %20, null, !dbg !9251
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !9252

if.then14:                                        ; preds = %if.end9
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9253
  br label %return, !dbg !9253

if.end15:                                         ; preds = %if.end9
  %21 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9254
  %call16 = call i32 @SetImageStorageClass(%struct._Image* %21, i32 1), !dbg !9256
  %cmp17 = icmp eq i32 %call16, 0, !dbg !9257
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !9258

if.then18:                                        ; preds = %if.end15
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9259
  %23 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9261
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 58, !dbg !9262
  call void @InheritException(%struct._ExceptionInfo* %22, %struct._ExceptionInfo* %exception19), !dbg !9263
  %24 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9264
  %call20 = call %struct._Image* @DestroyImage(%struct._Image* %24), !dbg !9265
  store %struct._Image* %call20, %struct._Image** %stereo_image, align 8, !dbg !9266
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9267
  br label %return, !dbg !9267

if.end21:                                         ; preds = %if.end15
  %25 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9268
  %call22 = call i32 @SetImageColorspace(%struct._Image* %25, i32 13), !dbg !9269
  store i32 1, i32* %status, align 4, !dbg !9270
  store i64 0, i64* %y, align 8, !dbg !9271
  br label %for.cond, !dbg !9273

for.cond:                                         ; preds = %for.inc67, %if.end21
  %26 = load i64, i64* %y, align 8, !dbg !9274
  %27 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9276
  %rows23 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 8, !dbg !9277
  %28 = load i64, i64* %rows23, align 8, !dbg !9277
  %cmp24 = icmp slt i64 %26, %28, !dbg !9278
  br i1 %cmp24, label %for.body, label %for.end69, !dbg !9279

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !9280, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9283, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r, metadata !9287, metadata !DIExpression()), !dbg !9288
  %29 = load %struct._Image*, %struct._Image** %left_image.addr, align 8, !dbg !9289
  %30 = load i64, i64* %x_offset.addr, align 8, !dbg !9290
  %sub = sub nsw i64 0, %30, !dbg !9291
  %31 = load i64, i64* %y, align 8, !dbg !9292
  %32 = load i64, i64* %y_offset.addr, align 8, !dbg !9293
  %sub25 = sub nsw i64 %31, %32, !dbg !9294
  %33 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !9295
  %columns26 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 7, !dbg !9296
  %34 = load i64, i64* %columns26, align 8, !dbg !9296
  %35 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9297
  %call27 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %29, i64 %sub, i64 %sub25, i64 %34, i64 1, %struct._ExceptionInfo* %35), !dbg !9298
  store %struct._PixelPacket* %call27, %struct._PixelPacket** %p, align 8, !dbg !9299
  %36 = load %struct._Image*, %struct._Image** %right_image.addr, align 8, !dbg !9300
  %37 = load i64, i64* %y, align 8, !dbg !9301
  %38 = load %struct._Image*, %struct._Image** %right_image.addr, align 8, !dbg !9302
  %columns28 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !9303
  %39 = load i64, i64* %columns28, align 8, !dbg !9303
  %40 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9304
  %call29 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %36, i64 0, i64 %37, i64 %39, i64 1, %struct._ExceptionInfo* %40), !dbg !9305
  store %struct._PixelPacket* %call29, %struct._PixelPacket** %q, align 8, !dbg !9306
  %41 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9307
  %42 = load i64, i64* %y, align 8, !dbg !9308
  %43 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9309
  %columns30 = getelementptr inbounds %struct._Image, %struct._Image* %43, i32 0, i32 7, !dbg !9310
  %44 = load i64, i64* %columns30, align 8, !dbg !9310
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9311
  %call31 = call %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image* %41, i64 0, i64 %42, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !9312
  store %struct._PixelPacket* %call31, %struct._PixelPacket** %r, align 8, !dbg !9313
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9314
  %cmp32 = icmp eq %struct._PixelPacket* %46, null, !dbg !9316
  br i1 %cmp32, label %if.then37, label %lor.lhs.false33, !dbg !9317

lor.lhs.false33:                                  ; preds = %for.body
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9318
  %cmp34 = icmp eq %struct._PixelPacket* %47, null, !dbg !9319
  br i1 %cmp34, label %if.then37, label %lor.lhs.false35, !dbg !9320

lor.lhs.false35:                                  ; preds = %lor.lhs.false33
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9321
  %cmp36 = icmp eq %struct._PixelPacket* %48, null, !dbg !9322
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !9323

if.then37:                                        ; preds = %lor.lhs.false35, %lor.lhs.false33, %for.body
  br label %for.end69, !dbg !9324

if.end38:                                         ; preds = %lor.lhs.false35
  store i64 0, i64* %x, align 8, !dbg !9325
  br label %for.cond39, !dbg !9327

for.cond39:                                       ; preds = %for.inc, %if.end38
  %49 = load i64, i64* %x, align 8, !dbg !9328
  %50 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9330
  %columns40 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 7, !dbg !9331
  %51 = load i64, i64* %columns40, align 8, !dbg !9331
  %cmp41 = icmp slt i64 %49, %51, !dbg !9332
  br i1 %cmp41, label %for.body42, label %for.end, !dbg !9333

for.body42:                                       ; preds = %for.cond39
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9334
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 2, !dbg !9334
  %53 = load i16, i16* %red, align 2, !dbg !9334
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9334
  %red43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !9334
  store i16 %53, i16* %red43, align 2, !dbg !9334
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9336
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !9336
  %56 = load i16, i16* %green, align 2, !dbg !9336
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9336
  %green44 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 1, !dbg !9336
  store i16 %56, i16* %green44, align 2, !dbg !9336
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9337
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 0, !dbg !9337
  %59 = load i16, i16* %blue, align 2, !dbg !9337
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9337
  %blue45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 0, !dbg !9337
  store i16 %59, i16* %blue45, align 2, !dbg !9337
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9338
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !9338
  %62 = load i16, i16* %opacity, align 2, !dbg !9338
  %conv = zext i16 %62 to i32, !dbg !9338
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9338
  %opacity46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 3, !dbg !9338
  %64 = load i16, i16* %opacity46, align 2, !dbg !9338
  %conv47 = zext i16 %64 to i32, !dbg !9338
  %add = add nsw i32 %conv, %conv47, !dbg !9338
  %div = sdiv i32 %add, 2, !dbg !9338
  %conv48 = trunc i32 %div to i16, !dbg !9338
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9338
  %opacity49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 3, !dbg !9338
  store i16 %conv48, i16* %opacity49, align 2, !dbg !9338
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9339
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 1, !dbg !9339
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !9339
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9340
  %incdec.ptr50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 1, !dbg !9340
  store %struct._PixelPacket* %incdec.ptr50, %struct._PixelPacket** %q, align 8, !dbg !9340
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !9341
  %incdec.ptr51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 1, !dbg !9341
  store %struct._PixelPacket* %incdec.ptr51, %struct._PixelPacket** %r, align 8, !dbg !9341
  br label %for.inc, !dbg !9342

for.inc:                                          ; preds = %for.body42
  %69 = load i64, i64* %x, align 8, !dbg !9343
  %inc = add nsw i64 %69, 1, !dbg !9343
  store i64 %inc, i64* %x, align 8, !dbg !9343
  br label %for.cond39, !dbg !9344, !llvm.loop !9345

for.end:                                          ; preds = %for.cond39
  %70 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9347
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9349
  %call52 = call i32 @SyncAuthenticPixels(%struct._Image* %70, %struct._ExceptionInfo* %71), !dbg !9350
  %cmp53 = icmp eq i32 %call52, 0, !dbg !9351
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !9352

if.then55:                                        ; preds = %for.end
  br label %for.end69, !dbg !9353

if.end56:                                         ; preds = %for.end
  %72 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !9354
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 47, !dbg !9356
  %73 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !9356
  %cmp57 = icmp ne i32 (i8*, i64, i64, i8*)* %73, null, !dbg !9357
  br i1 %cmp57, label %if.then59, label %if.end66, !dbg !9358

if.then59:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !9359, metadata !DIExpression()), !dbg !9361
  %74 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !9362
  %75 = load i64, i64* %y, align 8, !dbg !9363
  %76 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9364
  %rows60 = getelementptr inbounds %struct._Image, %struct._Image* %76, i32 0, i32 8, !dbg !9365
  %77 = load i64, i64* %rows60, align 8, !dbg !9365
  %call61 = call i32 @SetImageProgress(%struct._Image* %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i64 %75, i64 %77), !dbg !9366
  store i32 %call61, i32* %proceed, align 4, !dbg !9367
  %78 = load i32, i32* %proceed, align 4, !dbg !9368
  %cmp62 = icmp eq i32 %78, 0, !dbg !9370
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !9371

if.then64:                                        ; preds = %if.then59
  store i32 0, i32* %status, align 4, !dbg !9372
  br label %if.end65, !dbg !9373

if.end65:                                         ; preds = %if.then64, %if.then59
  br label %if.end66, !dbg !9374

if.end66:                                         ; preds = %if.end65, %if.end56
  br label %for.inc67, !dbg !9375

for.inc67:                                        ; preds = %if.end66
  %79 = load i64, i64* %y, align 8, !dbg !9376
  %inc68 = add nsw i64 %79, 1, !dbg !9376
  store i64 %inc68, i64* %y, align 8, !dbg !9376
  br label %for.cond, !dbg !9377, !llvm.loop !9378

for.end69:                                        ; preds = %if.then55, %if.then37, %for.cond
  %80 = load i32, i32* %status, align 4, !dbg !9380
  %cmp70 = icmp eq i32 %80, 0, !dbg !9382
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !9383

if.then72:                                        ; preds = %for.end69
  %81 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9384
  %call73 = call %struct._Image* @DestroyImage(%struct._Image* %81), !dbg !9385
  store %struct._Image* %call73, %struct._Image** %stereo_image, align 8, !dbg !9386
  br label %if.end74, !dbg !9387

if.end74:                                         ; preds = %if.then72, %for.end69
  %82 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !9388
  store %struct._Image* %82, %struct._Image** %retval, align 8, !dbg !9389
  br label %return, !dbg !9389

return:                                           ; preds = %if.end74, %if.then18, %if.then14, %if.then5
  %83 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !9390
  ret %struct._Image* %83, !dbg !9390
}

declare dso_local %struct._PixelPacket* @GetVirtualPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i32 @SyncAuthenticPixels(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SwirlImage(%struct._Image* %image, double %degrees, %struct._ExceptionInfo* %exception) #0 !dbg !9391 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %degrees.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %swirl_view = alloca %struct._CacheView*, align 8
  %radius = alloca double, align 8
  %swirl_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %center = alloca %struct._PointInfo, align 8
  %scale = alloca %struct._PointInfo, align 8
  %y = alloca i64, align 8
  %distance = alloca double, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %delta = alloca %struct._PointInfo, align 8
  %swirl_indexes = alloca i16*, align 8
  %x54 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %cosine = alloca double, align 8
  %factor = alloca double, align 8
  %sine = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9394, metadata !DIExpression()), !dbg !9395
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !9396, metadata !DIExpression()), !dbg !9397
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9398, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.declare(metadata %struct._CacheView** %swirl_view, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata double* %radius, metadata !9404, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.declare(metadata %struct._Image** %swirl_image, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9408, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !9412, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %scale, metadata !9416, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9418, metadata !DIExpression()), !dbg !9419
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9420
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9422
  %1 = load i32, i32* %debug, align 8, !dbg !9422
  %cmp = icmp ne i32 %1, 0, !dbg !9423
  br i1 %cmp, label %if.then, label %if.end, !dbg !9424

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9425
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !9426
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9425
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5050, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !9427
  br label %if.end, !dbg !9428

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9429
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9430
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !9431
  store %struct._Image* %call1, %struct._Image** %swirl_image, align 8, !dbg !9432
  %5 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9433
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !9435
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9436

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9437
  br label %return, !dbg !9437

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9438
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 1), !dbg !9440
  %cmp6 = icmp eq i32 %call5, 0, !dbg !9441
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9442

if.then7:                                         ; preds = %if.end4
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9443
  %8 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9445
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !9446
  call void @InheritException(%struct._ExceptionInfo* %7, %struct._ExceptionInfo* %exception8), !dbg !9447
  %9 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9448
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %9), !dbg !9449
  store %struct._Image* %call9, %struct._Image** %swirl_image, align 8, !dbg !9450
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9451
  br label %return, !dbg !9451

if.end10:                                         ; preds = %if.end4
  %10 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9452
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !9454
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !9455
  %11 = load i16, i16* %opacity, align 2, !dbg !9455
  %conv = zext i16 %11 to i32, !dbg !9452
  %cmp11 = icmp ne i32 %conv, 0, !dbg !9456
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !9457

if.then13:                                        ; preds = %if.end10
  %12 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9458
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 6, !dbg !9459
  store i32 1, i32* %matte, align 8, !dbg !9460
  br label %if.end14, !dbg !9458

if.end14:                                         ; preds = %if.then13, %if.end10
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9461
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !9462
  %14 = load i64, i64* %columns, align 8, !dbg !9462
  %conv15 = uitofp i64 %14 to double, !dbg !9463
  %div = fdiv double %conv15, 2.000000e+00, !dbg !9464
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !9465
  store double %div, double* %x, align 8, !dbg !9466
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9467
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !9468
  %16 = load i64, i64* %rows, align 8, !dbg !9468
  %conv16 = uitofp i64 %16 to double, !dbg !9469
  %div17 = fdiv double %conv16, 2.000000e+00, !dbg !9470
  %y18 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !9471
  store double %div17, double* %y18, align 8, !dbg !9472
  %x19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !9473
  %17 = load double, double* %x19, align 8, !dbg !9473
  %y20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !9474
  %18 = load double, double* %y20, align 8, !dbg !9474
  %call21 = call double @MagickMax(double %17, double %18), !dbg !9475
  store double %call21, double* %radius, align 8, !dbg !9476
  %x22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !9477
  store double 1.000000e+00, double* %x22, align 8, !dbg !9478
  %y23 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !9479
  store double 1.000000e+00, double* %y23, align 8, !dbg !9480
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9481
  %columns24 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !9483
  %20 = load i64, i64* %columns24, align 8, !dbg !9483
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9484
  %rows25 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 8, !dbg !9485
  %22 = load i64, i64* %rows25, align 8, !dbg !9485
  %cmp26 = icmp ugt i64 %20, %22, !dbg !9486
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !9487

if.then28:                                        ; preds = %if.end14
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9488
  %columns29 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !9489
  %24 = load i64, i64* %columns29, align 8, !dbg !9489
  %conv30 = uitofp i64 %24 to double, !dbg !9490
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9491
  %rows31 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 8, !dbg !9492
  %26 = load i64, i64* %rows31, align 8, !dbg !9492
  %conv32 = uitofp i64 %26 to double, !dbg !9493
  %div33 = fdiv double %conv30, %conv32, !dbg !9494
  %y34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !9495
  store double %div33, double* %y34, align 8, !dbg !9496
  br label %if.end47, !dbg !9497

if.else:                                          ; preds = %if.end14
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9498
  %columns35 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 7, !dbg !9500
  %28 = load i64, i64* %columns35, align 8, !dbg !9500
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9501
  %rows36 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 8, !dbg !9502
  %30 = load i64, i64* %rows36, align 8, !dbg !9502
  %cmp37 = icmp ult i64 %28, %30, !dbg !9503
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !9504

if.then39:                                        ; preds = %if.else
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9505
  %rows40 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 8, !dbg !9506
  %32 = load i64, i64* %rows40, align 8, !dbg !9506
  %conv41 = uitofp i64 %32 to double, !dbg !9507
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9508
  %columns42 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 7, !dbg !9509
  %34 = load i64, i64* %columns42, align 8, !dbg !9509
  %conv43 = uitofp i64 %34 to double, !dbg !9510
  %div44 = fdiv double %conv41, %conv43, !dbg !9511
  %x45 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !9512
  store double %div44, double* %x45, align 8, !dbg !9513
  br label %if.end46, !dbg !9514

if.end46:                                         ; preds = %if.then39, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then28
  %35 = load double, double* %degrees.addr, align 8, !dbg !9515
  %call48 = call double @DegreesToRadians(double %35), !dbg !9516
  store double %call48, double* %degrees.addr, align 8, !dbg !9517
  store i32 1, i32* %status, align 4, !dbg !9518
  store i64 0, i64* %progress, align 8, !dbg !9519
  %36 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9520
  call void @GetMagickPixelPacket(%struct._Image* %36, %struct._MagickPixelPacket* %zero), !dbg !9521
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9522
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9523
  %call49 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %37, %struct._ExceptionInfo* %38), !dbg !9524
  store %struct._CacheView* %call49, %struct._CacheView** %image_view, align 8, !dbg !9525
  %39 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9526
  %40 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9527
  %call50 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %39, %struct._ExceptionInfo* %40), !dbg !9528
  store %struct._CacheView* %call50, %struct._CacheView** %swirl_view, align 8, !dbg !9529
  store i64 0, i64* %y, align 8, !dbg !9530
  br label %for.cond, !dbg !9532

for.cond:                                         ; preds = %for.inc136, %if.end47
  %41 = load i64, i64* %y, align 8, !dbg !9533
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9535
  %rows51 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 8, !dbg !9536
  %43 = load i64, i64* %rows51, align 8, !dbg !9536
  %cmp52 = icmp slt i64 %41, %43, !dbg !9537
  br i1 %cmp52, label %for.body, label %for.end138, !dbg !9538

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %distance, metadata !9539, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !9542, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.declare(metadata i16** %swirl_indexes, metadata !9546, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.declare(metadata i64* %x54, metadata !9548, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9550, metadata !DIExpression()), !dbg !9551
  %44 = load i32, i32* %status, align 4, !dbg !9552
  %cmp55 = icmp eq i32 %44, 0, !dbg !9554
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !9555

if.then57:                                        ; preds = %for.body
  br label %for.inc136, !dbg !9556

if.end58:                                         ; preds = %for.body
  %45 = load %struct._CacheView*, %struct._CacheView** %swirl_view, align 8, !dbg !9557
  %46 = load i64, i64* %y, align 8, !dbg !9558
  %47 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9559
  %columns59 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 7, !dbg !9560
  %48 = load i64, i64* %columns59, align 8, !dbg !9560
  %49 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9561
  %call60 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %45, i64 0, i64 %46, i64 %48, i64 1, %struct._ExceptionInfo* %49), !dbg !9562
  store %struct._PixelPacket* %call60, %struct._PixelPacket** %q, align 8, !dbg !9563
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9564
  %cmp61 = icmp eq %struct._PixelPacket* %50, null, !dbg !9566
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !9567

if.then63:                                        ; preds = %if.end58
  store i32 0, i32* %status, align 4, !dbg !9568
  br label %for.inc136, !dbg !9570

if.end64:                                         ; preds = %if.end58
  %51 = load %struct._CacheView*, %struct._CacheView** %swirl_view, align 8, !dbg !9571
  %call65 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %51), !dbg !9572
  store i16* %call65, i16** %swirl_indexes, align 8, !dbg !9573
  %y66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !9574
  %52 = load double, double* %y66, align 8, !dbg !9574
  %53 = load i64, i64* %y, align 8, !dbg !9575
  %conv67 = sitofp i64 %53 to double, !dbg !9575
  %y68 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !9576
  %54 = load double, double* %y68, align 8, !dbg !9576
  %sub = fsub double %conv67, %54, !dbg !9577
  %mul = fmul double %52, %sub, !dbg !9578
  %y69 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !9579
  store double %mul, double* %y69, align 8, !dbg !9580
  %55 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !9581
  %56 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !9581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 56, i1 false), !dbg !9581
  store i64 0, i64* %x54, align 8, !dbg !9582
  br label %for.cond70, !dbg !9584

for.cond70:                                       ; preds = %for.inc, %if.end64
  %57 = load i64, i64* %x54, align 8, !dbg !9585
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9587
  %columns71 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !9588
  %59 = load i64, i64* %columns71, align 8, !dbg !9588
  %cmp72 = icmp slt i64 %57, %59, !dbg !9589
  br i1 %cmp72, label %for.body74, label %for.end, !dbg !9590

for.body74:                                       ; preds = %for.cond70
  %x75 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !9591
  %60 = load double, double* %x75, align 8, !dbg !9591
  %61 = load i64, i64* %x54, align 8, !dbg !9593
  %conv76 = sitofp i64 %61 to double, !dbg !9593
  %x77 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !9594
  %62 = load double, double* %x77, align 8, !dbg !9594
  %sub78 = fsub double %conv76, %62, !dbg !9595
  %mul79 = fmul double %60, %sub78, !dbg !9596
  %x80 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !9597
  store double %mul79, double* %x80, align 8, !dbg !9598
  %x81 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !9599
  %63 = load double, double* %x81, align 8, !dbg !9599
  %x82 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !9600
  %64 = load double, double* %x82, align 8, !dbg !9600
  %mul83 = fmul double %63, %64, !dbg !9601
  %y84 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !9602
  %65 = load double, double* %y84, align 8, !dbg !9602
  %y85 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !9603
  %66 = load double, double* %y85, align 8, !dbg !9603
  %mul86 = fmul double %65, %66, !dbg !9604
  %add = fadd double %mul83, %mul86, !dbg !9605
  store double %add, double* %distance, align 8, !dbg !9606
  %67 = load double, double* %distance, align 8, !dbg !9607
  %68 = load double, double* %radius, align 8, !dbg !9609
  %69 = load double, double* %radius, align 8, !dbg !9610
  %mul87 = fmul double %68, %69, !dbg !9611
  %cmp88 = fcmp olt double %67, %mul87, !dbg !9612
  br i1 %cmp88, label %if.then90, label %if.end119, !dbg !9613

if.then90:                                        ; preds = %for.body74
  call void @llvm.dbg.declare(metadata double* %cosine, metadata !9614, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata double* %factor, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata double* %sine, metadata !9619, metadata !DIExpression()), !dbg !9620
  %70 = load double, double* %distance, align 8, !dbg !9621
  %call91 = call double @sqrt(double %70) #14, !dbg !9622
  %71 = load double, double* %radius, align 8, !dbg !9623
  %div92 = fdiv double %call91, %71, !dbg !9624
  %sub93 = fsub double 1.000000e+00, %div92, !dbg !9625
  store double %sub93, double* %factor, align 8, !dbg !9626
  %72 = load double, double* %degrees.addr, align 8, !dbg !9627
  %73 = load double, double* %factor, align 8, !dbg !9628
  %mul94 = fmul double %72, %73, !dbg !9629
  %74 = load double, double* %factor, align 8, !dbg !9630
  %mul95 = fmul double %mul94, %74, !dbg !9631
  %call96 = call double @sin(double %mul95) #14, !dbg !9632
  store double %call96, double* %sine, align 8, !dbg !9633
  %75 = load double, double* %degrees.addr, align 8, !dbg !9634
  %76 = load double, double* %factor, align 8, !dbg !9635
  %mul97 = fmul double %75, %76, !dbg !9636
  %77 = load double, double* %factor, align 8, !dbg !9637
  %mul98 = fmul double %mul97, %77, !dbg !9638
  %call99 = call double @cos(double %mul98) #14, !dbg !9639
  store double %call99, double* %cosine, align 8, !dbg !9640
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9641
  %79 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9642
  %80 = load double, double* %cosine, align 8, !dbg !9643
  %x100 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !9644
  %81 = load double, double* %x100, align 8, !dbg !9644
  %mul101 = fmul double %80, %81, !dbg !9645
  %82 = load double, double* %sine, align 8, !dbg !9646
  %y102 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !9647
  %83 = load double, double* %y102, align 8, !dbg !9647
  %mul103 = fmul double %82, %83, !dbg !9648
  %sub104 = fsub double %mul101, %mul103, !dbg !9649
  %x105 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !9650
  %84 = load double, double* %x105, align 8, !dbg !9650
  %div106 = fdiv double %sub104, %84, !dbg !9651
  %x107 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !9652
  %85 = load double, double* %x107, align 8, !dbg !9652
  %add108 = fadd double %div106, %85, !dbg !9653
  %86 = load double, double* %sine, align 8, !dbg !9654
  %x109 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !9655
  %87 = load double, double* %x109, align 8, !dbg !9655
  %mul110 = fmul double %86, %87, !dbg !9656
  %88 = load double, double* %cosine, align 8, !dbg !9657
  %y111 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !9658
  %89 = load double, double* %y111, align 8, !dbg !9658
  %mul112 = fmul double %88, %89, !dbg !9659
  %add113 = fadd double %mul110, %mul112, !dbg !9660
  %y114 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !9661
  %90 = load double, double* %y114, align 8, !dbg !9661
  %div115 = fdiv double %add113, %90, !dbg !9662
  %y116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !9663
  %91 = load double, double* %y116, align 8, !dbg !9663
  %add117 = fadd double %div115, %91, !dbg !9664
  %92 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9665
  %call118 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %78, %struct._CacheView* %79, i32 0, double %add108, double %add117, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %92), !dbg !9666
  %93 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9667
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9668
  %95 = load i16*, i16** %swirl_indexes, align 8, !dbg !9669
  %96 = load i64, i64* %x54, align 8, !dbg !9670
  %add.ptr = getelementptr inbounds i16, i16* %95, i64 %96, !dbg !9671
  call void @SetPixelPacket(%struct._Image* %93, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %94, i16* %add.ptr), !dbg !9672
  br label %if.end119, !dbg !9673

if.end119:                                        ; preds = %if.then90, %for.body74
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9674
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 1, !dbg !9674
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !9674
  br label %for.inc, !dbg !9675

for.inc:                                          ; preds = %if.end119
  %98 = load i64, i64* %x54, align 8, !dbg !9676
  %inc = add nsw i64 %98, 1, !dbg !9676
  store i64 %inc, i64* %x54, align 8, !dbg !9676
  br label %for.cond70, !dbg !9677, !llvm.loop !9678

for.end:                                          ; preds = %for.cond70
  %99 = load %struct._CacheView*, %struct._CacheView** %swirl_view, align 8, !dbg !9680
  %100 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9682
  %call120 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %99, %struct._ExceptionInfo* %100), !dbg !9683
  %cmp121 = icmp eq i32 %call120, 0, !dbg !9684
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !9685

if.then123:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !9686
  br label %if.end124, !dbg !9687

if.end124:                                        ; preds = %if.then123, %for.end
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9688
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %101, i32 0, i32 47, !dbg !9690
  %102 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !9690
  %cmp125 = icmp ne i32 (i8*, i64, i64, i8*)* %102, null, !dbg !9691
  br i1 %cmp125, label %if.then127, label %if.end135, !dbg !9692

if.then127:                                       ; preds = %if.end124
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !9693, metadata !DIExpression()), !dbg !9695
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9696
  %104 = load i64, i64* %progress, align 8, !dbg !9697
  %inc128 = add nsw i64 %104, 1, !dbg !9697
  store i64 %inc128, i64* %progress, align 8, !dbg !9697
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9698
  %rows129 = getelementptr inbounds %struct._Image, %struct._Image* %105, i32 0, i32 8, !dbg !9699
  %106 = load i64, i64* %rows129, align 8, !dbg !9699
  %call130 = call i32 @SetImageProgress(%struct._Image* %103, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i64 %104, i64 %106), !dbg !9700
  store i32 %call130, i32* %proceed, align 4, !dbg !9701
  %107 = load i32, i32* %proceed, align 4, !dbg !9702
  %cmp131 = icmp eq i32 %107, 0, !dbg !9704
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !9705

if.then133:                                       ; preds = %if.then127
  store i32 0, i32* %status, align 4, !dbg !9706
  br label %if.end134, !dbg !9707

if.end134:                                        ; preds = %if.then133, %if.then127
  br label %if.end135, !dbg !9708

if.end135:                                        ; preds = %if.end134, %if.end124
  br label %for.inc136, !dbg !9709

for.inc136:                                       ; preds = %if.end135, %if.then63, %if.then57
  %108 = load i64, i64* %y, align 8, !dbg !9710
  %inc137 = add nsw i64 %108, 1, !dbg !9710
  store i64 %inc137, i64* %y, align 8, !dbg !9710
  br label %for.cond, !dbg !9711, !llvm.loop !9712

for.end138:                                       ; preds = %for.cond
  %109 = load %struct._CacheView*, %struct._CacheView** %swirl_view, align 8, !dbg !9714
  %call139 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %109), !dbg !9715
  store %struct._CacheView* %call139, %struct._CacheView** %swirl_view, align 8, !dbg !9716
  %110 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9717
  %call140 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %110), !dbg !9718
  store %struct._CacheView* %call140, %struct._CacheView** %image_view, align 8, !dbg !9719
  %111 = load i32, i32* %status, align 4, !dbg !9720
  %cmp141 = icmp eq i32 %111, 0, !dbg !9722
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !9723

if.then143:                                       ; preds = %for.end138
  %112 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9724
  %call144 = call %struct._Image* @DestroyImage(%struct._Image* %112), !dbg !9725
  store %struct._Image* %call144, %struct._Image** %swirl_image, align 8, !dbg !9726
  br label %if.end145, !dbg !9727

if.end145:                                        ; preds = %if.then143, %for.end138
  %113 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !9728
  store %struct._Image* %113, %struct._Image** %retval, align 8, !dbg !9729
  br label %return, !dbg !9729

return:                                           ; preds = %if.end145, %if.then7, %if.then3
  %114 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !9730
  ret %struct._Image* %114, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define internal double @DegreesToRadians(double %degrees) #0 !dbg !9731 {
entry:
  %degrees.addr = alloca double, align 8
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  %0 = load double, double* %degrees.addr, align 8, !dbg !9737
  %mul = fmul double 0x400921FB54442D18, %0, !dbg !9738
  %div = fdiv double %mul, 1.800000e+02, !dbg !9739
  ret double %div, !dbg !9740
}

; Function Attrs: nounwind
declare dso_local double @cos(double) #8

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @TintImage(%struct._Image* %image, i8* %opacity, i64 %tint.coerce, %struct._ExceptionInfo* %exception) #0 !dbg !9741 {
entry:
  %retval = alloca %struct._Image*, align 8
  %tint = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %tint_view = alloca %struct._CacheView*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %tint_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %color_vector = alloca %struct._MagickPixelPacket, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %flags = alloca i32, align 4
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %weight = alloca double, align 8
  %pixel107 = alloca %struct._MagickPixelPacket, align 8
  %proceed = alloca i32, align 4
  %0 = bitcast %struct._PixelPacket* %tint to i64*
  store i64 %tint.coerce, i64* %0, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i8* %opacity, i8** %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opacity.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %tint, metadata !9746, metadata !DIExpression()), !dbg !9747
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata %struct._CacheView** %tint_view, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata %struct._Image** %tint_image, metadata !9756, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9758, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %color_vector, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9768, metadata !DIExpression()), !dbg !9769
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9770
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !9772
  %2 = load i32, i32* %debug, align 8, !dbg !9772
  %cmp = icmp ne i32 %2, 0, !dbg !9773
  br i1 %cmp, label %if.then, label %if.end, !dbg !9774

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9775
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !9776
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9775
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5240, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !9777
  br label %if.end, !dbg !9778

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9779
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9780
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 7, !dbg !9781
  %6 = load i64, i64* %columns, align 8, !dbg !9781
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9782
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !9783
  %8 = load i64, i64* %rows, align 8, !dbg !9783
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9784
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %4, i64 %6, i64 %8, i32 1, %struct._ExceptionInfo* %9), !dbg !9785
  store %struct._Image* %call1, %struct._Image** %tint_image, align 8, !dbg !9786
  %10 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9787
  %cmp2 = icmp eq %struct._Image* %10, null, !dbg !9789
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9790

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9791
  br label %return, !dbg !9791

if.end4:                                          ; preds = %if.end
  %11 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9792
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %11, i32 1), !dbg !9794
  %cmp6 = icmp eq i32 %call5, 0, !dbg !9795
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9796

if.then7:                                         ; preds = %if.end4
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9797
  %13 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9799
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !9800
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception8), !dbg !9801
  %14 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9802
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %14), !dbg !9803
  store %struct._Image* %call9, %struct._Image** %tint_image, align 8, !dbg !9804
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !9805
  br label %return, !dbg !9805

if.end10:                                         ; preds = %if.end4
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9806
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 1, !dbg !9808
  %16 = load i32, i32* %colorspace, align 4, !dbg !9808
  %call11 = call i32 @IsGrayColorspace(i32 %16), !dbg !9809
  %cmp12 = icmp ne i32 %call11, 0, !dbg !9810
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !9811

land.lhs.true:                                    ; preds = %if.end10
  %call13 = call i32 @IsPixelGray(%struct._PixelPacket* %tint), !dbg !9812
  %cmp14 = icmp eq i32 %call13, 0, !dbg !9813
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !9814

if.then15:                                        ; preds = %land.lhs.true
  %17 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9815
  %call16 = call i32 @SetImageColorspace(%struct._Image* %17, i32 13), !dbg !9816
  br label %if.end17, !dbg !9817

if.end17:                                         ; preds = %if.then15, %land.lhs.true, %if.end10
  %18 = load i8*, i8** %opacity.addr, align 8, !dbg !9818
  %cmp18 = icmp eq i8* %18, null, !dbg !9820
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !9821

if.then19:                                        ; preds = %if.end17
  %19 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9822
  store %struct._Image* %19, %struct._Image** %retval, align 8, !dbg !9823
  br label %return, !dbg !9823

if.end20:                                         ; preds = %if.end17
  %20 = load i8*, i8** %opacity.addr, align 8, !dbg !9824
  %call21 = call i32 @ParseGeometry(i8* %20, %struct._GeometryInfo* %geometry_info), !dbg !9825
  store i32 %call21, i32* %flags, align 4, !dbg !9826
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !9827
  %21 = load double, double* %rho, align 8, !dbg !9827
  %conv = fptrunc double %21 to float, !dbg !9828
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9829
  store float %conv, float* %red, align 8, !dbg !9830
  %rho22 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !9831
  %22 = load double, double* %rho22, align 8, !dbg !9831
  %conv23 = fptrunc double %22 to float, !dbg !9832
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9833
  store float %conv23, float* %green, align 4, !dbg !9834
  %rho24 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !9835
  %23 = load double, double* %rho24, align 8, !dbg !9835
  %conv25 = fptrunc double %23 to float, !dbg !9836
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9837
  store float %conv25, float* %blue, align 8, !dbg !9838
  %opacity26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9839
  store float 0.000000e+00, float* %opacity26, align 4, !dbg !9840
  %24 = load i32, i32* %flags, align 4, !dbg !9841
  %and = and i32 %24, 8, !dbg !9843
  %cmp27 = icmp ne i32 %and, 0, !dbg !9844
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !9845

if.then29:                                        ; preds = %if.end20
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !9846
  %25 = load double, double* %sigma, align 8, !dbg !9846
  %conv30 = fptrunc double %25 to float, !dbg !9847
  %green31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9848
  store float %conv30, float* %green31, align 4, !dbg !9849
  br label %if.end32, !dbg !9850

if.end32:                                         ; preds = %if.then29, %if.end20
  %26 = load i32, i32* %flags, align 4, !dbg !9851
  %and33 = and i32 %26, 1, !dbg !9853
  %cmp34 = icmp ne i32 %and33, 0, !dbg !9854
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !9855

if.then36:                                        ; preds = %if.end32
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !9856
  %27 = load double, double* %xi, align 8, !dbg !9856
  %conv37 = fptrunc double %27 to float, !dbg !9857
  %blue38 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9858
  store float %conv37, float* %blue38, align 8, !dbg !9859
  br label %if.end39, !dbg !9860

if.end39:                                         ; preds = %if.then36, %if.end32
  %28 = load i32, i32* %flags, align 4, !dbg !9861
  %and40 = and i32 %28, 2, !dbg !9863
  %cmp41 = icmp ne i32 %and40, 0, !dbg !9864
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !9865

if.then43:                                        ; preds = %if.end39
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !9866
  %29 = load double, double* %psi, align 8, !dbg !9866
  %conv44 = fptrunc double %29 to float, !dbg !9867
  %opacity45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9868
  store float %conv44, float* %opacity45, align 4, !dbg !9869
  br label %if.end46, !dbg !9870

if.end46:                                         ; preds = %if.then43, %if.end39
  %red47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9871
  %30 = load float, float* %red47, align 8, !dbg !9871
  %red48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %tint, i32 0, i32 2, !dbg !9872
  %31 = load i16, i16* %red48, align 2, !dbg !9872
  %conv49 = zext i16 %31 to i32, !dbg !9873
  %conv50 = sitofp i32 %conv49 to float, !dbg !9873
  %mul = fmul float %30, %conv50, !dbg !9874
  %conv51 = fpext float %mul to double, !dbg !9875
  %div = fdiv double %conv51, 1.000000e+02, !dbg !9876
  %call52 = call zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %tint), !dbg !9877
  %conv53 = zext i16 %call52 to i32, !dbg !9877
  %conv54 = sitofp i32 %conv53 to double, !dbg !9877
  %sub = fsub double %div, %conv54, !dbg !9878
  %conv55 = fptrunc double %sub to float, !dbg !9879
  %red56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 5, !dbg !9880
  store float %conv55, float* %red56, align 8, !dbg !9881
  %green57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9882
  %32 = load float, float* %green57, align 4, !dbg !9882
  %green58 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %tint, i32 0, i32 1, !dbg !9883
  %33 = load i16, i16* %green58, align 2, !dbg !9883
  %conv59 = zext i16 %33 to i32, !dbg !9884
  %conv60 = sitofp i32 %conv59 to float, !dbg !9884
  %mul61 = fmul float %32, %conv60, !dbg !9885
  %conv62 = fpext float %mul61 to double, !dbg !9886
  %div63 = fdiv double %conv62, 1.000000e+02, !dbg !9887
  %call64 = call zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %tint), !dbg !9888
  %conv65 = zext i16 %call64 to i32, !dbg !9888
  %conv66 = sitofp i32 %conv65 to double, !dbg !9888
  %sub67 = fsub double %div63, %conv66, !dbg !9889
  %conv68 = fptrunc double %sub67 to float, !dbg !9890
  %green69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 6, !dbg !9891
  store float %conv68, float* %green69, align 4, !dbg !9892
  %blue70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9893
  %34 = load float, float* %blue70, align 8, !dbg !9893
  %blue71 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %tint, i32 0, i32 0, !dbg !9894
  %35 = load i16, i16* %blue71, align 2, !dbg !9894
  %conv72 = zext i16 %35 to i32, !dbg !9895
  %conv73 = sitofp i32 %conv72 to float, !dbg !9895
  %mul74 = fmul float %34, %conv73, !dbg !9896
  %conv75 = fpext float %mul74 to double, !dbg !9897
  %div76 = fdiv double %conv75, 1.000000e+02, !dbg !9898
  %call77 = call zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %tint), !dbg !9899
  %conv78 = zext i16 %call77 to i32, !dbg !9899
  %conv79 = sitofp i32 %conv78 to double, !dbg !9899
  %sub80 = fsub double %div76, %conv79, !dbg !9900
  %conv81 = fptrunc double %sub80 to float, !dbg !9901
  %blue82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 7, !dbg !9902
  store float %conv81, float* %blue82, align 8, !dbg !9903
  store i32 1, i32* %status, align 4, !dbg !9904
  store i64 0, i64* %progress, align 8, !dbg !9905
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9906
  %37 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9907
  %call83 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %36, %struct._ExceptionInfo* %37), !dbg !9908
  store %struct._CacheView* %call83, %struct._CacheView** %image_view, align 8, !dbg !9909
  %38 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9910
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9911
  %call84 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %38, %struct._ExceptionInfo* %39), !dbg !9912
  store %struct._CacheView* %call84, %struct._CacheView** %tint_view, align 8, !dbg !9913
  store i64 0, i64* %y, align 8, !dbg !9914
  br label %for.cond, !dbg !9916

for.cond:                                         ; preds = %for.inc186, %if.end46
  %40 = load i64, i64* %y, align 8, !dbg !9917
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9919
  %rows85 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 8, !dbg !9920
  %42 = load i64, i64* %rows85, align 8, !dbg !9920
  %cmp86 = icmp slt i64 %40, %42, !dbg !9921
  br i1 %cmp86, label %for.body, label %for.end188, !dbg !9922

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9928, metadata !DIExpression()), !dbg !9929
  %43 = load i32, i32* %status, align 4, !dbg !9930
  %cmp88 = icmp eq i32 %43, 0, !dbg !9932
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !9933

if.then90:                                        ; preds = %for.body
  br label %for.inc186, !dbg !9934

if.end91:                                         ; preds = %for.body
  %44 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9935
  %45 = load i64, i64* %y, align 8, !dbg !9936
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9937
  %columns92 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 7, !dbg !9938
  %47 = load i64, i64* %columns92, align 8, !dbg !9938
  %48 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9939
  %call93 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %44, i64 0, i64 %45, i64 %47, i64 1, %struct._ExceptionInfo* %48), !dbg !9940
  store %struct._PixelPacket* %call93, %struct._PixelPacket** %p, align 8, !dbg !9941
  %49 = load %struct._CacheView*, %struct._CacheView** %tint_view, align 8, !dbg !9942
  %50 = load i64, i64* %y, align 8, !dbg !9943
  %51 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !9944
  %columns94 = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 7, !dbg !9945
  %52 = load i64, i64* %columns94, align 8, !dbg !9945
  %53 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9946
  %call95 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %49, i64 0, i64 %50, i64 %52, i64 1, %struct._ExceptionInfo* %53), !dbg !9947
  store %struct._PixelPacket* %call95, %struct._PixelPacket** %q, align 8, !dbg !9948
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9949
  %cmp96 = icmp eq %struct._PixelPacket* %54, null, !dbg !9951
  br i1 %cmp96, label %if.then100, label %lor.lhs.false, !dbg !9952

lor.lhs.false:                                    ; preds = %if.end91
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9953
  %cmp98 = icmp eq %struct._PixelPacket* %55, null, !dbg !9954
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !9955

if.then100:                                       ; preds = %lor.lhs.false, %if.end91
  store i32 0, i32* %status, align 4, !dbg !9956
  br label %for.inc186, !dbg !9958

if.end101:                                        ; preds = %lor.lhs.false
  store i64 0, i64* %x, align 8, !dbg !9959
  br label %for.cond102, !dbg !9961

for.cond102:                                      ; preds = %for.inc, %if.end101
  %56 = load i64, i64* %x, align 8, !dbg !9962
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9964
  %columns103 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 7, !dbg !9965
  %58 = load i64, i64* %columns103, align 8, !dbg !9965
  %cmp104 = icmp slt i64 %56, %58, !dbg !9966
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !9967

for.body106:                                      ; preds = %for.cond102
  call void @llvm.dbg.declare(metadata double* %weight, metadata !9968, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel107, metadata !9971, metadata !DIExpression()), !dbg !9972
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9973
  %red108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 2, !dbg !9973
  %60 = load i16, i16* %red108, align 2, !dbg !9973
  %conv109 = zext i16 %60 to i32, !dbg !9973
  %conv110 = sitofp i32 %conv109 to double, !dbg !9973
  %mul111 = fmul double 0x3EF0001000100010, %conv110, !dbg !9974
  %sub112 = fsub double %mul111, 5.000000e-01, !dbg !9975
  store double %sub112, double* %weight, align 8, !dbg !9976
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9977
  %red113 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !9977
  %62 = load i16, i16* %red113, align 2, !dbg !9977
  %conv114 = uitofp i16 %62 to float, !dbg !9978
  %conv115 = fpext float %conv114 to double, !dbg !9978
  %red116 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 5, !dbg !9979
  %63 = load float, float* %red116, align 8, !dbg !9979
  %conv117 = fpext float %63 to double, !dbg !9980
  %64 = load double, double* %weight, align 8, !dbg !9981
  %65 = load double, double* %weight, align 8, !dbg !9982
  %mul118 = fmul double %64, %65, !dbg !9983
  %mul119 = fmul double 4.000000e+00, %mul118, !dbg !9984
  %sub120 = fsub double 1.000000e+00, %mul119, !dbg !9985
  %mul121 = fmul double %conv117, %sub120, !dbg !9986
  %add = fadd double %conv115, %mul121, !dbg !9987
  %conv122 = fptrunc double %add to float, !dbg !9978
  %red123 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 5, !dbg !9988
  store float %conv122, float* %red123, align 8, !dbg !9989
  %red124 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 5, !dbg !9990
  %66 = load float, float* %red124, align 8, !dbg !9990
  %call125 = call zeroext i16 @ClampToQuantum(float %66), !dbg !9990
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9990
  %red126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 2, !dbg !9990
  store i16 %call125, i16* %red126, align 2, !dbg !9990
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9991
  %green127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 1, !dbg !9991
  %69 = load i16, i16* %green127, align 2, !dbg !9991
  %conv128 = zext i16 %69 to i32, !dbg !9991
  %conv129 = sitofp i32 %conv128 to double, !dbg !9991
  %mul130 = fmul double 0x3EF0001000100010, %conv129, !dbg !9992
  %sub131 = fsub double %mul130, 5.000000e-01, !dbg !9993
  store double %sub131, double* %weight, align 8, !dbg !9994
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !9995
  %green132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 1, !dbg !9995
  %71 = load i16, i16* %green132, align 2, !dbg !9995
  %conv133 = uitofp i16 %71 to float, !dbg !9996
  %conv134 = fpext float %conv133 to double, !dbg !9996
  %green135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 6, !dbg !9997
  %72 = load float, float* %green135, align 4, !dbg !9997
  %conv136 = fpext float %72 to double, !dbg !9998
  %73 = load double, double* %weight, align 8, !dbg !9999
  %74 = load double, double* %weight, align 8, !dbg !10000
  %mul137 = fmul double %73, %74, !dbg !10001
  %mul138 = fmul double 4.000000e+00, %mul137, !dbg !10002
  %sub139 = fsub double 1.000000e+00, %mul138, !dbg !10003
  %mul140 = fmul double %conv136, %sub139, !dbg !10004
  %add141 = fadd double %conv134, %mul140, !dbg !10005
  %conv142 = fptrunc double %add141 to float, !dbg !9996
  %green143 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 6, !dbg !10006
  store float %conv142, float* %green143, align 4, !dbg !10007
  %green144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 6, !dbg !10008
  %75 = load float, float* %green144, align 4, !dbg !10008
  %call145 = call zeroext i16 @ClampToQuantum(float %75), !dbg !10008
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10008
  %green146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 1, !dbg !10008
  store i16 %call145, i16* %green146, align 2, !dbg !10008
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10009
  %blue147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 0, !dbg !10009
  %78 = load i16, i16* %blue147, align 2, !dbg !10009
  %conv148 = zext i16 %78 to i32, !dbg !10009
  %conv149 = sitofp i32 %conv148 to double, !dbg !10009
  %mul150 = fmul double 0x3EF0001000100010, %conv149, !dbg !10010
  %sub151 = fsub double %mul150, 5.000000e-01, !dbg !10011
  store double %sub151, double* %weight, align 8, !dbg !10012
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10013
  %blue152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !10013
  %80 = load i16, i16* %blue152, align 2, !dbg !10013
  %conv153 = uitofp i16 %80 to float, !dbg !10014
  %conv154 = fpext float %conv153 to double, !dbg !10014
  %blue155 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %color_vector, i32 0, i32 7, !dbg !10015
  %81 = load float, float* %blue155, align 8, !dbg !10015
  %conv156 = fpext float %81 to double, !dbg !10016
  %82 = load double, double* %weight, align 8, !dbg !10017
  %83 = load double, double* %weight, align 8, !dbg !10018
  %mul157 = fmul double %82, %83, !dbg !10019
  %mul158 = fmul double 4.000000e+00, %mul157, !dbg !10020
  %sub159 = fsub double 1.000000e+00, %mul158, !dbg !10021
  %mul160 = fmul double %conv156, %sub159, !dbg !10022
  %add161 = fadd double %conv154, %mul160, !dbg !10023
  %conv162 = fptrunc double %add161 to float, !dbg !10014
  %blue163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 7, !dbg !10024
  store float %conv162, float* %blue163, align 8, !dbg !10025
  %blue164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel107, i32 0, i32 7, !dbg !10026
  %84 = load float, float* %blue164, align 8, !dbg !10026
  %call165 = call zeroext i16 @ClampToQuantum(float %84), !dbg !10026
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10026
  %blue166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 0, !dbg !10026
  store i16 %call165, i16* %blue166, align 2, !dbg !10026
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10027
  %opacity167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 3, !dbg !10027
  %87 = load i16, i16* %opacity167, align 2, !dbg !10027
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10027
  %opacity168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 3, !dbg !10027
  store i16 %87, i16* %opacity168, align 2, !dbg !10027
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10028
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !10028
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !10028
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10029
  %incdec.ptr169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !10029
  store %struct._PixelPacket* %incdec.ptr169, %struct._PixelPacket** %q, align 8, !dbg !10029
  br label %for.inc, !dbg !10030

for.inc:                                          ; preds = %for.body106
  %91 = load i64, i64* %x, align 8, !dbg !10031
  %inc = add nsw i64 %91, 1, !dbg !10031
  store i64 %inc, i64* %x, align 8, !dbg !10031
  br label %for.cond102, !dbg !10032, !llvm.loop !10033

for.end:                                          ; preds = %for.cond102
  %92 = load %struct._CacheView*, %struct._CacheView** %tint_view, align 8, !dbg !10035
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10037
  %call170 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %92, %struct._ExceptionInfo* %93), !dbg !10038
  %cmp171 = icmp eq i32 %call170, 0, !dbg !10039
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !10040

if.then173:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !10041
  br label %if.end174, !dbg !10042

if.end174:                                        ; preds = %if.then173, %for.end
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10043
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 47, !dbg !10045
  %95 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !10045
  %cmp175 = icmp ne i32 (i8*, i64, i64, i8*)* %95, null, !dbg !10046
  br i1 %cmp175, label %if.then177, label %if.end185, !dbg !10047

if.then177:                                       ; preds = %if.end174
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !10048, metadata !DIExpression()), !dbg !10050
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10051
  %97 = load i64, i64* %progress, align 8, !dbg !10052
  %inc178 = add nsw i64 %97, 1, !dbg !10052
  store i64 %inc178, i64* %progress, align 8, !dbg !10052
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10053
  %rows179 = getelementptr inbounds %struct._Image, %struct._Image* %98, i32 0, i32 8, !dbg !10054
  %99 = load i64, i64* %rows179, align 8, !dbg !10054
  %call180 = call i32 @SetImageProgress(%struct._Image* %96, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0), i64 %97, i64 %99), !dbg !10055
  store i32 %call180, i32* %proceed, align 4, !dbg !10056
  %100 = load i32, i32* %proceed, align 4, !dbg !10057
  %cmp181 = icmp eq i32 %100, 0, !dbg !10059
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !10060

if.then183:                                       ; preds = %if.then177
  store i32 0, i32* %status, align 4, !dbg !10061
  br label %if.end184, !dbg !10062

if.end184:                                        ; preds = %if.then183, %if.then177
  br label %if.end185, !dbg !10063

if.end185:                                        ; preds = %if.end184, %if.end174
  br label %for.inc186, !dbg !10064

for.inc186:                                       ; preds = %if.end185, %if.then100, %if.then90
  %101 = load i64, i64* %y, align 8, !dbg !10065
  %inc187 = add nsw i64 %101, 1, !dbg !10065
  store i64 %inc187, i64* %y, align 8, !dbg !10065
  br label %for.cond, !dbg !10066, !llvm.loop !10067

for.end188:                                       ; preds = %for.cond
  %102 = load %struct._CacheView*, %struct._CacheView** %tint_view, align 8, !dbg !10069
  %call189 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %102), !dbg !10070
  store %struct._CacheView* %call189, %struct._CacheView** %tint_view, align 8, !dbg !10071
  %103 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !10072
  %call190 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %103), !dbg !10073
  store %struct._CacheView* %call190, %struct._CacheView** %image_view, align 8, !dbg !10074
  %104 = load i32, i32* %status, align 4, !dbg !10075
  %cmp191 = icmp eq i32 %104, 0, !dbg !10077
  br i1 %cmp191, label %if.then193, label %if.end195, !dbg !10078

if.then193:                                       ; preds = %for.end188
  %105 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !10079
  %call194 = call %struct._Image* @DestroyImage(%struct._Image* %105), !dbg !10080
  store %struct._Image* %call194, %struct._Image** %tint_image, align 8, !dbg !10081
  br label %if.end195, !dbg !10082

if.end195:                                        ; preds = %if.then193, %for.end188
  %106 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !10083
  store %struct._Image* %106, %struct._Image** %retval, align 8, !dbg !10084
  br label %return, !dbg !10084

return:                                           ; preds = %if.end195, %if.then19, %if.then7, %if.then3
  %107 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !10085
  ret %struct._Image* %107, !dbg !10085
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @PixelPacketIntensity(%struct._PixelPacket* %pixel) #0 !dbg !10086 {
entry:
  %retval = alloca i16, align 2
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %intensity = alloca float, align 4
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !10091, metadata !DIExpression()), !dbg !10092
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10093
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !10095
  %1 = load i16, i16* %red, align 2, !dbg !10095
  %conv = zext i16 %1 to i32, !dbg !10093
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10096
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !10097
  %3 = load i16, i16* %green, align 2, !dbg !10097
  %conv1 = zext i16 %3 to i32, !dbg !10096
  %cmp = icmp eq i32 %conv, %conv1, !dbg !10098
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10099

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10100
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 1, !dbg !10101
  %5 = load i16, i16* %green3, align 2, !dbg !10101
  %conv4 = zext i16 %5 to i32, !dbg !10100
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10102
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !10103
  %7 = load i16, i16* %blue, align 2, !dbg !10103
  %conv5 = zext i16 %7 to i32, !dbg !10102
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !10104
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10105

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10106
  %red8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 2, !dbg !10107
  %9 = load i16, i16* %red8, align 2, !dbg !10107
  store i16 %9, i16* %retval, align 2, !dbg !10108
  br label %return, !dbg !10108

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10109
  %red9 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !10110
  %11 = load i16, i16* %red9, align 2, !dbg !10110
  %conv10 = zext i16 %11 to i32, !dbg !10109
  %conv11 = sitofp i32 %conv10 to double, !dbg !10109
  %mul = fmul double 2.126560e-01, %conv11, !dbg !10111
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10112
  %green12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 1, !dbg !10113
  %13 = load i16, i16* %green12, align 2, !dbg !10113
  %conv13 = zext i16 %13 to i32, !dbg !10112
  %conv14 = sitofp i32 %conv13 to double, !dbg !10112
  %mul15 = fmul double 0x3FE6E29307AF20EA, %conv14, !dbg !10114
  %add = fadd double %mul, %mul15, !dbg !10115
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10116
  %blue16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 0, !dbg !10117
  %15 = load i16, i16* %blue16, align 2, !dbg !10117
  %conv17 = zext i16 %15 to i32, !dbg !10116
  %conv18 = sitofp i32 %conv17 to double, !dbg !10116
  %mul19 = fmul double 7.218600e-02, %conv18, !dbg !10118
  %add20 = fadd double %add, %mul19, !dbg !10119
  %conv21 = fptrunc double %add20 to float, !dbg !10120
  store float %conv21, float* %intensity, align 4, !dbg !10121
  %16 = load float, float* %intensity, align 4, !dbg !10122
  %call = call zeroext i16 @ClampToQuantum(float %16), !dbg !10123
  store i16 %call, i16* %retval, align 2, !dbg !10124
  br label %return, !dbg !10124

return:                                           ; preds = %if.end, %if.then
  %17 = load i16, i16* %retval, align 2, !dbg !10125
  ret i16 %17, !dbg !10125
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @VignetteImage(%struct._Image* %image, double %radius, double %sigma, i64 %x, i64 %y, %struct._ExceptionInfo* %exception) #0 !dbg !10126 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %ellipse = alloca [4096 x i8], align 16
  %draw_info = alloca %struct._DrawInfo*, align 8
  %blur_image = alloca %struct._Image*, align 8
  %canvas_image = alloca %struct._Image*, align 8
  %oval_image = alloca %struct._Image*, align 8
  %vignette_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10127, metadata !DIExpression()), !dbg !10128
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !10131, metadata !DIExpression()), !dbg !10132
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10133, metadata !DIExpression()), !dbg !10134
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !10135, metadata !DIExpression()), !dbg !10136
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata [4096 x i8]* %ellipse, metadata !10139, metadata !DIExpression()), !dbg !10140
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !10141, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !10143, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.declare(metadata %struct._Image** %canvas_image, metadata !10145, metadata !DIExpression()), !dbg !10146
  call void @llvm.dbg.declare(metadata %struct._Image** %oval_image, metadata !10147, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.declare(metadata %struct._Image** %vignette_image, metadata !10149, metadata !DIExpression()), !dbg !10150
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10151
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !10153
  %1 = load i32, i32* %debug, align 8, !dbg !10153
  %cmp = icmp ne i32 %1, 0, !dbg !10154
  br i1 %cmp, label %if.then, label %if.end, !dbg !10155

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10156
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !10157
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !10156
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5405, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !10158
  br label %if.end, !dbg !10159

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10160
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10161
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !10162
  store %struct._Image* %call1, %struct._Image** %canvas_image, align 8, !dbg !10163
  %5 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10164
  %cmp2 = icmp eq %struct._Image* %5, null, !dbg !10166
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10167

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !10168
  br label %return, !dbg !10168

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10169
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 1), !dbg !10171
  %cmp6 = icmp eq i32 %call5, 0, !dbg !10172
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !10173

if.then7:                                         ; preds = %if.end4
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10174
  %8 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10176
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !10177
  call void @InheritException(%struct._ExceptionInfo* %7, %struct._ExceptionInfo* %exception8), !dbg !10178
  %9 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10179
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %9), !dbg !10180
  store %struct._Image* %call9, %struct._Image** %canvas_image, align 8, !dbg !10181
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !10182
  br label %return, !dbg !10182

if.end10:                                         ; preds = %if.end4
  %10 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10183
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 6, !dbg !10184
  store i32 1, i32* %matte, align 8, !dbg !10185
  %11 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10186
  %12 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10187
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 7, !dbg !10188
  %13 = load i64, i64* %columns, align 8, !dbg !10188
  %14 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10189
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 8, !dbg !10190
  %15 = load i64, i64* %rows, align 8, !dbg !10190
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10191
  %call11 = call %struct._Image* @CloneImage(%struct._Image* %11, i64 %13, i64 %15, i32 1, %struct._ExceptionInfo* %16), !dbg !10192
  store %struct._Image* %call11, %struct._Image** %oval_image, align 8, !dbg !10193
  %17 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10194
  %cmp12 = icmp eq %struct._Image* %17, null, !dbg !10196
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !10197

if.then13:                                        ; preds = %if.end10
  %18 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10198
  %call14 = call %struct._Image* @DestroyImage(%struct._Image* %18), !dbg !10200
  store %struct._Image* %call14, %struct._Image** %canvas_image, align 8, !dbg !10201
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !10202
  br label %return, !dbg !10202

if.end15:                                         ; preds = %if.end10
  %19 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10203
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 12, !dbg !10204
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10205
  %call16 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), %struct._PixelPacket* %background_color, %struct._ExceptionInfo* %20), !dbg !10206
  %21 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10207
  %call17 = call i32 @SetImageBackgroundColor(%struct._Image* %21), !dbg !10208
  %call18 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* null), !dbg !10209
  store %struct._DrawInfo* %call18, %struct._DrawInfo** %draw_info, align 8, !dbg !10210
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !10211
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 5, !dbg !10212
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10213
  %call19 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), %struct._PixelPacket* %fill, %struct._ExceptionInfo* %23), !dbg !10214
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !10215
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 6, !dbg !10216
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10217
  %call20 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), %struct._PixelPacket* %stroke, %struct._ExceptionInfo* %25), !dbg !10218
  %arraydecay21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %ellipse, i64 0, i64 0, !dbg !10219
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10220
  %columns22 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !10221
  %27 = load i64, i64* %columns22, align 8, !dbg !10221
  %conv = uitofp i64 %27 to double, !dbg !10220
  %div = fdiv double %conv, 2.000000e+00, !dbg !10222
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10223
  %rows23 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 8, !dbg !10224
  %29 = load i64, i64* %rows23, align 8, !dbg !10224
  %conv24 = uitofp i64 %29 to double, !dbg !10223
  %div25 = fdiv double %conv24, 2.000000e+00, !dbg !10225
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10226
  %columns26 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !10227
  %31 = load i64, i64* %columns26, align 8, !dbg !10227
  %conv27 = uitofp i64 %31 to double, !dbg !10226
  %div28 = fdiv double %conv27, 2.000000e+00, !dbg !10228
  %32 = load i64, i64* %x.addr, align 8, !dbg !10229
  %conv29 = sitofp i64 %32 to double, !dbg !10229
  %sub = fsub double %div28, %conv29, !dbg !10230
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10231
  %rows30 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 8, !dbg !10232
  %34 = load i64, i64* %rows30, align 8, !dbg !10232
  %conv31 = uitofp i64 %34 to double, !dbg !10231
  %div32 = fdiv double %conv31, 2.000000e+00, !dbg !10233
  %35 = load i64, i64* %y.addr, align 8, !dbg !10234
  %conv33 = sitofp i64 %35 to double, !dbg !10234
  %sub34 = fsub double %div32, %conv33, !dbg !10235
  %call35 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay21, i64 4096, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i64 0, i64 0), double %div, double %div25, double %sub, double %sub34), !dbg !10236
  %arraydecay36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %ellipse, i64 0, i64 0, !dbg !10237
  %call37 = call i8* @AcquireString(i8* %arraydecay36), !dbg !10238
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !10239
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %36, i32 0, i32 0, !dbg !10240
  store i8* %call37, i8** %primitive, align 8, !dbg !10241
  %37 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10242
  %38 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !10243
  %call38 = call i32 @DrawImage(%struct._Image* %37, %struct._DrawInfo* %38), !dbg !10244
  %39 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !10245
  %call39 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %39), !dbg !10246
  store %struct._DrawInfo* %call39, %struct._DrawInfo** %draw_info, align 8, !dbg !10247
  %40 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10248
  %41 = load double, double* %radius.addr, align 8, !dbg !10249
  %42 = load double, double* %sigma.addr, align 8, !dbg !10250
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10251
  %call40 = call %struct._Image* @BlurImage(%struct._Image* %40, double %41, double %42, %struct._ExceptionInfo* %43), !dbg !10252
  store %struct._Image* %call40, %struct._Image** %blur_image, align 8, !dbg !10253
  %44 = load %struct._Image*, %struct._Image** %oval_image, align 8, !dbg !10254
  %call41 = call %struct._Image* @DestroyImage(%struct._Image* %44), !dbg !10255
  store %struct._Image* %call41, %struct._Image** %oval_image, align 8, !dbg !10256
  %45 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10257
  %cmp42 = icmp eq %struct._Image* %45, null, !dbg !10259
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !10260

if.then44:                                        ; preds = %if.end15
  %46 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10261
  %call45 = call %struct._Image* @DestroyImage(%struct._Image* %46), !dbg !10263
  store %struct._Image* %call45, %struct._Image** %canvas_image, align 8, !dbg !10264
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !10265
  br label %return, !dbg !10265

if.end46:                                         ; preds = %if.end15
  %47 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10266
  %matte47 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 6, !dbg !10267
  store i32 0, i32* %matte47, align 8, !dbg !10268
  %48 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10269
  %49 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10270
  %call48 = call i32 @CompositeImage(%struct._Image* %48, i32 17, %struct._Image* %49, i64 0, i64 0), !dbg !10271
  %50 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10272
  %call49 = call %struct._Image* @DestroyImage(%struct._Image* %50), !dbg !10273
  store %struct._Image* %call49, %struct._Image** %blur_image, align 8, !dbg !10274
  %51 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10275
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10276
  %call50 = call %struct._Image* @MergeImageLayers(%struct._Image* %51, i32 14, %struct._ExceptionInfo* %52), !dbg !10277
  store %struct._Image* %call50, %struct._Image** %vignette_image, align 8, !dbg !10278
  %53 = load %struct._Image*, %struct._Image** %canvas_image, align 8, !dbg !10279
  %call51 = call %struct._Image* @DestroyImage(%struct._Image* %53), !dbg !10280
  store %struct._Image* %call51, %struct._Image** %canvas_image, align 8, !dbg !10281
  %54 = load %struct._Image*, %struct._Image** %vignette_image, align 8, !dbg !10282
  %cmp52 = icmp ne %struct._Image* %54, null, !dbg !10284
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !10285

if.then54:                                        ; preds = %if.end46
  %55 = load %struct._Image*, %struct._Image** %vignette_image, align 8, !dbg !10286
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10287
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 1, !dbg !10288
  %57 = load i32, i32* %colorspace, align 4, !dbg !10288
  %call55 = call i32 @TransformImageColorspace(%struct._Image* %55, i32 %57), !dbg !10289
  br label %if.end56, !dbg !10290

if.end56:                                         ; preds = %if.then54, %if.end46
  %58 = load %struct._Image*, %struct._Image** %vignette_image, align 8, !dbg !10291
  store %struct._Image* %58, %struct._Image** %retval, align 8, !dbg !10292
  br label %return, !dbg !10292

return:                                           ; preds = %if.end56, %if.then44, %if.then13, %if.then7, %if.then3
  %59 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !10293
  ret %struct._Image* %59, !dbg !10293
}

declare dso_local i32 @DrawImage(%struct._Image*, %struct._DrawInfo*) #3

declare dso_local %struct._Image* @MergeImageLayers(%struct._Image*, i32, %struct._ExceptionInfo*) #3

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

declare dso_local i32 @SetCacheViewVirtualPixelMethod(%struct._CacheView*, i32) #3

declare dso_local double @InterpretLocaleValue(i8*, i8**) #3

declare dso_local i64 @GetMagickResourceLimit(i32) #3

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #6

; Function Attrs: noinline nounwind uwtable
define internal float @AbsolutePixelValue(float %x) #0 !dbg !10294 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !10297, metadata !DIExpression()), !dbg !10298
  %0 = load float, float* %x.addr, align 4, !dbg !10299
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !10300
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10299

cond.true:                                        ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !10301
  %fneg = fneg float %1, !dbg !10302
  br label %cond.end, !dbg !10299

cond.false:                                       ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !10303
  br label %cond.end, !dbg !10299

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %2, %cond.false ], !dbg !10299
  ret float %cond, !dbg !10304
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #4

; Function Attrs: noinline nounwind uwtable
define internal i8* @FxOperatorPrecedence(i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !689 {
entry:
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %precedence = alloca i32, align 4
  %target = alloca i32, align 4
  %subexpression = alloca i8*, align 8
  %c = alloca i32, align 4
  %level = alloca i64, align 8
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !10305, metadata !DIExpression()), !dbg !10306
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.declare(metadata i32* %precedence, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.declare(metadata i32* %target, metadata !10312, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata i8** %subexpression, metadata !10314, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10316, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.declare(metadata i64* %level, metadata !10318, metadata !DIExpression()), !dbg !10319
  store i32 0, i32* %c, align 4, !dbg !10320
  store i64 0, i64* %level, align 8, !dbg !10321
  store i8* null, i8** %subexpression, align 8, !dbg !10322
  store i32 1, i32* %target, align 4, !dbg !10323
  br label %while.cond, !dbg !10324

while.cond:                                       ; preds = %if.end188, %if.then, %entry
  %0 = load i8*, i8** %expression.addr, align 8, !dbg !10325
  %1 = load i8, i8* %0, align 1, !dbg !10326
  %conv = sext i8 %1 to i32, !dbg !10326
  %cmp = icmp ne i32 %conv, 0, !dbg !10327
  br i1 %cmp, label %while.body, label %while.end191, !dbg !10324

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %precedence, align 4, !dbg !10328
  %call = call i16** @__ctype_b_loc() #11, !dbg !10330
  %2 = load i16*, i16** %call, align 8, !dbg !10330
  %3 = load i8*, i8** %expression.addr, align 8, !dbg !10330
  %4 = load i8, i8* %3, align 1, !dbg !10330
  %conv2 = zext i8 %4 to i32, !dbg !10330
  %idxprom = sext i32 %conv2 to i64, !dbg !10330
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !10330
  %5 = load i16, i16* %arrayidx, align 2, !dbg !10330
  %conv3 = zext i16 %5 to i32, !dbg !10330
  %and = and i32 %conv3, 8192, !dbg !10330
  %cmp4 = icmp ne i32 %and, 0, !dbg !10332
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !10333

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i32, i32* %c, align 4, !dbg !10334
  %cmp6 = icmp eq i32 %6, 64, !dbg !10335
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10336

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %7 = load i8*, i8** %expression.addr, align 8, !dbg !10337
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10337
  store i8* %incdec.ptr, i8** %expression.addr, align 8, !dbg !10337
  br label %while.cond, !dbg !10339, !llvm.loop !10340

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i8*, i8** %expression.addr, align 8, !dbg !10342
  %9 = load i8, i8* %8, align 1, !dbg !10343
  %conv8 = sext i8 %9 to i32, !dbg !10343
  switch i32 %conv8, label %sw.default [
    i32 65, label %sw.bb
    i32 97, label %sw.bb
    i32 74, label %sw.bb32
    i32 106, label %sw.bb32
    i32 35, label %sw.bb43
  ], !dbg !10344

sw.bb:                                            ; preds = %if.end, %if.end
  %10 = load i8*, i8** %expression.addr, align 8, !dbg !10345
  %call9 = call i32 @LocaleNCompare(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i64 5), !dbg !10349
  %cmp10 = icmp eq i32 %call9, 0, !dbg !10350
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10351

if.then12:                                        ; preds = %sw.bb
  %11 = load i8*, i8** %expression.addr, align 8, !dbg !10352
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 5, !dbg !10352
  store i8* %add.ptr, i8** %expression.addr, align 8, !dbg !10352
  br label %sw.epilog, !dbg !10354

if.end13:                                         ; preds = %sw.bb
  %12 = load i8*, i8** %expression.addr, align 8, !dbg !10355
  %call14 = call i32 @LocaleNCompare(i8* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i64 5), !dbg !10357
  %cmp15 = icmp eq i32 %call14, 0, !dbg !10358
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !10359

if.then17:                                        ; preds = %if.end13
  %13 = load i8*, i8** %expression.addr, align 8, !dbg !10360
  %add.ptr18 = getelementptr inbounds i8, i8* %13, i64 5, !dbg !10360
  store i8* %add.ptr18, i8** %expression.addr, align 8, !dbg !10360
  br label %sw.epilog, !dbg !10362

if.end19:                                         ; preds = %if.end13
  %14 = load i8*, i8** %expression.addr, align 8, !dbg !10363
  %call20 = call i32 @LocaleNCompare(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0), i64 5), !dbg !10365
  %cmp21 = icmp eq i32 %call20, 0, !dbg !10366
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !10367

if.then23:                                        ; preds = %if.end19
  %15 = load i8*, i8** %expression.addr, align 8, !dbg !10368
  %add.ptr24 = getelementptr inbounds i8, i8* %15, i64 5, !dbg !10368
  store i8* %add.ptr24, i8** %expression.addr, align 8, !dbg !10368
  br label %sw.epilog, !dbg !10370

if.end25:                                         ; preds = %if.end19
  %16 = load i8*, i8** %expression.addr, align 8, !dbg !10371
  %call26 = call i32 @LocaleNCompare(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 5), !dbg !10373
  %cmp27 = icmp eq i32 %call26, 0, !dbg !10374
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !10375

if.then29:                                        ; preds = %if.end25
  %17 = load i8*, i8** %expression.addr, align 8, !dbg !10376
  %add.ptr30 = getelementptr inbounds i8, i8* %17, i64 5, !dbg !10376
  store i8* %add.ptr30, i8** %expression.addr, align 8, !dbg !10376
  br label %sw.epilog, !dbg !10378

if.end31:                                         ; preds = %if.end25
  br label %sw.epilog, !dbg !10379

sw.bb32:                                          ; preds = %if.end, %if.end
  %18 = load i8*, i8** %expression.addr, align 8, !dbg !10380
  %call33 = call i32 @LocaleNCompare(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i64 2), !dbg !10383
  %cmp34 = icmp eq i32 %call33, 0, !dbg !10384
  br i1 %cmp34, label %if.then40, label %lor.lhs.false36, !dbg !10385

lor.lhs.false36:                                  ; preds = %sw.bb32
  %19 = load i8*, i8** %expression.addr, align 8, !dbg !10386
  %call37 = call i32 @LocaleNCompare(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i64 0, i64 0), i64 2), !dbg !10387
  %cmp38 = icmp eq i32 %call37, 0, !dbg !10388
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !10389

if.then40:                                        ; preds = %lor.lhs.false36, %sw.bb32
  %20 = load i8*, i8** %expression.addr, align 8, !dbg !10390
  %add.ptr41 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !10390
  store i8* %add.ptr41, i8** %expression.addr, align 8, !dbg !10390
  br label %sw.epilog, !dbg !10392

if.end42:                                         ; preds = %lor.lhs.false36
  br label %sw.epilog, !dbg !10393

sw.bb43:                                          ; preds = %if.end
  br label %while.cond44, !dbg !10394

while.cond44:                                     ; preds = %while.body54, %sw.bb43
  %call45 = call i16** @__ctype_b_loc() #11, !dbg !10396
  %21 = load i16*, i16** %call45, align 8, !dbg !10396
  %22 = load i8*, i8** %expression.addr, align 8, !dbg !10396
  %add.ptr46 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !10396
  %23 = load i8, i8* %add.ptr46, align 1, !dbg !10396
  %conv47 = zext i8 %23 to i32, !dbg !10396
  %idxprom48 = sext i32 %conv47 to i64, !dbg !10396
  %arrayidx49 = getelementptr inbounds i16, i16* %21, i64 %idxprom48, !dbg !10396
  %24 = load i16, i16* %arrayidx49, align 2, !dbg !10396
  %conv50 = zext i16 %24 to i32, !dbg !10396
  %and51 = and i32 %conv50, 4096, !dbg !10396
  %cmp52 = icmp ne i32 %and51, 0, !dbg !10397
  br i1 %cmp52, label %while.body54, label %while.end, !dbg !10394

while.body54:                                     ; preds = %while.cond44
  %25 = load i8*, i8** %expression.addr, align 8, !dbg !10398
  %incdec.ptr55 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !10398
  store i8* %incdec.ptr55, i8** %expression.addr, align 8, !dbg !10398
  br label %while.cond44, !dbg !10394, !llvm.loop !10399

while.end:                                        ; preds = %while.cond44
  br label %sw.epilog, !dbg !10400

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !10401

sw.epilog:                                        ; preds = %sw.default, %while.end, %if.end42, %if.then40, %if.end31, %if.then29, %if.then23, %if.then17, %if.then12
  %26 = load i32, i32* %c, align 4, !dbg !10402
  %cmp56 = icmp eq i32 %26, 123, !dbg !10404
  br i1 %cmp56, label %if.then61, label %lor.lhs.false58, !dbg !10405

lor.lhs.false58:                                  ; preds = %sw.epilog
  %27 = load i32, i32* %c, align 4, !dbg !10406
  %cmp59 = icmp eq i32 %27, 91, !dbg !10407
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !10408

if.then61:                                        ; preds = %lor.lhs.false58, %sw.epilog
  %28 = load i64, i64* %level, align 8, !dbg !10409
  %inc = add i64 %28, 1, !dbg !10409
  store i64 %inc, i64* %level, align 8, !dbg !10409
  br label %if.end69, !dbg !10410

if.else:                                          ; preds = %lor.lhs.false58
  %29 = load i32, i32* %c, align 4, !dbg !10411
  %cmp62 = icmp eq i32 %29, 125, !dbg !10413
  br i1 %cmp62, label %if.then67, label %lor.lhs.false64, !dbg !10414

lor.lhs.false64:                                  ; preds = %if.else
  %30 = load i32, i32* %c, align 4, !dbg !10415
  %cmp65 = icmp eq i32 %30, 93, !dbg !10416
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !10417

if.then67:                                        ; preds = %lor.lhs.false64, %if.else
  %31 = load i64, i64* %level, align 8, !dbg !10418
  %dec = add i64 %31, -1, !dbg !10418
  store i64 %dec, i64* %level, align 8, !dbg !10418
  br label %if.end68, !dbg !10419

if.end68:                                         ; preds = %if.then67, %lor.lhs.false64
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then61
  %32 = load i64, i64* %level, align 8, !dbg !10420
  %cmp70 = icmp eq i64 %32, 0, !dbg !10422
  br i1 %cmp70, label %if.then72, label %if.end162, !dbg !10423

if.then72:                                        ; preds = %if.end69
  %33 = load i8*, i8** %expression.addr, align 8, !dbg !10424
  %34 = load i8, i8* %33, align 1, !dbg !10425
  %conv73 = zext i8 %34 to i32, !dbg !10426
  switch i32 %conv73, label %sw.default76 [
    i32 126, label %sw.bb74
    i32 33, label %sw.bb74
    i32 94, label %sw.bb75
    i32 64, label %sw.bb75
    i32 42, label %sw.bb134
    i32 47, label %sw.bb134
    i32 37, label %sw.bb134
    i32 43, label %sw.bb135
    i32 45, label %sw.bb135
    i32 245, label %sw.bb149
    i32 246, label %sw.bb149
    i32 60, label %sw.bb150
    i32 247, label %sw.bb150
    i32 248, label %sw.bb150
    i32 62, label %sw.bb150
    i32 249, label %sw.bb151
    i32 250, label %sw.bb151
    i32 38, label %sw.bb152
    i32 124, label %sw.bb153
    i32 251, label %sw.bb154
    i32 252, label %sw.bb155
    i32 253, label %sw.bb156
    i32 58, label %sw.bb157
    i32 63, label %sw.bb157
    i32 61, label %sw.bb158
    i32 44, label %sw.bb159
    i32 59, label %sw.bb160
  ], !dbg !10427

sw.bb74:                                          ; preds = %if.then72, %if.then72
  store i32 2, i32* %precedence, align 4, !dbg !10428
  br label %sw.epilog161, !dbg !10431

sw.bb75:                                          ; preds = %if.then72, %if.then72
  store i32 3, i32* %precedence, align 4, !dbg !10432
  br label %sw.epilog161, !dbg !10434

sw.default76:                                     ; preds = %if.then72
  %35 = load i32, i32* %c, align 4, !dbg !10435
  %cmp77 = icmp ne i32 %35, 0, !dbg !10438
  br i1 %cmp77, label %land.lhs.true, label %if.end133, !dbg !10439

land.lhs.true:                                    ; preds = %sw.default76
  %call79 = call i16** @__ctype_b_loc() #11, !dbg !10440
  %36 = load i16*, i16** %call79, align 8, !dbg !10440
  %37 = load i32, i32* %c, align 4, !dbg !10440
  %conv80 = trunc i32 %37 to i8, !dbg !10440
  %conv81 = zext i8 %conv80 to i32, !dbg !10440
  %idxprom82 = sext i32 %conv81 to i64, !dbg !10440
  %arrayidx83 = getelementptr inbounds i16, i16* %36, i64 %idxprom82, !dbg !10440
  %38 = load i16, i16* %arrayidx83, align 2, !dbg !10440
  %conv84 = zext i16 %38 to i32, !dbg !10440
  %and85 = and i32 %conv84, 2048, !dbg !10440
  %cmp86 = icmp ne i32 %and85, 0, !dbg !10441
  br i1 %cmp86, label %land.lhs.true94, label %lor.lhs.false88, !dbg !10442

lor.lhs.false88:                                  ; preds = %land.lhs.true
  %39 = load i32, i32* %c, align 4, !dbg !10443
  %conv89 = trunc i32 %39 to i8, !dbg !10444
  %conv90 = zext i8 %conv89 to i32, !dbg !10445
  %call91 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i64 0, i64 0), i32 %conv90) #15, !dbg !10446
  %cmp92 = icmp ne i8* %call91, null, !dbg !10447
  br i1 %cmp92, label %land.lhs.true94, label %if.end133, !dbg !10448

land.lhs.true94:                                  ; preds = %lor.lhs.false88, %land.lhs.true
  %call95 = call i16** @__ctype_b_loc() #11, !dbg !10449
  %40 = load i16*, i16** %call95, align 8, !dbg !10449
  %41 = load i8*, i8** %expression.addr, align 8, !dbg !10449
  %42 = load i8, i8* %41, align 1, !dbg !10449
  %conv96 = zext i8 %42 to i32, !dbg !10449
  %idxprom97 = sext i32 %conv96 to i64, !dbg !10449
  %arrayidx98 = getelementptr inbounds i16, i16* %40, i64 %idxprom97, !dbg !10449
  %43 = load i16, i16* %arrayidx98, align 2, !dbg !10449
  %conv99 = zext i16 %43 to i32, !dbg !10449
  %and100 = and i32 %conv99, 512, !dbg !10449
  %cmp101 = icmp ne i32 %and100, 0, !dbg !10450
  br i1 %cmp101, label %land.lhs.true127, label %lor.lhs.false103, !dbg !10451

lor.lhs.false103:                                 ; preds = %land.lhs.true94
  %44 = load i8*, i8** %expression.addr, align 8, !dbg !10452
  %45 = load i8, i8* %44, align 1, !dbg !10453
  %conv104 = zext i8 %45 to i32, !dbg !10454
  %call105 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 %conv104) #15, !dbg !10455
  %cmp106 = icmp ne i8* %call105, null, !dbg !10456
  br i1 %cmp106, label %land.lhs.true127, label %lor.lhs.false108, !dbg !10457

lor.lhs.false108:                                 ; preds = %lor.lhs.false103
  %call109 = call i16** @__ctype_b_loc() #11, !dbg !10458
  %46 = load i16*, i16** %call109, align 8, !dbg !10458
  %47 = load i32, i32* %c, align 4, !dbg !10458
  %conv110 = trunc i32 %47 to i8, !dbg !10458
  %conv111 = zext i8 %conv110 to i32, !dbg !10458
  %idxprom112 = sext i32 %conv111 to i64, !dbg !10458
  %arrayidx113 = getelementptr inbounds i16, i16* %46, i64 %idxprom112, !dbg !10458
  %48 = load i16, i16* %arrayidx113, align 2, !dbg !10458
  %conv114 = zext i16 %48 to i32, !dbg !10458
  %and115 = and i32 %conv114, 2048, !dbg !10458
  %cmp116 = icmp eq i32 %and115, 0, !dbg !10459
  br i1 %cmp116, label %land.lhs.true118, label %if.end133, !dbg !10460

land.lhs.true118:                                 ; preds = %lor.lhs.false108
  %call119 = call i16** @__ctype_b_loc() #11, !dbg !10461
  %49 = load i16*, i16** %call119, align 8, !dbg !10461
  %50 = load i8*, i8** %expression.addr, align 8, !dbg !10461
  %51 = load i8, i8* %50, align 1, !dbg !10461
  %conv120 = zext i8 %51 to i32, !dbg !10461
  %idxprom121 = sext i32 %conv120 to i64, !dbg !10461
  %arrayidx122 = getelementptr inbounds i16, i16* %49, i64 %idxprom121, !dbg !10461
  %52 = load i16, i16* %arrayidx122, align 2, !dbg !10461
  %conv123 = zext i16 %52 to i32, !dbg !10461
  %and124 = and i32 %conv123, 2048, !dbg !10461
  %cmp125 = icmp ne i32 %and124, 0, !dbg !10462
  br i1 %cmp125, label %land.lhs.true127, label %if.end133, !dbg !10463

land.lhs.true127:                                 ; preds = %land.lhs.true118, %lor.lhs.false103, %land.lhs.true94
  %53 = load i8*, i8** %expression.addr, align 8, !dbg !10464
  %54 = load i8, i8* %53, align 1, !dbg !10465
  %conv128 = zext i8 %54 to i32, !dbg !10466
  %call129 = call i8* @strchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i64 0, i64 0), i32 %conv128) #15, !dbg !10467
  %cmp130 = icmp eq i8* %call129, null, !dbg !10468
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !10469

if.then132:                                       ; preds = %land.lhs.true127
  store i32 5, i32* %precedence, align 4, !dbg !10470
  br label %if.end133, !dbg !10471

if.end133:                                        ; preds = %if.then132, %land.lhs.true127, %land.lhs.true118, %lor.lhs.false108, %lor.lhs.false88, %sw.default76
  br label %sw.epilog161, !dbg !10472

sw.bb134:                                         ; preds = %if.then72, %if.then72, %if.then72
  store i32 5, i32* %precedence, align 4, !dbg !10473
  br label %sw.epilog161, !dbg !10475

sw.bb135:                                         ; preds = %if.then72, %if.then72
  %55 = load i32, i32* %c, align 4, !dbg !10476
  %call136 = call i8* @strchr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i64 0, i64 0), i32 %55) #15, !dbg !10479
  %cmp137 = icmp eq i8* %call136, null, !dbg !10480
  br i1 %cmp137, label %if.then147, label %lor.lhs.false139, !dbg !10481

lor.lhs.false139:                                 ; preds = %sw.bb135
  %call140 = call i16** @__ctype_b_loc() #11, !dbg !10482
  %56 = load i16*, i16** %call140, align 8, !dbg !10482
  %57 = load i32, i32* %c, align 4, !dbg !10482
  %idxprom141 = sext i32 %57 to i64, !dbg !10482
  %arrayidx142 = getelementptr inbounds i16, i16* %56, i64 %idxprom141, !dbg !10482
  %58 = load i16, i16* %arrayidx142, align 2, !dbg !10482
  %conv143 = zext i16 %58 to i32, !dbg !10482
  %and144 = and i32 %conv143, 1024, !dbg !10482
  %cmp145 = icmp ne i32 %and144, 0, !dbg !10483
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !10484

if.then147:                                       ; preds = %lor.lhs.false139, %sw.bb135
  store i32 6, i32* %precedence, align 4, !dbg !10485
  br label %if.end148, !dbg !10486

if.end148:                                        ; preds = %if.then147, %lor.lhs.false139
  br label %sw.epilog161, !dbg !10487

sw.bb149:                                         ; preds = %if.then72, %if.then72
  store i32 7, i32* %precedence, align 4, !dbg !10488
  br label %sw.epilog161, !dbg !10490

sw.bb150:                                         ; preds = %if.then72, %if.then72, %if.then72, %if.then72
  store i32 8, i32* %precedence, align 4, !dbg !10491
  br label %sw.epilog161, !dbg !10493

sw.bb151:                                         ; preds = %if.then72, %if.then72
  store i32 9, i32* %precedence, align 4, !dbg !10494
  br label %sw.epilog161, !dbg !10496

sw.bb152:                                         ; preds = %if.then72
  store i32 10, i32* %precedence, align 4, !dbg !10497
  br label %sw.epilog161, !dbg !10499

sw.bb153:                                         ; preds = %if.then72
  store i32 11, i32* %precedence, align 4, !dbg !10500
  br label %sw.epilog161, !dbg !10502

sw.bb154:                                         ; preds = %if.then72
  store i32 12, i32* %precedence, align 4, !dbg !10503
  br label %sw.epilog161, !dbg !10505

sw.bb155:                                         ; preds = %if.then72
  store i32 13, i32* %precedence, align 4, !dbg !10506
  br label %sw.epilog161, !dbg !10508

sw.bb156:                                         ; preds = %if.then72
  store i32 4, i32* %precedence, align 4, !dbg !10509
  br label %sw.epilog161, !dbg !10511

sw.bb157:                                         ; preds = %if.then72, %if.then72
  store i32 14, i32* %precedence, align 4, !dbg !10512
  br label %sw.epilog161, !dbg !10514

sw.bb158:                                         ; preds = %if.then72
  store i32 15, i32* %precedence, align 4, !dbg !10515
  br label %sw.epilog161, !dbg !10517

sw.bb159:                                         ; preds = %if.then72
  store i32 16, i32* %precedence, align 4, !dbg !10518
  br label %sw.epilog161, !dbg !10520

sw.bb160:                                         ; preds = %if.then72
  store i32 17, i32* %precedence, align 4, !dbg !10521
  br label %sw.epilog161, !dbg !10523

sw.epilog161:                                     ; preds = %sw.bb160, %sw.bb159, %sw.bb158, %sw.bb157, %sw.bb156, %sw.bb155, %sw.bb154, %sw.bb153, %sw.bb152, %sw.bb151, %sw.bb150, %sw.bb149, %if.end148, %sw.bb134, %if.end133, %sw.bb75, %sw.bb74
  br label %if.end162, !dbg !10524

if.end162:                                        ; preds = %sw.epilog161, %if.end69
  %59 = load i32, i32* %precedence, align 4, !dbg !10525
  %cmp163 = icmp eq i32 %59, 2, !dbg !10527
  br i1 %cmp163, label %if.then171, label %lor.lhs.false165, !dbg !10528

lor.lhs.false165:                                 ; preds = %if.end162
  %60 = load i32, i32* %precedence, align 4, !dbg !10529
  %cmp166 = icmp eq i32 %60, 14, !dbg !10530
  br i1 %cmp166, label %if.then171, label %lor.lhs.false168, !dbg !10531

lor.lhs.false168:                                 ; preds = %lor.lhs.false165
  %61 = load i32, i32* %precedence, align 4, !dbg !10532
  %cmp169 = icmp eq i32 %61, 15, !dbg !10533
  br i1 %cmp169, label %if.then171, label %if.else176, !dbg !10534

if.then171:                                       ; preds = %lor.lhs.false168, %lor.lhs.false165, %if.end162
  %62 = load i32, i32* %precedence, align 4, !dbg !10535
  %63 = load i32, i32* %target, align 4, !dbg !10538
  %cmp172 = icmp ugt i32 %62, %63, !dbg !10539
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !10540

if.then174:                                       ; preds = %if.then171
  %64 = load i32, i32* %precedence, align 4, !dbg !10541
  store i32 %64, i32* %target, align 4, !dbg !10543
  %65 = load i8*, i8** %expression.addr, align 8, !dbg !10544
  store i8* %65, i8** %subexpression, align 8, !dbg !10545
  br label %if.end175, !dbg !10546

if.end175:                                        ; preds = %if.then174, %if.then171
  br label %if.end181, !dbg !10547

if.else176:                                       ; preds = %lor.lhs.false168
  %66 = load i32, i32* %precedence, align 4, !dbg !10548
  %67 = load i32, i32* %target, align 4, !dbg !10550
  %cmp177 = icmp uge i32 %66, %67, !dbg !10551
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !10552

if.then179:                                       ; preds = %if.else176
  %68 = load i32, i32* %precedence, align 4, !dbg !10553
  store i32 %68, i32* %target, align 4, !dbg !10555
  %69 = load i8*, i8** %expression.addr, align 8, !dbg !10556
  store i8* %69, i8** %subexpression, align 8, !dbg !10557
  br label %if.end180, !dbg !10558

if.end180:                                        ; preds = %if.then179, %if.else176
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end175
  %70 = load i8*, i8** %expression.addr, align 8, !dbg !10559
  %71 = load i8, i8* %70, align 1, !dbg !10561
  %conv182 = sext i8 %71 to i32, !dbg !10562
  %call183 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 %conv182) #15, !dbg !10563
  %cmp184 = icmp ne i8* %call183, null, !dbg !10564
  br i1 %cmp184, label %if.then186, label %if.end188, !dbg !10565

if.then186:                                       ; preds = %if.end181
  %72 = load i8*, i8** %expression.addr, align 8, !dbg !10566
  %73 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10567
  %call187 = call i8* @FxSubexpression(i8* %72, %struct._ExceptionInfo* %73), !dbg !10568
  store i8* %call187, i8** %expression.addr, align 8, !dbg !10569
  br label %if.end188, !dbg !10570

if.end188:                                        ; preds = %if.then186, %if.end181
  %74 = load i8*, i8** %expression.addr, align 8, !dbg !10571
  %incdec.ptr189 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10571
  store i8* %incdec.ptr189, i8** %expression.addr, align 8, !dbg !10571
  %75 = load i8, i8* %74, align 1, !dbg !10572
  %conv190 = sext i8 %75 to i32, !dbg !10573
  store i32 %conv190, i32* %c, align 4, !dbg !10574
  br label %while.cond, !dbg !10324, !llvm.loop !10340

while.end191:                                     ; preds = %while.cond
  %76 = load i8*, i8** %subexpression, align 8, !dbg !10575
  ret i8* %76, !dbg !10576
}

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #8

declare dso_local i8* @StringToken(i8*, i8**) #3

declare dso_local void @ClearMagickException(%struct._ExceptionInfo*) #3

declare dso_local i32 @DeleteNodeFromSplayTree(%struct._SplayTreeInfo*, i8*) #3

declare dso_local i32 @AddValueToSplayTree(%struct._SplayTreeInfo*, i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #9

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #9

declare dso_local i32 @LocaleNCompare(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local double @acosh(double) #8

; Function Attrs: nounwind
declare dso_local double @acos(double) #8

; Function Attrs: nounwind
declare dso_local double @j1(double) #8

; Function Attrs: nounwind
declare dso_local double @asinh(double) #8

; Function Attrs: nounwind
declare dso_local double @asin(double) #8

; Function Attrs: nounwind
declare dso_local double @atan2(double, double) #8

; Function Attrs: nounwind
declare dso_local double @atanh(double) #8

; Function Attrs: nounwind
declare dso_local double @atan(double) #8

declare dso_local i32 @LocaleCompare(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @FxGetSymbol(%struct._FxInfo* %fx_info, i32 %channel, i64 %x, i64 %y, i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !10577 {
entry:
  %retval = alloca double, align 8
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %channel.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %q = alloca i8*, align 8
  %subexpression = alloca [4096 x i8], align 16
  %symbol = alloca [4096 x i8], align 16
  %p = alloca i8*, align 8
  %value = alloca i8*, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %image = alloca %struct._Image*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %point = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  %length = alloca i64, align 8
  %level = alloca i64, align 8
  %name = alloca [4096 x i8], align 16
  %color = alloca %struct._MagickPixelPacket*, align 8
  %alpha276 = alloca double, align 8
  %channel_info = alloca %struct._GeometryInfo, align 8
  %flags = alloca i32, align 4
  %hue = alloca double, align 8
  %lightness = alloca double, align 8
  %saturation = alloca double, align 8
  %hue563 = alloca double, align 8
  %lightness564 = alloca double, align 8
  %saturation565 = alloca double, align 8
  %luma = alloca double, align 8
  %luminance = alloca double, align 8
  %hue727 = alloca double, align 8
  %lightness728 = alloca double, align 8
  %saturation729 = alloca double, align 8
  %depth = alloca double, align 8
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !10580, metadata !DIExpression()), !dbg !10581
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !10586, metadata !DIExpression()), !dbg !10587
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata [4096 x i8]* %subexpression, metadata !10594, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.declare(metadata [4096 x i8]* %symbol, metadata !10596, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10598, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.declare(metadata i8** %value, metadata !10600, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.declare(metadata double* %beta, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !10606, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !10608, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !10610, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10614, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.declare(metadata i64* %level, metadata !10616, metadata !DIExpression()), !dbg !10617
  %0 = load i8*, i8** %expression.addr, align 8, !dbg !10618
  store i8* %0, i8** %p, align 8, !dbg !10619
  %1 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10620
  %images = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %1, i32 0, i32 0, !dbg !10621
  %2 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10621
  %call = call i64 @GetImageIndexInList(%struct._Image* %2), !dbg !10622
  store i64 %call, i64* %i, align 8, !dbg !10623
  store i64 0, i64* %level, align 8, !dbg !10624
  %3 = load i64, i64* %x.addr, align 8, !dbg !10625
  %conv = sitofp i64 %3 to double, !dbg !10626
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10627
  store double %conv, double* %x1, align 8, !dbg !10628
  %4 = load i64, i64* %y.addr, align 8, !dbg !10629
  %conv2 = sitofp i64 %4 to double, !dbg !10630
  %y3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10631
  store double %conv2, double* %y3, align 8, !dbg !10632
  %call4 = call i16** @__ctype_b_loc() #11, !dbg !10633
  %5 = load i16*, i16** %call4, align 8, !dbg !10633
  %6 = load i8*, i8** %p, align 8, !dbg !10633
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 1, !dbg !10633
  %7 = load i8, i8* %add.ptr, align 1, !dbg !10633
  %conv5 = zext i8 %7 to i32, !dbg !10633
  %idxprom = sext i32 %conv5 to i64, !dbg !10633
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !10633
  %8 = load i16, i16* %arrayidx, align 2, !dbg !10633
  %conv6 = zext i16 %8 to i32, !dbg !10633
  %and = and i32 %conv6, 1024, !dbg !10633
  %cmp = icmp eq i32 %and, 0, !dbg !10635
  br i1 %cmp, label %if.then, label %if.end154, !dbg !10636

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %p, align 8, !dbg !10637
  %10 = load i8, i8* %9, align 1, !dbg !10640
  %conv8 = sext i8 %10 to i32, !dbg !10641
  %call9 = call i8* @strchr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i64 0, i64 0), i32 %conv8) #15, !dbg !10642
  %cmp10 = icmp ne i8* %call9, null, !dbg !10643
  br i1 %cmp10, label %if.then12, label %if.end53, !dbg !10644

if.then12:                                        ; preds = %if.then
  %11 = load i8*, i8** %p, align 8, !dbg !10645
  %12 = load i8, i8* %11, align 1, !dbg !10647
  %conv13 = sext i8 %12 to i32, !dbg !10647
  switch i32 %conv13, label %sw.default [
    i32 115, label %sw.bb
    i32 117, label %sw.bb16
    i32 118, label %sw.bb17
  ], !dbg !10648

sw.bb:                                            ; preds = %if.then12
  br label %sw.default, !dbg !10649

sw.default:                                       ; preds = %if.then12, %sw.bb
  %13 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10650
  %images14 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %13, i32 0, i32 0, !dbg !10653
  %14 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !10653
  %call15 = call i64 @GetImageIndexInList(%struct._Image* %14), !dbg !10654
  store i64 %call15, i64* %i, align 8, !dbg !10655
  br label %sw.epilog, !dbg !10656

sw.bb16:                                          ; preds = %if.then12
  store i64 0, i64* %i, align 8, !dbg !10657
  br label %sw.epilog, !dbg !10658

sw.bb17:                                          ; preds = %if.then12
  store i64 1, i64* %i, align 8, !dbg !10659
  br label %sw.epilog, !dbg !10660

sw.epilog:                                        ; preds = %sw.bb17, %sw.bb16, %sw.default
  %15 = load i8*, i8** %p, align 8, !dbg !10661
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !10661
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !10661
  %16 = load i8*, i8** %p, align 8, !dbg !10662
  %17 = load i8, i8* %16, align 1, !dbg !10664
  %conv18 = sext i8 %17 to i32, !dbg !10664
  %cmp19 = icmp eq i32 %conv18, 91, !dbg !10665
  br i1 %cmp19, label %if.then21, label %if.end46, !dbg !10666

if.then21:                                        ; preds = %sw.epilog
  %18 = load i64, i64* %level, align 8, !dbg !10667
  %inc = add i64 %18, 1, !dbg !10667
  store i64 %inc, i64* %level, align 8, !dbg !10667
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10669
  store i8* %arraydecay, i8** %q, align 8, !dbg !10670
  %19 = load i8*, i8** %p, align 8, !dbg !10671
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10671
  store i8* %incdec.ptr22, i8** %p, align 8, !dbg !10671
  br label %for.cond, !dbg !10673

for.cond:                                         ; preds = %if.end39, %if.then21
  %20 = load i8*, i8** %p, align 8, !dbg !10674
  %21 = load i8, i8* %20, align 1, !dbg !10676
  %conv23 = sext i8 %21 to i32, !dbg !10676
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !10677
  br i1 %cmp24, label %for.body, label %for.end, !dbg !10678

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %p, align 8, !dbg !10679
  %23 = load i8, i8* %22, align 1, !dbg !10682
  %conv26 = sext i8 %23 to i32, !dbg !10682
  %cmp27 = icmp eq i32 %conv26, 91, !dbg !10683
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !10684

if.then29:                                        ; preds = %for.body
  %24 = load i64, i64* %level, align 8, !dbg !10685
  %inc30 = add i64 %24, 1, !dbg !10685
  store i64 %inc30, i64* %level, align 8, !dbg !10685
  br label %if.end39, !dbg !10686

if.else:                                          ; preds = %for.body
  %25 = load i8*, i8** %p, align 8, !dbg !10687
  %26 = load i8, i8* %25, align 1, !dbg !10689
  %conv31 = sext i8 %26 to i32, !dbg !10689
  %cmp32 = icmp eq i32 %conv31, 93, !dbg !10690
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !10691

if.then34:                                        ; preds = %if.else
  %27 = load i64, i64* %level, align 8, !dbg !10692
  %dec = add i64 %27, -1, !dbg !10692
  store i64 %dec, i64* %level, align 8, !dbg !10692
  %28 = load i64, i64* %level, align 8, !dbg !10694
  %cmp35 = icmp eq i64 %28, 0, !dbg !10696
  br i1 %cmp35, label %if.then37, label %if.end, !dbg !10697

if.then37:                                        ; preds = %if.then34
  br label %for.end, !dbg !10698

if.end:                                           ; preds = %if.then34
  br label %if.end38, !dbg !10699

if.end38:                                         ; preds = %if.end, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then29
  %29 = load i8*, i8** %p, align 8, !dbg !10700
  %incdec.ptr40 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !10700
  store i8* %incdec.ptr40, i8** %p, align 8, !dbg !10700
  %30 = load i8, i8* %29, align 1, !dbg !10701
  %31 = load i8*, i8** %q, align 8, !dbg !10702
  %incdec.ptr41 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10702
  store i8* %incdec.ptr41, i8** %q, align 8, !dbg !10702
  store i8 %30, i8* %31, align 1, !dbg !10703
  br label %for.cond, !dbg !10704, !llvm.loop !10705

for.end:                                          ; preds = %if.then37, %for.cond
  %32 = load i8*, i8** %q, align 8, !dbg !10707
  store i8 0, i8* %32, align 1, !dbg !10708
  %33 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10709
  %34 = load i32, i32* %channel.addr, align 4, !dbg !10710
  %35 = load i64, i64* %x.addr, align 8, !dbg !10711
  %36 = load i64, i64* %y.addr, align 8, !dbg !10712
  %arraydecay42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10713
  %37 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10714
  %call43 = call double @FxEvaluateSubexpression(%struct._FxInfo* %33, i32 %34, i64 %35, i64 %36, i8* %arraydecay42, double* %beta, %struct._ExceptionInfo* %37), !dbg !10715
  store double %call43, double* %alpha, align 8, !dbg !10716
  %38 = load double, double* %alpha, align 8, !dbg !10717
  %add = fadd double %38, 5.000000e-01, !dbg !10718
  %conv44 = fptosi double %add to i64, !dbg !10719
  store i64 %conv44, i64* %i, align 8, !dbg !10720
  %39 = load i8*, i8** %p, align 8, !dbg !10721
  %incdec.ptr45 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !10721
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !10721
  br label %if.end46, !dbg !10722

if.end46:                                         ; preds = %for.end, %sw.epilog
  %40 = load i8*, i8** %p, align 8, !dbg !10723
  %41 = load i8, i8* %40, align 1, !dbg !10725
  %conv47 = sext i8 %41 to i32, !dbg !10725
  %cmp48 = icmp eq i32 %conv47, 46, !dbg !10726
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !10727

if.then50:                                        ; preds = %if.end46
  %42 = load i8*, i8** %p, align 8, !dbg !10728
  %incdec.ptr51 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !10728
  store i8* %incdec.ptr51, i8** %p, align 8, !dbg !10728
  br label %if.end52, !dbg !10729

if.end52:                                         ; preds = %if.then50, %if.end46
  br label %if.end53, !dbg !10730

if.end53:                                         ; preds = %if.end52, %if.then
  %43 = load i8*, i8** %p, align 8, !dbg !10731
  %44 = load i8, i8* %43, align 1, !dbg !10733
  %conv54 = sext i8 %44 to i32, !dbg !10733
  %cmp55 = icmp eq i32 %conv54, 112, !dbg !10734
  br i1 %cmp55, label %land.lhs.true, label %if.end153, !dbg !10735

land.lhs.true:                                    ; preds = %if.end53
  %call57 = call i16** @__ctype_b_loc() #11, !dbg !10736
  %45 = load i16*, i16** %call57, align 8, !dbg !10736
  %46 = load i8*, i8** %p, align 8, !dbg !10736
  %add.ptr58 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !10736
  %47 = load i8, i8* %add.ptr58, align 1, !dbg !10736
  %conv59 = zext i8 %47 to i32, !dbg !10736
  %idxprom60 = sext i32 %conv59 to i64, !dbg !10736
  %arrayidx61 = getelementptr inbounds i16, i16* %45, i64 %idxprom60, !dbg !10736
  %48 = load i16, i16* %arrayidx61, align 2, !dbg !10736
  %conv62 = zext i16 %48 to i32, !dbg !10736
  %and63 = and i32 %conv62, 1024, !dbg !10736
  %cmp64 = icmp eq i32 %and63, 0, !dbg !10737
  br i1 %cmp64, label %if.then66, label %if.end153, !dbg !10738

if.then66:                                        ; preds = %land.lhs.true
  %49 = load i8*, i8** %p, align 8, !dbg !10739
  %incdec.ptr67 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !10739
  store i8* %incdec.ptr67, i8** %p, align 8, !dbg !10739
  %50 = load i8*, i8** %p, align 8, !dbg !10741
  %51 = load i8, i8* %50, align 1, !dbg !10743
  %conv68 = sext i8 %51 to i32, !dbg !10743
  %cmp69 = icmp eq i32 %conv68, 123, !dbg !10744
  br i1 %cmp69, label %if.then71, label %if.else105, !dbg !10745

if.then71:                                        ; preds = %if.then66
  %52 = load i64, i64* %level, align 8, !dbg !10746
  %inc72 = add i64 %52, 1, !dbg !10746
  store i64 %inc72, i64* %level, align 8, !dbg !10746
  %arraydecay73 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10748
  store i8* %arraydecay73, i8** %q, align 8, !dbg !10749
  %53 = load i8*, i8** %p, align 8, !dbg !10750
  %incdec.ptr74 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !10750
  store i8* %incdec.ptr74, i8** %p, align 8, !dbg !10750
  br label %for.cond75, !dbg !10752

for.cond75:                                       ; preds = %if.end96, %if.then71
  %54 = load i8*, i8** %p, align 8, !dbg !10753
  %55 = load i8, i8* %54, align 1, !dbg !10755
  %conv76 = sext i8 %55 to i32, !dbg !10755
  %cmp77 = icmp ne i32 %conv76, 0, !dbg !10756
  br i1 %cmp77, label %for.body79, label %for.end99, !dbg !10757

for.body79:                                       ; preds = %for.cond75
  %56 = load i8*, i8** %p, align 8, !dbg !10758
  %57 = load i8, i8* %56, align 1, !dbg !10761
  %conv80 = sext i8 %57 to i32, !dbg !10761
  %cmp81 = icmp eq i32 %conv80, 123, !dbg !10762
  br i1 %cmp81, label %if.then83, label %if.else85, !dbg !10763

if.then83:                                        ; preds = %for.body79
  %58 = load i64, i64* %level, align 8, !dbg !10764
  %inc84 = add i64 %58, 1, !dbg !10764
  store i64 %inc84, i64* %level, align 8, !dbg !10764
  br label %if.end96, !dbg !10765

if.else85:                                        ; preds = %for.body79
  %59 = load i8*, i8** %p, align 8, !dbg !10766
  %60 = load i8, i8* %59, align 1, !dbg !10768
  %conv86 = sext i8 %60 to i32, !dbg !10768
  %cmp87 = icmp eq i32 %conv86, 125, !dbg !10769
  br i1 %cmp87, label %if.then89, label %if.end95, !dbg !10770

if.then89:                                        ; preds = %if.else85
  %61 = load i64, i64* %level, align 8, !dbg !10771
  %dec90 = add i64 %61, -1, !dbg !10771
  store i64 %dec90, i64* %level, align 8, !dbg !10771
  %62 = load i64, i64* %level, align 8, !dbg !10773
  %cmp91 = icmp eq i64 %62, 0, !dbg !10775
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !10776

if.then93:                                        ; preds = %if.then89
  br label %for.end99, !dbg !10777

if.end94:                                         ; preds = %if.then89
  br label %if.end95, !dbg !10778

if.end95:                                         ; preds = %if.end94, %if.else85
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  %63 = load i8*, i8** %p, align 8, !dbg !10779
  %incdec.ptr97 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !10779
  store i8* %incdec.ptr97, i8** %p, align 8, !dbg !10779
  %64 = load i8, i8* %63, align 1, !dbg !10780
  %65 = load i8*, i8** %q, align 8, !dbg !10781
  %incdec.ptr98 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !10781
  store i8* %incdec.ptr98, i8** %q, align 8, !dbg !10781
  store i8 %64, i8* %65, align 1, !dbg !10782
  br label %for.cond75, !dbg !10783, !llvm.loop !10784

for.end99:                                        ; preds = %if.then93, %for.cond75
  %66 = load i8*, i8** %q, align 8, !dbg !10786
  store i8 0, i8* %66, align 1, !dbg !10787
  %67 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10788
  %68 = load i32, i32* %channel.addr, align 4, !dbg !10789
  %69 = load i64, i64* %x.addr, align 8, !dbg !10790
  %70 = load i64, i64* %y.addr, align 8, !dbg !10791
  %arraydecay100 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10792
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10793
  %call101 = call double @FxEvaluateSubexpression(%struct._FxInfo* %67, i32 %68, i64 %69, i64 %70, i8* %arraydecay100, double* %beta, %struct._ExceptionInfo* %71), !dbg !10794
  store double %call101, double* %alpha, align 8, !dbg !10795
  %72 = load double, double* %alpha, align 8, !dbg !10796
  %x102 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10797
  store double %72, double* %x102, align 8, !dbg !10798
  %73 = load double, double* %beta, align 8, !dbg !10799
  %y103 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10800
  store double %73, double* %y103, align 8, !dbg !10801
  %74 = load i8*, i8** %p, align 8, !dbg !10802
  %incdec.ptr104 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10802
  store i8* %incdec.ptr104, i8** %p, align 8, !dbg !10802
  br label %if.end146, !dbg !10803

if.else105:                                       ; preds = %if.then66
  %75 = load i8*, i8** %p, align 8, !dbg !10804
  %76 = load i8, i8* %75, align 1, !dbg !10806
  %conv106 = sext i8 %76 to i32, !dbg !10806
  %cmp107 = icmp eq i32 %conv106, 91, !dbg !10807
  br i1 %cmp107, label %if.then109, label %if.end145, !dbg !10808

if.then109:                                       ; preds = %if.else105
  %77 = load i64, i64* %level, align 8, !dbg !10809
  %inc110 = add i64 %77, 1, !dbg !10809
  store i64 %inc110, i64* %level, align 8, !dbg !10809
  %arraydecay111 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10811
  store i8* %arraydecay111, i8** %q, align 8, !dbg !10812
  %78 = load i8*, i8** %p, align 8, !dbg !10813
  %incdec.ptr112 = getelementptr inbounds i8, i8* %78, i32 1, !dbg !10813
  store i8* %incdec.ptr112, i8** %p, align 8, !dbg !10813
  br label %for.cond113, !dbg !10815

for.cond113:                                      ; preds = %if.end134, %if.then109
  %79 = load i8*, i8** %p, align 8, !dbg !10816
  %80 = load i8, i8* %79, align 1, !dbg !10818
  %conv114 = sext i8 %80 to i32, !dbg !10818
  %cmp115 = icmp ne i32 %conv114, 0, !dbg !10819
  br i1 %cmp115, label %for.body117, label %for.end137, !dbg !10820

for.body117:                                      ; preds = %for.cond113
  %81 = load i8*, i8** %p, align 8, !dbg !10821
  %82 = load i8, i8* %81, align 1, !dbg !10824
  %conv118 = sext i8 %82 to i32, !dbg !10824
  %cmp119 = icmp eq i32 %conv118, 91, !dbg !10825
  br i1 %cmp119, label %if.then121, label %if.else123, !dbg !10826

if.then121:                                       ; preds = %for.body117
  %83 = load i64, i64* %level, align 8, !dbg !10827
  %inc122 = add i64 %83, 1, !dbg !10827
  store i64 %inc122, i64* %level, align 8, !dbg !10827
  br label %if.end134, !dbg !10828

if.else123:                                       ; preds = %for.body117
  %84 = load i8*, i8** %p, align 8, !dbg !10829
  %85 = load i8, i8* %84, align 1, !dbg !10831
  %conv124 = sext i8 %85 to i32, !dbg !10831
  %cmp125 = icmp eq i32 %conv124, 93, !dbg !10832
  br i1 %cmp125, label %if.then127, label %if.end133, !dbg !10833

if.then127:                                       ; preds = %if.else123
  %86 = load i64, i64* %level, align 8, !dbg !10834
  %dec128 = add i64 %86, -1, !dbg !10834
  store i64 %dec128, i64* %level, align 8, !dbg !10834
  %87 = load i64, i64* %level, align 8, !dbg !10836
  %cmp129 = icmp eq i64 %87, 0, !dbg !10838
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !10839

if.then131:                                       ; preds = %if.then127
  br label %for.end137, !dbg !10840

if.end132:                                        ; preds = %if.then127
  br label %if.end133, !dbg !10841

if.end133:                                        ; preds = %if.end132, %if.else123
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then121
  %88 = load i8*, i8** %p, align 8, !dbg !10842
  %incdec.ptr135 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !10842
  store i8* %incdec.ptr135, i8** %p, align 8, !dbg !10842
  %89 = load i8, i8* %88, align 1, !dbg !10843
  %90 = load i8*, i8** %q, align 8, !dbg !10844
  %incdec.ptr136 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !10844
  store i8* %incdec.ptr136, i8** %q, align 8, !dbg !10844
  store i8 %89, i8* %90, align 1, !dbg !10845
  br label %for.cond113, !dbg !10846, !llvm.loop !10847

for.end137:                                       ; preds = %if.then131, %for.cond113
  %91 = load i8*, i8** %q, align 8, !dbg !10849
  store i8 0, i8* %91, align 1, !dbg !10850
  %92 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10851
  %93 = load i32, i32* %channel.addr, align 4, !dbg !10852
  %94 = load i64, i64* %x.addr, align 8, !dbg !10853
  %95 = load i64, i64* %y.addr, align 8, !dbg !10854
  %arraydecay138 = getelementptr inbounds [4096 x i8], [4096 x i8]* %subexpression, i64 0, i64 0, !dbg !10855
  %96 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10856
  %call139 = call double @FxEvaluateSubexpression(%struct._FxInfo* %92, i32 %93, i64 %94, i64 %95, i8* %arraydecay138, double* %beta, %struct._ExceptionInfo* %96), !dbg !10857
  store double %call139, double* %alpha, align 8, !dbg !10858
  %97 = load double, double* %alpha, align 8, !dbg !10859
  %x140 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10860
  %98 = load double, double* %x140, align 8, !dbg !10861
  %add141 = fadd double %98, %97, !dbg !10861
  store double %add141, double* %x140, align 8, !dbg !10861
  %99 = load double, double* %beta, align 8, !dbg !10862
  %y142 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10863
  %100 = load double, double* %y142, align 8, !dbg !10864
  %add143 = fadd double %100, %99, !dbg !10864
  store double %add143, double* %y142, align 8, !dbg !10864
  %101 = load i8*, i8** %p, align 8, !dbg !10865
  %incdec.ptr144 = getelementptr inbounds i8, i8* %101, i32 1, !dbg !10865
  store i8* %incdec.ptr144, i8** %p, align 8, !dbg !10865
  br label %if.end145, !dbg !10866

if.end145:                                        ; preds = %for.end137, %if.else105
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %for.end99
  %102 = load i8*, i8** %p, align 8, !dbg !10867
  %103 = load i8, i8* %102, align 1, !dbg !10869
  %conv147 = sext i8 %103 to i32, !dbg !10869
  %cmp148 = icmp eq i32 %conv147, 46, !dbg !10870
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !10871

if.then150:                                       ; preds = %if.end146
  %104 = load i8*, i8** %p, align 8, !dbg !10872
  %incdec.ptr151 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !10872
  store i8* %incdec.ptr151, i8** %p, align 8, !dbg !10872
  br label %if.end152, !dbg !10873

if.end152:                                        ; preds = %if.then150, %if.end146
  br label %if.end153, !dbg !10874

if.end153:                                        ; preds = %if.end152, %land.lhs.true, %if.end53
  br label %if.end154, !dbg !10875

if.end154:                                        ; preds = %if.end153, %entry
  %105 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10876
  %images155 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %105, i32 0, i32 0, !dbg !10877
  %106 = load %struct._Image*, %struct._Image** %images155, align 8, !dbg !10877
  %call156 = call i64 @GetImageListLength(%struct._Image* %106), !dbg !10878
  store i64 %call156, i64* %length, align 8, !dbg !10879
  br label %while.cond, !dbg !10880

while.cond:                                       ; preds = %while.body, %if.end154
  %107 = load i64, i64* %i, align 8, !dbg !10881
  %cmp157 = icmp slt i64 %107, 0, !dbg !10882
  br i1 %cmp157, label %while.body, label %while.end, !dbg !10880

while.body:                                       ; preds = %while.cond
  %108 = load i64, i64* %length, align 8, !dbg !10883
  %109 = load i64, i64* %i, align 8, !dbg !10884
  %add159 = add nsw i64 %109, %108, !dbg !10884
  store i64 %add159, i64* %i, align 8, !dbg !10884
  br label %while.cond, !dbg !10880, !llvm.loop !10885

while.end:                                        ; preds = %while.cond
  %110 = load i64, i64* %length, align 8, !dbg !10886
  %111 = load i64, i64* %i, align 8, !dbg !10887
  %rem = urem i64 %111, %110, !dbg !10887
  store i64 %rem, i64* %i, align 8, !dbg !10887
  %112 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10888
  %images160 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %112, i32 0, i32 0, !dbg !10889
  %113 = load %struct._Image*, %struct._Image** %images160, align 8, !dbg !10889
  %114 = load i64, i64* %i, align 8, !dbg !10890
  %call161 = call %struct._Image* @GetImageFromList(%struct._Image* %113, i64 %114), !dbg !10891
  store %struct._Image* %call161, %struct._Image** %image, align 8, !dbg !10892
  %115 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !10893
  %cmp162 = icmp eq %struct._Image* %115, null, !dbg !10895
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !10896

if.then164:                                       ; preds = %while.end
  %116 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10897
  %117 = load i8*, i8** %expression.addr, align 8, !dbg !10899
  %call165 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %116, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1447, i32 410, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %117), !dbg !10900
  store double 0.000000e+00, double* %retval, align 8, !dbg !10901
  br label %return, !dbg !10901

if.end166:                                        ; preds = %while.end
  %118 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !10902
  call void @GetMagickPixelPacket(%struct._Image* %118, %struct._MagickPixelPacket* %pixel), !dbg !10903
  %119 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !10904
  %120 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10905
  %view = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %120, i32 0, i32 5, !dbg !10906
  %121 = load %struct._CacheView**, %struct._CacheView*** %view, align 8, !dbg !10906
  %122 = load i64, i64* %i, align 8, !dbg !10907
  %arrayidx167 = getelementptr inbounds %struct._CacheView*, %struct._CacheView** %121, i64 %122, !dbg !10905
  %123 = load %struct._CacheView*, %struct._CacheView** %arrayidx167, align 8, !dbg !10905
  %124 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !10908
  %interpolate = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 70, !dbg !10909
  %125 = load i32, i32* %interpolate, align 8, !dbg !10909
  %x168 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10910
  %126 = load double, double* %x168, align 8, !dbg !10910
  %y169 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10911
  %127 = load double, double* %y169, align 8, !dbg !10911
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10912
  %call170 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %119, %struct._CacheView* %123, i32 %125, double %126, double %127, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %128), !dbg !10913
  %129 = load i8*, i8** %p, align 8, !dbg !10914
  %call171 = call i64 @strlen(i8* %129) #15, !dbg !10916
  %cmp172 = icmp ugt i64 %call171, 2, !dbg !10917
  br i1 %cmp172, label %land.lhs.true174, label %if.end258, !dbg !10918

land.lhs.true174:                                 ; preds = %if.end166
  %130 = load i8*, i8** %p, align 8, !dbg !10919
  %call175 = call i32 @LocaleCompare(i8* %130, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i64 0, i64 0)), !dbg !10920
  %cmp176 = icmp ne i32 %call175, 0, !dbg !10921
  br i1 %cmp176, label %land.lhs.true178, label %if.end258, !dbg !10922

land.lhs.true178:                                 ; preds = %land.lhs.true174
  %131 = load i8*, i8** %p, align 8, !dbg !10923
  %call179 = call i32 @LocaleCompare(i8* %131, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0)), !dbg !10924
  %cmp180 = icmp ne i32 %call179, 0, !dbg !10925
  br i1 %cmp180, label %land.lhs.true182, label %if.end258, !dbg !10926

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %132 = load i8*, i8** %p, align 8, !dbg !10927
  %call183 = call i32 @LocaleCompare(i8* %132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156, i64 0, i64 0)), !dbg !10928
  %cmp184 = icmp ne i32 %call183, 0, !dbg !10929
  br i1 %cmp184, label %land.lhs.true186, label %if.end258, !dbg !10930

land.lhs.true186:                                 ; preds = %land.lhs.true182
  %133 = load i8*, i8** %p, align 8, !dbg !10931
  %call187 = call i32 @LocaleCompare(i8* %133, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)), !dbg !10932
  %cmp188 = icmp ne i32 %call187, 0, !dbg !10933
  br i1 %cmp188, label %land.lhs.true190, label %if.end258, !dbg !10934

land.lhs.true190:                                 ; preds = %land.lhs.true186
  %134 = load i8*, i8** %p, align 8, !dbg !10935
  %call191 = call i32 @LocaleCompare(i8* %134, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0)), !dbg !10936
  %cmp192 = icmp ne i32 %call191, 0, !dbg !10937
  br i1 %cmp192, label %land.lhs.true194, label %if.end258, !dbg !10938

land.lhs.true194:                                 ; preds = %land.lhs.true190
  %135 = load i8*, i8** %p, align 8, !dbg !10939
  %call195 = call i32 @LocaleCompare(i8* %135, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i64 0, i64 0)), !dbg !10940
  %cmp196 = icmp ne i32 %call195, 0, !dbg !10941
  br i1 %cmp196, label %if.then198, label %if.end258, !dbg !10942

if.then198:                                       ; preds = %land.lhs.true194
  call void @llvm.dbg.declare(metadata [4096 x i8]* %name, metadata !10943, metadata !DIExpression()), !dbg !10945
  %arraydecay199 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10946
  %136 = load i8*, i8** %p, align 8, !dbg !10947
  %call200 = call i64 @CopyMagickString(i8* %arraydecay199, i8* %136, i64 4096), !dbg !10948
  %arraydecay201 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10949
  %arraydecay202 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10951
  %call203 = call i64 @strlen(i8* %arraydecay202) #15, !dbg !10952
  %sub = sub i64 %call203, 1, !dbg !10953
  %add.ptr204 = getelementptr inbounds i8, i8* %arraydecay201, i64 %sub, !dbg !10954
  store i8* %add.ptr204, i8** %q, align 8, !dbg !10955
  br label %for.cond205, !dbg !10956

for.cond205:                                      ; preds = %for.inc, %if.then198
  %137 = load i8*, i8** %q, align 8, !dbg !10957
  %arraydecay206 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10959
  %cmp207 = icmp ugt i8* %137, %arraydecay206, !dbg !10960
  br i1 %cmp207, label %for.body209, label %for.end221, !dbg !10961

for.body209:                                      ; preds = %for.cond205
  %138 = load i8*, i8** %q, align 8, !dbg !10962
  %139 = load i8, i8* %138, align 1, !dbg !10965
  %conv210 = sext i8 %139 to i32, !dbg !10965
  %cmp211 = icmp eq i32 %conv210, 41, !dbg !10966
  br i1 %cmp211, label %if.then213, label %if.end214, !dbg !10967

if.then213:                                       ; preds = %for.body209
  br label %for.end221, !dbg !10968

if.end214:                                        ; preds = %for.body209
  %140 = load i8*, i8** %q, align 8, !dbg !10969
  %141 = load i8, i8* %140, align 1, !dbg !10971
  %conv215 = sext i8 %141 to i32, !dbg !10971
  %cmp216 = icmp eq i32 %conv215, 46, !dbg !10972
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !10973

if.then218:                                       ; preds = %if.end214
  %142 = load i8*, i8** %q, align 8, !dbg !10974
  store i8 0, i8* %142, align 1, !dbg !10976
  br label %for.end221, !dbg !10977

if.end219:                                        ; preds = %if.end214
  br label %for.inc, !dbg !10978

for.inc:                                          ; preds = %if.end219
  %143 = load i8*, i8** %q, align 8, !dbg !10979
  %incdec.ptr220 = getelementptr inbounds i8, i8* %143, i32 -1, !dbg !10979
  store i8* %incdec.ptr220, i8** %q, align 8, !dbg !10979
  br label %for.cond205, !dbg !10980, !llvm.loop !10981

for.end221:                                       ; preds = %if.then218, %if.then213, %for.cond205
  %arraydecay222 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10983
  %call223 = call i64 @strlen(i8* %arraydecay222) #15, !dbg !10985
  %cmp224 = icmp ugt i64 %call223, 2, !dbg !10986
  br i1 %cmp224, label %land.lhs.true226, label %if.end257, !dbg !10987

land.lhs.true226:                                 ; preds = %for.end221
  %144 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10988
  %symbols = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %144, i32 0, i32 4, !dbg !10989
  %145 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols, align 8, !dbg !10989
  %arraydecay227 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10990
  %call228 = call i8* @GetValueFromSplayTree(%struct._SplayTreeInfo* %145, i8* %arraydecay227), !dbg !10991
  %cmp229 = icmp eq i8* %call228, null, !dbg !10992
  br i1 %cmp229, label %if.then231, label %if.end257, !dbg !10993

if.then231:                                       ; preds = %land.lhs.true226
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %color, metadata !10994, metadata !DIExpression()), !dbg !10996
  %146 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !10997
  %colors = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %146, i32 0, i32 3, !dbg !10998
  %147 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %colors, align 8, !dbg !10998
  %arraydecay232 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10999
  %call233 = call i8* @GetValueFromSplayTree(%struct._SplayTreeInfo* %147, i8* %arraydecay232), !dbg !11000
  %148 = bitcast i8* %call233 to %struct._MagickPixelPacket*, !dbg !11001
  store %struct._MagickPixelPacket* %148, %struct._MagickPixelPacket** %color, align 8, !dbg !11002
  %149 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %color, align 8, !dbg !11003
  %cmp234 = icmp ne %struct._MagickPixelPacket* %149, null, !dbg !11005
  br i1 %cmp234, label %if.then236, label %if.else240, !dbg !11006

if.then236:                                       ; preds = %if.then231
  %150 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %color, align 8, !dbg !11007
  %151 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !11009
  %152 = bitcast %struct._MagickPixelPacket* %150 to i8*, !dbg !11009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 56, i1 false), !dbg !11009
  %arraydecay237 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11010
  %call238 = call i64 @strlen(i8* %arraydecay237) #15, !dbg !11011
  %153 = load i8*, i8** %p, align 8, !dbg !11012
  %add.ptr239 = getelementptr inbounds i8, i8* %153, i64 %call238, !dbg !11012
  store i8* %add.ptr239, i8** %p, align 8, !dbg !11012
  br label %if.end256, !dbg !11013

if.else240:                                       ; preds = %if.then231
  %arraydecay241 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11014
  %154 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11016
  %exception242 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %154, i32 0, i32 7, !dbg !11017
  %155 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception242, align 8, !dbg !11017
  %call243 = call i32 @QueryMagickColor(i8* %arraydecay241, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %155), !dbg !11018
  %cmp244 = icmp ne i32 %call243, 0, !dbg !11019
  br i1 %cmp244, label %if.then246, label %if.end255, !dbg !11020

if.then246:                                       ; preds = %if.else240
  %156 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11021
  %colors247 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %156, i32 0, i32 3, !dbg !11023
  %157 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %colors247, align 8, !dbg !11023
  %arraydecay248 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11024
  %call249 = call i8* @ConstantString(i8* %arraydecay248), !dbg !11025
  %call250 = call %struct._MagickPixelPacket* @CloneMagickPixelPacket(%struct._MagickPixelPacket* %pixel), !dbg !11026
  %158 = bitcast %struct._MagickPixelPacket* %call250 to i8*, !dbg !11026
  %call251 = call i32 @AddValueToSplayTree(%struct._SplayTreeInfo* %157, i8* %call249, i8* %158), !dbg !11027
  %arraydecay252 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11028
  %call253 = call i64 @strlen(i8* %arraydecay252) #15, !dbg !11029
  %159 = load i8*, i8** %p, align 8, !dbg !11030
  %add.ptr254 = getelementptr inbounds i8, i8* %159, i64 %call253, !dbg !11030
  store i8* %add.ptr254, i8** %p, align 8, !dbg !11030
  br label %if.end255, !dbg !11031

if.end255:                                        ; preds = %if.then246, %if.else240
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then236
  br label %if.end257, !dbg !11032

if.end257:                                        ; preds = %if.end256, %land.lhs.true226, %for.end221
  br label %if.end258, !dbg !11033

if.end258:                                        ; preds = %if.end257, %land.lhs.true194, %land.lhs.true190, %land.lhs.true186, %land.lhs.true182, %land.lhs.true178, %land.lhs.true174, %if.end166
  %arraydecay259 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11034
  %160 = load i8*, i8** %p, align 8, !dbg !11035
  %call260 = call i64 @CopyMagickString(i8* %arraydecay259, i8* %160, i64 4096), !dbg !11036
  %arraydecay261 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11037
  call void @StripString(i8* %arraydecay261), !dbg !11038
  %arraydecay262 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11039
  %161 = load i8, i8* %arraydecay262, align 16, !dbg !11039
  %conv263 = sext i8 %161 to i32, !dbg !11039
  %cmp264 = icmp eq i32 %conv263, 0, !dbg !11041
  br i1 %cmp264, label %if.then266, label %if.end301, !dbg !11042

if.then266:                                       ; preds = %if.end258
  %162 = load i32, i32* %channel.addr, align 4, !dbg !11043
  switch i32 %162, label %sw.default298 [
    i32 1, label %sw.bb267
    i32 2, label %sw.bb269
    i32 4, label %sw.bb272
    i32 8, label %sw.bb275
    i32 32, label %sw.bb284
    i32 134217719, label %sw.bb293
  ], !dbg !11045

sw.bb267:                                         ; preds = %if.then266
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11046
  %163 = load float, float* %red, align 8, !dbg !11046
  %conv268 = fpext float %163 to double, !dbg !11048
  %mul = fmul double 0x3EF0001000100010, %conv268, !dbg !11049
  store double %mul, double* %retval, align 8, !dbg !11050
  br label %return, !dbg !11050

sw.bb269:                                         ; preds = %if.then266
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11051
  %164 = load float, float* %green, align 4, !dbg !11051
  %conv270 = fpext float %164 to double, !dbg !11052
  %mul271 = fmul double 0x3EF0001000100010, %conv270, !dbg !11053
  store double %mul271, double* %retval, align 8, !dbg !11054
  br label %return, !dbg !11054

sw.bb272:                                         ; preds = %if.then266
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11055
  %165 = load float, float* %blue, align 8, !dbg !11055
  %conv273 = fpext float %165 to double, !dbg !11056
  %mul274 = fmul double 0x3EF0001000100010, %conv273, !dbg !11057
  store double %mul274, double* %retval, align 8, !dbg !11058
  br label %return, !dbg !11058

sw.bb275:                                         ; preds = %if.then266
  call void @llvm.dbg.declare(metadata double* %alpha276, metadata !11059, metadata !DIExpression()), !dbg !11061
  %matte = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 2, !dbg !11062
  %166 = load i32, i32* %matte, align 8, !dbg !11062
  %cmp277 = icmp eq i32 %166, 0, !dbg !11064
  br i1 %cmp277, label %if.then279, label %if.end280, !dbg !11065

if.then279:                                       ; preds = %sw.bb275
  store double 1.000000e+00, double* %retval, align 8, !dbg !11066
  br label %return, !dbg !11066

if.end280:                                        ; preds = %sw.bb275
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !11067
  %167 = load float, float* %opacity, align 4, !dbg !11067
  %sub281 = fsub float 6.553500e+04, %167, !dbg !11067
  %conv282 = fpext float %sub281 to double, !dbg !11067
  %mul283 = fmul double 0x3EF0001000100010, %conv282, !dbg !11068
  store double %mul283, double* %alpha276, align 8, !dbg !11069
  %168 = load double, double* %alpha276, align 8, !dbg !11070
  store double %168, double* %retval, align 8, !dbg !11071
  br label %return, !dbg !11071

sw.bb284:                                         ; preds = %if.then266
  %169 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11072
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %169, i32 0, i32 1, !dbg !11075
  %170 = load i32, i32* %colorspace, align 4, !dbg !11075
  %cmp285 = icmp ne i32 %170, 12, !dbg !11076
  br i1 %cmp285, label %if.then287, label %if.end290, !dbg !11077

if.then287:                                       ; preds = %sw.bb284
  %171 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11078
  %172 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11080
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %172, i32 0, i32 53, !dbg !11081
  %arraydecay288 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !11080
  %call289 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %171, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1521, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay288), !dbg !11082
  store double 0.000000e+00, double* %retval, align 8, !dbg !11083
  br label %return, !dbg !11083

if.end290:                                        ; preds = %sw.bb284
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !11084
  %173 = load float, float* %index, align 8, !dbg !11084
  %conv291 = fpext float %173 to double, !dbg !11085
  %mul292 = fmul double 0x3EF0001000100010, %conv291, !dbg !11086
  store double %mul292, double* %retval, align 8, !dbg !11087
  br label %return, !dbg !11087

sw.bb293:                                         ; preds = %if.then266
  %call294 = call zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %pixel), !dbg !11088
  %conv295 = zext i16 %call294 to i32, !dbg !11088
  %conv296 = sitofp i32 %conv295 to double, !dbg !11088
  %mul297 = fmul double 0x3EF0001000100010, %conv296, !dbg !11090
  store double %mul297, double* %retval, align 8, !dbg !11091
  br label %return, !dbg !11091

sw.default298:                                    ; preds = %if.then266
  br label %sw.epilog299, !dbg !11092

sw.epilog299:                                     ; preds = %sw.default298
  %174 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11093
  %175 = load i8*, i8** %p, align 8, !dbg !11094
  %call300 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %174, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1535, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %175), !dbg !11095
  store double 0.000000e+00, double* %retval, align 8, !dbg !11096
  br label %return, !dbg !11096

if.end301:                                        ; preds = %if.end258
  %arraydecay302 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11097
  %176 = load i8, i8* %arraydecay302, align 16, !dbg !11097
  %conv303 = sext i8 %176 to i32, !dbg !11097
  switch i32 %conv303, label %sw.default791 [
    i32 65, label %sw.bb304
    i32 97, label %sw.bb304
    i32 66, label %sw.bb315
    i32 98, label %sw.bb315
    i32 67, label %sw.bb325
    i32 99, label %sw.bb325
    i32 68, label %sw.bb416
    i32 100, label %sw.bb416
    i32 71, label %sw.bb425
    i32 103, label %sw.bb425
    i32 75, label %sw.bb435
    i32 107, label %sw.bb435
    i32 72, label %sw.bb461
    i32 104, label %sw.bb461
    i32 73, label %sw.bb481
    i32 105, label %sw.bb481
    i32 74, label %sw.bb549
    i32 106, label %sw.bb549
    i32 76, label %sw.bb557
    i32 108, label %sw.bb557
    i32 77, label %sw.bb609
    i32 109, label %sw.bb609
    i32 78, label %sw.bb643
    i32 110, label %sw.bb643
    i32 79, label %sw.bb653
    i32 111, label %sw.bb653
    i32 80, label %sw.bb663
    i32 112, label %sw.bb663
    i32 82, label %sw.bb697
    i32 114, label %sw.bb697
    i32 83, label %sw.bb721
    i32 115, label %sw.bb721
    i32 84, label %sw.bb753
    i32 116, label %sw.bb753
    i32 87, label %sw.bb763
    i32 119, label %sw.bb763
    i32 89, label %sw.bb771
    i32 121, label %sw.bb771
    i32 90, label %sw.bb781
    i32 122, label %sw.bb781
  ], !dbg !11098

sw.bb304:                                         ; preds = %if.end301, %if.end301
  %arraydecay305 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11099
  %call306 = call i32 @LocaleCompare(i8* %arraydecay305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)), !dbg !11103
  %cmp307 = icmp eq i32 %call306, 0, !dbg !11104
  br i1 %cmp307, label %if.then309, label %if.end314, !dbg !11105

if.then309:                                       ; preds = %sw.bb304
  %opacity310 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !11106
  %177 = load float, float* %opacity310, align 4, !dbg !11106
  %sub311 = fsub float 6.553500e+04, %177, !dbg !11106
  %conv312 = fpext float %sub311 to double, !dbg !11106
  %mul313 = fmul double 0x3EF0001000100010, %conv312, !dbg !11107
  store double %mul313, double* %retval, align 8, !dbg !11108
  br label %return, !dbg !11108

if.end314:                                        ; preds = %sw.bb304
  br label %sw.epilog792, !dbg !11109

sw.bb315:                                         ; preds = %if.end301, %if.end301
  %arraydecay316 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11110
  %call317 = call i32 @LocaleCompare(i8* %arraydecay316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70, i64 0, i64 0)), !dbg !11113
  %cmp318 = icmp eq i32 %call317, 0, !dbg !11114
  br i1 %cmp318, label %if.then320, label %if.end324, !dbg !11115

if.then320:                                       ; preds = %sw.bb315
  %blue321 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11116
  %178 = load float, float* %blue321, align 8, !dbg !11116
  %conv322 = fpext float %178 to double, !dbg !11117
  %mul323 = fmul double 0x3EF0001000100010, %conv322, !dbg !11118
  store double %mul323, double* %retval, align 8, !dbg !11119
  br label %return, !dbg !11119

if.end324:                                        ; preds = %sw.bb315
  br label %sw.epilog792, !dbg !11120

sw.bb325:                                         ; preds = %if.end301, %if.end301
  %arraydecay326 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11121
  %call327 = call i32 @LocaleNCompare(i8* %arraydecay326, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.158, i64 0, i64 0), i64 7), !dbg !11124
  %cmp328 = icmp eq i32 %call327, 0, !dbg !11125
  br i1 %cmp328, label %if.then330, label %if.end406, !dbg !11126

if.then330:                                       ; preds = %sw.bb325
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %channel_info, metadata !11127, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11130, metadata !DIExpression()), !dbg !11131
  %arraydecay331 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11132
  %add.ptr332 = getelementptr inbounds i8, i8* %arraydecay331, i64 7, !dbg !11133
  %call333 = call i32 @ParseGeometry(i8* %add.ptr332, %struct._GeometryInfo* %channel_info), !dbg !11134
  store i32 %call333, i32* %flags, align 4, !dbg !11135
  %179 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11136
  %colorspace334 = getelementptr inbounds %struct._Image, %struct._Image* %179, i32 0, i32 1, !dbg !11138
  %180 = load i32, i32* %colorspace334, align 4, !dbg !11138
  %cmp335 = icmp eq i32 %180, 12, !dbg !11139
  br i1 %cmp335, label %if.then337, label %if.end369, !dbg !11140

if.then337:                                       ; preds = %if.then330
  %181 = load i32, i32* %channel.addr, align 4, !dbg !11141
  switch i32 %181, label %sw.default368 [
    i32 1, label %sw.bb338
    i32 2, label %sw.bb344
    i32 4, label %sw.bb350
    i32 32, label %sw.bb356
    i32 8, label %sw.bb362
  ], !dbg !11142

sw.bb338:                                         ; preds = %if.then337
  %182 = load i32, i32* %flags, align 4, !dbg !11143
  %and339 = and i32 %182, 4, !dbg !11147
  %cmp340 = icmp eq i32 %and339, 0, !dbg !11148
  br i1 %cmp340, label %if.then342, label %if.end343, !dbg !11149

if.then342:                                       ; preds = %sw.bb338
  store double 0.000000e+00, double* %retval, align 8, !dbg !11150
  br label %return, !dbg !11150

if.end343:                                        ; preds = %sw.bb338
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 0, !dbg !11151
  %183 = load double, double* %rho, align 8, !dbg !11151
  store double %183, double* %retval, align 8, !dbg !11152
  br label %return, !dbg !11152

sw.bb344:                                         ; preds = %if.then337
  %184 = load i32, i32* %flags, align 4, !dbg !11153
  %and345 = and i32 %184, 8, !dbg !11156
  %cmp346 = icmp eq i32 %and345, 0, !dbg !11157
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !11158

if.then348:                                       ; preds = %sw.bb344
  store double 0.000000e+00, double* %retval, align 8, !dbg !11159
  br label %return, !dbg !11159

if.end349:                                        ; preds = %sw.bb344
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 1, !dbg !11160
  %185 = load double, double* %sigma, align 8, !dbg !11160
  store double %185, double* %retval, align 8, !dbg !11161
  br label %return, !dbg !11161

sw.bb350:                                         ; preds = %if.then337
  %186 = load i32, i32* %flags, align 4, !dbg !11162
  %and351 = and i32 %186, 1, !dbg !11165
  %cmp352 = icmp eq i32 %and351, 0, !dbg !11166
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !11167

if.then354:                                       ; preds = %sw.bb350
  store double 0.000000e+00, double* %retval, align 8, !dbg !11168
  br label %return, !dbg !11168

if.end355:                                        ; preds = %sw.bb350
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 2, !dbg !11169
  %187 = load double, double* %xi, align 8, !dbg !11169
  store double %187, double* %retval, align 8, !dbg !11170
  br label %return, !dbg !11170

sw.bb356:                                         ; preds = %if.then337
  %188 = load i32, i32* %flags, align 4, !dbg !11171
  %and357 = and i32 %188, 2, !dbg !11174
  %cmp358 = icmp eq i32 %and357, 0, !dbg !11175
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !11176

if.then360:                                       ; preds = %sw.bb356
  store double 0.000000e+00, double* %retval, align 8, !dbg !11177
  br label %return, !dbg !11177

if.end361:                                        ; preds = %sw.bb356
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 3, !dbg !11178
  %189 = load double, double* %psi, align 8, !dbg !11178
  store double %189, double* %retval, align 8, !dbg !11179
  br label %return, !dbg !11179

sw.bb362:                                         ; preds = %if.then337
  %190 = load i32, i32* %flags, align 4, !dbg !11180
  %and363 = and i32 %190, 16, !dbg !11183
  %cmp364 = icmp eq i32 %and363, 0, !dbg !11184
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !11185

if.then366:                                       ; preds = %sw.bb362
  store double 0.000000e+00, double* %retval, align 8, !dbg !11186
  br label %return, !dbg !11186

if.end367:                                        ; preds = %sw.bb362
  %chi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 4, !dbg !11187
  %191 = load double, double* %chi, align 8, !dbg !11187
  store double %191, double* %retval, align 8, !dbg !11188
  br label %return, !dbg !11188

sw.default368:                                    ; preds = %if.then337
  store double 0.000000e+00, double* %retval, align 8, !dbg !11189
  br label %return, !dbg !11189

if.end369:                                        ; preds = %if.then330
  %192 = load i32, i32* %channel.addr, align 4, !dbg !11190
  switch i32 %192, label %sw.default405 [
    i32 1, label %sw.bb370
    i32 2, label %sw.bb377
    i32 4, label %sw.bb384
    i32 8, label %sw.bb391
    i32 32, label %sw.bb398
  ], !dbg !11191

sw.bb370:                                         ; preds = %if.end369
  %193 = load i32, i32* %flags, align 4, !dbg !11192
  %and371 = and i32 %193, 4, !dbg !11196
  %cmp372 = icmp eq i32 %and371, 0, !dbg !11197
  br i1 %cmp372, label %if.then374, label %if.end375, !dbg !11198

if.then374:                                       ; preds = %sw.bb370
  store double 0.000000e+00, double* %retval, align 8, !dbg !11199
  br label %return, !dbg !11199

if.end375:                                        ; preds = %sw.bb370
  %rho376 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 0, !dbg !11200
  %194 = load double, double* %rho376, align 8, !dbg !11200
  store double %194, double* %retval, align 8, !dbg !11201
  br label %return, !dbg !11201

sw.bb377:                                         ; preds = %if.end369
  %195 = load i32, i32* %flags, align 4, !dbg !11202
  %and378 = and i32 %195, 8, !dbg !11205
  %cmp379 = icmp eq i32 %and378, 0, !dbg !11206
  br i1 %cmp379, label %if.then381, label %if.end382, !dbg !11207

if.then381:                                       ; preds = %sw.bb377
  store double 0.000000e+00, double* %retval, align 8, !dbg !11208
  br label %return, !dbg !11208

if.end382:                                        ; preds = %sw.bb377
  %sigma383 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 1, !dbg !11209
  %196 = load double, double* %sigma383, align 8, !dbg !11209
  store double %196, double* %retval, align 8, !dbg !11210
  br label %return, !dbg !11210

sw.bb384:                                         ; preds = %if.end369
  %197 = load i32, i32* %flags, align 4, !dbg !11211
  %and385 = and i32 %197, 1, !dbg !11214
  %cmp386 = icmp eq i32 %and385, 0, !dbg !11215
  br i1 %cmp386, label %if.then388, label %if.end389, !dbg !11216

if.then388:                                       ; preds = %sw.bb384
  store double 0.000000e+00, double* %retval, align 8, !dbg !11217
  br label %return, !dbg !11217

if.end389:                                        ; preds = %sw.bb384
  %xi390 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 2, !dbg !11218
  %198 = load double, double* %xi390, align 8, !dbg !11218
  store double %198, double* %retval, align 8, !dbg !11219
  br label %return, !dbg !11219

sw.bb391:                                         ; preds = %if.end369
  %199 = load i32, i32* %flags, align 4, !dbg !11220
  %and392 = and i32 %199, 2, !dbg !11223
  %cmp393 = icmp eq i32 %and392, 0, !dbg !11224
  br i1 %cmp393, label %if.then395, label %if.end396, !dbg !11225

if.then395:                                       ; preds = %sw.bb391
  store double 0.000000e+00, double* %retval, align 8, !dbg !11226
  br label %return, !dbg !11226

if.end396:                                        ; preds = %sw.bb391
  %psi397 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 3, !dbg !11227
  %200 = load double, double* %psi397, align 8, !dbg !11227
  store double %200, double* %retval, align 8, !dbg !11228
  br label %return, !dbg !11228

sw.bb398:                                         ; preds = %if.end369
  %201 = load i32, i32* %flags, align 4, !dbg !11229
  %and399 = and i32 %201, 16, !dbg !11232
  %cmp400 = icmp eq i32 %and399, 0, !dbg !11233
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !11234

if.then402:                                       ; preds = %sw.bb398
  store double 0.000000e+00, double* %retval, align 8, !dbg !11235
  br label %return, !dbg !11235

if.end403:                                        ; preds = %sw.bb398
  %chi404 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %channel_info, i32 0, i32 4, !dbg !11236
  %202 = load double, double* %chi404, align 8, !dbg !11236
  store double %202, double* %retval, align 8, !dbg !11237
  br label %return, !dbg !11237

sw.default405:                                    ; preds = %if.end369
  store double 0.000000e+00, double* %retval, align 8, !dbg !11238
  br label %return, !dbg !11238

if.end406:                                        ; preds = %sw.bb325
  %arraydecay407 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11239
  %call408 = call i32 @LocaleCompare(i8* %arraydecay407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0)), !dbg !11241
  %cmp409 = icmp eq i32 %call408, 0, !dbg !11242
  br i1 %cmp409, label %if.then411, label %if.end415, !dbg !11243

if.then411:                                       ; preds = %if.end406
  %red412 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11244
  %203 = load float, float* %red412, align 8, !dbg !11244
  %conv413 = fpext float %203 to double, !dbg !11245
  %mul414 = fmul double 0x3EF0001000100010, %conv413, !dbg !11246
  store double %mul414, double* %retval, align 8, !dbg !11247
  br label %return, !dbg !11247

if.end415:                                        ; preds = %if.end406
  br label %sw.epilog792, !dbg !11248

sw.bb416:                                         ; preds = %if.end301, %if.end301
  %arraydecay417 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11249
  %call418 = call i32 @LocaleNCompare(i8* %arraydecay417, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i64 0, i64 0), i64 5), !dbg !11252
  %cmp419 = icmp eq i32 %call418, 0, !dbg !11253
  br i1 %cmp419, label %if.then421, label %if.end424, !dbg !11254

if.then421:                                       ; preds = %sw.bb416
  %204 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11255
  %205 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11256
  %206 = load i32, i32* %channel.addr, align 4, !dbg !11257
  %arraydecay422 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11258
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11259
  %call423 = call double @FxChannelStatistics(%struct._FxInfo* %204, %struct._Image* %205, i32 %206, i8* %arraydecay422, %struct._ExceptionInfo* %207), !dbg !11260
  store double %call423, double* %retval, align 8, !dbg !11261
  br label %return, !dbg !11261

if.end424:                                        ; preds = %sw.bb416
  br label %sw.epilog792, !dbg !11262

sw.bb425:                                         ; preds = %if.end301, %if.end301
  %arraydecay426 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11263
  %call427 = call i32 @LocaleCompare(i8* %arraydecay426, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i64 0, i64 0)), !dbg !11266
  %cmp428 = icmp eq i32 %call427, 0, !dbg !11267
  br i1 %cmp428, label %if.then430, label %if.end434, !dbg !11268

if.then430:                                       ; preds = %sw.bb425
  %green431 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11269
  %208 = load float, float* %green431, align 4, !dbg !11269
  %conv432 = fpext float %208 to double, !dbg !11270
  %mul433 = fmul double 0x3EF0001000100010, %conv432, !dbg !11271
  store double %mul433, double* %retval, align 8, !dbg !11272
  br label %return, !dbg !11272

if.end434:                                        ; preds = %sw.bb425
  br label %sw.epilog792, !dbg !11273

sw.bb435:                                         ; preds = %if.end301, %if.end301
  %arraydecay436 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11274
  %call437 = call i32 @LocaleNCompare(i8* %arraydecay436, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0), i64 8), !dbg !11277
  %cmp438 = icmp eq i32 %call437, 0, !dbg !11278
  br i1 %cmp438, label %if.then440, label %if.end443, !dbg !11279

if.then440:                                       ; preds = %sw.bb435
  %209 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11280
  %210 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11281
  %211 = load i32, i32* %channel.addr, align 4, !dbg !11282
  %arraydecay441 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11283
  %212 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11284
  %call442 = call double @FxChannelStatistics(%struct._FxInfo* %209, %struct._Image* %210, i32 %211, i8* %arraydecay441, %struct._ExceptionInfo* %212), !dbg !11285
  store double %call442, double* %retval, align 8, !dbg !11286
  br label %return, !dbg !11286

if.end443:                                        ; preds = %sw.bb435
  %arraydecay444 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11287
  %call445 = call i32 @LocaleCompare(i8* %arraydecay444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i64 0, i64 0)), !dbg !11289
  %cmp446 = icmp eq i32 %call445, 0, !dbg !11290
  br i1 %cmp446, label %if.then448, label %if.end460, !dbg !11291

if.then448:                                       ; preds = %if.end443
  %213 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11292
  %colorspace449 = getelementptr inbounds %struct._Image, %struct._Image* %213, i32 0, i32 1, !dbg !11295
  %214 = load i32, i32* %colorspace449, align 4, !dbg !11295
  %cmp450 = icmp ne i32 %214, 12, !dbg !11296
  br i1 %cmp450, label %if.then452, label %if.end456, !dbg !11297

if.then452:                                       ; preds = %if.then448
  %215 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11298
  %216 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11300
  %filename453 = getelementptr inbounds %struct._Image, %struct._Image* %216, i32 0, i32 53, !dbg !11301
  %arraydecay454 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename453, i64 0, i64 0, !dbg !11300
  %call455 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %215, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1666, i32 410, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay454), !dbg !11302
  store double 0.000000e+00, double* %retval, align 8, !dbg !11303
  br label %return, !dbg !11303

if.end456:                                        ; preds = %if.then448
  %index457 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !11304
  %217 = load float, float* %index457, align 8, !dbg !11304
  %conv458 = fpext float %217 to double, !dbg !11305
  %mul459 = fmul double 0x3EF0001000100010, %conv458, !dbg !11306
  store double %mul459, double* %retval, align 8, !dbg !11307
  br label %return, !dbg !11307

if.end460:                                        ; preds = %if.end443
  br label %sw.epilog792, !dbg !11308

sw.bb461:                                         ; preds = %if.end301, %if.end301
  %arraydecay462 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11309
  %call463 = call i32 @LocaleCompare(i8* %arraydecay462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i64 0, i64 0)), !dbg !11312
  %cmp464 = icmp eq i32 %call463, 0, !dbg !11313
  br i1 %cmp464, label %if.then466, label %if.end468, !dbg !11314

if.then466:                                       ; preds = %sw.bb461
  %218 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11315
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %218, i32 0, i32 8, !dbg !11316
  %219 = load i64, i64* %rows, align 8, !dbg !11316
  %conv467 = uitofp i64 %219 to double, !dbg !11317
  store double %conv467, double* %retval, align 8, !dbg !11318
  br label %return, !dbg !11318

if.end468:                                        ; preds = %sw.bb461
  %arraydecay469 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11319
  %call470 = call i32 @LocaleCompare(i8* %arraydecay469, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)), !dbg !11321
  %cmp471 = icmp eq i32 %call470, 0, !dbg !11322
  br i1 %cmp471, label %if.then473, label %if.end480, !dbg !11323

if.then473:                                       ; preds = %if.end468
  call void @llvm.dbg.declare(metadata double* %hue, metadata !11324, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.declare(metadata double* %lightness, metadata !11327, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !11329, metadata !DIExpression()), !dbg !11330
  %red474 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11331
  %220 = load float, float* %red474, align 8, !dbg !11331
  %call475 = call zeroext i16 @ClampToQuantum(float %220), !dbg !11332
  %green476 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11333
  %221 = load float, float* %green476, align 4, !dbg !11333
  %call477 = call zeroext i16 @ClampToQuantum(float %221), !dbg !11334
  %blue478 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11335
  %222 = load float, float* %blue478, align 8, !dbg !11335
  %call479 = call zeroext i16 @ClampToQuantum(float %222), !dbg !11336
  call void @ConvertRGBToHSL(i16 zeroext %call475, i16 zeroext %call477, i16 zeroext %call479, double* %hue, double* %saturation, double* %lightness), !dbg !11337
  %223 = load double, double* %hue, align 8, !dbg !11338
  store double %223, double* %retval, align 8, !dbg !11339
  br label %return, !dbg !11339

if.end480:                                        ; preds = %if.end468
  br label %sw.epilog792, !dbg !11340

sw.bb481:                                         ; preds = %if.end301, %if.end301
  %arraydecay482 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11341
  %call483 = call i32 @LocaleCompare(i8* %arraydecay482, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i64 0, i64 0)), !dbg !11344
  %cmp484 = icmp eq i32 %call483, 0, !dbg !11345
  br i1 %cmp484, label %if.then515, label %lor.lhs.false, !dbg !11346

lor.lhs.false:                                    ; preds = %sw.bb481
  %arraydecay486 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11347
  %call487 = call i32 @LocaleCompare(i8* %arraydecay486, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i64 0, i64 0)), !dbg !11348
  %cmp488 = icmp eq i32 %call487, 0, !dbg !11349
  br i1 %cmp488, label %if.then515, label %lor.lhs.false490, !dbg !11350

lor.lhs.false490:                                 ; preds = %lor.lhs.false
  %arraydecay491 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11351
  %call492 = call i32 @LocaleCompare(i8* %arraydecay491, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.163, i64 0, i64 0)), !dbg !11352
  %cmp493 = icmp eq i32 %call492, 0, !dbg !11353
  br i1 %cmp493, label %if.then515, label %lor.lhs.false495, !dbg !11354

lor.lhs.false495:                                 ; preds = %lor.lhs.false490
  %arraydecay496 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11355
  %call497 = call i32 @LocaleCompare(i8* %arraydecay496, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.164, i64 0, i64 0)), !dbg !11356
  %cmp498 = icmp eq i32 %call497, 0, !dbg !11357
  br i1 %cmp498, label %if.then515, label %lor.lhs.false500, !dbg !11358

lor.lhs.false500:                                 ; preds = %lor.lhs.false495
  %arraydecay501 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11359
  %call502 = call i32 @LocaleCompare(i8* %arraydecay501, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i64 0, i64 0)), !dbg !11360
  %cmp503 = icmp eq i32 %call502, 0, !dbg !11361
  br i1 %cmp503, label %if.then515, label %lor.lhs.false505, !dbg !11362

lor.lhs.false505:                                 ; preds = %lor.lhs.false500
  %arraydecay506 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11363
  %call507 = call i32 @LocaleCompare(i8* %arraydecay506, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.166, i64 0, i64 0)), !dbg !11364
  %cmp508 = icmp eq i32 %call507, 0, !dbg !11365
  br i1 %cmp508, label %if.then515, label %lor.lhs.false510, !dbg !11366

lor.lhs.false510:                                 ; preds = %lor.lhs.false505
  %arraydecay511 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11367
  %call512 = call i32 @LocaleCompare(i8* %arraydecay511, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.167, i64 0, i64 0)), !dbg !11368
  %cmp513 = icmp eq i32 %call512, 0, !dbg !11369
  br i1 %cmp513, label %if.then515, label %if.end519, !dbg !11370

if.then515:                                       ; preds = %lor.lhs.false510, %lor.lhs.false505, %lor.lhs.false500, %lor.lhs.false495, %lor.lhs.false490, %lor.lhs.false, %sw.bb481
  %224 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11371
  %225 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11372
  %226 = load i32, i32* %channel.addr, align 4, !dbg !11373
  %arraydecay516 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11374
  %add.ptr517 = getelementptr inbounds i8, i8* %arraydecay516, i64 6, !dbg !11375
  %227 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11376
  %call518 = call double @FxChannelStatistics(%struct._FxInfo* %224, %struct._Image* %225, i32 %226, i8* %add.ptr517, %struct._ExceptionInfo* %227), !dbg !11377
  store double %call518, double* %retval, align 8, !dbg !11378
  br label %return, !dbg !11378

if.end519:                                        ; preds = %lor.lhs.false510
  %arraydecay520 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11379
  %call521 = call i32 @LocaleCompare(i8* %arraydecay520, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i64 0, i64 0)), !dbg !11381
  %cmp522 = icmp eq i32 %call521, 0, !dbg !11382
  br i1 %cmp522, label %if.then524, label %if.end525, !dbg !11383

if.then524:                                       ; preds = %if.end519
  %228 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11384
  %x_resolution = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 24, !dbg !11385
  %229 = load double, double* %x_resolution, align 8, !dbg !11385
  store double %229, double* %retval, align 8, !dbg !11386
  br label %return, !dbg !11386

if.end525:                                        ; preds = %if.end519
  %arraydecay526 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11387
  %call527 = call i32 @LocaleCompare(i8* %arraydecay526, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.169, i64 0, i64 0)), !dbg !11389
  %cmp528 = icmp eq i32 %call527, 0, !dbg !11390
  br i1 %cmp528, label %if.then530, label %if.end531, !dbg !11391

if.then530:                                       ; preds = %if.end525
  %230 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11392
  %y_resolution = getelementptr inbounds %struct._Image, %struct._Image* %230, i32 0, i32 25, !dbg !11393
  %231 = load double, double* %y_resolution, align 8, !dbg !11393
  store double %231, double* %retval, align 8, !dbg !11394
  br label %return, !dbg !11394

if.end531:                                        ; preds = %if.end525
  %arraydecay532 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11395
  %call533 = call i32 @LocaleCompare(i8* %arraydecay532, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i64 0, i64 0)), !dbg !11397
  %cmp534 = icmp eq i32 %call533, 0, !dbg !11398
  br i1 %cmp534, label %if.then536, label %if.end541, !dbg !11399

if.then536:                                       ; preds = %if.end531
  %call537 = call zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %pixel), !dbg !11400
  %conv538 = zext i16 %call537 to i32, !dbg !11400
  %conv539 = sitofp i32 %conv538 to double, !dbg !11400
  %mul540 = fmul double 0x3EF0001000100010, %conv539, !dbg !11401
  store double %mul540, double* %retval, align 8, !dbg !11402
  br label %return, !dbg !11402

if.end541:                                        ; preds = %if.end531
  %arraydecay542 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11403
  %call543 = call i32 @LocaleCompare(i8* %arraydecay542, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0)), !dbg !11405
  %cmp544 = icmp eq i32 %call543, 0, !dbg !11406
  br i1 %cmp544, label %if.then546, label %if.end548, !dbg !11407

if.then546:                                       ; preds = %if.end541
  %232 = load i64, i64* %x.addr, align 8, !dbg !11408
  %conv547 = sitofp i64 %232 to double, !dbg !11409
  store double %conv547, double* %retval, align 8, !dbg !11410
  br label %return, !dbg !11410

if.end548:                                        ; preds = %if.end541
  br label %sw.epilog792, !dbg !11411

sw.bb549:                                         ; preds = %if.end301, %if.end301
  %arraydecay550 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11412
  %call551 = call i32 @LocaleCompare(i8* %arraydecay550, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i64 0, i64 0)), !dbg !11415
  %cmp552 = icmp eq i32 %call551, 0, !dbg !11416
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !11417

if.then554:                                       ; preds = %sw.bb549
  %233 = load i64, i64* %y.addr, align 8, !dbg !11418
  %conv555 = sitofp i64 %233 to double, !dbg !11419
  store double %conv555, double* %retval, align 8, !dbg !11420
  br label %return, !dbg !11420

if.end556:                                        ; preds = %sw.bb549
  br label %sw.epilog792, !dbg !11421

sw.bb557:                                         ; preds = %if.end301, %if.end301
  %arraydecay558 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11422
  %call559 = call i32 @LocaleCompare(i8* %arraydecay558, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i64 0, i64 0)), !dbg !11425
  %cmp560 = icmp eq i32 %call559, 0, !dbg !11426
  br i1 %cmp560, label %if.then562, label %if.end572, !dbg !11427

if.then562:                                       ; preds = %sw.bb557
  call void @llvm.dbg.declare(metadata double* %hue563, metadata !11428, metadata !DIExpression()), !dbg !11430
  call void @llvm.dbg.declare(metadata double* %lightness564, metadata !11431, metadata !DIExpression()), !dbg !11432
  call void @llvm.dbg.declare(metadata double* %saturation565, metadata !11433, metadata !DIExpression()), !dbg !11434
  %red566 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11435
  %234 = load float, float* %red566, align 8, !dbg !11435
  %call567 = call zeroext i16 @ClampToQuantum(float %234), !dbg !11436
  %green568 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11437
  %235 = load float, float* %green568, align 4, !dbg !11437
  %call569 = call zeroext i16 @ClampToQuantum(float %235), !dbg !11438
  %blue570 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11439
  %236 = load float, float* %blue570, align 8, !dbg !11439
  %call571 = call zeroext i16 @ClampToQuantum(float %236), !dbg !11440
  call void @ConvertRGBToHSL(i16 zeroext %call567, i16 zeroext %call569, i16 zeroext %call571, double* %hue563, double* %saturation565, double* %lightness564), !dbg !11441
  %237 = load double, double* %lightness564, align 8, !dbg !11442
  store double %237, double* %retval, align 8, !dbg !11443
  br label %return, !dbg !11443

if.end572:                                        ; preds = %sw.bb557
  %arraydecay573 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11444
  %call574 = call i32 @LocaleCompare(i8* %arraydecay573, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0)), !dbg !11446
  %cmp575 = icmp eq i32 %call574, 0, !dbg !11447
  br i1 %cmp575, label %if.then577, label %if.end590, !dbg !11448

if.then577:                                       ; preds = %if.end572
  call void @llvm.dbg.declare(metadata double* %luma, metadata !11449, metadata !DIExpression()), !dbg !11451
  %red578 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11452
  %238 = load float, float* %red578, align 8, !dbg !11452
  %conv579 = fpext float %238 to double, !dbg !11453
  %mul580 = fmul double 2.126560e-01, %conv579, !dbg !11454
  %green581 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11455
  %239 = load float, float* %green581, align 4, !dbg !11455
  %conv582 = fpext float %239 to double, !dbg !11456
  %mul583 = fmul double 0x3FE6E29307AF20EA, %conv582, !dbg !11457
  %add584 = fadd double %mul580, %mul583, !dbg !11458
  %blue585 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11459
  %240 = load float, float* %blue585, align 8, !dbg !11459
  %conv586 = fpext float %240 to double, !dbg !11460
  %mul587 = fmul double 7.218600e-02, %conv586, !dbg !11461
  %add588 = fadd double %add584, %mul587, !dbg !11462
  store double %add588, double* %luma, align 8, !dbg !11463
  %241 = load double, double* %luma, align 8, !dbg !11464
  %mul589 = fmul double 0x3EF0001000100010, %241, !dbg !11465
  store double %mul589, double* %retval, align 8, !dbg !11466
  br label %return, !dbg !11466

if.end590:                                        ; preds = %if.end572
  %arraydecay591 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11467
  %call592 = call i32 @LocaleCompare(i8* %arraydecay591, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156, i64 0, i64 0)), !dbg !11469
  %cmp593 = icmp eq i32 %call592, 0, !dbg !11470
  br i1 %cmp593, label %if.then595, label %if.end608, !dbg !11471

if.then595:                                       ; preds = %if.end590
  call void @llvm.dbg.declare(metadata double* %luminance, metadata !11472, metadata !DIExpression()), !dbg !11474
  %red596 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11475
  %242 = load float, float* %red596, align 8, !dbg !11475
  %conv597 = fpext float %242 to double, !dbg !11476
  %mul598 = fmul double 2.126560e-01, %conv597, !dbg !11477
  %green599 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11478
  %243 = load float, float* %green599, align 4, !dbg !11478
  %conv600 = fpext float %243 to double, !dbg !11479
  %mul601 = fmul double 0x3FE6E29307AF20EA, %conv600, !dbg !11480
  %add602 = fadd double %mul598, %mul601, !dbg !11481
  %blue603 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11482
  %244 = load float, float* %blue603, align 8, !dbg !11482
  %conv604 = fpext float %244 to double, !dbg !11483
  %mul605 = fmul double 7.218600e-02, %conv604, !dbg !11484
  %add606 = fadd double %add602, %mul605, !dbg !11485
  store double %add606, double* %luminance, align 8, !dbg !11486
  %245 = load double, double* %luminance, align 8, !dbg !11487
  %mul607 = fmul double 0x3EF0001000100010, %245, !dbg !11488
  store double %mul607, double* %retval, align 8, !dbg !11489
  br label %return, !dbg !11489

if.end608:                                        ; preds = %if.end590
  br label %sw.epilog792, !dbg !11490

sw.bb609:                                         ; preds = %if.end301, %if.end301
  %arraydecay610 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11491
  %call611 = call i32 @LocaleNCompare(i8* %arraydecay610, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), i64 6), !dbg !11494
  %cmp612 = icmp eq i32 %call611, 0, !dbg !11495
  br i1 %cmp612, label %if.then614, label %if.end617, !dbg !11496

if.then614:                                       ; preds = %sw.bb609
  %246 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11497
  %247 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11498
  %248 = load i32, i32* %channel.addr, align 4, !dbg !11499
  %arraydecay615 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11500
  %249 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11501
  %call616 = call double @FxChannelStatistics(%struct._FxInfo* %246, %struct._Image* %247, i32 %248, i8* %arraydecay615, %struct._ExceptionInfo* %249), !dbg !11502
  store double %call616, double* %retval, align 8, !dbg !11503
  br label %return, !dbg !11503

if.end617:                                        ; preds = %sw.bb609
  %arraydecay618 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11504
  %call619 = call i32 @LocaleNCompare(i8* %arraydecay618, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i64 0, i64 0), i64 4), !dbg !11506
  %cmp620 = icmp eq i32 %call619, 0, !dbg !11507
  br i1 %cmp620, label %if.then622, label %if.end625, !dbg !11508

if.then622:                                       ; preds = %if.end617
  %250 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11509
  %251 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11510
  %252 = load i32, i32* %channel.addr, align 4, !dbg !11511
  %arraydecay623 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11512
  %253 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11513
  %call624 = call double @FxChannelStatistics(%struct._FxInfo* %250, %struct._Image* %251, i32 %252, i8* %arraydecay623, %struct._ExceptionInfo* %253), !dbg !11514
  store double %call624, double* %retval, align 8, !dbg !11515
  br label %return, !dbg !11515

if.end625:                                        ; preds = %if.end617
  %arraydecay626 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11516
  %call627 = call i32 @LocaleNCompare(i8* %arraydecay626, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0), i64 6), !dbg !11518
  %cmp628 = icmp eq i32 %call627, 0, !dbg !11519
  br i1 %cmp628, label %if.then630, label %if.end633, !dbg !11520

if.then630:                                       ; preds = %if.end625
  %254 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11521
  %255 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11522
  %256 = load i32, i32* %channel.addr, align 4, !dbg !11523
  %arraydecay631 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11524
  %257 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11525
  %call632 = call double @FxChannelStatistics(%struct._FxInfo* %254, %struct._Image* %255, i32 %256, i8* %arraydecay631, %struct._ExceptionInfo* %257), !dbg !11526
  store double %call632, double* %retval, align 8, !dbg !11527
  br label %return, !dbg !11527

if.end633:                                        ; preds = %if.end625
  %arraydecay634 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11528
  %call635 = call i32 @LocaleCompare(i8* %arraydecay634, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116, i64 0, i64 0)), !dbg !11530
  %cmp636 = icmp eq i32 %call635, 0, !dbg !11531
  br i1 %cmp636, label %if.then638, label %if.end642, !dbg !11532

if.then638:                                       ; preds = %if.end633
  %blue639 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11533
  %258 = load float, float* %blue639, align 8, !dbg !11533
  %conv640 = fpext float %258 to double, !dbg !11534
  %mul641 = fmul double 0x3EF0001000100010, %conv640, !dbg !11535
  store double %mul641, double* %retval, align 8, !dbg !11536
  br label %return, !dbg !11536

if.end642:                                        ; preds = %if.end633
  br label %sw.epilog792, !dbg !11537

sw.bb643:                                         ; preds = %if.end301, %if.end301
  %arraydecay644 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11538
  %call645 = call i32 @LocaleCompare(i8* %arraydecay644, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)), !dbg !11541
  %cmp646 = icmp eq i32 %call645, 0, !dbg !11542
  br i1 %cmp646, label %if.then648, label %if.end652, !dbg !11543

if.then648:                                       ; preds = %sw.bb643
  %259 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11544
  %images649 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %259, i32 0, i32 0, !dbg !11545
  %260 = load %struct._Image*, %struct._Image** %images649, align 8, !dbg !11545
  %call650 = call i64 @GetImageListLength(%struct._Image* %260), !dbg !11546
  %conv651 = uitofp i64 %call650 to double, !dbg !11547
  store double %conv651, double* %retval, align 8, !dbg !11548
  br label %return, !dbg !11548

if.end652:                                        ; preds = %sw.bb643
  br label %sw.epilog792, !dbg !11549

sw.bb653:                                         ; preds = %if.end301, %if.end301
  %arraydecay654 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11550
  %call655 = call i32 @LocaleCompare(i8* %arraydecay654, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0)), !dbg !11553
  %cmp656 = icmp eq i32 %call655, 0, !dbg !11554
  br i1 %cmp656, label %if.then658, label %if.end662, !dbg !11555

if.then658:                                       ; preds = %sw.bb653
  %opacity659 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !11556
  %261 = load float, float* %opacity659, align 4, !dbg !11556
  %conv660 = fpext float %261 to double, !dbg !11557
  %mul661 = fmul double 0x3EF0001000100010, %conv660, !dbg !11558
  store double %mul661, double* %retval, align 8, !dbg !11559
  br label %return, !dbg !11559

if.end662:                                        ; preds = %sw.bb653
  br label %sw.epilog792, !dbg !11560

sw.bb663:                                         ; preds = %if.end301, %if.end301
  %arraydecay664 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11561
  %call665 = call i32 @LocaleCompare(i8* %arraydecay664, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171, i64 0, i64 0)), !dbg !11564
  %cmp666 = icmp eq i32 %call665, 0, !dbg !11565
  br i1 %cmp666, label %if.then668, label %if.end670, !dbg !11566

if.then668:                                       ; preds = %sw.bb663
  %262 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11567
  %page = getelementptr inbounds %struct._Image, %struct._Image* %262, i32 0, i32 26, !dbg !11568
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 1, !dbg !11569
  %263 = load i64, i64* %height, align 8, !dbg !11569
  %conv669 = uitofp i64 %263 to double, !dbg !11570
  store double %conv669, double* %retval, align 8, !dbg !11571
  br label %return, !dbg !11571

if.end670:                                        ; preds = %sw.bb663
  %arraydecay671 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11572
  %call672 = call i32 @LocaleCompare(i8* %arraydecay671, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i64 0, i64 0)), !dbg !11574
  %cmp673 = icmp eq i32 %call672, 0, !dbg !11575
  br i1 %cmp673, label %if.then675, label %if.end678, !dbg !11576

if.then675:                                       ; preds = %if.end670
  %264 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11577
  %page676 = getelementptr inbounds %struct._Image, %struct._Image* %264, i32 0, i32 26, !dbg !11578
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page676, i32 0, i32 0, !dbg !11579
  %265 = load i64, i64* %width, align 8, !dbg !11579
  %conv677 = uitofp i64 %265 to double, !dbg !11580
  store double %conv677, double* %retval, align 8, !dbg !11581
  br label %return, !dbg !11581

if.end678:                                        ; preds = %if.end670
  %arraydecay679 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11582
  %call680 = call i32 @LocaleCompare(i8* %arraydecay679, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i64 0, i64 0)), !dbg !11584
  %cmp681 = icmp eq i32 %call680, 0, !dbg !11585
  br i1 %cmp681, label %if.then683, label %if.end687, !dbg !11586

if.then683:                                       ; preds = %if.end678
  %266 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11587
  %page684 = getelementptr inbounds %struct._Image, %struct._Image* %266, i32 0, i32 26, !dbg !11588
  %x685 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page684, i32 0, i32 2, !dbg !11589
  %267 = load i64, i64* %x685, align 8, !dbg !11589
  %conv686 = sitofp i64 %267 to double, !dbg !11590
  store double %conv686, double* %retval, align 8, !dbg !11591
  br label %return, !dbg !11591

if.end687:                                        ; preds = %if.end678
  %arraydecay688 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11592
  %call689 = call i32 @LocaleCompare(i8* %arraydecay688, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0)), !dbg !11594
  %cmp690 = icmp eq i32 %call689, 0, !dbg !11595
  br i1 %cmp690, label %if.then692, label %if.end696, !dbg !11596

if.then692:                                       ; preds = %if.end687
  %268 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11597
  %page693 = getelementptr inbounds %struct._Image, %struct._Image* %268, i32 0, i32 26, !dbg !11598
  %y694 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page693, i32 0, i32 3, !dbg !11599
  %269 = load i64, i64* %y694, align 8, !dbg !11599
  %conv695 = sitofp i64 %269 to double, !dbg !11600
  store double %conv695, double* %retval, align 8, !dbg !11601
  br label %return, !dbg !11601

if.end696:                                        ; preds = %if.end687
  br label %sw.epilog792, !dbg !11602

sw.bb697:                                         ; preds = %if.end301, %if.end301
  %arraydecay698 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11603
  %call699 = call i32 @LocaleCompare(i8* %arraydecay698, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.175, i64 0, i64 0)), !dbg !11606
  %cmp700 = icmp eq i32 %call699, 0, !dbg !11607
  br i1 %cmp700, label %if.then702, label %if.end704, !dbg !11608

if.then702:                                       ; preds = %sw.bb697
  %270 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11609
  %x_resolution703 = getelementptr inbounds %struct._Image, %struct._Image* %270, i32 0, i32 24, !dbg !11610
  %271 = load double, double* %x_resolution703, align 8, !dbg !11610
  store double %271, double* %retval, align 8, !dbg !11611
  br label %return, !dbg !11611

if.end704:                                        ; preds = %sw.bb697
  %arraydecay705 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11612
  %call706 = call i32 @LocaleCompare(i8* %arraydecay705, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i64 0, i64 0)), !dbg !11614
  %cmp707 = icmp eq i32 %call706, 0, !dbg !11615
  br i1 %cmp707, label %if.then709, label %if.end711, !dbg !11616

if.then709:                                       ; preds = %if.end704
  %272 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11617
  %y_resolution710 = getelementptr inbounds %struct._Image, %struct._Image* %272, i32 0, i32 25, !dbg !11618
  %273 = load double, double* %y_resolution710, align 8, !dbg !11618
  store double %273, double* %retval, align 8, !dbg !11619
  br label %return, !dbg !11619

if.end711:                                        ; preds = %if.end704
  %arraydecay712 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11620
  %call713 = call i32 @LocaleCompare(i8* %arraydecay712, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.129, i64 0, i64 0)), !dbg !11622
  %cmp714 = icmp eq i32 %call713, 0, !dbg !11623
  br i1 %cmp714, label %if.then716, label %if.end720, !dbg !11624

if.then716:                                       ; preds = %if.end711
  %red717 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11625
  %274 = load float, float* %red717, align 8, !dbg !11625
  %conv718 = fpext float %274 to double, !dbg !11626
  %mul719 = fmul double 0x3EF0001000100010, %conv718, !dbg !11627
  store double %mul719, double* %retval, align 8, !dbg !11628
  br label %return, !dbg !11628

if.end720:                                        ; preds = %if.end711
  br label %sw.epilog792, !dbg !11629

sw.bb721:                                         ; preds = %if.end301, %if.end301
  %arraydecay722 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11630
  %call723 = call i32 @LocaleCompare(i8* %arraydecay722, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0)), !dbg !11633
  %cmp724 = icmp eq i32 %call723, 0, !dbg !11634
  br i1 %cmp724, label %if.then726, label %if.end736, !dbg !11635

if.then726:                                       ; preds = %sw.bb721
  call void @llvm.dbg.declare(metadata double* %hue727, metadata !11636, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata double* %lightness728, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata double* %saturation729, metadata !11641, metadata !DIExpression()), !dbg !11642
  %red730 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !11643
  %275 = load float, float* %red730, align 8, !dbg !11643
  %call731 = call zeroext i16 @ClampToQuantum(float %275), !dbg !11644
  %green732 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11645
  %276 = load float, float* %green732, align 4, !dbg !11645
  %call733 = call zeroext i16 @ClampToQuantum(float %276), !dbg !11646
  %blue734 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !11647
  %277 = load float, float* %blue734, align 8, !dbg !11647
  %call735 = call zeroext i16 @ClampToQuantum(float %277), !dbg !11648
  call void @ConvertRGBToHSL(i16 zeroext %call731, i16 zeroext %call733, i16 zeroext %call735, double* %hue727, double* %saturation729, double* %lightness728), !dbg !11649
  %278 = load double, double* %saturation729, align 8, !dbg !11650
  store double %278, double* %retval, align 8, !dbg !11651
  br label %return, !dbg !11651

if.end736:                                        ; preds = %sw.bb721
  %arraydecay737 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11652
  %call738 = call i32 @LocaleNCompare(i8* %arraydecay737, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i64 0, i64 0), i64 8), !dbg !11654
  %cmp739 = icmp eq i32 %call738, 0, !dbg !11655
  br i1 %cmp739, label %if.then741, label %if.end744, !dbg !11656

if.then741:                                       ; preds = %if.end736
  %279 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11657
  %280 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11658
  %281 = load i32, i32* %channel.addr, align 4, !dbg !11659
  %arraydecay742 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11660
  %282 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11661
  %call743 = call double @FxChannelStatistics(%struct._FxInfo* %279, %struct._Image* %280, i32 %281, i8* %arraydecay742, %struct._ExceptionInfo* %282), !dbg !11662
  store double %call743, double* %retval, align 8, !dbg !11663
  br label %return, !dbg !11663

if.end744:                                        ; preds = %if.end736
  %arraydecay745 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11664
  %call746 = call i32 @LocaleNCompare(i8* %arraydecay745, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.178, i64 0, i64 0), i64 18), !dbg !11666
  %cmp747 = icmp eq i32 %call746, 0, !dbg !11667
  br i1 %cmp747, label %if.then749, label %if.end752, !dbg !11668

if.then749:                                       ; preds = %if.end744
  %283 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11669
  %284 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11670
  %285 = load i32, i32* %channel.addr, align 4, !dbg !11671
  %arraydecay750 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11672
  %286 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11673
  %call751 = call double @FxChannelStatistics(%struct._FxInfo* %283, %struct._Image* %284, i32 %285, i8* %arraydecay750, %struct._ExceptionInfo* %286), !dbg !11674
  store double %call751, double* %retval, align 8, !dbg !11675
  br label %return, !dbg !11675

if.end752:                                        ; preds = %if.end744
  br label %sw.epilog792, !dbg !11676

sw.bb753:                                         ; preds = %if.end301, %if.end301
  %arraydecay754 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11677
  %call755 = call i32 @LocaleCompare(i8* %arraydecay754, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.142, i64 0, i64 0)), !dbg !11680
  %cmp756 = icmp eq i32 %call755, 0, !dbg !11681
  br i1 %cmp756, label %if.then758, label %if.end762, !dbg !11682

if.then758:                                       ; preds = %sw.bb753
  %287 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11683
  %images759 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %287, i32 0, i32 0, !dbg !11684
  %288 = load %struct._Image*, %struct._Image** %images759, align 8, !dbg !11684
  %call760 = call i64 @GetImageIndexInList(%struct._Image* %288), !dbg !11685
  %conv761 = sitofp i64 %call760 to double, !dbg !11686
  store double %conv761, double* %retval, align 8, !dbg !11687
  br label %return, !dbg !11687

if.end762:                                        ; preds = %sw.bb753
  br label %sw.epilog792, !dbg !11688

sw.bb763:                                         ; preds = %if.end301, %if.end301
  %arraydecay764 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11689
  %call765 = call i32 @LocaleCompare(i8* %arraydecay764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0)), !dbg !11692
  %cmp766 = icmp eq i32 %call765, 0, !dbg !11693
  br i1 %cmp766, label %if.then768, label %if.end770, !dbg !11694

if.then768:                                       ; preds = %sw.bb763
  %289 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11695
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %289, i32 0, i32 7, !dbg !11696
  %290 = load i64, i64* %columns, align 8, !dbg !11696
  %conv769 = uitofp i64 %290 to double, !dbg !11697
  store double %conv769, double* %retval, align 8, !dbg !11698
  br label %return, !dbg !11698

if.end770:                                        ; preds = %sw.bb763
  br label %sw.epilog792, !dbg !11699

sw.bb771:                                         ; preds = %if.end301, %if.end301
  %arraydecay772 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11700
  %call773 = call i32 @LocaleCompare(i8* %arraydecay772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i64 0, i64 0)), !dbg !11703
  %cmp774 = icmp eq i32 %call773, 0, !dbg !11704
  br i1 %cmp774, label %if.then776, label %if.end780, !dbg !11705

if.then776:                                       ; preds = %sw.bb771
  %green777 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !11706
  %291 = load float, float* %green777, align 4, !dbg !11706
  %conv778 = fpext float %291 to double, !dbg !11707
  %mul779 = fmul double 0x3EF0001000100010, %conv778, !dbg !11708
  store double %mul779, double* %retval, align 8, !dbg !11709
  br label %return, !dbg !11709

if.end780:                                        ; preds = %sw.bb771
  br label %sw.epilog792, !dbg !11710

sw.bb781:                                         ; preds = %if.end301, %if.end301
  %arraydecay782 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11711
  %call783 = call i32 @LocaleCompare(i8* %arraydecay782, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.148, i64 0, i64 0)), !dbg !11714
  %cmp784 = icmp eq i32 %call783, 0, !dbg !11715
  br i1 %cmp784, label %if.then786, label %if.end790, !dbg !11716

if.then786:                                       ; preds = %sw.bb781
  call void @llvm.dbg.declare(metadata double* %depth, metadata !11717, metadata !DIExpression()), !dbg !11719
  %292 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !11720
  %293 = load i32, i32* %channel.addr, align 4, !dbg !11721
  %294 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11722
  %exception787 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %294, i32 0, i32 7, !dbg !11723
  %295 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception787, align 8, !dbg !11723
  %call788 = call i64 @GetImageChannelDepth(%struct._Image* %292, i32 %293, %struct._ExceptionInfo* %295), !dbg !11724
  %conv789 = uitofp i64 %call788 to double, !dbg !11725
  store double %conv789, double* %depth, align 8, !dbg !11726
  %296 = load double, double* %depth, align 8, !dbg !11727
  store double %296, double* %retval, align 8, !dbg !11728
  br label %return, !dbg !11728

if.end790:                                        ; preds = %sw.bb781
  br label %sw.epilog792, !dbg !11729

sw.default791:                                    ; preds = %if.end301
  br label %sw.epilog792, !dbg !11730

sw.epilog792:                                     ; preds = %sw.default791, %if.end790, %if.end780, %if.end770, %if.end762, %if.end752, %if.end720, %if.end696, %if.end662, %if.end652, %if.end642, %if.end608, %if.end556, %if.end548, %if.end480, %if.end460, %if.end434, %if.end424, %if.end415, %if.end324, %if.end314
  %297 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11731
  %symbols793 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %297, i32 0, i32 4, !dbg !11732
  %298 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols793, align 8, !dbg !11732
  %arraydecay794 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11733
  %call795 = call i8* @GetValueFromSplayTree(%struct._SplayTreeInfo* %298, i8* %arraydecay794), !dbg !11734
  store i8* %call795, i8** %value, align 8, !dbg !11735
  %299 = load i8*, i8** %value, align 8, !dbg !11736
  %cmp796 = icmp ne i8* %299, null, !dbg !11738
  br i1 %cmp796, label %if.then798, label %if.end800, !dbg !11739

if.then798:                                       ; preds = %sw.epilog792
  %300 = load i8*, i8** %value, align 8, !dbg !11740
  %call799 = call double @StringToDouble(i8* %300, i8** null), !dbg !11741
  store double %call799, double* %retval, align 8, !dbg !11742
  br label %return, !dbg !11742

if.end800:                                        ; preds = %sw.epilog792
  %301 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11743
  %arraydecay801 = getelementptr inbounds [4096 x i8], [4096 x i8]* %symbol, i64 0, i64 0, !dbg !11744
  %call802 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %301, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1864, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay801), !dbg !11745
  store double 0.000000e+00, double* %retval, align 8, !dbg !11746
  br label %return, !dbg !11746

return:                                           ; preds = %if.end800, %if.then798, %if.then786, %if.then776, %if.then768, %if.then758, %if.then749, %if.then741, %if.then726, %if.then716, %if.then709, %if.then702, %if.then692, %if.then683, %if.then675, %if.then668, %if.then658, %if.then648, %if.then638, %if.then630, %if.then622, %if.then614, %if.then595, %if.then577, %if.then562, %if.then554, %if.then546, %if.then536, %if.then530, %if.then524, %if.then515, %if.then473, %if.then466, %if.end456, %if.then452, %if.then440, %if.then430, %if.then421, %if.then411, %sw.default405, %if.end403, %if.then402, %if.end396, %if.then395, %if.end389, %if.then388, %if.end382, %if.then381, %if.end375, %if.then374, %sw.default368, %if.end367, %if.then366, %if.end361, %if.then360, %if.end355, %if.then354, %if.end349, %if.then348, %if.end343, %if.then342, %if.then320, %if.then309, %sw.epilog299, %sw.bb293, %if.end290, %if.then287, %if.end280, %if.then279, %sw.bb272, %sw.bb269, %sw.bb267, %if.then164
  %302 = load double, double* %retval, align 8, !dbg !11747
  ret double %302, !dbg !11747
}

; Function Attrs: nounwind
declare dso_local double @cosh(double) #8

declare dso_local i64 @FormatLocaleFile(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @GetMagickPrecision() #3

; Function Attrs: nounwind
declare dso_local double @exp(double) #8

; Function Attrs: noinline nounwind uwtable
define internal i64 @FxGCD(i64 %alpha, i64 %beta) #0 !dbg !11748 {
entry:
  %retval = alloca i64, align 8
  %alpha.addr = alloca i64, align 8
  %beta.addr = alloca i64, align 8
  store i64 %alpha, i64* %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alpha.addr, metadata !11751, metadata !DIExpression()), !dbg !11752
  store i64 %beta, i64* %beta.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %beta.addr, metadata !11753, metadata !DIExpression()), !dbg !11754
  %0 = load i64, i64* %beta.addr, align 8, !dbg !11755
  %cmp = icmp ne i64 %0, 0, !dbg !11757
  br i1 %cmp, label %if.then, label %if.end, !dbg !11758

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %beta.addr, align 8, !dbg !11759
  %2 = load i64, i64* %alpha.addr, align 8, !dbg !11760
  %3 = load i64, i64* %beta.addr, align 8, !dbg !11761
  %rem = srem i64 %2, %3, !dbg !11762
  %call = call i64 @FxGCD(i64 %1, i64 %rem), !dbg !11763
  store i64 %call, i64* %retval, align 8, !dbg !11764
  br label %return, !dbg !11764

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %alpha.addr, align 8, !dbg !11765
  store i64 %4, i64* %retval, align 8, !dbg !11766
  br label %return, !dbg !11766

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !11767
  ret i64 %5, !dbg !11767
}

; Function Attrs: nounwind
declare dso_local double @hypot(double, double) #8

; Function Attrs: nounwind
declare dso_local double @j0(double) #8

; Function Attrs: nounwind
declare dso_local double @log(double) #8

; Function Attrs: nounwind
declare dso_local double @log10(double) #8

; Function Attrs: nounwind
declare dso_local double @sinh(double) #8

; Function Attrs: nounwind
declare dso_local double @tanh(double) #8

; Function Attrs: nounwind
declare dso_local double @tan(double) #8

declare dso_local double @InterpretSiPrefixValue(i8*, i8**) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @FxSubexpression(i8* %expression, %struct._ExceptionInfo* %exception) #0 !dbg !11768 {
entry:
  %expression.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %subexpression = alloca i8*, align 8
  %level = alloca i64, align 8
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.declare(metadata i8** %subexpression, metadata !11773, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.declare(metadata i64* %level, metadata !11775, metadata !DIExpression()), !dbg !11776
  store i64 0, i64* %level, align 8, !dbg !11777
  %0 = load i8*, i8** %expression.addr, align 8, !dbg !11778
  store i8* %0, i8** %subexpression, align 8, !dbg !11779
  br label %while.cond, !dbg !11780

while.cond:                                       ; preds = %if.end16, %entry
  %1 = load i8*, i8** %subexpression, align 8, !dbg !11781
  %2 = load i8, i8* %1, align 1, !dbg !11782
  %conv = sext i8 %2 to i32, !dbg !11782
  %cmp = icmp ne i32 %conv, 0, !dbg !11783
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11784

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %level, align 8, !dbg !11785
  %cmp2 = icmp ne i64 %3, 1, !dbg !11786
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !11787

lor.rhs:                                          ; preds = %land.rhs
  %4 = load i8*, i8** %subexpression, align 8, !dbg !11788
  %5 = load i8, i8* %4, align 1, !dbg !11789
  %conv4 = sext i8 %5 to i32, !dbg !11790
  %call = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i64 0, i64 0), i32 %conv4) #15, !dbg !11791
  %cmp5 = icmp eq i8* %call, null, !dbg !11792
  br label %lor.end, !dbg !11787

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %6 = phi i1 [ true, %land.rhs ], [ %cmp5, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %6, %lor.end ], !dbg !11793
  br i1 %7, label %while.body, label %while.end, !dbg !11780

while.body:                                       ; preds = %land.end
  %8 = load i8*, i8** %subexpression, align 8, !dbg !11794
  %9 = load i8, i8* %8, align 1, !dbg !11797
  %conv7 = sext i8 %9 to i32, !dbg !11798
  %call8 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 %conv7) #15, !dbg !11799
  %cmp9 = icmp ne i8* %call8, null, !dbg !11800
  br i1 %cmp9, label %if.then, label %if.else, !dbg !11801

if.then:                                          ; preds = %while.body
  %10 = load i64, i64* %level, align 8, !dbg !11802
  %inc = add nsw i64 %10, 1, !dbg !11802
  store i64 %inc, i64* %level, align 8, !dbg !11802
  br label %if.end16, !dbg !11803

if.else:                                          ; preds = %while.body
  %11 = load i8*, i8** %subexpression, align 8, !dbg !11804
  %12 = load i8, i8* %11, align 1, !dbg !11806
  %conv11 = sext i8 %12 to i32, !dbg !11807
  %call12 = call i8* @strchr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.149, i64 0, i64 0), i32 %conv11) #15, !dbg !11808
  %cmp13 = icmp ne i8* %call12, null, !dbg !11809
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !11810

if.then15:                                        ; preds = %if.else
  %13 = load i64, i64* %level, align 8, !dbg !11811
  %dec = add nsw i64 %13, -1, !dbg !11811
  store i64 %dec, i64* %level, align 8, !dbg !11811
  br label %if.end, !dbg !11812

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %14 = load i8*, i8** %subexpression, align 8, !dbg !11813
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !11813
  store i8* %incdec.ptr, i8** %subexpression, align 8, !dbg !11813
  br label %while.cond, !dbg !11780, !llvm.loop !11814

while.end:                                        ; preds = %land.end
  %15 = load i8*, i8** %subexpression, align 8, !dbg !11816
  %16 = load i8, i8* %15, align 1, !dbg !11818
  %conv17 = sext i8 %16 to i32, !dbg !11818
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !11819
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !11820

if.then20:                                        ; preds = %while.end
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11821
  %18 = load i8*, i8** %expression.addr, align 8, !dbg !11822
  %call21 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1297, i32 410, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %18), !dbg !11823
  br label %if.end22, !dbg !11824

if.end22:                                         ; preds = %if.then20, %while.end
  %19 = load i8*, i8** %subexpression, align 8, !dbg !11825
  ret i8* %19, !dbg !11826
}

declare dso_local i64 @GetImageIndexInList(%struct._Image*) #3

declare dso_local %struct._Image* @GetImageFromList(%struct._Image*, i64) #3

declare dso_local i8* @GetValueFromSplayTree(%struct._SplayTreeInfo*, i8*) #3

declare dso_local i32 @QueryMagickColor(i8*, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local %struct._MagickPixelPacket* @CloneMagickPixelPacket(%struct._MagickPixelPacket*) #3

declare dso_local void @StripString(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %pixel) #0 !dbg !11827 {
entry:
  %retval = alloca i16, align 2
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !11831, metadata !DIExpression()), !dbg !11832
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11833
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !11835
  %1 = load i32, i32* %colorspace, align 4, !dbg !11835
  %cmp = icmp eq i32 %1, 2, !dbg !11836
  br i1 %cmp, label %if.then, label %if.end, !dbg !11837

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11838
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !11839
  %3 = load float, float* %red, align 8, !dbg !11839
  %call = call zeroext i16 @ClampToQuantum(float %3), !dbg !11840
  store i16 %call, i16* %retval, align 2, !dbg !11841
  br label %return, !dbg !11841

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11842
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !11843
  %5 = load float, float* %red1, align 8, !dbg !11843
  %conv = fpext float %5 to double, !dbg !11842
  %mul = fmul double 2.126560e-01, %conv, !dbg !11844
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11845
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !11846
  %7 = load float, float* %green, align 4, !dbg !11846
  %conv2 = fpext float %7 to double, !dbg !11845
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !11847
  %add = fadd double %mul, %mul3, !dbg !11848
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11849
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !11850
  %9 = load float, float* %blue, align 8, !dbg !11850
  %conv4 = fpext float %9 to double, !dbg !11849
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !11851
  %add6 = fadd double %add, %mul5, !dbg !11852
  %conv7 = fptrunc double %add6 to float, !dbg !11853
  %call8 = call zeroext i16 @ClampToQuantum(float %conv7), !dbg !11854
  store i16 %call8, i16* %retval, align 2, !dbg !11855
  br label %return, !dbg !11855

return:                                           ; preds = %if.end, %if.then
  %10 = load i16, i16* %retval, align 2, !dbg !11856
  ret i16 %10, !dbg !11856
}

; Function Attrs: noinline nounwind uwtable
define internal double @FxChannelStatistics(%struct._FxInfo* %fx_info, %struct._Image* %image, i32 %channel, i8* %symbol, %struct._ExceptionInfo* %exception) #0 !dbg !11857 {
entry:
  %retval = alloca double, align 8
  %fx_info.addr = alloca %struct._FxInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %symbol.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %channel_symbol = alloca [4096 x i8], align 16
  %key = alloca [4096 x i8], align 16
  %statistic = alloca [4096 x i8], align 16
  %value = alloca i8*, align 8
  %p = alloca i8*, align 8
  %option = alloca i64, align 8
  %depth = alloca i64, align 8
  %kurtosis = alloca double, align 8
  %skewness = alloca double, align 8
  %maxima = alloca double, align 8
  %minima = alloca double, align 8
  %mean = alloca double, align 8
  %standard_deviation = alloca double, align 8
  %maxima79 = alloca double, align 8
  %minima80 = alloca double, align 8
  %kurtosis96 = alloca double, align 8
  %skewness97 = alloca double, align 8
  %mean106 = alloca double, align 8
  %standard_deviation107 = alloca double, align 8
  store %struct._FxInfo* %fx_info, %struct._FxInfo** %fx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._FxInfo** %fx_info.addr, metadata !11860, metadata !DIExpression()), !dbg !11861
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !11862, metadata !DIExpression()), !dbg !11863
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  store i8* %symbol, i8** %symbol.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %symbol.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.declare(metadata [4096 x i8]* %channel_symbol, metadata !11870, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !11872, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.declare(metadata [4096 x i8]* %statistic, metadata !11874, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.declare(metadata i8** %value, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11878, metadata !DIExpression()), !dbg !11879
  %0 = load i8*, i8** %symbol.addr, align 8, !dbg !11880
  store i8* %0, i8** %p, align 8, !dbg !11882
  br label %for.cond, !dbg !11883

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !11884
  %2 = load i8, i8* %1, align 1, !dbg !11886
  %conv = sext i8 %2 to i32, !dbg !11886
  %cmp = icmp ne i32 %conv, 46, !dbg !11887
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11888

land.rhs:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !11889
  %4 = load i8, i8* %3, align 1, !dbg !11890
  %conv2 = sext i8 %4 to i32, !dbg !11890
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !11891
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ], !dbg !11892
  br i1 %5, label %for.body, label %for.end, !dbg !11893

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !11893

for.inc:                                          ; preds = %for.body
  %6 = load i8*, i8** %p, align 8, !dbg !11894
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !11894
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !11894
  br label %for.cond, !dbg !11895, !llvm.loop !11896

for.end:                                          ; preds = %land.end
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !11898
  store i8 0, i8* %arraydecay, align 16, !dbg !11899
  %7 = load i8*, i8** %p, align 8, !dbg !11900
  %8 = load i8, i8* %7, align 1, !dbg !11902
  %conv5 = sext i8 %8 to i32, !dbg !11902
  %cmp6 = icmp eq i32 %conv5, 46, !dbg !11903
  br i1 %cmp6, label %if.then, label %if.end15, !dbg !11904

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %option, metadata !11905, metadata !DIExpression()), !dbg !11907
  %arraydecay8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !11908
  %9 = load i8*, i8** %p, align 8, !dbg !11909
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !11910
  %call = call i64 @CopyMagickString(i8* %arraydecay8, i8* %add.ptr, i64 4096), !dbg !11911
  %arraydecay9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !11912
  %call10 = call i64 @ParseCommandOption(i32 4, i32 1, i8* %arraydecay9), !dbg !11913
  store i64 %call10, i64* %option, align 8, !dbg !11914
  %10 = load i64, i64* %option, align 8, !dbg !11915
  %cmp11 = icmp sge i64 %10, 0, !dbg !11917
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !11918

if.then13:                                        ; preds = %if.then
  %11 = load i64, i64* %option, align 8, !dbg !11919
  %conv14 = trunc i64 %11 to i32, !dbg !11920
  store i32 %conv14, i32* %channel.addr, align 4, !dbg !11921
  br label %if.end, !dbg !11922

if.end:                                           ; preds = %if.then13, %if.then
  br label %if.end15, !dbg !11923

if.end15:                                         ; preds = %if.end, %for.end
  %arraydecay16 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !11924
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11925
  %13 = bitcast %struct._Image* %12 to i8*, !dbg !11926
  %14 = load i32, i32* %channel.addr, align 4, !dbg !11927
  %conv17 = uitofp i32 %14 to double, !dbg !11928
  %15 = load i8*, i8** %symbol.addr, align 8, !dbg !11929
  %call18 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay16, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i64 0, i64 0), i8* %13, double %conv17, i8* %15), !dbg !11930
  %16 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11931
  %symbols = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %16, i32 0, i32 4, !dbg !11932
  %17 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols, align 8, !dbg !11932
  %arraydecay19 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !11933
  %call20 = call i8* @GetValueFromSplayTree(%struct._SplayTreeInfo* %17, i8* %arraydecay19), !dbg !11934
  store i8* %call20, i8** %value, align 8, !dbg !11935
  %18 = load i8*, i8** %value, align 8, !dbg !11936
  %cmp21 = icmp ne i8* %18, null, !dbg !11938
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !11939

if.then23:                                        ; preds = %if.end15
  %19 = load i8*, i8** %value, align 8, !dbg !11940
  %call24 = call double @StringToDouble(i8* %19, i8** null), !dbg !11941
  %mul = fmul double 0x3EF0001000100010, %call24, !dbg !11942
  store double %mul, double* %retval, align 8, !dbg !11943
  br label %return, !dbg !11943

if.end25:                                         ; preds = %if.end15
  %20 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !11944
  %symbols26 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %20, i32 0, i32 4, !dbg !11945
  %21 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols26, align 8, !dbg !11945
  %arraydecay27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !11946
  %call28 = call i32 @DeleteNodeFromSplayTree(%struct._SplayTreeInfo* %21, i8* %arraydecay27), !dbg !11947
  %22 = load i8*, i8** %symbol.addr, align 8, !dbg !11948
  %call29 = call i32 @LocaleNCompare(i8* %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i64 0, i64 0), i64 5), !dbg !11950
  %cmp30 = icmp eq i32 %call29, 0, !dbg !11951
  br i1 %cmp30, label %if.then32, label %if.end37, !dbg !11952

if.then32:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !11953, metadata !DIExpression()), !dbg !11955
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11956
  %24 = load i32, i32* %channel.addr, align 4, !dbg !11957
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11958
  %call33 = call i64 @GetImageChannelDepth(%struct._Image* %23, i32 %24, %struct._ExceptionInfo* %25), !dbg !11959
  store i64 %call33, i64* %depth, align 8, !dbg !11960
  %arraydecay34 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !11961
  %26 = load i64, i64* %depth, align 8, !dbg !11962
  %conv35 = uitofp i64 %26 to double, !dbg !11963
  %call36 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay34, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i64 0, i64 0), double %conv35), !dbg !11964
  br label %if.end37, !dbg !11965

if.end37:                                         ; preds = %if.then32, %if.end25
  %27 = load i8*, i8** %symbol.addr, align 8, !dbg !11966
  %call38 = call i32 @LocaleNCompare(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0), i64 8), !dbg !11968
  %cmp39 = icmp eq i32 %call38, 0, !dbg !11969
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !11970

if.then41:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata double* %kurtosis, metadata !11971, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.declare(metadata double* %skewness, metadata !11974, metadata !DIExpression()), !dbg !11975
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11976
  %29 = load i32, i32* %channel.addr, align 4, !dbg !11977
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11978
  %call42 = call i32 @GetImageChannelKurtosis(%struct._Image* %28, i32 %29, double* %kurtosis, double* %skewness, %struct._ExceptionInfo* %30), !dbg !11979
  %arraydecay43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !11980
  %31 = load double, double* %kurtosis, align 8, !dbg !11981
  %call44 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay43, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %31), !dbg !11982
  br label %if.end45, !dbg !11983

if.end45:                                         ; preds = %if.then41, %if.end37
  %32 = load i8*, i8** %symbol.addr, align 8, !dbg !11984
  %call46 = call i32 @LocaleNCompare(i8* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), i64 6), !dbg !11986
  %cmp47 = icmp eq i32 %call46, 0, !dbg !11987
  br i1 %cmp47, label %if.then49, label %if.end59, !dbg !11988

if.then49:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata double* %maxima, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.declare(metadata double* %minima, metadata !11992, metadata !DIExpression()), !dbg !11993
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11994
  %34 = load i32, i32* %channel.addr, align 4, !dbg !11995
  %35 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11996
  %call50 = call i32 @GetImageChannelRange(%struct._Image* %33, i32 %34, double* %minima, double* %maxima, %struct._ExceptionInfo* %35), !dbg !11997
  %arraydecay51 = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !11998
  %call52 = call i32 @LocaleCompare(i8* %arraydecay51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)), !dbg !12000
  %cmp53 = icmp eq i32 %call52, 0, !dbg !12001
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !12002

if.then55:                                        ; preds = %if.then49
  %36 = load double, double* %maxima, align 8, !dbg !12003
  %sub = fsub double 6.553500e+04, %36, !dbg !12004
  store double %sub, double* %maxima, align 8, !dbg !12005
  br label %if.end56, !dbg !12006

if.end56:                                         ; preds = %if.then55, %if.then49
  %arraydecay57 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12007
  %37 = load double, double* %maxima, align 8, !dbg !12008
  %call58 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay57, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %37), !dbg !12009
  br label %if.end59, !dbg !12010

if.end59:                                         ; preds = %if.end56, %if.end45
  %38 = load i8*, i8** %symbol.addr, align 8, !dbg !12011
  %call60 = call i32 @LocaleNCompare(i8* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i64 0, i64 0), i64 4), !dbg !12013
  %cmp61 = icmp eq i32 %call60, 0, !dbg !12014
  br i1 %cmp61, label %if.then63, label %if.end74, !dbg !12015

if.then63:                                        ; preds = %if.end59
  call void @llvm.dbg.declare(metadata double* %mean, metadata !12016, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.declare(metadata double* %standard_deviation, metadata !12019, metadata !DIExpression()), !dbg !12020
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12021
  %40 = load i32, i32* %channel.addr, align 4, !dbg !12022
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12023
  %call64 = call i32 @GetImageChannelMean(%struct._Image* %39, i32 %40, double* %mean, double* %standard_deviation, %struct._ExceptionInfo* %41), !dbg !12024
  %arraydecay65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !12025
  %call66 = call i32 @LocaleCompare(i8* %arraydecay65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)), !dbg !12027
  %cmp67 = icmp eq i32 %call66, 0, !dbg !12028
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !12029

if.then69:                                        ; preds = %if.then63
  %42 = load double, double* %mean, align 8, !dbg !12030
  %sub70 = fsub double 6.553500e+04, %42, !dbg !12031
  store double %sub70, double* %mean, align 8, !dbg !12032
  br label %if.end71, !dbg !12033

if.end71:                                         ; preds = %if.then69, %if.then63
  %arraydecay72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12034
  %43 = load double, double* %mean, align 8, !dbg !12035
  %call73 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay72, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %43), !dbg !12036
  br label %if.end74, !dbg !12037

if.end74:                                         ; preds = %if.end71, %if.end59
  %44 = load i8*, i8** %symbol.addr, align 8, !dbg !12038
  %call75 = call i32 @LocaleNCompare(i8* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0), i64 6), !dbg !12040
  %cmp76 = icmp eq i32 %call75, 0, !dbg !12041
  br i1 %cmp76, label %if.then78, label %if.end91, !dbg !12042

if.then78:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata double* %maxima79, metadata !12043, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.declare(metadata double* %minima80, metadata !12046, metadata !DIExpression()), !dbg !12047
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12048
  %46 = load i32, i32* %channel.addr, align 4, !dbg !12049
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12050
  %call81 = call i32 @GetImageChannelRange(%struct._Image* %45, i32 %46, double* %minima80, double* %maxima79, %struct._ExceptionInfo* %47), !dbg !12051
  %arraydecay82 = getelementptr inbounds [4096 x i8], [4096 x i8]* %channel_symbol, i64 0, i64 0, !dbg !12052
  %call83 = call i32 @LocaleCompare(i8* %arraydecay82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)), !dbg !12054
  %cmp84 = icmp eq i32 %call83, 0, !dbg !12055
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !12056

if.then86:                                        ; preds = %if.then78
  %48 = load double, double* %minima80, align 8, !dbg !12057
  %sub87 = fsub double 6.553500e+04, %48, !dbg !12058
  store double %sub87, double* %minima80, align 8, !dbg !12059
  br label %if.end88, !dbg !12060

if.end88:                                         ; preds = %if.then86, %if.then78
  %arraydecay89 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12061
  %49 = load double, double* %minima80, align 8, !dbg !12062
  %call90 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay89, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %49), !dbg !12063
  br label %if.end91, !dbg !12064

if.end91:                                         ; preds = %if.end88, %if.end74
  %50 = load i8*, i8** %symbol.addr, align 8, !dbg !12065
  %call92 = call i32 @LocaleNCompare(i8* %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i64 0, i64 0), i64 8), !dbg !12067
  %cmp93 = icmp eq i32 %call92, 0, !dbg !12068
  br i1 %cmp93, label %if.then95, label %if.end101, !dbg !12069

if.then95:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata double* %kurtosis96, metadata !12070, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata double* %skewness97, metadata !12073, metadata !DIExpression()), !dbg !12074
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12075
  %52 = load i32, i32* %channel.addr, align 4, !dbg !12076
  %53 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12077
  %call98 = call i32 @GetImageChannelKurtosis(%struct._Image* %51, i32 %52, double* %kurtosis96, double* %skewness97, %struct._ExceptionInfo* %53), !dbg !12078
  %arraydecay99 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12079
  %54 = load double, double* %skewness97, align 8, !dbg !12080
  %call100 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay99, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %54), !dbg !12081
  br label %if.end101, !dbg !12082

if.end101:                                        ; preds = %if.then95, %if.end91
  %55 = load i8*, i8** %symbol.addr, align 8, !dbg !12083
  %call102 = call i32 @LocaleNCompare(i8* %55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.178, i64 0, i64 0), i64 18), !dbg !12085
  %cmp103 = icmp eq i32 %call102, 0, !dbg !12086
  br i1 %cmp103, label %if.then105, label %if.end111, !dbg !12087

if.then105:                                       ; preds = %if.end101
  call void @llvm.dbg.declare(metadata double* %mean106, metadata !12088, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata double* %standard_deviation107, metadata !12091, metadata !DIExpression()), !dbg !12092
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12093
  %57 = load i32, i32* %channel.addr, align 4, !dbg !12094
  %58 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12095
  %call108 = call i32 @GetImageChannelMean(%struct._Image* %56, i32 %57, double* %mean106, double* %standard_deviation107, %struct._ExceptionInfo* %58), !dbg !12096
  %arraydecay109 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12097
  %59 = load double, double* %standard_deviation107, align 8, !dbg !12098
  %call110 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay109, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), double %59), !dbg !12099
  br label %if.end111, !dbg !12100

if.end111:                                        ; preds = %if.then105, %if.end101
  %60 = load %struct._FxInfo*, %struct._FxInfo** %fx_info.addr, align 8, !dbg !12101
  %symbols112 = getelementptr inbounds %struct._FxInfo, %struct._FxInfo* %60, i32 0, i32 4, !dbg !12102
  %61 = load %struct._SplayTreeInfo*, %struct._SplayTreeInfo** %symbols112, align 8, !dbg !12102
  %arraydecay113 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !12103
  %call114 = call i8* @ConstantString(i8* %arraydecay113), !dbg !12104
  %arraydecay115 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12105
  %call116 = call i8* @ConstantString(i8* %arraydecay115), !dbg !12106
  %call117 = call i32 @AddValueToSplayTree(%struct._SplayTreeInfo* %61, i8* %call114, i8* %call116), !dbg !12107
  %arraydecay118 = getelementptr inbounds [4096 x i8], [4096 x i8]* %statistic, i64 0, i64 0, !dbg !12108
  %call119 = call double @StringToDouble(i8* %arraydecay118, i8** null), !dbg !12109
  %mul120 = fmul double 0x3EF0001000100010, %call119, !dbg !12110
  store double %mul120, double* %retval, align 8, !dbg !12111
  br label %return, !dbg !12111

return:                                           ; preds = %if.end111, %if.then23
  %62 = load double, double* %retval, align 8, !dbg !12112
  ret double %62, !dbg !12112
}

declare dso_local void @ConvertRGBToHSL(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local i64 @GetImageChannelDepth(%struct._Image*, i32, %struct._ExceptionInfo*) #3

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #3

declare dso_local i32 @GetImageChannelKurtosis(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #3

declare dso_local i32 @GetImageChannelRange(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #3

declare dso_local i32 @GetImageChannelMean(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #3

declare dso_local i8* @FileToString(i8*, i64, %struct._ExceptionInfo*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { allocsize(0) }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn }
attributes #13 = { allocsize(0,1) }
attributes #14 = { nounwind }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1313, !1314, !1315}
!llvm.ident = !{!1316}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !814, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/fx.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !379, !401, !426, !441, !469, !510, !516, !522, !527, !533, !539, !546, !554, !567, !573, !579, !583, !588, !621, !642, !661, !673, !688, !739}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 27, baseType: !5, size: 32, elements: !370)
!369 = !DIFile(filename: "./magick/fx.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!370 = !{!371, !372, !373, !374, !375, !376, !377, !378}
!371 = !DIEnumerator(name: "UndefinedNoise", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "UniformNoise", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "GaussianNoise", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "MultiplicativeGaussianNoise", value: 3, isUnsigned: true)
!375 = !DIEnumerator(name: "ImpulseNoise", value: 4, isUnsigned: true)
!376 = !DIEnumerator(name: "LaplacianNoise", value: 5, isUnsigned: true)
!377 = !DIEnumerator(name: "PoissonNoise", value: 6, isUnsigned: true)
!378 = !DIEnumerator(name: "RandomNoise", value: 7, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400}
!381 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!382 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!383 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!384 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!387 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!388 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!389 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!390 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!391 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!392 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!393 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!394 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!395 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!396 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!397 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!398 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!399 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!400 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !402, line: 34, baseType: !5, size: 32, elements: !403)
!402 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!403 = !{!404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425}
!404 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!405 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!408 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!409 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!410 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!411 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!412 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!413 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!414 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!415 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!416 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!417 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!418 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!419 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!420 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!421 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!422 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!423 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!424 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!425 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!426 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 30, baseType: !5, size: 32, elements: !427)
!427 = !{!428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440}
!428 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!429 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!430 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!431 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!432 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!433 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!434 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!435 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!436 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!437 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!438 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!439 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!440 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 25, baseType: !5, size: 32, elements: !442)
!442 = !{!443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468}
!443 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!444 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!445 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!446 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!447 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!448 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!449 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!450 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!451 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!452 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!453 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!454 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!455 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!456 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!457 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!458 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!459 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!460 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!461 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!462 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!463 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!464 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!465 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!466 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!467 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!468 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!469 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 27, baseType: !5, size: 32, elements: !471)
!470 = !DIFile(filename: "./magick/morphology.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!471 = !{!472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!472 = !DIEnumerator(name: "UndefinedKernel", value: 0, isUnsigned: true)
!473 = !DIEnumerator(name: "UnityKernel", value: 1, isUnsigned: true)
!474 = !DIEnumerator(name: "GaussianKernel", value: 2, isUnsigned: true)
!475 = !DIEnumerator(name: "DoGKernel", value: 3, isUnsigned: true)
!476 = !DIEnumerator(name: "LoGKernel", value: 4, isUnsigned: true)
!477 = !DIEnumerator(name: "BlurKernel", value: 5, isUnsigned: true)
!478 = !DIEnumerator(name: "CometKernel", value: 6, isUnsigned: true)
!479 = !DIEnumerator(name: "LaplacianKernel", value: 7, isUnsigned: true)
!480 = !DIEnumerator(name: "SobelKernel", value: 8, isUnsigned: true)
!481 = !DIEnumerator(name: "FreiChenKernel", value: 9, isUnsigned: true)
!482 = !DIEnumerator(name: "RobertsKernel", value: 10, isUnsigned: true)
!483 = !DIEnumerator(name: "PrewittKernel", value: 11, isUnsigned: true)
!484 = !DIEnumerator(name: "CompassKernel", value: 12, isUnsigned: true)
!485 = !DIEnumerator(name: "KirschKernel", value: 13, isUnsigned: true)
!486 = !DIEnumerator(name: "DiamondKernel", value: 14, isUnsigned: true)
!487 = !DIEnumerator(name: "SquareKernel", value: 15, isUnsigned: true)
!488 = !DIEnumerator(name: "RectangleKernel", value: 16, isUnsigned: true)
!489 = !DIEnumerator(name: "OctagonKernel", value: 17, isUnsigned: true)
!490 = !DIEnumerator(name: "DiskKernel", value: 18, isUnsigned: true)
!491 = !DIEnumerator(name: "PlusKernel", value: 19, isUnsigned: true)
!492 = !DIEnumerator(name: "CrossKernel", value: 20, isUnsigned: true)
!493 = !DIEnumerator(name: "RingKernel", value: 21, isUnsigned: true)
!494 = !DIEnumerator(name: "PeaksKernel", value: 22, isUnsigned: true)
!495 = !DIEnumerator(name: "EdgesKernel", value: 23, isUnsigned: true)
!496 = !DIEnumerator(name: "CornersKernel", value: 24, isUnsigned: true)
!497 = !DIEnumerator(name: "DiagonalsKernel", value: 25, isUnsigned: true)
!498 = !DIEnumerator(name: "LineEndsKernel", value: 26, isUnsigned: true)
!499 = !DIEnumerator(name: "LineJunctionsKernel", value: 27, isUnsigned: true)
!500 = !DIEnumerator(name: "RidgesKernel", value: 28, isUnsigned: true)
!501 = !DIEnumerator(name: "ConvexHullKernel", value: 29, isUnsigned: true)
!502 = !DIEnumerator(name: "ThinSEKernel", value: 30, isUnsigned: true)
!503 = !DIEnumerator(name: "SkeletonKernel", value: 31, isUnsigned: true)
!504 = !DIEnumerator(name: "ChebyshevKernel", value: 32, isUnsigned: true)
!505 = !DIEnumerator(name: "ManhattanKernel", value: 33, isUnsigned: true)
!506 = !DIEnumerator(name: "OctagonalKernel", value: 34, isUnsigned: true)
!507 = !DIEnumerator(name: "EuclideanKernel", value: 35, isUnsigned: true)
!508 = !DIEnumerator(name: "UserDefinedKernel", value: 36, isUnsigned: true)
!509 = !DIEnumerator(name: "BinomialKernel", value: 37, isUnsigned: true)
!510 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 70, baseType: !5, size: 32, elements: !512)
!511 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!512 = !{!513, !514, !515}
!513 = !DIEnumerator(name: "UndefinedGradient", value: 0, isUnsigned: true)
!514 = !DIEnumerator(name: "LinearGradient", value: 1, isUnsigned: true)
!515 = !DIEnumerator(name: "RadialGradient", value: 2, isUnsigned: true)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 129, baseType: !5, size: 32, elements: !517)
!517 = !{!518, !519, !520, !521}
!518 = !DIEnumerator(name: "UndefinedSpread", value: 0, isUnsigned: true)
!519 = !DIEnumerator(name: "PadSpread", value: 1, isUnsigned: true)
!520 = !DIEnumerator(name: "ReflectSpread", value: 2, isUnsigned: true)
!521 = !DIEnumerator(name: "RepeatSpread", value: 3, isUnsigned: true)
!522 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 62, baseType: !5, size: 32, elements: !523)
!523 = !{!524, !525, !526}
!524 = !DIEnumerator(name: "UndefinedRule", value: 0, isUnsigned: true)
!525 = !DIEnumerator(name: "EvenOddRule", value: 1, isUnsigned: true)
!526 = !DIEnumerator(name: "NonZeroRule", value: 2, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 77, baseType: !5, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532}
!529 = !DIEnumerator(name: "UndefinedCap", value: 0, isUnsigned: true)
!530 = !DIEnumerator(name: "ButtCap", value: 1, isUnsigned: true)
!531 = !DIEnumerator(name: "RoundCap", value: 2, isUnsigned: true)
!532 = !DIEnumerator(name: "SquareCap", value: 3, isUnsigned: true)
!533 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 85, baseType: !5, size: 32, elements: !534)
!534 = !{!535, !536, !537, !538}
!535 = !DIEnumerator(name: "UndefinedJoin", value: 0, isUnsigned: true)
!536 = !DIEnumerator(name: "MiterJoin", value: 1, isUnsigned: true)
!537 = !DIEnumerator(name: "RoundJoin", value: 2, isUnsigned: true)
!538 = !DIEnumerator(name: "BevelJoin", value: 3, isUnsigned: true)
!539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 46, baseType: !5, size: 32, elements: !540)
!540 = !{!541, !542, !543, !544, !545}
!541 = !DIEnumerator(name: "UndefinedDecoration", value: 0, isUnsigned: true)
!542 = !DIEnumerator(name: "NoDecoration", value: 1, isUnsigned: true)
!543 = !DIEnumerator(name: "UnderlineDecoration", value: 2, isUnsigned: true)
!544 = !DIEnumerator(name: "OverlineDecoration", value: 3, isUnsigned: true)
!545 = !DIEnumerator(name: "LineThroughDecoration", value: 4, isUnsigned: true)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !547, line: 40, baseType: !5, size: 32, elements: !548)
!547 = !DIFile(filename: "./magick/type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!548 = !{!549, !550, !551, !552, !553}
!549 = !DIEnumerator(name: "UndefinedStyle", value: 0, isUnsigned: true)
!550 = !DIEnumerator(name: "NormalStyle", value: 1, isUnsigned: true)
!551 = !DIEnumerator(name: "ItalicStyle", value: 2, isUnsigned: true)
!552 = !DIEnumerator(name: "ObliqueStyle", value: 3, isUnsigned: true)
!553 = !DIEnumerator(name: "AnyStyle", value: 4, isUnsigned: true)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !547, line: 25, baseType: !5, size: 32, elements: !555)
!555 = !{!556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566}
!556 = !DIEnumerator(name: "UndefinedStretch", value: 0, isUnsigned: true)
!557 = !DIEnumerator(name: "NormalStretch", value: 1, isUnsigned: true)
!558 = !DIEnumerator(name: "UltraCondensedStretch", value: 2, isUnsigned: true)
!559 = !DIEnumerator(name: "ExtraCondensedStretch", value: 3, isUnsigned: true)
!560 = !DIEnumerator(name: "CondensedStretch", value: 4, isUnsigned: true)
!561 = !DIEnumerator(name: "SemiCondensedStretch", value: 5, isUnsigned: true)
!562 = !DIEnumerator(name: "SemiExpandedStretch", value: 6, isUnsigned: true)
!563 = !DIEnumerator(name: "ExpandedStretch", value: 7, isUnsigned: true)
!564 = !DIEnumerator(name: "ExtraExpandedStretch", value: 8, isUnsigned: true)
!565 = !DIEnumerator(name: "UltraExpandedStretch", value: 9, isUnsigned: true)
!566 = !DIEnumerator(name: "AnyStretch", value: 10, isUnsigned: true)
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 30, baseType: !5, size: 32, elements: !568)
!568 = !{!569, !570, !571, !572}
!569 = !DIEnumerator(name: "UndefinedAlign", value: 0, isUnsigned: true)
!570 = !DIEnumerator(name: "LeftAlign", value: 1, isUnsigned: true)
!571 = !DIEnumerator(name: "CenterAlign", value: 2, isUnsigned: true)
!572 = !DIEnumerator(name: "RightAlign", value: 3, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 38, baseType: !5, size: 32, elements: !574)
!574 = !{!575, !576, !577, !578}
!575 = !DIEnumerator(name: "UndefinedPathUnits", value: 0, isUnsigned: true)
!576 = !DIEnumerator(name: "UserSpace", value: 1, isUnsigned: true)
!577 = !DIEnumerator(name: "UserSpaceOnUse", value: 2, isUnsigned: true)
!578 = !DIEnumerator(name: "ObjectBoundingBox", value: 3, isUnsigned: true)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 123, baseType: !5, size: 32, elements: !580)
!580 = !{!581, !582}
!581 = !DIEnumerator(name: "UndefinedReference", value: 0, isUnsigned: true)
!582 = !DIEnumerator(name: "GradientReference", value: 1, isUnsigned: true)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !511, line: 55, baseType: !5, size: 32, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIEnumerator(name: "UndefinedDirection", value: 0, isUnsigned: true)
!586 = !DIEnumerator(name: "RightToLeftDirection", value: 1, isUnsigned: true)
!587 = !DIEnumerator(name: "LeftToRightDirection", value: 2, isUnsigned: true)
!588 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !589, line: 27, baseType: !5, size: 32, elements: !590)
!589 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!590 = !{!591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!591 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!592 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!593 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!594 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!595 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!596 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!597 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!598 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!599 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!600 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!601 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!602 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!603 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!604 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!605 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!606 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!607 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!608 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!609 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!610 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!611 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!612 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!613 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!614 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!615 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!616 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!617 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!618 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!619 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!620 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !622, line: 27, baseType: !5, size: 32, elements: !623)
!622 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!624 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!625 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!626 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!627 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!628 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!629 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!630 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!631 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!632 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!633 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!634 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!635 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!636 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!637 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!638 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!639 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!640 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!641 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!642 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 34, baseType: !5, size: 32, elements: !643)
!643 = !{!644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!644 = !DIEnumerator(name: "UndefinedLayer", value: 0, isUnsigned: true)
!645 = !DIEnumerator(name: "CoalesceLayer", value: 1, isUnsigned: true)
!646 = !DIEnumerator(name: "CompareAnyLayer", value: 2, isUnsigned: true)
!647 = !DIEnumerator(name: "CompareClearLayer", value: 3, isUnsigned: true)
!648 = !DIEnumerator(name: "CompareOverlayLayer", value: 4, isUnsigned: true)
!649 = !DIEnumerator(name: "DisposeLayer", value: 5, isUnsigned: true)
!650 = !DIEnumerator(name: "OptimizeLayer", value: 6, isUnsigned: true)
!651 = !DIEnumerator(name: "OptimizeImageLayer", value: 7, isUnsigned: true)
!652 = !DIEnumerator(name: "OptimizePlusLayer", value: 8, isUnsigned: true)
!653 = !DIEnumerator(name: "OptimizeTransLayer", value: 9, isUnsigned: true)
!654 = !DIEnumerator(name: "RemoveDupsLayer", value: 10, isUnsigned: true)
!655 = !DIEnumerator(name: "RemoveZeroLayer", value: 11, isUnsigned: true)
!656 = !DIEnumerator(name: "CompositeLayer", value: 12, isUnsigned: true)
!657 = !DIEnumerator(name: "MergeLayer", value: 13, isUnsigned: true)
!658 = !DIEnumerator(name: "FlattenLayer", value: 14, isUnsigned: true)
!659 = !DIEnumerator(name: "MosaicLayer", value: 15, isUnsigned: true)
!660 = !DIEnumerator(name: "TrimBoundsLayer", value: 16, isUnsigned: true)
!661 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !662, line: 25, baseType: !5, size: 32, elements: !663)
!662 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672}
!664 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!665 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!666 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!667 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!668 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!669 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!670 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!671 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!672 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 46, baseType: !5, size: 32, elements: !675)
!674 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687}
!676 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!677 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!678 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!679 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!680 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!681 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!682 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!683 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!684 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!685 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!686 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!687 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !689, file: !1, line: 1872, baseType: !5, size: 32, elements: !720)
!689 = distinct !DISubprogram(name: "FxOperatorPrecedence", scope: !1, file: !1, line: 1869, type: !690, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!690 = !DISubroutineType(types: !691)
!691 = !{!692, !692, !695}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !698)
!698 = !{!699, !701, !703, !705, !706, !708, !710, !715}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !697, file: !253, line: 105, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !697, file: !253, line: 108, baseType: !702, size: 32, offset: 32)
!702 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !697, file: !253, line: 111, baseType: !704, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !697, file: !253, line: 112, baseType: !704, size: 64, offset: 128)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !697, file: !253, line: 115, baseType: !707, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !697, file: !253, line: 118, baseType: !709, size: 32, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !697, file: !253, line: 121, baseType: !711, size: 64, offset: 320)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !713, line: 26, baseType: !714)
!713 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !713, line: 25, flags: DIFlagFwdDecl)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !697, file: !253, line: 124, baseType: !716, size: 64, offset: 384)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !717, line: 46, baseType: !718)
!717 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!718 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!719 = !{}
!720 = !{!721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738}
!721 = !DIEnumerator(name: "UndefinedPrecedence", value: 0, isUnsigned: true)
!722 = !DIEnumerator(name: "NullPrecedence", value: 1, isUnsigned: true)
!723 = !DIEnumerator(name: "BitwiseComplementPrecedence", value: 2, isUnsigned: true)
!724 = !DIEnumerator(name: "ExponentPrecedence", value: 3, isUnsigned: true)
!725 = !DIEnumerator(name: "ExponentialNotationPrecedence", value: 4, isUnsigned: true)
!726 = !DIEnumerator(name: "MultiplyPrecedence", value: 5, isUnsigned: true)
!727 = !DIEnumerator(name: "AdditionPrecedence", value: 6, isUnsigned: true)
!728 = !DIEnumerator(name: "ShiftPrecedence", value: 7, isUnsigned: true)
!729 = !DIEnumerator(name: "RelationalPrecedence", value: 8, isUnsigned: true)
!730 = !DIEnumerator(name: "EquivalencyPrecedence", value: 9, isUnsigned: true)
!731 = !DIEnumerator(name: "BitwiseAndPrecedence", value: 10, isUnsigned: true)
!732 = !DIEnumerator(name: "BitwiseOrPrecedence", value: 11, isUnsigned: true)
!733 = !DIEnumerator(name: "LogicalAndPrecedence", value: 12, isUnsigned: true)
!734 = !DIEnumerator(name: "LogicalOrPrecedence", value: 13, isUnsigned: true)
!735 = !DIEnumerator(name: "TernaryPrecedence", value: 14, isUnsigned: true)
!736 = !DIEnumerator(name: "AssignmentPrecedence", value: 15, isUnsigned: true)
!737 = !DIEnumerator(name: "CommaPrecedence", value: 16, isUnsigned: true)
!738 = !DIEnumerator(name: "SeparatorPrecedence", value: 17, isUnsigned: true)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !740, line: 25, baseType: !702, size: 32, elements: !741)
!740 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!741 = !{!742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813}
!742 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!743 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!744 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!745 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!746 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!747 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!748 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!749 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!750 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!751 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!752 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!753 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!754 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!755 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!756 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!757 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!758 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!759 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!760 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!761 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!762 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!763 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!764 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!765 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!766 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!767 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!768 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!769 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!770 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!771 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!772 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!773 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!774 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!775 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!776 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!777 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!778 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!779 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!780 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!781 = !DIEnumerator(name: "MagickListOptions", value: 38)
!782 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!783 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!784 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!785 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!786 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!787 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!788 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!789 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!790 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!791 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!792 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!793 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!794 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!795 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!796 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!797 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!798 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!799 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!800 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!801 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!802 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!803 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!804 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!805 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!806 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!807 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!808 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!809 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!810 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!811 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!812 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!813 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!814 = !{!815, !707, !718, !702, !1080, !1090, !694, !704, !1091, !880, !842, !847, !1092, !1093, !1094, !944, !1096, !692, !1098, !856, !1020, !1100, !950, !716, !1101, !1179, !1180, !1310, !1311, !1085, !987, !848, !1312, !1146}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "FxInfo", file: !817, line: 26, baseType: !818)
!817 = !DIFile(filename: "./magick/fx-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_FxInfo", file: !1, line: 110, size: 512, elements: !819)
!819 = !{!820, !1018, !1019, !1073, !1078, !1079, !1084, !1089}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !818, file: !1, line: 113, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !825)
!825 = !{!826, !828, !830, !832, !833, !835, !836, !837, !838, !839, !840, !841, !852, !853, !854, !855, !857, !871, !873, !874, !876, !877, !878, !879, !885, !886, !887, !895, !896, !897, !898, !899, !900, !902, !904, !906, !908, !910, !912, !914, !915, !916, !917, !918, !919, !920, !928, !943, !955, !956, !957, !958, !962, !966, !970, !971, !972, !973, !974, !975, !976, !978, !979, !989, !990, !992, !993, !994, !995, !996, !997, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1007, !1008, !1009, !1010, !1011, !1015, !1017}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !824, file: !73, line: 153, baseType: !827, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !824, file: !73, line: 156, baseType: !829, size: 32, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !824, file: !73, line: 159, baseType: !831, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !824, file: !73, line: 162, baseType: !716, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !824, file: !73, line: 165, baseType: !834, size: 32, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !824, file: !73, line: 168, baseType: !709, size: 32, offset: 224)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !824, file: !73, line: 169, baseType: !709, size: 32, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !824, file: !73, line: 172, baseType: !716, size: 64, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !824, file: !73, line: 173, baseType: !716, size: 64, offset: 384)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !824, file: !73, line: 174, baseType: !716, size: 64, offset: 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !824, file: !73, line: 175, baseType: !716, size: 64, offset: 512)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !824, file: !73, line: 178, baseType: !842, size: 64, offset: 576)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !845)
!845 = !{!846, !849, !850, !851}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !844, file: !326, line: 143, baseType: !847, size: 16)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !848)
!848 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !844, file: !326, line: 144, baseType: !847, size: 16, offset: 16)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !844, file: !326, line: 145, baseType: !847, size: 16, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !844, file: !326, line: 146, baseType: !847, size: 16, offset: 48)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !824, file: !73, line: 179, baseType: !843, size: 64, offset: 640)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !824, file: !73, line: 180, baseType: !843, size: 64, offset: 704)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !824, file: !73, line: 181, baseType: !843, size: 64, offset: 768)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !824, file: !73, line: 184, baseType: !856, size: 64, offset: 832)
!856 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !824, file: !73, line: 187, baseType: !858, size: 768, offset: 896)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !860)
!860 = !{!861, !868, !869, !870}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !859, file: !73, line: 124, baseType: !862, size: 192)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !864)
!864 = !{!865, !866, !867}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !863, file: !73, line: 98, baseType: !856, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !863, file: !73, line: 99, baseType: !856, size: 64, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !863, file: !73, line: 100, baseType: !856, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !859, file: !73, line: 125, baseType: !862, size: 192, offset: 192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !859, file: !73, line: 126, baseType: !862, size: 192, offset: 384)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !859, file: !73, line: 127, baseType: !862, size: 192, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !824, file: !73, line: 190, baseType: !872, size: 32, offset: 1664)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !824, file: !73, line: 193, baseType: !707, size: 64, offset: 1728)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !824, file: !73, line: 196, baseType: !875, size: 32, offset: 1792)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !824, file: !73, line: 199, baseType: !704, size: 64, offset: 1856)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !824, file: !73, line: 200, baseType: !704, size: 64, offset: 1920)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !824, file: !73, line: 201, baseType: !704, size: 64, offset: 1984)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !824, file: !73, line: 204, baseType: !880, size: 64, offset: 2048)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !881, line: 77, baseType: !882)
!881 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !883, line: 193, baseType: !884)
!883 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!884 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !824, file: !73, line: 207, baseType: !856, size: 64, offset: 2112)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !824, file: !73, line: 208, baseType: !856, size: 64, offset: 2176)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !824, file: !73, line: 211, baseType: !888, size: 256, offset: 2240)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !890)
!890 = !{!891, !892, !893, !894}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !889, file: !153, line: 124, baseType: !716, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !889, file: !153, line: 125, baseType: !716, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !889, file: !153, line: 128, baseType: !880, size: 64, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !889, file: !153, line: 129, baseType: !880, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !824, file: !73, line: 212, baseType: !888, size: 256, offset: 2496)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !824, file: !73, line: 213, baseType: !888, size: 256, offset: 2752)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !824, file: !73, line: 216, baseType: !856, size: 64, offset: 3008)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !824, file: !73, line: 217, baseType: !856, size: 64, offset: 3072)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !824, file: !73, line: 218, baseType: !856, size: 64, offset: 3136)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !824, file: !73, line: 221, baseType: !901, size: 32, offset: 3200)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !824, file: !73, line: 224, baseType: !903, size: 32, offset: 3232)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !824, file: !73, line: 227, baseType: !905, size: 32, offset: 3264)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !824, file: !73, line: 230, baseType: !907, size: 32, offset: 3296)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !824, file: !73, line: 233, baseType: !909, size: 32, offset: 3328)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !824, file: !73, line: 236, baseType: !911, size: 32, offset: 3360)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !824, file: !73, line: 239, baseType: !913, size: 64, offset: 3392)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !824, file: !73, line: 242, baseType: !716, size: 64, offset: 3456)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !824, file: !73, line: 243, baseType: !716, size: 64, offset: 3520)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !824, file: !73, line: 246, baseType: !880, size: 64, offset: 3584)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !824, file: !73, line: 249, baseType: !716, size: 64, offset: 3648)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !824, file: !73, line: 250, baseType: !716, size: 64, offset: 3712)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !824, file: !73, line: 253, baseType: !880, size: 64, offset: 3776)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !824, file: !73, line: 256, baseType: !921, size: 192, offset: 3840)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !922, line: 68, baseType: !923)
!922 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !922, line: 62, size: 192, elements: !924)
!924 = !{!925, !926, !927}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !923, file: !922, line: 65, baseType: !856, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !923, file: !922, line: 66, baseType: !856, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !923, file: !922, line: 67, baseType: !856, size: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !824, file: !73, line: 259, baseType: !929, size: 512, offset: 4032)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !931)
!931 = !{!932, !939, !940, !942}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !930, file: !247, line: 43, baseType: !933, size: 192)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !934, file: !247, line: 35, baseType: !856, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !934, file: !247, line: 36, baseType: !856, size: 64, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !934, file: !247, line: 37, baseType: !856, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !930, file: !247, line: 44, baseType: !933, size: 192, offset: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !930, file: !247, line: 47, baseType: !941, size: 32, offset: 384)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !930, file: !247, line: 50, baseType: !716, size: 64, offset: 448)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !824, file: !73, line: 262, baseType: !944, size: 64, offset: 4544)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !945, line: 26, baseType: !946)
!945 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!709, !692, !949, !952, !707}
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !951)
!951 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !954)
!954 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !824, file: !73, line: 265, baseType: !707, size: 64, offset: 4608)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !824, file: !73, line: 266, baseType: !707, size: 64, offset: 4672)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !824, file: !73, line: 267, baseType: !707, size: 64, offset: 4736)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !824, file: !73, line: 270, baseType: !959, size: 64, offset: 4800)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !961)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !824, file: !73, line: 273, baseType: !963, size: 64, offset: 4864)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !965)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !824, file: !73, line: 276, baseType: !967, size: 32768, offset: 4928)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 32768, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 4096)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !824, file: !73, line: 277, baseType: !967, size: 32768, offset: 37696)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !824, file: !73, line: 278, baseType: !967, size: 32768, offset: 70464)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !824, file: !73, line: 281, baseType: !716, size: 64, offset: 103232)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !824, file: !73, line: 282, baseType: !716, size: 64, offset: 103296)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !824, file: !73, line: 285, baseType: !696, size: 448, offset: 103360)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !824, file: !73, line: 288, baseType: !709, size: 32, offset: 103808)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !824, file: !73, line: 291, baseType: !977, size: 64, offset: 103872)
!977 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !880)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !824, file: !73, line: 294, baseType: !711, size: 64, offset: 103936)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !824, file: !73, line: 297, baseType: !980, size: 256, offset: 104000)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !982)
!982 = !{!983, !984, !985, !988}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !981, file: !89, line: 30, baseType: !704, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !981, file: !89, line: 33, baseType: !716, size: 64, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !981, file: !89, line: 36, baseType: !986, size: 64, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !981, file: !89, line: 39, baseType: !716, size: 64, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !824, file: !73, line: 298, baseType: !980, size: 256, offset: 104256)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !824, file: !73, line: 299, baseType: !991, size: 64, offset: 104512)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !824, file: !73, line: 302, baseType: !716, size: 64, offset: 104576)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !824, file: !73, line: 305, baseType: !716, size: 64, offset: 104640)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !824, file: !73, line: 308, baseType: !913, size: 64, offset: 104704)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !824, file: !73, line: 309, baseType: !913, size: 64, offset: 104768)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !824, file: !73, line: 310, baseType: !913, size: 64, offset: 104832)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !824, file: !73, line: 313, baseType: !998, size: 32, offset: 104896)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !824, file: !73, line: 316, baseType: !709, size: 32, offset: 104928)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !824, file: !73, line: 319, baseType: !843, size: 64, offset: 104960)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !824, file: !73, line: 322, baseType: !913, size: 64, offset: 105024)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !824, file: !73, line: 325, baseType: !888, size: 256, offset: 105088)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !824, file: !73, line: 328, baseType: !707, size: 64, offset: 105344)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !824, file: !73, line: 329, baseType: !707, size: 64, offset: 105408)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !824, file: !73, line: 332, baseType: !1006, size: 32, offset: 105472)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !824, file: !73, line: 335, baseType: !709, size: 32, offset: 105504)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !824, file: !73, line: 338, baseType: !953, size: 64, offset: 105536)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !824, file: !73, line: 341, baseType: !709, size: 32, offset: 105600)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !824, file: !73, line: 344, baseType: !716, size: 64, offset: 105664)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !824, file: !73, line: 347, baseType: !1012, size: 64, offset: 105728)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1013, line: 7, baseType: !1014)
!1013 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !883, line: 160, baseType: !884)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !824, file: !73, line: 350, baseType: !1016, size: 32, offset: 105792)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !824, file: !73, line: 353, baseType: !716, size: 64, offset: 105856)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !818, file: !1, line: 116, baseType: !704, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !818, file: !1, line: 119, baseType: !1020, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1022, line: 7, baseType: !1023)
!1022 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1024, line: 49, size: 1728, elements: !1025)
!1024 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1041, !1043, !1044, !1045, !1047, !1048, !1050, !1054, !1057, !1059, !1062, !1065, !1066, !1067, !1068, !1069}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1023, file: !1024, line: 51, baseType: !702, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1023, file: !1024, line: 54, baseType: !704, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1023, file: !1024, line: 55, baseType: !704, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1023, file: !1024, line: 56, baseType: !704, size: 64, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1023, file: !1024, line: 57, baseType: !704, size: 64, offset: 256)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1023, file: !1024, line: 58, baseType: !704, size: 64, offset: 320)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1023, file: !1024, line: 59, baseType: !704, size: 64, offset: 384)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1023, file: !1024, line: 60, baseType: !704, size: 64, offset: 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1023, file: !1024, line: 61, baseType: !704, size: 64, offset: 512)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1023, file: !1024, line: 64, baseType: !704, size: 64, offset: 576)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1023, file: !1024, line: 65, baseType: !704, size: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1023, file: !1024, line: 66, baseType: !704, size: 64, offset: 704)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1023, file: !1024, line: 68, baseType: !1039, size: 64, offset: 768)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1024, line: 36, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1023, file: !1024, line: 70, baseType: !1042, size: 64, offset: 832)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1023, file: !1024, line: 72, baseType: !702, size: 32, offset: 896)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1023, file: !1024, line: 73, baseType: !702, size: 32, offset: 928)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1023, file: !1024, line: 74, baseType: !1046, size: 64, offset: 960)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !883, line: 152, baseType: !884)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1023, file: !1024, line: 77, baseType: !848, size: 16, offset: 1024)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1023, file: !1024, line: 78, baseType: !1049, size: 8, offset: 1040)
!1049 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1023, file: !1024, line: 79, baseType: !1051, size: 8, offset: 1048)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 8, elements: !1052)
!1052 = !{!1053}
!1053 = !DISubrange(count: 1)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1023, file: !1024, line: 81, baseType: !1055, size: 64, offset: 1088)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1024, line: 43, baseType: null)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1023, file: !1024, line: 89, baseType: !1058, size: 64, offset: 1152)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !883, line: 153, baseType: !884)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1023, file: !1024, line: 91, baseType: !1060, size: 64, offset: 1216)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1024, line: 37, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1023, file: !1024, line: 92, baseType: !1063, size: 64, offset: 1280)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1024, line: 38, flags: DIFlagFwdDecl)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1023, file: !1024, line: 93, baseType: !1042, size: 64, offset: 1344)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1023, file: !1024, line: 94, baseType: !707, size: 64, offset: 1408)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1023, file: !1024, line: 95, baseType: !716, size: 64, offset: 1472)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1023, file: !1024, line: 96, baseType: !702, size: 32, offset: 1536)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1023, file: !1024, line: 98, baseType: !1070, size: 160, offset: 1568)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 160, elements: !1071)
!1071 = !{!1072}
!1072 = !DISubrange(count: 20)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !818, file: !1, line: 122, baseType: !1074, size: 64, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "SplayTreeInfo", file: !1076, line: 26, baseType: !1077)
!1076 = !DIFile(filename: "./magick/splay-tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "_SplayTreeInfo", file: !1076, line: 25, flags: DIFlagFwdDecl)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "symbols", scope: !818, file: !1, line: 123, baseType: !1074, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !818, file: !1, line: 126, baseType: !1080, size: 64, offset: 320)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !622, line: 50, baseType: !1083)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "random_info", scope: !818, file: !1, line: 129, baseType: !1085, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "RandomInfo", file: !1087, line: 31, baseType: !1088)
!1087 = !DIFile(filename: "./magick/random_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "_RandomInfo", file: !1087, line: 30, flags: DIFlagFwdDecl)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !818, file: !1, line: 132, baseType: !695, size: 64, offset: 448)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !847)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !1099)
!1099 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !4, line: 223, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !73, line: 356, size: 134336, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1140, !1141, !1142, !1143, !1144, !1145, !1147, !1148, !1149, !1150, !1151, !1152, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1176, !1177, !1178}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1104, file: !73, line: 359, baseType: !831, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !1104, file: !73, line: 362, baseType: !834, size: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !1104, file: !73, line: 365, baseType: !709, size: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1104, file: !73, line: 366, baseType: !709, size: 32, offset: 96)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !1104, file: !73, line: 367, baseType: !709, size: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !1104, file: !73, line: 368, baseType: !709, size: 32, offset: 160)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1104, file: !73, line: 371, baseType: !704, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !1104, file: !73, line: 372, baseType: !704, size: 64, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1104, file: !73, line: 373, baseType: !704, size: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !1104, file: !73, line: 374, baseType: !704, size: 64, offset: 384)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1104, file: !73, line: 377, baseType: !716, size: 64, offset: 448)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !1104, file: !73, line: 378, baseType: !716, size: 64, offset: 512)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1104, file: !73, line: 379, baseType: !716, size: 64, offset: 576)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !1104, file: !73, line: 382, baseType: !903, size: 32, offset: 640)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1104, file: !73, line: 385, baseType: !905, size: 32, offset: 672)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1104, file: !73, line: 388, baseType: !875, size: 32, offset: 704)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1104, file: !73, line: 391, baseType: !716, size: 64, offset: 768)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !1104, file: !73, line: 394, baseType: !704, size: 64, offset: 832)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1104, file: !73, line: 395, baseType: !704, size: 64, offset: 896)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1104, file: !73, line: 396, baseType: !704, size: 64, offset: 960)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1104, file: !73, line: 397, baseType: !704, size: 64, offset: 1024)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1104, file: !73, line: 398, baseType: !704, size: 64, offset: 1088)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1104, file: !73, line: 401, baseType: !856, size: 64, offset: 1152)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1104, file: !73, line: 402, baseType: !856, size: 64, offset: 1216)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1104, file: !73, line: 405, baseType: !843, size: 64, offset: 1280)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1104, file: !73, line: 406, baseType: !843, size: 64, offset: 1344)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1104, file: !73, line: 407, baseType: !843, size: 64, offset: 1408)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1104, file: !73, line: 410, baseType: !709, size: 32, offset: 1472)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !1104, file: !73, line: 411, baseType: !709, size: 32, offset: 1504)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1104, file: !73, line: 414, baseType: !716, size: 64, offset: 1536)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1104, file: !73, line: 417, baseType: !829, size: 32, offset: 1600)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1104, file: !73, line: 420, baseType: !1006, size: 32, offset: 1632)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !1104, file: !73, line: 423, baseType: !1139, size: 32, offset: 1664)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !589, line: 59, baseType: !588)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1104, file: !73, line: 426, baseType: !880, size: 64, offset: 1728)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !1104, file: !73, line: 429, baseType: !709, size: 32, offset: 1792)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1104, file: !73, line: 430, baseType: !709, size: 32, offset: 1824)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1104, file: !73, line: 433, baseType: !704, size: 64, offset: 1856)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !1104, file: !73, line: 434, baseType: !704, size: 64, offset: 1920)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1104, file: !73, line: 437, baseType: !1146, size: 32, offset: 1984)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !379)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1104, file: !73, line: 440, baseType: !1090, size: 64, offset: 2048)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1104, file: !73, line: 443, baseType: !707, size: 64, offset: 2112)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !1104, file: !73, line: 446, baseType: !944, size: 64, offset: 2176)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1104, file: !73, line: 449, baseType: !707, size: 64, offset: 2240)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1104, file: !73, line: 450, baseType: !707, size: 64, offset: 2304)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1104, file: !73, line: 453, baseType: !1153, size: 64, offset: 2368)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !1154, line: 26, baseType: !1155)
!1154 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!716, !821, !1158, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1104, file: !73, line: 456, baseType: !1020, size: 64, offset: 2432)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !1104, file: !73, line: 459, baseType: !707, size: 64, offset: 2496)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1104, file: !73, line: 462, baseType: !716, size: 64, offset: 2560)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1104, file: !73, line: 465, baseType: !967, size: 32768, offset: 2624)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1104, file: !73, line: 466, baseType: !967, size: 32768, offset: 35392)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1104, file: !73, line: 467, baseType: !967, size: 32768, offset: 68160)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1104, file: !73, line: 468, baseType: !967, size: 32768, offset: 100928)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1104, file: !73, line: 471, baseType: !709, size: 32, offset: 133696)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1104, file: !73, line: 474, baseType: !704, size: 64, offset: 133760)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !1104, file: !73, line: 477, baseType: !716, size: 64, offset: 133824)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !1104, file: !73, line: 478, baseType: !716, size: 64, offset: 133888)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !1104, file: !73, line: 481, baseType: !843, size: 64, offset: 133952)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1104, file: !73, line: 484, baseType: !716, size: 64, offset: 134016)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !1104, file: !73, line: 487, baseType: !1175, size: 32, offset: 134080)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !622, line: 47, baseType: !621)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !1104, file: !73, line: 490, baseType: !843, size: 64, offset: 134112)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1104, file: !73, line: 493, baseType: !707, size: 64, offset: 134208)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !1104, file: !73, line: 496, baseType: !709, size: 32, offset: 134272)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawInfo", file: !511, line: 333, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawInfo", file: !511, line: 205, size: 5760, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1198, !1199, !1200, !1201, !1202, !1249, !1250, !1251, !1252, !1253, !1254, !1256, !1258, !1260, !1261, !1262, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1272, !1274, !1275, !1276, !1277, !1278, !1280, !1281, !1282, !1283, !1285, !1286, !1287, !1289, !1290, !1291, !1303, !1304, !1305, !1306, !1307, !1308}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !1183, file: !511, line: 208, baseType: !704, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !1183, file: !511, line: 209, baseType: !704, size: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "viewbox", scope: !1183, file: !511, line: 212, baseType: !888, size: 256, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "affine", scope: !1183, file: !511, line: 215, baseType: !1189, size: 384, offset: 384)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !153, line: 102, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !153, line: 93, size: 384, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1190, file: !153, line: 96, baseType: !856, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !1190, file: !153, line: 97, baseType: !856, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !1190, file: !153, line: 98, baseType: !856, size: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1190, file: !153, line: 99, baseType: !856, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !1190, file: !153, line: 100, baseType: !856, size: 64, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !1190, file: !153, line: 101, baseType: !856, size: 64, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1183, file: !511, line: 218, baseType: !907, size: 32, offset: 768)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1183, file: !511, line: 221, baseType: !843, size: 64, offset: 800)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !1183, file: !511, line: 222, baseType: !843, size: 64, offset: 864)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_width", scope: !1183, file: !511, line: 225, baseType: !856, size: 64, offset: 960)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1183, file: !511, line: 228, baseType: !1203, size: 1024, offset: 1024)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientInfo", file: !511, line: 184, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GradientInfo", file: !511, line: 153, size: 1024, elements: !1205)
!1205 = !{!1206, !1208, !1209, !1217, !1237, !1238, !1240, !1241, !1242, !1248}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1204, file: !511, line: 156, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientType", file: !511, line: 75, baseType: !510)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_box", scope: !1204, file: !511, line: 159, baseType: !888, size: 256, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_vector", scope: !1204, file: !511, line: 162, baseType: !1210, size: 256, offset: 320)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !73, line: 110, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !73, line: 103, size: 256, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !1211, file: !73, line: 106, baseType: !856, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !1211, file: !73, line: 107, baseType: !856, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !1211, file: !73, line: 108, baseType: !856, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !1211, file: !73, line: 109, baseType: !856, size: 64, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stops", scope: !1204, file: !511, line: 165, baseType: !1218, size: 64, offset: 576)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "StopInfo", file: !511, line: 151, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_StopInfo", file: !511, line: 144, size: 512, elements: !1221)
!1221 = !{!1222, !1236}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1220, file: !511, line: 147, baseType: !1223, size: 448)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !1224, file: !326, line: 107, baseType: !827, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1224, file: !326, line: 110, baseType: !829, size: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !1224, file: !326, line: 113, baseType: !709, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1224, file: !326, line: 116, baseType: !856, size: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1224, file: !326, line: 119, baseType: !716, size: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1224, file: !326, line: 122, baseType: !1098, size: 32, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1224, file: !326, line: 123, baseType: !1098, size: 32, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1224, file: !326, line: 124, baseType: !1098, size: 32, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1224, file: !326, line: 125, baseType: !1098, size: 32, offset: 352)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1224, file: !326, line: 126, baseType: !1098, size: 32, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1220, file: !511, line: 150, baseType: !1098, size: 32, offset: 448)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "number_stops", scope: !1204, file: !511, line: 168, baseType: !716, size: 64, offset: 640)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !1204, file: !511, line: 171, baseType: !1239, size: 32, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpreadMethod", file: !511, line: 135, baseType: !516)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1204, file: !511, line: 174, baseType: !709, size: 32, offset: 736)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1204, file: !511, line: 177, baseType: !716, size: 64, offset: 768)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !1204, file: !511, line: 180, baseType: !1243, size: 128, offset: 832)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !511, line: 142, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !511, line: 137, size: 128, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1244, file: !511, line: 140, baseType: !856, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1244, file: !511, line: 141, baseType: !856, size: 64, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1204, file: !511, line: 183, baseType: !1098, size: 32, offset: 960)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "fill_pattern", scope: !1183, file: !511, line: 231, baseType: !1090, size: 64, offset: 2048)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1183, file: !511, line: 232, baseType: !1090, size: 64, offset: 2112)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_pattern", scope: !1183, file: !511, line: 233, baseType: !1090, size: 64, offset: 2176)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_antialias", scope: !1183, file: !511, line: 236, baseType: !709, size: 32, offset: 2240)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "text_antialias", scope: !1183, file: !511, line: 237, baseType: !709, size: 32, offset: 2272)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "fill_rule", scope: !1183, file: !511, line: 240, baseType: !1255, size: 32, offset: 2304)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "FillRule", file: !511, line: 68, baseType: !522)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "linecap", scope: !1183, file: !511, line: 243, baseType: !1257, size: 32, offset: 2336)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineCap", file: !511, line: 83, baseType: !527)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "linejoin", scope: !1183, file: !511, line: 246, baseType: !1259, size: 32, offset: 2368)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineJoin", file: !511, line: 91, baseType: !533)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "miterlimit", scope: !1183, file: !511, line: 249, baseType: !716, size: 64, offset: 2432)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "dash_offset", scope: !1183, file: !511, line: 252, baseType: !856, size: 64, offset: 2496)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "decorate", scope: !1183, file: !511, line: 255, baseType: !1263, size: 32, offset: 2560)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecorationType", file: !511, line: 53, baseType: !539)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !1183, file: !511, line: 258, baseType: !909, size: 32, offset: 2592)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1183, file: !511, line: 261, baseType: !704, size: 64, offset: 2624)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !1183, file: !511, line: 264, baseType: !716, size: 64, offset: 2688)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1183, file: !511, line: 267, baseType: !704, size: 64, offset: 2752)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !1183, file: !511, line: 268, baseType: !704, size: 64, offset: 2816)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1183, file: !511, line: 269, baseType: !704, size: 64, offset: 2880)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1183, file: !511, line: 272, baseType: !1271, size: 32, offset: 2944)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "StyleType", file: !547, line: 47, baseType: !546)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "stretch", scope: !1183, file: !511, line: 275, baseType: !1273, size: 32, offset: 2976)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "StretchType", file: !547, line: 38, baseType: !554)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1183, file: !511, line: 278, baseType: !716, size: 64, offset: 3008)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1183, file: !511, line: 281, baseType: !704, size: 64, offset: 3072)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1183, file: !511, line: 284, baseType: !856, size: 64, offset: 3136)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1183, file: !511, line: 287, baseType: !704, size: 64, offset: 3200)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1183, file: !511, line: 290, baseType: !1279, size: 32, offset: 3264)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlignType", file: !511, line: 36, baseType: !567)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "undercolor", scope: !1183, file: !511, line: 293, baseType: !843, size: 64, offset: 3296)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1183, file: !511, line: 294, baseType: !843, size: 64, offset: 3360)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1183, file: !511, line: 297, baseType: !704, size: 64, offset: 3456)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "dash_pattern", scope: !1183, file: !511, line: 300, baseType: !1284, size: 64, offset: 3520)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !1183, file: !511, line: 303, baseType: !704, size: 64, offset: 3584)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1183, file: !511, line: 306, baseType: !1210, size: 256, offset: 3648)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "clip_units", scope: !1183, file: !511, line: 309, baseType: !1288, size: 32, offset: 3904)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClipPathUnits", file: !511, line: 44, baseType: !573)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1183, file: !511, line: 312, baseType: !847, size: 16, offset: 3936)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !1183, file: !511, line: 315, baseType: !709, size: 32, offset: 3968)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "element_reference", scope: !1183, file: !511, line: 318, baseType: !1292, size: 1344, offset: 4032)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementReference", file: !511, line: 203, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ElementReference", file: !511, line: 186, size: 1344, elements: !1294)
!1294 = !{!1295, !1296, !1298, !1299, !1300, !1302}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1293, file: !511, line: 189, baseType: !704, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1293, file: !511, line: 192, baseType: !1297, size: 32, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceType", file: !511, line: 127, baseType: !579)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1293, file: !511, line: 195, baseType: !1203, size: 1024, offset: 128)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1293, file: !511, line: 198, baseType: !716, size: 64, offset: 1152)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1293, file: !511, line: 201, baseType: !1301, size: 64, offset: 1216)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1293, file: !511, line: 202, baseType: !1301, size: 64, offset: 1280)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1183, file: !511, line: 321, baseType: !709, size: 32, offset: 5376)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1183, file: !511, line: 324, baseType: !716, size: 64, offset: 5440)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !1183, file: !511, line: 327, baseType: !856, size: 64, offset: 5504)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "interword_spacing", scope: !1183, file: !511, line: 328, baseType: !856, size: 64, offset: 5568)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "interline_spacing", scope: !1183, file: !511, line: 329, baseType: !856, size: 64, offset: 5632)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1183, file: !511, line: 332, baseType: !1309, size: 32, offset: 5696)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirectionType", file: !511, line: 60, baseType: !583)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1313 = !{i32 7, !"Dwarf Version", i32 4}
!1314 = !{i32 2, !"Debug Info Version", i32 3}
!1315 = !{i32 1, !"wchar_size", i32 4}
!1316 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1317 = distinct !DISubprogram(name: "AcquireFxInfo", scope: !1, file: !1, line: 159, type: !1318, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!815, !821, !692}
!1320 = !DILocalVariable(name: "image", arg: 1, scope: !1317, file: !1, line: 159, type: !821)
!1321 = !DILocation(line: 159, column: 49, scope: !1317)
!1322 = !DILocalVariable(name: "expression", arg: 2, scope: !1317, file: !1, line: 159, type: !692)
!1323 = !DILocation(line: 159, column: 67, scope: !1317)
!1324 = !DILocalVariable(name: "fx_op", scope: !1317, file: !1, line: 162, type: !1325)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 16, elements: !1326)
!1326 = !{!1327}
!1327 = !DISubrange(count: 2)
!1328 = !DILocation(line: 162, column: 5, scope: !1317)
!1329 = !DILocalVariable(name: "next", scope: !1317, file: !1, line: 165, type: !821)
!1330 = !DILocation(line: 165, column: 6, scope: !1317)
!1331 = !DILocalVariable(name: "fx_info", scope: !1317, file: !1, line: 168, type: !815)
!1332 = !DILocation(line: 168, column: 6, scope: !1317)
!1333 = !DILocalVariable(name: "i", scope: !1317, file: !1, line: 171, type: !880)
!1334 = !DILocation(line: 171, column: 5, scope: !1317)
!1335 = !DILocation(line: 173, column: 22, scope: !1317)
!1336 = !DILocation(line: 173, column: 11, scope: !1317)
!1337 = !DILocation(line: 173, column: 10, scope: !1317)
!1338 = !DILocation(line: 174, column: 7, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 174, column: 7)
!1340 = !DILocation(line: 174, column: 15, scope: !1339)
!1341 = !DILocation(line: 174, column: 7, scope: !1317)
!1342 = !DILocalVariable(name: "message", scope: !1343, file: !1, line: 175, type: !704)
!1343 = distinct !DILexicalBlock(scope: !1339, file: !1, line: 175, column: 5)
!1344 = !DILocation(line: 175, column: 5, scope: !1343)
!1345 = !DILocalVariable(name: "exception", scope: !1343, file: !1, line: 175, type: !696)
!1346 = !DILocation(line: 176, column: 28, scope: !1317)
!1347 = !DILocation(line: 176, column: 10, scope: !1317)
!1348 = !DILocation(line: 177, column: 22, scope: !1317)
!1349 = !DILocation(line: 177, column: 3, scope: !1317)
!1350 = !DILocation(line: 177, column: 12, scope: !1317)
!1351 = !DILocation(line: 177, column: 21, scope: !1317)
!1352 = !DILocation(line: 178, column: 19, scope: !1317)
!1353 = !DILocation(line: 178, column: 3, scope: !1317)
!1354 = !DILocation(line: 178, column: 12, scope: !1317)
!1355 = !DILocation(line: 178, column: 18, scope: !1317)
!1356 = !DILocation(line: 179, column: 19, scope: !1317)
!1357 = !DILocation(line: 179, column: 3, scope: !1317)
!1358 = !DILocation(line: 179, column: 12, scope: !1317)
!1359 = !DILocation(line: 179, column: 18, scope: !1317)
!1360 = !DILocation(line: 181, column: 20, scope: !1317)
!1361 = !DILocation(line: 181, column: 3, scope: !1317)
!1362 = !DILocation(line: 181, column: 12, scope: !1317)
!1363 = !DILocation(line: 181, column: 19, scope: !1317)
!1364 = !DILocation(line: 184, column: 5, scope: !1317)
!1365 = !DILocation(line: 184, column: 14, scope: !1317)
!1366 = !DILocation(line: 183, column: 53, scope: !1317)
!1367 = !DILocation(line: 183, column: 32, scope: !1317)
!1368 = !DILocation(line: 183, column: 17, scope: !1317)
!1369 = !DILocation(line: 183, column: 3, scope: !1317)
!1370 = !DILocation(line: 183, column: 12, scope: !1317)
!1371 = !DILocation(line: 183, column: 16, scope: !1317)
!1372 = !DILocation(line: 185, column: 7, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 185, column: 7)
!1374 = !DILocation(line: 185, column: 16, scope: !1373)
!1375 = !DILocation(line: 185, column: 21, scope: !1373)
!1376 = !DILocation(line: 185, column: 7, scope: !1317)
!1377 = !DILocalVariable(name: "message", scope: !1378, file: !1, line: 186, type: !704)
!1378 = distinct !DILexicalBlock(scope: !1373, file: !1, line: 186, column: 5)
!1379 = !DILocation(line: 186, column: 5, scope: !1378)
!1380 = !DILocalVariable(name: "exception", scope: !1378, file: !1, line: 186, type: !696)
!1381 = !DILocation(line: 187, column: 4, scope: !1317)
!1382 = !DILocation(line: 188, column: 28, scope: !1317)
!1383 = !DILocation(line: 188, column: 37, scope: !1317)
!1384 = !DILocation(line: 188, column: 8, scope: !1317)
!1385 = !DILocation(line: 188, column: 7, scope: !1317)
!1386 = !DILocation(line: 189, column: 3, scope: !1317)
!1387 = !DILocation(line: 189, column: 11, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !1389, file: !1, line: 189, column: 3)
!1389 = distinct !DILexicalBlock(scope: !1317, file: !1, line: 189, column: 3)
!1390 = !DILocation(line: 189, column: 16, scope: !1388)
!1391 = !DILocation(line: 189, column: 3, scope: !1389)
!1392 = !DILocation(line: 191, column: 46, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1388, file: !1, line: 190, column: 3)
!1394 = !DILocation(line: 191, column: 51, scope: !1393)
!1395 = !DILocation(line: 191, column: 60, scope: !1393)
!1396 = !DILocation(line: 191, column: 22, scope: !1393)
!1397 = !DILocation(line: 191, column: 5, scope: !1393)
!1398 = !DILocation(line: 191, column: 14, scope: !1393)
!1399 = !DILocation(line: 191, column: 19, scope: !1393)
!1400 = !DILocation(line: 191, column: 21, scope: !1393)
!1401 = !DILocation(line: 192, column: 6, scope: !1393)
!1402 = !DILocation(line: 193, column: 3, scope: !1393)
!1403 = !DILocation(line: 189, column: 40, scope: !1388)
!1404 = !DILocation(line: 189, column: 46, scope: !1388)
!1405 = !DILocation(line: 189, column: 39, scope: !1388)
!1406 = !DILocation(line: 189, column: 3, scope: !1388)
!1407 = distinct !{!1407, !1391, !1408}
!1408 = !DILocation(line: 193, column: 3, scope: !1389)
!1409 = !DILocation(line: 194, column: 24, scope: !1317)
!1410 = !DILocation(line: 194, column: 3, scope: !1317)
!1411 = !DILocation(line: 194, column: 12, scope: !1317)
!1412 = !DILocation(line: 194, column: 23, scope: !1317)
!1413 = !DILocation(line: 195, column: 38, scope: !1317)
!1414 = !DILocation(line: 195, column: 23, scope: !1317)
!1415 = !DILocation(line: 195, column: 3, scope: !1317)
!1416 = !DILocation(line: 195, column: 12, scope: !1317)
!1417 = !DILocation(line: 195, column: 22, scope: !1317)
!1418 = !DILocation(line: 196, column: 17, scope: !1317)
!1419 = !DILocation(line: 196, column: 3, scope: !1317)
!1420 = !DILocation(line: 196, column: 12, scope: !1317)
!1421 = !DILocation(line: 196, column: 16, scope: !1317)
!1422 = !DILocation(line: 197, column: 28, scope: !1317)
!1423 = !DILocation(line: 197, column: 37, scope: !1317)
!1424 = !DILocation(line: 197, column: 10, scope: !1317)
!1425 = !DILocation(line: 201, column: 28, scope: !1317)
!1426 = !DILocation(line: 201, column: 37, scope: !1317)
!1427 = !DILocation(line: 201, column: 10, scope: !1317)
!1428 = !DILocation(line: 202, column: 28, scope: !1317)
!1429 = !DILocation(line: 202, column: 37, scope: !1317)
!1430 = !DILocation(line: 202, column: 10, scope: !1317)
!1431 = !DILocation(line: 203, column: 28, scope: !1317)
!1432 = !DILocation(line: 203, column: 37, scope: !1317)
!1433 = !DILocation(line: 203, column: 10, scope: !1317)
!1434 = !DILocation(line: 204, column: 28, scope: !1317)
!1435 = !DILocation(line: 204, column: 37, scope: !1317)
!1436 = !DILocation(line: 204, column: 10, scope: !1317)
!1437 = !DILocation(line: 208, column: 3, scope: !1317)
!1438 = !DILocation(line: 208, column: 11, scope: !1317)
!1439 = !DILocation(line: 209, column: 3, scope: !1317)
!1440 = !DILocation(line: 209, column: 9, scope: !1317)
!1441 = !DILocation(line: 210, column: 28, scope: !1317)
!1442 = !DILocation(line: 210, column: 37, scope: !1317)
!1443 = !DILocation(line: 210, column: 53, scope: !1317)
!1444 = !DILocation(line: 210, column: 10, scope: !1317)
!1445 = !DILocation(line: 211, column: 3, scope: !1317)
!1446 = !DILocation(line: 211, column: 9, scope: !1317)
!1447 = !DILocation(line: 212, column: 28, scope: !1317)
!1448 = !DILocation(line: 212, column: 37, scope: !1317)
!1449 = !DILocation(line: 212, column: 53, scope: !1317)
!1450 = !DILocation(line: 212, column: 10, scope: !1317)
!1451 = !DILocation(line: 213, column: 3, scope: !1317)
!1452 = !DILocation(line: 213, column: 9, scope: !1317)
!1453 = !DILocation(line: 214, column: 28, scope: !1317)
!1454 = !DILocation(line: 214, column: 37, scope: !1317)
!1455 = !DILocation(line: 214, column: 53, scope: !1317)
!1456 = !DILocation(line: 214, column: 10, scope: !1317)
!1457 = !DILocation(line: 215, column: 3, scope: !1317)
!1458 = !DILocation(line: 215, column: 9, scope: !1317)
!1459 = !DILocation(line: 216, column: 28, scope: !1317)
!1460 = !DILocation(line: 216, column: 37, scope: !1317)
!1461 = !DILocation(line: 216, column: 53, scope: !1317)
!1462 = !DILocation(line: 216, column: 10, scope: !1317)
!1463 = !DILocation(line: 217, column: 3, scope: !1317)
!1464 = !DILocation(line: 217, column: 9, scope: !1317)
!1465 = !DILocation(line: 218, column: 28, scope: !1317)
!1466 = !DILocation(line: 218, column: 37, scope: !1317)
!1467 = !DILocation(line: 218, column: 53, scope: !1317)
!1468 = !DILocation(line: 218, column: 10, scope: !1317)
!1469 = !DILocation(line: 219, column: 3, scope: !1317)
!1470 = !DILocation(line: 219, column: 9, scope: !1317)
!1471 = !DILocation(line: 220, column: 28, scope: !1317)
!1472 = !DILocation(line: 220, column: 37, scope: !1317)
!1473 = !DILocation(line: 220, column: 53, scope: !1317)
!1474 = !DILocation(line: 220, column: 10, scope: !1317)
!1475 = !DILocation(line: 221, column: 3, scope: !1317)
!1476 = !DILocation(line: 221, column: 9, scope: !1317)
!1477 = !DILocation(line: 222, column: 28, scope: !1317)
!1478 = !DILocation(line: 222, column: 37, scope: !1317)
!1479 = !DILocation(line: 222, column: 53, scope: !1317)
!1480 = !DILocation(line: 222, column: 10, scope: !1317)
!1481 = !DILocation(line: 223, column: 3, scope: !1317)
!1482 = !DILocation(line: 223, column: 9, scope: !1317)
!1483 = !DILocation(line: 224, column: 28, scope: !1317)
!1484 = !DILocation(line: 224, column: 37, scope: !1317)
!1485 = !DILocation(line: 224, column: 53, scope: !1317)
!1486 = !DILocation(line: 224, column: 10, scope: !1317)
!1487 = !DILocation(line: 225, column: 3, scope: !1317)
!1488 = !DILocation(line: 225, column: 9, scope: !1317)
!1489 = !DILocation(line: 226, column: 28, scope: !1317)
!1490 = !DILocation(line: 226, column: 37, scope: !1317)
!1491 = !DILocation(line: 226, column: 53, scope: !1317)
!1492 = !DILocation(line: 226, column: 10, scope: !1317)
!1493 = !DILocation(line: 227, column: 10, scope: !1317)
!1494 = !DILocation(line: 227, column: 3, scope: !1317)
!1495 = distinct !DISubprogram(name: "AddNoiseImage", scope: !1, file: !1, line: 262, type: !1496, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!1090, !821, !1498, !695}
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "NoiseType", file: !369, line: 37, baseType: !368)
!1500 = !DILocalVariable(name: "image", arg: 1, scope: !1495, file: !1, line: 262, type: !821)
!1501 = !DILocation(line: 262, column: 48, scope: !1495)
!1502 = !DILocalVariable(name: "noise_type", arg: 2, scope: !1495, file: !1, line: 262, type: !1498)
!1503 = !DILocation(line: 262, column: 70, scope: !1495)
!1504 = !DILocalVariable(name: "exception", arg: 3, scope: !1495, file: !1, line: 263, type: !695)
!1505 = !DILocation(line: 263, column: 18, scope: !1495)
!1506 = !DILocalVariable(name: "noise_image", scope: !1495, file: !1, line: 266, type: !1090)
!1507 = !DILocation(line: 266, column: 6, scope: !1495)
!1508 = !DILocation(line: 268, column: 36, scope: !1495)
!1509 = !DILocation(line: 268, column: 58, scope: !1495)
!1510 = !DILocation(line: 268, column: 69, scope: !1495)
!1511 = !DILocation(line: 268, column: 15, scope: !1495)
!1512 = !DILocation(line: 268, column: 14, scope: !1495)
!1513 = !DILocation(line: 269, column: 10, scope: !1495)
!1514 = !DILocation(line: 269, column: 3, scope: !1495)
!1515 = distinct !DISubprogram(name: "AddNoiseImageChannel", scope: !1, file: !1, line: 272, type: !1516, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!1090, !821, !1518, !1498, !695}
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!1519 = !DILocalVariable(name: "image", arg: 1, scope: !1515, file: !1, line: 272, type: !821)
!1520 = !DILocation(line: 272, column: 55, scope: !1515)
!1521 = !DILocalVariable(name: "channel", arg: 2, scope: !1515, file: !1, line: 273, type: !1518)
!1522 = !DILocation(line: 273, column: 21, scope: !1515)
!1523 = !DILocalVariable(name: "noise_type", arg: 3, scope: !1515, file: !1, line: 273, type: !1498)
!1524 = !DILocation(line: 273, column: 45, scope: !1515)
!1525 = !DILocalVariable(name: "exception", arg: 4, scope: !1515, file: !1, line: 273, type: !695)
!1526 = !DILocation(line: 273, column: 71, scope: !1515)
!1527 = !DILocalVariable(name: "image_view", scope: !1515, file: !1, line: 278, type: !1081)
!1528 = !DILocation(line: 278, column: 6, scope: !1515)
!1529 = !DILocalVariable(name: "noise_view", scope: !1515, file: !1, line: 279, type: !1081)
!1530 = !DILocation(line: 279, column: 6, scope: !1515)
!1531 = !DILocalVariable(name: "option", scope: !1515, file: !1, line: 282, type: !692)
!1532 = !DILocation(line: 282, column: 6, scope: !1515)
!1533 = !DILocalVariable(name: "attenuate", scope: !1515, file: !1, line: 285, type: !856)
!1534 = !DILocation(line: 285, column: 5, scope: !1515)
!1535 = !DILocalVariable(name: "noise_image", scope: !1515, file: !1, line: 288, type: !1090)
!1536 = !DILocation(line: 288, column: 6, scope: !1515)
!1537 = !DILocalVariable(name: "status", scope: !1515, file: !1, line: 291, type: !709)
!1538 = !DILocation(line: 291, column: 5, scope: !1515)
!1539 = !DILocalVariable(name: "progress", scope: !1515, file: !1, line: 294, type: !950)
!1540 = !DILocation(line: 294, column: 5, scope: !1515)
!1541 = !DILocalVariable(name: "random_info", scope: !1515, file: !1, line: 297, type: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1311)
!1543 = !DILocation(line: 297, column: 16, scope: !1515)
!1544 = !DILocalVariable(name: "y", scope: !1515, file: !1, line: 300, type: !880)
!1545 = !DILocation(line: 300, column: 5, scope: !1515)
!1546 = !DILocation(line: 312, column: 7, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 312, column: 7)
!1548 = !DILocation(line: 312, column: 14, scope: !1547)
!1549 = !DILocation(line: 312, column: 20, scope: !1547)
!1550 = !DILocation(line: 312, column: 7, scope: !1515)
!1551 = !DILocation(line: 313, column: 61, scope: !1547)
!1552 = !DILocation(line: 313, column: 68, scope: !1547)
!1553 = !DILocation(line: 313, column: 12, scope: !1547)
!1554 = !DILocation(line: 313, column: 5, scope: !1547)
!1555 = !DILocation(line: 317, column: 39, scope: !1515)
!1556 = !DILocation(line: 317, column: 45, scope: !1515)
!1557 = !DILocation(line: 317, column: 53, scope: !1515)
!1558 = !DILocation(line: 317, column: 64, scope: !1515)
!1559 = !DILocation(line: 317, column: 15, scope: !1515)
!1560 = !DILocation(line: 317, column: 14, scope: !1515)
!1561 = !DILocation(line: 318, column: 7, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 318, column: 7)
!1563 = !DILocation(line: 318, column: 19, scope: !1562)
!1564 = !DILocation(line: 318, column: 7, scope: !1515)
!1565 = !DILocation(line: 319, column: 12, scope: !1562)
!1566 = !DILocation(line: 319, column: 5, scope: !1562)
!1567 = !DILocation(line: 321, column: 26, scope: !1515)
!1568 = !DILocation(line: 321, column: 47, scope: !1515)
!1569 = !DILocation(line: 321, column: 15, scope: !1515)
!1570 = !DILocation(line: 321, column: 14, scope: !1515)
!1571 = !DILocation(line: 322, column: 7, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 322, column: 7)
!1573 = !DILocation(line: 322, column: 19, scope: !1572)
!1574 = !DILocation(line: 322, column: 7, scope: !1515)
!1575 = !DILocation(line: 323, column: 5, scope: !1572)
!1576 = !DILocation(line: 324, column: 28, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 324, column: 7)
!1578 = !DILocation(line: 324, column: 7, scope: !1577)
!1579 = !DILocation(line: 324, column: 53, scope: !1577)
!1580 = !DILocation(line: 324, column: 7, scope: !1515)
!1581 = !DILocation(line: 326, column: 24, scope: !1582)
!1582 = distinct !DILexicalBlock(scope: !1577, file: !1, line: 325, column: 5)
!1583 = !DILocation(line: 326, column: 35, scope: !1582)
!1584 = !DILocation(line: 326, column: 48, scope: !1582)
!1585 = !DILocation(line: 326, column: 7, scope: !1582)
!1586 = !DILocation(line: 327, column: 32, scope: !1582)
!1587 = !DILocation(line: 327, column: 19, scope: !1582)
!1588 = !DILocation(line: 327, column: 18, scope: !1582)
!1589 = !DILocation(line: 328, column: 7, scope: !1582)
!1590 = !DILocation(line: 333, column: 12, scope: !1515)
!1591 = !DILocation(line: 334, column: 27, scope: !1515)
!1592 = !DILocation(line: 334, column: 10, scope: !1515)
!1593 = !DILocation(line: 334, column: 9, scope: !1515)
!1594 = !DILocation(line: 335, column: 7, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 335, column: 7)
!1596 = !DILocation(line: 335, column: 14, scope: !1595)
!1597 = !DILocation(line: 335, column: 7, scope: !1515)
!1598 = !DILocation(line: 336, column: 30, scope: !1595)
!1599 = !DILocation(line: 336, column: 15, scope: !1595)
!1600 = !DILocation(line: 336, column: 14, scope: !1595)
!1601 = !DILocation(line: 336, column: 5, scope: !1595)
!1602 = !DILocation(line: 337, column: 9, scope: !1515)
!1603 = !DILocation(line: 338, column: 11, scope: !1515)
!1604 = !DILocation(line: 339, column: 15, scope: !1515)
!1605 = !DILocation(line: 339, column: 14, scope: !1515)
!1606 = !DILocation(line: 343, column: 38, scope: !1515)
!1607 = !DILocation(line: 343, column: 44, scope: !1515)
!1608 = !DILocation(line: 343, column: 14, scope: !1515)
!1609 = !DILocation(line: 343, column: 13, scope: !1515)
!1610 = !DILocation(line: 344, column: 40, scope: !1515)
!1611 = !DILocation(line: 344, column: 52, scope: !1515)
!1612 = !DILocation(line: 344, column: 14, scope: !1515)
!1613 = !DILocation(line: 344, column: 13, scope: !1515)
!1614 = !DILocation(line: 349, column: 9, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 349, column: 3)
!1616 = !DILocation(line: 349, column: 8, scope: !1615)
!1617 = !DILocation(line: 349, column: 13, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1615, file: !1, line: 349, column: 3)
!1619 = !DILocation(line: 349, column: 27, scope: !1618)
!1620 = !DILocation(line: 349, column: 34, scope: !1618)
!1621 = !DILocation(line: 349, column: 15, scope: !1618)
!1622 = !DILocation(line: 349, column: 3, scope: !1615)
!1623 = !DILocalVariable(name: "id", scope: !1624, file: !1, line: 352, type: !1625)
!1624 = distinct !DILexicalBlock(scope: !1618, file: !1, line: 350, column: 3)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !702)
!1626 = !DILocation(line: 352, column: 7, scope: !1624)
!1627 = !DILocation(line: 352, column: 12, scope: !1624)
!1628 = !DILocalVariable(name: "sync", scope: !1624, file: !1, line: 355, type: !709)
!1629 = !DILocation(line: 355, column: 7, scope: !1624)
!1630 = !DILocalVariable(name: "indexes", scope: !1624, file: !1, line: 358, type: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1094)
!1632 = !DILocation(line: 358, column: 17, scope: !1624)
!1633 = !DILocalVariable(name: "p", scope: !1624, file: !1, line: 361, type: !1634)
!1634 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1096)
!1635 = !DILocation(line: 361, column: 17, scope: !1624)
!1636 = !DILocalVariable(name: "noise_indexes", scope: !1624, file: !1, line: 364, type: !1637)
!1637 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1092)
!1638 = !DILocation(line: 364, column: 17, scope: !1624)
!1639 = !DILocalVariable(name: "x", scope: !1624, file: !1, line: 367, type: !880)
!1640 = !DILocation(line: 367, column: 7, scope: !1624)
!1641 = !DILocalVariable(name: "q", scope: !1624, file: !1, line: 370, type: !1642)
!1642 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !842)
!1643 = !DILocation(line: 370, column: 17, scope: !1624)
!1644 = !DILocation(line: 372, column: 9, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 372, column: 9)
!1646 = !DILocation(line: 372, column: 16, scope: !1645)
!1647 = !DILocation(line: 372, column: 9, scope: !1624)
!1648 = !DILocation(line: 373, column: 7, scope: !1645)
!1649 = !DILocation(line: 374, column: 33, scope: !1624)
!1650 = !DILocation(line: 374, column: 46, scope: !1624)
!1651 = !DILocation(line: 374, column: 48, scope: !1624)
!1652 = !DILocation(line: 374, column: 55, scope: !1624)
!1653 = !DILocation(line: 374, column: 65, scope: !1624)
!1654 = !DILocation(line: 374, column: 7, scope: !1624)
!1655 = !DILocation(line: 374, column: 6, scope: !1624)
!1656 = !DILocation(line: 375, column: 35, scope: !1624)
!1657 = !DILocation(line: 375, column: 48, scope: !1624)
!1658 = !DILocation(line: 375, column: 50, scope: !1624)
!1659 = !DILocation(line: 375, column: 63, scope: !1624)
!1660 = !DILocation(line: 376, column: 7, scope: !1624)
!1661 = !DILocation(line: 375, column: 7, scope: !1624)
!1662 = !DILocation(line: 375, column: 6, scope: !1624)
!1663 = !DILocation(line: 377, column: 10, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 377, column: 9)
!1665 = !DILocation(line: 377, column: 12, scope: !1664)
!1666 = !DILocation(line: 377, column: 37, scope: !1664)
!1667 = !DILocation(line: 377, column: 41, scope: !1664)
!1668 = !DILocation(line: 377, column: 43, scope: !1664)
!1669 = !DILocation(line: 377, column: 9, scope: !1624)
!1670 = !DILocation(line: 379, column: 15, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1664, file: !1, line: 378, column: 7)
!1672 = !DILocation(line: 380, column: 9, scope: !1671)
!1673 = !DILocation(line: 382, column: 43, scope: !1624)
!1674 = !DILocation(line: 382, column: 13, scope: !1624)
!1675 = !DILocation(line: 382, column: 12, scope: !1624)
!1676 = !DILocation(line: 383, column: 51, scope: !1624)
!1677 = !DILocation(line: 383, column: 19, scope: !1624)
!1678 = !DILocation(line: 383, column: 18, scope: !1624)
!1679 = !DILocation(line: 384, column: 11, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 384, column: 5)
!1681 = !DILocation(line: 384, column: 10, scope: !1680)
!1682 = !DILocation(line: 384, column: 15, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !1680, file: !1, line: 384, column: 5)
!1684 = !DILocation(line: 384, column: 29, scope: !1683)
!1685 = !DILocation(line: 384, column: 36, scope: !1683)
!1686 = !DILocation(line: 384, column: 17, scope: !1683)
!1687 = !DILocation(line: 384, column: 5, scope: !1680)
!1688 = !DILocation(line: 386, column: 12, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 386, column: 11)
!1690 = distinct !DILexicalBlock(scope: !1683, file: !1, line: 385, column: 5)
!1691 = !DILocation(line: 386, column: 20, scope: !1689)
!1692 = !DILocation(line: 386, column: 34, scope: !1689)
!1693 = !DILocation(line: 386, column: 11, scope: !1690)
!1694 = !DILocation(line: 387, column: 9, scope: !1689)
!1695 = !DILocation(line: 389, column: 28, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 389, column: 11)
!1697 = !DILocation(line: 389, column: 35, scope: !1696)
!1698 = !DILocation(line: 389, column: 11, scope: !1696)
!1699 = !DILocation(line: 389, column: 47, scope: !1696)
!1700 = !DILocation(line: 389, column: 11, scope: !1690)
!1701 = !DILocation(line: 391, column: 11, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1696, file: !1, line: 390, column: 9)
!1703 = !DILocation(line: 392, column: 11, scope: !1702)
!1704 = !DILocation(line: 393, column: 9, scope: !1702)
!1705 = !DILocation(line: 396, column: 16, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1707, file: !1, line: 396, column: 15)
!1707 = distinct !DILexicalBlock(scope: !1696, file: !1, line: 395, column: 9)
!1708 = !DILocation(line: 396, column: 24, scope: !1706)
!1709 = !DILocation(line: 396, column: 40, scope: !1706)
!1710 = !DILocation(line: 396, column: 15, scope: !1707)
!1711 = !DILocation(line: 397, column: 13, scope: !1706)
!1712 = !DILocation(line: 399, column: 16, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1707, file: !1, line: 399, column: 15)
!1714 = !DILocation(line: 399, column: 24, scope: !1713)
!1715 = !DILocation(line: 399, column: 39, scope: !1713)
!1716 = !DILocation(line: 399, column: 15, scope: !1707)
!1717 = !DILocation(line: 400, column: 13, scope: !1713)
!1718 = !DILocation(line: 403, column: 12, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 403, column: 11)
!1720 = !DILocation(line: 403, column: 20, scope: !1719)
!1721 = !DILocation(line: 403, column: 38, scope: !1719)
!1722 = !DILocation(line: 403, column: 11, scope: !1690)
!1723 = !DILocation(line: 404, column: 9, scope: !1719)
!1724 = !DILocation(line: 406, column: 13, scope: !1725)
!1725 = distinct !DILexicalBlock(scope: !1690, file: !1, line: 406, column: 11)
!1726 = !DILocation(line: 406, column: 21, scope: !1725)
!1727 = !DILocation(line: 406, column: 37, scope: !1725)
!1728 = !DILocation(line: 406, column: 43, scope: !1725)
!1729 = !DILocation(line: 407, column: 12, scope: !1725)
!1730 = !DILocation(line: 407, column: 19, scope: !1725)
!1731 = !DILocation(line: 407, column: 30, scope: !1725)
!1732 = !DILocation(line: 406, column: 11, scope: !1690)
!1733 = !DILocation(line: 408, column: 9, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !1, line: 408, column: 9)
!1735 = distinct !DILexicalBlock(scope: !1725, file: !1, line: 408, column: 9)
!1736 = !DILocation(line: 408, column: 9, scope: !1735)
!1737 = !DILocation(line: 411, column: 8, scope: !1690)
!1738 = !DILocation(line: 412, column: 8, scope: !1690)
!1739 = !DILocation(line: 413, column: 5, scope: !1690)
!1740 = !DILocation(line: 384, column: 46, scope: !1683)
!1741 = !DILocation(line: 384, column: 5, scope: !1683)
!1742 = distinct !{!1742, !1687, !1743}
!1743 = !DILocation(line: 413, column: 5, scope: !1680)
!1744 = !DILocation(line: 414, column: 39, scope: !1624)
!1745 = !DILocation(line: 414, column: 50, scope: !1624)
!1746 = !DILocation(line: 414, column: 10, scope: !1624)
!1747 = !DILocation(line: 414, column: 9, scope: !1624)
!1748 = !DILocation(line: 415, column: 9, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 415, column: 9)
!1750 = !DILocation(line: 415, column: 14, scope: !1749)
!1751 = !DILocation(line: 415, column: 9, scope: !1624)
!1752 = !DILocation(line: 416, column: 13, scope: !1749)
!1753 = !DILocation(line: 416, column: 7, scope: !1749)
!1754 = !DILocation(line: 417, column: 9, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 417, column: 9)
!1756 = !DILocation(line: 417, column: 16, scope: !1755)
!1757 = !DILocation(line: 417, column: 33, scope: !1755)
!1758 = !DILocation(line: 417, column: 9, scope: !1624)
!1759 = !DILocalVariable(name: "proceed", scope: !1760, file: !1, line: 420, type: !709)
!1760 = distinct !DILexicalBlock(scope: !1755, file: !1, line: 418, column: 7)
!1761 = !DILocation(line: 420, column: 11, scope: !1760)
!1762 = !DILocation(line: 425, column: 34, scope: !1760)
!1763 = !DILocation(line: 425, column: 65, scope: !1760)
!1764 = !DILocation(line: 426, column: 11, scope: !1760)
!1765 = !DILocation(line: 426, column: 18, scope: !1760)
!1766 = !DILocation(line: 425, column: 17, scope: !1760)
!1767 = !DILocation(line: 425, column: 16, scope: !1760)
!1768 = !DILocation(line: 427, column: 13, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 427, column: 13)
!1770 = !DILocation(line: 427, column: 21, scope: !1769)
!1771 = !DILocation(line: 427, column: 13, scope: !1760)
!1772 = !DILocation(line: 428, column: 17, scope: !1769)
!1773 = !DILocation(line: 428, column: 11, scope: !1769)
!1774 = !DILocation(line: 429, column: 7, scope: !1760)
!1775 = !DILocation(line: 430, column: 3, scope: !1624)
!1776 = !DILocation(line: 349, column: 41, scope: !1618)
!1777 = !DILocation(line: 349, column: 3, scope: !1618)
!1778 = distinct !{!1778, !1622, !1779}
!1779 = !DILocation(line: 430, column: 3, scope: !1615)
!1780 = !DILocation(line: 431, column: 31, scope: !1515)
!1781 = !DILocation(line: 431, column: 14, scope: !1515)
!1782 = !DILocation(line: 431, column: 13, scope: !1515)
!1783 = !DILocation(line: 432, column: 31, scope: !1515)
!1784 = !DILocation(line: 432, column: 14, scope: !1515)
!1785 = !DILocation(line: 432, column: 13, scope: !1515)
!1786 = !DILocation(line: 433, column: 42, scope: !1515)
!1787 = !DILocation(line: 433, column: 15, scope: !1515)
!1788 = !DILocation(line: 433, column: 14, scope: !1515)
!1789 = !DILocation(line: 434, column: 7, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 434, column: 7)
!1791 = !DILocation(line: 434, column: 14, scope: !1790)
!1792 = !DILocation(line: 434, column: 7, scope: !1515)
!1793 = !DILocation(line: 435, column: 30, scope: !1790)
!1794 = !DILocation(line: 435, column: 17, scope: !1790)
!1795 = !DILocation(line: 435, column: 16, scope: !1790)
!1796 = !DILocation(line: 435, column: 5, scope: !1790)
!1797 = !DILocation(line: 436, column: 10, scope: !1515)
!1798 = !DILocation(line: 436, column: 3, scope: !1515)
!1799 = !DILocation(line: 437, column: 1, scope: !1515)
!1800 = distinct !DISubprogram(name: "StringToDouble", scope: !1801, file: !1801, line: 42, type: !1802, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1801 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!856, !1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !692)
!1805 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1091)
!1806 = !DILocalVariable(name: "string", arg: 1, scope: !1800, file: !1801, line: 42, type: !1804)
!1807 = !DILocation(line: 42, column: 58, scope: !1800)
!1808 = !DILocalVariable(name: "sentinal", arg: 2, scope: !1800, file: !1801, line: 43, type: !1805)
!1809 = !DILocation(line: 43, column: 19, scope: !1800)
!1810 = !DILocation(line: 45, column: 31, scope: !1800)
!1811 = !DILocation(line: 45, column: 38, scope: !1800)
!1812 = !DILocation(line: 45, column: 10, scope: !1800)
!1813 = !DILocation(line: 45, column: 3, scope: !1800)
!1814 = distinct !DISubprogram(name: "AcquireRandomInfoThreadSet", scope: !1815, file: !1815, line: 40, type: !1816, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1815 = !DIFile(filename: "./magick/random-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!1311}
!1818 = !DILocalVariable(name: "i", scope: !1814, file: !1815, line: 43, type: !880)
!1819 = !DILocation(line: 43, column: 5, scope: !1814)
!1820 = !DILocalVariable(name: "random_info", scope: !1814, file: !1815, line: 46, type: !1311)
!1821 = !DILocation(line: 46, column: 7, scope: !1814)
!1822 = !DILocalVariable(name: "number_threads", scope: !1814, file: !1815, line: 49, type: !716)
!1823 = !DILocation(line: 49, column: 5, scope: !1814)
!1824 = !DILocation(line: 51, column: 27, scope: !1814)
!1825 = !DILocation(line: 51, column: 17, scope: !1814)
!1826 = !DILocation(line: 52, column: 52, scope: !1814)
!1827 = !DILocation(line: 52, column: 31, scope: !1814)
!1828 = !DILocation(line: 52, column: 15, scope: !1814)
!1829 = !DILocation(line: 52, column: 14, scope: !1814)
!1830 = !DILocation(line: 54, column: 7, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1814, file: !1815, line: 54, column: 7)
!1832 = !DILocation(line: 54, column: 19, scope: !1831)
!1833 = !DILocation(line: 54, column: 7, scope: !1814)
!1834 = !DILocation(line: 55, column: 5, scope: !1831)
!1835 = !DILocation(line: 56, column: 28, scope: !1814)
!1836 = !DILocation(line: 56, column: 42, scope: !1814)
!1837 = !DILocation(line: 56, column: 56, scope: !1814)
!1838 = !DILocation(line: 56, column: 10, scope: !1814)
!1839 = !DILocation(line: 57, column: 9, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !1814, file: !1815, line: 57, column: 3)
!1841 = !DILocation(line: 57, column: 8, scope: !1840)
!1842 = !DILocation(line: 57, column: 13, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1840, file: !1815, line: 57, column: 3)
!1844 = !DILocation(line: 57, column: 27, scope: !1843)
!1845 = !DILocation(line: 57, column: 15, scope: !1843)
!1846 = !DILocation(line: 57, column: 3, scope: !1840)
!1847 = !DILocation(line: 59, column: 20, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1843, file: !1815, line: 58, column: 3)
!1849 = !DILocation(line: 59, column: 5, scope: !1848)
!1850 = !DILocation(line: 59, column: 17, scope: !1848)
!1851 = !DILocation(line: 59, column: 19, scope: !1848)
!1852 = !DILocation(line: 60, column: 9, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1848, file: !1815, line: 60, column: 9)
!1854 = !DILocation(line: 60, column: 21, scope: !1853)
!1855 = !DILocation(line: 60, column: 24, scope: !1853)
!1856 = !DILocation(line: 60, column: 9, scope: !1848)
!1857 = !DILocation(line: 61, column: 41, scope: !1853)
!1858 = !DILocation(line: 61, column: 14, scope: !1853)
!1859 = !DILocation(line: 61, column: 7, scope: !1853)
!1860 = !DILocation(line: 62, column: 3, scope: !1848)
!1861 = !DILocation(line: 57, column: 44, scope: !1843)
!1862 = !DILocation(line: 57, column: 3, scope: !1843)
!1863 = distinct !{!1863, !1846, !1864}
!1864 = !DILocation(line: 62, column: 3, scope: !1840)
!1865 = !DILocation(line: 63, column: 10, scope: !1814)
!1866 = !DILocation(line: 63, column: 3, scope: !1814)
!1867 = !DILocation(line: 64, column: 1, scope: !1814)
!1868 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !1869, file: !1869, line: 117, type: !1870, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1869 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!702}
!1872 = !DILocation(line: 122, column: 3, scope: !1868)
!1873 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !1874, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!847, !1876}
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1877 = !DILocalVariable(name: "value", arg: 1, scope: !1873, file: !147, line: 87, type: !1876)
!1878 = !DILocation(line: 87, column: 59, scope: !1873)
!1879 = !DILocation(line: 92, column: 7, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1873, file: !147, line: 92, column: 7)
!1881 = !DILocation(line: 92, column: 13, scope: !1880)
!1882 = !DILocation(line: 92, column: 7, scope: !1873)
!1883 = !DILocation(line: 93, column: 5, scope: !1880)
!1884 = !DILocation(line: 94, column: 7, scope: !1885)
!1885 = distinct !DILexicalBlock(scope: !1873, file: !147, line: 94, column: 7)
!1886 = !DILocation(line: 94, column: 13, scope: !1885)
!1887 = !DILocation(line: 94, column: 7, scope: !1873)
!1888 = !DILocation(line: 95, column: 5, scope: !1885)
!1889 = !DILocation(line: 96, column: 21, scope: !1873)
!1890 = !DILocation(line: 96, column: 26, scope: !1873)
!1891 = !DILocation(line: 96, column: 10, scope: !1873)
!1892 = !DILocation(line: 96, column: 3, scope: !1873)
!1893 = !DILocation(line: 98, column: 1, scope: !1873)
!1894 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !1895, file: !1895, line: 85, type: !1896, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1895 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!709, !1898}
!1898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!1899 = !DILocalVariable(name: "colorspace", arg: 1, scope: !1894, file: !1895, line: 86, type: !1898)
!1900 = !DILocation(line: 86, column: 24, scope: !1894)
!1901 = !DILocation(line: 88, column: 8, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1894, file: !1895, line: 88, column: 7)
!1903 = !DILocation(line: 88, column: 19, scope: !1902)
!1904 = !DILocation(line: 88, column: 38, scope: !1902)
!1905 = !DILocation(line: 88, column: 42, scope: !1902)
!1906 = !DILocation(line: 88, column: 53, scope: !1902)
!1907 = !DILocation(line: 88, column: 78, scope: !1902)
!1908 = !DILocation(line: 89, column: 8, scope: !1902)
!1909 = !DILocation(line: 89, column: 19, scope: !1902)
!1910 = !DILocation(line: 88, column: 7, scope: !1894)
!1911 = !DILocation(line: 90, column: 5, scope: !1902)
!1912 = !DILocation(line: 91, column: 3, scope: !1894)
!1913 = !DILocation(line: 92, column: 1, scope: !1894)
!1914 = distinct !DISubprogram(name: "SetImageProgress", scope: !1915, file: !1915, line: 27, type: !1916, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1915 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!709, !821, !692, !949, !952}
!1918 = !DILocalVariable(name: "image", arg: 1, scope: !1914, file: !1915, line: 27, type: !821)
!1919 = !DILocation(line: 27, column: 63, scope: !1914)
!1920 = !DILocalVariable(name: "tag", arg: 2, scope: !1914, file: !1915, line: 28, type: !692)
!1921 = !DILocation(line: 28, column: 15, scope: !1914)
!1922 = !DILocalVariable(name: "offset", arg: 3, scope: !1914, file: !1915, line: 28, type: !949)
!1923 = !DILocation(line: 28, column: 42, scope: !1914)
!1924 = !DILocalVariable(name: "extent", arg: 4, scope: !1914, file: !1915, line: 28, type: !952)
!1925 = !DILocation(line: 28, column: 70, scope: !1914)
!1926 = !DILocalVariable(name: "message", scope: !1914, file: !1915, line: 31, type: !967)
!1927 = !DILocation(line: 31, column: 5, scope: !1914)
!1928 = !DILocation(line: 33, column: 7, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1914, file: !1915, line: 33, column: 7)
!1930 = !DILocation(line: 33, column: 14, scope: !1929)
!1931 = !DILocation(line: 33, column: 31, scope: !1929)
!1932 = !DILocation(line: 33, column: 7, scope: !1914)
!1933 = !DILocation(line: 34, column: 5, scope: !1929)
!1934 = !DILocation(line: 35, column: 29, scope: !1914)
!1935 = !DILocation(line: 35, column: 59, scope: !1914)
!1936 = !DILocation(line: 35, column: 63, scope: !1914)
!1937 = !DILocation(line: 35, column: 70, scope: !1914)
!1938 = !DILocation(line: 35, column: 10, scope: !1914)
!1939 = !DILocation(line: 36, column: 10, scope: !1914)
!1940 = !DILocation(line: 36, column: 17, scope: !1914)
!1941 = !DILocation(line: 36, column: 34, scope: !1914)
!1942 = !DILocation(line: 36, column: 42, scope: !1914)
!1943 = !DILocation(line: 36, column: 49, scope: !1914)
!1944 = !DILocation(line: 36, column: 56, scope: !1914)
!1945 = !DILocation(line: 36, column: 63, scope: !1914)
!1946 = !DILocation(line: 36, column: 3, scope: !1914)
!1947 = !DILocation(line: 37, column: 1, scope: !1914)
!1948 = distinct !DISubprogram(name: "DestroyRandomInfoThreadSet", scope: !1815, file: !1815, line: 27, type: !1949, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!1311, !1311}
!1951 = !DILocalVariable(name: "random_info", arg: 1, scope: !1948, file: !1815, line: 28, type: !1311)
!1952 = !DILocation(line: 28, column: 16, scope: !1948)
!1953 = !DILocalVariable(name: "i", scope: !1948, file: !1815, line: 31, type: !880)
!1954 = !DILocation(line: 31, column: 5, scope: !1948)
!1955 = !DILocation(line: 34, column: 9, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1948, file: !1815, line: 34, column: 3)
!1957 = !DILocation(line: 34, column: 8, scope: !1956)
!1958 = !DILocation(line: 34, column: 13, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1956, file: !1815, line: 34, column: 3)
!1960 = !DILocation(line: 34, column: 27, scope: !1959)
!1961 = !DILocation(line: 34, column: 15, scope: !1959)
!1962 = !DILocation(line: 34, column: 3, scope: !1956)
!1963 = !DILocation(line: 35, column: 9, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1959, file: !1815, line: 35, column: 9)
!1965 = !DILocation(line: 35, column: 21, scope: !1964)
!1966 = !DILocation(line: 35, column: 24, scope: !1964)
!1967 = !DILocation(line: 35, column: 9, scope: !1959)
!1968 = !DILocation(line: 36, column: 40, scope: !1964)
!1969 = !DILocation(line: 36, column: 52, scope: !1964)
!1970 = !DILocation(line: 36, column: 22, scope: !1964)
!1971 = !DILocation(line: 36, column: 7, scope: !1964)
!1972 = !DILocation(line: 36, column: 19, scope: !1964)
!1973 = !DILocation(line: 36, column: 21, scope: !1964)
!1974 = !DILocation(line: 35, column: 42, scope: !1964)
!1975 = !DILocation(line: 34, column: 68, scope: !1959)
!1976 = !DILocation(line: 34, column: 3, scope: !1959)
!1977 = distinct !{!1977, !1962, !1978}
!1978 = !DILocation(line: 36, column: 54, scope: !1956)
!1979 = !DILocation(line: 37, column: 50, scope: !1948)
!1980 = !DILocation(line: 37, column: 26, scope: !1948)
!1981 = !DILocation(line: 37, column: 10, scope: !1948)
!1982 = !DILocation(line: 37, column: 3, scope: !1948)
!1983 = distinct !DISubprogram(name: "BlueShiftImage", scope: !1, file: !1, line: 467, type: !1984, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!1090, !821, !1986, !695}
!1986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!1987 = !DILocalVariable(name: "image", arg: 1, scope: !1983, file: !1, line: 467, type: !821)
!1988 = !DILocation(line: 467, column: 49, scope: !1983)
!1989 = !DILocalVariable(name: "factor", arg: 2, scope: !1983, file: !1, line: 467, type: !1986)
!1990 = !DILocation(line: 467, column: 68, scope: !1983)
!1991 = !DILocalVariable(name: "exception", arg: 3, scope: !1983, file: !1, line: 468, type: !695)
!1992 = !DILocation(line: 468, column: 18, scope: !1983)
!1993 = !DILocalVariable(name: "image_view", scope: !1983, file: !1, line: 473, type: !1081)
!1994 = !DILocation(line: 473, column: 6, scope: !1983)
!1995 = !DILocalVariable(name: "shift_view", scope: !1983, file: !1, line: 474, type: !1081)
!1996 = !DILocation(line: 474, column: 6, scope: !1983)
!1997 = !DILocalVariable(name: "shift_image", scope: !1983, file: !1, line: 477, type: !1090)
!1998 = !DILocation(line: 477, column: 6, scope: !1983)
!1999 = !DILocalVariable(name: "status", scope: !1983, file: !1, line: 480, type: !709)
!2000 = !DILocation(line: 480, column: 5, scope: !1983)
!2001 = !DILocalVariable(name: "progress", scope: !1983, file: !1, line: 483, type: !950)
!2002 = !DILocation(line: 483, column: 5, scope: !1983)
!2003 = !DILocalVariable(name: "y", scope: !1983, file: !1, line: 486, type: !880)
!2004 = !DILocation(line: 486, column: 5, scope: !1983)
!2005 = !DILocation(line: 493, column: 7, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 493, column: 7)
!2007 = !DILocation(line: 493, column: 14, scope: !2006)
!2008 = !DILocation(line: 493, column: 20, scope: !2006)
!2009 = !DILocation(line: 493, column: 7, scope: !1983)
!2010 = !DILocation(line: 494, column: 61, scope: !2006)
!2011 = !DILocation(line: 494, column: 68, scope: !2006)
!2012 = !DILocation(line: 494, column: 12, scope: !2006)
!2013 = !DILocation(line: 494, column: 5, scope: !2006)
!2014 = !DILocation(line: 497, column: 26, scope: !1983)
!2015 = !DILocation(line: 497, column: 32, scope: !1983)
!2016 = !DILocation(line: 497, column: 39, scope: !1983)
!2017 = !DILocation(line: 497, column: 47, scope: !1983)
!2018 = !DILocation(line: 497, column: 54, scope: !1983)
!2019 = !DILocation(line: 498, column: 5, scope: !1983)
!2020 = !DILocation(line: 497, column: 15, scope: !1983)
!2021 = !DILocation(line: 497, column: 14, scope: !1983)
!2022 = !DILocation(line: 499, column: 7, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 499, column: 7)
!2024 = !DILocation(line: 499, column: 19, scope: !2023)
!2025 = !DILocation(line: 499, column: 7, scope: !1983)
!2026 = !DILocation(line: 500, column: 5, scope: !2023)
!2027 = !DILocation(line: 501, column: 28, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 501, column: 7)
!2029 = !DILocation(line: 501, column: 7, scope: !2028)
!2030 = !DILocation(line: 501, column: 53, scope: !2028)
!2031 = !DILocation(line: 501, column: 7, scope: !1983)
!2032 = !DILocation(line: 503, column: 24, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2028, file: !1, line: 502, column: 5)
!2034 = !DILocation(line: 503, column: 35, scope: !2033)
!2035 = !DILocation(line: 503, column: 48, scope: !2033)
!2036 = !DILocation(line: 503, column: 7, scope: !2033)
!2037 = !DILocation(line: 504, column: 32, scope: !2033)
!2038 = !DILocation(line: 504, column: 19, scope: !2033)
!2039 = !DILocation(line: 504, column: 18, scope: !2033)
!2040 = !DILocation(line: 505, column: 7, scope: !2033)
!2041 = !DILocation(line: 510, column: 9, scope: !1983)
!2042 = !DILocation(line: 511, column: 11, scope: !1983)
!2043 = !DILocation(line: 512, column: 38, scope: !1983)
!2044 = !DILocation(line: 512, column: 44, scope: !1983)
!2045 = !DILocation(line: 512, column: 14, scope: !1983)
!2046 = !DILocation(line: 512, column: 13, scope: !1983)
!2047 = !DILocation(line: 513, column: 40, scope: !1983)
!2048 = !DILocation(line: 513, column: 52, scope: !1983)
!2049 = !DILocation(line: 513, column: 14, scope: !1983)
!2050 = !DILocation(line: 513, column: 13, scope: !1983)
!2051 = !DILocation(line: 518, column: 9, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 518, column: 3)
!2053 = !DILocation(line: 518, column: 8, scope: !2052)
!2054 = !DILocation(line: 518, column: 13, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2052, file: !1, line: 518, column: 3)
!2056 = !DILocation(line: 518, column: 27, scope: !2055)
!2057 = !DILocation(line: 518, column: 34, scope: !2055)
!2058 = !DILocation(line: 518, column: 15, scope: !2055)
!2059 = !DILocation(line: 518, column: 3, scope: !2052)
!2060 = !DILocalVariable(name: "sync", scope: !2061, file: !1, line: 521, type: !709)
!2061 = distinct !DILexicalBlock(scope: !2055, file: !1, line: 519, column: 3)
!2062 = !DILocation(line: 521, column: 7, scope: !2061)
!2063 = !DILocalVariable(name: "pixel", scope: !2061, file: !1, line: 524, type: !1223)
!2064 = !DILocation(line: 524, column: 7, scope: !2061)
!2065 = !DILocalVariable(name: "quantum", scope: !2061, file: !1, line: 527, type: !847)
!2066 = !DILocation(line: 527, column: 7, scope: !2061)
!2067 = !DILocalVariable(name: "p", scope: !2061, file: !1, line: 530, type: !1634)
!2068 = !DILocation(line: 530, column: 17, scope: !2061)
!2069 = !DILocalVariable(name: "x", scope: !2061, file: !1, line: 533, type: !880)
!2070 = !DILocation(line: 533, column: 7, scope: !2061)
!2071 = !DILocalVariable(name: "q", scope: !2061, file: !1, line: 536, type: !1642)
!2072 = !DILocation(line: 536, column: 17, scope: !2061)
!2073 = !DILocation(line: 538, column: 9, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 538, column: 9)
!2075 = !DILocation(line: 538, column: 16, scope: !2074)
!2076 = !DILocation(line: 538, column: 9, scope: !2061)
!2077 = !DILocation(line: 539, column: 7, scope: !2074)
!2078 = !DILocation(line: 540, column: 33, scope: !2061)
!2079 = !DILocation(line: 540, column: 46, scope: !2061)
!2080 = !DILocation(line: 540, column: 48, scope: !2061)
!2081 = !DILocation(line: 540, column: 55, scope: !2061)
!2082 = !DILocation(line: 540, column: 65, scope: !2061)
!2083 = !DILocation(line: 540, column: 7, scope: !2061)
!2084 = !DILocation(line: 540, column: 6, scope: !2061)
!2085 = !DILocation(line: 541, column: 37, scope: !2061)
!2086 = !DILocation(line: 541, column: 50, scope: !2061)
!2087 = !DILocation(line: 541, column: 52, scope: !2061)
!2088 = !DILocation(line: 541, column: 65, scope: !2061)
!2089 = !DILocation(line: 542, column: 7, scope: !2061)
!2090 = !DILocation(line: 541, column: 7, scope: !2061)
!2091 = !DILocation(line: 541, column: 6, scope: !2061)
!2092 = !DILocation(line: 543, column: 10, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 543, column: 9)
!2094 = !DILocation(line: 543, column: 12, scope: !2093)
!2095 = !DILocation(line: 543, column: 43, scope: !2093)
!2096 = !DILocation(line: 543, column: 47, scope: !2093)
!2097 = !DILocation(line: 543, column: 49, scope: !2093)
!2098 = !DILocation(line: 543, column: 9, scope: !2061)
!2099 = !DILocation(line: 545, column: 15, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 544, column: 7)
!2101 = !DILocation(line: 546, column: 9, scope: !2100)
!2102 = !DILocation(line: 548, column: 11, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 548, column: 5)
!2104 = !DILocation(line: 548, column: 10, scope: !2103)
!2105 = !DILocation(line: 548, column: 15, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2103, file: !1, line: 548, column: 5)
!2107 = !DILocation(line: 548, column: 29, scope: !2106)
!2108 = !DILocation(line: 548, column: 36, scope: !2106)
!2109 = !DILocation(line: 548, column: 17, scope: !2106)
!2110 = !DILocation(line: 548, column: 5, scope: !2103)
!2111 = !DILocation(line: 550, column: 15, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2106, file: !1, line: 549, column: 5)
!2113 = !DILocation(line: 550, column: 14, scope: !2112)
!2114 = !DILocation(line: 551, column: 11, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2112, file: !1, line: 551, column: 11)
!2116 = !DILocation(line: 551, column: 30, scope: !2115)
!2117 = !DILocation(line: 551, column: 28, scope: !2115)
!2118 = !DILocation(line: 551, column: 11, scope: !2112)
!2119 = !DILocation(line: 552, column: 17, scope: !2115)
!2120 = !DILocation(line: 552, column: 16, scope: !2115)
!2121 = !DILocation(line: 552, column: 9, scope: !2115)
!2122 = !DILocation(line: 553, column: 11, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2112, file: !1, line: 553, column: 11)
!2124 = !DILocation(line: 553, column: 29, scope: !2123)
!2125 = !DILocation(line: 553, column: 27, scope: !2123)
!2126 = !DILocation(line: 553, column: 11, scope: !2112)
!2127 = !DILocation(line: 554, column: 17, scope: !2123)
!2128 = !DILocation(line: 554, column: 16, scope: !2123)
!2129 = !DILocation(line: 554, column: 9, scope: !2123)
!2130 = !DILocation(line: 555, column: 22, scope: !2112)
!2131 = !DILocation(line: 555, column: 37, scope: !2112)
!2132 = !DILocation(line: 555, column: 44, scope: !2112)
!2133 = !DILocation(line: 555, column: 43, scope: !2112)
!2134 = !DILocation(line: 555, column: 36, scope: !2112)
!2135 = !DILocation(line: 555, column: 20, scope: !2112)
!2136 = !DILocation(line: 555, column: 17, scope: !2112)
!2137 = !DILocation(line: 555, column: 13, scope: !2112)
!2138 = !DILocation(line: 555, column: 16, scope: !2112)
!2139 = !DILocation(line: 556, column: 24, scope: !2112)
!2140 = !DILocation(line: 556, column: 41, scope: !2112)
!2141 = !DILocation(line: 556, column: 48, scope: !2112)
!2142 = !DILocation(line: 556, column: 47, scope: !2112)
!2143 = !DILocation(line: 556, column: 40, scope: !2112)
!2144 = !DILocation(line: 556, column: 22, scope: !2112)
!2145 = !DILocation(line: 556, column: 19, scope: !2112)
!2146 = !DILocation(line: 556, column: 13, scope: !2112)
!2147 = !DILocation(line: 556, column: 18, scope: !2112)
!2148 = !DILocation(line: 557, column: 23, scope: !2112)
!2149 = !DILocation(line: 557, column: 39, scope: !2112)
!2150 = !DILocation(line: 557, column: 46, scope: !2112)
!2151 = !DILocation(line: 557, column: 45, scope: !2112)
!2152 = !DILocation(line: 557, column: 38, scope: !2112)
!2153 = !DILocation(line: 557, column: 21, scope: !2112)
!2154 = !DILocation(line: 557, column: 18, scope: !2112)
!2155 = !DILocation(line: 557, column: 13, scope: !2112)
!2156 = !DILocation(line: 557, column: 17, scope: !2112)
!2157 = !DILocation(line: 558, column: 15, scope: !2112)
!2158 = !DILocation(line: 558, column: 14, scope: !2112)
!2159 = !DILocation(line: 559, column: 11, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2112, file: !1, line: 559, column: 11)
!2161 = !DILocation(line: 559, column: 30, scope: !2160)
!2162 = !DILocation(line: 559, column: 28, scope: !2160)
!2163 = !DILocation(line: 559, column: 11, scope: !2112)
!2164 = !DILocation(line: 560, column: 17, scope: !2160)
!2165 = !DILocation(line: 560, column: 16, scope: !2160)
!2166 = !DILocation(line: 560, column: 9, scope: !2160)
!2167 = !DILocation(line: 561, column: 11, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2112, file: !1, line: 561, column: 11)
!2169 = !DILocation(line: 561, column: 29, scope: !2168)
!2170 = !DILocation(line: 561, column: 27, scope: !2168)
!2171 = !DILocation(line: 561, column: 11, scope: !2112)
!2172 = !DILocation(line: 562, column: 17, scope: !2168)
!2173 = !DILocation(line: 562, column: 16, scope: !2168)
!2174 = !DILocation(line: 562, column: 9, scope: !2168)
!2175 = !DILocation(line: 563, column: 28, scope: !2112)
!2176 = !DILocation(line: 563, column: 22, scope: !2112)
!2177 = !DILocation(line: 563, column: 32, scope: !2112)
!2178 = !DILocation(line: 563, column: 39, scope: !2112)
!2179 = !DILocation(line: 563, column: 38, scope: !2112)
!2180 = !DILocation(line: 563, column: 31, scope: !2112)
!2181 = !DILocation(line: 563, column: 20, scope: !2112)
!2182 = !DILocation(line: 563, column: 17, scope: !2112)
!2183 = !DILocation(line: 563, column: 13, scope: !2112)
!2184 = !DILocation(line: 563, column: 16, scope: !2112)
!2185 = !DILocation(line: 564, column: 30, scope: !2112)
!2186 = !DILocation(line: 564, column: 24, scope: !2112)
!2187 = !DILocation(line: 564, column: 36, scope: !2112)
!2188 = !DILocation(line: 564, column: 43, scope: !2112)
!2189 = !DILocation(line: 564, column: 42, scope: !2112)
!2190 = !DILocation(line: 564, column: 35, scope: !2112)
!2191 = !DILocation(line: 564, column: 22, scope: !2112)
!2192 = !DILocation(line: 564, column: 19, scope: !2112)
!2193 = !DILocation(line: 564, column: 13, scope: !2112)
!2194 = !DILocation(line: 564, column: 18, scope: !2112)
!2195 = !DILocation(line: 565, column: 29, scope: !2112)
!2196 = !DILocation(line: 565, column: 23, scope: !2112)
!2197 = !DILocation(line: 565, column: 34, scope: !2112)
!2198 = !DILocation(line: 565, column: 41, scope: !2112)
!2199 = !DILocation(line: 565, column: 40, scope: !2112)
!2200 = !DILocation(line: 565, column: 33, scope: !2112)
!2201 = !DILocation(line: 565, column: 21, scope: !2112)
!2202 = !DILocation(line: 565, column: 18, scope: !2112)
!2203 = !DILocation(line: 565, column: 13, scope: !2112)
!2204 = !DILocation(line: 565, column: 17, scope: !2112)
!2205 = !DILocation(line: 566, column: 7, scope: !2112)
!2206 = !DILocation(line: 567, column: 7, scope: !2112)
!2207 = !DILocation(line: 568, column: 7, scope: !2112)
!2208 = !DILocation(line: 569, column: 8, scope: !2112)
!2209 = !DILocation(line: 570, column: 8, scope: !2112)
!2210 = !DILocation(line: 571, column: 5, scope: !2112)
!2211 = !DILocation(line: 548, column: 46, scope: !2106)
!2212 = !DILocation(line: 548, column: 5, scope: !2106)
!2213 = distinct !{!2213, !2110, !2214}
!2214 = !DILocation(line: 571, column: 5, scope: !2103)
!2215 = !DILocation(line: 572, column: 39, scope: !2061)
!2216 = !DILocation(line: 572, column: 50, scope: !2061)
!2217 = !DILocation(line: 572, column: 10, scope: !2061)
!2218 = !DILocation(line: 572, column: 9, scope: !2061)
!2219 = !DILocation(line: 573, column: 9, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 573, column: 9)
!2221 = !DILocation(line: 573, column: 14, scope: !2220)
!2222 = !DILocation(line: 573, column: 9, scope: !2061)
!2223 = !DILocation(line: 574, column: 13, scope: !2220)
!2224 = !DILocation(line: 574, column: 7, scope: !2220)
!2225 = !DILocation(line: 575, column: 9, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2061, file: !1, line: 575, column: 9)
!2227 = !DILocation(line: 575, column: 16, scope: !2226)
!2228 = !DILocation(line: 575, column: 33, scope: !2226)
!2229 = !DILocation(line: 575, column: 9, scope: !2061)
!2230 = !DILocalVariable(name: "proceed", scope: !2231, file: !1, line: 578, type: !709)
!2231 = distinct !DILexicalBlock(scope: !2226, file: !1, line: 576, column: 7)
!2232 = !DILocation(line: 578, column: 11, scope: !2231)
!2233 = !DILocation(line: 583, column: 34, scope: !2231)
!2234 = !DILocation(line: 583, column: 66, scope: !2231)
!2235 = !DILocation(line: 584, column: 11, scope: !2231)
!2236 = !DILocation(line: 584, column: 18, scope: !2231)
!2237 = !DILocation(line: 583, column: 17, scope: !2231)
!2238 = !DILocation(line: 583, column: 16, scope: !2231)
!2239 = !DILocation(line: 585, column: 13, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 585, column: 13)
!2241 = !DILocation(line: 585, column: 21, scope: !2240)
!2242 = !DILocation(line: 585, column: 13, scope: !2231)
!2243 = !DILocation(line: 586, column: 17, scope: !2240)
!2244 = !DILocation(line: 586, column: 11, scope: !2240)
!2245 = !DILocation(line: 587, column: 7, scope: !2231)
!2246 = !DILocation(line: 588, column: 3, scope: !2061)
!2247 = !DILocation(line: 518, column: 41, scope: !2055)
!2248 = !DILocation(line: 518, column: 3, scope: !2055)
!2249 = distinct !{!2249, !2059, !2250}
!2250 = !DILocation(line: 588, column: 3, scope: !2052)
!2251 = !DILocation(line: 589, column: 31, scope: !1983)
!2252 = !DILocation(line: 589, column: 14, scope: !1983)
!2253 = !DILocation(line: 589, column: 13, scope: !1983)
!2254 = !DILocation(line: 590, column: 31, scope: !1983)
!2255 = !DILocation(line: 590, column: 14, scope: !1983)
!2256 = !DILocation(line: 590, column: 13, scope: !1983)
!2257 = !DILocation(line: 591, column: 7, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 591, column: 7)
!2259 = !DILocation(line: 591, column: 14, scope: !2258)
!2260 = !DILocation(line: 591, column: 7, scope: !1983)
!2261 = !DILocation(line: 592, column: 30, scope: !2258)
!2262 = !DILocation(line: 592, column: 17, scope: !2258)
!2263 = !DILocation(line: 592, column: 16, scope: !2258)
!2264 = !DILocation(line: 592, column: 5, scope: !2258)
!2265 = !DILocation(line: 593, column: 10, scope: !1983)
!2266 = !DILocation(line: 593, column: 3, scope: !1983)
!2267 = !DILocation(line: 594, column: 1, scope: !1983)
!2268 = distinct !DISubprogram(name: "CharcoalImage", scope: !1, file: !1, line: 627, type: !2269, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!1090, !821, !1986, !1986, !695}
!2271 = !DILocalVariable(name: "image", arg: 1, scope: !2268, file: !1, line: 627, type: !821)
!2272 = !DILocation(line: 627, column: 48, scope: !2268)
!2273 = !DILocalVariable(name: "radius", arg: 2, scope: !2268, file: !1, line: 627, type: !1986)
!2274 = !DILocation(line: 627, column: 67, scope: !2268)
!2275 = !DILocalVariable(name: "sigma", arg: 3, scope: !2268, file: !1, line: 628, type: !1986)
!2276 = !DILocation(line: 628, column: 16, scope: !2268)
!2277 = !DILocalVariable(name: "exception", arg: 4, scope: !2268, file: !1, line: 628, type: !695)
!2278 = !DILocation(line: 628, column: 37, scope: !2268)
!2279 = !DILocalVariable(name: "charcoal_image", scope: !2268, file: !1, line: 631, type: !1090)
!2280 = !DILocation(line: 631, column: 6, scope: !2268)
!2281 = !DILocalVariable(name: "clone_image", scope: !2268, file: !1, line: 632, type: !1090)
!2282 = !DILocation(line: 632, column: 6, scope: !2268)
!2283 = !DILocalVariable(name: "edge_image", scope: !2268, file: !1, line: 633, type: !1090)
!2284 = !DILocation(line: 633, column: 6, scope: !2268)
!2285 = !DILocation(line: 637, column: 7, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 637, column: 7)
!2287 = !DILocation(line: 637, column: 14, scope: !2286)
!2288 = !DILocation(line: 637, column: 20, scope: !2286)
!2289 = !DILocation(line: 637, column: 7, scope: !2268)
!2290 = !DILocation(line: 638, column: 61, scope: !2286)
!2291 = !DILocation(line: 638, column: 68, scope: !2286)
!2292 = !DILocation(line: 638, column: 12, scope: !2286)
!2293 = !DILocation(line: 638, column: 5, scope: !2286)
!2294 = !DILocation(line: 641, column: 26, scope: !2268)
!2295 = !DILocation(line: 641, column: 47, scope: !2268)
!2296 = !DILocation(line: 641, column: 15, scope: !2268)
!2297 = !DILocation(line: 641, column: 14, scope: !2268)
!2298 = !DILocation(line: 642, column: 7, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 642, column: 7)
!2300 = !DILocation(line: 642, column: 19, scope: !2299)
!2301 = !DILocation(line: 642, column: 7, scope: !2268)
!2302 = !DILocation(line: 643, column: 5, scope: !2299)
!2303 = !DILocation(line: 644, column: 24, scope: !2268)
!2304 = !DILocation(line: 644, column: 36, scope: !2268)
!2305 = !DILocation(line: 644, column: 43, scope: !2268)
!2306 = !DILocation(line: 644, column: 14, scope: !2268)
!2307 = !DILocation(line: 644, column: 13, scope: !2268)
!2308 = !DILocation(line: 645, column: 28, scope: !2268)
!2309 = !DILocation(line: 645, column: 15, scope: !2268)
!2310 = !DILocation(line: 645, column: 14, scope: !2268)
!2311 = !DILocation(line: 646, column: 7, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 646, column: 7)
!2313 = !DILocation(line: 646, column: 18, scope: !2312)
!2314 = !DILocation(line: 646, column: 7, scope: !2268)
!2315 = !DILocation(line: 647, column: 5, scope: !2312)
!2316 = !DILocation(line: 648, column: 28, scope: !2268)
!2317 = !DILocation(line: 648, column: 39, scope: !2268)
!2318 = !DILocation(line: 648, column: 46, scope: !2268)
!2319 = !DILocation(line: 648, column: 52, scope: !2268)
!2320 = !DILocation(line: 648, column: 18, scope: !2268)
!2321 = !DILocation(line: 648, column: 17, scope: !2268)
!2322 = !DILocation(line: 649, column: 27, scope: !2268)
!2323 = !DILocation(line: 649, column: 14, scope: !2268)
!2324 = !DILocation(line: 649, column: 13, scope: !2268)
!2325 = !DILocation(line: 650, column: 7, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 650, column: 7)
!2327 = !DILocation(line: 650, column: 22, scope: !2326)
!2328 = !DILocation(line: 650, column: 7, scope: !2268)
!2329 = !DILocation(line: 651, column: 5, scope: !2326)
!2330 = !DILocation(line: 652, column: 25, scope: !2268)
!2331 = !DILocation(line: 652, column: 10, scope: !2268)
!2332 = !DILocation(line: 653, column: 22, scope: !2268)
!2333 = !DILocation(line: 653, column: 10, scope: !2268)
!2334 = !DILocation(line: 654, column: 25, scope: !2268)
!2335 = !DILocation(line: 654, column: 40, scope: !2268)
!2336 = !DILocation(line: 654, column: 47, scope: !2268)
!2337 = !DILocation(line: 654, column: 10, scope: !2268)
!2338 = !DILocation(line: 655, column: 10, scope: !2268)
!2339 = !DILocation(line: 655, column: 3, scope: !2268)
!2340 = !DILocation(line: 656, column: 1, scope: !2268)
!2341 = distinct !DISubprogram(name: "ColorizeImage", scope: !1, file: !1, line: 691, type: !2342, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!1090, !821, !692, !1097, !695}
!2344 = !DILocalVariable(name: "image", arg: 1, scope: !2341, file: !1, line: 691, type: !821)
!2345 = !DILocation(line: 691, column: 48, scope: !2341)
!2346 = !DILocalVariable(name: "opacity", arg: 2, scope: !2341, file: !1, line: 691, type: !692)
!2347 = !DILocation(line: 691, column: 66, scope: !2341)
!2348 = !DILocalVariable(name: "colorize", arg: 3, scope: !2341, file: !1, line: 692, type: !1097)
!2349 = !DILocation(line: 692, column: 21, scope: !2341)
!2350 = !DILocalVariable(name: "exception", arg: 4, scope: !2341, file: !1, line: 692, type: !695)
!2351 = !DILocation(line: 692, column: 45, scope: !2341)
!2352 = !DILocalVariable(name: "colorize_view", scope: !2341, file: !1, line: 697, type: !1081)
!2353 = !DILocation(line: 697, column: 6, scope: !2341)
!2354 = !DILocalVariable(name: "image_view", scope: !2341, file: !1, line: 698, type: !1081)
!2355 = !DILocation(line: 698, column: 6, scope: !2341)
!2356 = !DILocalVariable(name: "geometry_info", scope: !2341, file: !1, line: 701, type: !2357)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !153, line: 112, baseType: !2358)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !153, line: 104, size: 320, elements: !2359)
!2359 = !{!2360, !2361, !2362, !2363, !2364}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !2358, file: !153, line: 107, baseType: !856, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !2358, file: !153, line: 108, baseType: !856, size: 64, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !2358, file: !153, line: 109, baseType: !856, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !2358, file: !153, line: 110, baseType: !856, size: 64, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !2358, file: !153, line: 111, baseType: !856, size: 64, offset: 256)
!2365 = !DILocation(line: 701, column: 5, scope: !2341)
!2366 = !DILocalVariable(name: "colorize_image", scope: !2341, file: !1, line: 704, type: !1090)
!2367 = !DILocation(line: 704, column: 6, scope: !2341)
!2368 = !DILocalVariable(name: "status", scope: !2341, file: !1, line: 707, type: !709)
!2369 = !DILocation(line: 707, column: 5, scope: !2341)
!2370 = !DILocalVariable(name: "progress", scope: !2341, file: !1, line: 710, type: !950)
!2371 = !DILocation(line: 710, column: 5, scope: !2341)
!2372 = !DILocalVariable(name: "pixel", scope: !2341, file: !1, line: 713, type: !1223)
!2373 = !DILocation(line: 713, column: 5, scope: !2341)
!2374 = !DILocalVariable(name: "flags", scope: !2341, file: !1, line: 716, type: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!2376 = !DILocation(line: 716, column: 5, scope: !2341)
!2377 = !DILocalVariable(name: "y", scope: !2341, file: !1, line: 719, type: !880)
!2378 = !DILocation(line: 719, column: 5, scope: !2341)
!2379 = !DILocation(line: 726, column: 7, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 726, column: 7)
!2381 = !DILocation(line: 726, column: 14, scope: !2380)
!2382 = !DILocation(line: 726, column: 20, scope: !2380)
!2383 = !DILocation(line: 726, column: 7, scope: !2341)
!2384 = !DILocation(line: 727, column: 61, scope: !2380)
!2385 = !DILocation(line: 727, column: 68, scope: !2380)
!2386 = !DILocation(line: 727, column: 12, scope: !2380)
!2387 = !DILocation(line: 727, column: 5, scope: !2380)
!2388 = !DILocation(line: 730, column: 29, scope: !2341)
!2389 = !DILocation(line: 730, column: 35, scope: !2341)
!2390 = !DILocation(line: 730, column: 42, scope: !2341)
!2391 = !DILocation(line: 730, column: 50, scope: !2341)
!2392 = !DILocation(line: 730, column: 57, scope: !2341)
!2393 = !DILocation(line: 731, column: 5, scope: !2341)
!2394 = !DILocation(line: 730, column: 18, scope: !2341)
!2395 = !DILocation(line: 730, column: 17, scope: !2341)
!2396 = !DILocation(line: 732, column: 7, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 732, column: 7)
!2398 = !DILocation(line: 732, column: 22, scope: !2397)
!2399 = !DILocation(line: 732, column: 7, scope: !2341)
!2400 = !DILocation(line: 733, column: 5, scope: !2397)
!2401 = !DILocation(line: 734, column: 28, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 734, column: 7)
!2403 = !DILocation(line: 734, column: 7, scope: !2402)
!2404 = !DILocation(line: 734, column: 56, scope: !2402)
!2405 = !DILocation(line: 734, column: 7, scope: !2341)
!2406 = !DILocation(line: 736, column: 24, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 735, column: 5)
!2408 = !DILocation(line: 736, column: 35, scope: !2407)
!2409 = !DILocation(line: 736, column: 51, scope: !2407)
!2410 = !DILocation(line: 736, column: 7, scope: !2407)
!2411 = !DILocation(line: 737, column: 35, scope: !2407)
!2412 = !DILocation(line: 737, column: 22, scope: !2407)
!2413 = !DILocation(line: 737, column: 21, scope: !2407)
!2414 = !DILocation(line: 738, column: 7, scope: !2407)
!2415 = !DILocation(line: 740, column: 25, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 740, column: 7)
!2417 = !DILocation(line: 740, column: 32, scope: !2416)
!2418 = !DILocation(line: 740, column: 8, scope: !2416)
!2419 = !DILocation(line: 740, column: 44, scope: !2416)
!2420 = !DILocation(line: 740, column: 60, scope: !2416)
!2421 = !DILocation(line: 741, column: 8, scope: !2416)
!2422 = !DILocation(line: 741, column: 31, scope: !2416)
!2423 = !DILocation(line: 740, column: 7, scope: !2341)
!2424 = !DILocation(line: 742, column: 31, scope: !2416)
!2425 = !DILocation(line: 742, column: 12, scope: !2416)
!2426 = !DILocation(line: 742, column: 5, scope: !2416)
!2427 = !DILocation(line: 743, column: 8, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 743, column: 7)
!2429 = !DILocation(line: 743, column: 24, scope: !2428)
!2430 = !DILocation(line: 743, column: 30, scope: !2428)
!2431 = !DILocation(line: 743, column: 46, scope: !2428)
!2432 = !DILocation(line: 744, column: 17, scope: !2428)
!2433 = !DILocation(line: 744, column: 8, scope: !2428)
!2434 = !DILocation(line: 744, column: 25, scope: !2428)
!2435 = !DILocation(line: 743, column: 7, scope: !2341)
!2436 = !DILocation(line: 745, column: 33, scope: !2428)
!2437 = !DILocation(line: 745, column: 12, scope: !2428)
!2438 = !DILocation(line: 745, column: 5, scope: !2428)
!2439 = !DILocation(line: 746, column: 7, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 746, column: 7)
!2441 = !DILocation(line: 746, column: 15, scope: !2440)
!2442 = !DILocation(line: 746, column: 7, scope: !2341)
!2443 = !DILocation(line: 747, column: 12, scope: !2440)
!2444 = !DILocation(line: 747, column: 5, scope: !2440)
!2445 = !DILocation(line: 751, column: 23, scope: !2341)
!2446 = !DILocation(line: 751, column: 9, scope: !2341)
!2447 = !DILocation(line: 751, column: 8, scope: !2341)
!2448 = !DILocation(line: 752, column: 27, scope: !2341)
!2449 = !DILocation(line: 752, column: 13, scope: !2341)
!2450 = !DILocation(line: 752, column: 9, scope: !2341)
!2451 = !DILocation(line: 752, column: 12, scope: !2341)
!2452 = !DILocation(line: 753, column: 29, scope: !2341)
!2453 = !DILocation(line: 753, column: 15, scope: !2341)
!2454 = !DILocation(line: 753, column: 9, scope: !2341)
!2455 = !DILocation(line: 753, column: 14, scope: !2341)
!2456 = !DILocation(line: 754, column: 28, scope: !2341)
!2457 = !DILocation(line: 754, column: 14, scope: !2341)
!2458 = !DILocation(line: 754, column: 9, scope: !2341)
!2459 = !DILocation(line: 754, column: 13, scope: !2341)
!2460 = !DILocation(line: 755, column: 9, scope: !2341)
!2461 = !DILocation(line: 755, column: 16, scope: !2341)
!2462 = !DILocation(line: 756, column: 8, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 756, column: 7)
!2464 = !DILocation(line: 756, column: 14, scope: !2463)
!2465 = !DILocation(line: 756, column: 28, scope: !2463)
!2466 = !DILocation(line: 756, column: 7, scope: !2341)
!2467 = !DILocation(line: 757, column: 31, scope: !2463)
!2468 = !DILocation(line: 757, column: 17, scope: !2463)
!2469 = !DILocation(line: 757, column: 11, scope: !2463)
!2470 = !DILocation(line: 757, column: 16, scope: !2463)
!2471 = !DILocation(line: 757, column: 5, scope: !2463)
!2472 = !DILocation(line: 758, column: 8, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 758, column: 7)
!2474 = !DILocation(line: 758, column: 14, scope: !2473)
!2475 = !DILocation(line: 758, column: 25, scope: !2473)
!2476 = !DILocation(line: 758, column: 7, scope: !2341)
!2477 = !DILocation(line: 759, column: 30, scope: !2473)
!2478 = !DILocation(line: 759, column: 16, scope: !2473)
!2479 = !DILocation(line: 759, column: 11, scope: !2473)
!2480 = !DILocation(line: 759, column: 15, scope: !2473)
!2481 = !DILocation(line: 759, column: 5, scope: !2473)
!2482 = !DILocation(line: 760, column: 8, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 760, column: 7)
!2484 = !DILocation(line: 760, column: 14, scope: !2483)
!2485 = !DILocation(line: 760, column: 26, scope: !2483)
!2486 = !DILocation(line: 760, column: 7, scope: !2341)
!2487 = !DILocation(line: 761, column: 33, scope: !2483)
!2488 = !DILocation(line: 761, column: 19, scope: !2483)
!2489 = !DILocation(line: 761, column: 11, scope: !2483)
!2490 = !DILocation(line: 761, column: 18, scope: !2483)
!2491 = !DILocation(line: 761, column: 5, scope: !2483)
!2492 = !DILocation(line: 765, column: 9, scope: !2341)
!2493 = !DILocation(line: 766, column: 11, scope: !2341)
!2494 = !DILocation(line: 767, column: 38, scope: !2341)
!2495 = !DILocation(line: 767, column: 44, scope: !2341)
!2496 = !DILocation(line: 767, column: 14, scope: !2341)
!2497 = !DILocation(line: 767, column: 13, scope: !2341)
!2498 = !DILocation(line: 768, column: 43, scope: !2341)
!2499 = !DILocation(line: 768, column: 58, scope: !2341)
!2500 = !DILocation(line: 768, column: 17, scope: !2341)
!2501 = !DILocation(line: 768, column: 16, scope: !2341)
!2502 = !DILocation(line: 773, column: 9, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 773, column: 3)
!2504 = !DILocation(line: 773, column: 8, scope: !2503)
!2505 = !DILocation(line: 773, column: 13, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2503, file: !1, line: 773, column: 3)
!2507 = !DILocation(line: 773, column: 27, scope: !2506)
!2508 = !DILocation(line: 773, column: 34, scope: !2506)
!2509 = !DILocation(line: 773, column: 15, scope: !2506)
!2510 = !DILocation(line: 773, column: 3, scope: !2503)
!2511 = !DILocalVariable(name: "sync", scope: !2512, file: !1, line: 776, type: !709)
!2512 = distinct !DILexicalBlock(scope: !2506, file: !1, line: 774, column: 3)
!2513 = !DILocation(line: 776, column: 7, scope: !2512)
!2514 = !DILocalVariable(name: "p", scope: !2512, file: !1, line: 779, type: !1634)
!2515 = !DILocation(line: 779, column: 17, scope: !2512)
!2516 = !DILocalVariable(name: "x", scope: !2512, file: !1, line: 782, type: !880)
!2517 = !DILocation(line: 782, column: 7, scope: !2512)
!2518 = !DILocalVariable(name: "q", scope: !2512, file: !1, line: 785, type: !1642)
!2519 = !DILocation(line: 785, column: 17, scope: !2512)
!2520 = !DILocation(line: 787, column: 9, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 787, column: 9)
!2522 = !DILocation(line: 787, column: 16, scope: !2521)
!2523 = !DILocation(line: 787, column: 9, scope: !2512)
!2524 = !DILocation(line: 788, column: 7, scope: !2521)
!2525 = !DILocation(line: 789, column: 33, scope: !2512)
!2526 = !DILocation(line: 789, column: 46, scope: !2512)
!2527 = !DILocation(line: 789, column: 48, scope: !2512)
!2528 = !DILocation(line: 789, column: 55, scope: !2512)
!2529 = !DILocation(line: 789, column: 65, scope: !2512)
!2530 = !DILocation(line: 789, column: 7, scope: !2512)
!2531 = !DILocation(line: 789, column: 6, scope: !2512)
!2532 = !DILocation(line: 790, column: 37, scope: !2512)
!2533 = !DILocation(line: 790, column: 53, scope: !2512)
!2534 = !DILocation(line: 790, column: 55, scope: !2512)
!2535 = !DILocation(line: 790, column: 71, scope: !2512)
!2536 = !DILocation(line: 791, column: 7, scope: !2512)
!2537 = !DILocation(line: 790, column: 7, scope: !2512)
!2538 = !DILocation(line: 790, column: 6, scope: !2512)
!2539 = !DILocation(line: 792, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 792, column: 9)
!2541 = !DILocation(line: 792, column: 12, scope: !2540)
!2542 = !DILocation(line: 792, column: 43, scope: !2540)
!2543 = !DILocation(line: 792, column: 47, scope: !2540)
!2544 = !DILocation(line: 792, column: 49, scope: !2540)
!2545 = !DILocation(line: 792, column: 9, scope: !2512)
!2546 = !DILocation(line: 794, column: 15, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2540, file: !1, line: 793, column: 7)
!2548 = !DILocation(line: 795, column: 9, scope: !2547)
!2549 = !DILocation(line: 797, column: 11, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 797, column: 5)
!2551 = !DILocation(line: 797, column: 10, scope: !2550)
!2552 = !DILocation(line: 797, column: 15, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2550, file: !1, line: 797, column: 5)
!2554 = !DILocation(line: 797, column: 29, scope: !2553)
!2555 = !DILocation(line: 797, column: 36, scope: !2553)
!2556 = !DILocation(line: 797, column: 17, scope: !2553)
!2557 = !DILocation(line: 797, column: 5, scope: !2550)
!2558 = !DILocation(line: 799, column: 7, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2553, file: !1, line: 798, column: 5)
!2560 = !DILocation(line: 801, column: 7, scope: !2559)
!2561 = !DILocation(line: 803, column: 7, scope: !2559)
!2562 = !DILocation(line: 805, column: 11, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2559, file: !1, line: 805, column: 11)
!2564 = !DILocation(line: 805, column: 27, scope: !2563)
!2565 = !DILocation(line: 805, column: 33, scope: !2563)
!2566 = !DILocation(line: 805, column: 11, scope: !2559)
!2567 = !DILocation(line: 806, column: 9, scope: !2563)
!2568 = !DILocation(line: 808, column: 9, scope: !2563)
!2569 = !DILocation(line: 810, column: 8, scope: !2559)
!2570 = !DILocation(line: 811, column: 8, scope: !2559)
!2571 = !DILocation(line: 812, column: 5, scope: !2559)
!2572 = !DILocation(line: 797, column: 46, scope: !2553)
!2573 = !DILocation(line: 797, column: 5, scope: !2553)
!2574 = distinct !{!2574, !2557, !2575}
!2575 = !DILocation(line: 812, column: 5, scope: !2550)
!2576 = !DILocation(line: 813, column: 39, scope: !2512)
!2577 = !DILocation(line: 813, column: 53, scope: !2512)
!2578 = !DILocation(line: 813, column: 10, scope: !2512)
!2579 = !DILocation(line: 813, column: 9, scope: !2512)
!2580 = !DILocation(line: 814, column: 9, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 814, column: 9)
!2582 = !DILocation(line: 814, column: 14, scope: !2581)
!2583 = !DILocation(line: 814, column: 9, scope: !2512)
!2584 = !DILocation(line: 815, column: 13, scope: !2581)
!2585 = !DILocation(line: 815, column: 7, scope: !2581)
!2586 = !DILocation(line: 816, column: 9, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 816, column: 9)
!2588 = !DILocation(line: 816, column: 16, scope: !2587)
!2589 = !DILocation(line: 816, column: 33, scope: !2587)
!2590 = !DILocation(line: 816, column: 9, scope: !2512)
!2591 = !DILocalVariable(name: "proceed", scope: !2592, file: !1, line: 819, type: !709)
!2592 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 817, column: 7)
!2593 = !DILocation(line: 819, column: 11, scope: !2592)
!2594 = !DILocation(line: 824, column: 34, scope: !2592)
!2595 = !DILocation(line: 824, column: 65, scope: !2592)
!2596 = !DILocation(line: 824, column: 68, scope: !2592)
!2597 = !DILocation(line: 824, column: 75, scope: !2592)
!2598 = !DILocation(line: 824, column: 17, scope: !2592)
!2599 = !DILocation(line: 824, column: 16, scope: !2592)
!2600 = !DILocation(line: 825, column: 13, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2592, file: !1, line: 825, column: 13)
!2602 = !DILocation(line: 825, column: 21, scope: !2601)
!2603 = !DILocation(line: 825, column: 13, scope: !2592)
!2604 = !DILocation(line: 826, column: 17, scope: !2601)
!2605 = !DILocation(line: 826, column: 11, scope: !2601)
!2606 = !DILocation(line: 827, column: 7, scope: !2592)
!2607 = !DILocation(line: 828, column: 3, scope: !2512)
!2608 = !DILocation(line: 773, column: 41, scope: !2506)
!2609 = !DILocation(line: 773, column: 3, scope: !2506)
!2610 = distinct !{!2610, !2510, !2611}
!2611 = !DILocation(line: 828, column: 3, scope: !2503)
!2612 = !DILocation(line: 829, column: 31, scope: !2341)
!2613 = !DILocation(line: 829, column: 14, scope: !2341)
!2614 = !DILocation(line: 829, column: 13, scope: !2341)
!2615 = !DILocation(line: 830, column: 34, scope: !2341)
!2616 = !DILocation(line: 830, column: 17, scope: !2341)
!2617 = !DILocation(line: 830, column: 16, scope: !2341)
!2618 = !DILocation(line: 831, column: 7, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 831, column: 7)
!2620 = !DILocation(line: 831, column: 14, scope: !2619)
!2621 = !DILocation(line: 831, column: 7, scope: !2341)
!2622 = !DILocation(line: 832, column: 33, scope: !2619)
!2623 = !DILocation(line: 832, column: 20, scope: !2619)
!2624 = !DILocation(line: 832, column: 19, scope: !2619)
!2625 = !DILocation(line: 832, column: 5, scope: !2619)
!2626 = !DILocation(line: 833, column: 10, scope: !2341)
!2627 = !DILocation(line: 833, column: 3, scope: !2341)
!2628 = !DILocation(line: 834, column: 1, scope: !2341)
!2629 = distinct !DISubprogram(name: "IsPixelGray", scope: !2630, file: !2630, line: 158, type: !2631, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2630 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!709, !1096}
!2633 = !DILocalVariable(name: "pixel", arg: 1, scope: !2629, file: !2630, line: 158, type: !1096)
!2634 = !DILocation(line: 158, column: 64, scope: !2629)
!2635 = !DILocalVariable(name: "blue", scope: !2629, file: !2630, line: 161, type: !1098)
!2636 = !DILocation(line: 161, column: 5, scope: !2629)
!2637 = !DILocalVariable(name: "green", scope: !2629, file: !2630, line: 162, type: !1098)
!2638 = !DILocation(line: 162, column: 5, scope: !2629)
!2639 = !DILocalVariable(name: "red", scope: !2629, file: !2630, line: 163, type: !1098)
!2640 = !DILocation(line: 163, column: 5, scope: !2629)
!2641 = !DILocation(line: 165, column: 24, scope: !2629)
!2642 = !DILocation(line: 165, column: 31, scope: !2629)
!2643 = !DILocation(line: 165, column: 7, scope: !2629)
!2644 = !DILocation(line: 165, column: 6, scope: !2629)
!2645 = !DILocation(line: 166, column: 26, scope: !2629)
!2646 = !DILocation(line: 166, column: 33, scope: !2629)
!2647 = !DILocation(line: 166, column: 9, scope: !2629)
!2648 = !DILocation(line: 166, column: 8, scope: !2629)
!2649 = !DILocation(line: 167, column: 25, scope: !2629)
!2650 = !DILocation(line: 167, column: 32, scope: !2629)
!2651 = !DILocation(line: 167, column: 8, scope: !2629)
!2652 = !DILocation(line: 167, column: 7, scope: !2629)
!2653 = !DILocation(line: 168, column: 27, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2629, file: !2630, line: 168, column: 7)
!2655 = !DILocation(line: 168, column: 31, scope: !2654)
!2656 = !DILocation(line: 168, column: 30, scope: !2654)
!2657 = !DILocation(line: 168, column: 8, scope: !2654)
!2658 = !DILocation(line: 168, column: 38, scope: !2654)
!2659 = !DILocation(line: 168, column: 55, scope: !2654)
!2660 = !DILocation(line: 169, column: 27, scope: !2654)
!2661 = !DILocation(line: 169, column: 33, scope: !2654)
!2662 = !DILocation(line: 169, column: 32, scope: !2654)
!2663 = !DILocation(line: 169, column: 8, scope: !2654)
!2664 = !DILocation(line: 169, column: 39, scope: !2654)
!2665 = !DILocation(line: 168, column: 7, scope: !2629)
!2666 = !DILocation(line: 170, column: 5, scope: !2654)
!2667 = !DILocation(line: 171, column: 3, scope: !2629)
!2668 = !DILocation(line: 172, column: 1, scope: !2629)
!2669 = distinct !DISubprogram(name: "ColorMatrixImage", scope: !1, file: !1, line: 869, type: !2670, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!1090, !821, !2672, !695}
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2674)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfo", file: !470, line: 128, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KernelInfo", file: !470, line: 102, size: 832, elements: !2676)
!2676 = !{!2677, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2691}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2675, file: !470, line: 105, baseType: !2678, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfoType", file: !470, line: 67, baseType: !469)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2675, file: !470, line: 108, baseType: !716, size: 64, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2675, file: !470, line: 109, baseType: !716, size: 64, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2675, file: !470, line: 112, baseType: !880, size: 64, offset: 192)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2675, file: !470, line: 113, baseType: !880, size: 64, offset: 256)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2675, file: !470, line: 116, baseType: !1284, size: 64, offset: 320)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !2675, file: !470, line: 117, baseType: !856, size: 64, offset: 384)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !2675, file: !470, line: 118, baseType: !856, size: 64, offset: 448)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "negative_range", scope: !2675, file: !470, line: 119, baseType: !856, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "positive_range", scope: !2675, file: !470, line: 120, baseType: !856, size: 64, offset: 576)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2675, file: !470, line: 121, baseType: !856, size: 64, offset: 640)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2675, file: !470, line: 124, baseType: !2690, size: 64, offset: 704)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !2675, file: !470, line: 127, baseType: !716, size: 64, offset: 768)
!2692 = !DILocalVariable(name: "image", arg: 1, scope: !2669, file: !1, line: 869, type: !821)
!2693 = !DILocation(line: 869, column: 51, scope: !2669)
!2694 = !DILocalVariable(name: "color_matrix", arg: 2, scope: !2669, file: !1, line: 870, type: !2672)
!2695 = !DILocation(line: 870, column: 21, scope: !2669)
!2696 = !DILocalVariable(name: "exception", arg: 3, scope: !2669, file: !1, line: 870, type: !695)
!2697 = !DILocation(line: 870, column: 49, scope: !2669)
!2698 = !DILocalVariable(name: "color_view", scope: !2669, file: !1, line: 875, type: !1081)
!2699 = !DILocation(line: 875, column: 6, scope: !2669)
!2700 = !DILocalVariable(name: "image_view", scope: !2669, file: !1, line: 876, type: !1081)
!2701 = !DILocation(line: 876, column: 6, scope: !2669)
!2702 = !DILocalVariable(name: "ColorMatrix", scope: !2669, file: !1, line: 879, type: !2703)
!2703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 2304, elements: !2704)
!2704 = !{!2705, !2705}
!2705 = !DISubrange(count: 6)
!2706 = !DILocation(line: 879, column: 5, scope: !2669)
!2707 = !DILocalVariable(name: "color_image", scope: !2669, file: !1, line: 890, type: !1090)
!2708 = !DILocation(line: 890, column: 6, scope: !2669)
!2709 = !DILocalVariable(name: "status", scope: !2669, file: !1, line: 893, type: !709)
!2710 = !DILocation(line: 893, column: 5, scope: !2669)
!2711 = !DILocalVariable(name: "progress", scope: !2669, file: !1, line: 896, type: !950)
!2712 = !DILocation(line: 896, column: 5, scope: !2669)
!2713 = !DILocalVariable(name: "i", scope: !2669, file: !1, line: 899, type: !880)
!2714 = !DILocation(line: 899, column: 5, scope: !2669)
!2715 = !DILocalVariable(name: "u", scope: !2669, file: !1, line: 902, type: !880)
!2716 = !DILocation(line: 902, column: 5, scope: !2669)
!2717 = !DILocalVariable(name: "v", scope: !2669, file: !1, line: 903, type: !880)
!2718 = !DILocation(line: 903, column: 5, scope: !2669)
!2719 = !DILocalVariable(name: "y", scope: !2669, file: !1, line: 904, type: !880)
!2720 = !DILocation(line: 904, column: 5, scope: !2669)
!2721 = !DILocation(line: 911, column: 7, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 911, column: 7)
!2723 = !DILocation(line: 911, column: 14, scope: !2722)
!2724 = !DILocation(line: 911, column: 20, scope: !2722)
!2725 = !DILocation(line: 911, column: 7, scope: !2669)
!2726 = !DILocation(line: 912, column: 61, scope: !2722)
!2727 = !DILocation(line: 912, column: 68, scope: !2722)
!2728 = !DILocation(line: 912, column: 12, scope: !2722)
!2729 = !DILocation(line: 912, column: 5, scope: !2722)
!2730 = !DILocation(line: 915, column: 4, scope: !2669)
!2731 = !DILocation(line: 916, column: 9, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 916, column: 3)
!2733 = !DILocation(line: 916, column: 8, scope: !2732)
!2734 = !DILocation(line: 916, column: 13, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2732, file: !1, line: 916, column: 3)
!2736 = !DILocation(line: 916, column: 27, scope: !2735)
!2737 = !DILocation(line: 916, column: 41, scope: !2735)
!2738 = !DILocation(line: 916, column: 15, scope: !2735)
!2739 = !DILocation(line: 916, column: 3, scope: !2732)
!2740 = !DILocation(line: 917, column: 11, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2735, file: !1, line: 917, column: 5)
!2742 = !DILocation(line: 917, column: 10, scope: !2741)
!2743 = !DILocation(line: 917, column: 15, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2741, file: !1, line: 917, column: 5)
!2745 = !DILocation(line: 917, column: 29, scope: !2744)
!2746 = !DILocation(line: 917, column: 43, scope: !2744)
!2747 = !DILocation(line: 917, column: 17, scope: !2744)
!2748 = !DILocation(line: 917, column: 5, scope: !2741)
!2749 = !DILocation(line: 919, column: 12, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2751, file: !1, line: 919, column: 11)
!2751 = distinct !DILexicalBlock(scope: !2744, file: !1, line: 918, column: 5)
!2752 = !DILocation(line: 919, column: 14, scope: !2750)
!2753 = !DILocation(line: 919, column: 19, scope: !2750)
!2754 = !DILocation(line: 919, column: 23, scope: !2750)
!2755 = !DILocation(line: 919, column: 25, scope: !2750)
!2756 = !DILocation(line: 919, column: 11, scope: !2751)
!2757 = !DILocation(line: 920, column: 27, scope: !2750)
!2758 = !DILocation(line: 920, column: 41, scope: !2750)
!2759 = !DILocation(line: 920, column: 48, scope: !2750)
!2760 = !DILocation(line: 920, column: 21, scope: !2750)
!2761 = !DILocation(line: 920, column: 9, scope: !2750)
!2762 = !DILocation(line: 920, column: 24, scope: !2750)
!2763 = !DILocation(line: 920, column: 26, scope: !2750)
!2764 = !DILocation(line: 921, column: 8, scope: !2751)
!2765 = !DILocation(line: 922, column: 5, scope: !2751)
!2766 = !DILocation(line: 917, column: 51, scope: !2744)
!2767 = !DILocation(line: 917, column: 5, scope: !2744)
!2768 = distinct !{!2768, !2748, !2769}
!2769 = !DILocation(line: 922, column: 5, scope: !2741)
!2770 = !DILocation(line: 916, column: 50, scope: !2735)
!2771 = !DILocation(line: 916, column: 3, scope: !2735)
!2772 = distinct !{!2772, !2739, !2773}
!2773 = !DILocation(line: 922, column: 5, scope: !2732)
!2774 = !DILocation(line: 926, column: 26, scope: !2669)
!2775 = !DILocation(line: 926, column: 47, scope: !2669)
!2776 = !DILocation(line: 926, column: 15, scope: !2669)
!2777 = !DILocation(line: 926, column: 14, scope: !2669)
!2778 = !DILocation(line: 927, column: 7, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 927, column: 7)
!2780 = !DILocation(line: 927, column: 19, scope: !2779)
!2781 = !DILocation(line: 927, column: 7, scope: !2669)
!2782 = !DILocation(line: 928, column: 5, scope: !2779)
!2783 = !DILocation(line: 929, column: 28, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 929, column: 7)
!2785 = !DILocation(line: 929, column: 7, scope: !2784)
!2786 = !DILocation(line: 929, column: 53, scope: !2784)
!2787 = !DILocation(line: 929, column: 7, scope: !2669)
!2788 = !DILocation(line: 931, column: 24, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2784, file: !1, line: 930, column: 5)
!2790 = !DILocation(line: 931, column: 35, scope: !2789)
!2791 = !DILocation(line: 931, column: 48, scope: !2789)
!2792 = !DILocation(line: 931, column: 7, scope: !2789)
!2793 = !DILocation(line: 932, column: 32, scope: !2789)
!2794 = !DILocation(line: 932, column: 19, scope: !2789)
!2795 = !DILocation(line: 932, column: 18, scope: !2789)
!2796 = !DILocation(line: 933, column: 7, scope: !2789)
!2797 = !DILocation(line: 935, column: 7, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 935, column: 7)
!2799 = !DILocation(line: 935, column: 14, scope: !2798)
!2800 = !DILocation(line: 935, column: 20, scope: !2798)
!2801 = !DILocation(line: 935, column: 7, scope: !2669)
!2802 = !DILocalVariable(name: "format", scope: !2803, file: !1, line: 938, type: !967)
!2803 = distinct !DILexicalBlock(scope: !2798, file: !1, line: 936, column: 5)
!2804 = !DILocation(line: 938, column: 9, scope: !2803)
!2805 = !DILocalVariable(name: "message", scope: !2803, file: !1, line: 939, type: !704)
!2806 = !DILocation(line: 939, column: 10, scope: !2803)
!2807 = !DILocation(line: 941, column: 14, scope: !2803)
!2808 = !DILocation(line: 943, column: 15, scope: !2803)
!2809 = !DILocation(line: 943, column: 14, scope: !2803)
!2810 = !DILocation(line: 944, column: 13, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2803, file: !1, line: 944, column: 7)
!2812 = !DILocation(line: 944, column: 12, scope: !2811)
!2813 = !DILocation(line: 944, column: 17, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 944, column: 7)
!2815 = !DILocation(line: 944, column: 19, scope: !2814)
!2816 = !DILocation(line: 944, column: 7, scope: !2811)
!2817 = !DILocation(line: 946, column: 10, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2814, file: !1, line: 945, column: 7)
!2819 = !DILocation(line: 946, column: 17, scope: !2818)
!2820 = !DILocation(line: 947, column: 35, scope: !2818)
!2821 = !DILocation(line: 947, column: 75, scope: !2818)
!2822 = !DILocation(line: 947, column: 66, scope: !2818)
!2823 = !DILocation(line: 947, column: 16, scope: !2818)
!2824 = !DILocation(line: 948, column: 43, scope: !2818)
!2825 = !DILocation(line: 948, column: 16, scope: !2818)
!2826 = !DILocation(line: 949, column: 15, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2818, file: !1, line: 949, column: 9)
!2828 = !DILocation(line: 949, column: 14, scope: !2827)
!2829 = !DILocation(line: 949, column: 19, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2827, file: !1, line: 949, column: 9)
!2831 = !DILocation(line: 949, column: 21, scope: !2830)
!2832 = !DILocation(line: 949, column: 9, scope: !2827)
!2833 = !DILocation(line: 951, column: 37, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 950, column: 9)
!2835 = !DILocation(line: 952, column: 25, scope: !2834)
!2836 = !DILocation(line: 952, column: 13, scope: !2834)
!2837 = !DILocation(line: 952, column: 28, scope: !2834)
!2838 = !DILocation(line: 951, column: 18, scope: !2834)
!2839 = !DILocation(line: 953, column: 45, scope: !2834)
!2840 = !DILocation(line: 953, column: 18, scope: !2834)
!2841 = !DILocation(line: 954, column: 9, scope: !2834)
!2842 = !DILocation(line: 949, column: 27, scope: !2830)
!2843 = !DILocation(line: 949, column: 9, scope: !2830)
!2844 = distinct !{!2844, !2832, !2845}
!2845 = !DILocation(line: 954, column: 9, scope: !2827)
!2846 = !DILocation(line: 955, column: 69, scope: !2818)
!2847 = !DILocation(line: 955, column: 16, scope: !2818)
!2848 = !DILocation(line: 956, column: 7, scope: !2818)
!2849 = !DILocation(line: 944, column: 25, scope: !2814)
!2850 = !DILocation(line: 944, column: 7, scope: !2814)
!2851 = distinct !{!2851, !2816, !2852}
!2852 = !DILocation(line: 956, column: 7, scope: !2811)
!2853 = !DILocation(line: 957, column: 29, scope: !2803)
!2854 = !DILocation(line: 957, column: 15, scope: !2803)
!2855 = !DILocation(line: 957, column: 14, scope: !2803)
!2856 = !DILocation(line: 958, column: 5, scope: !2803)
!2857 = !DILocation(line: 962, column: 9, scope: !2669)
!2858 = !DILocation(line: 963, column: 11, scope: !2669)
!2859 = !DILocation(line: 964, column: 38, scope: !2669)
!2860 = !DILocation(line: 964, column: 44, scope: !2669)
!2861 = !DILocation(line: 964, column: 14, scope: !2669)
!2862 = !DILocation(line: 964, column: 13, scope: !2669)
!2863 = !DILocation(line: 965, column: 40, scope: !2669)
!2864 = !DILocation(line: 965, column: 52, scope: !2669)
!2865 = !DILocation(line: 965, column: 14, scope: !2669)
!2866 = !DILocation(line: 965, column: 13, scope: !2669)
!2867 = !DILocation(line: 970, column: 9, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 970, column: 3)
!2869 = !DILocation(line: 970, column: 8, scope: !2868)
!2870 = !DILocation(line: 970, column: 13, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !1, line: 970, column: 3)
!2872 = !DILocation(line: 970, column: 27, scope: !2871)
!2873 = !DILocation(line: 970, column: 34, scope: !2871)
!2874 = !DILocation(line: 970, column: 15, scope: !2871)
!2875 = !DILocation(line: 970, column: 3, scope: !2868)
!2876 = !DILocalVariable(name: "pixel", scope: !2877, file: !1, line: 973, type: !1098)
!2877 = distinct !DILexicalBlock(scope: !2871, file: !1, line: 971, column: 3)
!2878 = !DILocation(line: 973, column: 7, scope: !2877)
!2879 = !DILocalVariable(name: "indexes", scope: !2877, file: !1, line: 976, type: !1631)
!2880 = !DILocation(line: 976, column: 17, scope: !2877)
!2881 = !DILocalVariable(name: "p", scope: !2877, file: !1, line: 979, type: !1634)
!2882 = !DILocation(line: 979, column: 17, scope: !2877)
!2883 = !DILocalVariable(name: "x", scope: !2877, file: !1, line: 982, type: !880)
!2884 = !DILocation(line: 982, column: 7, scope: !2877)
!2885 = !DILocalVariable(name: "color_indexes", scope: !2877, file: !1, line: 985, type: !1637)
!2886 = !DILocation(line: 985, column: 17, scope: !2877)
!2887 = !DILocalVariable(name: "q", scope: !2877, file: !1, line: 988, type: !1642)
!2888 = !DILocation(line: 988, column: 17, scope: !2877)
!2889 = !DILocation(line: 990, column: 9, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 990, column: 9)
!2891 = !DILocation(line: 990, column: 16, scope: !2890)
!2892 = !DILocation(line: 990, column: 9, scope: !2877)
!2893 = !DILocation(line: 991, column: 7, scope: !2890)
!2894 = !DILocation(line: 992, column: 33, scope: !2877)
!2895 = !DILocation(line: 992, column: 46, scope: !2877)
!2896 = !DILocation(line: 992, column: 48, scope: !2877)
!2897 = !DILocation(line: 992, column: 55, scope: !2877)
!2898 = !DILocation(line: 992, column: 65, scope: !2877)
!2899 = !DILocation(line: 992, column: 7, scope: !2877)
!2900 = !DILocation(line: 992, column: 6, scope: !2877)
!2901 = !DILocation(line: 993, column: 35, scope: !2877)
!2902 = !DILocation(line: 993, column: 48, scope: !2877)
!2903 = !DILocation(line: 993, column: 50, scope: !2877)
!2904 = !DILocation(line: 993, column: 63, scope: !2877)
!2905 = !DILocation(line: 994, column: 7, scope: !2877)
!2906 = !DILocation(line: 993, column: 7, scope: !2877)
!2907 = !DILocation(line: 993, column: 6, scope: !2877)
!2908 = !DILocation(line: 995, column: 10, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 995, column: 9)
!2910 = !DILocation(line: 995, column: 12, scope: !2909)
!2911 = !DILocation(line: 995, column: 43, scope: !2909)
!2912 = !DILocation(line: 995, column: 47, scope: !2909)
!2913 = !DILocation(line: 995, column: 49, scope: !2909)
!2914 = !DILocation(line: 995, column: 9, scope: !2877)
!2915 = !DILocation(line: 997, column: 15, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2909, file: !1, line: 996, column: 7)
!2917 = !DILocation(line: 998, column: 9, scope: !2916)
!2918 = !DILocation(line: 1000, column: 43, scope: !2877)
!2919 = !DILocation(line: 1000, column: 13, scope: !2877)
!2920 = !DILocation(line: 1000, column: 12, scope: !2877)
!2921 = !DILocation(line: 1001, column: 51, scope: !2877)
!2922 = !DILocation(line: 1001, column: 19, scope: !2877)
!2923 = !DILocation(line: 1001, column: 18, scope: !2877)
!2924 = !DILocation(line: 1002, column: 11, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 1002, column: 5)
!2926 = !DILocation(line: 1002, column: 10, scope: !2925)
!2927 = !DILocation(line: 1002, column: 15, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 1002, column: 5)
!2929 = !DILocation(line: 1002, column: 29, scope: !2928)
!2930 = !DILocation(line: 1002, column: 36, scope: !2928)
!2931 = !DILocation(line: 1002, column: 17, scope: !2928)
!2932 = !DILocation(line: 1002, column: 5, scope: !2925)
!2933 = !DILocalVariable(name: "v", scope: !2934, file: !1, line: 1005, type: !880)
!2934 = distinct !DILexicalBlock(scope: !2928, file: !1, line: 1003, column: 5)
!2935 = !DILocation(line: 1005, column: 9, scope: !2934)
!2936 = !DILocalVariable(name: "height", scope: !2934, file: !1, line: 1008, type: !716)
!2937 = !DILocation(line: 1008, column: 9, scope: !2934)
!2938 = !DILocation(line: 1010, column: 14, scope: !2934)
!2939 = !DILocation(line: 1010, column: 28, scope: !2934)
!2940 = !DILocation(line: 1010, column: 35, scope: !2934)
!2941 = !DILocation(line: 1010, column: 47, scope: !2934)
!2942 = !DILocation(line: 1010, column: 61, scope: !2934)
!2943 = !DILocation(line: 1010, column: 13, scope: !2934)
!2944 = !DILocation(line: 1011, column: 13, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2934, file: !1, line: 1011, column: 7)
!2946 = !DILocation(line: 1011, column: 12, scope: !2945)
!2947 = !DILocation(line: 1011, column: 17, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2945, file: !1, line: 1011, column: 7)
!2949 = !DILocation(line: 1011, column: 31, scope: !2948)
!2950 = !DILocation(line: 1011, column: 19, scope: !2948)
!2951 = !DILocation(line: 1011, column: 7, scope: !2945)
!2952 = !DILocation(line: 1013, column: 27, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2948, file: !1, line: 1012, column: 7)
!2954 = !DILocation(line: 1013, column: 15, scope: !2953)
!2955 = !DILocation(line: 1013, column: 33, scope: !2953)
!2956 = !DILocation(line: 1013, column: 32, scope: !2953)
!2957 = !DILocation(line: 1013, column: 60, scope: !2953)
!2958 = !DILocation(line: 1013, column: 48, scope: !2953)
!2959 = !DILocation(line: 1014, column: 11, scope: !2953)
!2960 = !DILocation(line: 1013, column: 65, scope: !2953)
!2961 = !DILocation(line: 1013, column: 47, scope: !2953)
!2962 = !DILocation(line: 1014, column: 40, scope: !2953)
!2963 = !DILocation(line: 1014, column: 28, scope: !2953)
!2964 = !DILocation(line: 1014, column: 46, scope: !2953)
!2965 = !DILocation(line: 1014, column: 45, scope: !2953)
!2966 = !DILocation(line: 1014, column: 27, scope: !2953)
!2967 = !DILocation(line: 1013, column: 14, scope: !2953)
!2968 = !DILocation(line: 1015, column: 13, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2953, file: !1, line: 1015, column: 13)
!2970 = !DILocation(line: 1015, column: 20, scope: !2969)
!2971 = !DILocation(line: 1015, column: 26, scope: !2969)
!2972 = !DILocation(line: 1015, column: 13, scope: !2953)
!2973 = !DILocation(line: 1016, column: 30, scope: !2969)
!2974 = !DILocation(line: 1016, column: 18, scope: !2969)
!2975 = !DILocation(line: 1016, column: 50, scope: !2969)
!2976 = !DILocation(line: 1016, column: 49, scope: !2969)
!2977 = !DILocation(line: 1016, column: 36, scope: !2969)
!2978 = !DILocation(line: 1016, column: 35, scope: !2969)
!2979 = !DILocation(line: 1016, column: 16, scope: !2969)
!2980 = !DILocation(line: 1016, column: 11, scope: !2969)
!2981 = !DILocation(line: 1017, column: 13, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2953, file: !1, line: 1017, column: 13)
!2983 = !DILocation(line: 1017, column: 20, scope: !2982)
!2984 = !DILocation(line: 1017, column: 31, scope: !2982)
!2985 = !DILocation(line: 1017, column: 13, scope: !2953)
!2986 = !DILocation(line: 1018, column: 30, scope: !2982)
!2987 = !DILocation(line: 1018, column: 18, scope: !2982)
!2988 = !DILocation(line: 1018, column: 36, scope: !2982)
!2989 = !DILocation(line: 1018, column: 35, scope: !2982)
!2990 = !DILocation(line: 1018, column: 16, scope: !2982)
!2991 = !DILocation(line: 1018, column: 11, scope: !2982)
!2992 = !DILocation(line: 1019, column: 41, scope: !2953)
!2993 = !DILocation(line: 1019, column: 29, scope: !2953)
!2994 = !DILocation(line: 1019, column: 28, scope: !2953)
!2995 = !DILocation(line: 1019, column: 14, scope: !2953)
!2996 = !DILocation(line: 1020, column: 17, scope: !2953)
!2997 = !DILocation(line: 1020, column: 9, scope: !2953)
!2998 = !DILocation(line: 1022, column: 19, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2953, file: !1, line: 1021, column: 9)
!3000 = !DILocation(line: 1022, column: 57, scope: !2999)
!3001 = !DILocation(line: 1023, column: 19, scope: !2999)
!3002 = !DILocation(line: 1023, column: 59, scope: !2999)
!3003 = !DILocation(line: 1024, column: 19, scope: !2999)
!3004 = !DILocation(line: 1024, column: 58, scope: !2999)
!3005 = !DILocation(line: 1027, column: 17, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 1027, column: 17)
!3007 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 1026, column: 11)
!3008 = !DILocation(line: 1027, column: 24, scope: !3006)
!3009 = !DILocation(line: 1027, column: 30, scope: !3006)
!3010 = !DILocation(line: 1027, column: 17, scope: !3007)
!3011 = !DILocation(line: 1028, column: 15, scope: !3006)
!3012 = !DILocation(line: 1029, column: 13, scope: !3007)
!3013 = !DILocation(line: 1033, column: 17, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 1033, column: 17)
!3015 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 1032, column: 11)
!3016 = !DILocation(line: 1033, column: 24, scope: !3014)
!3017 = !DILocation(line: 1033, column: 35, scope: !3014)
!3018 = !DILocation(line: 1033, column: 17, scope: !3015)
!3019 = !DILocation(line: 1034, column: 15, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 1034, column: 15)
!3021 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 1034, column: 15)
!3022 = !DILocation(line: 1034, column: 15, scope: !3021)
!3023 = !DILocation(line: 1035, column: 13, scope: !3015)
!3024 = !DILocation(line: 1038, column: 7, scope: !2953)
!3025 = !DILocation(line: 1011, column: 40, scope: !2948)
!3026 = !DILocation(line: 1011, column: 7, scope: !2948)
!3027 = distinct !{!3027, !2951, !3028}
!3028 = !DILocation(line: 1038, column: 7, scope: !2945)
!3029 = !DILocation(line: 1039, column: 8, scope: !2934)
!3030 = !DILocation(line: 1040, column: 8, scope: !2934)
!3031 = !DILocation(line: 1041, column: 5, scope: !2934)
!3032 = !DILocation(line: 1002, column: 46, scope: !2928)
!3033 = !DILocation(line: 1002, column: 5, scope: !2928)
!3034 = distinct !{!3034, !2932, !3035}
!3035 = !DILocation(line: 1041, column: 5, scope: !2925)
!3036 = !DILocation(line: 1042, column: 38, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 1042, column: 9)
!3038 = !DILocation(line: 1042, column: 49, scope: !3037)
!3039 = !DILocation(line: 1042, column: 9, scope: !3037)
!3040 = !DILocation(line: 1042, column: 60, scope: !3037)
!3041 = !DILocation(line: 1042, column: 9, scope: !2877)
!3042 = !DILocation(line: 1043, column: 13, scope: !3037)
!3043 = !DILocation(line: 1043, column: 7, scope: !3037)
!3044 = !DILocation(line: 1044, column: 9, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 1044, column: 9)
!3046 = !DILocation(line: 1044, column: 16, scope: !3045)
!3047 = !DILocation(line: 1044, column: 33, scope: !3045)
!3048 = !DILocation(line: 1044, column: 9, scope: !2877)
!3049 = !DILocalVariable(name: "proceed", scope: !3050, file: !1, line: 1047, type: !709)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !1, line: 1045, column: 7)
!3051 = !DILocation(line: 1047, column: 11, scope: !3050)
!3052 = !DILocation(line: 1052, column: 34, scope: !3050)
!3053 = !DILocation(line: 1052, column: 68, scope: !3050)
!3054 = !DILocation(line: 1053, column: 11, scope: !3050)
!3055 = !DILocation(line: 1053, column: 18, scope: !3050)
!3056 = !DILocation(line: 1052, column: 17, scope: !3050)
!3057 = !DILocation(line: 1052, column: 16, scope: !3050)
!3058 = !DILocation(line: 1054, column: 13, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3050, file: !1, line: 1054, column: 13)
!3060 = !DILocation(line: 1054, column: 21, scope: !3059)
!3061 = !DILocation(line: 1054, column: 13, scope: !3050)
!3062 = !DILocation(line: 1055, column: 17, scope: !3059)
!3063 = !DILocation(line: 1055, column: 11, scope: !3059)
!3064 = !DILocation(line: 1056, column: 7, scope: !3050)
!3065 = !DILocation(line: 1057, column: 3, scope: !2877)
!3066 = !DILocation(line: 970, column: 41, scope: !2871)
!3067 = !DILocation(line: 970, column: 3, scope: !2871)
!3068 = distinct !{!3068, !2875, !3069}
!3069 = !DILocation(line: 1057, column: 3, scope: !2868)
!3070 = !DILocation(line: 1058, column: 31, scope: !2669)
!3071 = !DILocation(line: 1058, column: 14, scope: !2669)
!3072 = !DILocation(line: 1058, column: 13, scope: !2669)
!3073 = !DILocation(line: 1059, column: 31, scope: !2669)
!3074 = !DILocation(line: 1059, column: 14, scope: !2669)
!3075 = !DILocation(line: 1059, column: 13, scope: !2669)
!3076 = !DILocation(line: 1060, column: 7, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 1060, column: 7)
!3078 = !DILocation(line: 1060, column: 14, scope: !3077)
!3079 = !DILocation(line: 1060, column: 7, scope: !2669)
!3080 = !DILocation(line: 1061, column: 30, scope: !3077)
!3081 = !DILocation(line: 1061, column: 17, scope: !3077)
!3082 = !DILocation(line: 1061, column: 16, scope: !3077)
!3083 = !DILocation(line: 1061, column: 5, scope: !3077)
!3084 = !DILocation(line: 1062, column: 10, scope: !2669)
!3085 = !DILocation(line: 1062, column: 3, scope: !2669)
!3086 = !DILocation(line: 1063, column: 1, scope: !2669)
!3087 = distinct !DISubprogram(name: "DestroyFxInfo", scope: !1, file: !1, line: 1087, type: !3088, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!815, !815}
!3090 = !DILocalVariable(name: "fx_info", arg: 1, scope: !3087, file: !1, line: 1087, type: !815)
!3091 = !DILocation(line: 1087, column: 44, scope: !3087)
!3092 = !DILocalVariable(name: "i", scope: !3087, file: !1, line: 1090, type: !880)
!3093 = !DILocation(line: 1090, column: 5, scope: !3087)
!3094 = !DILocation(line: 1092, column: 43, scope: !3087)
!3095 = !DILocation(line: 1092, column: 52, scope: !3087)
!3096 = !DILocation(line: 1092, column: 22, scope: !3087)
!3097 = !DILocation(line: 1092, column: 3, scope: !3087)
!3098 = !DILocation(line: 1092, column: 12, scope: !3087)
!3099 = !DILocation(line: 1092, column: 21, scope: !3087)
!3100 = !DILocation(line: 1093, column: 37, scope: !3087)
!3101 = !DILocation(line: 1093, column: 46, scope: !3087)
!3102 = !DILocation(line: 1093, column: 23, scope: !3087)
!3103 = !DILocation(line: 1093, column: 3, scope: !3087)
!3104 = !DILocation(line: 1093, column: 12, scope: !3087)
!3105 = !DILocation(line: 1093, column: 22, scope: !3087)
!3106 = !DILocation(line: 1094, column: 37, scope: !3087)
!3107 = !DILocation(line: 1094, column: 46, scope: !3087)
!3108 = !DILocation(line: 1094, column: 20, scope: !3087)
!3109 = !DILocation(line: 1094, column: 3, scope: !3087)
!3110 = !DILocation(line: 1094, column: 12, scope: !3087)
!3111 = !DILocation(line: 1094, column: 19, scope: !3087)
!3112 = !DILocation(line: 1095, column: 36, scope: !3087)
!3113 = !DILocation(line: 1095, column: 45, scope: !3087)
!3114 = !DILocation(line: 1095, column: 19, scope: !3087)
!3115 = !DILocation(line: 1095, column: 3, scope: !3087)
!3116 = !DILocation(line: 1095, column: 12, scope: !3087)
!3117 = !DILocation(line: 1095, column: 18, scope: !3087)
!3118 = !DILocation(line: 1096, column: 39, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3087, file: !1, line: 1096, column: 3)
!3120 = !DILocation(line: 1096, column: 48, scope: !3119)
!3121 = !DILocation(line: 1096, column: 20, scope: !3119)
!3122 = !DILocation(line: 1096, column: 55, scope: !3119)
!3123 = !DILocation(line: 1096, column: 9, scope: !3119)
!3124 = !DILocation(line: 1096, column: 8, scope: !3119)
!3125 = !DILocation(line: 1096, column: 59, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3119, file: !1, line: 1096, column: 3)
!3127 = !DILocation(line: 1096, column: 61, scope: !3126)
!3128 = !DILocation(line: 1096, column: 3, scope: !3119)
!3129 = !DILocation(line: 1097, column: 39, scope: !3126)
!3130 = !DILocation(line: 1097, column: 48, scope: !3126)
!3131 = !DILocation(line: 1097, column: 53, scope: !3126)
!3132 = !DILocation(line: 1097, column: 22, scope: !3126)
!3133 = !DILocation(line: 1097, column: 5, scope: !3126)
!3134 = !DILocation(line: 1097, column: 14, scope: !3126)
!3135 = !DILocation(line: 1097, column: 19, scope: !3126)
!3136 = !DILocation(line: 1097, column: 21, scope: !3126)
!3137 = !DILocation(line: 1096, column: 68, scope: !3126)
!3138 = !DILocation(line: 1096, column: 3, scope: !3126)
!3139 = distinct !{!3139, !3128, !3140}
!3140 = !DILocation(line: 1097, column: 55, scope: !3119)
!3141 = !DILocation(line: 1098, column: 55, scope: !3087)
!3142 = !DILocation(line: 1098, column: 64, scope: !3087)
!3143 = !DILocation(line: 1098, column: 32, scope: !3087)
!3144 = !DILocation(line: 1098, column: 17, scope: !3087)
!3145 = !DILocation(line: 1098, column: 3, scope: !3087)
!3146 = !DILocation(line: 1098, column: 12, scope: !3087)
!3147 = !DILocation(line: 1098, column: 16, scope: !3087)
!3148 = !DILocation(line: 1099, column: 42, scope: !3087)
!3149 = !DILocation(line: 1099, column: 51, scope: !3087)
!3150 = !DILocation(line: 1099, column: 24, scope: !3087)
!3151 = !DILocation(line: 1099, column: 3, scope: !3087)
!3152 = !DILocation(line: 1099, column: 12, scope: !3087)
!3153 = !DILocation(line: 1099, column: 23, scope: !3087)
!3154 = !DILocation(line: 1100, column: 45, scope: !3087)
!3155 = !DILocation(line: 1100, column: 22, scope: !3087)
!3156 = !DILocation(line: 1100, column: 11, scope: !3087)
!3157 = !DILocation(line: 1100, column: 10, scope: !3087)
!3158 = !DILocation(line: 1101, column: 10, scope: !3087)
!3159 = !DILocation(line: 1101, column: 3, scope: !3087)
!3160 = distinct !DISubprogram(name: "FxEvaluateExpression", scope: !1, file: !1, line: 2897, type: !3161, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!709, !815, !1284, !695}
!3163 = !DILocalVariable(name: "fx_info", arg: 1, scope: !3160, file: !1, line: 2897, type: !815)
!3164 = !DILocation(line: 2897, column: 61, scope: !3160)
!3165 = !DILocalVariable(name: "alpha", arg: 2, scope: !3160, file: !1, line: 2898, type: !1284)
!3166 = !DILocation(line: 2898, column: 11, scope: !3160)
!3167 = !DILocalVariable(name: "exception", arg: 3, scope: !3160, file: !1, line: 2898, type: !695)
!3168 = !DILocation(line: 2898, column: 32, scope: !3160)
!3169 = !DILocalVariable(name: "status", scope: !3160, file: !1, line: 2901, type: !709)
!3170 = !DILocation(line: 2901, column: 5, scope: !3160)
!3171 = !DILocation(line: 2903, column: 38, scope: !3160)
!3172 = !DILocation(line: 2903, column: 62, scope: !3160)
!3173 = !DILocation(line: 2903, column: 68, scope: !3160)
!3174 = !DILocation(line: 2903, column: 10, scope: !3160)
!3175 = !DILocation(line: 2903, column: 9, scope: !3160)
!3176 = !DILocation(line: 2904, column: 10, scope: !3160)
!3177 = !DILocation(line: 2904, column: 3, scope: !3160)
!3178 = distinct !DISubprogram(name: "FxEvaluateChannelExpression", scope: !1, file: !1, line: 2923, type: !3179, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!709, !815, !1518, !3181, !3181, !1284, !695}
!3181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!3182 = !DILocalVariable(name: "fx_info", arg: 1, scope: !3178, file: !1, line: 2923, type: !815)
!3183 = !DILocation(line: 2923, column: 68, scope: !3178)
!3184 = !DILocalVariable(name: "channel", arg: 2, scope: !3178, file: !1, line: 2924, type: !1518)
!3185 = !DILocation(line: 2924, column: 21, scope: !3178)
!3186 = !DILocalVariable(name: "x", arg: 3, scope: !3178, file: !1, line: 2924, type: !3181)
!3187 = !DILocation(line: 2924, column: 43, scope: !3178)
!3188 = !DILocalVariable(name: "y", arg: 4, scope: !3178, file: !1, line: 2924, type: !3181)
!3189 = !DILocation(line: 2924, column: 59, scope: !3178)
!3190 = !DILocalVariable(name: "alpha", arg: 5, scope: !3178, file: !1, line: 2924, type: !1284)
!3191 = !DILocation(line: 2924, column: 69, scope: !3178)
!3192 = !DILocalVariable(name: "exception", arg: 6, scope: !3178, file: !1, line: 2925, type: !695)
!3193 = !DILocation(line: 2925, column: 18, scope: !3178)
!3194 = !DILocalVariable(name: "beta", scope: !3178, file: !1, line: 2928, type: !856)
!3195 = !DILocation(line: 2928, column: 5, scope: !3178)
!3196 = !DILocation(line: 2930, column: 7, scope: !3178)
!3197 = !DILocation(line: 2931, column: 34, scope: !3178)
!3198 = !DILocation(line: 2931, column: 42, scope: !3178)
!3199 = !DILocation(line: 2931, column: 50, scope: !3178)
!3200 = !DILocation(line: 2931, column: 52, scope: !3178)
!3201 = !DILocation(line: 2931, column: 54, scope: !3178)
!3202 = !DILocation(line: 2931, column: 63, scope: !3178)
!3203 = !DILocation(line: 2932, column: 5, scope: !3178)
!3204 = !DILocation(line: 2931, column: 10, scope: !3178)
!3205 = !DILocation(line: 2931, column: 4, scope: !3178)
!3206 = !DILocation(line: 2931, column: 9, scope: !3178)
!3207 = !DILocation(line: 2933, column: 10, scope: !3178)
!3208 = !DILocation(line: 2933, column: 21, scope: !3178)
!3209 = !DILocation(line: 2933, column: 30, scope: !3178)
!3210 = !DILocation(line: 2933, column: 3, scope: !3178)
!3211 = distinct !DISubprogram(name: "FxPreprocessExpression", scope: !1, file: !1, line: 2907, type: !3161, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3212 = !DILocalVariable(name: "fx_info", arg: 1, scope: !3211, file: !1, line: 2907, type: !815)
!3213 = !DILocation(line: 2907, column: 63, scope: !3211)
!3214 = !DILocalVariable(name: "alpha", arg: 2, scope: !3211, file: !1, line: 2908, type: !1284)
!3215 = !DILocation(line: 2908, column: 11, scope: !3211)
!3216 = !DILocalVariable(name: "exception", arg: 3, scope: !3211, file: !1, line: 2908, type: !695)
!3217 = !DILocation(line: 2908, column: 32, scope: !3211)
!3218 = !DILocalVariable(name: "file", scope: !3211, file: !1, line: 2911, type: !1020)
!3219 = !DILocation(line: 2911, column: 6, scope: !3211)
!3220 = !DILocalVariable(name: "status", scope: !3211, file: !1, line: 2914, type: !709)
!3221 = !DILocation(line: 2914, column: 5, scope: !3211)
!3222 = !DILocation(line: 2916, column: 8, scope: !3211)
!3223 = !DILocation(line: 2916, column: 17, scope: !3211)
!3224 = !DILocation(line: 2916, column: 7, scope: !3211)
!3225 = !DILocation(line: 2917, column: 3, scope: !3211)
!3226 = !DILocation(line: 2917, column: 12, scope: !3211)
!3227 = !DILocation(line: 2917, column: 16, scope: !3211)
!3228 = !DILocation(line: 2918, column: 38, scope: !3211)
!3229 = !DILocation(line: 2918, column: 62, scope: !3211)
!3230 = !DILocation(line: 2918, column: 68, scope: !3211)
!3231 = !DILocation(line: 2918, column: 10, scope: !3211)
!3232 = !DILocation(line: 2918, column: 9, scope: !3211)
!3233 = !DILocation(line: 2919, column: 17, scope: !3211)
!3234 = !DILocation(line: 2919, column: 3, scope: !3211)
!3235 = !DILocation(line: 2919, column: 12, scope: !3211)
!3236 = !DILocation(line: 2919, column: 16, scope: !3211)
!3237 = !DILocation(line: 2920, column: 10, scope: !3211)
!3238 = !DILocation(line: 2920, column: 3, scope: !3211)
!3239 = distinct !DISubprogram(name: "FxEvaluateSubexpression", scope: !1, file: !1, line: 2115, type: !3240, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!856, !815, !1518, !3181, !3181, !692, !1284, !695}
!3242 = !DILocalVariable(name: "fx_info", arg: 1, scope: !3239, file: !1, line: 2115, type: !815)
!3243 = !DILocation(line: 2115, column: 47, scope: !3239)
!3244 = !DILocalVariable(name: "channel", arg: 2, scope: !3239, file: !1, line: 2115, type: !1518)
!3245 = !DILocation(line: 2115, column: 73, scope: !3239)
!3246 = !DILocalVariable(name: "x", arg: 3, scope: !3239, file: !1, line: 2116, type: !3181)
!3247 = !DILocation(line: 2116, column: 17, scope: !3239)
!3248 = !DILocalVariable(name: "y", arg: 4, scope: !3239, file: !1, line: 2116, type: !3181)
!3249 = !DILocation(line: 2116, column: 33, scope: !3239)
!3250 = !DILocalVariable(name: "expression", arg: 5, scope: !3239, file: !1, line: 2116, type: !692)
!3251 = !DILocation(line: 2116, column: 47, scope: !3239)
!3252 = !DILocalVariable(name: "beta", arg: 6, scope: !3239, file: !1, line: 2116, type: !1284)
!3253 = !DILocation(line: 2116, column: 66, scope: !3239)
!3254 = !DILocalVariable(name: "exception", arg: 7, scope: !3239, file: !1, line: 2117, type: !695)
!3255 = !DILocation(line: 2117, column: 18, scope: !3239)
!3256 = !DILocalVariable(name: "q", scope: !3239, file: !1, line: 2120, type: !704)
!3257 = !DILocation(line: 2120, column: 6, scope: !3239)
!3258 = !DILocalVariable(name: "subexpression", scope: !3239, file: !1, line: 2121, type: !967)
!3259 = !DILocation(line: 2121, column: 5, scope: !3239)
!3260 = !DILocalVariable(name: "alpha", scope: !3239, file: !1, line: 2124, type: !856)
!3261 = !DILocation(line: 2124, column: 5, scope: !3239)
!3262 = !DILocalVariable(name: "gamma", scope: !3239, file: !1, line: 2125, type: !856)
!3263 = !DILocation(line: 2125, column: 5, scope: !3239)
!3264 = !DILocalVariable(name: "p", scope: !3239, file: !1, line: 2128, type: !692)
!3265 = !DILocation(line: 2128, column: 6, scope: !3239)
!3266 = !DILocation(line: 2130, column: 4, scope: !3239)
!3267 = !DILocation(line: 2130, column: 8, scope: !3239)
!3268 = !DILocation(line: 2131, column: 7, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2131, column: 7)
!3270 = !DILocation(line: 2131, column: 18, scope: !3269)
!3271 = !DILocation(line: 2131, column: 27, scope: !3269)
!3272 = !DILocation(line: 2131, column: 7, scope: !3239)
!3273 = !DILocation(line: 2132, column: 5, scope: !3269)
!3274 = !DILocation(line: 2133, column: 3, scope: !3239)
!3275 = !DILocation(line: 2133, column: 10, scope: !3239)
!3276 = !DILocation(line: 2133, column: 55, scope: !3239)
!3277 = !DILocation(line: 2134, column: 15, scope: !3239)
!3278 = distinct !{!3278, !3274, !3277}
!3279 = !DILocation(line: 2135, column: 8, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2135, column: 7)
!3281 = !DILocation(line: 2135, column: 7, scope: !3280)
!3282 = !DILocation(line: 2135, column: 19, scope: !3280)
!3283 = !DILocation(line: 2135, column: 7, scope: !3239)
!3284 = !DILocation(line: 2136, column: 5, scope: !3280)
!3285 = !DILocation(line: 2137, column: 3, scope: !3239)
!3286 = !DILocation(line: 2137, column: 17, scope: !3239)
!3287 = !DILocation(line: 2138, column: 26, scope: !3239)
!3288 = !DILocation(line: 2138, column: 37, scope: !3239)
!3289 = !DILocation(line: 2138, column: 5, scope: !3239)
!3290 = !DILocation(line: 2138, column: 4, scope: !3239)
!3291 = !DILocation(line: 2139, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2139, column: 7)
!3293 = !DILocation(line: 2139, column: 9, scope: !3292)
!3294 = !DILocation(line: 2139, column: 7, scope: !3239)
!3295 = !DILocation(line: 2141, column: 31, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 2140, column: 5)
!3297 = !DILocation(line: 2141, column: 45, scope: !3296)
!3298 = !DILocation(line: 2142, column: 10, scope: !3296)
!3299 = !DILocation(line: 2142, column: 12, scope: !3296)
!3300 = !DILocation(line: 2142, column: 11, scope: !3296)
!3301 = !DILocation(line: 2142, column: 22, scope: !3296)
!3302 = !DILocation(line: 2141, column: 14, scope: !3296)
!3303 = !DILocation(line: 2143, column: 37, scope: !3296)
!3304 = !DILocation(line: 2143, column: 45, scope: !3296)
!3305 = !DILocation(line: 2143, column: 53, scope: !3296)
!3306 = !DILocation(line: 2143, column: 55, scope: !3296)
!3307 = !DILocation(line: 2143, column: 57, scope: !3296)
!3308 = !DILocation(line: 2143, column: 71, scope: !3296)
!3309 = !DILocation(line: 2144, column: 9, scope: !3296)
!3310 = !DILocation(line: 2143, column: 13, scope: !3296)
!3311 = !DILocation(line: 2143, column: 12, scope: !3296)
!3312 = !DILocation(line: 2145, column: 32, scope: !3296)
!3313 = !DILocation(line: 2145, column: 31, scope: !3296)
!3314 = !DILocation(line: 2145, column: 15, scope: !3296)
!3315 = !DILocation(line: 2145, column: 7, scope: !3296)
!3316 = !DILocation(line: 2149, column: 41, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2148, column: 9)
!3318 = distinct !DILexicalBlock(scope: !3296, file: !1, line: 2146, column: 7)
!3319 = !DILocation(line: 2149, column: 49, scope: !3317)
!3320 = !DILocation(line: 2149, column: 57, scope: !3317)
!3321 = !DILocation(line: 2149, column: 59, scope: !3317)
!3322 = !DILocation(line: 2149, column: 61, scope: !3317)
!3323 = !DILocation(line: 2149, column: 65, scope: !3317)
!3324 = !DILocation(line: 2149, column: 70, scope: !3317)
!3325 = !DILocation(line: 2149, column: 17, scope: !3317)
!3326 = !DILocation(line: 2149, column: 12, scope: !3317)
!3327 = !DILocation(line: 2149, column: 16, scope: !3317)
!3328 = !DILocation(line: 2150, column: 38, scope: !3317)
!3329 = !DILocation(line: 2150, column: 37, scope: !3317)
!3330 = !DILocation(line: 2150, column: 28, scope: !3317)
!3331 = !DILocation(line: 2150, column: 27, scope: !3317)
!3332 = !DILocation(line: 2150, column: 17, scope: !3317)
!3333 = !DILocation(line: 2150, column: 12, scope: !3317)
!3334 = !DILocation(line: 2150, column: 16, scope: !3317)
!3335 = !DILocation(line: 2151, column: 19, scope: !3317)
!3336 = !DILocation(line: 2151, column: 18, scope: !3317)
!3337 = !DILocation(line: 2151, column: 11, scope: !3317)
!3338 = !DILocation(line: 2155, column: 41, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2154, column: 9)
!3340 = !DILocation(line: 2155, column: 49, scope: !3339)
!3341 = !DILocation(line: 2155, column: 57, scope: !3339)
!3342 = !DILocation(line: 2155, column: 59, scope: !3339)
!3343 = !DILocation(line: 2155, column: 61, scope: !3339)
!3344 = !DILocation(line: 2155, column: 65, scope: !3339)
!3345 = !DILocation(line: 2155, column: 70, scope: !3339)
!3346 = !DILocation(line: 2155, column: 17, scope: !3339)
!3347 = !DILocation(line: 2155, column: 12, scope: !3339)
!3348 = !DILocation(line: 2155, column: 16, scope: !3339)
!3349 = !DILocation(line: 2156, column: 19, scope: !3339)
!3350 = !DILocation(line: 2156, column: 18, scope: !3339)
!3351 = !DILocation(line: 2156, column: 24, scope: !3339)
!3352 = !DILocation(line: 2156, column: 11, scope: !3339)
!3353 = !DILocation(line: 2160, column: 30, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2159, column: 9)
!3355 = !DILocation(line: 2160, column: 69, scope: !3354)
!3356 = !DILocation(line: 2161, column: 13, scope: !3354)
!3357 = !DILocation(line: 2161, column: 21, scope: !3354)
!3358 = !DILocation(line: 2161, column: 23, scope: !3354)
!3359 = !DILocation(line: 2161, column: 25, scope: !3354)
!3360 = !DILocation(line: 2161, column: 29, scope: !3354)
!3361 = !DILocation(line: 2161, column: 34, scope: !3354)
!3362 = !DILocation(line: 2160, column: 45, scope: !3354)
!3363 = !DILocation(line: 2160, column: 17, scope: !3354)
!3364 = !DILocation(line: 2160, column: 12, scope: !3354)
!3365 = !DILocation(line: 2160, column: 16, scope: !3354)
!3366 = !DILocation(line: 2162, column: 19, scope: !3354)
!3367 = !DILocation(line: 2162, column: 18, scope: !3354)
!3368 = !DILocation(line: 2162, column: 11, scope: !3354)
!3369 = !DILocation(line: 2167, column: 41, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2166, column: 9)
!3371 = !DILocation(line: 2167, column: 49, scope: !3370)
!3372 = !DILocation(line: 2167, column: 57, scope: !3370)
!3373 = !DILocation(line: 2167, column: 59, scope: !3370)
!3374 = !DILocation(line: 2167, column: 61, scope: !3370)
!3375 = !DILocation(line: 2167, column: 65, scope: !3370)
!3376 = !DILocation(line: 2167, column: 70, scope: !3370)
!3377 = !DILocation(line: 2167, column: 17, scope: !3370)
!3378 = !DILocation(line: 2167, column: 12, scope: !3370)
!3379 = !DILocation(line: 2167, column: 16, scope: !3370)
!3380 = !DILocation(line: 2168, column: 18, scope: !3370)
!3381 = !DILocation(line: 2168, column: 26, scope: !3370)
!3382 = !DILocation(line: 2168, column: 25, scope: !3370)
!3383 = !DILocation(line: 2168, column: 23, scope: !3370)
!3384 = !DILocation(line: 2168, column: 11, scope: !3370)
!3385 = !DILocation(line: 2172, column: 41, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2171, column: 9)
!3387 = !DILocation(line: 2172, column: 49, scope: !3386)
!3388 = !DILocation(line: 2172, column: 57, scope: !3386)
!3389 = !DILocation(line: 2172, column: 59, scope: !3386)
!3390 = !DILocation(line: 2172, column: 61, scope: !3386)
!3391 = !DILocation(line: 2172, column: 65, scope: !3386)
!3392 = !DILocation(line: 2172, column: 70, scope: !3386)
!3393 = !DILocation(line: 2172, column: 17, scope: !3386)
!3394 = !DILocation(line: 2172, column: 12, scope: !3386)
!3395 = !DILocation(line: 2172, column: 16, scope: !3386)
!3396 = !DILocation(line: 2173, column: 16, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 2173, column: 15)
!3398 = !DILocation(line: 2173, column: 15, scope: !3397)
!3399 = !DILocation(line: 2173, column: 21, scope: !3397)
!3400 = !DILocation(line: 2173, column: 15, scope: !3386)
!3401 = !DILocation(line: 2175, column: 19, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !1, line: 2175, column: 19)
!3403 = distinct !DILexicalBlock(scope: !3397, file: !1, line: 2174, column: 13)
!3404 = !DILocation(line: 2175, column: 30, scope: !3402)
!3405 = !DILocation(line: 2175, column: 39, scope: !3402)
!3406 = !DILocation(line: 2175, column: 19, scope: !3403)
!3407 = !DILocation(line: 2176, column: 45, scope: !3402)
!3408 = !DILocation(line: 2177, column: 53, scope: !3402)
!3409 = !DILocation(line: 2176, column: 24, scope: !3402)
!3410 = !DILocation(line: 2176, column: 17, scope: !3402)
!3411 = !DILocation(line: 2178, column: 15, scope: !3403)
!3412 = !DILocation(line: 2180, column: 18, scope: !3386)
!3413 = !DILocation(line: 2180, column: 26, scope: !3386)
!3414 = !DILocation(line: 2180, column: 25, scope: !3386)
!3415 = !DILocation(line: 2180, column: 23, scope: !3386)
!3416 = !DILocation(line: 2180, column: 11, scope: !3386)
!3417 = !DILocation(line: 2184, column: 41, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2183, column: 9)
!3419 = !DILocation(line: 2184, column: 49, scope: !3418)
!3420 = !DILocation(line: 2184, column: 57, scope: !3418)
!3421 = !DILocation(line: 2184, column: 59, scope: !3418)
!3422 = !DILocation(line: 2184, column: 61, scope: !3418)
!3423 = !DILocation(line: 2184, column: 65, scope: !3418)
!3424 = !DILocation(line: 2184, column: 70, scope: !3418)
!3425 = !DILocation(line: 2184, column: 17, scope: !3418)
!3426 = !DILocation(line: 2184, column: 12, scope: !3418)
!3427 = !DILocation(line: 2184, column: 16, scope: !3418)
!3428 = !DILocation(line: 2185, column: 39, scope: !3418)
!3429 = !DILocation(line: 2185, column: 38, scope: !3418)
!3430 = !DILocation(line: 2185, column: 44, scope: !3418)
!3431 = !DILocation(line: 2185, column: 22, scope: !3418)
!3432 = !DILocation(line: 2185, column: 17, scope: !3418)
!3433 = !DILocation(line: 2185, column: 12, scope: !3418)
!3434 = !DILocation(line: 2185, column: 16, scope: !3418)
!3435 = !DILocation(line: 2186, column: 16, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3418, file: !1, line: 2186, column: 15)
!3437 = !DILocation(line: 2186, column: 15, scope: !3436)
!3438 = !DILocation(line: 2186, column: 21, scope: !3436)
!3439 = !DILocation(line: 2186, column: 15, scope: !3418)
!3440 = !DILocation(line: 2188, column: 43, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 2187, column: 13)
!3442 = !DILocation(line: 2189, column: 51, scope: !3441)
!3443 = !DILocation(line: 2188, column: 22, scope: !3441)
!3444 = !DILocation(line: 2190, column: 15, scope: !3441)
!3445 = !DILocation(line: 2192, column: 32, scope: !3418)
!3446 = !DILocation(line: 2192, column: 48, scope: !3418)
!3447 = !DILocation(line: 2192, column: 47, scope: !3418)
!3448 = !DILocation(line: 2192, column: 18, scope: !3418)
!3449 = !DILocation(line: 2192, column: 11, scope: !3418)
!3450 = !DILocation(line: 2196, column: 41, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2195, column: 9)
!3452 = !DILocation(line: 2196, column: 49, scope: !3451)
!3453 = !DILocation(line: 2196, column: 57, scope: !3451)
!3454 = !DILocation(line: 2196, column: 59, scope: !3451)
!3455 = !DILocation(line: 2196, column: 61, scope: !3451)
!3456 = !DILocation(line: 2196, column: 65, scope: !3451)
!3457 = !DILocation(line: 2196, column: 70, scope: !3451)
!3458 = !DILocation(line: 2196, column: 17, scope: !3451)
!3459 = !DILocation(line: 2196, column: 12, scope: !3451)
!3460 = !DILocation(line: 2196, column: 16, scope: !3451)
!3461 = !DILocation(line: 2197, column: 18, scope: !3451)
!3462 = !DILocation(line: 2197, column: 26, scope: !3451)
!3463 = !DILocation(line: 2197, column: 25, scope: !3451)
!3464 = !DILocation(line: 2197, column: 23, scope: !3451)
!3465 = !DILocation(line: 2197, column: 11, scope: !3451)
!3466 = !DILocation(line: 2201, column: 41, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2200, column: 9)
!3468 = !DILocation(line: 2201, column: 49, scope: !3467)
!3469 = !DILocation(line: 2201, column: 57, scope: !3467)
!3470 = !DILocation(line: 2201, column: 59, scope: !3467)
!3471 = !DILocation(line: 2201, column: 61, scope: !3467)
!3472 = !DILocation(line: 2201, column: 65, scope: !3467)
!3473 = !DILocation(line: 2201, column: 70, scope: !3467)
!3474 = !DILocation(line: 2201, column: 17, scope: !3467)
!3475 = !DILocation(line: 2201, column: 12, scope: !3467)
!3476 = !DILocation(line: 2201, column: 16, scope: !3467)
!3477 = !DILocation(line: 2202, column: 18, scope: !3467)
!3478 = !DILocation(line: 2202, column: 26, scope: !3467)
!3479 = !DILocation(line: 2202, column: 25, scope: !3467)
!3480 = !DILocation(line: 2202, column: 23, scope: !3467)
!3481 = !DILocation(line: 2202, column: 11, scope: !3467)
!3482 = !DILocation(line: 2206, column: 41, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2205, column: 9)
!3484 = !DILocation(line: 2206, column: 49, scope: !3483)
!3485 = !DILocation(line: 2206, column: 57, scope: !3483)
!3486 = !DILocation(line: 2206, column: 59, scope: !3483)
!3487 = !DILocation(line: 2206, column: 61, scope: !3483)
!3488 = !DILocation(line: 2206, column: 65, scope: !3483)
!3489 = !DILocation(line: 2206, column: 70, scope: !3483)
!3490 = !DILocation(line: 2206, column: 17, scope: !3483)
!3491 = !DILocation(line: 2206, column: 16, scope: !3483)
!3492 = !DILocation(line: 2207, column: 37, scope: !3483)
!3493 = !DILocation(line: 2207, column: 42, scope: !3483)
!3494 = !DILocation(line: 2207, column: 27, scope: !3483)
!3495 = !DILocation(line: 2207, column: 61, scope: !3483)
!3496 = !DILocation(line: 2207, column: 66, scope: !3483)
!3497 = !DILocation(line: 2207, column: 51, scope: !3483)
!3498 = !DILocation(line: 2207, column: 48, scope: !3483)
!3499 = !DILocation(line: 2207, column: 17, scope: !3483)
!3500 = !DILocation(line: 2207, column: 12, scope: !3483)
!3501 = !DILocation(line: 2207, column: 16, scope: !3483)
!3502 = !DILocation(line: 2208, column: 19, scope: !3483)
!3503 = !DILocation(line: 2208, column: 18, scope: !3483)
!3504 = !DILocation(line: 2208, column: 11, scope: !3483)
!3505 = !DILocation(line: 2212, column: 41, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2211, column: 9)
!3507 = !DILocation(line: 2212, column: 49, scope: !3506)
!3508 = !DILocation(line: 2212, column: 57, scope: !3506)
!3509 = !DILocation(line: 2212, column: 59, scope: !3506)
!3510 = !DILocation(line: 2212, column: 61, scope: !3506)
!3511 = !DILocation(line: 2212, column: 65, scope: !3506)
!3512 = !DILocation(line: 2212, column: 70, scope: !3506)
!3513 = !DILocation(line: 2212, column: 17, scope: !3506)
!3514 = !DILocation(line: 2212, column: 16, scope: !3506)
!3515 = !DILocation(line: 2213, column: 37, scope: !3506)
!3516 = !DILocation(line: 2213, column: 42, scope: !3506)
!3517 = !DILocation(line: 2213, column: 27, scope: !3506)
!3518 = !DILocation(line: 2213, column: 61, scope: !3506)
!3519 = !DILocation(line: 2213, column: 66, scope: !3506)
!3520 = !DILocation(line: 2213, column: 51, scope: !3506)
!3521 = !DILocation(line: 2213, column: 48, scope: !3506)
!3522 = !DILocation(line: 2213, column: 17, scope: !3506)
!3523 = !DILocation(line: 2213, column: 12, scope: !3506)
!3524 = !DILocation(line: 2213, column: 16, scope: !3506)
!3525 = !DILocation(line: 2214, column: 19, scope: !3506)
!3526 = !DILocation(line: 2214, column: 18, scope: !3506)
!3527 = !DILocation(line: 2214, column: 11, scope: !3506)
!3528 = !DILocation(line: 2218, column: 41, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2217, column: 9)
!3530 = !DILocation(line: 2218, column: 49, scope: !3529)
!3531 = !DILocation(line: 2218, column: 57, scope: !3529)
!3532 = !DILocation(line: 2218, column: 59, scope: !3529)
!3533 = !DILocation(line: 2218, column: 61, scope: !3529)
!3534 = !DILocation(line: 2218, column: 65, scope: !3529)
!3535 = !DILocation(line: 2218, column: 70, scope: !3529)
!3536 = !DILocation(line: 2218, column: 17, scope: !3529)
!3537 = !DILocation(line: 2218, column: 12, scope: !3529)
!3538 = !DILocation(line: 2218, column: 16, scope: !3529)
!3539 = !DILocation(line: 2219, column: 18, scope: !3529)
!3540 = !DILocation(line: 2219, column: 27, scope: !3529)
!3541 = !DILocation(line: 2219, column: 26, scope: !3529)
!3542 = !DILocation(line: 2219, column: 24, scope: !3529)
!3543 = !DILocation(line: 2219, column: 11, scope: !3529)
!3544 = !DILocation(line: 2223, column: 41, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2222, column: 9)
!3546 = !DILocation(line: 2223, column: 49, scope: !3545)
!3547 = !DILocation(line: 2223, column: 57, scope: !3545)
!3548 = !DILocation(line: 2223, column: 59, scope: !3545)
!3549 = !DILocation(line: 2223, column: 61, scope: !3545)
!3550 = !DILocation(line: 2223, column: 65, scope: !3545)
!3551 = !DILocation(line: 2223, column: 70, scope: !3545)
!3552 = !DILocation(line: 2223, column: 17, scope: !3545)
!3553 = !DILocation(line: 2223, column: 12, scope: !3545)
!3554 = !DILocation(line: 2223, column: 16, scope: !3545)
!3555 = !DILocation(line: 2224, column: 18, scope: !3545)
!3556 = !DILocation(line: 2224, column: 28, scope: !3545)
!3557 = !DILocation(line: 2224, column: 27, scope: !3545)
!3558 = !DILocation(line: 2224, column: 24, scope: !3545)
!3559 = !DILocation(line: 2224, column: 11, scope: !3545)
!3560 = !DILocation(line: 2228, column: 41, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2227, column: 9)
!3562 = !DILocation(line: 2228, column: 49, scope: !3561)
!3563 = !DILocation(line: 2228, column: 57, scope: !3561)
!3564 = !DILocation(line: 2228, column: 59, scope: !3561)
!3565 = !DILocation(line: 2228, column: 61, scope: !3561)
!3566 = !DILocation(line: 2228, column: 65, scope: !3561)
!3567 = !DILocation(line: 2228, column: 70, scope: !3561)
!3568 = !DILocation(line: 2228, column: 17, scope: !3561)
!3569 = !DILocation(line: 2228, column: 12, scope: !3561)
!3570 = !DILocation(line: 2228, column: 16, scope: !3561)
!3571 = !DILocation(line: 2229, column: 18, scope: !3561)
!3572 = !DILocation(line: 2229, column: 27, scope: !3561)
!3573 = !DILocation(line: 2229, column: 26, scope: !3561)
!3574 = !DILocation(line: 2229, column: 24, scope: !3561)
!3575 = !DILocation(line: 2229, column: 11, scope: !3561)
!3576 = !DILocation(line: 2233, column: 41, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2232, column: 9)
!3578 = !DILocation(line: 2233, column: 49, scope: !3577)
!3579 = !DILocation(line: 2233, column: 57, scope: !3577)
!3580 = !DILocation(line: 2233, column: 59, scope: !3577)
!3581 = !DILocation(line: 2233, column: 61, scope: !3577)
!3582 = !DILocation(line: 2233, column: 65, scope: !3577)
!3583 = !DILocation(line: 2233, column: 70, scope: !3577)
!3584 = !DILocation(line: 2233, column: 17, scope: !3577)
!3585 = !DILocation(line: 2233, column: 12, scope: !3577)
!3586 = !DILocation(line: 2233, column: 16, scope: !3577)
!3587 = !DILocation(line: 2234, column: 18, scope: !3577)
!3588 = !DILocation(line: 2234, column: 28, scope: !3577)
!3589 = !DILocation(line: 2234, column: 27, scope: !3577)
!3590 = !DILocation(line: 2234, column: 24, scope: !3577)
!3591 = !DILocation(line: 2234, column: 11, scope: !3577)
!3592 = !DILocation(line: 2238, column: 41, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2237, column: 9)
!3594 = !DILocation(line: 2238, column: 49, scope: !3593)
!3595 = !DILocation(line: 2238, column: 57, scope: !3593)
!3596 = !DILocation(line: 2238, column: 59, scope: !3593)
!3597 = !DILocation(line: 2238, column: 61, scope: !3593)
!3598 = !DILocation(line: 2238, column: 65, scope: !3593)
!3599 = !DILocation(line: 2238, column: 70, scope: !3593)
!3600 = !DILocation(line: 2238, column: 17, scope: !3593)
!3601 = !DILocation(line: 2238, column: 12, scope: !3593)
!3602 = !DILocation(line: 2238, column: 16, scope: !3593)
!3603 = !DILocation(line: 2239, column: 23, scope: !3593)
!3604 = !DILocation(line: 2239, column: 31, scope: !3593)
!3605 = !DILocation(line: 2239, column: 30, scope: !3593)
!3606 = !DILocation(line: 2239, column: 28, scope: !3593)
!3607 = !DILocation(line: 2239, column: 18, scope: !3593)
!3608 = !DILocation(line: 2239, column: 38, scope: !3593)
!3609 = !DILocation(line: 2239, column: 11, scope: !3593)
!3610 = !DILocation(line: 2243, column: 41, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2242, column: 9)
!3612 = !DILocation(line: 2243, column: 49, scope: !3611)
!3613 = !DILocation(line: 2243, column: 57, scope: !3611)
!3614 = !DILocation(line: 2243, column: 59, scope: !3611)
!3615 = !DILocation(line: 2243, column: 61, scope: !3611)
!3616 = !DILocation(line: 2243, column: 65, scope: !3611)
!3617 = !DILocation(line: 2243, column: 70, scope: !3611)
!3618 = !DILocation(line: 2243, column: 17, scope: !3611)
!3619 = !DILocation(line: 2243, column: 12, scope: !3611)
!3620 = !DILocation(line: 2243, column: 16, scope: !3611)
!3621 = !DILocation(line: 2244, column: 23, scope: !3611)
!3622 = !DILocation(line: 2244, column: 31, scope: !3611)
!3623 = !DILocation(line: 2244, column: 30, scope: !3611)
!3624 = !DILocation(line: 2244, column: 28, scope: !3611)
!3625 = !DILocation(line: 2244, column: 18, scope: !3611)
!3626 = !DILocation(line: 2244, column: 38, scope: !3611)
!3627 = !DILocation(line: 2244, column: 11, scope: !3611)
!3628 = !DILocation(line: 2248, column: 41, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2247, column: 9)
!3630 = !DILocation(line: 2248, column: 49, scope: !3629)
!3631 = !DILocation(line: 2248, column: 57, scope: !3629)
!3632 = !DILocation(line: 2248, column: 59, scope: !3629)
!3633 = !DILocation(line: 2248, column: 61, scope: !3629)
!3634 = !DILocation(line: 2248, column: 65, scope: !3629)
!3635 = !DILocation(line: 2248, column: 70, scope: !3629)
!3636 = !DILocation(line: 2248, column: 17, scope: !3629)
!3637 = !DILocation(line: 2248, column: 16, scope: !3629)
!3638 = !DILocation(line: 2249, column: 37, scope: !3629)
!3639 = !DILocation(line: 2249, column: 42, scope: !3629)
!3640 = !DILocation(line: 2249, column: 27, scope: !3629)
!3641 = !DILocation(line: 2249, column: 60, scope: !3629)
!3642 = !DILocation(line: 2249, column: 65, scope: !3629)
!3643 = !DILocation(line: 2249, column: 50, scope: !3629)
!3644 = !DILocation(line: 2249, column: 48, scope: !3629)
!3645 = !DILocation(line: 2249, column: 17, scope: !3629)
!3646 = !DILocation(line: 2249, column: 12, scope: !3629)
!3647 = !DILocation(line: 2249, column: 16, scope: !3629)
!3648 = !DILocation(line: 2250, column: 19, scope: !3629)
!3649 = !DILocation(line: 2250, column: 18, scope: !3629)
!3650 = !DILocation(line: 2250, column: 11, scope: !3629)
!3651 = !DILocation(line: 2254, column: 41, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2253, column: 9)
!3653 = !DILocation(line: 2254, column: 49, scope: !3652)
!3654 = !DILocation(line: 2254, column: 57, scope: !3652)
!3655 = !DILocation(line: 2254, column: 59, scope: !3652)
!3656 = !DILocation(line: 2254, column: 61, scope: !3652)
!3657 = !DILocation(line: 2254, column: 65, scope: !3652)
!3658 = !DILocation(line: 2254, column: 70, scope: !3652)
!3659 = !DILocation(line: 2254, column: 17, scope: !3652)
!3660 = !DILocation(line: 2254, column: 16, scope: !3652)
!3661 = !DILocation(line: 2255, column: 37, scope: !3652)
!3662 = !DILocation(line: 2255, column: 42, scope: !3652)
!3663 = !DILocation(line: 2255, column: 27, scope: !3652)
!3664 = !DILocation(line: 2255, column: 60, scope: !3652)
!3665 = !DILocation(line: 2255, column: 65, scope: !3652)
!3666 = !DILocation(line: 2255, column: 50, scope: !3652)
!3667 = !DILocation(line: 2255, column: 48, scope: !3652)
!3668 = !DILocation(line: 2255, column: 17, scope: !3652)
!3669 = !DILocation(line: 2255, column: 12, scope: !3652)
!3670 = !DILocation(line: 2255, column: 16, scope: !3652)
!3671 = !DILocation(line: 2256, column: 19, scope: !3652)
!3672 = !DILocation(line: 2256, column: 18, scope: !3652)
!3673 = !DILocation(line: 2256, column: 11, scope: !3652)
!3674 = !DILocation(line: 2260, column: 41, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2259, column: 9)
!3676 = !DILocation(line: 2260, column: 49, scope: !3675)
!3677 = !DILocation(line: 2260, column: 57, scope: !3675)
!3678 = !DILocation(line: 2260, column: 59, scope: !3675)
!3679 = !DILocation(line: 2260, column: 61, scope: !3675)
!3680 = !DILocation(line: 2260, column: 65, scope: !3675)
!3681 = !DILocation(line: 2260, column: 70, scope: !3675)
!3682 = !DILocation(line: 2260, column: 17, scope: !3675)
!3683 = !DILocation(line: 2260, column: 16, scope: !3675)
!3684 = !DILocation(line: 2261, column: 18, scope: !3675)
!3685 = !DILocation(line: 2261, column: 24, scope: !3675)
!3686 = !DILocation(line: 2261, column: 31, scope: !3675)
!3687 = !DILocation(line: 2261, column: 35, scope: !3675)
!3688 = !DILocation(line: 2261, column: 41, scope: !3675)
!3689 = !DILocation(line: 0, scope: !3675)
!3690 = !DILocation(line: 2261, column: 17, scope: !3675)
!3691 = !DILocation(line: 2261, column: 12, scope: !3675)
!3692 = !DILocation(line: 2261, column: 16, scope: !3675)
!3693 = !DILocation(line: 2262, column: 19, scope: !3675)
!3694 = !DILocation(line: 2262, column: 18, scope: !3675)
!3695 = !DILocation(line: 2262, column: 11, scope: !3675)
!3696 = !DILocation(line: 2266, column: 41, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2265, column: 9)
!3698 = !DILocation(line: 2266, column: 49, scope: !3697)
!3699 = !DILocation(line: 2266, column: 57, scope: !3697)
!3700 = !DILocation(line: 2266, column: 59, scope: !3697)
!3701 = !DILocation(line: 2266, column: 61, scope: !3697)
!3702 = !DILocation(line: 2266, column: 65, scope: !3697)
!3703 = !DILocation(line: 2266, column: 70, scope: !3697)
!3704 = !DILocation(line: 2266, column: 17, scope: !3697)
!3705 = !DILocation(line: 2266, column: 16, scope: !3697)
!3706 = !DILocation(line: 2267, column: 18, scope: !3697)
!3707 = !DILocation(line: 2267, column: 24, scope: !3697)
!3708 = !DILocation(line: 2267, column: 31, scope: !3697)
!3709 = !DILocation(line: 2267, column: 35, scope: !3697)
!3710 = !DILocation(line: 2267, column: 41, scope: !3697)
!3711 = !DILocation(line: 2267, column: 17, scope: !3697)
!3712 = !DILocation(line: 2267, column: 12, scope: !3697)
!3713 = !DILocation(line: 2267, column: 16, scope: !3697)
!3714 = !DILocation(line: 2268, column: 19, scope: !3697)
!3715 = !DILocation(line: 2268, column: 18, scope: !3697)
!3716 = !DILocation(line: 2268, column: 11, scope: !3697)
!3717 = !DILocalVariable(name: "gamma", scope: !3718, file: !1, line: 2273, type: !856)
!3718 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2271, column: 9)
!3719 = !DILocation(line: 2273, column: 13, scope: !3718)
!3720 = !DILocation(line: 2275, column: 35, scope: !3718)
!3721 = !DILocation(line: 2275, column: 49, scope: !3718)
!3722 = !DILocation(line: 2275, column: 18, scope: !3718)
!3723 = !DILocation(line: 2276, column: 13, scope: !3718)
!3724 = !DILocation(line: 2276, column: 12, scope: !3718)
!3725 = !DILocation(line: 2277, column: 13, scope: !3718)
!3726 = !DILocation(line: 2277, column: 12, scope: !3718)
!3727 = !DILocation(line: 2278, column: 15, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3718, file: !1, line: 2278, column: 15)
!3729 = !DILocation(line: 2278, column: 17, scope: !3728)
!3730 = !DILocation(line: 2278, column: 15, scope: !3718)
!3731 = !DILocation(line: 2280, column: 43, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3728, file: !1, line: 2279, column: 13)
!3733 = !DILocation(line: 2281, column: 62, scope: !3732)
!3734 = !DILocation(line: 2280, column: 22, scope: !3732)
!3735 = !DILocation(line: 2282, column: 15, scope: !3732)
!3736 = !DILocation(line: 2284, column: 29, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3718, file: !1, line: 2284, column: 15)
!3738 = !DILocation(line: 2284, column: 15, scope: !3737)
!3739 = !DILocation(line: 2284, column: 36, scope: !3737)
!3740 = !DILocation(line: 2284, column: 15, scope: !3718)
!3741 = !DILocation(line: 2285, column: 43, scope: !3737)
!3742 = !DILocation(line: 2285, column: 51, scope: !3737)
!3743 = !DILocation(line: 2285, column: 59, scope: !3737)
!3744 = !DILocation(line: 2285, column: 61, scope: !3737)
!3745 = !DILocation(line: 2285, column: 63, scope: !3737)
!3746 = !DILocation(line: 2285, column: 65, scope: !3737)
!3747 = !DILocation(line: 2285, column: 70, scope: !3737)
!3748 = !DILocation(line: 2285, column: 19, scope: !3737)
!3749 = !DILocation(line: 2285, column: 18, scope: !3737)
!3750 = !DILocation(line: 2285, column: 13, scope: !3737)
!3751 = !DILocation(line: 2287, column: 43, scope: !3737)
!3752 = !DILocation(line: 2287, column: 51, scope: !3737)
!3753 = !DILocation(line: 2287, column: 59, scope: !3737)
!3754 = !DILocation(line: 2287, column: 61, scope: !3737)
!3755 = !DILocation(line: 2287, column: 63, scope: !3737)
!3756 = !DILocation(line: 2287, column: 65, scope: !3737)
!3757 = !DILocation(line: 2287, column: 70, scope: !3737)
!3758 = !DILocation(line: 2287, column: 19, scope: !3737)
!3759 = !DILocation(line: 2287, column: 18, scope: !3737)
!3760 = !DILocation(line: 2288, column: 18, scope: !3718)
!3761 = !DILocation(line: 2288, column: 11, scope: !3718)
!3762 = !DILocalVariable(name: "numeric", scope: !3763, file: !1, line: 2293, type: !967)
!3763 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2291, column: 9)
!3764 = !DILocation(line: 2293, column: 13, scope: !3763)
!3765 = !DILocation(line: 2295, column: 13, scope: !3763)
!3766 = !DILocation(line: 2295, column: 12, scope: !3763)
!3767 = !DILocation(line: 2296, column: 11, scope: !3763)
!3768 = !DILocation(line: 2296, column: 18, scope: !3763)
!3769 = !DILocation(line: 2296, column: 54, scope: !3763)
!3770 = !DILocation(line: 2297, column: 14, scope: !3763)
!3771 = distinct !{!3771, !3767, !3770}
!3772 = !DILocation(line: 2298, column: 16, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3763, file: !1, line: 2298, column: 15)
!3774 = !DILocation(line: 2298, column: 15, scope: !3773)
!3775 = !DILocation(line: 2298, column: 18, scope: !3773)
!3776 = !DILocation(line: 2298, column: 15, scope: !3763)
!3777 = !DILocation(line: 2300, column: 43, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3773, file: !1, line: 2299, column: 13)
!3779 = !DILocation(line: 2301, column: 62, scope: !3778)
!3780 = !DILocation(line: 2300, column: 22, scope: !3778)
!3781 = !DILocation(line: 2302, column: 15, scope: !3778)
!3782 = !DILocation(line: 2304, column: 32, scope: !3763)
!3783 = !DILocation(line: 2304, column: 11, scope: !3763)
!3784 = !DILocation(line: 2305, column: 41, scope: !3763)
!3785 = !DILocation(line: 2305, column: 49, scope: !3763)
!3786 = !DILocation(line: 2305, column: 57, scope: !3763)
!3787 = !DILocation(line: 2305, column: 59, scope: !3763)
!3788 = !DILocation(line: 2305, column: 61, scope: !3763)
!3789 = !DILocation(line: 2305, column: 65, scope: !3763)
!3790 = !DILocation(line: 2305, column: 70, scope: !3763)
!3791 = !DILocation(line: 2305, column: 17, scope: !3763)
!3792 = !DILocation(line: 2305, column: 12, scope: !3763)
!3793 = !DILocation(line: 2305, column: 16, scope: !3763)
!3794 = !DILocation(line: 2306, column: 37, scope: !3763)
!3795 = !DILocation(line: 2307, column: 14, scope: !3763)
!3796 = !DILocation(line: 2307, column: 13, scope: !3763)
!3797 = !DILocation(line: 2306, column: 18, scope: !3763)
!3798 = !DILocation(line: 2308, column: 42, scope: !3763)
!3799 = !DILocation(line: 2308, column: 51, scope: !3763)
!3800 = !DILocation(line: 2308, column: 59, scope: !3763)
!3801 = !DILocation(line: 2308, column: 18, scope: !3763)
!3802 = !DILocation(line: 2309, column: 38, scope: !3763)
!3803 = !DILocation(line: 2309, column: 47, scope: !3763)
!3804 = !DILocation(line: 2310, column: 13, scope: !3763)
!3805 = !DILocation(line: 2309, column: 55, scope: !3763)
!3806 = !DILocation(line: 2310, column: 43, scope: !3763)
!3807 = !DILocation(line: 2310, column: 28, scope: !3763)
!3808 = !DILocation(line: 2309, column: 18, scope: !3763)
!3809 = !DILocation(line: 2311, column: 19, scope: !3763)
!3810 = !DILocation(line: 2311, column: 18, scope: !3763)
!3811 = !DILocation(line: 2311, column: 11, scope: !3763)
!3812 = !DILocation(line: 2315, column: 41, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2314, column: 9)
!3814 = !DILocation(line: 2315, column: 49, scope: !3813)
!3815 = !DILocation(line: 2315, column: 57, scope: !3813)
!3816 = !DILocation(line: 2315, column: 59, scope: !3813)
!3817 = !DILocation(line: 2315, column: 61, scope: !3813)
!3818 = !DILocation(line: 2315, column: 65, scope: !3813)
!3819 = !DILocation(line: 2315, column: 70, scope: !3813)
!3820 = !DILocation(line: 2315, column: 17, scope: !3813)
!3821 = !DILocation(line: 2315, column: 12, scope: !3813)
!3822 = !DILocation(line: 2315, column: 16, scope: !3813)
!3823 = !DILocation(line: 2316, column: 18, scope: !3813)
!3824 = !DILocation(line: 2316, column: 11, scope: !3813)
!3825 = !DILocation(line: 2320, column: 41, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2319, column: 9)
!3827 = !DILocation(line: 2320, column: 49, scope: !3826)
!3828 = !DILocation(line: 2320, column: 57, scope: !3826)
!3829 = !DILocation(line: 2320, column: 59, scope: !3826)
!3830 = !DILocation(line: 2320, column: 61, scope: !3826)
!3831 = !DILocation(line: 2320, column: 65, scope: !3826)
!3832 = !DILocation(line: 2320, column: 70, scope: !3826)
!3833 = !DILocation(line: 2320, column: 17, scope: !3826)
!3834 = !DILocation(line: 2320, column: 12, scope: !3826)
!3835 = !DILocation(line: 2320, column: 16, scope: !3826)
!3836 = !DILocation(line: 2321, column: 19, scope: !3826)
!3837 = !DILocation(line: 2321, column: 18, scope: !3826)
!3838 = !DILocation(line: 2321, column: 11, scope: !3826)
!3839 = !DILocation(line: 2325, column: 17, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3318, file: !1, line: 2324, column: 9)
!3841 = !DILocation(line: 2325, column: 47, scope: !3840)
!3842 = !DILocation(line: 2325, column: 55, scope: !3840)
!3843 = !DILocation(line: 2325, column: 63, scope: !3840)
!3844 = !DILocation(line: 2325, column: 65, scope: !3840)
!3845 = !DILocation(line: 2325, column: 67, scope: !3840)
!3846 = !DILocation(line: 2325, column: 69, scope: !3840)
!3847 = !DILocation(line: 2326, column: 13, scope: !3840)
!3848 = !DILocation(line: 2325, column: 23, scope: !3840)
!3849 = !DILocation(line: 2325, column: 22, scope: !3840)
!3850 = !DILocation(line: 2325, column: 16, scope: !3840)
!3851 = !DILocation(line: 2327, column: 18, scope: !3840)
!3852 = !DILocation(line: 2327, column: 11, scope: !3840)
!3853 = !DILocation(line: 2331, column: 25, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2331, column: 7)
!3855 = !DILocation(line: 2331, column: 24, scope: !3854)
!3856 = !DILocation(line: 2331, column: 18, scope: !3854)
!3857 = !DILocation(line: 2331, column: 7, scope: !3854)
!3858 = !DILocation(line: 2331, column: 37, scope: !3854)
!3859 = !DILocation(line: 2331, column: 7, scope: !3239)
!3860 = !DILocation(line: 2333, column: 31, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3854, file: !1, line: 2332, column: 5)
!3862 = !DILocation(line: 2333, column: 45, scope: !3861)
!3863 = !DILocation(line: 2333, column: 55, scope: !3861)
!3864 = !DILocation(line: 2333, column: 14, scope: !3861)
!3865 = !DILocation(line: 2334, column: 28, scope: !3861)
!3866 = !DILocation(line: 2334, column: 21, scope: !3861)
!3867 = !DILocation(line: 2334, column: 42, scope: !3861)
!3868 = !DILocation(line: 2334, column: 7, scope: !3861)
!3869 = !DILocation(line: 2334, column: 45, scope: !3861)
!3870 = !DILocation(line: 2335, column: 37, scope: !3861)
!3871 = !DILocation(line: 2335, column: 45, scope: !3861)
!3872 = !DILocation(line: 2335, column: 53, scope: !3861)
!3873 = !DILocation(line: 2335, column: 55, scope: !3861)
!3874 = !DILocation(line: 2335, column: 57, scope: !3861)
!3875 = !DILocation(line: 2335, column: 71, scope: !3861)
!3876 = !DILocation(line: 2336, column: 9, scope: !3861)
!3877 = !DILocation(line: 2335, column: 13, scope: !3861)
!3878 = !DILocation(line: 2335, column: 12, scope: !3861)
!3879 = !DILocation(line: 2337, column: 14, scope: !3861)
!3880 = !DILocation(line: 2337, column: 7, scope: !3861)
!3881 = !DILocation(line: 2339, column: 12, scope: !3239)
!3882 = !DILocation(line: 2339, column: 11, scope: !3239)
!3883 = !DILocation(line: 2339, column: 3, scope: !3239)
!3884 = !DILocation(line: 2343, column: 37, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2342, column: 5)
!3886 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2340, column: 3)
!3887 = !DILocation(line: 2343, column: 45, scope: !3885)
!3888 = !DILocation(line: 2343, column: 53, scope: !3885)
!3889 = !DILocation(line: 2343, column: 55, scope: !3885)
!3890 = !DILocation(line: 2343, column: 57, scope: !3885)
!3891 = !DILocation(line: 2343, column: 67, scope: !3885)
!3892 = !DILocation(line: 2343, column: 70, scope: !3885)
!3893 = !DILocation(line: 2344, column: 9, scope: !3885)
!3894 = !DILocation(line: 2343, column: 13, scope: !3885)
!3895 = !DILocation(line: 2343, column: 12, scope: !3885)
!3896 = !DILocation(line: 2345, column: 18, scope: !3885)
!3897 = !DILocation(line: 2345, column: 17, scope: !3885)
!3898 = !DILocation(line: 2345, column: 7, scope: !3885)
!3899 = !DILocation(line: 2349, column: 37, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2348, column: 5)
!3901 = !DILocation(line: 2349, column: 45, scope: !3900)
!3902 = !DILocation(line: 2349, column: 53, scope: !3900)
!3903 = !DILocation(line: 2349, column: 55, scope: !3900)
!3904 = !DILocation(line: 2349, column: 57, scope: !3900)
!3905 = !DILocation(line: 2349, column: 67, scope: !3900)
!3906 = !DILocation(line: 2349, column: 70, scope: !3900)
!3907 = !DILocation(line: 2350, column: 9, scope: !3900)
!3908 = !DILocation(line: 2349, column: 13, scope: !3900)
!3909 = !DILocation(line: 2349, column: 12, scope: !3900)
!3910 = !DILocation(line: 2351, column: 19, scope: !3900)
!3911 = !DILocation(line: 2351, column: 18, scope: !3900)
!3912 = !DILocation(line: 2351, column: 7, scope: !3900)
!3913 = !DILocation(line: 2355, column: 37, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2354, column: 5)
!3915 = !DILocation(line: 2355, column: 45, scope: !3914)
!3916 = !DILocation(line: 2355, column: 53, scope: !3914)
!3917 = !DILocation(line: 2355, column: 55, scope: !3914)
!3918 = !DILocation(line: 2355, column: 57, scope: !3914)
!3919 = !DILocation(line: 2355, column: 67, scope: !3914)
!3920 = !DILocation(line: 2355, column: 70, scope: !3914)
!3921 = !DILocation(line: 2356, column: 9, scope: !3914)
!3922 = !DILocation(line: 2355, column: 13, scope: !3914)
!3923 = !DILocation(line: 2355, column: 12, scope: !3914)
!3924 = !DILocation(line: 2357, column: 35, scope: !3914)
!3925 = !DILocation(line: 2357, column: 40, scope: !3914)
!3926 = !DILocation(line: 2357, column: 25, scope: !3914)
!3927 = !DILocation(line: 2357, column: 24, scope: !3914)
!3928 = !DILocation(line: 2357, column: 14, scope: !3914)
!3929 = !DILocation(line: 2357, column: 7, scope: !3914)
!3930 = !DILocation(line: 2362, column: 26, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2362, column: 11)
!3932 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2361, column: 5)
!3933 = !DILocation(line: 2362, column: 11, scope: !3931)
!3934 = !DILocation(line: 2362, column: 46, scope: !3931)
!3935 = !DILocation(line: 2362, column: 11, scope: !3932)
!3936 = !DILocation(line: 2364, column: 41, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3931, file: !1, line: 2363, column: 9)
!3938 = !DILocation(line: 2364, column: 49, scope: !3937)
!3939 = !DILocation(line: 2364, column: 57, scope: !3937)
!3940 = !DILocation(line: 2364, column: 59, scope: !3937)
!3941 = !DILocation(line: 2364, column: 61, scope: !3937)
!3942 = !DILocation(line: 2364, column: 71, scope: !3937)
!3943 = !DILocation(line: 2364, column: 74, scope: !3937)
!3944 = !DILocation(line: 2365, column: 13, scope: !3937)
!3945 = !DILocation(line: 2364, column: 17, scope: !3937)
!3946 = !DILocation(line: 2364, column: 16, scope: !3937)
!3947 = !DILocation(line: 2366, column: 32, scope: !3937)
!3948 = !DILocation(line: 2366, column: 18, scope: !3937)
!3949 = !DILocation(line: 2366, column: 11, scope: !3937)
!3950 = !DILocation(line: 2369, column: 26, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2369, column: 11)
!3952 = !DILocation(line: 2369, column: 11, scope: !3951)
!3953 = !DILocation(line: 2369, column: 48, scope: !3951)
!3954 = !DILocation(line: 2369, column: 11, scope: !3932)
!3955 = !DILocation(line: 2371, column: 41, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3951, file: !1, line: 2370, column: 9)
!3957 = !DILocation(line: 2371, column: 49, scope: !3956)
!3958 = !DILocation(line: 2371, column: 57, scope: !3956)
!3959 = !DILocation(line: 2371, column: 59, scope: !3956)
!3960 = !DILocation(line: 2371, column: 61, scope: !3956)
!3961 = !DILocation(line: 2371, column: 71, scope: !3956)
!3962 = !DILocation(line: 2371, column: 74, scope: !3956)
!3963 = !DILocation(line: 2372, column: 13, scope: !3956)
!3964 = !DILocation(line: 2371, column: 17, scope: !3956)
!3965 = !DILocation(line: 2371, column: 16, scope: !3956)
!3966 = !DILocation(line: 2373, column: 33, scope: !3956)
!3967 = !DILocation(line: 2373, column: 18, scope: !3956)
!3968 = !DILocation(line: 2373, column: 11, scope: !3956)
!3969 = !DILocation(line: 2376, column: 26, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2376, column: 11)
!3971 = !DILocation(line: 2376, column: 11, scope: !3970)
!3972 = !DILocation(line: 2376, column: 47, scope: !3970)
!3973 = !DILocation(line: 2376, column: 11, scope: !3932)
!3974 = !DILocation(line: 2378, column: 41, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3970, file: !1, line: 2377, column: 9)
!3976 = !DILocation(line: 2378, column: 49, scope: !3975)
!3977 = !DILocation(line: 2378, column: 57, scope: !3975)
!3978 = !DILocation(line: 2378, column: 59, scope: !3975)
!3979 = !DILocation(line: 2378, column: 61, scope: !3975)
!3980 = !DILocation(line: 2378, column: 71, scope: !3975)
!3981 = !DILocation(line: 2378, column: 74, scope: !3975)
!3982 = !DILocation(line: 2379, column: 13, scope: !3975)
!3983 = !DILocation(line: 2378, column: 17, scope: !3975)
!3984 = !DILocation(line: 2378, column: 16, scope: !3975)
!3985 = !DILocation(line: 2380, column: 32, scope: !3975)
!3986 = !DILocation(line: 2380, column: 18, scope: !3975)
!3987 = !DILocation(line: 2380, column: 11, scope: !3975)
!3988 = !DILocation(line: 2383, column: 26, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2383, column: 11)
!3990 = !DILocation(line: 2383, column: 11, scope: !3989)
!3991 = !DILocation(line: 2383, column: 47, scope: !3989)
!3992 = !DILocation(line: 2383, column: 11, scope: !3932)
!3993 = !DILocation(line: 2385, column: 41, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3989, file: !1, line: 2384, column: 9)
!3995 = !DILocation(line: 2385, column: 49, scope: !3994)
!3996 = !DILocation(line: 2385, column: 57, scope: !3994)
!3997 = !DILocation(line: 2385, column: 59, scope: !3994)
!3998 = !DILocation(line: 2385, column: 61, scope: !3994)
!3999 = !DILocation(line: 2385, column: 71, scope: !3994)
!4000 = !DILocation(line: 2385, column: 74, scope: !3994)
!4001 = !DILocation(line: 2386, column: 13, scope: !3994)
!4002 = !DILocation(line: 2385, column: 17, scope: !3994)
!4003 = !DILocation(line: 2385, column: 16, scope: !3994)
!4004 = !DILocation(line: 2387, column: 15, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3994, file: !1, line: 2387, column: 15)
!4006 = !DILocation(line: 2387, column: 21, scope: !4005)
!4007 = !DILocation(line: 2387, column: 15, scope: !3994)
!4008 = !DILocation(line: 2388, column: 13, scope: !4005)
!4009 = !DILocation(line: 2389, column: 43, scope: !3994)
!4010 = !DILocation(line: 2389, column: 42, scope: !3994)
!4011 = !DILocation(line: 2389, column: 21, scope: !3994)
!4012 = !DILocation(line: 2389, column: 20, scope: !3994)
!4013 = !DILocation(line: 2389, column: 61, scope: !3994)
!4014 = !DILocation(line: 2389, column: 60, scope: !3994)
!4015 = !DILocation(line: 2389, column: 50, scope: !3994)
!4016 = !DILocation(line: 2389, column: 16, scope: !3994)
!4017 = !DILocation(line: 2390, column: 18, scope: !3994)
!4018 = !DILocation(line: 2390, column: 24, scope: !3994)
!4019 = !DILocation(line: 2390, column: 23, scope: !3994)
!4020 = !DILocation(line: 2390, column: 11, scope: !3994)
!4021 = !DILocation(line: 2394, column: 26, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2394, column: 11)
!4023 = !DILocation(line: 2394, column: 11, scope: !4022)
!4024 = !DILocation(line: 2394, column: 48, scope: !4022)
!4025 = !DILocation(line: 2394, column: 11, scope: !3932)
!4026 = !DILocation(line: 2396, column: 41, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4022, file: !1, line: 2395, column: 9)
!4028 = !DILocation(line: 2396, column: 49, scope: !4027)
!4029 = !DILocation(line: 2396, column: 57, scope: !4027)
!4030 = !DILocation(line: 2396, column: 59, scope: !4027)
!4031 = !DILocation(line: 2396, column: 61, scope: !4027)
!4032 = !DILocation(line: 2396, column: 71, scope: !4027)
!4033 = !DILocation(line: 2396, column: 74, scope: !4027)
!4034 = !DILocation(line: 2397, column: 13, scope: !4027)
!4035 = !DILocation(line: 2396, column: 17, scope: !4027)
!4036 = !DILocation(line: 2396, column: 16, scope: !4027)
!4037 = !DILocation(line: 2398, column: 33, scope: !4027)
!4038 = !DILocation(line: 2398, column: 18, scope: !4027)
!4039 = !DILocation(line: 2398, column: 11, scope: !4027)
!4040 = !DILocation(line: 2401, column: 26, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2401, column: 11)
!4042 = !DILocation(line: 2401, column: 11, scope: !4041)
!4043 = !DILocation(line: 2401, column: 47, scope: !4041)
!4044 = !DILocation(line: 2401, column: 11, scope: !3932)
!4045 = !DILocation(line: 2403, column: 41, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4041, file: !1, line: 2402, column: 9)
!4047 = !DILocation(line: 2403, column: 49, scope: !4046)
!4048 = !DILocation(line: 2403, column: 57, scope: !4046)
!4049 = !DILocation(line: 2403, column: 59, scope: !4046)
!4050 = !DILocation(line: 2403, column: 61, scope: !4046)
!4051 = !DILocation(line: 2403, column: 71, scope: !4046)
!4052 = !DILocation(line: 2403, column: 74, scope: !4046)
!4053 = !DILocation(line: 2404, column: 13, scope: !4046)
!4054 = !DILocation(line: 2403, column: 17, scope: !4046)
!4055 = !DILocation(line: 2403, column: 16, scope: !4046)
!4056 = !DILocation(line: 2405, column: 32, scope: !4046)
!4057 = !DILocation(line: 2405, column: 18, scope: !4046)
!4058 = !DILocation(line: 2405, column: 11, scope: !4046)
!4059 = !DILocation(line: 2407, column: 26, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2407, column: 11)
!4061 = !DILocation(line: 2407, column: 11, scope: !4060)
!4062 = !DILocation(line: 2407, column: 46, scope: !4060)
!4063 = !DILocation(line: 2407, column: 11, scope: !3932)
!4064 = !DILocation(line: 2409, column: 41, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !1, line: 2408, column: 9)
!4066 = !DILocation(line: 2409, column: 49, scope: !4065)
!4067 = !DILocation(line: 2409, column: 57, scope: !4065)
!4068 = !DILocation(line: 2409, column: 59, scope: !4065)
!4069 = !DILocation(line: 2409, column: 61, scope: !4065)
!4070 = !DILocation(line: 2409, column: 71, scope: !4065)
!4071 = !DILocation(line: 2409, column: 74, scope: !4065)
!4072 = !DILocation(line: 2410, column: 13, scope: !4065)
!4073 = !DILocation(line: 2409, column: 17, scope: !4065)
!4074 = !DILocation(line: 2409, column: 16, scope: !4065)
!4075 = !DILocation(line: 2411, column: 29, scope: !4065)
!4076 = !DILocation(line: 2411, column: 19, scope: !4065)
!4077 = !DILocation(line: 2411, column: 36, scope: !4065)
!4078 = !DILocation(line: 2411, column: 18, scope: !4065)
!4079 = !DILocation(line: 2411, column: 11, scope: !4065)
!4080 = !DILocation(line: 2413, column: 26, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2413, column: 11)
!4082 = !DILocation(line: 2413, column: 11, scope: !4081)
!4083 = !DILocation(line: 2413, column: 48, scope: !4081)
!4084 = !DILocation(line: 2413, column: 11, scope: !3932)
!4085 = !DILocation(line: 2415, column: 41, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !1, line: 2414, column: 9)
!4087 = !DILocation(line: 2415, column: 49, scope: !4086)
!4088 = !DILocation(line: 2415, column: 57, scope: !4086)
!4089 = !DILocation(line: 2415, column: 59, scope: !4086)
!4090 = !DILocation(line: 2415, column: 61, scope: !4086)
!4091 = !DILocation(line: 2415, column: 71, scope: !4086)
!4092 = !DILocation(line: 2415, column: 74, scope: !4086)
!4093 = !DILocation(line: 2416, column: 13, scope: !4086)
!4094 = !DILocation(line: 2415, column: 17, scope: !4086)
!4095 = !DILocation(line: 2415, column: 16, scope: !4086)
!4096 = !DILocation(line: 2417, column: 33, scope: !4086)
!4097 = !DILocation(line: 2417, column: 49, scope: !4086)
!4098 = !DILocation(line: 2417, column: 48, scope: !4086)
!4099 = !DILocation(line: 2417, column: 18, scope: !4086)
!4100 = !DILocation(line: 2417, column: 11, scope: !4086)
!4101 = !DILocation(line: 2420, column: 26, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2420, column: 11)
!4103 = !DILocation(line: 2420, column: 11, scope: !4102)
!4104 = !DILocation(line: 2420, column: 48, scope: !4102)
!4105 = !DILocation(line: 2420, column: 11, scope: !3932)
!4106 = !DILocation(line: 2422, column: 41, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !1, line: 2421, column: 9)
!4108 = !DILocation(line: 2422, column: 49, scope: !4107)
!4109 = !DILocation(line: 2422, column: 57, scope: !4107)
!4110 = !DILocation(line: 2422, column: 59, scope: !4107)
!4111 = !DILocation(line: 2422, column: 61, scope: !4107)
!4112 = !DILocation(line: 2422, column: 71, scope: !4107)
!4113 = !DILocation(line: 2422, column: 74, scope: !4107)
!4114 = !DILocation(line: 2423, column: 13, scope: !4107)
!4115 = !DILocation(line: 2422, column: 17, scope: !4107)
!4116 = !DILocation(line: 2422, column: 16, scope: !4107)
!4117 = !DILocation(line: 2424, column: 33, scope: !4107)
!4118 = !DILocation(line: 2424, column: 18, scope: !4107)
!4119 = !DILocation(line: 2424, column: 11, scope: !4107)
!4120 = !DILocation(line: 2427, column: 26, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2427, column: 11)
!4122 = !DILocation(line: 2427, column: 11, scope: !4121)
!4123 = !DILocation(line: 2427, column: 47, scope: !4121)
!4124 = !DILocation(line: 2427, column: 11, scope: !3932)
!4125 = !DILocation(line: 2429, column: 41, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4121, file: !1, line: 2428, column: 9)
!4127 = !DILocation(line: 2429, column: 49, scope: !4126)
!4128 = !DILocation(line: 2429, column: 57, scope: !4126)
!4129 = !DILocation(line: 2429, column: 59, scope: !4126)
!4130 = !DILocation(line: 2429, column: 61, scope: !4126)
!4131 = !DILocation(line: 2429, column: 71, scope: !4126)
!4132 = !DILocation(line: 2429, column: 74, scope: !4126)
!4133 = !DILocation(line: 2430, column: 13, scope: !4126)
!4134 = !DILocation(line: 2429, column: 17, scope: !4126)
!4135 = !DILocation(line: 2429, column: 16, scope: !4126)
!4136 = !DILocation(line: 2431, column: 32, scope: !4126)
!4137 = !DILocation(line: 2431, column: 18, scope: !4126)
!4138 = !DILocation(line: 2431, column: 11, scope: !4126)
!4139 = !DILocation(line: 2433, column: 25, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2433, column: 11)
!4141 = !DILocation(line: 2433, column: 11, scope: !4140)
!4142 = !DILocation(line: 2433, column: 41, scope: !4140)
!4143 = !DILocation(line: 2433, column: 11, scope: !3932)
!4144 = !DILocation(line: 2434, column: 28, scope: !4140)
!4145 = !DILocation(line: 2434, column: 36, scope: !4140)
!4146 = !DILocation(line: 2434, column: 44, scope: !4140)
!4147 = !DILocation(line: 2434, column: 46, scope: !4140)
!4148 = !DILocation(line: 2434, column: 48, scope: !4140)
!4149 = !DILocation(line: 2434, column: 59, scope: !4140)
!4150 = !DILocation(line: 2434, column: 16, scope: !4140)
!4151 = !DILocation(line: 2434, column: 9, scope: !4140)
!4152 = !DILocation(line: 2435, column: 7, scope: !3932)
!4153 = !DILocation(line: 2440, column: 25, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 2440, column: 11)
!4155 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2439, column: 5)
!4156 = !DILocation(line: 2440, column: 11, scope: !4154)
!4157 = !DILocation(line: 2440, column: 41, scope: !4154)
!4158 = !DILocation(line: 2440, column: 11, scope: !4155)
!4159 = !DILocation(line: 2441, column: 28, scope: !4154)
!4160 = !DILocation(line: 2441, column: 36, scope: !4154)
!4161 = !DILocation(line: 2441, column: 44, scope: !4154)
!4162 = !DILocation(line: 2441, column: 46, scope: !4154)
!4163 = !DILocation(line: 2441, column: 48, scope: !4154)
!4164 = !DILocation(line: 2441, column: 59, scope: !4154)
!4165 = !DILocation(line: 2441, column: 16, scope: !4154)
!4166 = !DILocation(line: 2441, column: 9, scope: !4154)
!4167 = !DILocation(line: 2442, column: 7, scope: !4155)
!4168 = !DILocation(line: 2447, column: 26, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2447, column: 11)
!4170 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2446, column: 5)
!4171 = !DILocation(line: 2447, column: 11, scope: !4169)
!4172 = !DILocation(line: 2447, column: 47, scope: !4169)
!4173 = !DILocation(line: 2447, column: 11, scope: !4170)
!4174 = !DILocation(line: 2449, column: 41, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 2448, column: 9)
!4176 = !DILocation(line: 2449, column: 49, scope: !4175)
!4177 = !DILocation(line: 2449, column: 57, scope: !4175)
!4178 = !DILocation(line: 2449, column: 59, scope: !4175)
!4179 = !DILocation(line: 2449, column: 61, scope: !4175)
!4180 = !DILocation(line: 2449, column: 71, scope: !4175)
!4181 = !DILocation(line: 2449, column: 74, scope: !4175)
!4182 = !DILocation(line: 2450, column: 13, scope: !4175)
!4183 = !DILocation(line: 2449, column: 17, scope: !4175)
!4184 = !DILocation(line: 2449, column: 16, scope: !4175)
!4185 = !DILocation(line: 2451, column: 32, scope: !4175)
!4186 = !DILocation(line: 2451, column: 18, scope: !4175)
!4187 = !DILocation(line: 2451, column: 11, scope: !4175)
!4188 = !DILocation(line: 2453, column: 26, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2453, column: 11)
!4190 = !DILocation(line: 2453, column: 11, scope: !4189)
!4191 = !DILocation(line: 2453, column: 47, scope: !4189)
!4192 = !DILocation(line: 2453, column: 11, scope: !4170)
!4193 = !DILocation(line: 2455, column: 41, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !1, line: 2454, column: 9)
!4195 = !DILocation(line: 2455, column: 49, scope: !4194)
!4196 = !DILocation(line: 2455, column: 57, scope: !4194)
!4197 = !DILocation(line: 2455, column: 59, scope: !4194)
!4198 = !DILocation(line: 2455, column: 61, scope: !4194)
!4199 = !DILocation(line: 2455, column: 71, scope: !4194)
!4200 = !DILocation(line: 2455, column: 74, scope: !4194)
!4201 = !DILocation(line: 2456, column: 13, scope: !4194)
!4202 = !DILocation(line: 2455, column: 17, scope: !4194)
!4203 = !DILocation(line: 2455, column: 16, scope: !4194)
!4204 = !DILocation(line: 2457, column: 32, scope: !4194)
!4205 = !DILocation(line: 2457, column: 18, scope: !4194)
!4206 = !DILocation(line: 2457, column: 11, scope: !4194)
!4207 = !DILocation(line: 2459, column: 26, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2459, column: 11)
!4209 = !DILocation(line: 2459, column: 11, scope: !4208)
!4210 = !DILocation(line: 2459, column: 46, scope: !4208)
!4211 = !DILocation(line: 2459, column: 11, scope: !4170)
!4212 = !DILocation(line: 2461, column: 41, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4208, file: !1, line: 2460, column: 9)
!4214 = !DILocation(line: 2461, column: 49, scope: !4213)
!4215 = !DILocation(line: 2461, column: 57, scope: !4213)
!4216 = !DILocation(line: 2461, column: 59, scope: !4213)
!4217 = !DILocation(line: 2461, column: 61, scope: !4213)
!4218 = !DILocation(line: 2461, column: 71, scope: !4213)
!4219 = !DILocation(line: 2461, column: 74, scope: !4213)
!4220 = !DILocation(line: 2462, column: 13, scope: !4213)
!4221 = !DILocation(line: 2461, column: 17, scope: !4213)
!4222 = !DILocation(line: 2461, column: 16, scope: !4213)
!4223 = !DILocation(line: 2463, column: 31, scope: !4213)
!4224 = !DILocation(line: 2463, column: 18, scope: !4213)
!4225 = !DILocation(line: 2463, column: 11, scope: !4213)
!4226 = !DILocation(line: 2465, column: 25, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2465, column: 11)
!4228 = !DILocation(line: 2465, column: 11, scope: !4227)
!4229 = !DILocation(line: 2465, column: 41, scope: !4227)
!4230 = !DILocation(line: 2465, column: 11, scope: !4170)
!4231 = !DILocation(line: 2466, column: 28, scope: !4227)
!4232 = !DILocation(line: 2466, column: 36, scope: !4227)
!4233 = !DILocation(line: 2466, column: 44, scope: !4227)
!4234 = !DILocation(line: 2466, column: 46, scope: !4227)
!4235 = !DILocation(line: 2466, column: 48, scope: !4227)
!4236 = !DILocation(line: 2466, column: 59, scope: !4227)
!4237 = !DILocation(line: 2466, column: 16, scope: !4227)
!4238 = !DILocation(line: 2466, column: 9, scope: !4227)
!4239 = !DILocation(line: 2467, column: 7, scope: !4170)
!4240 = !DILocation(line: 2472, column: 26, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !1, line: 2472, column: 11)
!4242 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2471, column: 5)
!4243 = !DILocation(line: 2472, column: 11, scope: !4241)
!4244 = !DILocation(line: 2472, column: 48, scope: !4241)
!4245 = !DILocation(line: 2472, column: 11, scope: !4242)
!4246 = !DILocalVariable(name: "type", scope: !4247, file: !1, line: 2475, type: !692)
!4247 = distinct !DILexicalBlock(scope: !4241, file: !1, line: 2473, column: 9)
!4248 = !DILocation(line: 2475, column: 14, scope: !4247)
!4249 = !DILocation(line: 2477, column: 41, scope: !4247)
!4250 = !DILocation(line: 2477, column: 49, scope: !4247)
!4251 = !DILocation(line: 2477, column: 57, scope: !4247)
!4252 = !DILocation(line: 2477, column: 59, scope: !4247)
!4253 = !DILocation(line: 2477, column: 61, scope: !4247)
!4254 = !DILocation(line: 2477, column: 71, scope: !4247)
!4255 = !DILocation(line: 2477, column: 74, scope: !4247)
!4256 = !DILocation(line: 2478, column: 13, scope: !4247)
!4257 = !DILocation(line: 2477, column: 17, scope: !4247)
!4258 = !DILocation(line: 2477, column: 16, scope: !4247)
!4259 = !DILocation(line: 2479, column: 15, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4247, file: !1, line: 2479, column: 15)
!4261 = !DILocation(line: 2479, column: 24, scope: !4260)
!4262 = !DILocation(line: 2479, column: 32, scope: !4260)
!4263 = !DILocation(line: 2479, column: 43, scope: !4260)
!4264 = !DILocation(line: 2479, column: 15, scope: !4247)
!4265 = !DILocation(line: 2480, column: 21, scope: !4260)
!4266 = !DILocation(line: 2480, column: 13, scope: !4260)
!4267 = !DILocation(line: 2482, column: 37, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4260, file: !1, line: 2481, column: 13)
!4269 = !DILocation(line: 2482, column: 46, scope: !4268)
!4270 = !DILocation(line: 2483, column: 40, scope: !4268)
!4271 = !DILocation(line: 2483, column: 52, scope: !4268)
!4272 = !DILocation(line: 2484, column: 39, scope: !4268)
!4273 = !DILocation(line: 2484, column: 50, scope: !4268)
!4274 = !DILocation(line: 2485, column: 40, scope: !4268)
!4275 = !DILocation(line: 2485, column: 52, scope: !4268)
!4276 = !DILocation(line: 2486, column: 38, scope: !4268)
!4277 = !DILocation(line: 2486, column: 48, scope: !4268)
!4278 = !DILocation(line: 2487, column: 28, scope: !4268)
!4279 = !DILocation(line: 2487, column: 40, scope: !4268)
!4280 = !DILocation(line: 2488, column: 13, scope: !4268)
!4281 = !DILocation(line: 2490, column: 21, scope: !4260)
!4282 = !DILocation(line: 2490, column: 13, scope: !4260)
!4283 = !DILocation(line: 2492, column: 36, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4260, file: !1, line: 2491, column: 13)
!4285 = !DILocation(line: 2492, column: 44, scope: !4284)
!4286 = !DILocation(line: 2493, column: 38, scope: !4284)
!4287 = !DILocation(line: 2493, column: 48, scope: !4284)
!4288 = !DILocation(line: 2494, column: 37, scope: !4284)
!4289 = !DILocation(line: 2494, column: 46, scope: !4284)
!4290 = !DILocation(line: 2495, column: 40, scope: !4284)
!4291 = !DILocation(line: 2495, column: 52, scope: !4284)
!4292 = !DILocation(line: 2496, column: 28, scope: !4284)
!4293 = !DILocation(line: 2496, column: 40, scope: !4284)
!4294 = !DILocation(line: 2498, column: 35, scope: !4247)
!4295 = !DILocation(line: 2498, column: 49, scope: !4247)
!4296 = !DILocation(line: 2498, column: 59, scope: !4247)
!4297 = !DILocation(line: 2498, column: 18, scope: !4247)
!4298 = !DILocation(line: 2499, column: 22, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4247, file: !1, line: 2499, column: 15)
!4300 = !DILocation(line: 2499, column: 15, scope: !4299)
!4301 = !DILocation(line: 2499, column: 37, scope: !4299)
!4302 = !DILocation(line: 2499, column: 15, scope: !4247)
!4303 = !DILocation(line: 2500, column: 34, scope: !4299)
!4304 = !DILocation(line: 2500, column: 27, scope: !4299)
!4305 = !DILocation(line: 2500, column: 48, scope: !4299)
!4306 = !DILocation(line: 2500, column: 13, scope: !4299)
!4307 = !DILocation(line: 2500, column: 51, scope: !4299)
!4308 = !DILocation(line: 2501, column: 15, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4247, file: !1, line: 2501, column: 15)
!4310 = !DILocation(line: 2501, column: 24, scope: !4309)
!4311 = !DILocation(line: 2501, column: 29, scope: !4309)
!4312 = !DILocation(line: 2501, column: 15, scope: !4247)
!4313 = !DILocation(line: 2502, column: 37, scope: !4309)
!4314 = !DILocation(line: 2502, column: 46, scope: !4309)
!4315 = !DILocation(line: 2503, column: 47, scope: !4309)
!4316 = !DILocation(line: 2503, column: 56, scope: !4309)
!4317 = !DILocation(line: 2503, column: 64, scope: !4309)
!4318 = !DILocation(line: 2504, column: 25, scope: !4309)
!4319 = !DILocation(line: 2504, column: 16, scope: !4309)
!4320 = !DILocation(line: 2504, column: 36, scope: !4309)
!4321 = !DILocation(line: 2504, column: 27, scope: !4309)
!4322 = !DILocation(line: 2504, column: 38, scope: !4309)
!4323 = !DILocation(line: 2504, column: 43, scope: !4309)
!4324 = !DILocation(line: 2504, column: 57, scope: !4309)
!4325 = !DILocation(line: 2505, column: 25, scope: !4309)
!4326 = !DILocation(line: 2502, column: 20, scope: !4309)
!4327 = !DILocation(line: 2502, column: 13, scope: !4309)
!4328 = !DILocation(line: 2506, column: 11, scope: !4247)
!4329 = !DILocation(line: 2508, column: 26, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4242, file: !1, line: 2508, column: 11)
!4331 = !DILocation(line: 2508, column: 11, scope: !4330)
!4332 = !DILocation(line: 2508, column: 46, scope: !4330)
!4333 = !DILocation(line: 2508, column: 11, scope: !4242)
!4334 = !DILocation(line: 2510, column: 41, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 2509, column: 9)
!4336 = !DILocation(line: 2510, column: 49, scope: !4335)
!4337 = !DILocation(line: 2510, column: 57, scope: !4335)
!4338 = !DILocation(line: 2510, column: 59, scope: !4335)
!4339 = !DILocation(line: 2510, column: 61, scope: !4335)
!4340 = !DILocation(line: 2510, column: 71, scope: !4335)
!4341 = !DILocation(line: 2510, column: 74, scope: !4335)
!4342 = !DILocation(line: 2511, column: 13, scope: !4335)
!4343 = !DILocation(line: 2510, column: 17, scope: !4335)
!4344 = !DILocation(line: 2510, column: 16, scope: !4335)
!4345 = !DILocation(line: 2512, column: 19, scope: !4335)
!4346 = !DILocation(line: 2512, column: 27, scope: !4335)
!4347 = !DILocation(line: 2512, column: 26, scope: !4335)
!4348 = !DILocation(line: 2512, column: 33, scope: !4335)
!4349 = !DILocation(line: 2512, column: 38, scope: !4335)
!4350 = !DILocation(line: 2512, column: 31, scope: !4335)
!4351 = !DILocation(line: 2512, column: 43, scope: !4335)
!4352 = !DILocation(line: 2512, column: 24, scope: !4335)
!4353 = !DILocation(line: 2512, column: 11, scope: !4335)
!4354 = !DILocation(line: 2514, column: 7, scope: !4242)
!4355 = !DILocation(line: 2519, column: 25, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 2519, column: 11)
!4357 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2518, column: 5)
!4358 = !DILocation(line: 2519, column: 11, scope: !4356)
!4359 = !DILocation(line: 2519, column: 47, scope: !4356)
!4360 = !DILocation(line: 2519, column: 11, scope: !4357)
!4361 = !DILocation(line: 2520, column: 9, scope: !4356)
!4362 = !DILocation(line: 2521, column: 26, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 2521, column: 11)
!4364 = !DILocation(line: 2521, column: 11, scope: !4363)
!4365 = !DILocation(line: 2521, column: 46, scope: !4363)
!4366 = !DILocation(line: 2521, column: 11, scope: !4357)
!4367 = !DILocation(line: 2523, column: 41, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 2522, column: 9)
!4369 = !DILocation(line: 2523, column: 49, scope: !4368)
!4370 = !DILocation(line: 2523, column: 57, scope: !4368)
!4371 = !DILocation(line: 2523, column: 59, scope: !4368)
!4372 = !DILocation(line: 2523, column: 61, scope: !4368)
!4373 = !DILocation(line: 2523, column: 71, scope: !4368)
!4374 = !DILocation(line: 2523, column: 74, scope: !4368)
!4375 = !DILocation(line: 2524, column: 13, scope: !4368)
!4376 = !DILocation(line: 2523, column: 17, scope: !4368)
!4377 = !DILocation(line: 2523, column: 16, scope: !4368)
!4378 = !DILocation(line: 2525, column: 31, scope: !4368)
!4379 = !DILocation(line: 2525, column: 18, scope: !4368)
!4380 = !DILocation(line: 2525, column: 11, scope: !4368)
!4381 = !DILocation(line: 2527, column: 25, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 2527, column: 11)
!4383 = !DILocation(line: 2527, column: 11, scope: !4382)
!4384 = !DILocation(line: 2527, column: 41, scope: !4382)
!4385 = !DILocation(line: 2527, column: 11, scope: !4357)
!4386 = !DILocation(line: 2528, column: 9, scope: !4382)
!4387 = !DILocation(line: 2529, column: 7, scope: !4357)
!4388 = !DILocation(line: 2534, column: 26, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !1, line: 2534, column: 11)
!4390 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2533, column: 5)
!4391 = !DILocation(line: 2534, column: 11, scope: !4389)
!4392 = !DILocation(line: 2534, column: 48, scope: !4389)
!4393 = !DILocation(line: 2534, column: 11, scope: !4390)
!4394 = !DILocation(line: 2536, column: 41, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 2535, column: 9)
!4396 = !DILocation(line: 2536, column: 49, scope: !4395)
!4397 = !DILocation(line: 2536, column: 57, scope: !4395)
!4398 = !DILocation(line: 2536, column: 59, scope: !4395)
!4399 = !DILocation(line: 2536, column: 61, scope: !4395)
!4400 = !DILocation(line: 2536, column: 71, scope: !4395)
!4401 = !DILocation(line: 2536, column: 74, scope: !4395)
!4402 = !DILocation(line: 2537, column: 13, scope: !4395)
!4403 = !DILocation(line: 2536, column: 17, scope: !4395)
!4404 = !DILocation(line: 2536, column: 16, scope: !4395)
!4405 = !DILocation(line: 2538, column: 33, scope: !4395)
!4406 = !DILocation(line: 2538, column: 18, scope: !4395)
!4407 = !DILocation(line: 2538, column: 11, scope: !4395)
!4408 = !DILocation(line: 2540, column: 7, scope: !4390)
!4409 = !DILocation(line: 2545, column: 26, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 2545, column: 11)
!4411 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2544, column: 5)
!4412 = !DILocation(line: 2545, column: 11, scope: !4410)
!4413 = !DILocation(line: 2545, column: 48, scope: !4410)
!4414 = !DILocation(line: 2545, column: 11, scope: !4411)
!4415 = !DILocation(line: 2547, column: 41, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4410, file: !1, line: 2546, column: 9)
!4417 = !DILocation(line: 2547, column: 49, scope: !4416)
!4418 = !DILocation(line: 2547, column: 57, scope: !4416)
!4419 = !DILocation(line: 2547, column: 59, scope: !4416)
!4420 = !DILocation(line: 2547, column: 61, scope: !4416)
!4421 = !DILocation(line: 2547, column: 71, scope: !4416)
!4422 = !DILocation(line: 2547, column: 74, scope: !4416)
!4423 = !DILocation(line: 2548, column: 13, scope: !4416)
!4424 = !DILocation(line: 2547, column: 17, scope: !4416)
!4425 = !DILocation(line: 2547, column: 16, scope: !4416)
!4426 = !DILocation(line: 2549, column: 32, scope: !4416)
!4427 = !DILocation(line: 2549, column: 31, scope: !4416)
!4428 = !DILocation(line: 2549, column: 38, scope: !4416)
!4429 = !DILocation(line: 2549, column: 37, scope: !4416)
!4430 = !DILocation(line: 2549, column: 43, scope: !4416)
!4431 = !DILocation(line: 2549, column: 17, scope: !4416)
!4432 = !DILocation(line: 2549, column: 50, scope: !4416)
!4433 = !DILocation(line: 2549, column: 49, scope: !4416)
!4434 = !DILocation(line: 2549, column: 16, scope: !4416)
!4435 = !DILocation(line: 2550, column: 18, scope: !4416)
!4436 = !DILocation(line: 2550, column: 11, scope: !4416)
!4437 = !DILocation(line: 2552, column: 26, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 2552, column: 11)
!4439 = !DILocation(line: 2552, column: 11, scope: !4438)
!4440 = !DILocation(line: 2552, column: 46, scope: !4438)
!4441 = !DILocation(line: 2552, column: 11, scope: !4411)
!4442 = !DILocalVariable(name: "gcd", scope: !4443, file: !1, line: 2555, type: !950)
!4443 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 2553, column: 9)
!4444 = !DILocation(line: 2555, column: 13, scope: !4443)
!4445 = !DILocation(line: 2557, column: 41, scope: !4443)
!4446 = !DILocation(line: 2557, column: 49, scope: !4443)
!4447 = !DILocation(line: 2557, column: 57, scope: !4443)
!4448 = !DILocation(line: 2557, column: 59, scope: !4443)
!4449 = !DILocation(line: 2557, column: 61, scope: !4443)
!4450 = !DILocation(line: 2557, column: 71, scope: !4443)
!4451 = !DILocation(line: 2557, column: 74, scope: !4443)
!4452 = !DILocation(line: 2558, column: 13, scope: !4443)
!4453 = !DILocation(line: 2557, column: 17, scope: !4443)
!4454 = !DILocation(line: 2557, column: 16, scope: !4443)
!4455 = !DILocation(line: 2559, column: 41, scope: !4443)
!4456 = !DILocation(line: 2559, column: 46, scope: !4443)
!4457 = !DILocation(line: 2559, column: 21, scope: !4443)
!4458 = !DILocation(line: 2560, column: 15, scope: !4443)
!4459 = !DILocation(line: 2560, column: 14, scope: !4443)
!4460 = !DILocation(line: 2560, column: 19, scope: !4443)
!4461 = !DILocation(line: 2559, column: 52, scope: !4443)
!4462 = !DILocation(line: 2559, column: 15, scope: !4443)
!4463 = !DILocation(line: 2559, column: 14, scope: !4443)
!4464 = !DILocation(line: 2561, column: 27, scope: !4443)
!4465 = !DILocation(line: 2561, column: 18, scope: !4443)
!4466 = !DILocation(line: 2561, column: 11, scope: !4443)
!4467 = !DILocation(line: 2563, column: 25, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 2563, column: 11)
!4469 = !DILocation(line: 2563, column: 11, scope: !4468)
!4470 = !DILocation(line: 2563, column: 41, scope: !4468)
!4471 = !DILocation(line: 2563, column: 11, scope: !4411)
!4472 = !DILocation(line: 2564, column: 28, scope: !4468)
!4473 = !DILocation(line: 2564, column: 36, scope: !4468)
!4474 = !DILocation(line: 2564, column: 44, scope: !4468)
!4475 = !DILocation(line: 2564, column: 46, scope: !4468)
!4476 = !DILocation(line: 2564, column: 48, scope: !4468)
!4477 = !DILocation(line: 2564, column: 59, scope: !4468)
!4478 = !DILocation(line: 2564, column: 16, scope: !4468)
!4479 = !DILocation(line: 2564, column: 9, scope: !4468)
!4480 = !DILocation(line: 2565, column: 7, scope: !4411)
!4481 = !DILocation(line: 2570, column: 25, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !1, line: 2570, column: 11)
!4483 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2569, column: 5)
!4484 = !DILocation(line: 2570, column: 11, scope: !4482)
!4485 = !DILocation(line: 2570, column: 41, scope: !4482)
!4486 = !DILocation(line: 2570, column: 11, scope: !4483)
!4487 = !DILocation(line: 2571, column: 28, scope: !4482)
!4488 = !DILocation(line: 2571, column: 36, scope: !4482)
!4489 = !DILocation(line: 2571, column: 44, scope: !4482)
!4490 = !DILocation(line: 2571, column: 46, scope: !4482)
!4491 = !DILocation(line: 2571, column: 48, scope: !4482)
!4492 = !DILocation(line: 2571, column: 59, scope: !4482)
!4493 = !DILocation(line: 2571, column: 16, scope: !4482)
!4494 = !DILocation(line: 2571, column: 9, scope: !4482)
!4495 = !DILocation(line: 2572, column: 25, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4483, file: !1, line: 2572, column: 11)
!4497 = !DILocation(line: 2572, column: 11, scope: !4496)
!4498 = !DILocation(line: 2572, column: 43, scope: !4496)
!4499 = !DILocation(line: 2572, column: 11, scope: !4483)
!4500 = !DILocation(line: 2573, column: 28, scope: !4496)
!4501 = !DILocation(line: 2573, column: 36, scope: !4496)
!4502 = !DILocation(line: 2573, column: 44, scope: !4496)
!4503 = !DILocation(line: 2573, column: 46, scope: !4496)
!4504 = !DILocation(line: 2573, column: 48, scope: !4496)
!4505 = !DILocation(line: 2573, column: 59, scope: !4496)
!4506 = !DILocation(line: 2573, column: 16, scope: !4496)
!4507 = !DILocation(line: 2573, column: 9, scope: !4496)
!4508 = !DILocation(line: 2574, column: 26, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4483, file: !1, line: 2574, column: 11)
!4510 = !DILocation(line: 2574, column: 11, scope: !4509)
!4511 = !DILocation(line: 2574, column: 48, scope: !4509)
!4512 = !DILocation(line: 2574, column: 11, scope: !4483)
!4513 = !DILocation(line: 2576, column: 41, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4509, file: !1, line: 2575, column: 9)
!4515 = !DILocation(line: 2576, column: 49, scope: !4514)
!4516 = !DILocation(line: 2576, column: 57, scope: !4514)
!4517 = !DILocation(line: 2576, column: 59, scope: !4514)
!4518 = !DILocation(line: 2576, column: 61, scope: !4514)
!4519 = !DILocation(line: 2576, column: 71, scope: !4514)
!4520 = !DILocation(line: 2576, column: 74, scope: !4514)
!4521 = !DILocation(line: 2577, column: 13, scope: !4514)
!4522 = !DILocation(line: 2576, column: 17, scope: !4514)
!4523 = !DILocation(line: 2576, column: 16, scope: !4514)
!4524 = !DILocation(line: 2578, column: 33, scope: !4514)
!4525 = !DILocation(line: 2578, column: 49, scope: !4514)
!4526 = !DILocation(line: 2578, column: 48, scope: !4514)
!4527 = !DILocation(line: 2578, column: 18, scope: !4514)
!4528 = !DILocation(line: 2578, column: 11, scope: !4514)
!4529 = !DILocation(line: 2580, column: 7, scope: !4483)
!4530 = !DILocation(line: 2585, column: 25, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !1, line: 2585, column: 11)
!4532 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2584, column: 5)
!4533 = !DILocation(line: 2585, column: 11, scope: !4531)
!4534 = !DILocation(line: 2585, column: 41, scope: !4531)
!4535 = !DILocation(line: 2585, column: 11, scope: !4532)
!4536 = !DILocation(line: 2586, column: 28, scope: !4531)
!4537 = !DILocation(line: 2586, column: 36, scope: !4531)
!4538 = !DILocation(line: 2586, column: 44, scope: !4531)
!4539 = !DILocation(line: 2586, column: 46, scope: !4531)
!4540 = !DILocation(line: 2586, column: 48, scope: !4531)
!4541 = !DILocation(line: 2586, column: 59, scope: !4531)
!4542 = !DILocation(line: 2586, column: 16, scope: !4531)
!4543 = !DILocation(line: 2586, column: 9, scope: !4531)
!4544 = !DILocation(line: 2587, column: 7, scope: !4532)
!4545 = !DILocation(line: 2592, column: 25, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !1, line: 2592, column: 11)
!4547 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2591, column: 5)
!4548 = !DILocation(line: 2592, column: 11, scope: !4546)
!4549 = !DILocation(line: 2592, column: 49, scope: !4546)
!4550 = !DILocation(line: 2592, column: 11, scope: !4547)
!4551 = !DILocation(line: 2593, column: 28, scope: !4546)
!4552 = !DILocation(line: 2593, column: 36, scope: !4546)
!4553 = !DILocation(line: 2593, column: 44, scope: !4546)
!4554 = !DILocation(line: 2593, column: 46, scope: !4546)
!4555 = !DILocation(line: 2593, column: 48, scope: !4546)
!4556 = !DILocation(line: 2593, column: 59, scope: !4546)
!4557 = !DILocation(line: 2593, column: 16, scope: !4546)
!4558 = !DILocation(line: 2593, column: 9, scope: !4546)
!4559 = !DILocation(line: 2594, column: 26, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4547, file: !1, line: 2594, column: 11)
!4561 = !DILocation(line: 2594, column: 11, scope: !4560)
!4562 = !DILocation(line: 2594, column: 46, scope: !4560)
!4563 = !DILocation(line: 2594, column: 11, scope: !4547)
!4564 = !DILocation(line: 2596, column: 41, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 2595, column: 9)
!4566 = !DILocation(line: 2596, column: 49, scope: !4565)
!4567 = !DILocation(line: 2596, column: 57, scope: !4565)
!4568 = !DILocation(line: 2596, column: 59, scope: !4565)
!4569 = !DILocation(line: 2596, column: 61, scope: !4565)
!4570 = !DILocation(line: 2596, column: 71, scope: !4565)
!4571 = !DILocation(line: 2596, column: 74, scope: !4565)
!4572 = !DILocation(line: 2597, column: 13, scope: !4565)
!4573 = !DILocation(line: 2596, column: 17, scope: !4565)
!4574 = !DILocation(line: 2596, column: 16, scope: !4565)
!4575 = !DILocation(line: 2598, column: 24, scope: !4565)
!4576 = !DILocation(line: 2598, column: 18, scope: !4565)
!4577 = !DILocation(line: 2598, column: 11, scope: !4565)
!4578 = !DILocation(line: 2601, column: 26, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4547, file: !1, line: 2601, column: 11)
!4580 = !DILocation(line: 2601, column: 11, scope: !4579)
!4581 = !DILocation(line: 2601, column: 48, scope: !4579)
!4582 = !DILocation(line: 2601, column: 11, scope: !4547)
!4583 = !DILocation(line: 2603, column: 41, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4579, file: !1, line: 2602, column: 9)
!4585 = !DILocation(line: 2603, column: 49, scope: !4584)
!4586 = !DILocation(line: 2603, column: 57, scope: !4584)
!4587 = !DILocation(line: 2603, column: 59, scope: !4584)
!4588 = !DILocation(line: 2603, column: 61, scope: !4584)
!4589 = !DILocation(line: 2603, column: 71, scope: !4584)
!4590 = !DILocation(line: 2603, column: 74, scope: !4584)
!4591 = !DILocation(line: 2604, column: 13, scope: !4584)
!4592 = !DILocation(line: 2603, column: 17, scope: !4584)
!4593 = !DILocation(line: 2603, column: 16, scope: !4584)
!4594 = !DILocation(line: 2605, column: 29, scope: !4584)
!4595 = !DILocation(line: 2605, column: 28, scope: !4584)
!4596 = !DILocation(line: 2605, column: 27, scope: !4584)
!4597 = !DILocation(line: 2605, column: 18, scope: !4584)
!4598 = !DILocation(line: 2605, column: 11, scope: !4584)
!4599 = !DILocation(line: 2608, column: 25, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4547, file: !1, line: 2608, column: 11)
!4601 = !DILocation(line: 2608, column: 11, scope: !4600)
!4602 = !DILocation(line: 2608, column: 41, scope: !4600)
!4603 = !DILocation(line: 2608, column: 11, scope: !4547)
!4604 = !DILocation(line: 2609, column: 28, scope: !4600)
!4605 = !DILocation(line: 2609, column: 36, scope: !4600)
!4606 = !DILocation(line: 2609, column: 44, scope: !4600)
!4607 = !DILocation(line: 2609, column: 46, scope: !4600)
!4608 = !DILocation(line: 2609, column: 48, scope: !4600)
!4609 = !DILocation(line: 2609, column: 59, scope: !4600)
!4610 = !DILocation(line: 2609, column: 16, scope: !4600)
!4611 = !DILocation(line: 2609, column: 9, scope: !4600)
!4612 = !DILocation(line: 2610, column: 7, scope: !4547)
!4613 = !DILocation(line: 2615, column: 25, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 2615, column: 11)
!4615 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2614, column: 5)
!4616 = !DILocation(line: 2615, column: 11, scope: !4614)
!4617 = !DILocation(line: 2615, column: 41, scope: !4614)
!4618 = !DILocation(line: 2615, column: 11, scope: !4615)
!4619 = !DILocation(line: 2616, column: 28, scope: !4614)
!4620 = !DILocation(line: 2616, column: 36, scope: !4614)
!4621 = !DILocation(line: 2616, column: 44, scope: !4614)
!4622 = !DILocation(line: 2616, column: 46, scope: !4614)
!4623 = !DILocation(line: 2616, column: 48, scope: !4614)
!4624 = !DILocation(line: 2616, column: 59, scope: !4614)
!4625 = !DILocation(line: 2616, column: 16, scope: !4614)
!4626 = !DILocation(line: 2616, column: 9, scope: !4614)
!4627 = !DILocation(line: 2618, column: 26, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 2618, column: 11)
!4629 = !DILocation(line: 2618, column: 11, scope: !4628)
!4630 = !DILocation(line: 2618, column: 45, scope: !4628)
!4631 = !DILocation(line: 2618, column: 11, scope: !4615)
!4632 = !DILocation(line: 2620, column: 41, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4628, file: !1, line: 2619, column: 9)
!4634 = !DILocation(line: 2620, column: 49, scope: !4633)
!4635 = !DILocation(line: 2620, column: 57, scope: !4633)
!4636 = !DILocation(line: 2620, column: 59, scope: !4633)
!4637 = !DILocation(line: 2620, column: 61, scope: !4633)
!4638 = !DILocation(line: 2620, column: 71, scope: !4633)
!4639 = !DILocation(line: 2620, column: 74, scope: !4633)
!4640 = !DILocation(line: 2621, column: 13, scope: !4633)
!4641 = !DILocation(line: 2620, column: 17, scope: !4633)
!4642 = !DILocation(line: 2620, column: 16, scope: !4633)
!4643 = !DILocation(line: 2622, column: 30, scope: !4633)
!4644 = !DILocation(line: 2622, column: 18, scope: !4633)
!4645 = !DILocation(line: 2622, column: 11, scope: !4633)
!4646 = !DILocation(line: 2626, column: 26, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 2626, column: 11)
!4648 = !DILocation(line: 2626, column: 11, scope: !4647)
!4649 = !DILocation(line: 2626, column: 45, scope: !4647)
!4650 = !DILocation(line: 2626, column: 11, scope: !4615)
!4651 = !DILocation(line: 2628, column: 41, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !1, line: 2627, column: 9)
!4653 = !DILocation(line: 2628, column: 49, scope: !4652)
!4654 = !DILocation(line: 2628, column: 57, scope: !4652)
!4655 = !DILocation(line: 2628, column: 59, scope: !4652)
!4656 = !DILocation(line: 2628, column: 61, scope: !4652)
!4657 = !DILocation(line: 2628, column: 71, scope: !4652)
!4658 = !DILocation(line: 2628, column: 74, scope: !4652)
!4659 = !DILocation(line: 2629, column: 13, scope: !4652)
!4660 = !DILocation(line: 2628, column: 17, scope: !4652)
!4661 = !DILocation(line: 2628, column: 16, scope: !4652)
!4662 = !DILocation(line: 2630, column: 30, scope: !4652)
!4663 = !DILocation(line: 2630, column: 18, scope: !4652)
!4664 = !DILocation(line: 2630, column: 11, scope: !4652)
!4665 = !DILocation(line: 2634, column: 26, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 2634, column: 11)
!4667 = !DILocation(line: 2634, column: 11, scope: !4666)
!4668 = !DILocation(line: 2634, column: 47, scope: !4666)
!4669 = !DILocation(line: 2634, column: 11, scope: !4615)
!4670 = !DILocation(line: 2636, column: 41, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4666, file: !1, line: 2635, column: 9)
!4672 = !DILocation(line: 2636, column: 49, scope: !4671)
!4673 = !DILocation(line: 2636, column: 57, scope: !4671)
!4674 = !DILocation(line: 2636, column: 59, scope: !4671)
!4675 = !DILocation(line: 2636, column: 61, scope: !4671)
!4676 = !DILocation(line: 2636, column: 71, scope: !4671)
!4677 = !DILocation(line: 2636, column: 74, scope: !4671)
!4678 = !DILocation(line: 2637, column: 13, scope: !4671)
!4679 = !DILocation(line: 2636, column: 17, scope: !4671)
!4680 = !DILocation(line: 2636, column: 16, scope: !4671)
!4681 = !DILocation(line: 2638, column: 15, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 2638, column: 15)
!4683 = !DILocation(line: 2638, column: 21, scope: !4682)
!4684 = !DILocation(line: 2638, column: 15, scope: !4671)
!4685 = !DILocation(line: 2639, column: 13, scope: !4682)
!4686 = !DILocation(line: 2640, column: 44, scope: !4671)
!4687 = !DILocation(line: 2640, column: 43, scope: !4671)
!4688 = !DILocation(line: 2640, column: 22, scope: !4671)
!4689 = !DILocation(line: 2640, column: 21, scope: !4671)
!4690 = !DILocation(line: 2640, column: 62, scope: !4671)
!4691 = !DILocation(line: 2640, column: 61, scope: !4671)
!4692 = !DILocation(line: 2640, column: 51, scope: !4671)
!4693 = !DILocation(line: 2640, column: 16, scope: !4671)
!4694 = !DILocation(line: 2641, column: 18, scope: !4671)
!4695 = !DILocation(line: 2641, column: 11, scope: !4671)
!4696 = !DILocation(line: 2644, column: 7, scope: !4615)
!4697 = !DILocation(line: 2649, column: 26, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 2649, column: 11)
!4699 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2648, column: 5)
!4700 = !DILocation(line: 2649, column: 11, scope: !4698)
!4701 = !DILocation(line: 2649, column: 45, scope: !4698)
!4702 = !DILocation(line: 2649, column: 11, scope: !4699)
!4703 = !DILocation(line: 2651, column: 41, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4698, file: !1, line: 2650, column: 9)
!4705 = !DILocation(line: 2651, column: 49, scope: !4704)
!4706 = !DILocation(line: 2651, column: 57, scope: !4704)
!4707 = !DILocation(line: 2651, column: 59, scope: !4704)
!4708 = !DILocation(line: 2651, column: 61, scope: !4704)
!4709 = !DILocation(line: 2651, column: 71, scope: !4704)
!4710 = !DILocation(line: 2651, column: 74, scope: !4704)
!4711 = !DILocation(line: 2652, column: 13, scope: !4704)
!4712 = !DILocation(line: 2651, column: 17, scope: !4704)
!4713 = !DILocation(line: 2651, column: 16, scope: !4704)
!4714 = !DILocation(line: 2653, column: 31, scope: !4704)
!4715 = !DILocation(line: 2653, column: 18, scope: !4704)
!4716 = !DILocation(line: 2653, column: 11, scope: !4704)
!4717 = !DILocation(line: 2655, column: 26, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 2655, column: 11)
!4719 = !DILocation(line: 2655, column: 11, scope: !4718)
!4720 = !DILocation(line: 2655, column: 49, scope: !4718)
!4721 = !DILocation(line: 2655, column: 11, scope: !4699)
!4722 = !DILocation(line: 2657, column: 41, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !1, line: 2656, column: 9)
!4724 = !DILocation(line: 2657, column: 49, scope: !4723)
!4725 = !DILocation(line: 2657, column: 57, scope: !4723)
!4726 = !DILocation(line: 2657, column: 59, scope: !4723)
!4727 = !DILocation(line: 2657, column: 61, scope: !4723)
!4728 = !DILocation(line: 2657, column: 71, scope: !4723)
!4729 = !DILocation(line: 2657, column: 74, scope: !4723)
!4730 = !DILocation(line: 2658, column: 13, scope: !4723)
!4731 = !DILocation(line: 2657, column: 17, scope: !4723)
!4732 = !DILocation(line: 2657, column: 16, scope: !4723)
!4733 = !DILocation(line: 2659, column: 33, scope: !4723)
!4734 = !DILocation(line: 2659, column: 18, scope: !4723)
!4735 = !DILocation(line: 2659, column: 41, scope: !4723)
!4736 = !DILocation(line: 2659, column: 40, scope: !4723)
!4737 = !DILocation(line: 2659, column: 11, scope: !4723)
!4738 = !DILocation(line: 2661, column: 26, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 2661, column: 11)
!4740 = !DILocation(line: 2661, column: 11, scope: !4739)
!4741 = !DILocation(line: 2661, column: 46, scope: !4739)
!4742 = !DILocation(line: 2661, column: 11, scope: !4699)
!4743 = !DILocation(line: 2663, column: 41, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4739, file: !1, line: 2662, column: 9)
!4745 = !DILocation(line: 2663, column: 49, scope: !4744)
!4746 = !DILocation(line: 2663, column: 57, scope: !4744)
!4747 = !DILocation(line: 2663, column: 59, scope: !4744)
!4748 = !DILocation(line: 2663, column: 61, scope: !4744)
!4749 = !DILocation(line: 2663, column: 71, scope: !4744)
!4750 = !DILocation(line: 2663, column: 74, scope: !4744)
!4751 = !DILocation(line: 2664, column: 13, scope: !4744)
!4752 = !DILocation(line: 2663, column: 17, scope: !4744)
!4753 = !DILocation(line: 2663, column: 16, scope: !4744)
!4754 = !DILocation(line: 2665, column: 33, scope: !4744)
!4755 = !DILocation(line: 2665, column: 18, scope: !4744)
!4756 = !DILocation(line: 2665, column: 11, scope: !4744)
!4757 = !DILocation(line: 2667, column: 25, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 2667, column: 11)
!4759 = !DILocation(line: 2667, column: 11, scope: !4758)
!4760 = !DILocation(line: 2667, column: 49, scope: !4758)
!4761 = !DILocation(line: 2667, column: 11, scope: !4699)
!4762 = !DILocation(line: 2668, column: 28, scope: !4758)
!4763 = !DILocation(line: 2668, column: 36, scope: !4758)
!4764 = !DILocation(line: 2668, column: 44, scope: !4758)
!4765 = !DILocation(line: 2668, column: 46, scope: !4758)
!4766 = !DILocation(line: 2668, column: 48, scope: !4758)
!4767 = !DILocation(line: 2668, column: 59, scope: !4758)
!4768 = !DILocation(line: 2668, column: 16, scope: !4758)
!4769 = !DILocation(line: 2668, column: 9, scope: !4758)
!4770 = !DILocation(line: 2669, column: 7, scope: !4699)
!4771 = !DILocation(line: 2674, column: 25, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2674, column: 11)
!4773 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2673, column: 5)
!4774 = !DILocation(line: 2674, column: 11, scope: !4772)
!4775 = !DILocation(line: 2674, column: 46, scope: !4772)
!4776 = !DILocation(line: 2674, column: 11, scope: !4773)
!4777 = !DILocation(line: 2675, column: 9, scope: !4772)
!4778 = !DILocation(line: 2676, column: 26, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2676, column: 11)
!4780 = !DILocation(line: 2676, column: 11, scope: !4779)
!4781 = !DILocation(line: 2676, column: 49, scope: !4779)
!4782 = !DILocation(line: 2676, column: 11, scope: !4773)
!4783 = !DILocation(line: 2677, column: 9, scope: !4779)
!4784 = !DILocation(line: 2678, column: 26, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2678, column: 11)
!4786 = !DILocation(line: 2678, column: 11, scope: !4785)
!4787 = !DILocation(line: 2678, column: 46, scope: !4785)
!4788 = !DILocation(line: 2678, column: 11, scope: !4773)
!4789 = !DILocation(line: 2680, column: 41, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 2679, column: 9)
!4791 = !DILocation(line: 2680, column: 49, scope: !4790)
!4792 = !DILocation(line: 2680, column: 57, scope: !4790)
!4793 = !DILocation(line: 2680, column: 59, scope: !4790)
!4794 = !DILocation(line: 2680, column: 61, scope: !4790)
!4795 = !DILocation(line: 2680, column: 71, scope: !4790)
!4796 = !DILocation(line: 2680, column: 74, scope: !4790)
!4797 = !DILocation(line: 2681, column: 13, scope: !4790)
!4798 = !DILocation(line: 2680, column: 17, scope: !4790)
!4799 = !DILocation(line: 2680, column: 16, scope: !4790)
!4800 = !DILocation(line: 2682, column: 18, scope: !4790)
!4801 = !DILocation(line: 2682, column: 27, scope: !4790)
!4802 = !DILocation(line: 2682, column: 26, scope: !4790)
!4803 = !DILocation(line: 2682, column: 24, scope: !4790)
!4804 = !DILocation(line: 2682, column: 34, scope: !4790)
!4805 = !DILocation(line: 2682, column: 43, scope: !4790)
!4806 = !DILocation(line: 2682, column: 42, scope: !4790)
!4807 = !DILocation(line: 2682, column: 11, scope: !4790)
!4808 = !DILocation(line: 2684, column: 26, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2684, column: 11)
!4810 = !DILocation(line: 2684, column: 11, scope: !4809)
!4811 = !DILocation(line: 2684, column: 49, scope: !4809)
!4812 = !DILocation(line: 2684, column: 11, scope: !4773)
!4813 = !DILocation(line: 2685, column: 9, scope: !4809)
!4814 = !DILocation(line: 2686, column: 26, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2686, column: 11)
!4816 = !DILocation(line: 2686, column: 11, scope: !4815)
!4817 = !DILocation(line: 2686, column: 46, scope: !4815)
!4818 = !DILocation(line: 2686, column: 11, scope: !4773)
!4819 = !DILocation(line: 2688, column: 41, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4815, file: !1, line: 2687, column: 9)
!4821 = !DILocation(line: 2688, column: 49, scope: !4820)
!4822 = !DILocation(line: 2688, column: 57, scope: !4820)
!4823 = !DILocation(line: 2688, column: 59, scope: !4820)
!4824 = !DILocation(line: 2688, column: 61, scope: !4820)
!4825 = !DILocation(line: 2688, column: 71, scope: !4820)
!4826 = !DILocation(line: 2688, column: 74, scope: !4820)
!4827 = !DILocation(line: 2689, column: 13, scope: !4820)
!4828 = !DILocation(line: 2688, column: 17, scope: !4820)
!4829 = !DILocation(line: 2688, column: 16, scope: !4820)
!4830 = !DILocation(line: 2690, column: 18, scope: !4820)
!4831 = !DILocation(line: 2690, column: 27, scope: !4820)
!4832 = !DILocation(line: 2690, column: 26, scope: !4820)
!4833 = !DILocation(line: 2690, column: 24, scope: !4820)
!4834 = !DILocation(line: 2690, column: 34, scope: !4820)
!4835 = !DILocation(line: 2690, column: 43, scope: !4820)
!4836 = !DILocation(line: 2690, column: 42, scope: !4820)
!4837 = !DILocation(line: 2690, column: 11, scope: !4820)
!4838 = !DILocation(line: 2692, column: 26, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2692, column: 11)
!4840 = !DILocation(line: 2692, column: 11, scope: !4839)
!4841 = !DILocation(line: 2692, column: 46, scope: !4839)
!4842 = !DILocation(line: 2692, column: 11, scope: !4773)
!4843 = !DILocation(line: 2694, column: 41, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 2693, column: 9)
!4845 = !DILocation(line: 2694, column: 49, scope: !4844)
!4846 = !DILocation(line: 2694, column: 57, scope: !4844)
!4847 = !DILocation(line: 2694, column: 59, scope: !4844)
!4848 = !DILocation(line: 2694, column: 61, scope: !4844)
!4849 = !DILocation(line: 2694, column: 71, scope: !4844)
!4850 = !DILocation(line: 2694, column: 74, scope: !4844)
!4851 = !DILocation(line: 2695, column: 13, scope: !4844)
!4852 = !DILocation(line: 2694, column: 17, scope: !4844)
!4853 = !DILocation(line: 2694, column: 16, scope: !4844)
!4854 = !DILocation(line: 2696, column: 17, scope: !4844)
!4855 = !DILocation(line: 2696, column: 39, scope: !4844)
!4856 = !DILocation(line: 2696, column: 47, scope: !4844)
!4857 = !DILocation(line: 2696, column: 46, scope: !4844)
!4858 = !DILocation(line: 2696, column: 44, scope: !4844)
!4859 = !DILocation(line: 2696, column: 23, scope: !4844)
!4860 = !DILocation(line: 2696, column: 57, scope: !4844)
!4861 = !DILocation(line: 2696, column: 56, scope: !4844)
!4862 = !DILocation(line: 2696, column: 54, scope: !4844)
!4863 = !DILocation(line: 2696, column: 22, scope: !4844)
!4864 = !DILocation(line: 2696, column: 16, scope: !4844)
!4865 = !DILocation(line: 2697, column: 18, scope: !4844)
!4866 = !DILocation(line: 2697, column: 11, scope: !4844)
!4867 = !DILocation(line: 2699, column: 25, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 2699, column: 11)
!4869 = !DILocation(line: 2699, column: 11, scope: !4868)
!4870 = !DILocation(line: 2699, column: 41, scope: !4868)
!4871 = !DILocation(line: 2699, column: 11, scope: !4773)
!4872 = !DILocation(line: 2700, column: 28, scope: !4868)
!4873 = !DILocation(line: 2700, column: 36, scope: !4868)
!4874 = !DILocation(line: 2700, column: 44, scope: !4868)
!4875 = !DILocation(line: 2700, column: 46, scope: !4868)
!4876 = !DILocation(line: 2700, column: 48, scope: !4868)
!4877 = !DILocation(line: 2700, column: 59, scope: !4868)
!4878 = !DILocation(line: 2700, column: 16, scope: !4868)
!4879 = !DILocation(line: 2700, column: 9, scope: !4868)
!4880 = !DILocation(line: 2701, column: 7, scope: !4773)
!4881 = !DILocation(line: 2706, column: 26, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !1, line: 2706, column: 11)
!4883 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2705, column: 5)
!4884 = !DILocation(line: 2706, column: 11, scope: !4882)
!4885 = !DILocation(line: 2706, column: 46, scope: !4882)
!4886 = !DILocation(line: 2706, column: 11, scope: !4883)
!4887 = !DILocation(line: 2708, column: 41, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 2707, column: 9)
!4889 = !DILocation(line: 2708, column: 49, scope: !4888)
!4890 = !DILocation(line: 2708, column: 57, scope: !4888)
!4891 = !DILocation(line: 2708, column: 59, scope: !4888)
!4892 = !DILocation(line: 2708, column: 61, scope: !4888)
!4893 = !DILocation(line: 2708, column: 71, scope: !4888)
!4894 = !DILocation(line: 2708, column: 74, scope: !4888)
!4895 = !DILocation(line: 2709, column: 13, scope: !4888)
!4896 = !DILocation(line: 2708, column: 17, scope: !4888)
!4897 = !DILocation(line: 2708, column: 16, scope: !4888)
!4898 = !DILocation(line: 2710, column: 28, scope: !4888)
!4899 = !DILocation(line: 2710, column: 34, scope: !4888)
!4900 = !DILocation(line: 2710, column: 18, scope: !4888)
!4901 = !DILocation(line: 2710, column: 11, scope: !4888)
!4902 = !DILocation(line: 2712, column: 25, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4883, file: !1, line: 2712, column: 11)
!4904 = !DILocation(line: 2712, column: 11, scope: !4903)
!4905 = !DILocation(line: 2712, column: 41, scope: !4903)
!4906 = !DILocation(line: 2712, column: 11, scope: !4883)
!4907 = !DILocation(line: 2713, column: 28, scope: !4903)
!4908 = !DILocation(line: 2713, column: 36, scope: !4903)
!4909 = !DILocation(line: 2713, column: 44, scope: !4903)
!4910 = !DILocation(line: 2713, column: 46, scope: !4903)
!4911 = !DILocation(line: 2713, column: 48, scope: !4903)
!4912 = !DILocation(line: 2713, column: 59, scope: !4903)
!4913 = !DILocation(line: 2713, column: 16, scope: !4903)
!4914 = !DILocation(line: 2713, column: 9, scope: !4903)
!4915 = !DILocation(line: 2714, column: 7, scope: !4883)
!4916 = !DILocation(line: 2719, column: 25, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 2719, column: 11)
!4918 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2718, column: 5)
!4919 = !DILocation(line: 2719, column: 11, scope: !4917)
!4920 = !DILocation(line: 2719, column: 46, scope: !4917)
!4921 = !DILocation(line: 2719, column: 11, scope: !4918)
!4922 = !DILocation(line: 2720, column: 9, scope: !4917)
!4923 = !DILocation(line: 2721, column: 25, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 2721, column: 11)
!4925 = !DILocation(line: 2721, column: 11, scope: !4924)
!4926 = !DILocation(line: 2721, column: 41, scope: !4924)
!4927 = !DILocation(line: 2721, column: 11, scope: !4918)
!4928 = !DILocation(line: 2722, column: 28, scope: !4924)
!4929 = !DILocation(line: 2722, column: 36, scope: !4924)
!4930 = !DILocation(line: 2722, column: 44, scope: !4924)
!4931 = !DILocation(line: 2722, column: 46, scope: !4924)
!4932 = !DILocation(line: 2722, column: 48, scope: !4924)
!4933 = !DILocation(line: 2722, column: 59, scope: !4924)
!4934 = !DILocation(line: 2722, column: 16, scope: !4924)
!4935 = !DILocation(line: 2722, column: 9, scope: !4924)
!4936 = !DILocation(line: 2723, column: 7, scope: !4918)
!4937 = !DILocation(line: 2728, column: 25, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 2728, column: 11)
!4939 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2727, column: 5)
!4940 = !DILocation(line: 2728, column: 11, scope: !4938)
!4941 = !DILocation(line: 2728, column: 43, scope: !4938)
!4942 = !DILocation(line: 2728, column: 11, scope: !4939)
!4943 = !DILocation(line: 2729, column: 9, scope: !4938)
!4944 = !DILocation(line: 2730, column: 25, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 2730, column: 11)
!4946 = !DILocation(line: 2730, column: 11, scope: !4945)
!4947 = !DILocation(line: 2730, column: 42, scope: !4945)
!4948 = !DILocation(line: 2730, column: 11, scope: !4939)
!4949 = !DILocation(line: 2731, column: 9, scope: !4945)
!4950 = !DILocation(line: 2732, column: 26, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 2732, column: 11)
!4952 = !DILocation(line: 2732, column: 11, scope: !4951)
!4953 = !DILocation(line: 2732, column: 46, scope: !4951)
!4954 = !DILocation(line: 2732, column: 11, scope: !4939)
!4955 = !DILocation(line: 2734, column: 41, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4951, file: !1, line: 2733, column: 9)
!4957 = !DILocation(line: 2734, column: 49, scope: !4956)
!4958 = !DILocation(line: 2734, column: 57, scope: !4956)
!4959 = !DILocation(line: 2734, column: 59, scope: !4956)
!4960 = !DILocation(line: 2734, column: 61, scope: !4956)
!4961 = !DILocation(line: 2734, column: 71, scope: !4956)
!4962 = !DILocation(line: 2734, column: 74, scope: !4956)
!4963 = !DILocation(line: 2735, column: 13, scope: !4956)
!4964 = !DILocation(line: 2734, column: 17, scope: !4956)
!4965 = !DILocation(line: 2734, column: 16, scope: !4956)
!4966 = !DILocation(line: 2736, column: 31, scope: !4956)
!4967 = !DILocation(line: 2736, column: 47, scope: !4956)
!4968 = !DILocation(line: 2736, column: 46, scope: !4956)
!4969 = !DILocation(line: 2736, column: 18, scope: !4956)
!4970 = !DILocation(line: 2736, column: 11, scope: !4956)
!4971 = !DILocation(line: 2738, column: 25, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 2738, column: 11)
!4973 = !DILocation(line: 2738, column: 11, scope: !4972)
!4974 = !DILocation(line: 2738, column: 41, scope: !4972)
!4975 = !DILocation(line: 2738, column: 11, scope: !4939)
!4976 = !DILocation(line: 2739, column: 28, scope: !4972)
!4977 = !DILocation(line: 2739, column: 36, scope: !4972)
!4978 = !DILocation(line: 2739, column: 44, scope: !4972)
!4979 = !DILocation(line: 2739, column: 46, scope: !4972)
!4980 = !DILocation(line: 2739, column: 48, scope: !4972)
!4981 = !DILocation(line: 2739, column: 59, scope: !4972)
!4982 = !DILocation(line: 2739, column: 16, scope: !4972)
!4983 = !DILocation(line: 2739, column: 9, scope: !4972)
!4984 = !DILocation(line: 2740, column: 7, scope: !4939)
!4985 = !DILocation(line: 2745, column: 25, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !1, line: 2745, column: 11)
!4987 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2744, column: 5)
!4988 = !DILocation(line: 2745, column: 11, scope: !4986)
!4989 = !DILocation(line: 2745, column: 52, scope: !4986)
!4990 = !DILocation(line: 2745, column: 11, scope: !4987)
!4991 = !DILocation(line: 2746, column: 9, scope: !4986)
!4992 = !DILocation(line: 2747, column: 25, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4987, file: !1, line: 2747, column: 11)
!4994 = !DILocation(line: 2747, column: 11, scope: !4993)
!4995 = !DILocation(line: 2747, column: 52, scope: !4993)
!4996 = !DILocation(line: 2747, column: 11, scope: !4987)
!4997 = !DILocation(line: 2748, column: 9, scope: !4993)
!4998 = !DILocation(line: 2749, column: 7, scope: !4987)
!4999 = !DILocation(line: 2754, column: 26, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 2754, column: 11)
!5001 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2753, column: 5)
!5002 = !DILocation(line: 2754, column: 11, scope: !5000)
!5003 = !DILocation(line: 2754, column: 47, scope: !5000)
!5004 = !DILocation(line: 2754, column: 11, scope: !5001)
!5005 = !DILocation(line: 2755, column: 37, scope: !5000)
!5006 = !DILocation(line: 2755, column: 46, scope: !5000)
!5007 = !DILocation(line: 2755, column: 16, scope: !5000)
!5008 = !DILocation(line: 2755, column: 9, scope: !5000)
!5009 = !DILocation(line: 2756, column: 26, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 2756, column: 11)
!5011 = !DILocation(line: 2756, column: 11, scope: !5010)
!5012 = !DILocation(line: 2756, column: 48, scope: !5010)
!5013 = !DILocation(line: 2756, column: 11, scope: !5001)
!5014 = !DILocation(line: 2758, column: 41, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !1, line: 2757, column: 9)
!5016 = !DILocation(line: 2758, column: 49, scope: !5015)
!5017 = !DILocation(line: 2758, column: 57, scope: !5015)
!5018 = !DILocation(line: 2758, column: 59, scope: !5015)
!5019 = !DILocation(line: 2758, column: 61, scope: !5015)
!5020 = !DILocation(line: 2758, column: 71, scope: !5015)
!5021 = !DILocation(line: 2758, column: 74, scope: !5015)
!5022 = !DILocation(line: 2759, column: 13, scope: !5015)
!5023 = !DILocation(line: 2758, column: 17, scope: !5015)
!5024 = !DILocation(line: 2758, column: 16, scope: !5015)
!5025 = !DILocation(line: 2760, column: 33, scope: !5015)
!5026 = !DILocation(line: 2760, column: 38, scope: !5015)
!5027 = !DILocation(line: 2760, column: 18, scope: !5015)
!5028 = !DILocation(line: 2760, column: 11, scope: !5015)
!5029 = !DILocation(line: 2762, column: 25, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 2762, column: 11)
!5031 = !DILocation(line: 2762, column: 11, scope: !5030)
!5032 = !DILocation(line: 2762, column: 41, scope: !5030)
!5033 = !DILocation(line: 2762, column: 11, scope: !5001)
!5034 = !DILocation(line: 2763, column: 28, scope: !5030)
!5035 = !DILocation(line: 2763, column: 36, scope: !5030)
!5036 = !DILocation(line: 2763, column: 44, scope: !5030)
!5037 = !DILocation(line: 2763, column: 46, scope: !5030)
!5038 = !DILocation(line: 2763, column: 48, scope: !5030)
!5039 = !DILocation(line: 2763, column: 59, scope: !5030)
!5040 = !DILocation(line: 2763, column: 16, scope: !5030)
!5041 = !DILocation(line: 2763, column: 9, scope: !5030)
!5042 = !DILocation(line: 2764, column: 7, scope: !5001)
!5043 = !DILocation(line: 2769, column: 25, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2769, column: 11)
!5045 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2768, column: 5)
!5046 = !DILocation(line: 2769, column: 11, scope: !5044)
!5047 = !DILocation(line: 2769, column: 50, scope: !5044)
!5048 = !DILocation(line: 2769, column: 11, scope: !5045)
!5049 = !DILocation(line: 2770, column: 28, scope: !5044)
!5050 = !DILocation(line: 2770, column: 36, scope: !5044)
!5051 = !DILocation(line: 2770, column: 44, scope: !5044)
!5052 = !DILocation(line: 2770, column: 46, scope: !5044)
!5053 = !DILocation(line: 2770, column: 48, scope: !5044)
!5054 = !DILocation(line: 2770, column: 59, scope: !5044)
!5055 = !DILocation(line: 2770, column: 16, scope: !5044)
!5056 = !DILocation(line: 2770, column: 9, scope: !5044)
!5057 = !DILocation(line: 2771, column: 26, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2771, column: 11)
!5059 = !DILocation(line: 2771, column: 11, scope: !5058)
!5060 = !DILocation(line: 2771, column: 47, scope: !5058)
!5061 = !DILocation(line: 2771, column: 11, scope: !5045)
!5062 = !DILocation(line: 2773, column: 41, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5058, file: !1, line: 2772, column: 9)
!5064 = !DILocation(line: 2773, column: 49, scope: !5063)
!5065 = !DILocation(line: 2773, column: 57, scope: !5063)
!5066 = !DILocation(line: 2773, column: 59, scope: !5063)
!5067 = !DILocation(line: 2773, column: 61, scope: !5063)
!5068 = !DILocation(line: 2773, column: 71, scope: !5063)
!5069 = !DILocation(line: 2773, column: 74, scope: !5063)
!5070 = !DILocation(line: 2774, column: 13, scope: !5063)
!5071 = !DILocation(line: 2773, column: 17, scope: !5063)
!5072 = !DILocation(line: 2773, column: 16, scope: !5063)
!5073 = !DILocation(line: 2775, column: 18, scope: !5063)
!5074 = !DILocation(line: 2775, column: 24, scope: !5063)
!5075 = !DILocation(line: 2775, column: 11, scope: !5063)
!5076 = !DILocation(line: 2777, column: 26, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2777, column: 11)
!5078 = !DILocation(line: 2777, column: 11, scope: !5077)
!5079 = !DILocation(line: 2777, column: 47, scope: !5077)
!5080 = !DILocation(line: 2777, column: 11, scope: !5045)
!5081 = !DILocation(line: 2779, column: 41, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5077, file: !1, line: 2778, column: 9)
!5083 = !DILocation(line: 2779, column: 49, scope: !5082)
!5084 = !DILocation(line: 2779, column: 57, scope: !5082)
!5085 = !DILocation(line: 2779, column: 59, scope: !5082)
!5086 = !DILocation(line: 2779, column: 61, scope: !5082)
!5087 = !DILocation(line: 2779, column: 71, scope: !5082)
!5088 = !DILocation(line: 2779, column: 74, scope: !5082)
!5089 = !DILocation(line: 2780, column: 13, scope: !5082)
!5090 = !DILocation(line: 2779, column: 17, scope: !5082)
!5091 = !DILocation(line: 2779, column: 16, scope: !5082)
!5092 = !DILocation(line: 2781, column: 15, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5082, file: !1, line: 2781, column: 15)
!5094 = !DILocation(line: 2781, column: 21, scope: !5093)
!5095 = !DILocation(line: 2781, column: 15, scope: !5082)
!5096 = !DILocation(line: 2782, column: 13, scope: !5093)
!5097 = !DILocation(line: 2783, column: 41, scope: !5082)
!5098 = !DILocation(line: 2783, column: 40, scope: !5082)
!5099 = !DILocation(line: 2783, column: 18, scope: !5082)
!5100 = !DILocation(line: 2783, column: 59, scope: !5082)
!5101 = !DILocation(line: 2783, column: 58, scope: !5082)
!5102 = !DILocation(line: 2783, column: 48, scope: !5082)
!5103 = !DILocation(line: 2783, column: 16, scope: !5082)
!5104 = !DILocation(line: 2784, column: 18, scope: !5082)
!5105 = !DILocation(line: 2784, column: 11, scope: !5082)
!5106 = !DILocation(line: 2786, column: 26, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2786, column: 11)
!5108 = !DILocation(line: 2786, column: 11, scope: !5107)
!5109 = !DILocation(line: 2786, column: 47, scope: !5107)
!5110 = !DILocation(line: 2786, column: 11, scope: !5045)
!5111 = !DILocation(line: 2788, column: 41, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5107, file: !1, line: 2787, column: 9)
!5113 = !DILocation(line: 2788, column: 49, scope: !5112)
!5114 = !DILocation(line: 2788, column: 57, scope: !5112)
!5115 = !DILocation(line: 2788, column: 59, scope: !5112)
!5116 = !DILocation(line: 2788, column: 61, scope: !5112)
!5117 = !DILocation(line: 2788, column: 71, scope: !5112)
!5118 = !DILocation(line: 2788, column: 74, scope: !5112)
!5119 = !DILocation(line: 2789, column: 13, scope: !5112)
!5120 = !DILocation(line: 2788, column: 17, scope: !5112)
!5121 = !DILocation(line: 2788, column: 16, scope: !5112)
!5122 = !DILocation(line: 2790, column: 32, scope: !5112)
!5123 = !DILocation(line: 2790, column: 18, scope: !5112)
!5124 = !DILocation(line: 2790, column: 11, scope: !5112)
!5125 = !DILocation(line: 2792, column: 26, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2792, column: 11)
!5127 = !DILocation(line: 2792, column: 11, scope: !5126)
!5128 = !DILocation(line: 2792, column: 46, scope: !5126)
!5129 = !DILocation(line: 2792, column: 11, scope: !5045)
!5130 = !DILocation(line: 2794, column: 41, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5126, file: !1, line: 2793, column: 9)
!5132 = !DILocation(line: 2794, column: 49, scope: !5131)
!5133 = !DILocation(line: 2794, column: 57, scope: !5131)
!5134 = !DILocation(line: 2794, column: 59, scope: !5131)
!5135 = !DILocation(line: 2794, column: 61, scope: !5131)
!5136 = !DILocation(line: 2794, column: 71, scope: !5131)
!5137 = !DILocation(line: 2794, column: 74, scope: !5131)
!5138 = !DILocation(line: 2795, column: 13, scope: !5131)
!5139 = !DILocation(line: 2794, column: 17, scope: !5131)
!5140 = !DILocation(line: 2794, column: 16, scope: !5131)
!5141 = !DILocation(line: 2796, column: 31, scope: !5131)
!5142 = !DILocation(line: 2796, column: 18, scope: !5131)
!5143 = !DILocation(line: 2796, column: 11, scope: !5131)
!5144 = !DILocation(line: 2798, column: 26, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2798, column: 11)
!5146 = !DILocation(line: 2798, column: 11, scope: !5145)
!5147 = !DILocation(line: 2798, column: 47, scope: !5145)
!5148 = !DILocation(line: 2798, column: 11, scope: !5045)
!5149 = !DILocation(line: 2800, column: 41, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !1, line: 2799, column: 9)
!5151 = !DILocation(line: 2800, column: 49, scope: !5150)
!5152 = !DILocation(line: 2800, column: 57, scope: !5150)
!5153 = !DILocation(line: 2800, column: 59, scope: !5150)
!5154 = !DILocation(line: 2800, column: 61, scope: !5150)
!5155 = !DILocation(line: 2800, column: 71, scope: !5150)
!5156 = !DILocation(line: 2800, column: 74, scope: !5150)
!5157 = !DILocation(line: 2801, column: 13, scope: !5150)
!5158 = !DILocation(line: 2800, column: 17, scope: !5150)
!5159 = !DILocation(line: 2800, column: 16, scope: !5150)
!5160 = !DILocation(line: 2802, column: 32, scope: !5150)
!5161 = !DILocation(line: 2802, column: 18, scope: !5150)
!5162 = !DILocation(line: 2802, column: 11, scope: !5150)
!5163 = !DILocation(line: 2804, column: 26, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2804, column: 11)
!5165 = !DILocation(line: 2804, column: 11, scope: !5164)
!5166 = !DILocation(line: 2804, column: 49, scope: !5164)
!5167 = !DILocation(line: 2804, column: 11, scope: !5045)
!5168 = !DILocation(line: 2806, column: 41, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5164, file: !1, line: 2805, column: 9)
!5170 = !DILocation(line: 2806, column: 49, scope: !5169)
!5171 = !DILocation(line: 2806, column: 57, scope: !5169)
!5172 = !DILocation(line: 2806, column: 59, scope: !5169)
!5173 = !DILocation(line: 2806, column: 61, scope: !5169)
!5174 = !DILocation(line: 2806, column: 71, scope: !5169)
!5175 = !DILocation(line: 2806, column: 74, scope: !5169)
!5176 = !DILocation(line: 2807, column: 13, scope: !5169)
!5177 = !DILocation(line: 2806, column: 17, scope: !5169)
!5178 = !DILocation(line: 2806, column: 16, scope: !5169)
!5179 = !DILocation(line: 2808, column: 43, scope: !5169)
!5180 = !DILocation(line: 2808, column: 42, scope: !5169)
!5181 = !DILocation(line: 2808, column: 28, scope: !5169)
!5182 = !DILocation(line: 2808, column: 27, scope: !5169)
!5183 = !DILocation(line: 2808, column: 22, scope: !5169)
!5184 = !DILocation(line: 2808, column: 11, scope: !5169)
!5185 = !DILocation(line: 2810, column: 25, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 2810, column: 11)
!5187 = !DILocation(line: 2810, column: 11, scope: !5186)
!5188 = !DILocation(line: 2810, column: 41, scope: !5186)
!5189 = !DILocation(line: 2810, column: 11, scope: !5045)
!5190 = !DILocation(line: 2811, column: 28, scope: !5186)
!5191 = !DILocation(line: 2811, column: 36, scope: !5186)
!5192 = !DILocation(line: 2811, column: 44, scope: !5186)
!5193 = !DILocation(line: 2811, column: 46, scope: !5186)
!5194 = !DILocation(line: 2811, column: 48, scope: !5186)
!5195 = !DILocation(line: 2811, column: 59, scope: !5186)
!5196 = !DILocation(line: 2811, column: 16, scope: !5186)
!5197 = !DILocation(line: 2811, column: 9, scope: !5186)
!5198 = !DILocation(line: 2812, column: 7, scope: !5045)
!5199 = !DILocation(line: 2817, column: 26, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !1, line: 2817, column: 11)
!5201 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2816, column: 5)
!5202 = !DILocation(line: 2817, column: 11, scope: !5200)
!5203 = !DILocation(line: 2817, column: 47, scope: !5200)
!5204 = !DILocation(line: 2817, column: 11, scope: !5201)
!5205 = !DILocation(line: 2819, column: 41, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5200, file: !1, line: 2818, column: 9)
!5207 = !DILocation(line: 2819, column: 49, scope: !5206)
!5208 = !DILocation(line: 2819, column: 57, scope: !5206)
!5209 = !DILocation(line: 2819, column: 59, scope: !5206)
!5210 = !DILocation(line: 2819, column: 61, scope: !5206)
!5211 = !DILocation(line: 2819, column: 71, scope: !5206)
!5212 = !DILocation(line: 2819, column: 74, scope: !5206)
!5213 = !DILocation(line: 2820, column: 13, scope: !5206)
!5214 = !DILocation(line: 2819, column: 17, scope: !5206)
!5215 = !DILocation(line: 2819, column: 16, scope: !5206)
!5216 = !DILocation(line: 2821, column: 32, scope: !5206)
!5217 = !DILocation(line: 2821, column: 18, scope: !5206)
!5218 = !DILocation(line: 2821, column: 11, scope: !5206)
!5219 = !DILocation(line: 2823, column: 26, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5201, file: !1, line: 2823, column: 11)
!5221 = !DILocation(line: 2823, column: 11, scope: !5220)
!5222 = !DILocation(line: 2823, column: 46, scope: !5220)
!5223 = !DILocation(line: 2823, column: 11, scope: !5201)
!5224 = !DILocation(line: 2825, column: 41, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !1, line: 2824, column: 9)
!5226 = !DILocation(line: 2825, column: 49, scope: !5225)
!5227 = !DILocation(line: 2825, column: 57, scope: !5225)
!5228 = !DILocation(line: 2825, column: 59, scope: !5225)
!5229 = !DILocation(line: 2825, column: 61, scope: !5225)
!5230 = !DILocation(line: 2825, column: 71, scope: !5225)
!5231 = !DILocation(line: 2825, column: 74, scope: !5225)
!5232 = !DILocation(line: 2826, column: 13, scope: !5225)
!5233 = !DILocation(line: 2825, column: 17, scope: !5225)
!5234 = !DILocation(line: 2825, column: 16, scope: !5225)
!5235 = !DILocation(line: 2827, column: 31, scope: !5225)
!5236 = !DILocation(line: 2827, column: 18, scope: !5225)
!5237 = !DILocation(line: 2827, column: 11, scope: !5225)
!5238 = !DILocation(line: 2829, column: 25, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5201, file: !1, line: 2829, column: 11)
!5240 = !DILocation(line: 2829, column: 11, scope: !5239)
!5241 = !DILocation(line: 2829, column: 51, scope: !5239)
!5242 = !DILocation(line: 2829, column: 11, scope: !5201)
!5243 = !DILocation(line: 2830, column: 9, scope: !5239)
!5244 = !DILocation(line: 2831, column: 26, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5201, file: !1, line: 2831, column: 11)
!5246 = !DILocation(line: 2831, column: 11, scope: !5245)
!5247 = !DILocation(line: 2831, column: 48, scope: !5245)
!5248 = !DILocation(line: 2831, column: 11, scope: !5201)
!5249 = !DILocation(line: 2833, column: 41, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 2832, column: 9)
!5251 = !DILocation(line: 2833, column: 49, scope: !5250)
!5252 = !DILocation(line: 2833, column: 57, scope: !5250)
!5253 = !DILocation(line: 2833, column: 59, scope: !5250)
!5254 = !DILocation(line: 2833, column: 61, scope: !5250)
!5255 = !DILocation(line: 2833, column: 71, scope: !5250)
!5256 = !DILocation(line: 2833, column: 74, scope: !5250)
!5257 = !DILocation(line: 2834, column: 13, scope: !5250)
!5258 = !DILocation(line: 2833, column: 17, scope: !5250)
!5259 = !DILocation(line: 2833, column: 16, scope: !5250)
!5260 = !DILocation(line: 2835, column: 15, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5250, file: !1, line: 2835, column: 15)
!5262 = !DILocation(line: 2835, column: 21, scope: !5261)
!5263 = !DILocation(line: 2835, column: 15, scope: !5250)
!5264 = !DILocation(line: 2836, column: 35, scope: !5261)
!5265 = !DILocation(line: 2836, column: 20, scope: !5261)
!5266 = !DILocation(line: 2836, column: 13, scope: !5261)
!5267 = !DILocation(line: 2837, column: 32, scope: !5250)
!5268 = !DILocation(line: 2837, column: 18, scope: !5250)
!5269 = !DILocation(line: 2837, column: 11, scope: !5250)
!5270 = !DILocation(line: 2839, column: 25, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5201, file: !1, line: 2839, column: 11)
!5272 = !DILocation(line: 2839, column: 11, scope: !5271)
!5273 = !DILocation(line: 2839, column: 41, scope: !5271)
!5274 = !DILocation(line: 2839, column: 11, scope: !5201)
!5275 = !DILocation(line: 2840, column: 28, scope: !5271)
!5276 = !DILocation(line: 2840, column: 36, scope: !5271)
!5277 = !DILocation(line: 2840, column: 44, scope: !5271)
!5278 = !DILocation(line: 2840, column: 46, scope: !5271)
!5279 = !DILocation(line: 2840, column: 48, scope: !5271)
!5280 = !DILocation(line: 2840, column: 59, scope: !5271)
!5281 = !DILocation(line: 2840, column: 16, scope: !5271)
!5282 = !DILocation(line: 2840, column: 9, scope: !5271)
!5283 = !DILocation(line: 2841, column: 7, scope: !5201)
!5284 = !DILocation(line: 2846, column: 25, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !1, line: 2846, column: 11)
!5286 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2845, column: 5)
!5287 = !DILocation(line: 2846, column: 11, scope: !5285)
!5288 = !DILocation(line: 2846, column: 41, scope: !5285)
!5289 = !DILocation(line: 2846, column: 11, scope: !5286)
!5290 = !DILocation(line: 2847, column: 28, scope: !5285)
!5291 = !DILocation(line: 2847, column: 36, scope: !5285)
!5292 = !DILocation(line: 2847, column: 44, scope: !5285)
!5293 = !DILocation(line: 2847, column: 46, scope: !5285)
!5294 = !DILocation(line: 2847, column: 48, scope: !5285)
!5295 = !DILocation(line: 2847, column: 59, scope: !5285)
!5296 = !DILocation(line: 2847, column: 16, scope: !5285)
!5297 = !DILocation(line: 2847, column: 9, scope: !5285)
!5298 = !DILocation(line: 2848, column: 7, scope: !5286)
!5299 = !DILocation(line: 2853, column: 25, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5301, file: !1, line: 2853, column: 11)
!5301 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2852, column: 5)
!5302 = !DILocation(line: 2853, column: 11, scope: !5300)
!5303 = !DILocation(line: 2853, column: 41, scope: !5300)
!5304 = !DILocation(line: 2853, column: 11, scope: !5301)
!5305 = !DILocation(line: 2854, column: 28, scope: !5300)
!5306 = !DILocation(line: 2854, column: 36, scope: !5300)
!5307 = !DILocation(line: 2854, column: 44, scope: !5300)
!5308 = !DILocation(line: 2854, column: 46, scope: !5300)
!5309 = !DILocation(line: 2854, column: 48, scope: !5300)
!5310 = !DILocation(line: 2854, column: 59, scope: !5300)
!5311 = !DILocation(line: 2854, column: 16, scope: !5300)
!5312 = !DILocation(line: 2854, column: 9, scope: !5300)
!5313 = !DILocation(line: 2855, column: 7, scope: !5301)
!5314 = !DILocation(line: 2860, column: 26, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !1, line: 2860, column: 11)
!5316 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2859, column: 5)
!5317 = !DILocation(line: 2860, column: 11, scope: !5315)
!5318 = !DILocation(line: 2860, column: 48, scope: !5315)
!5319 = !DILocation(line: 2860, column: 11, scope: !5316)
!5320 = !DILocation(line: 2862, column: 11, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5315, file: !1, line: 2861, column: 9)
!5322 = !DILocation(line: 2864, column: 43, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5321, file: !1, line: 2863, column: 11)
!5324 = !DILocation(line: 2864, column: 51, scope: !5323)
!5325 = !DILocation(line: 2864, column: 59, scope: !5323)
!5326 = !DILocation(line: 2864, column: 61, scope: !5323)
!5327 = !DILocation(line: 2864, column: 63, scope: !5323)
!5328 = !DILocation(line: 2864, column: 73, scope: !5323)
!5329 = !DILocation(line: 2864, column: 76, scope: !5323)
!5330 = !DILocation(line: 2865, column: 15, scope: !5323)
!5331 = !DILocation(line: 2864, column: 19, scope: !5323)
!5332 = !DILocation(line: 2864, column: 18, scope: !5323)
!5333 = !DILocation(line: 2866, column: 11, scope: !5323)
!5334 = !DILocation(line: 2866, column: 34, scope: !5321)
!5335 = !DILocation(line: 2866, column: 20, scope: !5321)
!5336 = !DILocation(line: 2866, column: 41, scope: !5321)
!5337 = distinct !{!5337, !5320, !5338}
!5338 = !DILocation(line: 2866, column: 57, scope: !5321)
!5339 = !DILocation(line: 2867, column: 19, scope: !5321)
!5340 = !DILocation(line: 2867, column: 18, scope: !5321)
!5341 = !DILocation(line: 2867, column: 11, scope: !5321)
!5342 = !DILocation(line: 2869, column: 25, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5316, file: !1, line: 2869, column: 11)
!5344 = !DILocation(line: 2869, column: 11, scope: !5343)
!5345 = !DILocation(line: 2869, column: 41, scope: !5343)
!5346 = !DILocation(line: 2869, column: 11, scope: !5316)
!5347 = !DILocation(line: 2870, column: 28, scope: !5343)
!5348 = !DILocation(line: 2870, column: 36, scope: !5343)
!5349 = !DILocation(line: 2870, column: 44, scope: !5343)
!5350 = !DILocation(line: 2870, column: 46, scope: !5343)
!5351 = !DILocation(line: 2870, column: 48, scope: !5343)
!5352 = !DILocation(line: 2870, column: 59, scope: !5343)
!5353 = !DILocation(line: 2870, column: 16, scope: !5343)
!5354 = !DILocation(line: 2870, column: 9, scope: !5343)
!5355 = !DILocation(line: 2871, column: 7, scope: !5316)
!5356 = !DILocation(line: 2876, column: 25, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !1, line: 2876, column: 11)
!5358 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2875, column: 5)
!5359 = !DILocation(line: 2876, column: 11, scope: !5357)
!5360 = !DILocation(line: 2876, column: 41, scope: !5357)
!5361 = !DILocation(line: 2876, column: 11, scope: !5358)
!5362 = !DILocation(line: 2877, column: 28, scope: !5357)
!5363 = !DILocation(line: 2877, column: 36, scope: !5357)
!5364 = !DILocation(line: 2877, column: 44, scope: !5357)
!5365 = !DILocation(line: 2877, column: 46, scope: !5357)
!5366 = !DILocation(line: 2877, column: 48, scope: !5357)
!5367 = !DILocation(line: 2877, column: 59, scope: !5357)
!5368 = !DILocation(line: 2877, column: 16, scope: !5357)
!5369 = !DILocation(line: 2877, column: 9, scope: !5357)
!5370 = !DILocation(line: 2878, column: 7, scope: !5358)
!5371 = !DILocation(line: 2883, column: 25, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !1, line: 2883, column: 11)
!5373 = distinct !DILexicalBlock(scope: !3886, file: !1, line: 2882, column: 5)
!5374 = !DILocation(line: 2883, column: 11, scope: !5372)
!5375 = !DILocation(line: 2883, column: 41, scope: !5372)
!5376 = !DILocation(line: 2883, column: 11, scope: !5373)
!5377 = !DILocation(line: 2884, column: 28, scope: !5372)
!5378 = !DILocation(line: 2884, column: 36, scope: !5372)
!5379 = !DILocation(line: 2884, column: 44, scope: !5372)
!5380 = !DILocation(line: 2884, column: 46, scope: !5372)
!5381 = !DILocation(line: 2884, column: 48, scope: !5372)
!5382 = !DILocation(line: 2884, column: 59, scope: !5372)
!5383 = !DILocation(line: 2884, column: 16, scope: !5372)
!5384 = !DILocation(line: 2884, column: 9, scope: !5372)
!5385 = !DILocation(line: 2885, column: 7, scope: !5373)
!5386 = !DILocation(line: 2888, column: 7, scope: !3886)
!5387 = !DILocation(line: 2890, column: 14, scope: !3239)
!5388 = !DILocation(line: 2890, column: 4, scope: !3239)
!5389 = !DILocation(line: 2891, column: 32, scope: !3239)
!5390 = !DILocation(line: 2891, column: 9, scope: !3239)
!5391 = !DILocation(line: 2891, column: 8, scope: !3239)
!5392 = !DILocation(line: 2892, column: 7, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 2892, column: 7)
!5394 = !DILocation(line: 2892, column: 12, scope: !5393)
!5395 = !DILocation(line: 2892, column: 9, scope: !5393)
!5396 = !DILocation(line: 2892, column: 7, scope: !3239)
!5397 = !DILocation(line: 2893, column: 24, scope: !5393)
!5398 = !DILocation(line: 2893, column: 32, scope: !5393)
!5399 = !DILocation(line: 2893, column: 40, scope: !5393)
!5400 = !DILocation(line: 2893, column: 42, scope: !5393)
!5401 = !DILocation(line: 2893, column: 44, scope: !5393)
!5402 = !DILocation(line: 2893, column: 55, scope: !5393)
!5403 = !DILocation(line: 2893, column: 12, scope: !5393)
!5404 = !DILocation(line: 2893, column: 5, scope: !5393)
!5405 = !DILocation(line: 2894, column: 10, scope: !3239)
!5406 = !DILocation(line: 2894, column: 3, scope: !3239)
!5407 = !DILocation(line: 2895, column: 1, scope: !3239)
!5408 = distinct !DISubprogram(name: "FxImage", scope: !1, file: !1, line: 3030, type: !5409, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{!1090, !821, !692, !695}
!5411 = !DILocalVariable(name: "image", arg: 1, scope: !5408, file: !1, line: 3030, type: !821)
!5412 = !DILocation(line: 3030, column: 42, scope: !5408)
!5413 = !DILocalVariable(name: "expression", arg: 2, scope: !5408, file: !1, line: 3030, type: !692)
!5414 = !DILocation(line: 3030, column: 60, scope: !5408)
!5415 = !DILocalVariable(name: "exception", arg: 3, scope: !5408, file: !1, line: 3031, type: !695)
!5416 = !DILocation(line: 3031, column: 18, scope: !5408)
!5417 = !DILocalVariable(name: "fx_image", scope: !5408, file: !1, line: 3034, type: !1090)
!5418 = !DILocation(line: 3034, column: 6, scope: !5408)
!5419 = !DILocation(line: 3036, column: 27, scope: !5408)
!5420 = !DILocation(line: 3036, column: 45, scope: !5408)
!5421 = !DILocation(line: 3036, column: 56, scope: !5408)
!5422 = !DILocation(line: 3036, column: 12, scope: !5408)
!5423 = !DILocation(line: 3036, column: 11, scope: !5408)
!5424 = !DILocation(line: 3037, column: 10, scope: !5408)
!5425 = !DILocation(line: 3037, column: 3, scope: !5408)
!5426 = distinct !DISubprogram(name: "FxImageChannel", scope: !1, file: !1, line: 3040, type: !5427, scopeLine: 3042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!1090, !821, !1518, !692, !695}
!5429 = !DILocalVariable(name: "image", arg: 1, scope: !5426, file: !1, line: 3040, type: !821)
!5430 = !DILocation(line: 3040, column: 49, scope: !5426)
!5431 = !DILocalVariable(name: "channel", arg: 2, scope: !5426, file: !1, line: 3040, type: !1518)
!5432 = !DILocation(line: 3040, column: 73, scope: !5426)
!5433 = !DILocalVariable(name: "expression", arg: 3, scope: !5426, file: !1, line: 3041, type: !692)
!5434 = !DILocation(line: 3041, column: 15, scope: !5426)
!5435 = !DILocalVariable(name: "exception", arg: 4, scope: !5426, file: !1, line: 3041, type: !695)
!5436 = !DILocation(line: 3041, column: 41, scope: !5426)
!5437 = !DILocalVariable(name: "fx_view", scope: !5426, file: !1, line: 3046, type: !1081)
!5438 = !DILocation(line: 3046, column: 6, scope: !5426)
!5439 = !DILocalVariable(name: "fx_info", scope: !5426, file: !1, line: 3049, type: !5440)
!5440 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1100)
!5441 = !DILocation(line: 3049, column: 16, scope: !5426)
!5442 = !DILocalVariable(name: "fx_image", scope: !5426, file: !1, line: 3052, type: !1090)
!5443 = !DILocation(line: 3052, column: 6, scope: !5426)
!5444 = !DILocalVariable(name: "status", scope: !5426, file: !1, line: 3055, type: !709)
!5445 = !DILocation(line: 3055, column: 5, scope: !5426)
!5446 = !DILocalVariable(name: "progress", scope: !5426, file: !1, line: 3058, type: !950)
!5447 = !DILocation(line: 3058, column: 5, scope: !5426)
!5448 = !DILocalVariable(name: "y", scope: !5426, file: !1, line: 3061, type: !880)
!5449 = !DILocation(line: 3061, column: 5, scope: !5426)
!5450 = !DILocation(line: 3065, column: 7, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3065, column: 7)
!5452 = !DILocation(line: 3065, column: 14, scope: !5451)
!5453 = !DILocation(line: 3065, column: 20, scope: !5451)
!5454 = !DILocation(line: 3065, column: 7, scope: !5426)
!5455 = !DILocation(line: 3066, column: 61, scope: !5451)
!5456 = !DILocation(line: 3066, column: 68, scope: !5451)
!5457 = !DILocation(line: 3066, column: 12, scope: !5451)
!5458 = !DILocation(line: 3066, column: 5, scope: !5451)
!5459 = !DILocation(line: 3067, column: 30, scope: !5426)
!5460 = !DILocation(line: 3067, column: 36, scope: !5426)
!5461 = !DILocation(line: 3067, column: 47, scope: !5426)
!5462 = !DILocation(line: 3067, column: 11, scope: !5426)
!5463 = !DILocation(line: 3067, column: 10, scope: !5426)
!5464 = !DILocation(line: 3068, column: 7, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3068, column: 7)
!5466 = !DILocation(line: 3068, column: 15, scope: !5465)
!5467 = !DILocation(line: 3068, column: 7, scope: !5426)
!5468 = !DILocation(line: 3069, column: 5, scope: !5465)
!5469 = !DILocation(line: 3070, column: 23, scope: !5426)
!5470 = !DILocation(line: 3070, column: 44, scope: !5426)
!5471 = !DILocation(line: 3070, column: 12, scope: !5426)
!5472 = !DILocation(line: 3070, column: 11, scope: !5426)
!5473 = !DILocation(line: 3071, column: 7, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3071, column: 7)
!5475 = !DILocation(line: 3071, column: 16, scope: !5474)
!5476 = !DILocation(line: 3071, column: 7, scope: !5426)
!5477 = !DILocation(line: 3073, column: 34, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !1, line: 3072, column: 5)
!5479 = !DILocation(line: 3073, column: 15, scope: !5478)
!5480 = !DILocation(line: 3073, column: 14, scope: !5478)
!5481 = !DILocation(line: 3074, column: 7, scope: !5478)
!5482 = !DILocation(line: 3076, column: 28, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3076, column: 7)
!5484 = !DILocation(line: 3076, column: 7, scope: !5483)
!5485 = !DILocation(line: 3076, column: 50, scope: !5483)
!5486 = !DILocation(line: 3076, column: 7, scope: !5426)
!5487 = !DILocation(line: 3078, column: 24, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 3077, column: 5)
!5489 = !DILocation(line: 3078, column: 35, scope: !5488)
!5490 = !DILocation(line: 3078, column: 45, scope: !5488)
!5491 = !DILocation(line: 3078, column: 7, scope: !5488)
!5492 = !DILocation(line: 3079, column: 34, scope: !5488)
!5493 = !DILocation(line: 3079, column: 15, scope: !5488)
!5494 = !DILocation(line: 3079, column: 14, scope: !5488)
!5495 = !DILocation(line: 3080, column: 29, scope: !5488)
!5496 = !DILocation(line: 3080, column: 16, scope: !5488)
!5497 = !DILocation(line: 3080, column: 15, scope: !5488)
!5498 = !DILocation(line: 3081, column: 7, scope: !5488)
!5499 = !DILocation(line: 3086, column: 9, scope: !5426)
!5500 = !DILocation(line: 3087, column: 11, scope: !5426)
!5501 = !DILocation(line: 3088, column: 37, scope: !5426)
!5502 = !DILocation(line: 3088, column: 46, scope: !5426)
!5503 = !DILocation(line: 3088, column: 11, scope: !5426)
!5504 = !DILocation(line: 3088, column: 10, scope: !5426)
!5505 = !DILocation(line: 3093, column: 9, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3093, column: 3)
!5507 = !DILocation(line: 3093, column: 8, scope: !5506)
!5508 = !DILocation(line: 3093, column: 13, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !1, line: 3093, column: 3)
!5510 = !DILocation(line: 3093, column: 27, scope: !5509)
!5511 = !DILocation(line: 3093, column: 37, scope: !5509)
!5512 = !DILocation(line: 3093, column: 15, scope: !5509)
!5513 = !DILocation(line: 3093, column: 3, scope: !5506)
!5514 = !DILocalVariable(name: "id", scope: !5515, file: !1, line: 3096, type: !1625)
!5515 = distinct !DILexicalBlock(scope: !5509, file: !1, line: 3094, column: 3)
!5516 = !DILocation(line: 3096, column: 7, scope: !5515)
!5517 = !DILocation(line: 3096, column: 12, scope: !5515)
!5518 = !DILocalVariable(name: "alpha", scope: !5515, file: !1, line: 3099, type: !856)
!5519 = !DILocation(line: 3099, column: 7, scope: !5515)
!5520 = !DILocalVariable(name: "fx_indexes", scope: !5515, file: !1, line: 3102, type: !1637)
!5521 = !DILocation(line: 3102, column: 17, scope: !5515)
!5522 = !DILocalVariable(name: "x", scope: !5515, file: !1, line: 3105, type: !880)
!5523 = !DILocation(line: 3105, column: 7, scope: !5515)
!5524 = !DILocalVariable(name: "q", scope: !5515, file: !1, line: 3108, type: !1642)
!5525 = !DILocation(line: 3108, column: 17, scope: !5515)
!5526 = !DILocation(line: 3110, column: 9, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 3110, column: 9)
!5528 = !DILocation(line: 3110, column: 16, scope: !5527)
!5529 = !DILocation(line: 3110, column: 9, scope: !5515)
!5530 = !DILocation(line: 3111, column: 7, scope: !5527)
!5531 = !DILocation(line: 3112, column: 35, scope: !5515)
!5532 = !DILocation(line: 3112, column: 45, scope: !5515)
!5533 = !DILocation(line: 3112, column: 47, scope: !5515)
!5534 = !DILocation(line: 3112, column: 57, scope: !5515)
!5535 = !DILocation(line: 3112, column: 67, scope: !5515)
!5536 = !DILocation(line: 3112, column: 7, scope: !5515)
!5537 = !DILocation(line: 3112, column: 6, scope: !5515)
!5538 = !DILocation(line: 3113, column: 9, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 3113, column: 9)
!5540 = !DILocation(line: 3113, column: 11, scope: !5539)
!5541 = !DILocation(line: 3113, column: 9, scope: !5515)
!5542 = !DILocation(line: 3115, column: 15, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 3114, column: 7)
!5544 = !DILocation(line: 3116, column: 9, scope: !5543)
!5545 = !DILocation(line: 3118, column: 48, scope: !5515)
!5546 = !DILocation(line: 3118, column: 16, scope: !5515)
!5547 = !DILocation(line: 3118, column: 15, scope: !5515)
!5548 = !DILocation(line: 3119, column: 10, scope: !5515)
!5549 = !DILocation(line: 3120, column: 11, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 3120, column: 5)
!5551 = !DILocation(line: 3120, column: 10, scope: !5550)
!5552 = !DILocation(line: 3120, column: 15, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5550, file: !1, line: 3120, column: 5)
!5554 = !DILocation(line: 3120, column: 29, scope: !5553)
!5555 = !DILocation(line: 3120, column: 39, scope: !5553)
!5556 = !DILocation(line: 3120, column: 17, scope: !5553)
!5557 = !DILocation(line: 3120, column: 5, scope: !5550)
!5558 = !DILocation(line: 3122, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 3122, column: 11)
!5560 = distinct !DILexicalBlock(scope: !5553, file: !1, line: 3121, column: 5)
!5561 = !DILocation(line: 3122, column: 20, scope: !5559)
!5562 = !DILocation(line: 3122, column: 34, scope: !5559)
!5563 = !DILocation(line: 3122, column: 11, scope: !5560)
!5564 = !DILocation(line: 3124, column: 46, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 3123, column: 9)
!5566 = !DILocation(line: 3124, column: 54, scope: !5565)
!5567 = !DILocation(line: 3124, column: 69, scope: !5565)
!5568 = !DILocation(line: 3124, column: 71, scope: !5565)
!5569 = !DILocation(line: 3125, column: 20, scope: !5565)
!5570 = !DILocation(line: 3124, column: 18, scope: !5565)
!5571 = !DILocation(line: 3126, column: 11, scope: !5565)
!5572 = !DILocation(line: 3127, column: 9, scope: !5565)
!5573 = !DILocation(line: 3128, column: 12, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 3128, column: 11)
!5575 = !DILocation(line: 3128, column: 20, scope: !5574)
!5576 = !DILocation(line: 3128, column: 36, scope: !5574)
!5577 = !DILocation(line: 3128, column: 11, scope: !5560)
!5578 = !DILocation(line: 3130, column: 46, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !1, line: 3129, column: 9)
!5580 = !DILocation(line: 3130, column: 54, scope: !5579)
!5581 = !DILocation(line: 3130, column: 71, scope: !5579)
!5582 = !DILocation(line: 3130, column: 73, scope: !5579)
!5583 = !DILocation(line: 3131, column: 20, scope: !5579)
!5584 = !DILocation(line: 3130, column: 18, scope: !5579)
!5585 = !DILocation(line: 3132, column: 11, scope: !5579)
!5586 = !DILocation(line: 3133, column: 9, scope: !5579)
!5587 = !DILocation(line: 3134, column: 12, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 3134, column: 11)
!5589 = !DILocation(line: 3134, column: 20, scope: !5588)
!5590 = !DILocation(line: 3134, column: 35, scope: !5588)
!5591 = !DILocation(line: 3134, column: 11, scope: !5560)
!5592 = !DILocation(line: 3136, column: 46, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5588, file: !1, line: 3135, column: 9)
!5594 = !DILocation(line: 3136, column: 54, scope: !5593)
!5595 = !DILocation(line: 3136, column: 70, scope: !5593)
!5596 = !DILocation(line: 3136, column: 72, scope: !5593)
!5597 = !DILocation(line: 3137, column: 20, scope: !5593)
!5598 = !DILocation(line: 3136, column: 18, scope: !5593)
!5599 = !DILocation(line: 3138, column: 11, scope: !5593)
!5600 = !DILocation(line: 3139, column: 9, scope: !5593)
!5601 = !DILocation(line: 3140, column: 12, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 3140, column: 11)
!5603 = !DILocation(line: 3140, column: 20, scope: !5602)
!5604 = !DILocation(line: 3140, column: 38, scope: !5602)
!5605 = !DILocation(line: 3140, column: 11, scope: !5560)
!5606 = !DILocation(line: 3142, column: 46, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5602, file: !1, line: 3141, column: 9)
!5608 = !DILocation(line: 3142, column: 54, scope: !5607)
!5609 = !DILocation(line: 3142, column: 73, scope: !5607)
!5610 = !DILocation(line: 3142, column: 75, scope: !5607)
!5611 = !DILocation(line: 3143, column: 20, scope: !5607)
!5612 = !DILocation(line: 3142, column: 18, scope: !5607)
!5613 = !DILocation(line: 3144, column: 15, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5607, file: !1, line: 3144, column: 15)
!5615 = !DILocation(line: 3144, column: 22, scope: !5614)
!5616 = !DILocation(line: 3144, column: 28, scope: !5614)
!5617 = !DILocation(line: 3144, column: 15, scope: !5607)
!5618 = !DILocation(line: 3145, column: 13, scope: !5614)
!5619 = !DILocation(line: 3148, column: 13, scope: !5614)
!5620 = !DILocation(line: 3150, column: 9, scope: !5607)
!5621 = !DILocation(line: 3151, column: 13, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 3151, column: 11)
!5623 = !DILocation(line: 3151, column: 21, scope: !5622)
!5624 = !DILocation(line: 3151, column: 37, scope: !5622)
!5625 = !DILocation(line: 3151, column: 43, scope: !5622)
!5626 = !DILocation(line: 3152, column: 12, scope: !5622)
!5627 = !DILocation(line: 3152, column: 22, scope: !5622)
!5628 = !DILocation(line: 3152, column: 33, scope: !5622)
!5629 = !DILocation(line: 3151, column: 11, scope: !5560)
!5630 = !DILocation(line: 3154, column: 46, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5622, file: !1, line: 3153, column: 9)
!5632 = !DILocation(line: 3154, column: 54, scope: !5631)
!5633 = !DILocation(line: 3154, column: 71, scope: !5631)
!5634 = !DILocation(line: 3154, column: 73, scope: !5631)
!5635 = !DILocation(line: 3155, column: 20, scope: !5631)
!5636 = !DILocation(line: 3154, column: 18, scope: !5631)
!5637 = !DILocation(line: 3156, column: 11, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !1, line: 3156, column: 11)
!5639 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 3156, column: 11)
!5640 = !DILocation(line: 3156, column: 11, scope: !5639)
!5641 = !DILocation(line: 3158, column: 9, scope: !5631)
!5642 = !DILocation(line: 3159, column: 8, scope: !5560)
!5643 = !DILocation(line: 3160, column: 5, scope: !5560)
!5644 = !DILocation(line: 3120, column: 49, scope: !5553)
!5645 = !DILocation(line: 3120, column: 5, scope: !5553)
!5646 = distinct !{!5646, !5557, !5647}
!5647 = !DILocation(line: 3160, column: 5, scope: !5550)
!5648 = !DILocation(line: 3161, column: 38, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 3161, column: 9)
!5650 = !DILocation(line: 3161, column: 46, scope: !5649)
!5651 = !DILocation(line: 3161, column: 9, scope: !5649)
!5652 = !DILocation(line: 3161, column: 57, scope: !5649)
!5653 = !DILocation(line: 3161, column: 9, scope: !5515)
!5654 = !DILocation(line: 3162, column: 13, scope: !5649)
!5655 = !DILocation(line: 3162, column: 7, scope: !5649)
!5656 = !DILocation(line: 3163, column: 9, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5515, file: !1, line: 3163, column: 9)
!5658 = !DILocation(line: 3163, column: 16, scope: !5657)
!5659 = !DILocation(line: 3163, column: 33, scope: !5657)
!5660 = !DILocation(line: 3163, column: 9, scope: !5515)
!5661 = !DILocalVariable(name: "proceed", scope: !5662, file: !1, line: 3166, type: !709)
!5662 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 3164, column: 7)
!5663 = !DILocation(line: 3166, column: 11, scope: !5662)
!5664 = !DILocation(line: 3171, column: 34, scope: !5662)
!5665 = !DILocation(line: 3171, column: 59, scope: !5662)
!5666 = !DILocation(line: 3171, column: 62, scope: !5662)
!5667 = !DILocation(line: 3171, column: 69, scope: !5662)
!5668 = !DILocation(line: 3171, column: 17, scope: !5662)
!5669 = !DILocation(line: 3171, column: 16, scope: !5662)
!5670 = !DILocation(line: 3172, column: 13, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5662, file: !1, line: 3172, column: 13)
!5672 = !DILocation(line: 3172, column: 21, scope: !5671)
!5673 = !DILocation(line: 3172, column: 13, scope: !5662)
!5674 = !DILocation(line: 3173, column: 17, scope: !5671)
!5675 = !DILocation(line: 3173, column: 11, scope: !5671)
!5676 = !DILocation(line: 3174, column: 7, scope: !5662)
!5677 = !DILocation(line: 3175, column: 3, scope: !5515)
!5678 = !DILocation(line: 3093, column: 44, scope: !5509)
!5679 = !DILocation(line: 3093, column: 3, scope: !5509)
!5680 = distinct !{!5680, !5513, !5681}
!5681 = !DILocation(line: 3175, column: 3, scope: !5506)
!5682 = !DILocation(line: 3176, column: 28, scope: !5426)
!5683 = !DILocation(line: 3176, column: 11, scope: !5426)
!5684 = !DILocation(line: 3176, column: 10, scope: !5426)
!5685 = !DILocation(line: 3177, column: 30, scope: !5426)
!5686 = !DILocation(line: 3177, column: 11, scope: !5426)
!5687 = !DILocation(line: 3177, column: 10, scope: !5426)
!5688 = !DILocation(line: 3178, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 3178, column: 7)
!5690 = !DILocation(line: 3178, column: 14, scope: !5689)
!5691 = !DILocation(line: 3178, column: 7, scope: !5426)
!5692 = !DILocation(line: 3179, column: 27, scope: !5689)
!5693 = !DILocation(line: 3179, column: 14, scope: !5689)
!5694 = !DILocation(line: 3179, column: 13, scope: !5689)
!5695 = !DILocation(line: 3179, column: 5, scope: !5689)
!5696 = !DILocation(line: 3180, column: 10, scope: !5426)
!5697 = !DILocation(line: 3180, column: 3, scope: !5426)
!5698 = !DILocation(line: 3181, column: 1, scope: !5426)
!5699 = distinct !DISubprogram(name: "AcquireFxThreadSet", scope: !1, file: !1, line: 2981, type: !5700, scopeLine: 2983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!1100, !821, !692, !695}
!5702 = !DILocalVariable(name: "image", arg: 1, scope: !5699, file: !1, line: 2981, type: !821)
!5703 = !DILocation(line: 2981, column: 49, scope: !5699)
!5704 = !DILocalVariable(name: "expression", arg: 2, scope: !5699, file: !1, line: 2981, type: !692)
!5705 = !DILocation(line: 2981, column: 67, scope: !5699)
!5706 = !DILocalVariable(name: "exception", arg: 3, scope: !5699, file: !1, line: 2982, type: !695)
!5707 = !DILocation(line: 2982, column: 18, scope: !5699)
!5708 = !DILocalVariable(name: "fx_expression", scope: !5699, file: !1, line: 2985, type: !704)
!5709 = !DILocation(line: 2985, column: 6, scope: !5699)
!5710 = !DILocalVariable(name: "alpha", scope: !5699, file: !1, line: 2988, type: !856)
!5711 = !DILocation(line: 2988, column: 5, scope: !5699)
!5712 = !DILocalVariable(name: "fx_info", scope: !5699, file: !1, line: 2991, type: !1100)
!5713 = !DILocation(line: 2991, column: 7, scope: !5699)
!5714 = !DILocalVariable(name: "i", scope: !5699, file: !1, line: 2994, type: !880)
!5715 = !DILocation(line: 2994, column: 5, scope: !5699)
!5716 = !DILocalVariable(name: "number_threads", scope: !5699, file: !1, line: 2997, type: !716)
!5717 = !DILocation(line: 2997, column: 5, scope: !5699)
!5718 = !DILocation(line: 2999, column: 27, scope: !5699)
!5719 = !DILocation(line: 2999, column: 17, scope: !5699)
!5720 = !DILocation(line: 3000, column: 44, scope: !5699)
!5721 = !DILocation(line: 3000, column: 23, scope: !5699)
!5722 = !DILocation(line: 3000, column: 11, scope: !5699)
!5723 = !DILocation(line: 3000, column: 10, scope: !5699)
!5724 = !DILocation(line: 3001, column: 7, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5699, file: !1, line: 3001, column: 7)
!5726 = !DILocation(line: 3001, column: 15, scope: !5725)
!5727 = !DILocation(line: 3001, column: 7, scope: !5699)
!5728 = !DILocation(line: 3003, column: 35, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 3002, column: 5)
!5730 = !DILocation(line: 3004, column: 60, scope: !5729)
!5731 = !DILocation(line: 3004, column: 67, scope: !5729)
!5732 = !DILocation(line: 3003, column: 14, scope: !5729)
!5733 = !DILocation(line: 3005, column: 7, scope: !5729)
!5734 = !DILocation(line: 3007, column: 28, scope: !5699)
!5735 = !DILocation(line: 3007, column: 38, scope: !5699)
!5736 = !DILocation(line: 3007, column: 52, scope: !5699)
!5737 = !DILocation(line: 3007, column: 10, scope: !5699)
!5738 = !DILocation(line: 3008, column: 8, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5699, file: !1, line: 3008, column: 7)
!5740 = !DILocation(line: 3008, column: 7, scope: !5739)
!5741 = !DILocation(line: 3008, column: 19, scope: !5739)
!5742 = !DILocation(line: 3008, column: 7, scope: !5699)
!5743 = !DILocation(line: 3009, column: 34, scope: !5739)
!5744 = !DILocation(line: 3009, column: 19, scope: !5739)
!5745 = !DILocation(line: 3009, column: 18, scope: !5739)
!5746 = !DILocation(line: 3009, column: 5, scope: !5739)
!5747 = !DILocation(line: 3011, column: 32, scope: !5739)
!5748 = !DILocation(line: 3011, column: 42, scope: !5739)
!5749 = !DILocation(line: 3011, column: 50, scope: !5739)
!5750 = !DILocation(line: 3011, column: 19, scope: !5739)
!5751 = !DILocation(line: 3011, column: 18, scope: !5739)
!5752 = !DILocation(line: 3012, column: 9, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5699, file: !1, line: 3012, column: 3)
!5754 = !DILocation(line: 3012, column: 8, scope: !5753)
!5755 = !DILocation(line: 3012, column: 13, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5753, file: !1, line: 3012, column: 3)
!5757 = !DILocation(line: 3012, column: 27, scope: !5756)
!5758 = !DILocation(line: 3012, column: 15, scope: !5756)
!5759 = !DILocation(line: 3012, column: 3, scope: !5753)
!5760 = !DILocalVariable(name: "status", scope: !5761, file: !1, line: 3015, type: !709)
!5761 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 3013, column: 3)
!5762 = !DILocation(line: 3015, column: 7, scope: !5761)
!5763 = !DILocation(line: 3017, column: 30, scope: !5761)
!5764 = !DILocation(line: 3017, column: 36, scope: !5761)
!5765 = !DILocation(line: 3017, column: 16, scope: !5761)
!5766 = !DILocation(line: 3017, column: 5, scope: !5761)
!5767 = !DILocation(line: 3017, column: 13, scope: !5761)
!5768 = !DILocation(line: 3017, column: 15, scope: !5761)
!5769 = !DILocation(line: 3018, column: 9, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5761, file: !1, line: 3018, column: 9)
!5771 = !DILocation(line: 3018, column: 17, scope: !5770)
!5772 = !DILocation(line: 3018, column: 20, scope: !5770)
!5773 = !DILocation(line: 3018, column: 9, scope: !5761)
!5774 = !DILocation(line: 3019, column: 7, scope: !5770)
!5775 = !DILocation(line: 3020, column: 35, scope: !5761)
!5776 = !DILocation(line: 3020, column: 43, scope: !5761)
!5777 = !DILocation(line: 3020, column: 53, scope: !5761)
!5778 = !DILocation(line: 3020, column: 12, scope: !5761)
!5779 = !DILocation(line: 3020, column: 11, scope: !5761)
!5780 = !DILocation(line: 3021, column: 9, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5761, file: !1, line: 3021, column: 9)
!5782 = !DILocation(line: 3021, column: 16, scope: !5781)
!5783 = !DILocation(line: 3021, column: 9, scope: !5761)
!5784 = !DILocation(line: 3022, column: 7, scope: !5781)
!5785 = !DILocation(line: 3023, column: 3, scope: !5761)
!5786 = !DILocation(line: 3012, column: 44, scope: !5756)
!5787 = !DILocation(line: 3012, column: 3, scope: !5756)
!5788 = distinct !{!5788, !5759, !5789}
!5789 = !DILocation(line: 3023, column: 3, scope: !5753)
!5790 = !DILocation(line: 3024, column: 31, scope: !5699)
!5791 = !DILocation(line: 3024, column: 17, scope: !5699)
!5792 = !DILocation(line: 3024, column: 16, scope: !5699)
!5793 = !DILocation(line: 3025, column: 7, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5699, file: !1, line: 3025, column: 7)
!5795 = !DILocation(line: 3025, column: 21, scope: !5794)
!5796 = !DILocation(line: 3025, column: 9, scope: !5794)
!5797 = !DILocation(line: 3025, column: 7, scope: !5699)
!5798 = !DILocation(line: 3026, column: 32, scope: !5794)
!5799 = !DILocation(line: 3026, column: 13, scope: !5794)
!5800 = !DILocation(line: 3026, column: 12, scope: !5794)
!5801 = !DILocation(line: 3026, column: 5, scope: !5794)
!5802 = !DILocation(line: 3027, column: 10, scope: !5699)
!5803 = !DILocation(line: 3027, column: 3, scope: !5699)
!5804 = !DILocation(line: 3028, column: 1, scope: !5699)
!5805 = distinct !DISubprogram(name: "DestroyFxThreadSet", scope: !1, file: !1, line: 2968, type: !5806, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!1100, !1100}
!5808 = !DILocalVariable(name: "fx_info", arg: 1, scope: !5805, file: !1, line: 2968, type: !1100)
!5809 = !DILocation(line: 2968, column: 45, scope: !5805)
!5810 = !DILocalVariable(name: "i", scope: !5805, file: !1, line: 2971, type: !880)
!5811 = !DILocation(line: 2971, column: 5, scope: !5805)
!5812 = !DILocation(line: 2974, column: 9, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5805, file: !1, line: 2974, column: 3)
!5814 = !DILocation(line: 2974, column: 8, scope: !5813)
!5815 = !DILocation(line: 2974, column: 13, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5813, file: !1, line: 2974, column: 3)
!5817 = !DILocation(line: 2974, column: 27, scope: !5816)
!5818 = !DILocation(line: 2974, column: 15, scope: !5816)
!5819 = !DILocation(line: 2974, column: 3, scope: !5813)
!5820 = !DILocation(line: 2975, column: 9, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5816, file: !1, line: 2975, column: 9)
!5822 = !DILocation(line: 2975, column: 17, scope: !5821)
!5823 = !DILocation(line: 2975, column: 20, scope: !5821)
!5824 = !DILocation(line: 2975, column: 9, scope: !5816)
!5825 = !DILocation(line: 2976, column: 32, scope: !5821)
!5826 = !DILocation(line: 2976, column: 40, scope: !5821)
!5827 = !DILocation(line: 2976, column: 18, scope: !5821)
!5828 = !DILocation(line: 2976, column: 7, scope: !5821)
!5829 = !DILocation(line: 2976, column: 15, scope: !5821)
!5830 = !DILocation(line: 2976, column: 17, scope: !5821)
!5831 = !DILocation(line: 2975, column: 34, scope: !5821)
!5832 = !DILocation(line: 2974, column: 68, scope: !5816)
!5833 = !DILocation(line: 2974, column: 3, scope: !5816)
!5834 = distinct !{!5834, !5819, !5835}
!5835 = !DILocation(line: 2976, column: 42, scope: !5813)
!5836 = !DILocation(line: 2977, column: 46, scope: !5805)
!5837 = !DILocation(line: 2977, column: 23, scope: !5805)
!5838 = !DILocation(line: 2977, column: 11, scope: !5805)
!5839 = !DILocation(line: 2977, column: 10, scope: !5805)
!5840 = !DILocation(line: 2978, column: 10, scope: !5805)
!5841 = !DILocation(line: 2978, column: 3, scope: !5805)
!5842 = distinct !DISubprogram(name: "ImplodeImage", scope: !1, file: !1, line: 3217, type: !1984, scopeLine: 3219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5843 = !DILocalVariable(name: "image", arg: 1, scope: !5842, file: !1, line: 3217, type: !821)
!5844 = !DILocation(line: 3217, column: 47, scope: !5842)
!5845 = !DILocalVariable(name: "amount", arg: 2, scope: !5842, file: !1, line: 3217, type: !1986)
!5846 = !DILocation(line: 3217, column: 66, scope: !5842)
!5847 = !DILocalVariable(name: "exception", arg: 3, scope: !5842, file: !1, line: 3218, type: !695)
!5848 = !DILocation(line: 3218, column: 18, scope: !5842)
!5849 = !DILocalVariable(name: "image_view", scope: !5842, file: !1, line: 3223, type: !1081)
!5850 = !DILocation(line: 3223, column: 6, scope: !5842)
!5851 = !DILocalVariable(name: "implode_view", scope: !5842, file: !1, line: 3224, type: !1081)
!5852 = !DILocation(line: 3224, column: 6, scope: !5842)
!5853 = !DILocalVariable(name: "radius", scope: !5842, file: !1, line: 3227, type: !856)
!5854 = !DILocation(line: 3227, column: 5, scope: !5842)
!5855 = !DILocalVariable(name: "implode_image", scope: !5842, file: !1, line: 3230, type: !1090)
!5856 = !DILocation(line: 3230, column: 6, scope: !5842)
!5857 = !DILocalVariable(name: "status", scope: !5842, file: !1, line: 3233, type: !709)
!5858 = !DILocation(line: 3233, column: 5, scope: !5842)
!5859 = !DILocalVariable(name: "progress", scope: !5842, file: !1, line: 3236, type: !950)
!5860 = !DILocation(line: 3236, column: 5, scope: !5842)
!5861 = !DILocalVariable(name: "zero", scope: !5842, file: !1, line: 3239, type: !1223)
!5862 = !DILocation(line: 3239, column: 5, scope: !5842)
!5863 = !DILocalVariable(name: "center", scope: !5842, file: !1, line: 3242, type: !1243)
!5864 = !DILocation(line: 3242, column: 5, scope: !5842)
!5865 = !DILocalVariable(name: "scale", scope: !5842, file: !1, line: 3243, type: !1243)
!5866 = !DILocation(line: 3243, column: 5, scope: !5842)
!5867 = !DILocalVariable(name: "y", scope: !5842, file: !1, line: 3246, type: !880)
!5868 = !DILocation(line: 3246, column: 5, scope: !5842)
!5869 = !DILocation(line: 3253, column: 7, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3253, column: 7)
!5871 = !DILocation(line: 3253, column: 14, scope: !5870)
!5872 = !DILocation(line: 3253, column: 20, scope: !5870)
!5873 = !DILocation(line: 3253, column: 7, scope: !5842)
!5874 = !DILocation(line: 3254, column: 61, scope: !5870)
!5875 = !DILocation(line: 3254, column: 68, scope: !5870)
!5876 = !DILocation(line: 3254, column: 12, scope: !5870)
!5877 = !DILocation(line: 3254, column: 5, scope: !5870)
!5878 = !DILocation(line: 3257, column: 28, scope: !5842)
!5879 = !DILocation(line: 3257, column: 49, scope: !5842)
!5880 = !DILocation(line: 3257, column: 17, scope: !5842)
!5881 = !DILocation(line: 3257, column: 16, scope: !5842)
!5882 = !DILocation(line: 3258, column: 7, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3258, column: 7)
!5884 = !DILocation(line: 3258, column: 21, scope: !5883)
!5885 = !DILocation(line: 3258, column: 7, scope: !5842)
!5886 = !DILocation(line: 3259, column: 5, scope: !5883)
!5887 = !DILocation(line: 3260, column: 28, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3260, column: 7)
!5889 = !DILocation(line: 3260, column: 7, scope: !5888)
!5890 = !DILocation(line: 3260, column: 55, scope: !5888)
!5891 = !DILocation(line: 3260, column: 7, scope: !5842)
!5892 = !DILocation(line: 3262, column: 24, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !1, line: 3261, column: 5)
!5894 = !DILocation(line: 3262, column: 35, scope: !5893)
!5895 = !DILocation(line: 3262, column: 50, scope: !5893)
!5896 = !DILocation(line: 3262, column: 7, scope: !5893)
!5897 = !DILocation(line: 3263, column: 34, scope: !5893)
!5898 = !DILocation(line: 3263, column: 21, scope: !5893)
!5899 = !DILocation(line: 3263, column: 20, scope: !5893)
!5900 = !DILocation(line: 3264, column: 7, scope: !5893)
!5901 = !DILocation(line: 3266, column: 7, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3266, column: 7)
!5903 = !DILocation(line: 3266, column: 22, scope: !5902)
!5904 = !DILocation(line: 3266, column: 39, scope: !5902)
!5905 = !DILocation(line: 3266, column: 47, scope: !5902)
!5906 = !DILocation(line: 3266, column: 7, scope: !5842)
!5907 = !DILocation(line: 3267, column: 5, scope: !5902)
!5908 = !DILocation(line: 3267, column: 20, scope: !5902)
!5909 = !DILocation(line: 3267, column: 25, scope: !5902)
!5910 = !DILocation(line: 3271, column: 9, scope: !5842)
!5911 = !DILocation(line: 3271, column: 10, scope: !5842)
!5912 = !DILocation(line: 3272, column: 9, scope: !5842)
!5913 = !DILocation(line: 3272, column: 10, scope: !5842)
!5914 = !DILocation(line: 3273, column: 16, scope: !5842)
!5915 = !DILocation(line: 3273, column: 23, scope: !5842)
!5916 = !DILocation(line: 3273, column: 15, scope: !5842)
!5917 = !DILocation(line: 3273, column: 10, scope: !5842)
!5918 = !DILocation(line: 3273, column: 11, scope: !5842)
!5919 = !DILocation(line: 3274, column: 16, scope: !5842)
!5920 = !DILocation(line: 3274, column: 23, scope: !5842)
!5921 = !DILocation(line: 3274, column: 15, scope: !5842)
!5922 = !DILocation(line: 3274, column: 10, scope: !5842)
!5923 = !DILocation(line: 3274, column: 11, scope: !5842)
!5924 = !DILocation(line: 3275, column: 17, scope: !5842)
!5925 = !DILocation(line: 3275, column: 9, scope: !5842)
!5926 = !DILocation(line: 3276, column: 7, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3276, column: 7)
!5928 = !DILocation(line: 3276, column: 14, scope: !5927)
!5929 = !DILocation(line: 3276, column: 24, scope: !5927)
!5930 = !DILocation(line: 3276, column: 31, scope: !5927)
!5931 = !DILocation(line: 3276, column: 22, scope: !5927)
!5932 = !DILocation(line: 3276, column: 7, scope: !5842)
!5933 = !DILocation(line: 3277, column: 22, scope: !5927)
!5934 = !DILocation(line: 3277, column: 29, scope: !5927)
!5935 = !DILocation(line: 3277, column: 13, scope: !5927)
!5936 = !DILocation(line: 3277, column: 46, scope: !5927)
!5937 = !DILocation(line: 3277, column: 53, scope: !5927)
!5938 = !DILocation(line: 3277, column: 37, scope: !5927)
!5939 = !DILocation(line: 3277, column: 36, scope: !5927)
!5940 = !DILocation(line: 3277, column: 11, scope: !5927)
!5941 = !DILocation(line: 3277, column: 12, scope: !5927)
!5942 = !DILocation(line: 3277, column: 5, scope: !5927)
!5943 = !DILocation(line: 3279, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5927, file: !1, line: 3279, column: 9)
!5945 = !DILocation(line: 3279, column: 16, scope: !5944)
!5946 = !DILocation(line: 3279, column: 26, scope: !5944)
!5947 = !DILocation(line: 3279, column: 33, scope: !5944)
!5948 = !DILocation(line: 3279, column: 24, scope: !5944)
!5949 = !DILocation(line: 3279, column: 9, scope: !5927)
!5950 = !DILocation(line: 3281, column: 26, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5944, file: !1, line: 3280, column: 7)
!5952 = !DILocation(line: 3281, column: 33, scope: !5951)
!5953 = !DILocation(line: 3281, column: 17, scope: !5951)
!5954 = !DILocation(line: 3281, column: 47, scope: !5951)
!5955 = !DILocation(line: 3281, column: 54, scope: !5951)
!5956 = !DILocation(line: 3281, column: 38, scope: !5951)
!5957 = !DILocation(line: 3281, column: 37, scope: !5951)
!5958 = !DILocation(line: 3281, column: 15, scope: !5951)
!5959 = !DILocation(line: 3281, column: 16, scope: !5951)
!5960 = !DILocation(line: 3282, column: 23, scope: !5951)
!5961 = !DILocation(line: 3282, column: 15, scope: !5951)
!5962 = !DILocation(line: 3283, column: 7, scope: !5951)
!5963 = !DILocation(line: 3287, column: 9, scope: !5842)
!5964 = !DILocation(line: 3288, column: 11, scope: !5842)
!5965 = !DILocation(line: 3289, column: 24, scope: !5842)
!5966 = !DILocation(line: 3289, column: 3, scope: !5842)
!5967 = !DILocation(line: 3290, column: 38, scope: !5842)
!5968 = !DILocation(line: 3290, column: 44, scope: !5842)
!5969 = !DILocation(line: 3290, column: 14, scope: !5842)
!5970 = !DILocation(line: 3290, column: 13, scope: !5842)
!5971 = !DILocation(line: 3291, column: 42, scope: !5842)
!5972 = !DILocation(line: 3291, column: 56, scope: !5842)
!5973 = !DILocation(line: 3291, column: 16, scope: !5842)
!5974 = !DILocation(line: 3291, column: 15, scope: !5842)
!5975 = !DILocation(line: 3296, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3296, column: 3)
!5977 = !DILocation(line: 3296, column: 8, scope: !5976)
!5978 = !DILocation(line: 3296, column: 13, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5976, file: !1, line: 3296, column: 3)
!5980 = !DILocation(line: 3296, column: 27, scope: !5979)
!5981 = !DILocation(line: 3296, column: 34, scope: !5979)
!5982 = !DILocation(line: 3296, column: 15, scope: !5979)
!5983 = !DILocation(line: 3296, column: 3, scope: !5976)
!5984 = !DILocalVariable(name: "distance", scope: !5985, file: !1, line: 3299, type: !856)
!5985 = distinct !DILexicalBlock(scope: !5979, file: !1, line: 3297, column: 3)
!5986 = !DILocation(line: 3299, column: 7, scope: !5985)
!5987 = !DILocalVariable(name: "pixel", scope: !5985, file: !1, line: 3302, type: !1223)
!5988 = !DILocation(line: 3302, column: 7, scope: !5985)
!5989 = !DILocalVariable(name: "delta", scope: !5985, file: !1, line: 3305, type: !1243)
!5990 = !DILocation(line: 3305, column: 7, scope: !5985)
!5991 = !DILocalVariable(name: "implode_indexes", scope: !5985, file: !1, line: 3308, type: !1637)
!5992 = !DILocation(line: 3308, column: 17, scope: !5985)
!5993 = !DILocalVariable(name: "x", scope: !5985, file: !1, line: 3311, type: !880)
!5994 = !DILocation(line: 3311, column: 7, scope: !5985)
!5995 = !DILocalVariable(name: "q", scope: !5985, file: !1, line: 3314, type: !1642)
!5996 = !DILocation(line: 3314, column: 17, scope: !5985)
!5997 = !DILocation(line: 3316, column: 9, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3316, column: 9)
!5999 = !DILocation(line: 3316, column: 16, scope: !5998)
!6000 = !DILocation(line: 3316, column: 9, scope: !5985)
!6001 = !DILocation(line: 3317, column: 7, scope: !5998)
!6002 = !DILocation(line: 3318, column: 35, scope: !5985)
!6003 = !DILocation(line: 3318, column: 50, scope: !5985)
!6004 = !DILocation(line: 3318, column: 52, scope: !5985)
!6005 = !DILocation(line: 3318, column: 67, scope: !5985)
!6006 = !DILocation(line: 3319, column: 7, scope: !5985)
!6007 = !DILocation(line: 3318, column: 7, scope: !5985)
!6008 = !DILocation(line: 3318, column: 6, scope: !5985)
!6009 = !DILocation(line: 3320, column: 9, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3320, column: 9)
!6011 = !DILocation(line: 3320, column: 11, scope: !6010)
!6012 = !DILocation(line: 3320, column: 9, scope: !5985)
!6013 = !DILocation(line: 3322, column: 15, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 3321, column: 7)
!6015 = !DILocation(line: 3323, column: 9, scope: !6014)
!6016 = !DILocation(line: 3325, column: 53, scope: !5985)
!6017 = !DILocation(line: 3325, column: 21, scope: !5985)
!6018 = !DILocation(line: 3325, column: 20, scope: !5985)
!6019 = !DILocation(line: 3326, column: 19, scope: !5985)
!6020 = !DILocation(line: 3326, column: 31, scope: !5985)
!6021 = !DILocation(line: 3326, column: 40, scope: !5985)
!6022 = !DILocation(line: 3326, column: 32, scope: !5985)
!6023 = !DILocation(line: 3326, column: 20, scope: !5985)
!6024 = !DILocation(line: 3326, column: 11, scope: !5985)
!6025 = !DILocation(line: 3326, column: 12, scope: !5985)
!6026 = !DILocation(line: 3327, column: 11, scope: !5985)
!6027 = !DILocation(line: 3328, column: 11, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3328, column: 5)
!6029 = !DILocation(line: 3328, column: 10, scope: !6028)
!6030 = !DILocation(line: 3328, column: 15, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !1, line: 3328, column: 5)
!6032 = !DILocation(line: 3328, column: 29, scope: !6031)
!6033 = !DILocation(line: 3328, column: 36, scope: !6031)
!6034 = !DILocation(line: 3328, column: 17, scope: !6031)
!6035 = !DILocation(line: 3328, column: 5, scope: !6028)
!6036 = !DILocation(line: 3333, column: 21, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 3329, column: 5)
!6038 = !DILocation(line: 3333, column: 33, scope: !6037)
!6039 = !DILocation(line: 3333, column: 42, scope: !6037)
!6040 = !DILocation(line: 3333, column: 34, scope: !6037)
!6041 = !DILocation(line: 3333, column: 22, scope: !6037)
!6042 = !DILocation(line: 3333, column: 13, scope: !6037)
!6043 = !DILocation(line: 3333, column: 14, scope: !6037)
!6044 = !DILocation(line: 3334, column: 22, scope: !6037)
!6045 = !DILocation(line: 3334, column: 30, scope: !6037)
!6046 = !DILocation(line: 3334, column: 23, scope: !6037)
!6047 = !DILocation(line: 3334, column: 38, scope: !6037)
!6048 = !DILocation(line: 3334, column: 46, scope: !6037)
!6049 = !DILocation(line: 3334, column: 39, scope: !6037)
!6050 = !DILocation(line: 3334, column: 31, scope: !6037)
!6051 = !DILocation(line: 3334, column: 15, scope: !6037)
!6052 = !DILocation(line: 3335, column: 11, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6037, file: !1, line: 3335, column: 11)
!6054 = !DILocation(line: 3335, column: 23, scope: !6053)
!6055 = !DILocation(line: 3335, column: 30, scope: !6053)
!6056 = !DILocation(line: 3335, column: 29, scope: !6053)
!6057 = !DILocation(line: 3335, column: 20, scope: !6053)
!6058 = !DILocation(line: 3335, column: 11, scope: !6037)
!6059 = !DILocalVariable(name: "factor", scope: !6060, file: !1, line: 3338, type: !856)
!6060 = distinct !DILexicalBlock(scope: !6053, file: !1, line: 3336, column: 9)
!6061 = !DILocation(line: 3338, column: 13, scope: !6060)
!6062 = !DILocation(line: 3343, column: 17, scope: !6060)
!6063 = !DILocation(line: 3344, column: 15, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 3344, column: 15)
!6065 = !DILocation(line: 3344, column: 24, scope: !6064)
!6066 = !DILocation(line: 3344, column: 15, scope: !6060)
!6067 = !DILocation(line: 3345, column: 61, scope: !6064)
!6068 = !DILocation(line: 3345, column: 47, scope: !6064)
!6069 = !DILocation(line: 3345, column: 46, scope: !6064)
!6070 = !DILocation(line: 3346, column: 15, scope: !6064)
!6071 = !DILocation(line: 3345, column: 70, scope: !6064)
!6072 = !DILocation(line: 3346, column: 21, scope: !6064)
!6073 = !DILocation(line: 3345, column: 24, scope: !6064)
!6074 = !DILocation(line: 3346, column: 27, scope: !6064)
!6075 = !DILocation(line: 3346, column: 26, scope: !6064)
!6076 = !DILocation(line: 3345, column: 20, scope: !6064)
!6077 = !DILocation(line: 3345, column: 19, scope: !6064)
!6078 = !DILocation(line: 3345, column: 13, scope: !6064)
!6079 = !DILocation(line: 3347, column: 47, scope: !6060)
!6080 = !DILocation(line: 3347, column: 53, scope: !6060)
!6081 = !DILocation(line: 3348, column: 49, scope: !6060)
!6082 = !DILocation(line: 3348, column: 62, scope: !6060)
!6083 = !DILocation(line: 3348, column: 55, scope: !6060)
!6084 = !DILocation(line: 3348, column: 70, scope: !6060)
!6085 = !DILocation(line: 3348, column: 63, scope: !6060)
!6086 = !DILocation(line: 3349, column: 20, scope: !6060)
!6087 = !DILocation(line: 3348, column: 71, scope: !6060)
!6088 = !DILocation(line: 3349, column: 33, scope: !6060)
!6089 = !DILocation(line: 3349, column: 46, scope: !6060)
!6090 = !DILocation(line: 3349, column: 39, scope: !6060)
!6091 = !DILocation(line: 3349, column: 54, scope: !6060)
!6092 = !DILocation(line: 3349, column: 47, scope: !6060)
!6093 = !DILocation(line: 3349, column: 63, scope: !6060)
!6094 = !DILocation(line: 3349, column: 55, scope: !6060)
!6095 = !DILocation(line: 3350, column: 13, scope: !6060)
!6096 = !DILocation(line: 3347, column: 18, scope: !6060)
!6097 = !DILocation(line: 3351, column: 26, scope: !6060)
!6098 = !DILocation(line: 3351, column: 47, scope: !6060)
!6099 = !DILocation(line: 3351, column: 49, scope: !6060)
!6100 = !DILocation(line: 3351, column: 65, scope: !6060)
!6101 = !DILocation(line: 3351, column: 64, scope: !6060)
!6102 = !DILocation(line: 3351, column: 11, scope: !6060)
!6103 = !DILocation(line: 3352, column: 9, scope: !6060)
!6104 = !DILocation(line: 3353, column: 8, scope: !6037)
!6105 = !DILocation(line: 3354, column: 5, scope: !6037)
!6106 = !DILocation(line: 3328, column: 46, scope: !6031)
!6107 = !DILocation(line: 3328, column: 5, scope: !6031)
!6108 = distinct !{!6108, !6035, !6109}
!6109 = !DILocation(line: 3354, column: 5, scope: !6028)
!6110 = !DILocation(line: 3355, column: 38, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3355, column: 9)
!6112 = !DILocation(line: 3355, column: 51, scope: !6111)
!6113 = !DILocation(line: 3355, column: 9, scope: !6111)
!6114 = !DILocation(line: 3355, column: 62, scope: !6111)
!6115 = !DILocation(line: 3355, column: 9, scope: !5985)
!6116 = !DILocation(line: 3356, column: 13, scope: !6111)
!6117 = !DILocation(line: 3356, column: 7, scope: !6111)
!6118 = !DILocation(line: 3357, column: 9, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 3357, column: 9)
!6120 = !DILocation(line: 3357, column: 16, scope: !6119)
!6121 = !DILocation(line: 3357, column: 33, scope: !6119)
!6122 = !DILocation(line: 3357, column: 9, scope: !5985)
!6123 = !DILocalVariable(name: "proceed", scope: !6124, file: !1, line: 3360, type: !709)
!6124 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 3358, column: 7)
!6125 = !DILocation(line: 3360, column: 11, scope: !6124)
!6126 = !DILocation(line: 3365, column: 34, scope: !6124)
!6127 = !DILocation(line: 3365, column: 64, scope: !6124)
!6128 = !DILocation(line: 3365, column: 67, scope: !6124)
!6129 = !DILocation(line: 3365, column: 74, scope: !6124)
!6130 = !DILocation(line: 3365, column: 17, scope: !6124)
!6131 = !DILocation(line: 3365, column: 16, scope: !6124)
!6132 = !DILocation(line: 3366, column: 13, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6124, file: !1, line: 3366, column: 13)
!6134 = !DILocation(line: 3366, column: 21, scope: !6133)
!6135 = !DILocation(line: 3366, column: 13, scope: !6124)
!6136 = !DILocation(line: 3367, column: 17, scope: !6133)
!6137 = !DILocation(line: 3367, column: 11, scope: !6133)
!6138 = !DILocation(line: 3368, column: 7, scope: !6124)
!6139 = !DILocation(line: 3369, column: 3, scope: !5985)
!6140 = !DILocation(line: 3296, column: 41, scope: !5979)
!6141 = !DILocation(line: 3296, column: 3, scope: !5979)
!6142 = distinct !{!6142, !5983, !6143}
!6143 = !DILocation(line: 3369, column: 3, scope: !5976)
!6144 = !DILocation(line: 3370, column: 33, scope: !5842)
!6145 = !DILocation(line: 3370, column: 16, scope: !5842)
!6146 = !DILocation(line: 3370, column: 15, scope: !5842)
!6147 = !DILocation(line: 3371, column: 31, scope: !5842)
!6148 = !DILocation(line: 3371, column: 14, scope: !5842)
!6149 = !DILocation(line: 3371, column: 13, scope: !5842)
!6150 = !DILocation(line: 3372, column: 7, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 3372, column: 7)
!6152 = !DILocation(line: 3372, column: 14, scope: !6151)
!6153 = !DILocation(line: 3372, column: 7, scope: !5842)
!6154 = !DILocation(line: 3373, column: 32, scope: !6151)
!6155 = !DILocation(line: 3373, column: 19, scope: !6151)
!6156 = !DILocation(line: 3373, column: 18, scope: !6151)
!6157 = !DILocation(line: 3373, column: 5, scope: !6151)
!6158 = !DILocation(line: 3374, column: 10, scope: !5842)
!6159 = !DILocation(line: 3374, column: 3, scope: !5842)
!6160 = !DILocation(line: 3375, column: 1, scope: !5842)
!6161 = distinct !DISubprogram(name: "SetPixelPacket", scope: !6162, file: !6162, line: 117, type: !6163, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6162 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6163 = !DISubroutineType(types: !6164)
!6164 = !{null, !821, !6165, !842, !1092}
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6166, size: 64)
!6166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!6167 = !DILocalVariable(name: "image", arg: 1, scope: !6161, file: !6162, line: 117, type: !821)
!6168 = !DILocation(line: 117, column: 48, scope: !6161)
!6169 = !DILocalVariable(name: "pixel", arg: 2, scope: !6161, file: !6162, line: 118, type: !6165)
!6170 = !DILocation(line: 118, column: 28, scope: !6161)
!6171 = !DILocalVariable(name: "color", arg: 3, scope: !6161, file: !6162, line: 118, type: !842)
!6172 = !DILocation(line: 118, column: 47, scope: !6161)
!6173 = !DILocalVariable(name: "index", arg: 4, scope: !6161, file: !6162, line: 118, type: !1092)
!6174 = !DILocation(line: 118, column: 66, scope: !6161)
!6175 = !DILocation(line: 120, column: 3, scope: !6161)
!6176 = !DILocation(line: 121, column: 3, scope: !6161)
!6177 = !DILocation(line: 122, column: 3, scope: !6161)
!6178 = !DILocation(line: 123, column: 3, scope: !6161)
!6179 = !DILocation(line: 124, column: 8, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6161, file: !6162, line: 124, column: 7)
!6181 = !DILocation(line: 124, column: 15, scope: !6180)
!6182 = !DILocation(line: 124, column: 26, scope: !6180)
!6183 = !DILocation(line: 124, column: 45, scope: !6180)
!6184 = !DILocation(line: 125, column: 8, scope: !6180)
!6185 = !DILocation(line: 125, column: 15, scope: !6180)
!6186 = !DILocation(line: 125, column: 29, scope: !6180)
!6187 = !DILocation(line: 124, column: 7, scope: !6161)
!6188 = !DILocation(line: 126, column: 5, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !6162, line: 126, column: 5)
!6190 = distinct !DILexicalBlock(scope: !6180, file: !6162, line: 126, column: 5)
!6191 = !DILocation(line: 126, column: 5, scope: !6190)
!6192 = !DILocation(line: 127, column: 1, scope: !6161)
!6193 = distinct !DISubprogram(name: "MorphImages", scope: !1, file: !1, line: 3407, type: !6194, scopeLine: 3409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!1090, !821, !1160, !695}
!6196 = !DILocalVariable(name: "image", arg: 1, scope: !6193, file: !1, line: 3407, type: !821)
!6197 = !DILocation(line: 3407, column: 46, scope: !6193)
!6198 = !DILocalVariable(name: "number_frames", arg: 2, scope: !6193, file: !1, line: 3408, type: !1160)
!6199 = !DILocation(line: 3408, column: 16, scope: !6193)
!6200 = !DILocalVariable(name: "exception", arg: 3, scope: !6193, file: !1, line: 3408, type: !695)
!6201 = !DILocation(line: 3408, column: 45, scope: !6193)
!6202 = !DILocalVariable(name: "alpha", scope: !6193, file: !1, line: 3413, type: !856)
!6203 = !DILocation(line: 3413, column: 5, scope: !6193)
!6204 = !DILocalVariable(name: "beta", scope: !6193, file: !1, line: 3414, type: !856)
!6205 = !DILocation(line: 3414, column: 5, scope: !6193)
!6206 = !DILocalVariable(name: "morph_image", scope: !6193, file: !1, line: 3417, type: !1090)
!6207 = !DILocation(line: 3417, column: 6, scope: !6193)
!6208 = !DILocalVariable(name: "morph_images", scope: !6193, file: !1, line: 3418, type: !1090)
!6209 = !DILocation(line: 3418, column: 6, scope: !6193)
!6210 = !DILocalVariable(name: "status", scope: !6193, file: !1, line: 3421, type: !709)
!6211 = !DILocation(line: 3421, column: 5, scope: !6193)
!6212 = !DILocalVariable(name: "scene", scope: !6193, file: !1, line: 3424, type: !950)
!6213 = !DILocation(line: 3424, column: 5, scope: !6193)
!6214 = !DILocalVariable(name: "next", scope: !6193, file: !1, line: 3427, type: !821)
!6215 = !DILocation(line: 3427, column: 6, scope: !6193)
!6216 = !DILocalVariable(name: "i", scope: !6193, file: !1, line: 3430, type: !880)
!6217 = !DILocation(line: 3430, column: 5, scope: !6193)
!6218 = !DILocalVariable(name: "y", scope: !6193, file: !1, line: 3433, type: !880)
!6219 = !DILocation(line: 3433, column: 5, scope: !6193)
!6220 = !DILocation(line: 3440, column: 7, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 3440, column: 7)
!6222 = !DILocation(line: 3440, column: 14, scope: !6221)
!6223 = !DILocation(line: 3440, column: 20, scope: !6221)
!6224 = !DILocation(line: 3440, column: 7, scope: !6193)
!6225 = !DILocation(line: 3441, column: 61, scope: !6221)
!6226 = !DILocation(line: 3441, column: 68, scope: !6221)
!6227 = !DILocation(line: 3441, column: 12, scope: !6221)
!6228 = !DILocation(line: 3441, column: 5, scope: !6221)
!6229 = !DILocation(line: 3444, column: 27, scope: !6193)
!6230 = !DILocation(line: 3444, column: 48, scope: !6193)
!6231 = !DILocation(line: 3444, column: 16, scope: !6193)
!6232 = !DILocation(line: 3444, column: 15, scope: !6193)
!6233 = !DILocation(line: 3445, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 3445, column: 7)
!6235 = !DILocation(line: 3445, column: 20, scope: !6234)
!6236 = !DILocation(line: 3445, column: 7, scope: !6193)
!6237 = !DILocation(line: 3446, column: 5, scope: !6234)
!6238 = !DILocation(line: 3447, column: 26, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 3447, column: 7)
!6240 = !DILocation(line: 3447, column: 7, scope: !6239)
!6241 = !DILocation(line: 3447, column: 33, scope: !6239)
!6242 = !DILocation(line: 3447, column: 7, scope: !6193)
!6243 = !DILocation(line: 3452, column: 13, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !1, line: 3452, column: 7)
!6245 = distinct !DILexicalBlock(scope: !6239, file: !1, line: 3448, column: 5)
!6246 = !DILocation(line: 3452, column: 12, scope: !6244)
!6247 = !DILocation(line: 3452, column: 17, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 3452, column: 7)
!6249 = !DILocation(line: 3452, column: 31, scope: !6248)
!6250 = !DILocation(line: 3452, column: 19, scope: !6248)
!6251 = !DILocation(line: 3452, column: 7, scope: !6244)
!6252 = !DILocation(line: 3454, column: 32, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 3453, column: 7)
!6254 = !DILocation(line: 3454, column: 53, scope: !6253)
!6255 = !DILocation(line: 3454, column: 21, scope: !6253)
!6256 = !DILocation(line: 3454, column: 20, scope: !6253)
!6257 = !DILocation(line: 3455, column: 13, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !1, line: 3455, column: 13)
!6259 = !DILocation(line: 3455, column: 25, scope: !6258)
!6260 = !DILocation(line: 3455, column: 13, scope: !6253)
!6261 = !DILocation(line: 3457, column: 43, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 3456, column: 11)
!6263 = !DILocation(line: 3457, column: 26, scope: !6262)
!6264 = !DILocation(line: 3457, column: 25, scope: !6262)
!6265 = !DILocation(line: 3458, column: 13, scope: !6262)
!6266 = !DILocation(line: 3460, column: 41, scope: !6253)
!6267 = !DILocation(line: 3460, column: 9, scope: !6253)
!6268 = !DILocation(line: 3461, column: 13, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6253, file: !1, line: 3461, column: 13)
!6270 = !DILocation(line: 3461, column: 20, scope: !6269)
!6271 = !DILocation(line: 3461, column: 37, scope: !6269)
!6272 = !DILocation(line: 3461, column: 13, scope: !6253)
!6273 = !DILocalVariable(name: "proceed", scope: !6274, file: !1, line: 3464, type: !709)
!6274 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 3462, column: 11)
!6275 = !DILocation(line: 3464, column: 15, scope: !6274)
!6276 = !DILocation(line: 3466, column: 38, scope: !6274)
!6277 = !DILocation(line: 3466, column: 77, scope: !6274)
!6278 = !DILocation(line: 3467, column: 15, scope: !6274)
!6279 = !DILocation(line: 3466, column: 21, scope: !6274)
!6280 = !DILocation(line: 3466, column: 20, scope: !6274)
!6281 = !DILocation(line: 3468, column: 17, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6274, file: !1, line: 3468, column: 17)
!6283 = !DILocation(line: 3468, column: 25, scope: !6282)
!6284 = !DILocation(line: 3468, column: 17, scope: !6274)
!6285 = !DILocation(line: 3469, column: 21, scope: !6282)
!6286 = !DILocation(line: 3469, column: 15, scope: !6282)
!6287 = !DILocation(line: 3470, column: 11, scope: !6274)
!6288 = !DILocation(line: 3471, column: 7, scope: !6253)
!6289 = !DILocation(line: 3452, column: 47, scope: !6248)
!6290 = !DILocation(line: 3452, column: 7, scope: !6248)
!6291 = distinct !{!6291, !6251, !6292}
!6292 = !DILocation(line: 3471, column: 7, scope: !6244)
!6293 = !DILocation(line: 3472, column: 34, scope: !6245)
!6294 = !DILocation(line: 3472, column: 14, scope: !6245)
!6295 = !DILocation(line: 3472, column: 7, scope: !6245)
!6296 = !DILocation(line: 3477, column: 9, scope: !6193)
!6297 = !DILocation(line: 3478, column: 8, scope: !6193)
!6298 = !DILocation(line: 3479, column: 8, scope: !6193)
!6299 = !DILocation(line: 3479, column: 7, scope: !6193)
!6300 = !DILocation(line: 3480, column: 3, scope: !6193)
!6301 = !DILocation(line: 3480, column: 30, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !1, line: 3480, column: 3)
!6303 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 3480, column: 3)
!6304 = !DILocation(line: 3480, column: 11, scope: !6302)
!6305 = !DILocation(line: 3480, column: 36, scope: !6302)
!6306 = !DILocation(line: 3480, column: 3, scope: !6303)
!6307 = !DILocation(line: 3482, column: 11, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !1, line: 3482, column: 5)
!6309 = distinct !DILexicalBlock(scope: !6302, file: !1, line: 3481, column: 3)
!6310 = !DILocation(line: 3482, column: 10, scope: !6308)
!6311 = !DILocation(line: 3482, column: 15, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 3482, column: 5)
!6313 = !DILocation(line: 3482, column: 29, scope: !6312)
!6314 = !DILocation(line: 3482, column: 17, scope: !6312)
!6315 = !DILocation(line: 3482, column: 5, scope: !6308)
!6316 = !DILocalVariable(name: "image_view", scope: !6317, file: !1, line: 3485, type: !1081)
!6317 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 3483, column: 5)
!6318 = !DILocation(line: 3485, column: 10, scope: !6317)
!6319 = !DILocalVariable(name: "morph_view", scope: !6317, file: !1, line: 3486, type: !1081)
!6320 = !DILocation(line: 3486, column: 10, scope: !6317)
!6321 = !DILocation(line: 3488, column: 22, scope: !6317)
!6322 = !DILocation(line: 3488, column: 23, scope: !6317)
!6323 = !DILocation(line: 3488, column: 39, scope: !6317)
!6324 = !DILocation(line: 3488, column: 52, scope: !6317)
!6325 = !DILocation(line: 3488, column: 28, scope: !6317)
!6326 = !DILocation(line: 3488, column: 11, scope: !6317)
!6327 = !DILocation(line: 3489, column: 17, scope: !6317)
!6328 = !DILocation(line: 3489, column: 16, scope: !6317)
!6329 = !DILocation(line: 3489, column: 12, scope: !6317)
!6330 = !DILocation(line: 3490, column: 31, scope: !6317)
!6331 = !DILocation(line: 3490, column: 46, scope: !6317)
!6332 = !DILocation(line: 3490, column: 52, scope: !6317)
!6333 = !DILocation(line: 3490, column: 58, scope: !6317)
!6334 = !DILocation(line: 3490, column: 51, scope: !6317)
!6335 = !DILocation(line: 3490, column: 66, scope: !6317)
!6336 = !DILocation(line: 3491, column: 28, scope: !6317)
!6337 = !DILocation(line: 3491, column: 9, scope: !6317)
!6338 = !DILocation(line: 3491, column: 35, scope: !6317)
!6339 = !DILocation(line: 3490, column: 70, scope: !6317)
!6340 = !DILocation(line: 3490, column: 65, scope: !6317)
!6341 = !DILocation(line: 3491, column: 42, scope: !6317)
!6342 = !DILocation(line: 3490, column: 36, scope: !6317)
!6343 = !DILocation(line: 3491, column: 58, scope: !6317)
!6344 = !DILocation(line: 3492, column: 9, scope: !6317)
!6345 = !DILocation(line: 3492, column: 15, scope: !6317)
!6346 = !DILocation(line: 3491, column: 63, scope: !6317)
!6347 = !DILocation(line: 3492, column: 20, scope: !6317)
!6348 = !DILocation(line: 3492, column: 44, scope: !6317)
!6349 = !DILocation(line: 3492, column: 25, scope: !6317)
!6350 = !DILocation(line: 3492, column: 51, scope: !6317)
!6351 = !DILocation(line: 3492, column: 24, scope: !6317)
!6352 = !DILocation(line: 3492, column: 19, scope: !6317)
!6353 = !DILocation(line: 3492, column: 55, scope: !6317)
!6354 = !DILocation(line: 3491, column: 48, scope: !6317)
!6355 = !DILocation(line: 3493, column: 9, scope: !6317)
!6356 = !DILocation(line: 3493, column: 15, scope: !6317)
!6357 = !DILocation(line: 3493, column: 22, scope: !6317)
!6358 = !DILocation(line: 3493, column: 28, scope: !6317)
!6359 = !DILocation(line: 3493, column: 33, scope: !6317)
!6360 = !DILocation(line: 3490, column: 19, scope: !6317)
!6361 = !DILocation(line: 3490, column: 18, scope: !6317)
!6362 = !DILocation(line: 3494, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 3494, column: 11)
!6364 = !DILocation(line: 3494, column: 23, scope: !6363)
!6365 = !DILocation(line: 3494, column: 11, scope: !6317)
!6366 = !DILocation(line: 3496, column: 41, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !1, line: 3495, column: 9)
!6368 = !DILocation(line: 3496, column: 24, scope: !6367)
!6369 = !DILocation(line: 3496, column: 23, scope: !6367)
!6370 = !DILocation(line: 3497, column: 11, scope: !6367)
!6371 = !DILocation(line: 3499, column: 32, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 3499, column: 11)
!6373 = !DILocation(line: 3499, column: 11, scope: !6372)
!6374 = !DILocation(line: 3499, column: 57, scope: !6372)
!6375 = !DILocation(line: 3499, column: 11, scope: !6317)
!6376 = !DILocation(line: 3501, column: 28, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !1, line: 3500, column: 9)
!6378 = !DILocation(line: 3501, column: 39, scope: !6377)
!6379 = !DILocation(line: 3501, column: 52, scope: !6377)
!6380 = !DILocation(line: 3501, column: 11, scope: !6377)
!6381 = !DILocation(line: 3502, column: 36, scope: !6377)
!6382 = !DILocation(line: 3502, column: 23, scope: !6377)
!6383 = !DILocation(line: 3502, column: 22, scope: !6377)
!6384 = !DILocation(line: 3503, column: 11, scope: !6377)
!6385 = !DILocation(line: 3505, column: 39, scope: !6317)
!6386 = !DILocation(line: 3505, column: 7, scope: !6317)
!6387 = !DILocation(line: 3506, column: 39, scope: !6317)
!6388 = !DILocation(line: 3506, column: 20, scope: !6317)
!6389 = !DILocation(line: 3506, column: 19, scope: !6317)
!6390 = !DILocation(line: 3507, column: 50, scope: !6317)
!6391 = !DILocation(line: 3507, column: 31, scope: !6317)
!6392 = !DILocation(line: 3507, column: 56, scope: !6317)
!6393 = !DILocation(line: 3507, column: 70, scope: !6317)
!6394 = !DILocation(line: 3508, column: 9, scope: !6317)
!6395 = !DILocation(line: 3508, column: 23, scope: !6317)
!6396 = !DILocation(line: 3508, column: 47, scope: !6317)
!6397 = !DILocation(line: 3508, column: 28, scope: !6317)
!6398 = !DILocation(line: 3508, column: 54, scope: !6317)
!6399 = !DILocation(line: 3509, column: 28, scope: !6317)
!6400 = !DILocation(line: 3509, column: 9, scope: !6317)
!6401 = !DILocation(line: 3509, column: 35, scope: !6317)
!6402 = !DILocation(line: 3509, column: 40, scope: !6317)
!6403 = !DILocation(line: 3507, column: 19, scope: !6317)
!6404 = !DILocation(line: 3507, column: 18, scope: !6317)
!6405 = !DILocation(line: 3510, column: 11, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 3510, column: 11)
!6407 = !DILocation(line: 3510, column: 23, scope: !6406)
!6408 = !DILocation(line: 3510, column: 11, scope: !6317)
!6409 = !DILocation(line: 3512, column: 41, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !1, line: 3511, column: 9)
!6411 = !DILocation(line: 3512, column: 24, scope: !6410)
!6412 = !DILocation(line: 3512, column: 23, scope: !6410)
!6413 = !DILocation(line: 3513, column: 11, scope: !6410)
!6414 = !DILocation(line: 3515, column: 42, scope: !6317)
!6415 = !DILocation(line: 3515, column: 54, scope: !6317)
!6416 = !DILocation(line: 3515, column: 18, scope: !6317)
!6417 = !DILocation(line: 3515, column: 17, scope: !6317)
!6418 = !DILocation(line: 3516, column: 44, scope: !6317)
!6419 = !DILocation(line: 3516, column: 57, scope: !6317)
!6420 = !DILocation(line: 3516, column: 18, scope: !6317)
!6421 = !DILocation(line: 3516, column: 17, scope: !6317)
!6422 = !DILocation(line: 3521, column: 13, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 3521, column: 7)
!6424 = !DILocation(line: 3521, column: 12, scope: !6423)
!6425 = !DILocation(line: 3521, column: 17, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6423, file: !1, line: 3521, column: 7)
!6427 = !DILocation(line: 3521, column: 31, scope: !6426)
!6428 = !DILocation(line: 3521, column: 45, scope: !6426)
!6429 = !DILocation(line: 3521, column: 19, scope: !6426)
!6430 = !DILocation(line: 3521, column: 7, scope: !6423)
!6431 = !DILocalVariable(name: "sync", scope: !6432, file: !1, line: 3524, type: !709)
!6432 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 3522, column: 7)
!6433 = !DILocation(line: 3524, column: 11, scope: !6432)
!6434 = !DILocalVariable(name: "p", scope: !6432, file: !1, line: 3527, type: !1634)
!6435 = !DILocation(line: 3527, column: 21, scope: !6432)
!6436 = !DILocalVariable(name: "x", scope: !6432, file: !1, line: 3530, type: !880)
!6437 = !DILocation(line: 3530, column: 11, scope: !6432)
!6438 = !DILocalVariable(name: "q", scope: !6432, file: !1, line: 3533, type: !1642)
!6439 = !DILocation(line: 3533, column: 21, scope: !6432)
!6440 = !DILocation(line: 3535, column: 13, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 3535, column: 13)
!6442 = !DILocation(line: 3535, column: 20, scope: !6441)
!6443 = !DILocation(line: 3535, column: 13, scope: !6432)
!6444 = !DILocation(line: 3536, column: 11, scope: !6441)
!6445 = !DILocation(line: 3537, column: 37, scope: !6432)
!6446 = !DILocation(line: 3537, column: 50, scope: !6432)
!6447 = !DILocation(line: 3537, column: 52, scope: !6432)
!6448 = !DILocation(line: 3537, column: 65, scope: !6432)
!6449 = !DILocation(line: 3538, column: 11, scope: !6432)
!6450 = !DILocation(line: 3537, column: 11, scope: !6432)
!6451 = !DILocation(line: 3537, column: 10, scope: !6432)
!6452 = !DILocation(line: 3539, column: 39, scope: !6432)
!6453 = !DILocation(line: 3539, column: 52, scope: !6432)
!6454 = !DILocation(line: 3539, column: 54, scope: !6432)
!6455 = !DILocation(line: 3539, column: 68, scope: !6432)
!6456 = !DILocation(line: 3540, column: 11, scope: !6432)
!6457 = !DILocation(line: 3539, column: 11, scope: !6432)
!6458 = !DILocation(line: 3539, column: 10, scope: !6432)
!6459 = !DILocation(line: 3541, column: 14, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 3541, column: 13)
!6461 = !DILocation(line: 3541, column: 16, scope: !6460)
!6462 = !DILocation(line: 3541, column: 47, scope: !6460)
!6463 = !DILocation(line: 3541, column: 51, scope: !6460)
!6464 = !DILocation(line: 3541, column: 53, scope: !6460)
!6465 = !DILocation(line: 3541, column: 13, scope: !6432)
!6466 = !DILocation(line: 3543, column: 19, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6460, file: !1, line: 3542, column: 11)
!6468 = !DILocation(line: 3544, column: 13, scope: !6467)
!6469 = !DILocation(line: 3546, column: 15, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 3546, column: 9)
!6471 = !DILocation(line: 3546, column: 14, scope: !6470)
!6472 = !DILocation(line: 3546, column: 19, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6470, file: !1, line: 3546, column: 9)
!6474 = !DILocation(line: 3546, column: 33, scope: !6473)
!6475 = !DILocation(line: 3546, column: 47, scope: !6473)
!6476 = !DILocation(line: 3546, column: 21, scope: !6473)
!6477 = !DILocation(line: 3546, column: 9, scope: !6470)
!6478 = !DILocation(line: 3548, column: 11, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 3547, column: 9)
!6480 = !DILocation(line: 3550, column: 11, scope: !6479)
!6481 = !DILocation(line: 3552, column: 11, scope: !6479)
!6482 = !DILocation(line: 3554, column: 11, scope: !6479)
!6483 = !DILocation(line: 3556, column: 12, scope: !6479)
!6484 = !DILocation(line: 3557, column: 12, scope: !6479)
!6485 = !DILocation(line: 3558, column: 9, scope: !6479)
!6486 = !DILocation(line: 3546, column: 57, scope: !6473)
!6487 = !DILocation(line: 3546, column: 9, scope: !6473)
!6488 = distinct !{!6488, !6477, !6489}
!6489 = !DILocation(line: 3558, column: 9, scope: !6470)
!6490 = !DILocation(line: 3559, column: 43, scope: !6432)
!6491 = !DILocation(line: 3559, column: 54, scope: !6432)
!6492 = !DILocation(line: 3559, column: 14, scope: !6432)
!6493 = !DILocation(line: 3559, column: 13, scope: !6432)
!6494 = !DILocation(line: 3560, column: 13, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 3560, column: 13)
!6496 = !DILocation(line: 3560, column: 18, scope: !6495)
!6497 = !DILocation(line: 3560, column: 13, scope: !6432)
!6498 = !DILocation(line: 3561, column: 17, scope: !6495)
!6499 = !DILocation(line: 3561, column: 11, scope: !6495)
!6500 = !DILocation(line: 3562, column: 7, scope: !6432)
!6501 = !DILocation(line: 3521, column: 52, scope: !6426)
!6502 = !DILocation(line: 3521, column: 7, scope: !6426)
!6503 = distinct !{!6503, !6430, !6504}
!6504 = !DILocation(line: 3562, column: 7, scope: !6423)
!6505 = !DILocation(line: 3563, column: 35, scope: !6317)
!6506 = !DILocation(line: 3563, column: 18, scope: !6317)
!6507 = !DILocation(line: 3563, column: 17, scope: !6317)
!6508 = !DILocation(line: 3564, column: 35, scope: !6317)
!6509 = !DILocation(line: 3564, column: 18, scope: !6317)
!6510 = !DILocation(line: 3564, column: 17, scope: !6317)
!6511 = !DILocation(line: 3565, column: 32, scope: !6317)
!6512 = !DILocation(line: 3565, column: 19, scope: !6317)
!6513 = !DILocation(line: 3565, column: 18, scope: !6317)
!6514 = !DILocation(line: 3566, column: 5, scope: !6317)
!6515 = !DILocation(line: 3482, column: 45, scope: !6312)
!6516 = !DILocation(line: 3482, column: 5, scope: !6312)
!6517 = distinct !{!6517, !6315, !6518}
!6518 = !DILocation(line: 3566, column: 5, scope: !6308)
!6519 = !DILocation(line: 3567, column: 9, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6309, file: !1, line: 3567, column: 9)
!6521 = !DILocation(line: 3567, column: 23, scope: !6520)
!6522 = !DILocation(line: 3567, column: 11, scope: !6520)
!6523 = !DILocation(line: 3567, column: 9, scope: !6309)
!6524 = !DILocation(line: 3568, column: 7, scope: !6520)
!6525 = !DILocation(line: 3572, column: 47, scope: !6309)
!6526 = !DILocation(line: 3572, column: 28, scope: !6309)
!6527 = !DILocation(line: 3572, column: 68, scope: !6309)
!6528 = !DILocation(line: 3572, column: 17, scope: !6309)
!6529 = !DILocation(line: 3572, column: 16, scope: !6309)
!6530 = !DILocation(line: 3573, column: 9, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6309, file: !1, line: 3573, column: 9)
!6532 = !DILocation(line: 3573, column: 21, scope: !6531)
!6533 = !DILocation(line: 3573, column: 9, scope: !6309)
!6534 = !DILocation(line: 3575, column: 39, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 3574, column: 7)
!6536 = !DILocation(line: 3575, column: 22, scope: !6535)
!6537 = !DILocation(line: 3575, column: 21, scope: !6535)
!6538 = !DILocation(line: 3576, column: 9, scope: !6535)
!6539 = !DILocation(line: 3578, column: 37, scope: !6309)
!6540 = !DILocation(line: 3578, column: 5, scope: !6309)
!6541 = !DILocation(line: 3579, column: 37, scope: !6309)
!6542 = !DILocation(line: 3579, column: 18, scope: !6309)
!6543 = !DILocation(line: 3579, column: 17, scope: !6309)
!6544 = !DILocation(line: 3580, column: 9, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6309, file: !1, line: 3580, column: 9)
!6546 = !DILocation(line: 3580, column: 16, scope: !6545)
!6547 = !DILocation(line: 3580, column: 33, scope: !6545)
!6548 = !DILocation(line: 3580, column: 9, scope: !6309)
!6549 = !DILocalVariable(name: "proceed", scope: !6550, file: !1, line: 3583, type: !709)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 3581, column: 7)
!6551 = !DILocation(line: 3583, column: 11, scope: !6550)
!6552 = !DILocation(line: 3588, column: 34, scope: !6550)
!6553 = !DILocation(line: 3588, column: 54, scope: !6550)
!6554 = !DILocation(line: 3589, column: 30, scope: !6550)
!6555 = !DILocation(line: 3589, column: 11, scope: !6550)
!6556 = !DILocation(line: 3588, column: 17, scope: !6550)
!6557 = !DILocation(line: 3588, column: 16, scope: !6550)
!6558 = !DILocation(line: 3590, column: 13, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6550, file: !1, line: 3590, column: 13)
!6560 = !DILocation(line: 3590, column: 21, scope: !6559)
!6561 = !DILocation(line: 3590, column: 13, scope: !6550)
!6562 = !DILocation(line: 3591, column: 17, scope: !6559)
!6563 = !DILocation(line: 3591, column: 11, scope: !6559)
!6564 = !DILocation(line: 3592, column: 7, scope: !6550)
!6565 = !DILocation(line: 3593, column: 10, scope: !6309)
!6566 = !DILocation(line: 3594, column: 3, scope: !6309)
!6567 = !DILocation(line: 3480, column: 79, scope: !6302)
!6568 = !DILocation(line: 3480, column: 60, scope: !6302)
!6569 = !DILocation(line: 3480, column: 59, scope: !6302)
!6570 = !DILocation(line: 3480, column: 3, scope: !6302)
!6571 = distinct !{!6571, !6306, !6572}
!6572 = !DILocation(line: 3594, column: 3, scope: !6303)
!6573 = !DILocation(line: 3595, column: 26, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 3595, column: 7)
!6575 = !DILocation(line: 3595, column: 7, scope: !6574)
!6576 = !DILocation(line: 3595, column: 32, scope: !6574)
!6577 = !DILocation(line: 3595, column: 7, scope: !6193)
!6578 = !DILocation(line: 3597, column: 37, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6574, file: !1, line: 3596, column: 5)
!6580 = !DILocation(line: 3597, column: 20, scope: !6579)
!6581 = !DILocation(line: 3597, column: 19, scope: !6579)
!6582 = !DILocation(line: 3598, column: 7, scope: !6579)
!6583 = !DILocation(line: 3600, column: 30, scope: !6193)
!6584 = !DILocation(line: 3600, column: 10, scope: !6193)
!6585 = !DILocation(line: 3600, column: 3, scope: !6193)
!6586 = !DILocation(line: 3601, column: 1, scope: !6193)
!6587 = distinct !DISubprogram(name: "PlasmaImageProxy", scope: !1, file: !1, line: 3646, type: !6588, scopeLine: 3649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!709, !1090, !1081, !1085, !6590, !716, !716}
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!6592 = !DILocalVariable(name: "image", arg: 1, scope: !6587, file: !1, line: 3646, type: !1090)
!6593 = !DILocation(line: 3646, column: 56, scope: !6587)
!6594 = !DILocalVariable(name: "image_view", arg: 2, scope: !6587, file: !1, line: 3647, type: !1081)
!6595 = !DILocation(line: 3647, column: 14, scope: !6587)
!6596 = !DILocalVariable(name: "random_info", arg: 3, scope: !6587, file: !1, line: 3647, type: !1085)
!6597 = !DILocation(line: 3647, column: 37, scope: !6587)
!6598 = !DILocalVariable(name: "segment", arg: 4, scope: !6587, file: !1, line: 3647, type: !6590)
!6599 = !DILocation(line: 3647, column: 68, scope: !6587)
!6600 = !DILocalVariable(name: "attenuate", arg: 5, scope: !6587, file: !1, line: 3648, type: !716)
!6601 = !DILocation(line: 3648, column: 10, scope: !6587)
!6602 = !DILocalVariable(name: "depth", arg: 6, scope: !6587, file: !1, line: 3648, type: !716)
!6603 = !DILocation(line: 3648, column: 27, scope: !6587)
!6604 = !DILocalVariable(name: "exception", scope: !6587, file: !1, line: 3651, type: !695)
!6605 = !DILocation(line: 3651, column: 6, scope: !6587)
!6606 = !DILocalVariable(name: "plasma", scope: !6587, file: !1, line: 3654, type: !856)
!6607 = !DILocation(line: 3654, column: 5, scope: !6587)
!6608 = !DILocalVariable(name: "u", scope: !6587, file: !1, line: 3657, type: !843)
!6609 = !DILocation(line: 3657, column: 5, scope: !6587)
!6610 = !DILocalVariable(name: "v", scope: !6587, file: !1, line: 3658, type: !843)
!6611 = !DILocation(line: 3658, column: 5, scope: !6587)
!6612 = !DILocalVariable(name: "x", scope: !6587, file: !1, line: 3661, type: !880)
!6613 = !DILocation(line: 3661, column: 5, scope: !6587)
!6614 = !DILocalVariable(name: "x_mid", scope: !6587, file: !1, line: 3662, type: !880)
!6615 = !DILocation(line: 3662, column: 5, scope: !6587)
!6616 = !DILocalVariable(name: "y", scope: !6587, file: !1, line: 3663, type: !880)
!6617 = !DILocation(line: 3663, column: 5, scope: !6587)
!6618 = !DILocalVariable(name: "y_mid", scope: !6587, file: !1, line: 3664, type: !880)
!6619 = !DILocation(line: 3664, column: 5, scope: !6587)
!6620 = !DILocation(line: 3666, column: 9, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3666, column: 7)
!6622 = !DILocation(line: 3666, column: 18, scope: !6621)
!6623 = !DILocation(line: 3666, column: 21, scope: !6621)
!6624 = !DILocation(line: 3666, column: 30, scope: !6621)
!6625 = !DILocation(line: 3666, column: 20, scope: !6621)
!6626 = !DILocation(line: 3666, column: 34, scope: !6621)
!6627 = !DILocation(line: 3666, column: 42, scope: !6621)
!6628 = !DILocation(line: 3666, column: 47, scope: !6621)
!6629 = !DILocation(line: 3666, column: 56, scope: !6621)
!6630 = !DILocation(line: 3666, column: 59, scope: !6621)
!6631 = !DILocation(line: 3666, column: 68, scope: !6621)
!6632 = !DILocation(line: 3666, column: 58, scope: !6621)
!6633 = !DILocation(line: 3666, column: 72, scope: !6621)
!6634 = !DILocation(line: 3666, column: 7, scope: !6587)
!6635 = !DILocation(line: 3667, column: 5, scope: !6621)
!6636 = !DILocation(line: 3668, column: 7, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3668, column: 7)
!6638 = !DILocation(line: 3668, column: 13, scope: !6637)
!6639 = !DILocation(line: 3668, column: 7, scope: !6587)
!6640 = !DILocalVariable(name: "local_info", scope: !6641, file: !1, line: 3671, type: !1210)
!6641 = distinct !DILexicalBlock(scope: !6637, file: !1, line: 3669, column: 5)
!6642 = !DILocation(line: 3671, column: 9, scope: !6641)
!6643 = !DILocation(line: 3676, column: 12, scope: !6641)
!6644 = !DILocation(line: 3677, column: 16, scope: !6641)
!6645 = !DILocation(line: 3678, column: 29, scope: !6641)
!6646 = !DILocation(line: 3678, column: 38, scope: !6641)
!6647 = !DILocation(line: 3678, column: 41, scope: !6641)
!6648 = !DILocation(line: 3678, column: 50, scope: !6641)
!6649 = !DILocation(line: 3678, column: 40, scope: !6641)
!6650 = !DILocation(line: 3678, column: 53, scope: !6641)
!6651 = !DILocation(line: 3678, column: 55, scope: !6641)
!6652 = !DILocation(line: 3678, column: 23, scope: !6641)
!6653 = !DILocation(line: 3678, column: 13, scope: !6641)
!6654 = !DILocation(line: 3678, column: 12, scope: !6641)
!6655 = !DILocation(line: 3679, column: 29, scope: !6641)
!6656 = !DILocation(line: 3679, column: 38, scope: !6641)
!6657 = !DILocation(line: 3679, column: 41, scope: !6641)
!6658 = !DILocation(line: 3679, column: 50, scope: !6641)
!6659 = !DILocation(line: 3679, column: 40, scope: !6641)
!6660 = !DILocation(line: 3679, column: 53, scope: !6641)
!6661 = !DILocation(line: 3679, column: 55, scope: !6641)
!6662 = !DILocation(line: 3679, column: 23, scope: !6641)
!6663 = !DILocation(line: 3679, column: 13, scope: !6641)
!6664 = !DILocation(line: 3679, column: 12, scope: !6641)
!6665 = !DILocation(line: 3680, column: 20, scope: !6641)
!6666 = !DILocation(line: 3680, column: 19, scope: !6641)
!6667 = !DILocation(line: 3681, column: 30, scope: !6641)
!6668 = !DILocation(line: 3681, column: 21, scope: !6641)
!6669 = !DILocation(line: 3681, column: 18, scope: !6641)
!6670 = !DILocation(line: 3681, column: 20, scope: !6641)
!6671 = !DILocation(line: 3682, column: 30, scope: !6641)
!6672 = !DILocation(line: 3682, column: 21, scope: !6641)
!6673 = !DILocation(line: 3682, column: 18, scope: !6641)
!6674 = !DILocation(line: 3682, column: 20, scope: !6641)
!6675 = !DILocation(line: 3683, column: 31, scope: !6641)
!6676 = !DILocation(line: 3683, column: 37, scope: !6641)
!6677 = !DILocation(line: 3683, column: 48, scope: !6641)
!6678 = !DILocation(line: 3684, column: 9, scope: !6641)
!6679 = !DILocation(line: 3684, column: 19, scope: !6641)
!6680 = !DILocation(line: 3683, column: 14, scope: !6641)
!6681 = !DILocation(line: 3685, column: 20, scope: !6641)
!6682 = !DILocation(line: 3685, column: 19, scope: !6641)
!6683 = !DILocation(line: 3686, column: 30, scope: !6641)
!6684 = !DILocation(line: 3686, column: 21, scope: !6641)
!6685 = !DILocation(line: 3686, column: 18, scope: !6641)
!6686 = !DILocation(line: 3686, column: 20, scope: !6641)
!6687 = !DILocation(line: 3687, column: 30, scope: !6641)
!6688 = !DILocation(line: 3687, column: 21, scope: !6641)
!6689 = !DILocation(line: 3687, column: 18, scope: !6641)
!6690 = !DILocation(line: 3687, column: 20, scope: !6641)
!6691 = !DILocation(line: 3688, column: 31, scope: !6641)
!6692 = !DILocation(line: 3688, column: 37, scope: !6641)
!6693 = !DILocation(line: 3688, column: 48, scope: !6641)
!6694 = !DILocation(line: 3689, column: 9, scope: !6641)
!6695 = !DILocation(line: 3689, column: 19, scope: !6641)
!6696 = !DILocation(line: 3688, column: 14, scope: !6641)
!6697 = !DILocation(line: 3690, column: 20, scope: !6641)
!6698 = !DILocation(line: 3690, column: 19, scope: !6641)
!6699 = !DILocation(line: 3691, column: 30, scope: !6641)
!6700 = !DILocation(line: 3691, column: 21, scope: !6641)
!6701 = !DILocation(line: 3691, column: 18, scope: !6641)
!6702 = !DILocation(line: 3691, column: 20, scope: !6641)
!6703 = !DILocation(line: 3692, column: 30, scope: !6641)
!6704 = !DILocation(line: 3692, column: 21, scope: !6641)
!6705 = !DILocation(line: 3692, column: 18, scope: !6641)
!6706 = !DILocation(line: 3692, column: 20, scope: !6641)
!6707 = !DILocation(line: 3693, column: 31, scope: !6641)
!6708 = !DILocation(line: 3693, column: 37, scope: !6641)
!6709 = !DILocation(line: 3693, column: 48, scope: !6641)
!6710 = !DILocation(line: 3694, column: 9, scope: !6641)
!6711 = !DILocation(line: 3694, column: 19, scope: !6641)
!6712 = !DILocation(line: 3693, column: 14, scope: !6641)
!6713 = !DILocation(line: 3695, column: 20, scope: !6641)
!6714 = !DILocation(line: 3695, column: 19, scope: !6641)
!6715 = !DILocation(line: 3696, column: 30, scope: !6641)
!6716 = !DILocation(line: 3696, column: 21, scope: !6641)
!6717 = !DILocation(line: 3696, column: 18, scope: !6641)
!6718 = !DILocation(line: 3696, column: 20, scope: !6641)
!6719 = !DILocation(line: 3697, column: 30, scope: !6641)
!6720 = !DILocation(line: 3697, column: 21, scope: !6641)
!6721 = !DILocation(line: 3697, column: 18, scope: !6641)
!6722 = !DILocation(line: 3697, column: 20, scope: !6641)
!6723 = !DILocation(line: 3698, column: 31, scope: !6641)
!6724 = !DILocation(line: 3698, column: 37, scope: !6641)
!6725 = !DILocation(line: 3698, column: 48, scope: !6641)
!6726 = !DILocation(line: 3699, column: 9, scope: !6641)
!6727 = !DILocation(line: 3699, column: 19, scope: !6641)
!6728 = !DILocation(line: 3698, column: 14, scope: !6641)
!6729 = !DILocation(line: 3698, column: 7, scope: !6641)
!6730 = !DILocation(line: 3701, column: 25, scope: !6587)
!6731 = !DILocation(line: 3701, column: 34, scope: !6587)
!6732 = !DILocation(line: 3701, column: 37, scope: !6587)
!6733 = !DILocation(line: 3701, column: 46, scope: !6587)
!6734 = !DILocation(line: 3701, column: 36, scope: !6587)
!6735 = !DILocation(line: 3701, column: 49, scope: !6587)
!6736 = !DILocation(line: 3701, column: 51, scope: !6587)
!6737 = !DILocation(line: 3701, column: 19, scope: !6587)
!6738 = !DILocation(line: 3701, column: 9, scope: !6587)
!6739 = !DILocation(line: 3701, column: 8, scope: !6587)
!6740 = !DILocation(line: 3702, column: 25, scope: !6587)
!6741 = !DILocation(line: 3702, column: 34, scope: !6587)
!6742 = !DILocation(line: 3702, column: 37, scope: !6587)
!6743 = !DILocation(line: 3702, column: 46, scope: !6587)
!6744 = !DILocation(line: 3702, column: 36, scope: !6587)
!6745 = !DILocation(line: 3702, column: 49, scope: !6587)
!6746 = !DILocation(line: 3702, column: 51, scope: !6587)
!6747 = !DILocation(line: 3702, column: 19, scope: !6587)
!6748 = !DILocation(line: 3702, column: 9, scope: !6587)
!6749 = !DILocation(line: 3702, column: 8, scope: !6587)
!6750 = !DILocation(line: 3703, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3703, column: 7)
!6752 = !DILocation(line: 3703, column: 17, scope: !6751)
!6753 = !DILocation(line: 3703, column: 32, scope: !6751)
!6754 = !DILocation(line: 3703, column: 23, scope: !6751)
!6755 = !DILocation(line: 3703, column: 20, scope: !6751)
!6756 = !DILocation(line: 3703, column: 39, scope: !6751)
!6757 = !DILocation(line: 3703, column: 43, scope: !6751)
!6758 = !DILocation(line: 3703, column: 52, scope: !6751)
!6759 = !DILocation(line: 3703, column: 67, scope: !6751)
!6760 = !DILocation(line: 3703, column: 58, scope: !6751)
!6761 = !DILocation(line: 3703, column: 55, scope: !6751)
!6762 = !DILocation(line: 3703, column: 74, scope: !6751)
!6763 = !DILocation(line: 3704, column: 8, scope: !6751)
!6764 = !DILocation(line: 3704, column: 17, scope: !6751)
!6765 = !DILocation(line: 3704, column: 32, scope: !6751)
!6766 = !DILocation(line: 3704, column: 23, scope: !6751)
!6767 = !DILocation(line: 3704, column: 20, scope: !6751)
!6768 = !DILocation(line: 3704, column: 39, scope: !6751)
!6769 = !DILocation(line: 3704, column: 43, scope: !6751)
!6770 = !DILocation(line: 3704, column: 52, scope: !6751)
!6771 = !DILocation(line: 3704, column: 67, scope: !6751)
!6772 = !DILocation(line: 3704, column: 58, scope: !6751)
!6773 = !DILocation(line: 3704, column: 55, scope: !6751)
!6774 = !DILocation(line: 3703, column: 7, scope: !6587)
!6775 = !DILocation(line: 3705, column: 5, scope: !6751)
!6776 = !DILocation(line: 3709, column: 15, scope: !6587)
!6777 = !DILocation(line: 3709, column: 22, scope: !6587)
!6778 = !DILocation(line: 3709, column: 12, scope: !6587)
!6779 = !DILocation(line: 3710, column: 37, scope: !6587)
!6780 = !DILocation(line: 3710, column: 36, scope: !6587)
!6781 = !DILocation(line: 3710, column: 31, scope: !6587)
!6782 = !DILocation(line: 3710, column: 9, scope: !6587)
!6783 = !DILocation(line: 3711, column: 8, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3711, column: 7)
!6785 = !DILocation(line: 3711, column: 17, scope: !6784)
!6786 = !DILocation(line: 3711, column: 32, scope: !6784)
!6787 = !DILocation(line: 3711, column: 23, scope: !6784)
!6788 = !DILocation(line: 3711, column: 20, scope: !6784)
!6789 = !DILocation(line: 3711, column: 39, scope: !6784)
!6790 = !DILocation(line: 3711, column: 43, scope: !6784)
!6791 = !DILocation(line: 3711, column: 52, scope: !6784)
!6792 = !DILocation(line: 3711, column: 67, scope: !6784)
!6793 = !DILocation(line: 3711, column: 58, scope: !6784)
!6794 = !DILocation(line: 3711, column: 55, scope: !6784)
!6795 = !DILocation(line: 3711, column: 7, scope: !6587)
!6796 = !DILocalVariable(name: "q", scope: !6797, file: !1, line: 3714, type: !1642)
!6797 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 3712, column: 5)
!6798 = !DILocation(line: 3714, column: 19, scope: !6797)
!6799 = !DILocation(line: 3719, column: 24, scope: !6797)
!6800 = !DILocation(line: 3719, column: 33, scope: !6797)
!6801 = !DILocation(line: 3719, column: 35, scope: !6797)
!6802 = !DILocation(line: 3719, column: 19, scope: !6797)
!6803 = !DILocation(line: 3719, column: 9, scope: !6797)
!6804 = !DILocation(line: 3719, column: 8, scope: !6797)
!6805 = !DILocation(line: 3720, column: 42, scope: !6797)
!6806 = !DILocation(line: 3720, column: 53, scope: !6797)
!6807 = !DILocation(line: 3721, column: 14, scope: !6797)
!6808 = !DILocation(line: 3721, column: 23, scope: !6797)
!6809 = !DILocation(line: 3721, column: 25, scope: !6797)
!6810 = !DILocation(line: 3721, column: 9, scope: !6797)
!6811 = !DILocation(line: 3720, column: 55, scope: !6797)
!6812 = !DILocation(line: 3721, column: 34, scope: !6797)
!6813 = !DILocation(line: 3720, column: 14, scope: !6797)
!6814 = !DILocation(line: 3722, column: 42, scope: !6797)
!6815 = !DILocation(line: 3722, column: 53, scope: !6797)
!6816 = !DILocation(line: 3723, column: 14, scope: !6797)
!6817 = !DILocation(line: 3723, column: 23, scope: !6797)
!6818 = !DILocation(line: 3723, column: 25, scope: !6797)
!6819 = !DILocation(line: 3723, column: 9, scope: !6797)
!6820 = !DILocation(line: 3722, column: 55, scope: !6797)
!6821 = !DILocation(line: 3723, column: 34, scope: !6797)
!6822 = !DILocation(line: 3722, column: 14, scope: !6797)
!6823 = !DILocation(line: 3724, column: 39, scope: !6797)
!6824 = !DILocation(line: 3724, column: 50, scope: !6797)
!6825 = !DILocation(line: 3724, column: 52, scope: !6797)
!6826 = !DILocation(line: 3724, column: 62, scope: !6797)
!6827 = !DILocation(line: 3724, column: 9, scope: !6797)
!6828 = !DILocation(line: 3724, column: 8, scope: !6797)
!6829 = !DILocation(line: 3725, column: 11, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6797, file: !1, line: 3725, column: 11)
!6831 = !DILocation(line: 3725, column: 13, scope: !6830)
!6832 = !DILocation(line: 3725, column: 11, scope: !6797)
!6833 = !DILocation(line: 3726, column: 9, scope: !6830)
!6834 = !DILocation(line: 3727, column: 7, scope: !6797)
!6835 = !DILocation(line: 3729, column: 7, scope: !6797)
!6836 = !DILocation(line: 3731, column: 7, scope: !6797)
!6837 = !DILocation(line: 3733, column: 43, scope: !6797)
!6838 = !DILocation(line: 3733, column: 54, scope: !6797)
!6839 = !DILocation(line: 3733, column: 14, scope: !6797)
!6840 = !DILocation(line: 3734, column: 11, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6797, file: !1, line: 3734, column: 11)
!6842 = !DILocation(line: 3734, column: 20, scope: !6841)
!6843 = !DILocation(line: 3734, column: 26, scope: !6841)
!6844 = !DILocation(line: 3734, column: 35, scope: !6841)
!6845 = !DILocation(line: 3734, column: 23, scope: !6841)
!6846 = !DILocation(line: 3734, column: 11, scope: !6797)
!6847 = !DILocation(line: 3739, column: 28, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6841, file: !1, line: 3735, column: 9)
!6849 = !DILocation(line: 3739, column: 37, scope: !6848)
!6850 = !DILocation(line: 3739, column: 39, scope: !6848)
!6851 = !DILocation(line: 3739, column: 23, scope: !6848)
!6852 = !DILocation(line: 3739, column: 13, scope: !6848)
!6853 = !DILocation(line: 3739, column: 12, scope: !6848)
!6854 = !DILocation(line: 3740, column: 46, scope: !6848)
!6855 = !DILocation(line: 3740, column: 57, scope: !6848)
!6856 = !DILocation(line: 3741, column: 18, scope: !6848)
!6857 = !DILocation(line: 3741, column: 27, scope: !6848)
!6858 = !DILocation(line: 3741, column: 29, scope: !6848)
!6859 = !DILocation(line: 3741, column: 13, scope: !6848)
!6860 = !DILocation(line: 3740, column: 59, scope: !6848)
!6861 = !DILocation(line: 3741, column: 38, scope: !6848)
!6862 = !DILocation(line: 3740, column: 18, scope: !6848)
!6863 = !DILocation(line: 3742, column: 46, scope: !6848)
!6864 = !DILocation(line: 3742, column: 57, scope: !6848)
!6865 = !DILocation(line: 3743, column: 18, scope: !6848)
!6866 = !DILocation(line: 3743, column: 27, scope: !6848)
!6867 = !DILocation(line: 3743, column: 29, scope: !6848)
!6868 = !DILocation(line: 3743, column: 13, scope: !6848)
!6869 = !DILocation(line: 3742, column: 59, scope: !6848)
!6870 = !DILocation(line: 3743, column: 38, scope: !6848)
!6871 = !DILocation(line: 3742, column: 18, scope: !6848)
!6872 = !DILocation(line: 3744, column: 43, scope: !6848)
!6873 = !DILocation(line: 3744, column: 54, scope: !6848)
!6874 = !DILocation(line: 3744, column: 56, scope: !6848)
!6875 = !DILocation(line: 3744, column: 66, scope: !6848)
!6876 = !DILocation(line: 3744, column: 13, scope: !6848)
!6877 = !DILocation(line: 3744, column: 12, scope: !6848)
!6878 = !DILocation(line: 3745, column: 15, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6848, file: !1, line: 3745, column: 15)
!6880 = !DILocation(line: 3745, column: 17, scope: !6879)
!6881 = !DILocation(line: 3745, column: 15, scope: !6848)
!6882 = !DILocation(line: 3746, column: 13, scope: !6879)
!6883 = !DILocation(line: 3747, column: 11, scope: !6848)
!6884 = !DILocation(line: 3749, column: 11, scope: !6848)
!6885 = !DILocation(line: 3751, column: 11, scope: !6848)
!6886 = !DILocation(line: 3753, column: 47, scope: !6848)
!6887 = !DILocation(line: 3753, column: 58, scope: !6848)
!6888 = !DILocation(line: 3753, column: 18, scope: !6848)
!6889 = !DILocation(line: 3754, column: 9, scope: !6848)
!6890 = !DILocation(line: 3755, column: 5, scope: !6797)
!6891 = !DILocation(line: 3756, column: 8, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3756, column: 7)
!6893 = !DILocation(line: 3756, column: 17, scope: !6892)
!6894 = !DILocation(line: 3756, column: 32, scope: !6892)
!6895 = !DILocation(line: 3756, column: 23, scope: !6892)
!6896 = !DILocation(line: 3756, column: 20, scope: !6892)
!6897 = !DILocation(line: 3756, column: 39, scope: !6892)
!6898 = !DILocation(line: 3756, column: 43, scope: !6892)
!6899 = !DILocation(line: 3756, column: 52, scope: !6892)
!6900 = !DILocation(line: 3756, column: 67, scope: !6892)
!6901 = !DILocation(line: 3756, column: 58, scope: !6892)
!6902 = !DILocation(line: 3756, column: 55, scope: !6892)
!6903 = !DILocation(line: 3756, column: 7, scope: !6587)
!6904 = !DILocation(line: 3758, column: 12, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !1, line: 3758, column: 11)
!6906 = distinct !DILexicalBlock(scope: !6892, file: !1, line: 3757, column: 5)
!6907 = !DILocation(line: 3758, column: 21, scope: !6905)
!6908 = !DILocation(line: 3758, column: 36, scope: !6905)
!6909 = !DILocation(line: 3758, column: 27, scope: !6905)
!6910 = !DILocation(line: 3758, column: 24, scope: !6905)
!6911 = !DILocation(line: 3758, column: 43, scope: !6905)
!6912 = !DILocation(line: 3758, column: 47, scope: !6905)
!6913 = !DILocation(line: 3758, column: 56, scope: !6905)
!6914 = !DILocation(line: 3758, column: 71, scope: !6905)
!6915 = !DILocation(line: 3758, column: 62, scope: !6905)
!6916 = !DILocation(line: 3758, column: 59, scope: !6905)
!6917 = !DILocation(line: 3758, column: 11, scope: !6906)
!6918 = !DILocalVariable(name: "q", scope: !6919, file: !1, line: 3761, type: !1642)
!6919 = distinct !DILexicalBlock(scope: !6905, file: !1, line: 3759, column: 9)
!6920 = !DILocation(line: 3761, column: 23, scope: !6919)
!6921 = !DILocation(line: 3766, column: 28, scope: !6919)
!6922 = !DILocation(line: 3766, column: 37, scope: !6919)
!6923 = !DILocation(line: 3766, column: 39, scope: !6919)
!6924 = !DILocation(line: 3766, column: 23, scope: !6919)
!6925 = !DILocation(line: 3766, column: 13, scope: !6919)
!6926 = !DILocation(line: 3766, column: 12, scope: !6919)
!6927 = !DILocation(line: 3767, column: 46, scope: !6919)
!6928 = !DILocation(line: 3768, column: 18, scope: !6919)
!6929 = !DILocation(line: 3768, column: 27, scope: !6919)
!6930 = !DILocation(line: 3768, column: 29, scope: !6919)
!6931 = !DILocation(line: 3768, column: 13, scope: !6919)
!6932 = !DILocation(line: 3767, column: 57, scope: !6919)
!6933 = !DILocation(line: 3768, column: 35, scope: !6919)
!6934 = !DILocation(line: 3768, column: 40, scope: !6919)
!6935 = !DILocation(line: 3767, column: 18, scope: !6919)
!6936 = !DILocation(line: 3769, column: 46, scope: !6919)
!6937 = !DILocation(line: 3770, column: 18, scope: !6919)
!6938 = !DILocation(line: 3770, column: 27, scope: !6919)
!6939 = !DILocation(line: 3770, column: 29, scope: !6919)
!6940 = !DILocation(line: 3770, column: 13, scope: !6919)
!6941 = !DILocation(line: 3769, column: 57, scope: !6919)
!6942 = !DILocation(line: 3770, column: 35, scope: !6919)
!6943 = !DILocation(line: 3770, column: 40, scope: !6919)
!6944 = !DILocation(line: 3769, column: 18, scope: !6919)
!6945 = !DILocation(line: 3771, column: 43, scope: !6919)
!6946 = !DILocation(line: 3771, column: 54, scope: !6919)
!6947 = !DILocation(line: 3771, column: 60, scope: !6919)
!6948 = !DILocation(line: 3771, column: 66, scope: !6919)
!6949 = !DILocation(line: 3771, column: 13, scope: !6919)
!6950 = !DILocation(line: 3771, column: 12, scope: !6919)
!6951 = !DILocation(line: 3772, column: 15, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6919, file: !1, line: 3772, column: 15)
!6953 = !DILocation(line: 3772, column: 17, scope: !6952)
!6954 = !DILocation(line: 3772, column: 15, scope: !6919)
!6955 = !DILocation(line: 3773, column: 13, scope: !6952)
!6956 = !DILocation(line: 3774, column: 11, scope: !6919)
!6957 = !DILocation(line: 3776, column: 11, scope: !6919)
!6958 = !DILocation(line: 3778, column: 11, scope: !6919)
!6959 = !DILocation(line: 3780, column: 47, scope: !6919)
!6960 = !DILocation(line: 3780, column: 58, scope: !6919)
!6961 = !DILocation(line: 3780, column: 18, scope: !6919)
!6962 = !DILocation(line: 3781, column: 9, scope: !6919)
!6963 = !DILocation(line: 3782, column: 11, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6906, file: !1, line: 3782, column: 11)
!6965 = !DILocation(line: 3782, column: 20, scope: !6964)
!6966 = !DILocation(line: 3782, column: 26, scope: !6964)
!6967 = !DILocation(line: 3782, column: 35, scope: !6964)
!6968 = !DILocation(line: 3782, column: 23, scope: !6964)
!6969 = !DILocation(line: 3782, column: 11, scope: !6906)
!6970 = !DILocalVariable(name: "q", scope: !6971, file: !1, line: 3785, type: !1642)
!6971 = distinct !DILexicalBlock(scope: !6964, file: !1, line: 3783, column: 9)
!6972 = !DILocation(line: 3785, column: 23, scope: !6971)
!6973 = !DILocation(line: 3790, column: 28, scope: !6971)
!6974 = !DILocation(line: 3790, column: 37, scope: !6971)
!6975 = !DILocation(line: 3790, column: 39, scope: !6971)
!6976 = !DILocation(line: 3790, column: 23, scope: !6971)
!6977 = !DILocation(line: 3790, column: 13, scope: !6971)
!6978 = !DILocation(line: 3790, column: 12, scope: !6971)
!6979 = !DILocation(line: 3791, column: 46, scope: !6971)
!6980 = !DILocation(line: 3792, column: 18, scope: !6971)
!6981 = !DILocation(line: 3792, column: 27, scope: !6971)
!6982 = !DILocation(line: 3792, column: 29, scope: !6971)
!6983 = !DILocation(line: 3792, column: 13, scope: !6971)
!6984 = !DILocation(line: 3791, column: 57, scope: !6971)
!6985 = !DILocation(line: 3792, column: 35, scope: !6971)
!6986 = !DILocation(line: 3792, column: 40, scope: !6971)
!6987 = !DILocation(line: 3791, column: 18, scope: !6971)
!6988 = !DILocation(line: 3793, column: 46, scope: !6971)
!6989 = !DILocation(line: 3794, column: 18, scope: !6971)
!6990 = !DILocation(line: 3794, column: 27, scope: !6971)
!6991 = !DILocation(line: 3794, column: 29, scope: !6971)
!6992 = !DILocation(line: 3794, column: 13, scope: !6971)
!6993 = !DILocation(line: 3793, column: 57, scope: !6971)
!6994 = !DILocation(line: 3794, column: 35, scope: !6971)
!6995 = !DILocation(line: 3794, column: 40, scope: !6971)
!6996 = !DILocation(line: 3793, column: 18, scope: !6971)
!6997 = !DILocation(line: 3795, column: 43, scope: !6971)
!6998 = !DILocation(line: 3795, column: 54, scope: !6971)
!6999 = !DILocation(line: 3795, column: 60, scope: !6971)
!7000 = !DILocation(line: 3795, column: 66, scope: !6971)
!7001 = !DILocation(line: 3795, column: 13, scope: !6971)
!7002 = !DILocation(line: 3795, column: 12, scope: !6971)
!7003 = !DILocation(line: 3796, column: 15, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6971, file: !1, line: 3796, column: 15)
!7005 = !DILocation(line: 3796, column: 17, scope: !7004)
!7006 = !DILocation(line: 3796, column: 15, scope: !6971)
!7007 = !DILocation(line: 3797, column: 13, scope: !7004)
!7008 = !DILocation(line: 3798, column: 11, scope: !6971)
!7009 = !DILocation(line: 3800, column: 11, scope: !6971)
!7010 = !DILocation(line: 3802, column: 11, scope: !6971)
!7011 = !DILocation(line: 3804, column: 47, scope: !6971)
!7012 = !DILocation(line: 3804, column: 58, scope: !6971)
!7013 = !DILocation(line: 3804, column: 18, scope: !6971)
!7014 = !DILocation(line: 3805, column: 9, scope: !6971)
!7015 = !DILocation(line: 3806, column: 5, scope: !6906)
!7016 = !DILocation(line: 3807, column: 8, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3807, column: 7)
!7018 = !DILocation(line: 3807, column: 17, scope: !7017)
!7019 = !DILocation(line: 3807, column: 23, scope: !7017)
!7020 = !DILocation(line: 3807, column: 32, scope: !7017)
!7021 = !DILocation(line: 3807, column: 20, scope: !7017)
!7022 = !DILocation(line: 3807, column: 36, scope: !7017)
!7023 = !DILocation(line: 3807, column: 40, scope: !7017)
!7024 = !DILocation(line: 3807, column: 49, scope: !7017)
!7025 = !DILocation(line: 3807, column: 55, scope: !7017)
!7026 = !DILocation(line: 3807, column: 64, scope: !7017)
!7027 = !DILocation(line: 3807, column: 52, scope: !7017)
!7028 = !DILocation(line: 3807, column: 7, scope: !6587)
!7029 = !DILocalVariable(name: "q", scope: !7030, file: !1, line: 3810, type: !1642)
!7030 = distinct !DILexicalBlock(scope: !7017, file: !1, line: 3808, column: 5)
!7031 = !DILocation(line: 3810, column: 19, scope: !7030)
!7032 = !DILocation(line: 3815, column: 24, scope: !7030)
!7033 = !DILocation(line: 3815, column: 33, scope: !7030)
!7034 = !DILocation(line: 3815, column: 35, scope: !7030)
!7035 = !DILocation(line: 3815, column: 19, scope: !7030)
!7036 = !DILocation(line: 3815, column: 9, scope: !7030)
!7037 = !DILocation(line: 3815, column: 8, scope: !7030)
!7038 = !DILocation(line: 3816, column: 24, scope: !7030)
!7039 = !DILocation(line: 3816, column: 33, scope: !7030)
!7040 = !DILocation(line: 3816, column: 35, scope: !7030)
!7041 = !DILocation(line: 3816, column: 19, scope: !7030)
!7042 = !DILocation(line: 3816, column: 9, scope: !7030)
!7043 = !DILocation(line: 3816, column: 8, scope: !7030)
!7044 = !DILocation(line: 3817, column: 33, scope: !7030)
!7045 = !DILocation(line: 3817, column: 39, scope: !7030)
!7046 = !DILocation(line: 3817, column: 41, scope: !7030)
!7047 = !DILocation(line: 3817, column: 46, scope: !7030)
!7048 = !DILocation(line: 3817, column: 14, scope: !7030)
!7049 = !DILocation(line: 3818, column: 24, scope: !7030)
!7050 = !DILocation(line: 3818, column: 33, scope: !7030)
!7051 = !DILocation(line: 3818, column: 35, scope: !7030)
!7052 = !DILocation(line: 3818, column: 19, scope: !7030)
!7053 = !DILocation(line: 3818, column: 9, scope: !7030)
!7054 = !DILocation(line: 3818, column: 8, scope: !7030)
!7055 = !DILocation(line: 3819, column: 24, scope: !7030)
!7056 = !DILocation(line: 3819, column: 33, scope: !7030)
!7057 = !DILocation(line: 3819, column: 35, scope: !7030)
!7058 = !DILocation(line: 3819, column: 19, scope: !7030)
!7059 = !DILocation(line: 3819, column: 9, scope: !7030)
!7060 = !DILocation(line: 3819, column: 8, scope: !7030)
!7061 = !DILocation(line: 3820, column: 42, scope: !7030)
!7062 = !DILocation(line: 3820, column: 53, scope: !7030)
!7063 = !DILocation(line: 3820, column: 55, scope: !7030)
!7064 = !DILocation(line: 3820, column: 60, scope: !7030)
!7065 = !DILocation(line: 3820, column: 14, scope: !7030)
!7066 = !DILocation(line: 3821, column: 39, scope: !7030)
!7067 = !DILocation(line: 3821, column: 50, scope: !7030)
!7068 = !DILocation(line: 3821, column: 56, scope: !7030)
!7069 = !DILocation(line: 3821, column: 66, scope: !7030)
!7070 = !DILocation(line: 3821, column: 9, scope: !7030)
!7071 = !DILocation(line: 3821, column: 8, scope: !7030)
!7072 = !DILocation(line: 3822, column: 11, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7030, file: !1, line: 3822, column: 11)
!7074 = !DILocation(line: 3822, column: 13, scope: !7073)
!7075 = !DILocation(line: 3822, column: 11, scope: !7030)
!7076 = !DILocation(line: 3823, column: 9, scope: !7073)
!7077 = !DILocation(line: 3824, column: 7, scope: !7030)
!7078 = !DILocation(line: 3826, column: 7, scope: !7030)
!7079 = !DILocation(line: 3828, column: 7, scope: !7030)
!7080 = !DILocation(line: 3830, column: 43, scope: !7030)
!7081 = !DILocation(line: 3830, column: 54, scope: !7030)
!7082 = !DILocation(line: 3830, column: 14, scope: !7030)
!7083 = !DILocation(line: 3831, column: 5, scope: !7030)
!7084 = !DILocation(line: 3832, column: 9, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 3832, column: 7)
!7086 = !DILocation(line: 3832, column: 18, scope: !7085)
!7087 = !DILocation(line: 3832, column: 21, scope: !7085)
!7088 = !DILocation(line: 3832, column: 30, scope: !7085)
!7089 = !DILocation(line: 3832, column: 20, scope: !7085)
!7090 = !DILocation(line: 3832, column: 34, scope: !7085)
!7091 = !DILocation(line: 3832, column: 41, scope: !7085)
!7092 = !DILocation(line: 3832, column: 46, scope: !7085)
!7093 = !DILocation(line: 3832, column: 55, scope: !7085)
!7094 = !DILocation(line: 3832, column: 58, scope: !7085)
!7095 = !DILocation(line: 3832, column: 67, scope: !7085)
!7096 = !DILocation(line: 3832, column: 57, scope: !7085)
!7097 = !DILocation(line: 3832, column: 71, scope: !7085)
!7098 = !DILocation(line: 3832, column: 7, scope: !6587)
!7099 = !DILocation(line: 3833, column: 5, scope: !7085)
!7100 = !DILocation(line: 3834, column: 3, scope: !6587)
!7101 = !DILocation(line: 3835, column: 1, scope: !6587)
!7102 = distinct !DISubprogram(name: "PlasmaPixel", scope: !1, file: !1, line: 3635, type: !7103, scopeLine: 3637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!847, !1085, !1876, !1986}
!7105 = !DILocalVariable(name: "random_info", arg: 1, scope: !7102, file: !1, line: 3635, type: !1085)
!7106 = !DILocation(line: 3635, column: 47, scope: !7102)
!7107 = !DILocalVariable(name: "pixel", arg: 2, scope: !7102, file: !1, line: 3636, type: !1876)
!7108 = !DILocation(line: 3636, column: 24, scope: !7102)
!7109 = !DILocalVariable(name: "noise", arg: 3, scope: !7102, file: !1, line: 3636, type: !1986)
!7110 = !DILocation(line: 3636, column: 43, scope: !7102)
!7111 = !DILocalVariable(name: "plasma", scope: !7102, file: !1, line: 3639, type: !847)
!7112 = !DILocation(line: 3639, column: 5, scope: !7102)
!7113 = !DILocation(line: 3641, column: 25, scope: !7102)
!7114 = !DILocation(line: 3641, column: 31, scope: !7102)
!7115 = !DILocation(line: 3641, column: 58, scope: !7102)
!7116 = !DILocation(line: 3641, column: 37, scope: !7102)
!7117 = !DILocation(line: 3641, column: 36, scope: !7102)
!7118 = !DILocation(line: 3641, column: 30, scope: !7102)
!7119 = !DILocation(line: 3642, column: 5, scope: !7102)
!7120 = !DILocation(line: 3642, column: 10, scope: !7102)
!7121 = !DILocation(line: 3641, column: 70, scope: !7102)
!7122 = !DILocation(line: 3641, column: 10, scope: !7102)
!7123 = !DILocation(line: 3641, column: 9, scope: !7102)
!7124 = !DILocation(line: 3643, column: 10, scope: !7102)
!7125 = !DILocation(line: 3643, column: 3, scope: !7102)
!7126 = distinct !DISubprogram(name: "PlasmaImage", scope: !1, file: !1, line: 3837, type: !7127, scopeLine: 3839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!709, !1090, !6590, !716, !716}
!7129 = !DILocalVariable(name: "image", arg: 1, scope: !7126, file: !1, line: 3837, type: !1090)
!7130 = !DILocation(line: 3837, column: 51, scope: !7126)
!7131 = !DILocalVariable(name: "segment", arg: 2, scope: !7126, file: !1, line: 3838, type: !6590)
!7132 = !DILocation(line: 3838, column: 22, scope: !7126)
!7133 = !DILocalVariable(name: "attenuate", arg: 3, scope: !7126, file: !1, line: 3838, type: !716)
!7134 = !DILocation(line: 3838, column: 37, scope: !7126)
!7135 = !DILocalVariable(name: "depth", arg: 4, scope: !7126, file: !1, line: 3838, type: !716)
!7136 = !DILocation(line: 3838, column: 54, scope: !7126)
!7137 = !DILocalVariable(name: "image_view", scope: !7126, file: !1, line: 3841, type: !1081)
!7138 = !DILocation(line: 3841, column: 6, scope: !7126)
!7139 = !DILocalVariable(name: "status", scope: !7126, file: !1, line: 3844, type: !709)
!7140 = !DILocation(line: 3844, column: 5, scope: !7126)
!7141 = !DILocalVariable(name: "random_info", scope: !7126, file: !1, line: 3847, type: !1085)
!7142 = !DILocation(line: 3847, column: 6, scope: !7126)
!7143 = !DILocation(line: 3849, column: 7, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7126, file: !1, line: 3849, column: 7)
!7145 = !DILocation(line: 3849, column: 14, scope: !7144)
!7146 = !DILocation(line: 3849, column: 20, scope: !7144)
!7147 = !DILocation(line: 3849, column: 7, scope: !7126)
!7148 = !DILocation(line: 3850, column: 12, scope: !7144)
!7149 = !DILocation(line: 3850, column: 5, scope: !7144)
!7150 = !DILocation(line: 3853, column: 7, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7126, file: !1, line: 3853, column: 7)
!7152 = !DILocation(line: 3853, column: 14, scope: !7151)
!7153 = !DILocation(line: 3853, column: 20, scope: !7151)
!7154 = !DILocation(line: 3853, column: 7, scope: !7126)
!7155 = !DILocation(line: 3854, column: 12, scope: !7151)
!7156 = !DILocation(line: 3854, column: 5, scope: !7151)
!7157 = !DILocation(line: 3855, column: 28, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7126, file: !1, line: 3855, column: 7)
!7159 = !DILocation(line: 3855, column: 7, scope: !7158)
!7160 = !DILocation(line: 3855, column: 47, scope: !7158)
!7161 = !DILocation(line: 3855, column: 7, scope: !7126)
!7162 = !DILocation(line: 3856, column: 5, scope: !7158)
!7163 = !DILocation(line: 3857, column: 38, scope: !7126)
!7164 = !DILocation(line: 3857, column: 45, scope: !7126)
!7165 = !DILocation(line: 3857, column: 52, scope: !7126)
!7166 = !DILocation(line: 3857, column: 14, scope: !7126)
!7167 = !DILocation(line: 3857, column: 13, scope: !7126)
!7168 = !DILocation(line: 3858, column: 15, scope: !7126)
!7169 = !DILocation(line: 3858, column: 14, scope: !7126)
!7170 = !DILocation(line: 3859, column: 27, scope: !7126)
!7171 = !DILocation(line: 3859, column: 33, scope: !7126)
!7172 = !DILocation(line: 3859, column: 44, scope: !7126)
!7173 = !DILocation(line: 3859, column: 56, scope: !7126)
!7174 = !DILocation(line: 3859, column: 64, scope: !7126)
!7175 = !DILocation(line: 3859, column: 74, scope: !7126)
!7176 = !DILocation(line: 3859, column: 10, scope: !7126)
!7177 = !DILocation(line: 3859, column: 9, scope: !7126)
!7178 = !DILocation(line: 3860, column: 33, scope: !7126)
!7179 = !DILocation(line: 3860, column: 15, scope: !7126)
!7180 = !DILocation(line: 3860, column: 14, scope: !7126)
!7181 = !DILocation(line: 3861, column: 31, scope: !7126)
!7182 = !DILocation(line: 3861, column: 14, scope: !7126)
!7183 = !DILocation(line: 3861, column: 13, scope: !7126)
!7184 = !DILocation(line: 3862, column: 10, scope: !7126)
!7185 = !DILocation(line: 3862, column: 3, scope: !7126)
!7186 = !DILocation(line: 3863, column: 1, scope: !7126)
!7187 = distinct !DISubprogram(name: "PolaroidImage", scope: !1, file: !1, line: 3894, type: !7188, scopeLine: 3896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{!1090, !821, !1180, !1986, !695}
!7190 = !DILocalVariable(name: "image", arg: 1, scope: !7187, file: !1, line: 3894, type: !821)
!7191 = !DILocation(line: 3894, column: 48, scope: !7187)
!7192 = !DILocalVariable(name: "draw_info", arg: 2, scope: !7187, file: !1, line: 3894, type: !1180)
!7193 = !DILocation(line: 3894, column: 70, scope: !7187)
!7194 = !DILocalVariable(name: "angle", arg: 3, scope: !7187, file: !1, line: 3895, type: !1986)
!7195 = !DILocation(line: 3895, column: 16, scope: !7187)
!7196 = !DILocalVariable(name: "exception", arg: 4, scope: !7187, file: !1, line: 3895, type: !695)
!7197 = !DILocation(line: 3895, column: 37, scope: !7187)
!7198 = !DILocalVariable(name: "value", scope: !7187, file: !1, line: 3898, type: !692)
!7199 = !DILocation(line: 3898, column: 6, scope: !7187)
!7200 = !DILocalVariable(name: "bend_image", scope: !7187, file: !1, line: 3901, type: !1090)
!7201 = !DILocation(line: 3901, column: 6, scope: !7187)
!7202 = !DILocalVariable(name: "caption_image", scope: !7187, file: !1, line: 3902, type: !1090)
!7203 = !DILocation(line: 3902, column: 6, scope: !7187)
!7204 = !DILocalVariable(name: "flop_image", scope: !7187, file: !1, line: 3903, type: !1090)
!7205 = !DILocation(line: 3903, column: 6, scope: !7187)
!7206 = !DILocalVariable(name: "picture_image", scope: !7187, file: !1, line: 3904, type: !1090)
!7207 = !DILocation(line: 3904, column: 6, scope: !7187)
!7208 = !DILocalVariable(name: "polaroid_image", scope: !7187, file: !1, line: 3905, type: !1090)
!7209 = !DILocation(line: 3905, column: 6, scope: !7187)
!7210 = !DILocalVariable(name: "rotate_image", scope: !7187, file: !1, line: 3906, type: !1090)
!7211 = !DILocation(line: 3906, column: 6, scope: !7187)
!7212 = !DILocalVariable(name: "trim_image", scope: !7187, file: !1, line: 3907, type: !1090)
!7213 = !DILocation(line: 3907, column: 6, scope: !7187)
!7214 = !DILocalVariable(name: "height", scope: !7187, file: !1, line: 3910, type: !716)
!7215 = !DILocation(line: 3910, column: 5, scope: !7187)
!7216 = !DILocalVariable(name: "quantum", scope: !7187, file: !1, line: 3913, type: !880)
!7217 = !DILocation(line: 3913, column: 5, scope: !7187)
!7218 = !DILocation(line: 3920, column: 7, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 3920, column: 7)
!7220 = !DILocation(line: 3920, column: 14, scope: !7219)
!7221 = !DILocation(line: 3920, column: 20, scope: !7219)
!7222 = !DILocation(line: 3920, column: 7, scope: !7187)
!7223 = !DILocation(line: 3921, column: 61, scope: !7219)
!7224 = !DILocation(line: 3921, column: 68, scope: !7219)
!7225 = !DILocation(line: 3921, column: 12, scope: !7219)
!7226 = !DILocation(line: 3921, column: 5, scope: !7219)
!7227 = !DILocation(line: 3924, column: 50, scope: !7187)
!7228 = !DILocation(line: 3924, column: 57, scope: !7187)
!7229 = !DILocation(line: 3924, column: 41, scope: !7187)
!7230 = !DILocation(line: 3925, column: 5, scope: !7187)
!7231 = !DILocation(line: 3925, column: 12, scope: !7187)
!7232 = !DILocation(line: 3924, column: 65, scope: !7187)
!7233 = !DILocation(line: 3924, column: 31, scope: !7187)
!7234 = !DILocation(line: 3925, column: 17, scope: !7187)
!7235 = !DILocation(line: 3924, column: 21, scope: !7187)
!7236 = !DILocation(line: 3924, column: 11, scope: !7187)
!7237 = !DILocation(line: 3924, column: 10, scope: !7187)
!7238 = !DILocation(line: 3926, column: 10, scope: !7187)
!7239 = !DILocation(line: 3926, column: 17, scope: !7187)
!7240 = !DILocation(line: 3926, column: 24, scope: !7187)
!7241 = !DILocation(line: 3926, column: 23, scope: !7187)
!7242 = !DILocation(line: 3926, column: 21, scope: !7187)
!7243 = !DILocation(line: 3926, column: 9, scope: !7187)
!7244 = !DILocation(line: 3927, column: 16, scope: !7187)
!7245 = !DILocation(line: 3928, column: 26, scope: !7187)
!7246 = !DILocation(line: 3928, column: 9, scope: !7187)
!7247 = !DILocation(line: 3928, column: 8, scope: !7187)
!7248 = !DILocation(line: 3929, column: 7, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 3929, column: 7)
!7250 = !DILocation(line: 3929, column: 13, scope: !7249)
!7251 = !DILocation(line: 3929, column: 7, scope: !7187)
!7252 = !DILocalVariable(name: "caption", scope: !7253, file: !1, line: 3932, type: !704)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3930, column: 5)
!7254 = !DILocation(line: 3932, column: 10, scope: !7253)
!7255 = !DILocalVariable(name: "geometry", scope: !7253, file: !1, line: 3933, type: !967)
!7256 = !DILocation(line: 3933, column: 9, scope: !7253)
!7257 = !DILocalVariable(name: "annotate_info", scope: !7253, file: !1, line: 3936, type: !7258)
!7258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!7259 = !DILocation(line: 3936, column: 10, scope: !7253)
!7260 = !DILocalVariable(name: "status", scope: !7253, file: !1, line: 3939, type: !709)
!7261 = !DILocation(line: 3939, column: 9, scope: !7253)
!7262 = !DILocalVariable(name: "count", scope: !7253, file: !1, line: 3942, type: !880)
!7263 = !DILocation(line: 3942, column: 9, scope: !7253)
!7264 = !DILocalVariable(name: "metrics", scope: !7253, file: !1, line: 3945, type: !7265)
!7265 = !DIDerivedType(tag: DW_TAG_typedef, name: "TypeMetric", file: !511, line: 372, baseType: !7266)
!7266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TypeMetric", file: !511, line: 353, size: 960, elements: !7267)
!7267 = !{!7268, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277}
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "pixels_per_em", scope: !7266, file: !511, line: 356, baseType: !1243, size: 128)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "ascent", scope: !7266, file: !511, line: 359, baseType: !856, size: 64, offset: 128)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "descent", scope: !7266, file: !511, line: 360, baseType: !856, size: 64, offset: 192)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !7266, file: !511, line: 361, baseType: !856, size: 64, offset: 256)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7266, file: !511, line: 362, baseType: !856, size: 64, offset: 320)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "max_advance", scope: !7266, file: !511, line: 363, baseType: !856, size: 64, offset: 384)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "underline_position", scope: !7266, file: !511, line: 364, baseType: !856, size: 64, offset: 448)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "underline_thickness", scope: !7266, file: !511, line: 365, baseType: !856, size: 64, offset: 512)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !7266, file: !511, line: 368, baseType: !1210, size: 256, offset: 576)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !7266, file: !511, line: 371, baseType: !1243, size: 128, offset: 832)
!7278 = !DILocation(line: 3945, column: 9, scope: !7253)
!7279 = !DILocation(line: 3950, column: 32, scope: !7253)
!7280 = !DILocation(line: 3950, column: 38, scope: !7253)
!7281 = !DILocation(line: 3950, column: 45, scope: !7253)
!7282 = !DILocation(line: 3950, column: 66, scope: !7253)
!7283 = !DILocation(line: 3950, column: 21, scope: !7253)
!7284 = !DILocation(line: 3950, column: 20, scope: !7253)
!7285 = !DILocation(line: 3951, column: 11, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7253, file: !1, line: 3951, column: 11)
!7287 = !DILocation(line: 3951, column: 25, scope: !7286)
!7288 = !DILocation(line: 3951, column: 11, scope: !7253)
!7289 = !DILocation(line: 3952, column: 9, scope: !7286)
!7290 = !DILocation(line: 3953, column: 60, scope: !7253)
!7291 = !DILocation(line: 3953, column: 21, scope: !7253)
!7292 = !DILocation(line: 3953, column: 20, scope: !7253)
!7293 = !DILocation(line: 3954, column: 69, scope: !7253)
!7294 = !DILocation(line: 3955, column: 9, scope: !7253)
!7295 = !DILocation(line: 3954, column: 15, scope: !7253)
!7296 = !DILocation(line: 3954, column: 14, scope: !7253)
!7297 = !DILocation(line: 3956, column: 27, scope: !7253)
!7298 = !DILocation(line: 3956, column: 42, scope: !7253)
!7299 = !DILocation(line: 3956, column: 47, scope: !7253)
!7300 = !DILocation(line: 3956, column: 14, scope: !7253)
!7301 = !DILocation(line: 3957, column: 33, scope: !7253)
!7302 = !DILocation(line: 3957, column: 47, scope: !7253)
!7303 = !DILocation(line: 3957, column: 13, scope: !7253)
!7304 = !DILocation(line: 3957, column: 12, scope: !7253)
!7305 = !DILocation(line: 3959, column: 29, scope: !7253)
!7306 = !DILocation(line: 3959, column: 43, scope: !7253)
!7307 = !DILocation(line: 3959, column: 50, scope: !7253)
!7308 = !DILocation(line: 3960, column: 11, scope: !7253)
!7309 = !DILocation(line: 3960, column: 16, scope: !7253)
!7310 = !DILocation(line: 3960, column: 10, scope: !7253)
!7311 = !DILocation(line: 3960, column: 29, scope: !7253)
!7312 = !DILocation(line: 3960, column: 44, scope: !7253)
!7313 = !DILocation(line: 3960, column: 35, scope: !7253)
!7314 = !DILocation(line: 3960, column: 19, scope: !7253)
!7315 = !DILocation(line: 3960, column: 52, scope: !7253)
!7316 = !DILocation(line: 3959, column: 58, scope: !7253)
!7317 = !DILocation(line: 3959, column: 14, scope: !7253)
!7318 = !DILocation(line: 3959, column: 13, scope: !7253)
!7319 = !DILocation(line: 3961, column: 11, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7253, file: !1, line: 3961, column: 11)
!7321 = !DILocation(line: 3961, column: 18, scope: !7320)
!7322 = !DILocation(line: 3961, column: 11, scope: !7253)
!7323 = !DILocation(line: 3962, column: 36, scope: !7320)
!7324 = !DILocation(line: 3962, column: 23, scope: !7320)
!7325 = !DILocation(line: 3962, column: 22, scope: !7320)
!7326 = !DILocation(line: 3962, column: 9, scope: !7320)
!7327 = !DILocation(line: 3965, column: 11, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7320, file: !1, line: 3964, column: 9)
!7329 = !DILocation(line: 3965, column: 26, scope: !7328)
!7330 = !DILocation(line: 3965, column: 43, scope: !7328)
!7331 = !DILocation(line: 3965, column: 50, scope: !7328)
!7332 = !DILocation(line: 3966, column: 42, scope: !7328)
!7333 = !DILocation(line: 3966, column: 18, scope: !7328)
!7334 = !DILocation(line: 3967, column: 31, scope: !7328)
!7335 = !DILocation(line: 3967, column: 46, scope: !7328)
!7336 = !DILocation(line: 3967, column: 51, scope: !7328)
!7337 = !DILocation(line: 3967, column: 18, scope: !7328)
!7338 = !DILocation(line: 3968, column: 37, scope: !7328)
!7339 = !DILocation(line: 3969, column: 21, scope: !7328)
!7340 = !DILocation(line: 3968, column: 18, scope: !7328)
!7341 = !DILocation(line: 3970, column: 15, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7328, file: !1, line: 3970, column: 15)
!7343 = !DILocation(line: 3970, column: 30, scope: !7342)
!7344 = !DILocation(line: 3970, column: 38, scope: !7342)
!7345 = !DILocation(line: 3970, column: 15, scope: !7328)
!7346 = !DILocation(line: 3971, column: 33, scope: !7342)
!7347 = !DILocation(line: 3971, column: 48, scope: !7342)
!7348 = !DILocation(line: 3972, column: 15, scope: !7342)
!7349 = !DILocation(line: 3971, column: 57, scope: !7342)
!7350 = !DILocation(line: 3971, column: 20, scope: !7342)
!7351 = !DILocation(line: 3971, column: 13, scope: !7342)
!7352 = !DILocation(line: 3973, column: 32, scope: !7328)
!7353 = !DILocation(line: 3973, column: 46, scope: !7328)
!7354 = !DILocation(line: 3973, column: 18, scope: !7328)
!7355 = !DILocation(line: 3974, column: 19, scope: !7328)
!7356 = !DILocation(line: 3974, column: 34, scope: !7328)
!7357 = !DILocation(line: 3974, column: 17, scope: !7328)
!7358 = !DILocation(line: 3976, column: 37, scope: !7253)
!7359 = !DILocation(line: 3976, column: 21, scope: !7253)
!7360 = !DILocation(line: 3976, column: 20, scope: !7253)
!7361 = !DILocation(line: 3977, column: 29, scope: !7253)
!7362 = !DILocation(line: 3977, column: 15, scope: !7253)
!7363 = !DILocation(line: 3977, column: 14, scope: !7253)
!7364 = !DILocation(line: 3978, column: 5, scope: !7253)
!7365 = !DILocation(line: 3979, column: 28, scope: !7187)
!7366 = !DILocation(line: 3979, column: 34, scope: !7187)
!7367 = !DILocation(line: 3979, column: 41, scope: !7187)
!7368 = !DILocation(line: 3979, column: 51, scope: !7187)
!7369 = !DILocation(line: 3979, column: 50, scope: !7187)
!7370 = !DILocation(line: 3979, column: 48, scope: !7187)
!7371 = !DILocation(line: 3979, column: 59, scope: !7187)
!7372 = !DILocation(line: 3980, column: 5, scope: !7187)
!7373 = !DILocation(line: 3979, column: 17, scope: !7187)
!7374 = !DILocation(line: 3979, column: 16, scope: !7187)
!7375 = !DILocation(line: 3981, column: 7, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 3981, column: 7)
!7377 = !DILocation(line: 3981, column: 21, scope: !7376)
!7378 = !DILocation(line: 3981, column: 7, scope: !7187)
!7379 = !DILocation(line: 3983, column: 11, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !1, line: 3983, column: 11)
!7381 = distinct !DILexicalBlock(scope: !7376, file: !1, line: 3982, column: 5)
!7382 = !DILocation(line: 3983, column: 25, scope: !7380)
!7383 = !DILocation(line: 3983, column: 11, scope: !7381)
!7384 = !DILocation(line: 3984, column: 36, scope: !7380)
!7385 = !DILocation(line: 3984, column: 23, scope: !7380)
!7386 = !DILocation(line: 3984, column: 22, scope: !7380)
!7387 = !DILocation(line: 3984, column: 9, scope: !7380)
!7388 = !DILocation(line: 3985, column: 7, scope: !7381)
!7389 = !DILocation(line: 3987, column: 3, scope: !7187)
!7390 = !DILocation(line: 3987, column: 18, scope: !7187)
!7391 = !DILocation(line: 3987, column: 35, scope: !7187)
!7392 = !DILocation(line: 3987, column: 42, scope: !7187)
!7393 = !DILocation(line: 3988, column: 34, scope: !7187)
!7394 = !DILocation(line: 3988, column: 10, scope: !7187)
!7395 = !DILocation(line: 3989, column: 25, scope: !7187)
!7396 = !DILocation(line: 3989, column: 55, scope: !7187)
!7397 = !DILocation(line: 3989, column: 61, scope: !7187)
!7398 = !DILocation(line: 3989, column: 69, scope: !7187)
!7399 = !DILocation(line: 3989, column: 10, scope: !7187)
!7400 = !DILocation(line: 3990, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 3990, column: 7)
!7402 = !DILocation(line: 3990, column: 21, scope: !7401)
!7403 = !DILocation(line: 3990, column: 7, scope: !7187)
!7404 = !DILocation(line: 3992, column: 29, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7401, file: !1, line: 3991, column: 5)
!7406 = !DILocation(line: 3992, column: 59, scope: !7405)
!7407 = !DILocation(line: 3993, column: 9, scope: !7405)
!7408 = !DILocation(line: 3993, column: 28, scope: !7405)
!7409 = !DILocation(line: 3993, column: 35, scope: !7405)
!7410 = !DILocation(line: 3993, column: 42, scope: !7405)
!7411 = !DILocation(line: 3993, column: 41, scope: !7405)
!7412 = !DILocation(line: 3993, column: 49, scope: !7405)
!7413 = !DILocation(line: 3993, column: 39, scope: !7405)
!7414 = !DILocation(line: 3992, column: 14, scope: !7405)
!7415 = !DILocation(line: 3994, column: 34, scope: !7405)
!7416 = !DILocation(line: 3994, column: 21, scope: !7405)
!7417 = !DILocation(line: 3994, column: 20, scope: !7405)
!7418 = !DILocation(line: 3995, column: 5, scope: !7405)
!7419 = !DILocation(line: 3996, column: 37, scope: !7187)
!7420 = !DILocation(line: 3996, column: 52, scope: !7187)
!7421 = !DILocation(line: 3996, column: 69, scope: !7187)
!7422 = !DILocation(line: 3996, column: 10, scope: !7187)
!7423 = !DILocation(line: 3997, column: 31, scope: !7187)
!7424 = !DILocation(line: 3997, column: 10, scope: !7187)
!7425 = !DILocation(line: 3998, column: 28, scope: !7187)
!7426 = !DILocation(line: 3998, column: 47, scope: !7187)
!7427 = !DILocation(line: 3998, column: 16, scope: !7187)
!7428 = !DILocation(line: 3998, column: 15, scope: !7187)
!7429 = !DILocation(line: 3999, column: 30, scope: !7187)
!7430 = !DILocation(line: 3999, column: 17, scope: !7187)
!7431 = !DILocation(line: 3999, column: 16, scope: !7187)
!7432 = !DILocation(line: 4000, column: 7, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4000, column: 7)
!7434 = !DILocation(line: 4000, column: 20, scope: !7433)
!7435 = !DILocation(line: 4000, column: 7, scope: !7187)
!7436 = !DILocation(line: 4001, column: 5, scope: !7433)
!7437 = !DILocation(line: 4002, column: 17, scope: !7187)
!7438 = !DILocation(line: 4002, column: 16, scope: !7187)
!7439 = !DILocation(line: 4003, column: 24, scope: !7187)
!7440 = !DILocation(line: 4003, column: 43, scope: !7187)
!7441 = !DILocation(line: 4003, column: 58, scope: !7187)
!7442 = !DILocation(line: 4003, column: 42, scope: !7187)
!7443 = !DILocation(line: 4004, column: 5, scope: !7187)
!7444 = !DILocation(line: 4004, column: 20, scope: !7187)
!7445 = !DILocation(line: 4003, column: 66, scope: !7187)
!7446 = !DILocation(line: 4004, column: 28, scope: !7187)
!7447 = !DILocation(line: 4003, column: 14, scope: !7187)
!7448 = !DILocation(line: 4003, column: 13, scope: !7187)
!7449 = !DILocation(line: 4005, column: 30, scope: !7187)
!7450 = !DILocation(line: 4005, column: 17, scope: !7187)
!7451 = !DILocation(line: 4005, column: 16, scope: !7187)
!7452 = !DILocation(line: 4006, column: 7, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4006, column: 7)
!7454 = !DILocation(line: 4006, column: 18, scope: !7453)
!7455 = !DILocation(line: 4006, column: 7, scope: !7187)
!7456 = !DILocation(line: 4007, column: 5, scope: !7453)
!7457 = !DILocation(line: 4008, column: 21, scope: !7187)
!7458 = !DILocation(line: 4008, column: 33, scope: !7187)
!7459 = !DILocation(line: 4008, column: 43, scope: !7187)
!7460 = !DILocation(line: 4008, column: 3, scope: !7187)
!7461 = !DILocation(line: 4009, column: 17, scope: !7187)
!7462 = !DILocation(line: 4009, column: 16, scope: !7187)
!7463 = !DILocation(line: 4010, column: 28, scope: !7187)
!7464 = !DILocation(line: 4010, column: 48, scope: !7187)
!7465 = !DILocation(line: 4010, column: 16, scope: !7187)
!7466 = !DILocation(line: 4010, column: 15, scope: !7187)
!7467 = !DILocation(line: 4011, column: 30, scope: !7187)
!7468 = !DILocation(line: 4011, column: 17, scope: !7187)
!7469 = !DILocation(line: 4011, column: 16, scope: !7187)
!7470 = !DILocation(line: 4012, column: 7, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4012, column: 7)
!7472 = !DILocation(line: 4012, column: 20, scope: !7471)
!7473 = !DILocation(line: 4012, column: 7, scope: !7187)
!7474 = !DILocation(line: 4013, column: 5, scope: !7471)
!7475 = !DILocation(line: 4014, column: 17, scope: !7187)
!7476 = !DILocation(line: 4014, column: 16, scope: !7187)
!7477 = !DILocation(line: 4015, column: 3, scope: !7187)
!7478 = !DILocation(line: 4015, column: 18, scope: !7187)
!7479 = !DILocation(line: 4015, column: 35, scope: !7187)
!7480 = !DILocation(line: 4015, column: 42, scope: !7187)
!7481 = !DILocation(line: 4016, column: 30, scope: !7187)
!7482 = !DILocation(line: 4016, column: 53, scope: !7187)
!7483 = !DILocation(line: 4016, column: 60, scope: !7187)
!7484 = !DILocation(line: 4016, column: 63, scope: !7187)
!7485 = !DILocation(line: 4016, column: 70, scope: !7187)
!7486 = !DILocation(line: 4017, column: 5, scope: !7187)
!7487 = !DILocation(line: 4016, column: 18, scope: !7187)
!7488 = !DILocation(line: 4016, column: 17, scope: !7187)
!7489 = !DILocation(line: 4018, column: 7, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4018, column: 7)
!7491 = !DILocation(line: 4018, column: 22, scope: !7490)
!7492 = !DILocation(line: 4018, column: 7, scope: !7187)
!7493 = !DILocation(line: 4020, column: 34, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !1, line: 4019, column: 5)
!7495 = !DILocation(line: 4020, column: 21, scope: !7494)
!7496 = !DILocation(line: 4020, column: 20, scope: !7494)
!7497 = !DILocation(line: 4021, column: 14, scope: !7494)
!7498 = !DILocation(line: 4021, column: 7, scope: !7494)
!7499 = !DILocation(line: 4023, column: 24, scope: !7187)
!7500 = !DILocation(line: 4023, column: 39, scope: !7187)
!7501 = !DILocation(line: 4023, column: 14, scope: !7187)
!7502 = !DILocation(line: 4023, column: 13, scope: !7187)
!7503 = !DILocation(line: 4024, column: 31, scope: !7187)
!7504 = !DILocation(line: 4024, column: 18, scope: !7187)
!7505 = !DILocation(line: 4024, column: 17, scope: !7187)
!7506 = !DILocation(line: 4025, column: 7, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4025, column: 7)
!7508 = !DILocation(line: 4025, column: 18, scope: !7507)
!7509 = !DILocation(line: 4025, column: 7, scope: !7187)
!7510 = !DILocation(line: 4027, column: 34, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 4026, column: 5)
!7512 = !DILocation(line: 4027, column: 21, scope: !7511)
!7513 = !DILocation(line: 4027, column: 20, scope: !7511)
!7514 = !DILocation(line: 4028, column: 14, scope: !7511)
!7515 = !DILocation(line: 4028, column: 7, scope: !7511)
!7516 = !DILocation(line: 4030, column: 18, scope: !7187)
!7517 = !DILocation(line: 4030, column: 17, scope: !7187)
!7518 = !DILocation(line: 4031, column: 25, scope: !7187)
!7519 = !DILocation(line: 4031, column: 56, scope: !7187)
!7520 = !DILocation(line: 4032, column: 22, scope: !7187)
!7521 = !DILocation(line: 4032, column: 37, scope: !7187)
!7522 = !DILocation(line: 4032, column: 21, scope: !7187)
!7523 = !DILocation(line: 4032, column: 44, scope: !7187)
!7524 = !DILocation(line: 4032, column: 5, scope: !7187)
!7525 = !DILocation(line: 4031, column: 10, scope: !7187)
!7526 = !DILocation(line: 4033, column: 30, scope: !7187)
!7527 = !DILocation(line: 4033, column: 17, scope: !7187)
!7528 = !DILocation(line: 4033, column: 16, scope: !7187)
!7529 = !DILocation(line: 4034, column: 37, scope: !7187)
!7530 = !DILocation(line: 4034, column: 53, scope: !7187)
!7531 = !DILocation(line: 4034, column: 70, scope: !7187)
!7532 = !DILocation(line: 4034, column: 10, scope: !7187)
!7533 = !DILocation(line: 4035, column: 28, scope: !7187)
!7534 = !DILocation(line: 4035, column: 43, scope: !7187)
!7535 = !DILocation(line: 4035, column: 49, scope: !7187)
!7536 = !DILocation(line: 4035, column: 16, scope: !7187)
!7537 = !DILocation(line: 4035, column: 15, scope: !7187)
!7538 = !DILocation(line: 4036, column: 31, scope: !7187)
!7539 = !DILocation(line: 4036, column: 18, scope: !7187)
!7540 = !DILocation(line: 4036, column: 17, scope: !7187)
!7541 = !DILocation(line: 4037, column: 7, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4037, column: 7)
!7543 = !DILocation(line: 4037, column: 20, scope: !7542)
!7544 = !DILocation(line: 4037, column: 7, scope: !7187)
!7545 = !DILocation(line: 4038, column: 5, scope: !7542)
!7546 = !DILocation(line: 4039, column: 18, scope: !7187)
!7547 = !DILocation(line: 4039, column: 17, scope: !7187)
!7548 = !DILocation(line: 4040, column: 24, scope: !7187)
!7549 = !DILocation(line: 4040, column: 39, scope: !7187)
!7550 = !DILocation(line: 4040, column: 14, scope: !7187)
!7551 = !DILocation(line: 4040, column: 13, scope: !7187)
!7552 = !DILocation(line: 4041, column: 31, scope: !7187)
!7553 = !DILocation(line: 4041, column: 18, scope: !7187)
!7554 = !DILocation(line: 4041, column: 17, scope: !7187)
!7555 = !DILocation(line: 4042, column: 7, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 4042, column: 7)
!7557 = !DILocation(line: 4042, column: 18, scope: !7556)
!7558 = !DILocation(line: 4042, column: 7, scope: !7187)
!7559 = !DILocation(line: 4043, column: 5, scope: !7556)
!7560 = !DILocation(line: 4044, column: 18, scope: !7187)
!7561 = !DILocation(line: 4044, column: 17, scope: !7187)
!7562 = !DILocation(line: 4045, column: 10, scope: !7187)
!7563 = !DILocation(line: 4045, column: 3, scope: !7187)
!7564 = !DILocation(line: 4046, column: 1, scope: !7187)
!7565 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 1140, type: !7566, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{!856, !1986, !1986}
!7568 = !DILocalVariable(name: "x", arg: 1, scope: !7565, file: !1, line: 1140, type: !1986)
!7569 = !DILocation(line: 1140, column: 45, scope: !7565)
!7570 = !DILocalVariable(name: "y", arg: 2, scope: !7565, file: !1, line: 1140, type: !1986)
!7571 = !DILocation(line: 1140, column: 60, scope: !7565)
!7572 = !DILocation(line: 1142, column: 7, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7565, file: !1, line: 1142, column: 7)
!7574 = !DILocation(line: 1142, column: 11, scope: !7573)
!7575 = !DILocation(line: 1142, column: 9, scope: !7573)
!7576 = !DILocation(line: 1142, column: 7, scope: !7565)
!7577 = !DILocation(line: 1143, column: 12, scope: !7573)
!7578 = !DILocation(line: 1143, column: 5, scope: !7573)
!7579 = !DILocation(line: 1144, column: 10, scope: !7565)
!7580 = !DILocation(line: 1144, column: 3, scope: !7565)
!7581 = !DILocation(line: 1145, column: 1, scope: !7565)
!7582 = distinct !DISubprogram(name: "WaveImage", scope: !1, file: !1, line: 5483, type: !2269, scopeLine: 5485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7583 = !DILocalVariable(name: "image", arg: 1, scope: !7582, file: !1, line: 5483, type: !821)
!7584 = !DILocation(line: 5483, column: 44, scope: !7582)
!7585 = !DILocalVariable(name: "amplitude", arg: 2, scope: !7582, file: !1, line: 5483, type: !1986)
!7586 = !DILocation(line: 5483, column: 63, scope: !7582)
!7587 = !DILocalVariable(name: "wave_length", arg: 3, scope: !7582, file: !1, line: 5484, type: !1986)
!7588 = !DILocation(line: 5484, column: 16, scope: !7582)
!7589 = !DILocalVariable(name: "exception", arg: 4, scope: !7582, file: !1, line: 5484, type: !695)
!7590 = !DILocation(line: 5484, column: 43, scope: !7582)
!7591 = !DILocalVariable(name: "image_view", scope: !7582, file: !1, line: 5489, type: !1081)
!7592 = !DILocation(line: 5489, column: 6, scope: !7582)
!7593 = !DILocalVariable(name: "wave_view", scope: !7582, file: !1, line: 5490, type: !1081)
!7594 = !DILocation(line: 5490, column: 6, scope: !7582)
!7595 = !DILocalVariable(name: "wave_image", scope: !7582, file: !1, line: 5493, type: !1090)
!7596 = !DILocation(line: 5493, column: 6, scope: !7582)
!7597 = !DILocalVariable(name: "status", scope: !7582, file: !1, line: 5496, type: !709)
!7598 = !DILocation(line: 5496, column: 5, scope: !7582)
!7599 = !DILocalVariable(name: "progress", scope: !7582, file: !1, line: 5499, type: !950)
!7600 = !DILocation(line: 5499, column: 5, scope: !7582)
!7601 = !DILocalVariable(name: "zero", scope: !7582, file: !1, line: 5502, type: !1223)
!7602 = !DILocation(line: 5502, column: 5, scope: !7582)
!7603 = !DILocalVariable(name: "sine_map", scope: !7582, file: !1, line: 5505, type: !1310)
!7604 = !DILocation(line: 5505, column: 6, scope: !7582)
!7605 = !DILocalVariable(name: "i", scope: !7582, file: !1, line: 5508, type: !880)
!7606 = !DILocation(line: 5508, column: 5, scope: !7582)
!7607 = !DILocalVariable(name: "y", scope: !7582, file: !1, line: 5511, type: !880)
!7608 = !DILocation(line: 5511, column: 5, scope: !7582)
!7609 = !DILocation(line: 5518, column: 7, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5518, column: 7)
!7611 = !DILocation(line: 5518, column: 14, scope: !7610)
!7612 = !DILocation(line: 5518, column: 20, scope: !7610)
!7613 = !DILocation(line: 5518, column: 7, scope: !7582)
!7614 = !DILocation(line: 5519, column: 61, scope: !7610)
!7615 = !DILocation(line: 5519, column: 68, scope: !7610)
!7616 = !DILocation(line: 5519, column: 12, scope: !7610)
!7617 = !DILocation(line: 5519, column: 5, scope: !7610)
!7618 = !DILocation(line: 5522, column: 25, scope: !7582)
!7619 = !DILocation(line: 5522, column: 31, scope: !7582)
!7620 = !DILocation(line: 5522, column: 38, scope: !7582)
!7621 = !DILocation(line: 5522, column: 56, scope: !7582)
!7622 = !DILocation(line: 5522, column: 63, scope: !7582)
!7623 = !DILocation(line: 5523, column: 10, scope: !7582)
!7624 = !DILocation(line: 5523, column: 5, scope: !7582)
!7625 = !DILocation(line: 5522, column: 71, scope: !7582)
!7626 = !DILocation(line: 5522, column: 67, scope: !7582)
!7627 = !DILocation(line: 5522, column: 46, scope: !7582)
!7628 = !DILocation(line: 5523, column: 33, scope: !7582)
!7629 = !DILocation(line: 5522, column: 14, scope: !7582)
!7630 = !DILocation(line: 5522, column: 13, scope: !7582)
!7631 = !DILocation(line: 5524, column: 7, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5524, column: 7)
!7633 = !DILocation(line: 5524, column: 18, scope: !7632)
!7634 = !DILocation(line: 5524, column: 7, scope: !7582)
!7635 = !DILocation(line: 5525, column: 5, scope: !7632)
!7636 = !DILocation(line: 5526, column: 28, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5526, column: 7)
!7638 = !DILocation(line: 5526, column: 7, scope: !7637)
!7639 = !DILocation(line: 5526, column: 52, scope: !7637)
!7640 = !DILocation(line: 5526, column: 7, scope: !7582)
!7641 = !DILocation(line: 5528, column: 24, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7637, file: !1, line: 5527, column: 5)
!7643 = !DILocation(line: 5528, column: 35, scope: !7642)
!7644 = !DILocation(line: 5528, column: 47, scope: !7642)
!7645 = !DILocation(line: 5528, column: 7, scope: !7642)
!7646 = !DILocation(line: 5529, column: 31, scope: !7642)
!7647 = !DILocation(line: 5529, column: 18, scope: !7642)
!7648 = !DILocation(line: 5529, column: 17, scope: !7642)
!7649 = !DILocation(line: 5530, column: 7, scope: !7642)
!7650 = !DILocation(line: 5532, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5532, column: 7)
!7652 = !DILocation(line: 5532, column: 19, scope: !7651)
!7653 = !DILocation(line: 5532, column: 36, scope: !7651)
!7654 = !DILocation(line: 5532, column: 44, scope: !7651)
!7655 = !DILocation(line: 5532, column: 7, scope: !7582)
!7656 = !DILocation(line: 5533, column: 5, scope: !7651)
!7657 = !DILocation(line: 5533, column: 17, scope: !7651)
!7658 = !DILocation(line: 5533, column: 22, scope: !7651)
!7659 = !DILocation(line: 5537, column: 61, scope: !7582)
!7660 = !DILocation(line: 5537, column: 73, scope: !7582)
!7661 = !DILocation(line: 5537, column: 31, scope: !7582)
!7662 = !DILocation(line: 5537, column: 12, scope: !7582)
!7663 = !DILocation(line: 5537, column: 11, scope: !7582)
!7664 = !DILocation(line: 5539, column: 7, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5539, column: 7)
!7666 = !DILocation(line: 5539, column: 16, scope: !7665)
!7667 = !DILocation(line: 5539, column: 7, scope: !7582)
!7668 = !DILocation(line: 5541, column: 31, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 5540, column: 5)
!7670 = !DILocation(line: 5541, column: 18, scope: !7669)
!7671 = !DILocation(line: 5541, column: 17, scope: !7669)
!7672 = !DILocation(line: 5542, column: 7, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7669, file: !1, line: 5542, column: 7)
!7674 = !DILocation(line: 5544, column: 9, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5544, column: 3)
!7676 = !DILocation(line: 5544, column: 8, scope: !7675)
!7677 = !DILocation(line: 5544, column: 13, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7675, file: !1, line: 5544, column: 3)
!7679 = !DILocation(line: 5544, column: 27, scope: !7678)
!7680 = !DILocation(line: 5544, column: 39, scope: !7678)
!7681 = !DILocation(line: 5544, column: 15, scope: !7678)
!7682 = !DILocation(line: 5544, column: 3, scope: !7675)
!7683 = !DILocation(line: 5545, column: 22, scope: !7678)
!7684 = !DILocation(line: 5545, column: 17, scope: !7678)
!7685 = !DILocation(line: 5545, column: 33, scope: !7678)
!7686 = !DILocation(line: 5545, column: 71, scope: !7678)
!7687 = !DILocation(line: 5545, column: 70, scope: !7678)
!7688 = !DILocation(line: 5546, column: 7, scope: !7678)
!7689 = !DILocation(line: 5545, column: 73, scope: !7678)
!7690 = !DILocation(line: 5545, column: 43, scope: !7678)
!7691 = !DILocation(line: 5545, column: 42, scope: !7678)
!7692 = !DILocation(line: 5545, column: 32, scope: !7678)
!7693 = !DILocation(line: 5545, column: 5, scope: !7678)
!7694 = !DILocation(line: 5545, column: 14, scope: !7678)
!7695 = !DILocation(line: 5545, column: 16, scope: !7678)
!7696 = !DILocation(line: 5544, column: 49, scope: !7678)
!7697 = !DILocation(line: 5544, column: 3, scope: !7678)
!7698 = distinct !{!7698, !7682, !7699}
!7699 = !DILocation(line: 5546, column: 19, scope: !7675)
!7700 = !DILocation(line: 5550, column: 9, scope: !7582)
!7701 = !DILocation(line: 5551, column: 11, scope: !7582)
!7702 = !DILocation(line: 5552, column: 24, scope: !7582)
!7703 = !DILocation(line: 5552, column: 3, scope: !7582)
!7704 = !DILocation(line: 5553, column: 38, scope: !7582)
!7705 = !DILocation(line: 5553, column: 44, scope: !7582)
!7706 = !DILocation(line: 5553, column: 14, scope: !7582)
!7707 = !DILocation(line: 5553, column: 13, scope: !7582)
!7708 = !DILocation(line: 5554, column: 39, scope: !7582)
!7709 = !DILocation(line: 5554, column: 50, scope: !7582)
!7710 = !DILocation(line: 5554, column: 13, scope: !7582)
!7711 = !DILocation(line: 5554, column: 12, scope: !7582)
!7712 = !DILocation(line: 5555, column: 41, scope: !7582)
!7713 = !DILocation(line: 5555, column: 10, scope: !7582)
!7714 = !DILocation(line: 5561, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5561, column: 3)
!7716 = !DILocation(line: 5561, column: 8, scope: !7715)
!7717 = !DILocation(line: 5561, column: 13, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7715, file: !1, line: 5561, column: 3)
!7719 = !DILocation(line: 5561, column: 27, scope: !7718)
!7720 = !DILocation(line: 5561, column: 39, scope: !7718)
!7721 = !DILocation(line: 5561, column: 15, scope: !7718)
!7722 = !DILocation(line: 5561, column: 3, scope: !7715)
!7723 = !DILocalVariable(name: "pixel", scope: !7724, file: !1, line: 5564, type: !1223)
!7724 = distinct !DILexicalBlock(scope: !7718, file: !1, line: 5562, column: 3)
!7725 = !DILocation(line: 5564, column: 7, scope: !7724)
!7726 = !DILocalVariable(name: "indexes", scope: !7724, file: !1, line: 5567, type: !1637)
!7727 = !DILocation(line: 5567, column: 17, scope: !7724)
!7728 = !DILocalVariable(name: "q", scope: !7724, file: !1, line: 5570, type: !1642)
!7729 = !DILocation(line: 5570, column: 17, scope: !7724)
!7730 = !DILocalVariable(name: "x", scope: !7724, file: !1, line: 5573, type: !880)
!7731 = !DILocation(line: 5573, column: 7, scope: !7724)
!7732 = !DILocation(line: 5575, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 5575, column: 9)
!7734 = !DILocation(line: 5575, column: 16, scope: !7733)
!7735 = !DILocation(line: 5575, column: 9, scope: !7724)
!7736 = !DILocation(line: 5576, column: 7, scope: !7733)
!7737 = !DILocation(line: 5577, column: 37, scope: !7724)
!7738 = !DILocation(line: 5577, column: 49, scope: !7724)
!7739 = !DILocation(line: 5577, column: 51, scope: !7724)
!7740 = !DILocation(line: 5577, column: 63, scope: !7724)
!7741 = !DILocation(line: 5578, column: 7, scope: !7724)
!7742 = !DILocation(line: 5577, column: 7, scope: !7724)
!7743 = !DILocation(line: 5577, column: 6, scope: !7724)
!7744 = !DILocation(line: 5579, column: 9, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 5579, column: 9)
!7746 = !DILocation(line: 5579, column: 11, scope: !7745)
!7747 = !DILocation(line: 5579, column: 9, scope: !7724)
!7748 = !DILocation(line: 5581, column: 15, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !1, line: 5580, column: 7)
!7750 = !DILocation(line: 5582, column: 9, scope: !7749)
!7751 = !DILocation(line: 5584, column: 45, scope: !7724)
!7752 = !DILocation(line: 5584, column: 13, scope: !7724)
!7753 = !DILocation(line: 5584, column: 12, scope: !7724)
!7754 = !DILocation(line: 5585, column: 11, scope: !7724)
!7755 = !DILocation(line: 5586, column: 11, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 5586, column: 5)
!7757 = !DILocation(line: 5586, column: 10, scope: !7756)
!7758 = !DILocation(line: 5586, column: 15, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7756, file: !1, line: 5586, column: 5)
!7760 = !DILocation(line: 5586, column: 29, scope: !7759)
!7761 = !DILocation(line: 5586, column: 41, scope: !7759)
!7762 = !DILocation(line: 5586, column: 17, scope: !7759)
!7763 = !DILocation(line: 5586, column: 5, scope: !7756)
!7764 = !DILocation(line: 5588, column: 43, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7759, file: !1, line: 5587, column: 5)
!7766 = !DILocation(line: 5588, column: 49, scope: !7765)
!7767 = !DILocation(line: 5589, column: 44, scope: !7765)
!7768 = !DILocation(line: 5589, column: 35, scope: !7765)
!7769 = !DILocation(line: 5589, column: 56, scope: !7765)
!7770 = !DILocation(line: 5589, column: 58, scope: !7765)
!7771 = !DILocation(line: 5589, column: 67, scope: !7765)
!7772 = !DILocation(line: 5589, column: 57, scope: !7765)
!7773 = !DILocation(line: 5589, column: 46, scope: !7765)
!7774 = !DILocation(line: 5590, column: 9, scope: !7765)
!7775 = !DILocation(line: 5588, column: 14, scope: !7765)
!7776 = !DILocation(line: 5591, column: 22, scope: !7765)
!7777 = !DILocation(line: 5591, column: 40, scope: !7765)
!7778 = !DILocation(line: 5591, column: 42, scope: !7765)
!7779 = !DILocation(line: 5591, column: 50, scope: !7765)
!7780 = !DILocation(line: 5591, column: 49, scope: !7765)
!7781 = !DILocation(line: 5591, column: 7, scope: !7765)
!7782 = !DILocation(line: 5592, column: 8, scope: !7765)
!7783 = !DILocation(line: 5593, column: 5, scope: !7765)
!7784 = !DILocation(line: 5586, column: 51, scope: !7759)
!7785 = !DILocation(line: 5586, column: 5, scope: !7759)
!7786 = distinct !{!7786, !7763, !7787}
!7787 = !DILocation(line: 5593, column: 5, scope: !7756)
!7788 = !DILocation(line: 5594, column: 38, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 5594, column: 9)
!7790 = !DILocation(line: 5594, column: 48, scope: !7789)
!7791 = !DILocation(line: 5594, column: 9, scope: !7789)
!7792 = !DILocation(line: 5594, column: 59, scope: !7789)
!7793 = !DILocation(line: 5594, column: 9, scope: !7724)
!7794 = !DILocation(line: 5595, column: 13, scope: !7789)
!7795 = !DILocation(line: 5595, column: 7, scope: !7789)
!7796 = !DILocation(line: 5596, column: 9, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 5596, column: 9)
!7798 = !DILocation(line: 5596, column: 16, scope: !7797)
!7799 = !DILocation(line: 5596, column: 33, scope: !7797)
!7800 = !DILocation(line: 5596, column: 9, scope: !7724)
!7801 = !DILocalVariable(name: "proceed", scope: !7802, file: !1, line: 5599, type: !709)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !1, line: 5597, column: 7)
!7803 = !DILocation(line: 5599, column: 11, scope: !7802)
!7804 = !DILocation(line: 5604, column: 34, scope: !7802)
!7805 = !DILocation(line: 5604, column: 61, scope: !7802)
!7806 = !DILocation(line: 5604, column: 64, scope: !7802)
!7807 = !DILocation(line: 5604, column: 71, scope: !7802)
!7808 = !DILocation(line: 5604, column: 17, scope: !7802)
!7809 = !DILocation(line: 5604, column: 16, scope: !7802)
!7810 = !DILocation(line: 5605, column: 13, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 5605, column: 13)
!7812 = !DILocation(line: 5605, column: 21, scope: !7811)
!7813 = !DILocation(line: 5605, column: 13, scope: !7802)
!7814 = !DILocation(line: 5606, column: 17, scope: !7811)
!7815 = !DILocation(line: 5606, column: 11, scope: !7811)
!7816 = !DILocation(line: 5607, column: 7, scope: !7802)
!7817 = !DILocation(line: 5608, column: 3, scope: !7724)
!7818 = !DILocation(line: 5561, column: 46, scope: !7718)
!7819 = !DILocation(line: 5561, column: 3, scope: !7718)
!7820 = distinct !{!7820, !7722, !7821}
!7821 = !DILocation(line: 5608, column: 3, scope: !7715)
!7822 = !DILocation(line: 5609, column: 30, scope: !7582)
!7823 = !DILocation(line: 5609, column: 13, scope: !7582)
!7824 = !DILocation(line: 5609, column: 12, scope: !7582)
!7825 = !DILocation(line: 5610, column: 31, scope: !7582)
!7826 = !DILocation(line: 5610, column: 14, scope: !7582)
!7827 = !DILocation(line: 5610, column: 13, scope: !7582)
!7828 = !DILocation(line: 5611, column: 54, scope: !7582)
!7829 = !DILocation(line: 5611, column: 31, scope: !7582)
!7830 = !DILocation(line: 5611, column: 12, scope: !7582)
!7831 = !DILocation(line: 5611, column: 11, scope: !7582)
!7832 = !DILocation(line: 5612, column: 7, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 5612, column: 7)
!7834 = !DILocation(line: 5612, column: 14, scope: !7833)
!7835 = !DILocation(line: 5612, column: 7, scope: !7582)
!7836 = !DILocation(line: 5613, column: 29, scope: !7833)
!7837 = !DILocation(line: 5613, column: 16, scope: !7833)
!7838 = !DILocation(line: 5613, column: 15, scope: !7833)
!7839 = !DILocation(line: 5613, column: 5, scope: !7833)
!7840 = !DILocation(line: 5614, column: 10, scope: !7582)
!7841 = !DILocation(line: 5614, column: 3, scope: !7582)
!7842 = !DILocation(line: 5615, column: 1, scope: !7582)
!7843 = distinct !DISubprogram(name: "ShadowImage", scope: !1, file: !1, line: 4232, type: !7844, scopeLine: 4235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!1090, !821, !1986, !1986, !3181, !3181, !695}
!7846 = !DILocalVariable(name: "image", arg: 1, scope: !7843, file: !1, line: 4232, type: !821)
!7847 = !DILocation(line: 4232, column: 46, scope: !7843)
!7848 = !DILocalVariable(name: "opacity", arg: 2, scope: !7843, file: !1, line: 4232, type: !1986)
!7849 = !DILocation(line: 4232, column: 65, scope: !7843)
!7850 = !DILocalVariable(name: "sigma", arg: 3, scope: !7843, file: !1, line: 4233, type: !1986)
!7851 = !DILocation(line: 4233, column: 16, scope: !7843)
!7852 = !DILocalVariable(name: "x_offset", arg: 4, scope: !7843, file: !1, line: 4233, type: !3181)
!7853 = !DILocation(line: 4233, column: 36, scope: !7843)
!7854 = !DILocalVariable(name: "y_offset", arg: 5, scope: !7843, file: !1, line: 4233, type: !3181)
!7855 = !DILocation(line: 4233, column: 59, scope: !7843)
!7856 = !DILocalVariable(name: "exception", arg: 6, scope: !7843, file: !1, line: 4234, type: !695)
!7857 = !DILocation(line: 4234, column: 18, scope: !7843)
!7858 = !DILocalVariable(name: "image_view", scope: !7843, file: !1, line: 4239, type: !1081)
!7859 = !DILocation(line: 4239, column: 6, scope: !7843)
!7860 = !DILocalVariable(name: "border_image", scope: !7843, file: !1, line: 4242, type: !1090)
!7861 = !DILocation(line: 4242, column: 6, scope: !7843)
!7862 = !DILocalVariable(name: "clone_image", scope: !7843, file: !1, line: 4243, type: !1090)
!7863 = !DILocation(line: 4243, column: 6, scope: !7843)
!7864 = !DILocalVariable(name: "shadow_image", scope: !7843, file: !1, line: 4244, type: !1090)
!7865 = !DILocation(line: 4244, column: 6, scope: !7843)
!7866 = !DILocalVariable(name: "status", scope: !7843, file: !1, line: 4247, type: !709)
!7867 = !DILocation(line: 4247, column: 5, scope: !7843)
!7868 = !DILocalVariable(name: "progress", scope: !7843, file: !1, line: 4250, type: !950)
!7869 = !DILocation(line: 4250, column: 5, scope: !7843)
!7870 = !DILocalVariable(name: "border_info", scope: !7843, file: !1, line: 4253, type: !888)
!7871 = !DILocation(line: 4253, column: 5, scope: !7843)
!7872 = !DILocalVariable(name: "y", scope: !7843, file: !1, line: 4256, type: !880)
!7873 = !DILocation(line: 4256, column: 5, scope: !7843)
!7874 = !DILocation(line: 4260, column: 7, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4260, column: 7)
!7876 = !DILocation(line: 4260, column: 14, scope: !7875)
!7877 = !DILocation(line: 4260, column: 20, scope: !7875)
!7878 = !DILocation(line: 4260, column: 7, scope: !7843)
!7879 = !DILocation(line: 4261, column: 61, scope: !7875)
!7880 = !DILocation(line: 4261, column: 68, scope: !7875)
!7881 = !DILocation(line: 4261, column: 12, scope: !7875)
!7882 = !DILocation(line: 4261, column: 5, scope: !7875)
!7883 = !DILocation(line: 4264, column: 26, scope: !7843)
!7884 = !DILocation(line: 4264, column: 47, scope: !7843)
!7885 = !DILocation(line: 4264, column: 15, scope: !7843)
!7886 = !DILocation(line: 4264, column: 14, scope: !7843)
!7887 = !DILocation(line: 4265, column: 7, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4265, column: 7)
!7889 = !DILocation(line: 4265, column: 19, scope: !7888)
!7890 = !DILocation(line: 4265, column: 7, scope: !7843)
!7891 = !DILocation(line: 4266, column: 5, scope: !7888)
!7892 = !DILocation(line: 4267, column: 24, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4267, column: 7)
!7894 = !DILocation(line: 4267, column: 31, scope: !7893)
!7895 = !DILocation(line: 4267, column: 7, scope: !7893)
!7896 = !DILocation(line: 4267, column: 43, scope: !7893)
!7897 = !DILocation(line: 4267, column: 7, scope: !7843)
!7898 = !DILocation(line: 4268, column: 31, scope: !7893)
!7899 = !DILocation(line: 4268, column: 12, scope: !7893)
!7900 = !DILocation(line: 4268, column: 5, scope: !7893)
!7901 = !DILocation(line: 4269, column: 37, scope: !7843)
!7902 = !DILocation(line: 4269, column: 10, scope: !7843)
!7903 = !DILocation(line: 4270, column: 3, scope: !7843)
!7904 = !DILocation(line: 4270, column: 16, scope: !7843)
!7905 = !DILocation(line: 4270, column: 23, scope: !7843)
!7906 = !DILocation(line: 4271, column: 40, scope: !7843)
!7907 = !DILocation(line: 4271, column: 39, scope: !7843)
!7908 = !DILocation(line: 4271, column: 45, scope: !7843)
!7909 = !DILocation(line: 4271, column: 30, scope: !7843)
!7910 = !DILocation(line: 4271, column: 21, scope: !7843)
!7911 = !DILocation(line: 4271, column: 15, scope: !7843)
!7912 = !DILocation(line: 4271, column: 20, scope: !7843)
!7913 = !DILocation(line: 4272, column: 41, scope: !7843)
!7914 = !DILocation(line: 4272, column: 40, scope: !7843)
!7915 = !DILocation(line: 4272, column: 46, scope: !7843)
!7916 = !DILocation(line: 4272, column: 31, scope: !7843)
!7917 = !DILocation(line: 4272, column: 22, scope: !7843)
!7918 = !DILocation(line: 4272, column: 15, scope: !7843)
!7919 = !DILocation(line: 4272, column: 21, scope: !7843)
!7920 = !DILocation(line: 4273, column: 15, scope: !7843)
!7921 = !DILocation(line: 4273, column: 16, scope: !7843)
!7922 = !DILocation(line: 4274, column: 15, scope: !7843)
!7923 = !DILocation(line: 4274, column: 16, scope: !7843)
!7924 = !DILocation(line: 4275, column: 37, scope: !7843)
!7925 = !DILocation(line: 4275, column: 50, scope: !7843)
!7926 = !DILocation(line: 4275, column: 63, scope: !7843)
!7927 = !DILocation(line: 4275, column: 10, scope: !7843)
!7928 = !DILocation(line: 4276, column: 28, scope: !7843)
!7929 = !DILocation(line: 4276, column: 53, scope: !7843)
!7930 = !DILocation(line: 4276, column: 16, scope: !7843)
!7931 = !DILocation(line: 4276, column: 15, scope: !7843)
!7932 = !DILocation(line: 4277, column: 28, scope: !7843)
!7933 = !DILocation(line: 4277, column: 15, scope: !7843)
!7934 = !DILocation(line: 4277, column: 14, scope: !7843)
!7935 = !DILocation(line: 4278, column: 7, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4278, column: 7)
!7937 = !DILocation(line: 4278, column: 20, scope: !7936)
!7938 = !DILocation(line: 4278, column: 7, scope: !7843)
!7939 = !DILocation(line: 4279, column: 5, scope: !7936)
!7940 = !DILocation(line: 4280, column: 7, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4280, column: 7)
!7942 = !DILocation(line: 4280, column: 21, scope: !7941)
!7943 = !DILocation(line: 4280, column: 27, scope: !7941)
!7944 = !DILocation(line: 4280, column: 7, scope: !7843)
!7945 = !DILocation(line: 4281, column: 33, scope: !7941)
!7946 = !DILocation(line: 4281, column: 12, scope: !7941)
!7947 = !DILocation(line: 4281, column: 5, scope: !7941)
!7948 = !DILocation(line: 4285, column: 9, scope: !7843)
!7949 = !DILocation(line: 4286, column: 11, scope: !7843)
!7950 = !DILocation(line: 4287, column: 40, scope: !7843)
!7951 = !DILocation(line: 4287, column: 53, scope: !7843)
!7952 = !DILocation(line: 4287, column: 14, scope: !7843)
!7953 = !DILocation(line: 4287, column: 13, scope: !7843)
!7954 = !DILocation(line: 4292, column: 9, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4292, column: 3)
!7956 = !DILocation(line: 4292, column: 8, scope: !7955)
!7957 = !DILocation(line: 4292, column: 13, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7955, file: !1, line: 4292, column: 3)
!7959 = !DILocation(line: 4292, column: 27, scope: !7958)
!7960 = !DILocation(line: 4292, column: 41, scope: !7958)
!7961 = !DILocation(line: 4292, column: 15, scope: !7958)
!7962 = !DILocation(line: 4292, column: 3, scope: !7955)
!7963 = !DILocalVariable(name: "q", scope: !7964, file: !1, line: 4295, type: !1642)
!7964 = distinct !DILexicalBlock(scope: !7958, file: !1, line: 4293, column: 3)
!7965 = !DILocation(line: 4295, column: 17, scope: !7964)
!7966 = !DILocalVariable(name: "x", scope: !7964, file: !1, line: 4298, type: !880)
!7967 = !DILocation(line: 4298, column: 7, scope: !7964)
!7968 = !DILocation(line: 4300, column: 9, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 4300, column: 9)
!7970 = !DILocation(line: 4300, column: 16, scope: !7969)
!7971 = !DILocation(line: 4300, column: 9, scope: !7964)
!7972 = !DILocation(line: 4301, column: 7, scope: !7969)
!7973 = !DILocation(line: 4302, column: 35, scope: !7964)
!7974 = !DILocation(line: 4302, column: 48, scope: !7964)
!7975 = !DILocation(line: 4302, column: 50, scope: !7964)
!7976 = !DILocation(line: 4302, column: 64, scope: !7964)
!7977 = !DILocation(line: 4303, column: 7, scope: !7964)
!7978 = !DILocation(line: 4302, column: 7, scope: !7964)
!7979 = !DILocation(line: 4302, column: 6, scope: !7964)
!7980 = !DILocation(line: 4304, column: 9, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 4304, column: 9)
!7982 = !DILocation(line: 4304, column: 11, scope: !7981)
!7983 = !DILocation(line: 4304, column: 9, scope: !7964)
!7984 = !DILocation(line: 4306, column: 15, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7981, file: !1, line: 4305, column: 7)
!7986 = !DILocation(line: 4307, column: 9, scope: !7985)
!7987 = !DILocation(line: 4309, column: 11, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 4309, column: 5)
!7989 = !DILocation(line: 4309, column: 10, scope: !7988)
!7990 = !DILocation(line: 4309, column: 15, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7988, file: !1, line: 4309, column: 5)
!7992 = !DILocation(line: 4309, column: 29, scope: !7991)
!7993 = !DILocation(line: 4309, column: 43, scope: !7991)
!7994 = !DILocation(line: 4309, column: 17, scope: !7991)
!7995 = !DILocation(line: 4309, column: 5, scope: !7988)
!7996 = !DILocation(line: 4311, column: 7, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7991, file: !1, line: 4310, column: 5)
!7998 = !DILocation(line: 4312, column: 7, scope: !7997)
!7999 = !DILocation(line: 4313, column: 7, scope: !7997)
!8000 = !DILocation(line: 4314, column: 11, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7997, file: !1, line: 4314, column: 11)
!8002 = !DILocation(line: 4314, column: 25, scope: !8001)
!8003 = !DILocation(line: 4314, column: 31, scope: !8001)
!8004 = !DILocation(line: 4314, column: 11, scope: !7997)
!8005 = !DILocation(line: 4315, column: 9, scope: !8001)
!8006 = !DILocation(line: 4317, column: 9, scope: !8001)
!8007 = !DILocation(line: 4319, column: 8, scope: !7997)
!8008 = !DILocation(line: 4320, column: 5, scope: !7997)
!8009 = !DILocation(line: 4309, column: 53, scope: !7991)
!8010 = !DILocation(line: 4309, column: 5, scope: !7991)
!8011 = distinct !{!8011, !7995, !8012}
!8012 = !DILocation(line: 4320, column: 5, scope: !7988)
!8013 = !DILocation(line: 4321, column: 38, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 4321, column: 9)
!8015 = !DILocation(line: 4321, column: 49, scope: !8014)
!8016 = !DILocation(line: 4321, column: 9, scope: !8014)
!8017 = !DILocation(line: 4321, column: 60, scope: !8014)
!8018 = !DILocation(line: 4321, column: 9, scope: !7964)
!8019 = !DILocation(line: 4322, column: 13, scope: !8014)
!8020 = !DILocation(line: 4322, column: 7, scope: !8014)
!8021 = !DILocation(line: 4323, column: 9, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 4323, column: 9)
!8023 = !DILocation(line: 4323, column: 16, scope: !8022)
!8024 = !DILocation(line: 4323, column: 33, scope: !8022)
!8025 = !DILocation(line: 4323, column: 9, scope: !7964)
!8026 = !DILocalVariable(name: "proceed", scope: !8027, file: !1, line: 4326, type: !709)
!8027 = distinct !DILexicalBlock(scope: !8022, file: !1, line: 4324, column: 7)
!8028 = !DILocation(line: 4326, column: 11, scope: !8027)
!8029 = !DILocation(line: 4331, column: 34, scope: !8027)
!8030 = !DILocation(line: 4331, column: 63, scope: !8027)
!8031 = !DILocation(line: 4332, column: 11, scope: !8027)
!8032 = !DILocation(line: 4332, column: 25, scope: !8027)
!8033 = !DILocation(line: 4331, column: 17, scope: !8027)
!8034 = !DILocation(line: 4331, column: 16, scope: !8027)
!8035 = !DILocation(line: 4333, column: 13, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 4333, column: 13)
!8037 = !DILocation(line: 4333, column: 21, scope: !8036)
!8038 = !DILocation(line: 4333, column: 13, scope: !8027)
!8039 = !DILocation(line: 4334, column: 17, scope: !8036)
!8040 = !DILocation(line: 4334, column: 11, scope: !8036)
!8041 = !DILocation(line: 4335, column: 7, scope: !8027)
!8042 = !DILocation(line: 4336, column: 3, scope: !7964)
!8043 = !DILocation(line: 4292, column: 48, scope: !7958)
!8044 = !DILocation(line: 4292, column: 3, scope: !7958)
!8045 = distinct !{!8045, !7962, !8046}
!8046 = !DILocation(line: 4336, column: 3, scope: !7955)
!8047 = !DILocation(line: 4337, column: 31, scope: !7843)
!8048 = !DILocation(line: 4337, column: 14, scope: !7843)
!8049 = !DILocation(line: 4337, column: 13, scope: !7843)
!8050 = !DILocation(line: 4338, column: 33, scope: !7843)
!8051 = !DILocation(line: 4338, column: 63, scope: !7843)
!8052 = !DILocation(line: 4338, column: 69, scope: !7843)
!8053 = !DILocation(line: 4338, column: 16, scope: !7843)
!8054 = !DILocation(line: 4338, column: 15, scope: !7843)
!8055 = !DILocation(line: 4339, column: 29, scope: !7843)
!8056 = !DILocation(line: 4339, column: 16, scope: !7843)
!8057 = !DILocation(line: 4339, column: 15, scope: !7843)
!8058 = !DILocation(line: 4340, column: 7, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4340, column: 7)
!8060 = !DILocation(line: 4340, column: 20, scope: !8059)
!8061 = !DILocation(line: 4340, column: 7, scope: !7843)
!8062 = !DILocation(line: 4341, column: 5, scope: !8059)
!8063 = !DILocation(line: 4342, column: 7, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4342, column: 7)
!8065 = !DILocation(line: 4342, column: 21, scope: !8064)
!8066 = !DILocation(line: 4342, column: 26, scope: !8064)
!8067 = !DILocation(line: 4342, column: 32, scope: !8064)
!8068 = !DILocation(line: 4342, column: 7, scope: !7843)
!8069 = !DILocation(line: 4343, column: 30, scope: !8064)
!8070 = !DILocation(line: 4343, column: 44, scope: !8064)
!8071 = !DILocation(line: 4343, column: 5, scope: !8064)
!8072 = !DILocation(line: 4343, column: 19, scope: !8064)
!8073 = !DILocation(line: 4343, column: 24, scope: !8064)
!8074 = !DILocation(line: 4343, column: 29, scope: !8064)
!8075 = !DILocation(line: 4344, column: 7, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 4344, column: 7)
!8077 = !DILocation(line: 4344, column: 21, scope: !8076)
!8078 = !DILocation(line: 4344, column: 26, scope: !8076)
!8079 = !DILocation(line: 4344, column: 33, scope: !8076)
!8080 = !DILocation(line: 4344, column: 7, scope: !7843)
!8081 = !DILocation(line: 4345, column: 31, scope: !8076)
!8082 = !DILocation(line: 4345, column: 45, scope: !8076)
!8083 = !DILocation(line: 4345, column: 5, scope: !8076)
!8084 = !DILocation(line: 4345, column: 19, scope: !8076)
!8085 = !DILocation(line: 4345, column: 24, scope: !8076)
!8086 = !DILocation(line: 4345, column: 30, scope: !8076)
!8087 = !DILocation(line: 4346, column: 29, scope: !7843)
!8088 = !DILocation(line: 4346, column: 60, scope: !7843)
!8089 = !DILocation(line: 4346, column: 37, scope: !7843)
!8090 = !DILocation(line: 4346, column: 3, scope: !7843)
!8091 = !DILocation(line: 4346, column: 17, scope: !7843)
!8092 = !DILocation(line: 4346, column: 22, scope: !7843)
!8093 = !DILocation(line: 4346, column: 27, scope: !7843)
!8094 = !DILocation(line: 4347, column: 30, scope: !7843)
!8095 = !DILocation(line: 4347, column: 61, scope: !7843)
!8096 = !DILocation(line: 4347, column: 38, scope: !7843)
!8097 = !DILocation(line: 4347, column: 3, scope: !7843)
!8098 = !DILocation(line: 4347, column: 17, scope: !7843)
!8099 = !DILocation(line: 4347, column: 22, scope: !7843)
!8100 = !DILocation(line: 4347, column: 28, scope: !7843)
!8101 = !DILocation(line: 4348, column: 25, scope: !7843)
!8102 = !DILocation(line: 4348, column: 56, scope: !7843)
!8103 = !DILocation(line: 4348, column: 33, scope: !7843)
!8104 = !DILocation(line: 4348, column: 3, scope: !7843)
!8105 = !DILocation(line: 4348, column: 17, scope: !7843)
!8106 = !DILocation(line: 4348, column: 22, scope: !7843)
!8107 = !DILocation(line: 4348, column: 23, scope: !7843)
!8108 = !DILocation(line: 4349, column: 25, scope: !7843)
!8109 = !DILocation(line: 4349, column: 56, scope: !7843)
!8110 = !DILocation(line: 4349, column: 33, scope: !7843)
!8111 = !DILocation(line: 4349, column: 3, scope: !7843)
!8112 = !DILocation(line: 4349, column: 17, scope: !7843)
!8113 = !DILocation(line: 4349, column: 22, scope: !7843)
!8114 = !DILocation(line: 4349, column: 23, scope: !7843)
!8115 = !DILocation(line: 4350, column: 10, scope: !7843)
!8116 = !DILocation(line: 4350, column: 3, scope: !7843)
!8117 = !DILocation(line: 4351, column: 1, scope: !7843)
!8118 = distinct !DISubprogram(name: "SepiaToneImage", scope: !1, file: !1, line: 4078, type: !1984, scopeLine: 4080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8119 = !DILocalVariable(name: "image", arg: 1, scope: !8118, file: !1, line: 4078, type: !821)
!8120 = !DILocation(line: 4078, column: 49, scope: !8118)
!8121 = !DILocalVariable(name: "threshold", arg: 2, scope: !8118, file: !1, line: 4078, type: !1986)
!8122 = !DILocation(line: 4078, column: 68, scope: !8118)
!8123 = !DILocalVariable(name: "exception", arg: 3, scope: !8118, file: !1, line: 4079, type: !695)
!8124 = !DILocation(line: 4079, column: 18, scope: !8118)
!8125 = !DILocalVariable(name: "image_view", scope: !8118, file: !1, line: 4084, type: !1081)
!8126 = !DILocation(line: 4084, column: 6, scope: !8118)
!8127 = !DILocalVariable(name: "sepia_view", scope: !8118, file: !1, line: 4085, type: !1081)
!8128 = !DILocation(line: 4085, column: 6, scope: !8118)
!8129 = !DILocalVariable(name: "sepia_image", scope: !8118, file: !1, line: 4088, type: !1090)
!8130 = !DILocation(line: 4088, column: 6, scope: !8118)
!8131 = !DILocalVariable(name: "status", scope: !8118, file: !1, line: 4091, type: !709)
!8132 = !DILocation(line: 4091, column: 5, scope: !8118)
!8133 = !DILocalVariable(name: "progress", scope: !8118, file: !1, line: 4094, type: !950)
!8134 = !DILocation(line: 4094, column: 5, scope: !8118)
!8135 = !DILocalVariable(name: "y", scope: !8118, file: !1, line: 4097, type: !880)
!8136 = !DILocation(line: 4097, column: 5, scope: !8118)
!8137 = !DILocation(line: 4104, column: 7, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 4104, column: 7)
!8139 = !DILocation(line: 4104, column: 14, scope: !8138)
!8140 = !DILocation(line: 4104, column: 20, scope: !8138)
!8141 = !DILocation(line: 4104, column: 7, scope: !8118)
!8142 = !DILocation(line: 4105, column: 61, scope: !8138)
!8143 = !DILocation(line: 4105, column: 68, scope: !8138)
!8144 = !DILocation(line: 4105, column: 12, scope: !8138)
!8145 = !DILocation(line: 4105, column: 5, scope: !8138)
!8146 = !DILocation(line: 4108, column: 26, scope: !8118)
!8147 = !DILocation(line: 4108, column: 32, scope: !8118)
!8148 = !DILocation(line: 4108, column: 39, scope: !8118)
!8149 = !DILocation(line: 4108, column: 47, scope: !8118)
!8150 = !DILocation(line: 4108, column: 54, scope: !8118)
!8151 = !DILocation(line: 4108, column: 70, scope: !8118)
!8152 = !DILocation(line: 4108, column: 15, scope: !8118)
!8153 = !DILocation(line: 4108, column: 14, scope: !8118)
!8154 = !DILocation(line: 4109, column: 7, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 4109, column: 7)
!8156 = !DILocation(line: 4109, column: 19, scope: !8155)
!8157 = !DILocation(line: 4109, column: 7, scope: !8118)
!8158 = !DILocation(line: 4110, column: 5, scope: !8155)
!8159 = !DILocation(line: 4111, column: 28, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 4111, column: 7)
!8161 = !DILocation(line: 4111, column: 7, scope: !8160)
!8162 = !DILocation(line: 4111, column: 53, scope: !8160)
!8163 = !DILocation(line: 4111, column: 7, scope: !8118)
!8164 = !DILocation(line: 4113, column: 24, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !1, line: 4112, column: 5)
!8166 = !DILocation(line: 4113, column: 35, scope: !8165)
!8167 = !DILocation(line: 4113, column: 48, scope: !8165)
!8168 = !DILocation(line: 4113, column: 7, scope: !8165)
!8169 = !DILocation(line: 4114, column: 32, scope: !8165)
!8170 = !DILocation(line: 4114, column: 19, scope: !8165)
!8171 = !DILocation(line: 4114, column: 18, scope: !8165)
!8172 = !DILocation(line: 4115, column: 7, scope: !8165)
!8173 = !DILocation(line: 4120, column: 9, scope: !8118)
!8174 = !DILocation(line: 4121, column: 11, scope: !8118)
!8175 = !DILocation(line: 4122, column: 38, scope: !8118)
!8176 = !DILocation(line: 4122, column: 44, scope: !8118)
!8177 = !DILocation(line: 4122, column: 14, scope: !8118)
!8178 = !DILocation(line: 4122, column: 13, scope: !8118)
!8179 = !DILocation(line: 4123, column: 40, scope: !8118)
!8180 = !DILocation(line: 4123, column: 52, scope: !8118)
!8181 = !DILocation(line: 4123, column: 14, scope: !8118)
!8182 = !DILocation(line: 4123, column: 13, scope: !8118)
!8183 = !DILocation(line: 4128, column: 9, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 4128, column: 3)
!8185 = !DILocation(line: 4128, column: 8, scope: !8184)
!8186 = !DILocation(line: 4128, column: 13, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8184, file: !1, line: 4128, column: 3)
!8188 = !DILocation(line: 4128, column: 27, scope: !8187)
!8189 = !DILocation(line: 4128, column: 34, scope: !8187)
!8190 = !DILocation(line: 4128, column: 15, scope: !8187)
!8191 = !DILocation(line: 4128, column: 3, scope: !8184)
!8192 = !DILocalVariable(name: "p", scope: !8193, file: !1, line: 4131, type: !1634)
!8193 = distinct !DILexicalBlock(scope: !8187, file: !1, line: 4129, column: 3)
!8194 = !DILocation(line: 4131, column: 17, scope: !8193)
!8195 = !DILocalVariable(name: "x", scope: !8193, file: !1, line: 4134, type: !880)
!8196 = !DILocation(line: 4134, column: 7, scope: !8193)
!8197 = !DILocalVariable(name: "q", scope: !8193, file: !1, line: 4137, type: !1642)
!8198 = !DILocation(line: 4137, column: 17, scope: !8193)
!8199 = !DILocation(line: 4139, column: 9, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 4139, column: 9)
!8201 = !DILocation(line: 4139, column: 16, scope: !8200)
!8202 = !DILocation(line: 4139, column: 9, scope: !8193)
!8203 = !DILocation(line: 4140, column: 7, scope: !8200)
!8204 = !DILocation(line: 4141, column: 33, scope: !8193)
!8205 = !DILocation(line: 4141, column: 46, scope: !8193)
!8206 = !DILocation(line: 4141, column: 48, scope: !8193)
!8207 = !DILocation(line: 4141, column: 55, scope: !8193)
!8208 = !DILocation(line: 4141, column: 65, scope: !8193)
!8209 = !DILocation(line: 4141, column: 7, scope: !8193)
!8210 = !DILocation(line: 4141, column: 6, scope: !8193)
!8211 = !DILocation(line: 4142, column: 37, scope: !8193)
!8212 = !DILocation(line: 4142, column: 50, scope: !8193)
!8213 = !DILocation(line: 4142, column: 52, scope: !8193)
!8214 = !DILocation(line: 4142, column: 65, scope: !8193)
!8215 = !DILocation(line: 4143, column: 7, scope: !8193)
!8216 = !DILocation(line: 4142, column: 7, scope: !8193)
!8217 = !DILocation(line: 4142, column: 6, scope: !8193)
!8218 = !DILocation(line: 4144, column: 10, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 4144, column: 9)
!8220 = !DILocation(line: 4144, column: 12, scope: !8219)
!8221 = !DILocation(line: 4144, column: 43, scope: !8219)
!8222 = !DILocation(line: 4144, column: 47, scope: !8219)
!8223 = !DILocation(line: 4144, column: 49, scope: !8219)
!8224 = !DILocation(line: 4144, column: 9, scope: !8193)
!8225 = !DILocation(line: 4146, column: 15, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8219, file: !1, line: 4145, column: 7)
!8227 = !DILocation(line: 4147, column: 9, scope: !8226)
!8228 = !DILocation(line: 4149, column: 11, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 4149, column: 5)
!8230 = !DILocation(line: 4149, column: 10, scope: !8229)
!8231 = !DILocation(line: 4149, column: 15, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8229, file: !1, line: 4149, column: 5)
!8233 = !DILocation(line: 4149, column: 29, scope: !8232)
!8234 = !DILocation(line: 4149, column: 36, scope: !8232)
!8235 = !DILocation(line: 4149, column: 17, scope: !8232)
!8236 = !DILocation(line: 4149, column: 5, scope: !8229)
!8237 = !DILocalVariable(name: "intensity", scope: !8238, file: !1, line: 4152, type: !856)
!8238 = distinct !DILexicalBlock(scope: !8232, file: !1, line: 4150, column: 5)
!8239 = !DILocation(line: 4152, column: 9, scope: !8238)
!8240 = !DILocalVariable(name: "tone", scope: !8238, file: !1, line: 4153, type: !856)
!8241 = !DILocation(line: 4153, column: 9, scope: !8238)
!8242 = !DILocation(line: 4155, column: 35, scope: !8238)
!8243 = !DILocation(line: 4155, column: 41, scope: !8238)
!8244 = !DILocation(line: 4155, column: 17, scope: !8238)
!8245 = !DILocation(line: 4155, column: 16, scope: !8238)
!8246 = !DILocation(line: 4156, column: 12, scope: !8238)
!8247 = !DILocation(line: 4156, column: 24, scope: !8238)
!8248 = !DILocation(line: 4156, column: 22, scope: !8238)
!8249 = !DILocation(line: 4156, column: 60, scope: !8238)
!8250 = !DILocation(line: 4156, column: 69, scope: !8238)
!8251 = !DILocation(line: 4157, column: 31, scope: !8238)
!8252 = !DILocation(line: 4157, column: 30, scope: !8238)
!8253 = !DILocation(line: 4156, column: 11, scope: !8238)
!8254 = !DILocation(line: 4158, column: 7, scope: !8238)
!8255 = !DILocation(line: 4159, column: 12, scope: !8238)
!8256 = !DILocation(line: 4159, column: 29, scope: !8238)
!8257 = !DILocation(line: 4159, column: 28, scope: !8238)
!8258 = !DILocation(line: 4159, column: 38, scope: !8238)
!8259 = !DILocation(line: 4159, column: 22, scope: !8238)
!8260 = !DILocation(line: 4160, column: 9, scope: !8238)
!8261 = !DILocation(line: 4160, column: 18, scope: !8238)
!8262 = !DILocation(line: 4160, column: 45, scope: !8238)
!8263 = !DILocation(line: 4160, column: 44, scope: !8238)
!8264 = !DILocation(line: 4160, column: 54, scope: !8238)
!8265 = !DILocation(line: 4160, column: 40, scope: !8238)
!8266 = !DILocation(line: 4159, column: 11, scope: !8238)
!8267 = !DILocation(line: 4161, column: 7, scope: !8238)
!8268 = !DILocation(line: 4162, column: 12, scope: !8238)
!8269 = !DILocation(line: 4162, column: 25, scope: !8238)
!8270 = !DILocation(line: 4162, column: 34, scope: !8238)
!8271 = !DILocation(line: 4162, column: 22, scope: !8238)
!8272 = !DILocation(line: 4162, column: 46, scope: !8238)
!8273 = !DILocation(line: 4162, column: 56, scope: !8238)
!8274 = !DILocation(line: 4162, column: 65, scope: !8238)
!8275 = !DILocation(line: 4162, column: 55, scope: !8238)
!8276 = !DILocation(line: 4162, column: 11, scope: !8238)
!8277 = !DILocation(line: 4163, column: 7, scope: !8238)
!8278 = !DILocation(line: 4164, column: 12, scope: !8238)
!8279 = !DILocation(line: 4164, column: 21, scope: !8238)
!8280 = !DILocation(line: 4164, column: 11, scope: !8238)
!8281 = !DILocation(line: 4165, column: 20, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8238, file: !1, line: 4165, column: 11)
!8283 = !DILocation(line: 4165, column: 11, scope: !8282)
!8284 = !DILocation(line: 4165, column: 39, scope: !8282)
!8285 = !DILocation(line: 4165, column: 37, scope: !8282)
!8286 = !DILocation(line: 4165, column: 11, scope: !8238)
!8287 = !DILocation(line: 4166, column: 9, scope: !8282)
!8288 = !DILocation(line: 4167, column: 20, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8238, file: !1, line: 4167, column: 11)
!8290 = !DILocation(line: 4167, column: 11, scope: !8289)
!8291 = !DILocation(line: 4167, column: 38, scope: !8289)
!8292 = !DILocation(line: 4167, column: 36, scope: !8289)
!8293 = !DILocation(line: 4167, column: 11, scope: !8238)
!8294 = !DILocation(line: 4168, column: 9, scope: !8289)
!8295 = !DILocation(line: 4169, column: 7, scope: !8238)
!8296 = !DILocation(line: 4170, column: 8, scope: !8238)
!8297 = !DILocation(line: 4171, column: 8, scope: !8238)
!8298 = !DILocation(line: 4172, column: 5, scope: !8238)
!8299 = !DILocation(line: 4149, column: 46, scope: !8232)
!8300 = !DILocation(line: 4149, column: 5, scope: !8232)
!8301 = distinct !{!8301, !8236, !8302}
!8302 = !DILocation(line: 4172, column: 5, scope: !8229)
!8303 = !DILocation(line: 4173, column: 38, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 4173, column: 9)
!8305 = !DILocation(line: 4173, column: 49, scope: !8304)
!8306 = !DILocation(line: 4173, column: 9, scope: !8304)
!8307 = !DILocation(line: 4173, column: 60, scope: !8304)
!8308 = !DILocation(line: 4173, column: 9, scope: !8193)
!8309 = !DILocation(line: 4174, column: 13, scope: !8304)
!8310 = !DILocation(line: 4174, column: 7, scope: !8304)
!8311 = !DILocation(line: 4175, column: 9, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 4175, column: 9)
!8313 = !DILocation(line: 4175, column: 16, scope: !8312)
!8314 = !DILocation(line: 4175, column: 33, scope: !8312)
!8315 = !DILocation(line: 4175, column: 9, scope: !8193)
!8316 = !DILocalVariable(name: "proceed", scope: !8317, file: !1, line: 4178, type: !709)
!8317 = distinct !DILexicalBlock(scope: !8312, file: !1, line: 4176, column: 7)
!8318 = !DILocation(line: 4178, column: 11, scope: !8317)
!8319 = !DILocation(line: 4183, column: 34, scope: !8317)
!8320 = !DILocation(line: 4183, column: 66, scope: !8317)
!8321 = !DILocation(line: 4184, column: 11, scope: !8317)
!8322 = !DILocation(line: 4184, column: 18, scope: !8317)
!8323 = !DILocation(line: 4183, column: 17, scope: !8317)
!8324 = !DILocation(line: 4183, column: 16, scope: !8317)
!8325 = !DILocation(line: 4185, column: 13, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8317, file: !1, line: 4185, column: 13)
!8327 = !DILocation(line: 4185, column: 21, scope: !8326)
!8328 = !DILocation(line: 4185, column: 13, scope: !8317)
!8329 = !DILocation(line: 4186, column: 17, scope: !8326)
!8330 = !DILocation(line: 4186, column: 11, scope: !8326)
!8331 = !DILocation(line: 4187, column: 7, scope: !8317)
!8332 = !DILocation(line: 4188, column: 3, scope: !8193)
!8333 = !DILocation(line: 4128, column: 41, scope: !8187)
!8334 = !DILocation(line: 4128, column: 3, scope: !8187)
!8335 = distinct !{!8335, !8191, !8336}
!8336 = !DILocation(line: 4188, column: 3, scope: !8184)
!8337 = !DILocation(line: 4189, column: 31, scope: !8118)
!8338 = !DILocation(line: 4189, column: 14, scope: !8118)
!8339 = !DILocation(line: 4189, column: 13, scope: !8118)
!8340 = !DILocation(line: 4190, column: 31, scope: !8118)
!8341 = !DILocation(line: 4190, column: 14, scope: !8118)
!8342 = !DILocation(line: 4190, column: 13, scope: !8118)
!8343 = !DILocation(line: 4191, column: 25, scope: !8118)
!8344 = !DILocation(line: 4191, column: 10, scope: !8118)
!8345 = !DILocation(line: 4192, column: 24, scope: !8118)
!8346 = !DILocation(line: 4192, column: 10, scope: !8118)
!8347 = !DILocation(line: 4193, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 4193, column: 7)
!8349 = !DILocation(line: 4193, column: 14, scope: !8348)
!8350 = !DILocation(line: 4193, column: 7, scope: !8118)
!8351 = !DILocation(line: 4194, column: 30, scope: !8348)
!8352 = !DILocation(line: 4194, column: 17, scope: !8348)
!8353 = !DILocation(line: 4194, column: 16, scope: !8348)
!8354 = !DILocation(line: 4194, column: 5, scope: !8348)
!8355 = !DILocation(line: 4195, column: 10, scope: !8118)
!8356 = !DILocation(line: 4195, column: 3, scope: !8118)
!8357 = !DILocation(line: 4196, column: 1, scope: !8118)
!8358 = distinct !DISubprogram(name: "SketchImage", scope: !1, file: !1, line: 4389, type: !8359, scopeLine: 4391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!1090, !821, !1986, !1986, !1986, !695}
!8361 = !DILocalVariable(name: "image", arg: 1, scope: !8358, file: !1, line: 4389, type: !821)
!8362 = !DILocation(line: 4389, column: 46, scope: !8358)
!8363 = !DILocalVariable(name: "radius", arg: 2, scope: !8358, file: !1, line: 4389, type: !1986)
!8364 = !DILocation(line: 4389, column: 65, scope: !8358)
!8365 = !DILocalVariable(name: "sigma", arg: 3, scope: !8358, file: !1, line: 4390, type: !1986)
!8366 = !DILocation(line: 4390, column: 16, scope: !8358)
!8367 = !DILocalVariable(name: "angle", arg: 4, scope: !8358, file: !1, line: 4390, type: !1986)
!8368 = !DILocation(line: 4390, column: 35, scope: !8358)
!8369 = !DILocalVariable(name: "exception", arg: 5, scope: !8358, file: !1, line: 4390, type: !695)
!8370 = !DILocation(line: 4390, column: 56, scope: !8358)
!8371 = !DILocalVariable(name: "random_view", scope: !8358, file: !1, line: 4393, type: !1081)
!8372 = !DILocation(line: 4393, column: 6, scope: !8358)
!8373 = !DILocalVariable(name: "blend_image", scope: !8358, file: !1, line: 4396, type: !1090)
!8374 = !DILocation(line: 4396, column: 6, scope: !8358)
!8375 = !DILocalVariable(name: "blur_image", scope: !8358, file: !1, line: 4397, type: !1090)
!8376 = !DILocation(line: 4397, column: 6, scope: !8358)
!8377 = !DILocalVariable(name: "dodge_image", scope: !8358, file: !1, line: 4398, type: !1090)
!8378 = !DILocation(line: 4398, column: 6, scope: !8358)
!8379 = !DILocalVariable(name: "random_image", scope: !8358, file: !1, line: 4399, type: !1090)
!8380 = !DILocation(line: 4399, column: 6, scope: !8358)
!8381 = !DILocalVariable(name: "sketch_image", scope: !8358, file: !1, line: 4400, type: !1090)
!8382 = !DILocation(line: 4400, column: 6, scope: !8358)
!8383 = !DILocalVariable(name: "status", scope: !8358, file: !1, line: 4403, type: !709)
!8384 = !DILocation(line: 4403, column: 5, scope: !8358)
!8385 = !DILocalVariable(name: "zero", scope: !8358, file: !1, line: 4406, type: !1223)
!8386 = !DILocation(line: 4406, column: 5, scope: !8358)
!8387 = !DILocalVariable(name: "random_info", scope: !8358, file: !1, line: 4409, type: !1542)
!8388 = !DILocation(line: 4409, column: 16, scope: !8358)
!8389 = !DILocalVariable(name: "y", scope: !8358, file: !1, line: 4412, type: !880)
!8390 = !DILocation(line: 4412, column: 5, scope: !8358)
!8391 = !DILocation(line: 4422, column: 27, scope: !8358)
!8392 = !DILocation(line: 4422, column: 33, scope: !8358)
!8393 = !DILocation(line: 4422, column: 40, scope: !8358)
!8394 = !DILocation(line: 4422, column: 48, scope: !8358)
!8395 = !DILocation(line: 4422, column: 53, scope: !8358)
!8396 = !DILocation(line: 4422, column: 60, scope: !8358)
!8397 = !DILocation(line: 4422, column: 65, scope: !8358)
!8398 = !DILocation(line: 4423, column: 16, scope: !8358)
!8399 = !DILocation(line: 4422, column: 16, scope: !8358)
!8400 = !DILocation(line: 4422, column: 15, scope: !8358)
!8401 = !DILocation(line: 4424, column: 7, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4424, column: 7)
!8403 = !DILocation(line: 4424, column: 20, scope: !8402)
!8404 = !DILocation(line: 4424, column: 7, scope: !8358)
!8405 = !DILocation(line: 4425, column: 5, scope: !8402)
!8406 = !DILocation(line: 4426, column: 41, scope: !8358)
!8407 = !DILocation(line: 4426, column: 54, scope: !8358)
!8408 = !DILocation(line: 4426, column: 15, scope: !8358)
!8409 = !DILocation(line: 4426, column: 14, scope: !8358)
!8410 = !DILocation(line: 4428, column: 29, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4428, column: 7)
!8412 = !DILocation(line: 4428, column: 42, scope: !8411)
!8413 = !DILocation(line: 4428, column: 7, scope: !8411)
!8414 = !DILocation(line: 4429, column: 7, scope: !8411)
!8415 = !DILocation(line: 4428, column: 7, scope: !8358)
!8416 = !DILocation(line: 4431, column: 11, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8411, file: !1, line: 4430, column: 3)
!8418 = !DILocation(line: 4432, column: 26, scope: !8417)
!8419 = !DILocation(line: 4432, column: 5, scope: !8417)
!8420 = !DILocation(line: 4433, column: 17, scope: !8417)
!8421 = !DILocation(line: 4433, column: 16, scope: !8417)
!8422 = !DILocation(line: 4437, column: 43, scope: !8417)
!8423 = !DILocation(line: 4437, column: 56, scope: !8417)
!8424 = !DILocation(line: 4437, column: 17, scope: !8417)
!8425 = !DILocation(line: 4437, column: 16, scope: !8417)
!8426 = !DILocation(line: 4442, column: 11, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8417, file: !1, line: 4442, column: 5)
!8428 = !DILocation(line: 4442, column: 10, scope: !8427)
!8429 = !DILocation(line: 4442, column: 15, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8427, file: !1, line: 4442, column: 5)
!8431 = !DILocation(line: 4442, column: 29, scope: !8430)
!8432 = !DILocation(line: 4442, column: 43, scope: !8430)
!8433 = !DILocation(line: 4442, column: 17, scope: !8430)
!8434 = !DILocation(line: 4442, column: 5, scope: !8427)
!8435 = !DILocalVariable(name: "id", scope: !8436, file: !1, line: 4445, type: !1625)
!8436 = distinct !DILexicalBlock(scope: !8430, file: !1, line: 4443, column: 5)
!8437 = !DILocation(line: 4445, column: 9, scope: !8436)
!8438 = !DILocation(line: 4445, column: 14, scope: !8436)
!8439 = !DILocalVariable(name: "pixel", scope: !8436, file: !1, line: 4448, type: !1223)
!8440 = !DILocation(line: 4448, column: 9, scope: !8436)
!8441 = !DILocalVariable(name: "indexes", scope: !8436, file: !1, line: 4451, type: !1637)
!8442 = !DILocation(line: 4451, column: 19, scope: !8436)
!8443 = !DILocalVariable(name: "x", scope: !8436, file: !1, line: 4454, type: !880)
!8444 = !DILocation(line: 4454, column: 9, scope: !8436)
!8445 = !DILocalVariable(name: "q", scope: !8436, file: !1, line: 4457, type: !1642)
!8446 = !DILocation(line: 4457, column: 19, scope: !8436)
!8447 = !DILocation(line: 4459, column: 11, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 4459, column: 11)
!8449 = !DILocation(line: 4459, column: 18, scope: !8448)
!8450 = !DILocation(line: 4459, column: 11, scope: !8436)
!8451 = !DILocation(line: 4460, column: 9, scope: !8448)
!8452 = !DILocation(line: 4461, column: 39, scope: !8436)
!8453 = !DILocation(line: 4461, column: 53, scope: !8436)
!8454 = !DILocation(line: 4461, column: 55, scope: !8436)
!8455 = !DILocation(line: 4461, column: 69, scope: !8436)
!8456 = !DILocation(line: 4462, column: 9, scope: !8436)
!8457 = !DILocation(line: 4461, column: 9, scope: !8436)
!8458 = !DILocation(line: 4461, column: 8, scope: !8436)
!8459 = !DILocation(line: 4463, column: 11, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 4463, column: 11)
!8461 = !DILocation(line: 4463, column: 13, scope: !8460)
!8462 = !DILocation(line: 4463, column: 11, scope: !8436)
!8463 = !DILocation(line: 4465, column: 15, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !1, line: 4464, column: 7)
!8465 = !DILocation(line: 4466, column: 9, scope: !8464)
!8466 = !DILocation(line: 4468, column: 47, scope: !8436)
!8467 = !DILocation(line: 4468, column: 15, scope: !8436)
!8468 = !DILocation(line: 4468, column: 14, scope: !8436)
!8469 = !DILocation(line: 4469, column: 13, scope: !8436)
!8470 = !DILocation(line: 4470, column: 13, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 4470, column: 7)
!8472 = !DILocation(line: 4470, column: 12, scope: !8471)
!8473 = !DILocation(line: 4470, column: 17, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8471, file: !1, line: 4470, column: 7)
!8475 = !DILocation(line: 4470, column: 31, scope: !8474)
!8476 = !DILocation(line: 4470, column: 45, scope: !8474)
!8477 = !DILocation(line: 4470, column: 19, scope: !8474)
!8478 = !DILocation(line: 4470, column: 7, scope: !8471)
!8479 = !DILocation(line: 4473, column: 32, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8474, file: !1, line: 4471, column: 7)
!8481 = !DILocation(line: 4473, column: 44, scope: !8480)
!8482 = !DILocation(line: 4473, column: 11, scope: !8480)
!8483 = !DILocation(line: 4472, column: 49, scope: !8480)
!8484 = !DILocation(line: 4472, column: 19, scope: !8480)
!8485 = !DILocation(line: 4472, column: 15, scope: !8480)
!8486 = !DILocation(line: 4472, column: 18, scope: !8480)
!8487 = !DILocation(line: 4474, column: 27, scope: !8480)
!8488 = !DILocation(line: 4474, column: 15, scope: !8480)
!8489 = !DILocation(line: 4474, column: 20, scope: !8480)
!8490 = !DILocation(line: 4475, column: 26, scope: !8480)
!8491 = !DILocation(line: 4475, column: 15, scope: !8480)
!8492 = !DILocation(line: 4475, column: 19, scope: !8480)
!8493 = !DILocation(line: 4476, column: 13, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8480, file: !1, line: 4476, column: 13)
!8495 = !DILocation(line: 4476, column: 20, scope: !8494)
!8496 = !DILocation(line: 4476, column: 31, scope: !8494)
!8497 = !DILocation(line: 4476, column: 13, scope: !8480)
!8498 = !DILocation(line: 4477, column: 29, scope: !8494)
!8499 = !DILocation(line: 4477, column: 17, scope: !8494)
!8500 = !DILocation(line: 4477, column: 22, scope: !8494)
!8501 = !DILocation(line: 4477, column: 11, scope: !8494)
!8502 = !DILocation(line: 4478, column: 24, scope: !8480)
!8503 = !DILocation(line: 4478, column: 44, scope: !8480)
!8504 = !DILocation(line: 4478, column: 46, scope: !8480)
!8505 = !DILocation(line: 4478, column: 54, scope: !8480)
!8506 = !DILocation(line: 4478, column: 53, scope: !8480)
!8507 = !DILocation(line: 4478, column: 9, scope: !8480)
!8508 = !DILocation(line: 4479, column: 10, scope: !8480)
!8509 = !DILocation(line: 4480, column: 7, scope: !8480)
!8510 = !DILocation(line: 4470, column: 55, scope: !8474)
!8511 = !DILocation(line: 4470, column: 7, scope: !8474)
!8512 = distinct !{!8512, !8478, !8513}
!8513 = !DILocation(line: 4480, column: 7, scope: !8471)
!8514 = !DILocation(line: 4481, column: 40, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 4481, column: 11)
!8516 = !DILocation(line: 4481, column: 52, scope: !8515)
!8517 = !DILocation(line: 4481, column: 11, scope: !8515)
!8518 = !DILocation(line: 4481, column: 63, scope: !8515)
!8519 = !DILocation(line: 4481, column: 11, scope: !8436)
!8520 = !DILocation(line: 4482, column: 15, scope: !8515)
!8521 = !DILocation(line: 4482, column: 9, scope: !8515)
!8522 = !DILocation(line: 4483, column: 5, scope: !8436)
!8523 = !DILocation(line: 4442, column: 50, scope: !8430)
!8524 = !DILocation(line: 4442, column: 5, scope: !8430)
!8525 = distinct !{!8525, !8434, !8526}
!8526 = !DILocation(line: 4483, column: 5, scope: !8427)
!8527 = !DILocation(line: 4484, column: 44, scope: !8417)
!8528 = !DILocation(line: 4484, column: 17, scope: !8417)
!8529 = !DILocation(line: 4484, column: 16, scope: !8417)
!8530 = !DILocation(line: 4485, column: 9, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8417, file: !1, line: 4485, column: 9)
!8532 = !DILocation(line: 4485, column: 16, scope: !8531)
!8533 = !DILocation(line: 4485, column: 9, scope: !8417)
!8534 = !DILocation(line: 4487, column: 36, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !1, line: 4486, column: 5)
!8536 = !DILocation(line: 4487, column: 19, scope: !8535)
!8537 = !DILocation(line: 4487, column: 18, scope: !8535)
!8538 = !DILocation(line: 4488, column: 33, scope: !8535)
!8539 = !DILocation(line: 4488, column: 20, scope: !8535)
!8540 = !DILocation(line: 4488, column: 19, scope: !8535)
!8541 = !DILocation(line: 4489, column: 14, scope: !8535)
!8542 = !DILocation(line: 4489, column: 7, scope: !8535)
!8543 = !DILocation(line: 4491, column: 3, scope: !8417)
!8544 = !DILocation(line: 4492, column: 32, scope: !8358)
!8545 = !DILocation(line: 4492, column: 15, scope: !8358)
!8546 = !DILocation(line: 4492, column: 14, scope: !8358)
!8547 = !DILocation(line: 4494, column: 30, scope: !8358)
!8548 = !DILocation(line: 4494, column: 43, scope: !8358)
!8549 = !DILocation(line: 4494, column: 50, scope: !8358)
!8550 = !DILocation(line: 4494, column: 56, scope: !8358)
!8551 = !DILocation(line: 4494, column: 62, scope: !8358)
!8552 = !DILocation(line: 4494, column: 14, scope: !8358)
!8553 = !DILocation(line: 4494, column: 13, scope: !8358)
!8554 = !DILocation(line: 4495, column: 29, scope: !8358)
!8555 = !DILocation(line: 4495, column: 16, scope: !8358)
!8556 = !DILocation(line: 4495, column: 15, scope: !8358)
!8557 = !DILocation(line: 4496, column: 7, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4496, column: 7)
!8559 = !DILocation(line: 4496, column: 18, scope: !8558)
!8560 = !DILocation(line: 4496, column: 7, scope: !8358)
!8561 = !DILocation(line: 4497, column: 5, scope: !8558)
!8562 = !DILocation(line: 4498, column: 25, scope: !8358)
!8563 = !DILocation(line: 4498, column: 36, scope: !8358)
!8564 = !DILocation(line: 4498, column: 43, scope: !8358)
!8565 = !DILocation(line: 4498, column: 15, scope: !8358)
!8566 = !DILocation(line: 4498, column: 14, scope: !8358)
!8567 = !DILocation(line: 4499, column: 27, scope: !8358)
!8568 = !DILocation(line: 4499, column: 14, scope: !8358)
!8569 = !DILocation(line: 4499, column: 13, scope: !8358)
!8570 = !DILocation(line: 4500, column: 7, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4500, column: 7)
!8572 = !DILocation(line: 4500, column: 19, scope: !8571)
!8573 = !DILocation(line: 4500, column: 7, scope: !8358)
!8574 = !DILocation(line: 4501, column: 5, scope: !8571)
!8575 = !DILocation(line: 4502, column: 25, scope: !8358)
!8576 = !DILocation(line: 4502, column: 10, scope: !8358)
!8577 = !DILocation(line: 4503, column: 22, scope: !8358)
!8578 = !DILocation(line: 4503, column: 10, scope: !8358)
!8579 = !DILocation(line: 4504, column: 10, scope: !8358)
!8580 = !DILocation(line: 4505, column: 27, scope: !8358)
!8581 = !DILocation(line: 4505, column: 48, scope: !8358)
!8582 = !DILocation(line: 4505, column: 16, scope: !8358)
!8583 = !DILocation(line: 4505, column: 15, scope: !8358)
!8584 = !DILocation(line: 4506, column: 7, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4506, column: 7)
!8586 = !DILocation(line: 4506, column: 20, scope: !8585)
!8587 = !DILocation(line: 4506, column: 7, scope: !8358)
!8588 = !DILocation(line: 4508, column: 32, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !1, line: 4507, column: 5)
!8590 = !DILocation(line: 4508, column: 19, scope: !8589)
!8591 = !DILocation(line: 4508, column: 18, scope: !8589)
!8592 = !DILocation(line: 4509, column: 7, scope: !8589)
!8593 = !DILocation(line: 4511, column: 25, scope: !8358)
!8594 = !DILocation(line: 4511, column: 60, scope: !8358)
!8595 = !DILocation(line: 4511, column: 10, scope: !8358)
!8596 = !DILocation(line: 4512, column: 28, scope: !8358)
!8597 = !DILocation(line: 4512, column: 15, scope: !8358)
!8598 = !DILocation(line: 4512, column: 14, scope: !8358)
!8599 = !DILocation(line: 4513, column: 26, scope: !8358)
!8600 = !DILocation(line: 4513, column: 47, scope: !8358)
!8601 = !DILocation(line: 4513, column: 15, scope: !8358)
!8602 = !DILocation(line: 4513, column: 14, scope: !8358)
!8603 = !DILocation(line: 4514, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8358, file: !1, line: 4514, column: 7)
!8605 = !DILocation(line: 4514, column: 19, scope: !8604)
!8606 = !DILocation(line: 4514, column: 7, scope: !8358)
!8607 = !DILocation(line: 4516, column: 33, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8604, file: !1, line: 4515, column: 5)
!8609 = !DILocation(line: 4516, column: 20, scope: !8608)
!8610 = !DILocation(line: 4516, column: 19, scope: !8608)
!8611 = !DILocation(line: 4517, column: 7, scope: !8608)
!8612 = !DILocation(line: 4519, column: 27, scope: !8358)
!8613 = !DILocation(line: 4519, column: 10, scope: !8358)
!8614 = !DILocation(line: 4520, column: 25, scope: !8358)
!8615 = !DILocation(line: 4520, column: 55, scope: !8358)
!8616 = !DILocation(line: 4520, column: 10, scope: !8358)
!8617 = !DILocation(line: 4521, column: 28, scope: !8358)
!8618 = !DILocation(line: 4521, column: 15, scope: !8358)
!8619 = !DILocation(line: 4521, column: 14, scope: !8358)
!8620 = !DILocation(line: 4522, column: 10, scope: !8358)
!8621 = !DILocation(line: 4522, column: 3, scope: !8358)
!8622 = !DILocation(line: 4523, column: 1, scope: !8358)
!8623 = distinct !DISubprogram(name: "SolarizeImage", scope: !1, file: !1, line: 4559, type: !8624, scopeLine: 4561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!709, !1090, !1986}
!8626 = !DILocalVariable(name: "image", arg: 1, scope: !8623, file: !1, line: 4559, type: !1090)
!8627 = !DILocation(line: 4559, column: 53, scope: !8623)
!8628 = !DILocalVariable(name: "threshold", arg: 2, scope: !8623, file: !1, line: 4560, type: !1986)
!8629 = !DILocation(line: 4560, column: 16, scope: !8623)
!8630 = !DILocalVariable(name: "status", scope: !8623, file: !1, line: 4563, type: !709)
!8631 = !DILocation(line: 4563, column: 5, scope: !8623)
!8632 = !DILocation(line: 4565, column: 31, scope: !8623)
!8633 = !DILocation(line: 4565, column: 53, scope: !8623)
!8634 = !DILocation(line: 4566, column: 6, scope: !8623)
!8635 = !DILocation(line: 4566, column: 13, scope: !8623)
!8636 = !DILocation(line: 4565, column: 10, scope: !8623)
!8637 = !DILocation(line: 4565, column: 9, scope: !8623)
!8638 = !DILocation(line: 4567, column: 10, scope: !8623)
!8639 = !DILocation(line: 4567, column: 3, scope: !8623)
!8640 = distinct !DISubprogram(name: "SolarizeImageChannel", scope: !1, file: !1, line: 4570, type: !8641, scopeLine: 4572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!709, !1090, !1518, !1986, !695}
!8643 = !DILocalVariable(name: "image", arg: 1, scope: !8640, file: !1, line: 4570, type: !1090)
!8644 = !DILocation(line: 4570, column: 60, scope: !8640)
!8645 = !DILocalVariable(name: "channel", arg: 2, scope: !8640, file: !1, line: 4571, type: !1518)
!8646 = !DILocation(line: 4571, column: 21, scope: !8640)
!8647 = !DILocalVariable(name: "threshold", arg: 3, scope: !8640, file: !1, line: 4571, type: !1986)
!8648 = !DILocation(line: 4571, column: 42, scope: !8640)
!8649 = !DILocalVariable(name: "exception", arg: 4, scope: !8640, file: !1, line: 4571, type: !695)
!8650 = !DILocation(line: 4571, column: 67, scope: !8640)
!8651 = !DILocalVariable(name: "image_view", scope: !8640, file: !1, line: 4576, type: !1081)
!8652 = !DILocation(line: 4576, column: 6, scope: !8640)
!8653 = !DILocalVariable(name: "status", scope: !8640, file: !1, line: 4579, type: !709)
!8654 = !DILocation(line: 4579, column: 5, scope: !8640)
!8655 = !DILocalVariable(name: "progress", scope: !8640, file: !1, line: 4582, type: !950)
!8656 = !DILocation(line: 4582, column: 5, scope: !8640)
!8657 = !DILocalVariable(name: "y", scope: !8640, file: !1, line: 4585, type: !880)
!8658 = !DILocation(line: 4585, column: 5, scope: !8640)
!8659 = !DILocation(line: 4589, column: 7, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8640, file: !1, line: 4589, column: 7)
!8661 = !DILocation(line: 4589, column: 14, scope: !8660)
!8662 = !DILocation(line: 4589, column: 20, scope: !8660)
!8663 = !DILocation(line: 4589, column: 7, scope: !8640)
!8664 = !DILocation(line: 4590, column: 61, scope: !8660)
!8665 = !DILocation(line: 4590, column: 68, scope: !8660)
!8666 = !DILocation(line: 4590, column: 12, scope: !8660)
!8667 = !DILocation(line: 4590, column: 5, scope: !8660)
!8668 = !DILocation(line: 4591, column: 24, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8640, file: !1, line: 4591, column: 7)
!8670 = !DILocation(line: 4591, column: 31, scope: !8669)
!8671 = !DILocation(line: 4591, column: 7, scope: !8669)
!8672 = !DILocation(line: 4591, column: 43, scope: !8669)
!8673 = !DILocation(line: 4591, column: 7, scope: !8640)
!8674 = !DILocation(line: 4592, column: 31, scope: !8669)
!8675 = !DILocation(line: 4592, column: 12, scope: !8669)
!8676 = !DILocation(line: 4592, column: 5, scope: !8669)
!8677 = !DILocation(line: 4593, column: 7, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8640, file: !1, line: 4593, column: 7)
!8679 = !DILocation(line: 4593, column: 14, scope: !8678)
!8680 = !DILocation(line: 4593, column: 28, scope: !8678)
!8681 = !DILocation(line: 4593, column: 7, scope: !8640)
!8682 = !DILocalVariable(name: "i", scope: !8683, file: !1, line: 4596, type: !880)
!8683 = distinct !DILexicalBlock(scope: !8678, file: !1, line: 4594, column: 5)
!8684 = !DILocation(line: 4596, column: 9, scope: !8683)
!8685 = !DILocation(line: 4601, column: 13, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8683, file: !1, line: 4601, column: 7)
!8687 = !DILocation(line: 4601, column: 12, scope: !8686)
!8688 = !DILocation(line: 4601, column: 17, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8686, file: !1, line: 4601, column: 7)
!8690 = !DILocation(line: 4601, column: 31, scope: !8689)
!8691 = !DILocation(line: 4601, column: 38, scope: !8689)
!8692 = !DILocation(line: 4601, column: 19, scope: !8689)
!8693 = !DILocation(line: 4601, column: 7, scope: !8686)
!8694 = !DILocation(line: 4603, column: 14, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !1, line: 4603, column: 13)
!8696 = distinct !DILexicalBlock(scope: !8689, file: !1, line: 4602, column: 7)
!8697 = !DILocation(line: 4603, column: 22, scope: !8695)
!8698 = !DILocation(line: 4603, column: 36, scope: !8695)
!8699 = !DILocation(line: 4603, column: 13, scope: !8696)
!8700 = !DILocation(line: 4604, column: 24, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8695, file: !1, line: 4604, column: 15)
!8702 = !DILocation(line: 4604, column: 31, scope: !8701)
!8703 = !DILocation(line: 4604, column: 40, scope: !8701)
!8704 = !DILocation(line: 4604, column: 43, scope: !8701)
!8705 = !DILocation(line: 4604, column: 15, scope: !8701)
!8706 = !DILocation(line: 4604, column: 49, scope: !8701)
!8707 = !DILocation(line: 4604, column: 47, scope: !8701)
!8708 = !DILocation(line: 4604, column: 15, scope: !8695)
!8709 = !DILocation(line: 4605, column: 49, scope: !8701)
!8710 = !DILocation(line: 4605, column: 56, scope: !8701)
!8711 = !DILocation(line: 4605, column: 65, scope: !8701)
!8712 = !DILocation(line: 4605, column: 68, scope: !8701)
!8713 = !DILocation(line: 4605, column: 48, scope: !8701)
!8714 = !DILocation(line: 4605, column: 36, scope: !8701)
!8715 = !DILocation(line: 4605, column: 13, scope: !8701)
!8716 = !DILocation(line: 4605, column: 20, scope: !8701)
!8717 = !DILocation(line: 4605, column: 29, scope: !8701)
!8718 = !DILocation(line: 4605, column: 32, scope: !8701)
!8719 = !DILocation(line: 4605, column: 35, scope: !8701)
!8720 = !DILocation(line: 4606, column: 14, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8696, file: !1, line: 4606, column: 13)
!8722 = !DILocation(line: 4606, column: 22, scope: !8721)
!8723 = !DILocation(line: 4606, column: 38, scope: !8721)
!8724 = !DILocation(line: 4606, column: 13, scope: !8696)
!8725 = !DILocation(line: 4607, column: 24, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8721, file: !1, line: 4607, column: 15)
!8727 = !DILocation(line: 4607, column: 31, scope: !8726)
!8728 = !DILocation(line: 4607, column: 40, scope: !8726)
!8729 = !DILocation(line: 4607, column: 43, scope: !8726)
!8730 = !DILocation(line: 4607, column: 15, scope: !8726)
!8731 = !DILocation(line: 4607, column: 51, scope: !8726)
!8732 = !DILocation(line: 4607, column: 49, scope: !8726)
!8733 = !DILocation(line: 4607, column: 15, scope: !8721)
!8734 = !DILocation(line: 4608, column: 51, scope: !8726)
!8735 = !DILocation(line: 4608, column: 58, scope: !8726)
!8736 = !DILocation(line: 4608, column: 67, scope: !8726)
!8737 = !DILocation(line: 4608, column: 70, scope: !8726)
!8738 = !DILocation(line: 4608, column: 50, scope: !8726)
!8739 = !DILocation(line: 4608, column: 38, scope: !8726)
!8740 = !DILocation(line: 4608, column: 13, scope: !8726)
!8741 = !DILocation(line: 4608, column: 20, scope: !8726)
!8742 = !DILocation(line: 4608, column: 29, scope: !8726)
!8743 = !DILocation(line: 4608, column: 32, scope: !8726)
!8744 = !DILocation(line: 4608, column: 37, scope: !8726)
!8745 = !DILocation(line: 4609, column: 14, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8696, file: !1, line: 4609, column: 13)
!8747 = !DILocation(line: 4609, column: 22, scope: !8746)
!8748 = !DILocation(line: 4609, column: 37, scope: !8746)
!8749 = !DILocation(line: 4609, column: 13, scope: !8696)
!8750 = !DILocation(line: 4610, column: 24, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !1, line: 4610, column: 15)
!8752 = !DILocation(line: 4610, column: 31, scope: !8751)
!8753 = !DILocation(line: 4610, column: 40, scope: !8751)
!8754 = !DILocation(line: 4610, column: 43, scope: !8751)
!8755 = !DILocation(line: 4610, column: 15, scope: !8751)
!8756 = !DILocation(line: 4610, column: 50, scope: !8751)
!8757 = !DILocation(line: 4610, column: 48, scope: !8751)
!8758 = !DILocation(line: 4610, column: 15, scope: !8746)
!8759 = !DILocation(line: 4611, column: 50, scope: !8751)
!8760 = !DILocation(line: 4611, column: 57, scope: !8751)
!8761 = !DILocation(line: 4611, column: 66, scope: !8751)
!8762 = !DILocation(line: 4611, column: 69, scope: !8751)
!8763 = !DILocation(line: 4611, column: 49, scope: !8751)
!8764 = !DILocation(line: 4611, column: 37, scope: !8751)
!8765 = !DILocation(line: 4611, column: 13, scope: !8751)
!8766 = !DILocation(line: 4611, column: 20, scope: !8751)
!8767 = !DILocation(line: 4611, column: 29, scope: !8751)
!8768 = !DILocation(line: 4611, column: 32, scope: !8751)
!8769 = !DILocation(line: 4611, column: 36, scope: !8751)
!8770 = !DILocation(line: 4612, column: 7, scope: !8696)
!8771 = !DILocation(line: 4601, column: 47, scope: !8689)
!8772 = !DILocation(line: 4601, column: 7, scope: !8689)
!8773 = distinct !{!8773, !8693, !8774}
!8774 = !DILocation(line: 4612, column: 7, scope: !8686)
!8775 = !DILocation(line: 4613, column: 5, scope: !8683)
!8776 = !DILocation(line: 4617, column: 9, scope: !8640)
!8777 = !DILocation(line: 4618, column: 11, scope: !8640)
!8778 = !DILocation(line: 4619, column: 40, scope: !8640)
!8779 = !DILocation(line: 4619, column: 46, scope: !8640)
!8780 = !DILocation(line: 4619, column: 14, scope: !8640)
!8781 = !DILocation(line: 4619, column: 13, scope: !8640)
!8782 = !DILocation(line: 4624, column: 9, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8640, file: !1, line: 4624, column: 3)
!8784 = !DILocation(line: 4624, column: 8, scope: !8783)
!8785 = !DILocation(line: 4624, column: 13, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8783, file: !1, line: 4624, column: 3)
!8787 = !DILocation(line: 4624, column: 27, scope: !8786)
!8788 = !DILocation(line: 4624, column: 34, scope: !8786)
!8789 = !DILocation(line: 4624, column: 15, scope: !8786)
!8790 = !DILocation(line: 4624, column: 3, scope: !8783)
!8791 = !DILocalVariable(name: "x", scope: !8792, file: !1, line: 4627, type: !880)
!8792 = distinct !DILexicalBlock(scope: !8786, file: !1, line: 4625, column: 3)
!8793 = !DILocation(line: 4627, column: 7, scope: !8792)
!8794 = !DILocalVariable(name: "q", scope: !8792, file: !1, line: 4630, type: !1642)
!8795 = !DILocation(line: 4630, column: 17, scope: !8792)
!8796 = !DILocation(line: 4632, column: 9, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8792, file: !1, line: 4632, column: 9)
!8798 = !DILocation(line: 4632, column: 16, scope: !8797)
!8799 = !DILocation(line: 4632, column: 9, scope: !8792)
!8800 = !DILocation(line: 4633, column: 7, scope: !8797)
!8801 = !DILocation(line: 4634, column: 35, scope: !8792)
!8802 = !DILocation(line: 4634, column: 48, scope: !8792)
!8803 = !DILocation(line: 4634, column: 50, scope: !8792)
!8804 = !DILocation(line: 4634, column: 57, scope: !8792)
!8805 = !DILocation(line: 4635, column: 7, scope: !8792)
!8806 = !DILocation(line: 4634, column: 7, scope: !8792)
!8807 = !DILocation(line: 4634, column: 6, scope: !8792)
!8808 = !DILocation(line: 4636, column: 9, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8792, file: !1, line: 4636, column: 9)
!8810 = !DILocation(line: 4636, column: 11, scope: !8809)
!8811 = !DILocation(line: 4636, column: 9, scope: !8792)
!8812 = !DILocation(line: 4638, column: 15, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 4637, column: 7)
!8814 = !DILocation(line: 4639, column: 9, scope: !8813)
!8815 = !DILocation(line: 4641, column: 11, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8792, file: !1, line: 4641, column: 5)
!8817 = !DILocation(line: 4641, column: 10, scope: !8816)
!8818 = !DILocation(line: 4641, column: 15, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8816, file: !1, line: 4641, column: 5)
!8820 = !DILocation(line: 4641, column: 29, scope: !8819)
!8821 = !DILocation(line: 4641, column: 36, scope: !8819)
!8822 = !DILocation(line: 4641, column: 17, scope: !8819)
!8823 = !DILocation(line: 4641, column: 5, scope: !8816)
!8824 = !DILocation(line: 4643, column: 12, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !1, line: 4643, column: 11)
!8826 = distinct !DILexicalBlock(scope: !8819, file: !1, line: 4642, column: 5)
!8827 = !DILocation(line: 4643, column: 20, scope: !8825)
!8828 = !DILocation(line: 4643, column: 34, scope: !8825)
!8829 = !DILocation(line: 4643, column: 11, scope: !8826)
!8830 = !DILocation(line: 4644, column: 22, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8825, file: !1, line: 4644, column: 13)
!8832 = !DILocation(line: 4644, column: 13, scope: !8831)
!8833 = !DILocation(line: 4644, column: 39, scope: !8831)
!8834 = !DILocation(line: 4644, column: 37, scope: !8831)
!8835 = !DILocation(line: 4644, column: 13, scope: !8825)
!8836 = !DILocation(line: 4645, column: 11, scope: !8831)
!8837 = !DILocation(line: 4646, column: 12, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8826, file: !1, line: 4646, column: 11)
!8839 = !DILocation(line: 4646, column: 20, scope: !8838)
!8840 = !DILocation(line: 4646, column: 36, scope: !8838)
!8841 = !DILocation(line: 4646, column: 11, scope: !8826)
!8842 = !DILocation(line: 4647, column: 22, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8838, file: !1, line: 4647, column: 13)
!8844 = !DILocation(line: 4647, column: 13, scope: !8843)
!8845 = !DILocation(line: 4647, column: 41, scope: !8843)
!8846 = !DILocation(line: 4647, column: 39, scope: !8843)
!8847 = !DILocation(line: 4647, column: 13, scope: !8838)
!8848 = !DILocation(line: 4648, column: 11, scope: !8843)
!8849 = !DILocation(line: 4649, column: 12, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8826, file: !1, line: 4649, column: 11)
!8851 = !DILocation(line: 4649, column: 20, scope: !8850)
!8852 = !DILocation(line: 4649, column: 35, scope: !8850)
!8853 = !DILocation(line: 4649, column: 11, scope: !8826)
!8854 = !DILocation(line: 4650, column: 22, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8850, file: !1, line: 4650, column: 13)
!8856 = !DILocation(line: 4650, column: 13, scope: !8855)
!8857 = !DILocation(line: 4650, column: 40, scope: !8855)
!8858 = !DILocation(line: 4650, column: 38, scope: !8855)
!8859 = !DILocation(line: 4650, column: 13, scope: !8850)
!8860 = !DILocation(line: 4651, column: 11, scope: !8855)
!8861 = !DILocation(line: 4652, column: 8, scope: !8826)
!8862 = !DILocation(line: 4653, column: 5, scope: !8826)
!8863 = !DILocation(line: 4641, column: 46, scope: !8819)
!8864 = !DILocation(line: 4641, column: 5, scope: !8819)
!8865 = distinct !{!8865, !8823, !8866}
!8866 = !DILocation(line: 4653, column: 5, scope: !8816)
!8867 = !DILocation(line: 4654, column: 38, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8792, file: !1, line: 4654, column: 9)
!8869 = !DILocation(line: 4654, column: 49, scope: !8868)
!8870 = !DILocation(line: 4654, column: 9, scope: !8868)
!8871 = !DILocation(line: 4654, column: 60, scope: !8868)
!8872 = !DILocation(line: 4654, column: 9, scope: !8792)
!8873 = !DILocation(line: 4655, column: 13, scope: !8868)
!8874 = !DILocation(line: 4655, column: 7, scope: !8868)
!8875 = !DILocation(line: 4656, column: 9, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8792, file: !1, line: 4656, column: 9)
!8877 = !DILocation(line: 4656, column: 16, scope: !8876)
!8878 = !DILocation(line: 4656, column: 33, scope: !8876)
!8879 = !DILocation(line: 4656, column: 9, scope: !8792)
!8880 = !DILocalVariable(name: "proceed", scope: !8881, file: !1, line: 4659, type: !709)
!8881 = distinct !DILexicalBlock(scope: !8876, file: !1, line: 4657, column: 7)
!8882 = !DILocation(line: 4659, column: 11, scope: !8881)
!8883 = !DILocation(line: 4664, column: 34, scope: !8881)
!8884 = !DILocation(line: 4664, column: 65, scope: !8881)
!8885 = !DILocation(line: 4664, column: 68, scope: !8881)
!8886 = !DILocation(line: 4664, column: 75, scope: !8881)
!8887 = !DILocation(line: 4664, column: 17, scope: !8881)
!8888 = !DILocation(line: 4664, column: 16, scope: !8881)
!8889 = !DILocation(line: 4665, column: 13, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8881, file: !1, line: 4665, column: 13)
!8891 = !DILocation(line: 4665, column: 21, scope: !8890)
!8892 = !DILocation(line: 4665, column: 13, scope: !8881)
!8893 = !DILocation(line: 4666, column: 17, scope: !8890)
!8894 = !DILocation(line: 4666, column: 11, scope: !8890)
!8895 = !DILocation(line: 4667, column: 7, scope: !8881)
!8896 = !DILocation(line: 4668, column: 3, scope: !8792)
!8897 = !DILocation(line: 4624, column: 41, scope: !8786)
!8898 = !DILocation(line: 4624, column: 3, scope: !8786)
!8899 = distinct !{!8899, !8790, !8900}
!8900 = !DILocation(line: 4668, column: 3, scope: !8783)
!8901 = !DILocation(line: 4669, column: 31, scope: !8640)
!8902 = !DILocation(line: 4669, column: 14, scope: !8640)
!8903 = !DILocation(line: 4669, column: 13, scope: !8640)
!8904 = !DILocation(line: 4670, column: 10, scope: !8640)
!8905 = !DILocation(line: 4670, column: 3, scope: !8640)
!8906 = distinct !DISubprogram(name: "SteganoImage", scope: !1, file: !1, line: 4702, type: !8907, scopeLine: 4704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!1090, !821, !821, !695}
!8909 = !DILocalVariable(name: "image", arg: 1, scope: !8906, file: !1, line: 4702, type: !821)
!8910 = !DILocation(line: 4702, column: 47, scope: !8906)
!8911 = !DILocalVariable(name: "watermark", arg: 2, scope: !8906, file: !1, line: 4702, type: !821)
!8912 = !DILocation(line: 4702, column: 66, scope: !8906)
!8913 = !DILocalVariable(name: "exception", arg: 3, scope: !8906, file: !1, line: 4703, type: !695)
!8914 = !DILocation(line: 4703, column: 18, scope: !8906)
!8915 = !DILocalVariable(name: "stegano_view", scope: !8906, file: !1, line: 4711, type: !1081)
!8916 = !DILocation(line: 4711, column: 6, scope: !8906)
!8917 = !DILocalVariable(name: "watermark_view", scope: !8906, file: !1, line: 4712, type: !1081)
!8918 = !DILocation(line: 4712, column: 6, scope: !8906)
!8919 = !DILocalVariable(name: "stegano_image", scope: !8906, file: !1, line: 4715, type: !1090)
!8920 = !DILocation(line: 4715, column: 6, scope: !8906)
!8921 = !DILocalVariable(name: "c", scope: !8906, file: !1, line: 4718, type: !702)
!8922 = !DILocation(line: 4718, column: 5, scope: !8906)
!8923 = !DILocalVariable(name: "status", scope: !8906, file: !1, line: 4721, type: !709)
!8924 = !DILocation(line: 4721, column: 5, scope: !8906)
!8925 = !DILocalVariable(name: "pixel", scope: !8906, file: !1, line: 4724, type: !843)
!8926 = !DILocation(line: 4724, column: 5, scope: !8906)
!8927 = !DILocalVariable(name: "q", scope: !8906, file: !1, line: 4727, type: !842)
!8928 = !DILocation(line: 4727, column: 6, scope: !8906)
!8929 = !DILocalVariable(name: "x", scope: !8906, file: !1, line: 4730, type: !880)
!8930 = !DILocation(line: 4730, column: 5, scope: !8906)
!8931 = !DILocalVariable(name: "depth", scope: !8906, file: !1, line: 4733, type: !716)
!8932 = !DILocation(line: 4733, column: 5, scope: !8906)
!8933 = !DILocalVariable(name: "one", scope: !8906, file: !1, line: 4734, type: !716)
!8934 = !DILocation(line: 4734, column: 5, scope: !8906)
!8935 = !DILocalVariable(name: "i", scope: !8906, file: !1, line: 4737, type: !880)
!8936 = !DILocation(line: 4737, column: 5, scope: !8906)
!8937 = !DILocalVariable(name: "j", scope: !8906, file: !1, line: 4738, type: !880)
!8938 = !DILocation(line: 4738, column: 5, scope: !8906)
!8939 = !DILocalVariable(name: "k", scope: !8906, file: !1, line: 4739, type: !880)
!8940 = !DILocation(line: 4739, column: 5, scope: !8906)
!8941 = !DILocalVariable(name: "y", scope: !8906, file: !1, line: 4740, type: !880)
!8942 = !DILocation(line: 4740, column: 5, scope: !8906)
!8943 = !DILocation(line: 4747, column: 7, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4747, column: 7)
!8945 = !DILocation(line: 4747, column: 14, scope: !8944)
!8946 = !DILocation(line: 4747, column: 20, scope: !8944)
!8947 = !DILocation(line: 4747, column: 7, scope: !8906)
!8948 = !DILocation(line: 4748, column: 61, scope: !8944)
!8949 = !DILocation(line: 4748, column: 68, scope: !8944)
!8950 = !DILocation(line: 4748, column: 12, scope: !8944)
!8951 = !DILocation(line: 4748, column: 5, scope: !8944)
!8952 = !DILocation(line: 4753, column: 6, scope: !8906)
!8953 = !DILocation(line: 4754, column: 28, scope: !8906)
!8954 = !DILocation(line: 4754, column: 49, scope: !8906)
!8955 = !DILocation(line: 4754, column: 17, scope: !8906)
!8956 = !DILocation(line: 4754, column: 16, scope: !8906)
!8957 = !DILocation(line: 4755, column: 7, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4755, column: 7)
!8959 = !DILocation(line: 4755, column: 21, scope: !8958)
!8960 = !DILocation(line: 4755, column: 7, scope: !8906)
!8961 = !DILocation(line: 4756, column: 5, scope: !8958)
!8962 = !DILocation(line: 4757, column: 28, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4757, column: 7)
!8964 = !DILocation(line: 4757, column: 7, scope: !8963)
!8965 = !DILocation(line: 4757, column: 55, scope: !8963)
!8966 = !DILocation(line: 4757, column: 7, scope: !8906)
!8967 = !DILocation(line: 4759, column: 24, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8963, file: !1, line: 4758, column: 5)
!8969 = !DILocation(line: 4759, column: 35, scope: !8968)
!8970 = !DILocation(line: 4759, column: 50, scope: !8968)
!8971 = !DILocation(line: 4759, column: 7, scope: !8968)
!8972 = !DILocation(line: 4760, column: 34, scope: !8968)
!8973 = !DILocation(line: 4760, column: 21, scope: !8968)
!8974 = !DILocation(line: 4760, column: 20, scope: !8968)
!8975 = !DILocation(line: 4761, column: 7, scope: !8968)
!8976 = !DILocation(line: 4763, column: 3, scope: !8906)
!8977 = !DILocation(line: 4763, column: 18, scope: !8906)
!8978 = !DILocation(line: 4763, column: 23, scope: !8906)
!8979 = !DILocation(line: 4767, column: 4, scope: !8906)
!8980 = !DILocation(line: 4768, column: 4, scope: !8906)
!8981 = !DILocation(line: 4769, column: 4, scope: !8906)
!8982 = !DILocation(line: 4770, column: 9, scope: !8906)
!8983 = !DILocation(line: 4770, column: 24, scope: !8906)
!8984 = !DILocation(line: 4770, column: 8, scope: !8906)
!8985 = !DILocation(line: 4771, column: 5, scope: !8906)
!8986 = !DILocation(line: 4771, column: 12, scope: !8906)
!8987 = !DILocation(line: 4771, column: 4, scope: !8906)
!8988 = !DILocation(line: 4772, column: 9, scope: !8906)
!8989 = !DILocation(line: 4773, column: 42, scope: !8906)
!8990 = !DILocation(line: 4773, column: 52, scope: !8906)
!8991 = !DILocation(line: 4773, column: 18, scope: !8906)
!8992 = !DILocation(line: 4773, column: 17, scope: !8906)
!8993 = !DILocation(line: 4774, column: 42, scope: !8906)
!8994 = !DILocation(line: 4774, column: 56, scope: !8906)
!8995 = !DILocation(line: 4774, column: 16, scope: !8906)
!8996 = !DILocation(line: 4774, column: 15, scope: !8906)
!8997 = !DILocation(line: 4775, column: 20, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4775, column: 3)
!8999 = !DILocation(line: 4775, column: 25, scope: !8998)
!9000 = !DILocation(line: 4775, column: 9, scope: !8998)
!9001 = !DILocation(line: 4775, column: 8, scope: !8998)
!9002 = !DILocation(line: 4775, column: 30, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 4775, column: 3)
!9004 = !DILocation(line: 4775, column: 32, scope: !9003)
!9005 = !DILocation(line: 4775, column: 38, scope: !9003)
!9006 = !DILocation(line: 4775, column: 42, scope: !9003)
!9007 = !DILocation(line: 4775, column: 56, scope: !9003)
!9008 = !DILocation(line: 4775, column: 44, scope: !9003)
!9009 = !DILocation(line: 0, scope: !9003)
!9010 = !DILocation(line: 4775, column: 3, scope: !8998)
!9011 = !DILocation(line: 4777, column: 11, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !1, line: 4777, column: 5)
!9013 = distinct !DILexicalBlock(scope: !9003, file: !1, line: 4776, column: 3)
!9014 = !DILocation(line: 4777, column: 10, scope: !9012)
!9015 = !DILocation(line: 4777, column: 16, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9012, file: !1, line: 4777, column: 5)
!9017 = !DILocation(line: 4777, column: 30, scope: !9016)
!9018 = !DILocation(line: 4777, column: 41, scope: !9016)
!9019 = !DILocation(line: 4777, column: 18, scope: !9016)
!9020 = !DILocation(line: 4777, column: 47, scope: !9016)
!9021 = !DILocation(line: 4777, column: 51, scope: !9016)
!9022 = !DILocation(line: 4777, column: 65, scope: !9016)
!9023 = !DILocation(line: 4777, column: 53, scope: !9016)
!9024 = !DILocation(line: 0, scope: !9016)
!9025 = !DILocation(line: 4777, column: 5, scope: !9012)
!9026 = !DILocation(line: 4779, column: 13, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !1, line: 4779, column: 7)
!9028 = distinct !DILexicalBlock(scope: !9016, file: !1, line: 4778, column: 5)
!9029 = !DILocation(line: 4779, column: 12, scope: !9027)
!9030 = !DILocation(line: 4779, column: 18, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9027, file: !1, line: 4779, column: 7)
!9032 = !DILocation(line: 4779, column: 32, scope: !9031)
!9033 = !DILocation(line: 4779, column: 43, scope: !9031)
!9034 = !DILocation(line: 4779, column: 20, scope: !9031)
!9035 = !DILocation(line: 4779, column: 52, scope: !9031)
!9036 = !DILocation(line: 4779, column: 56, scope: !9031)
!9037 = !DILocation(line: 4779, column: 70, scope: !9031)
!9038 = !DILocation(line: 4779, column: 58, scope: !9031)
!9039 = !DILocation(line: 0, scope: !9031)
!9040 = !DILocation(line: 4779, column: 7, scope: !9027)
!9041 = !DILocation(line: 4781, column: 44, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9031, file: !1, line: 4780, column: 7)
!9043 = !DILocation(line: 4781, column: 59, scope: !9042)
!9044 = !DILocation(line: 4781, column: 61, scope: !9042)
!9045 = !DILocation(line: 4781, column: 70, scope: !9042)
!9046 = !DILocation(line: 4781, column: 16, scope: !9042)
!9047 = !DILocation(line: 4782, column: 14, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4782, column: 13)
!9049 = !DILocation(line: 4782, column: 26, scope: !9048)
!9050 = !DILocation(line: 4782, column: 41, scope: !9048)
!9051 = !DILocation(line: 4782, column: 15, scope: !9048)
!9052 = !DILocation(line: 4782, column: 63, scope: !9048)
!9053 = !DILocation(line: 4782, column: 78, scope: !9048)
!9054 = !DILocation(line: 4782, column: 50, scope: !9048)
!9055 = !DILocation(line: 4782, column: 13, scope: !9042)
!9056 = !DILocation(line: 4783, column: 11, scope: !9048)
!9057 = !DILocation(line: 4784, column: 39, scope: !9042)
!9058 = !DILocation(line: 4784, column: 52, scope: !9042)
!9059 = !DILocation(line: 4785, column: 11, scope: !9042)
!9060 = !DILocation(line: 4785, column: 26, scope: !9042)
!9061 = !DILocation(line: 4784, column: 54, scope: !9042)
!9062 = !DILocation(line: 4785, column: 34, scope: !9042)
!9063 = !DILocation(line: 4785, column: 46, scope: !9042)
!9064 = !DILocation(line: 4785, column: 61, scope: !9042)
!9065 = !DILocation(line: 4785, column: 35, scope: !9042)
!9066 = !DILocation(line: 4786, column: 11, scope: !9042)
!9067 = !DILocation(line: 4784, column: 11, scope: !9042)
!9068 = !DILocation(line: 4784, column: 10, scope: !9042)
!9069 = !DILocation(line: 4787, column: 13, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4787, column: 13)
!9071 = !DILocation(line: 4787, column: 15, scope: !9070)
!9072 = !DILocation(line: 4787, column: 13, scope: !9042)
!9073 = !DILocation(line: 4788, column: 11, scope: !9070)
!9074 = !DILocation(line: 4789, column: 17, scope: !9042)
!9075 = !DILocation(line: 4789, column: 9, scope: !9042)
!9076 = !DILocation(line: 4793, column: 13, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !1, line: 4792, column: 11)
!9078 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4790, column: 9)
!9079 = !DILocation(line: 4795, column: 13, scope: !9077)
!9080 = !DILocation(line: 4799, column: 13, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9078, file: !1, line: 4798, column: 11)
!9082 = !DILocation(line: 4801, column: 13, scope: !9081)
!9083 = !DILocation(line: 4805, column: 13, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9078, file: !1, line: 4804, column: 11)
!9085 = !DILocation(line: 4807, column: 13, scope: !9084)
!9086 = !DILocation(line: 4810, column: 42, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4810, column: 13)
!9088 = !DILocation(line: 4810, column: 55, scope: !9087)
!9089 = !DILocation(line: 4810, column: 13, scope: !9087)
!9090 = !DILocation(line: 4810, column: 66, scope: !9087)
!9091 = !DILocation(line: 4810, column: 13, scope: !9042)
!9092 = !DILocation(line: 4811, column: 11, scope: !9087)
!9093 = !DILocation(line: 4812, column: 10, scope: !9042)
!9094 = !DILocation(line: 4813, column: 13, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4813, column: 13)
!9096 = !DILocation(line: 4813, column: 15, scope: !9095)
!9097 = !DILocation(line: 4813, column: 13, scope: !9042)
!9098 = !DILocation(line: 4814, column: 12, scope: !9095)
!9099 = !DILocation(line: 4814, column: 11, scope: !9095)
!9100 = !DILocation(line: 4815, column: 10, scope: !9042)
!9101 = !DILocation(line: 4816, column: 13, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4816, column: 13)
!9103 = !DILocation(line: 4816, column: 29, scope: !9102)
!9104 = !DILocation(line: 4816, column: 44, scope: !9102)
!9105 = !DILocation(line: 4816, column: 52, scope: !9102)
!9106 = !DILocation(line: 4816, column: 67, scope: !9102)
!9107 = !DILocation(line: 4816, column: 51, scope: !9102)
!9108 = !DILocation(line: 4816, column: 15, scope: !9102)
!9109 = !DILocation(line: 4816, column: 13, scope: !9042)
!9110 = !DILocation(line: 4817, column: 12, scope: !9102)
!9111 = !DILocation(line: 4817, column: 11, scope: !9102)
!9112 = !DILocation(line: 4818, column: 13, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9042, file: !1, line: 4818, column: 13)
!9114 = !DILocation(line: 4818, column: 18, scope: !9113)
!9115 = !DILocation(line: 4818, column: 25, scope: !9113)
!9116 = !DILocation(line: 4818, column: 15, scope: !9113)
!9117 = !DILocation(line: 4818, column: 13, scope: !9042)
!9118 = !DILocation(line: 4819, column: 12, scope: !9113)
!9119 = !DILocation(line: 4819, column: 11, scope: !9113)
!9120 = !DILocation(line: 4820, column: 7, scope: !9042)
!9121 = !DILocation(line: 4779, column: 79, scope: !9031)
!9122 = !DILocation(line: 4779, column: 7, scope: !9031)
!9123 = distinct !{!9123, !9040, !9124}
!9124 = !DILocation(line: 4820, column: 7, scope: !9027)
!9125 = !DILocation(line: 4821, column: 5, scope: !9028)
!9126 = !DILocation(line: 4777, column: 74, scope: !9016)
!9127 = !DILocation(line: 4777, column: 5, scope: !9016)
!9128 = distinct !{!9128, !9025, !9129}
!9129 = !DILocation(line: 4821, column: 5, scope: !9012)
!9130 = !DILocation(line: 4822, column: 9, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9013, file: !1, line: 4822, column: 9)
!9132 = !DILocation(line: 4822, column: 16, scope: !9131)
!9133 = !DILocation(line: 4822, column: 33, scope: !9131)
!9134 = !DILocation(line: 4822, column: 9, scope: !9013)
!9135 = !DILocalVariable(name: "proceed", scope: !9136, file: !1, line: 4825, type: !709)
!9136 = distinct !DILexicalBlock(scope: !9131, file: !1, line: 4823, column: 7)
!9137 = !DILocation(line: 4825, column: 11, scope: !9136)
!9138 = !DILocation(line: 4827, column: 34, scope: !9136)
!9139 = !DILocation(line: 4828, column: 12, scope: !9136)
!9140 = !DILocation(line: 4828, column: 18, scope: !9136)
!9141 = !DILocation(line: 4828, column: 17, scope: !9136)
!9142 = !DILocation(line: 4828, column: 21, scope: !9136)
!9143 = !DILocation(line: 4827, column: 17, scope: !9136)
!9144 = !DILocation(line: 4827, column: 16, scope: !9136)
!9145 = !DILocation(line: 4829, column: 13, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9136, file: !1, line: 4829, column: 13)
!9147 = !DILocation(line: 4829, column: 21, scope: !9146)
!9148 = !DILocation(line: 4829, column: 13, scope: !9136)
!9149 = !DILocation(line: 4830, column: 17, scope: !9146)
!9150 = !DILocation(line: 4830, column: 11, scope: !9146)
!9151 = !DILocation(line: 4831, column: 7, scope: !9136)
!9152 = !DILocation(line: 4832, column: 3, scope: !9013)
!9153 = !DILocation(line: 4775, column: 65, scope: !9003)
!9154 = !DILocation(line: 4775, column: 3, scope: !9003)
!9155 = distinct !{!9155, !9010, !9156}
!9156 = !DILocation(line: 4832, column: 3, scope: !8998)
!9157 = !DILocation(line: 4833, column: 33, scope: !8906)
!9158 = !DILocation(line: 4833, column: 16, scope: !8906)
!9159 = !DILocation(line: 4833, column: 15, scope: !8906)
!9160 = !DILocation(line: 4834, column: 35, scope: !8906)
!9161 = !DILocation(line: 4834, column: 18, scope: !8906)
!9162 = !DILocation(line: 4834, column: 17, scope: !8906)
!9163 = !DILocation(line: 4835, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4835, column: 7)
!9165 = !DILocation(line: 4835, column: 22, scope: !9164)
!9166 = !DILocation(line: 4835, column: 36, scope: !9164)
!9167 = !DILocation(line: 4835, column: 7, scope: !8906)
!9168 = !DILocation(line: 4836, column: 22, scope: !9164)
!9169 = !DILocation(line: 4836, column: 12, scope: !9164)
!9170 = !DILocation(line: 4836, column: 5, scope: !9164)
!9171 = !DILocation(line: 4837, column: 7, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !8906, file: !1, line: 4837, column: 7)
!9173 = !DILocation(line: 4837, column: 14, scope: !9172)
!9174 = !DILocation(line: 4837, column: 7, scope: !8906)
!9175 = !DILocation(line: 4838, column: 32, scope: !9172)
!9176 = !DILocation(line: 4838, column: 19, scope: !9172)
!9177 = !DILocation(line: 4838, column: 18, scope: !9172)
!9178 = !DILocation(line: 4838, column: 5, scope: !9172)
!9179 = !DILocation(line: 4839, column: 10, scope: !8906)
!9180 = !DILocation(line: 4839, column: 3, scope: !8906)
!9181 = !DILocation(line: 4840, column: 1, scope: !8906)
!9182 = distinct !DISubprogram(name: "StereoImage", scope: !1, file: !1, line: 4881, type: !8907, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9183 = !DILocalVariable(name: "left_image", arg: 1, scope: !9182, file: !1, line: 4881, type: !821)
!9184 = !DILocation(line: 4881, column: 46, scope: !9182)
!9185 = !DILocalVariable(name: "right_image", arg: 2, scope: !9182, file: !1, line: 4882, type: !821)
!9186 = !DILocation(line: 4882, column: 16, scope: !9182)
!9187 = !DILocalVariable(name: "exception", arg: 3, scope: !9182, file: !1, line: 4882, type: !695)
!9188 = !DILocation(line: 4882, column: 43, scope: !9182)
!9189 = !DILocation(line: 4884, column: 30, scope: !9182)
!9190 = !DILocation(line: 4884, column: 41, scope: !9182)
!9191 = !DILocation(line: 4884, column: 57, scope: !9182)
!9192 = !DILocation(line: 4884, column: 10, scope: !9182)
!9193 = !DILocation(line: 4884, column: 3, scope: !9182)
!9194 = distinct !DISubprogram(name: "StereoAnaglyphImage", scope: !1, file: !1, line: 4887, type: !9195, scopeLine: 4890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!1090, !821, !821, !3181, !3181, !695}
!9197 = !DILocalVariable(name: "left_image", arg: 1, scope: !9194, file: !1, line: 4887, type: !821)
!9198 = !DILocation(line: 4887, column: 54, scope: !9194)
!9199 = !DILocalVariable(name: "right_image", arg: 2, scope: !9194, file: !1, line: 4888, type: !821)
!9200 = !DILocation(line: 4888, column: 16, scope: !9194)
!9201 = !DILocalVariable(name: "x_offset", arg: 3, scope: !9194, file: !1, line: 4888, type: !3181)
!9202 = !DILocation(line: 4888, column: 42, scope: !9194)
!9203 = !DILocalVariable(name: "y_offset", arg: 4, scope: !9194, file: !1, line: 4888, type: !3181)
!9204 = !DILocation(line: 4888, column: 65, scope: !9194)
!9205 = !DILocalVariable(name: "exception", arg: 5, scope: !9194, file: !1, line: 4889, type: !695)
!9206 = !DILocation(line: 4889, column: 18, scope: !9194)
!9207 = !DILocalVariable(name: "image", scope: !9194, file: !1, line: 4894, type: !821)
!9208 = !DILocation(line: 4894, column: 6, scope: !9194)
!9209 = !DILocalVariable(name: "stereo_image", scope: !9194, file: !1, line: 4897, type: !1090)
!9210 = !DILocation(line: 4897, column: 6, scope: !9194)
!9211 = !DILocalVariable(name: "status", scope: !9194, file: !1, line: 4900, type: !709)
!9212 = !DILocation(line: 4900, column: 5, scope: !9194)
!9213 = !DILocalVariable(name: "y", scope: !9194, file: !1, line: 4903, type: !880)
!9214 = !DILocation(line: 4903, column: 5, scope: !9194)
!9215 = !DILocation(line: 4907, column: 7, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4907, column: 7)
!9217 = !DILocation(line: 4907, column: 19, scope: !9216)
!9218 = !DILocation(line: 4907, column: 25, scope: !9216)
!9219 = !DILocation(line: 4907, column: 7, scope: !9194)
!9220 = !DILocation(line: 4909, column: 7, scope: !9216)
!9221 = !DILocation(line: 4909, column: 19, scope: !9216)
!9222 = !DILocation(line: 4908, column: 12, scope: !9216)
!9223 = !DILocation(line: 4908, column: 5, scope: !9216)
!9224 = !DILocation(line: 4915, column: 9, scope: !9194)
!9225 = !DILocation(line: 4915, column: 8, scope: !9194)
!9226 = !DILocation(line: 4916, column: 8, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4916, column: 7)
!9228 = !DILocation(line: 4916, column: 20, scope: !9227)
!9229 = !DILocation(line: 4916, column: 31, scope: !9227)
!9230 = !DILocation(line: 4916, column: 44, scope: !9227)
!9231 = !DILocation(line: 4916, column: 28, scope: !9227)
!9232 = !DILocation(line: 4916, column: 53, scope: !9227)
!9233 = !DILocation(line: 4917, column: 8, scope: !9227)
!9234 = !DILocation(line: 4917, column: 20, scope: !9227)
!9235 = !DILocation(line: 4917, column: 28, scope: !9227)
!9236 = !DILocation(line: 4917, column: 41, scope: !9227)
!9237 = !DILocation(line: 4917, column: 25, scope: !9227)
!9238 = !DILocation(line: 4916, column: 7, scope: !9194)
!9239 = !DILocation(line: 4918, column: 5, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9227, file: !1, line: 4918, column: 5)
!9241 = !DILocation(line: 4922, column: 27, scope: !9194)
!9242 = !DILocation(line: 4922, column: 38, scope: !9194)
!9243 = !DILocation(line: 4922, column: 50, scope: !9194)
!9244 = !DILocation(line: 4922, column: 58, scope: !9194)
!9245 = !DILocation(line: 4922, column: 70, scope: !9194)
!9246 = !DILocation(line: 4923, column: 16, scope: !9194)
!9247 = !DILocation(line: 4922, column: 16, scope: !9194)
!9248 = !DILocation(line: 4922, column: 15, scope: !9194)
!9249 = !DILocation(line: 4924, column: 7, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4924, column: 7)
!9251 = !DILocation(line: 4924, column: 20, scope: !9250)
!9252 = !DILocation(line: 4924, column: 7, scope: !9194)
!9253 = !DILocation(line: 4925, column: 5, scope: !9250)
!9254 = !DILocation(line: 4926, column: 28, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4926, column: 7)
!9256 = !DILocation(line: 4926, column: 7, scope: !9255)
!9257 = !DILocation(line: 4926, column: 54, scope: !9255)
!9258 = !DILocation(line: 4926, column: 7, scope: !9194)
!9259 = !DILocation(line: 4928, column: 24, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9255, file: !1, line: 4927, column: 5)
!9261 = !DILocation(line: 4928, column: 35, scope: !9260)
!9262 = !DILocation(line: 4928, column: 49, scope: !9260)
!9263 = !DILocation(line: 4928, column: 7, scope: !9260)
!9264 = !DILocation(line: 4929, column: 33, scope: !9260)
!9265 = !DILocation(line: 4929, column: 20, scope: !9260)
!9266 = !DILocation(line: 4929, column: 19, scope: !9260)
!9267 = !DILocation(line: 4930, column: 7, scope: !9260)
!9268 = !DILocation(line: 4932, column: 29, scope: !9194)
!9269 = !DILocation(line: 4932, column: 10, scope: !9194)
!9270 = !DILocation(line: 4936, column: 9, scope: !9194)
!9271 = !DILocation(line: 4937, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4937, column: 3)
!9273 = !DILocation(line: 4937, column: 8, scope: !9272)
!9274 = !DILocation(line: 4937, column: 13, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9272, file: !1, line: 4937, column: 3)
!9276 = !DILocation(line: 4937, column: 27, scope: !9275)
!9277 = !DILocation(line: 4937, column: 41, scope: !9275)
!9278 = !DILocation(line: 4937, column: 15, scope: !9275)
!9279 = !DILocation(line: 4937, column: 3, scope: !9272)
!9280 = !DILocalVariable(name: "p", scope: !9281, file: !1, line: 4940, type: !1634)
!9281 = distinct !DILexicalBlock(scope: !9275, file: !1, line: 4938, column: 3)
!9282 = !DILocation(line: 4940, column: 17, scope: !9281)
!9283 = !DILocalVariable(name: "q", scope: !9281, file: !1, line: 4941, type: !1634)
!9284 = !DILocation(line: 4941, column: 17, scope: !9281)
!9285 = !DILocalVariable(name: "x", scope: !9281, file: !1, line: 4944, type: !880)
!9286 = !DILocation(line: 4944, column: 7, scope: !9281)
!9287 = !DILocalVariable(name: "r", scope: !9281, file: !1, line: 4947, type: !1642)
!9288 = !DILocation(line: 4947, column: 17, scope: !9281)
!9289 = !DILocation(line: 4949, column: 24, scope: !9281)
!9290 = !DILocation(line: 4949, column: 36, scope: !9281)
!9291 = !DILocation(line: 4949, column: 35, scope: !9281)
!9292 = !DILocation(line: 4949, column: 45, scope: !9281)
!9293 = !DILocation(line: 4949, column: 47, scope: !9281)
!9294 = !DILocation(line: 4949, column: 46, scope: !9281)
!9295 = !DILocation(line: 4949, column: 56, scope: !9281)
!9296 = !DILocation(line: 4949, column: 63, scope: !9281)
!9297 = !DILocation(line: 4950, column: 7, scope: !9281)
!9298 = !DILocation(line: 4949, column: 7, scope: !9281)
!9299 = !DILocation(line: 4949, column: 6, scope: !9281)
!9300 = !DILocation(line: 4951, column: 24, scope: !9281)
!9301 = !DILocation(line: 4951, column: 38, scope: !9281)
!9302 = !DILocation(line: 4951, column: 40, scope: !9281)
!9303 = !DILocation(line: 4951, column: 53, scope: !9281)
!9304 = !DILocation(line: 4951, column: 63, scope: !9281)
!9305 = !DILocation(line: 4951, column: 7, scope: !9281)
!9306 = !DILocation(line: 4951, column: 6, scope: !9281)
!9307 = !DILocation(line: 4952, column: 28, scope: !9281)
!9308 = !DILocation(line: 4952, column: 43, scope: !9281)
!9309 = !DILocation(line: 4952, column: 45, scope: !9281)
!9310 = !DILocation(line: 4952, column: 59, scope: !9281)
!9311 = !DILocation(line: 4952, column: 69, scope: !9281)
!9312 = !DILocation(line: 4952, column: 7, scope: !9281)
!9313 = !DILocation(line: 4952, column: 6, scope: !9281)
!9314 = !DILocation(line: 4953, column: 10, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4953, column: 9)
!9316 = !DILocation(line: 4953, column: 12, scope: !9315)
!9317 = !DILocation(line: 4953, column: 37, scope: !9315)
!9318 = !DILocation(line: 4953, column: 41, scope: !9315)
!9319 = !DILocation(line: 4953, column: 43, scope: !9315)
!9320 = !DILocation(line: 4953, column: 68, scope: !9315)
!9321 = !DILocation(line: 4954, column: 10, scope: !9315)
!9322 = !DILocation(line: 4954, column: 12, scope: !9315)
!9323 = !DILocation(line: 4953, column: 9, scope: !9281)
!9324 = !DILocation(line: 4955, column: 7, scope: !9315)
!9325 = !DILocation(line: 4956, column: 11, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4956, column: 5)
!9327 = !DILocation(line: 4956, column: 10, scope: !9326)
!9328 = !DILocation(line: 4956, column: 15, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9326, file: !1, line: 4956, column: 5)
!9330 = !DILocation(line: 4956, column: 29, scope: !9329)
!9331 = !DILocation(line: 4956, column: 43, scope: !9329)
!9332 = !DILocation(line: 4956, column: 17, scope: !9329)
!9333 = !DILocation(line: 4956, column: 5, scope: !9326)
!9334 = !DILocation(line: 4958, column: 7, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9329, file: !1, line: 4957, column: 5)
!9336 = !DILocation(line: 4959, column: 7, scope: !9335)
!9337 = !DILocation(line: 4960, column: 7, scope: !9335)
!9338 = !DILocation(line: 4961, column: 7, scope: !9335)
!9339 = !DILocation(line: 4962, column: 8, scope: !9335)
!9340 = !DILocation(line: 4963, column: 8, scope: !9335)
!9341 = !DILocation(line: 4964, column: 8, scope: !9335)
!9342 = !DILocation(line: 4965, column: 5, scope: !9335)
!9343 = !DILocation(line: 4956, column: 53, scope: !9329)
!9344 = !DILocation(line: 4956, column: 5, scope: !9329)
!9345 = distinct !{!9345, !9333, !9346}
!9346 = !DILocation(line: 4965, column: 5, scope: !9326)
!9347 = !DILocation(line: 4966, column: 29, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4966, column: 9)
!9349 = !DILocation(line: 4966, column: 42, scope: !9348)
!9350 = !DILocation(line: 4966, column: 9, scope: !9348)
!9351 = !DILocation(line: 4966, column: 53, scope: !9348)
!9352 = !DILocation(line: 4966, column: 9, scope: !9281)
!9353 = !DILocation(line: 4967, column: 7, scope: !9348)
!9354 = !DILocation(line: 4968, column: 9, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4968, column: 9)
!9356 = !DILocation(line: 4968, column: 16, scope: !9355)
!9357 = !DILocation(line: 4968, column: 33, scope: !9355)
!9358 = !DILocation(line: 4968, column: 9, scope: !9281)
!9359 = !DILocalVariable(name: "proceed", scope: !9360, file: !1, line: 4971, type: !709)
!9360 = distinct !DILexicalBlock(scope: !9355, file: !1, line: 4969, column: 7)
!9361 = !DILocation(line: 4971, column: 11, scope: !9360)
!9362 = !DILocation(line: 4973, column: 34, scope: !9360)
!9363 = !DILocation(line: 4973, column: 74, scope: !9360)
!9364 = !DILocation(line: 4974, column: 11, scope: !9360)
!9365 = !DILocation(line: 4974, column: 25, scope: !9360)
!9366 = !DILocation(line: 4973, column: 17, scope: !9360)
!9367 = !DILocation(line: 4973, column: 16, scope: !9360)
!9368 = !DILocation(line: 4975, column: 13, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9360, file: !1, line: 4975, column: 13)
!9370 = !DILocation(line: 4975, column: 21, scope: !9369)
!9371 = !DILocation(line: 4975, column: 13, scope: !9360)
!9372 = !DILocation(line: 4976, column: 17, scope: !9369)
!9373 = !DILocation(line: 4976, column: 11, scope: !9369)
!9374 = !DILocation(line: 4977, column: 7, scope: !9360)
!9375 = !DILocation(line: 4978, column: 3, scope: !9281)
!9376 = !DILocation(line: 4937, column: 48, scope: !9275)
!9377 = !DILocation(line: 4937, column: 3, scope: !9275)
!9378 = distinct !{!9378, !9279, !9379}
!9379 = !DILocation(line: 4978, column: 3, scope: !9272)
!9380 = !DILocation(line: 4979, column: 7, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4979, column: 7)
!9382 = !DILocation(line: 4979, column: 14, scope: !9381)
!9383 = !DILocation(line: 4979, column: 7, scope: !9194)
!9384 = !DILocation(line: 4980, column: 31, scope: !9381)
!9385 = !DILocation(line: 4980, column: 18, scope: !9381)
!9386 = !DILocation(line: 4980, column: 17, scope: !9381)
!9387 = !DILocation(line: 4980, column: 5, scope: !9381)
!9388 = !DILocation(line: 4981, column: 10, scope: !9194)
!9389 = !DILocation(line: 4981, column: 3, scope: !9194)
!9390 = !DILocation(line: 4982, column: 1, scope: !9194)
!9391 = distinct !DISubprogram(name: "SwirlImage", scope: !1, file: !1, line: 5013, type: !9392, scopeLine: 5015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{!1090, !821, !856, !695}
!9394 = !DILocalVariable(name: "image", arg: 1, scope: !9391, file: !1, line: 5013, type: !821)
!9395 = !DILocation(line: 5013, column: 45, scope: !9391)
!9396 = !DILocalVariable(name: "degrees", arg: 2, scope: !9391, file: !1, line: 5013, type: !856)
!9397 = !DILocation(line: 5013, column: 58, scope: !9391)
!9398 = !DILocalVariable(name: "exception", arg: 3, scope: !9391, file: !1, line: 5014, type: !695)
!9399 = !DILocation(line: 5014, column: 18, scope: !9391)
!9400 = !DILocalVariable(name: "image_view", scope: !9391, file: !1, line: 5019, type: !1081)
!9401 = !DILocation(line: 5019, column: 6, scope: !9391)
!9402 = !DILocalVariable(name: "swirl_view", scope: !9391, file: !1, line: 5020, type: !1081)
!9403 = !DILocation(line: 5020, column: 6, scope: !9391)
!9404 = !DILocalVariable(name: "radius", scope: !9391, file: !1, line: 5023, type: !856)
!9405 = !DILocation(line: 5023, column: 5, scope: !9391)
!9406 = !DILocalVariable(name: "swirl_image", scope: !9391, file: !1, line: 5026, type: !1090)
!9407 = !DILocation(line: 5026, column: 6, scope: !9391)
!9408 = !DILocalVariable(name: "status", scope: !9391, file: !1, line: 5029, type: !709)
!9409 = !DILocation(line: 5029, column: 5, scope: !9391)
!9410 = !DILocalVariable(name: "progress", scope: !9391, file: !1, line: 5032, type: !950)
!9411 = !DILocation(line: 5032, column: 5, scope: !9391)
!9412 = !DILocalVariable(name: "zero", scope: !9391, file: !1, line: 5035, type: !1223)
!9413 = !DILocation(line: 5035, column: 5, scope: !9391)
!9414 = !DILocalVariable(name: "center", scope: !9391, file: !1, line: 5038, type: !1243)
!9415 = !DILocation(line: 5038, column: 5, scope: !9391)
!9416 = !DILocalVariable(name: "scale", scope: !9391, file: !1, line: 5039, type: !1243)
!9417 = !DILocation(line: 5039, column: 5, scope: !9391)
!9418 = !DILocalVariable(name: "y", scope: !9391, file: !1, line: 5042, type: !880)
!9419 = !DILocation(line: 5042, column: 5, scope: !9391)
!9420 = !DILocation(line: 5049, column: 7, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5049, column: 7)
!9422 = !DILocation(line: 5049, column: 14, scope: !9421)
!9423 = !DILocation(line: 5049, column: 20, scope: !9421)
!9424 = !DILocation(line: 5049, column: 7, scope: !9391)
!9425 = !DILocation(line: 5050, column: 61, scope: !9421)
!9426 = !DILocation(line: 5050, column: 68, scope: !9421)
!9427 = !DILocation(line: 5050, column: 12, scope: !9421)
!9428 = !DILocation(line: 5050, column: 5, scope: !9421)
!9429 = !DILocation(line: 5053, column: 26, scope: !9391)
!9430 = !DILocation(line: 5053, column: 47, scope: !9391)
!9431 = !DILocation(line: 5053, column: 15, scope: !9391)
!9432 = !DILocation(line: 5053, column: 14, scope: !9391)
!9433 = !DILocation(line: 5054, column: 7, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5054, column: 7)
!9435 = !DILocation(line: 5054, column: 19, scope: !9434)
!9436 = !DILocation(line: 5054, column: 7, scope: !9391)
!9437 = !DILocation(line: 5055, column: 5, scope: !9434)
!9438 = !DILocation(line: 5056, column: 28, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5056, column: 7)
!9440 = !DILocation(line: 5056, column: 7, scope: !9439)
!9441 = !DILocation(line: 5056, column: 53, scope: !9439)
!9442 = !DILocation(line: 5056, column: 7, scope: !9391)
!9443 = !DILocation(line: 5058, column: 24, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9439, file: !1, line: 5057, column: 5)
!9445 = !DILocation(line: 5058, column: 35, scope: !9444)
!9446 = !DILocation(line: 5058, column: 48, scope: !9444)
!9447 = !DILocation(line: 5058, column: 7, scope: !9444)
!9448 = !DILocation(line: 5059, column: 32, scope: !9444)
!9449 = !DILocation(line: 5059, column: 19, scope: !9444)
!9450 = !DILocation(line: 5059, column: 18, scope: !9444)
!9451 = !DILocation(line: 5060, column: 7, scope: !9444)
!9452 = !DILocation(line: 5062, column: 7, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5062, column: 7)
!9454 = !DILocation(line: 5062, column: 20, scope: !9453)
!9455 = !DILocation(line: 5062, column: 37, scope: !9453)
!9456 = !DILocation(line: 5062, column: 45, scope: !9453)
!9457 = !DILocation(line: 5062, column: 7, scope: !9391)
!9458 = !DILocation(line: 5063, column: 5, scope: !9453)
!9459 = !DILocation(line: 5063, column: 18, scope: !9453)
!9460 = !DILocation(line: 5063, column: 23, scope: !9453)
!9461 = !DILocation(line: 5067, column: 21, scope: !9391)
!9462 = !DILocation(line: 5067, column: 28, scope: !9391)
!9463 = !DILocation(line: 5067, column: 12, scope: !9391)
!9464 = !DILocation(line: 5067, column: 35, scope: !9391)
!9465 = !DILocation(line: 5067, column: 10, scope: !9391)
!9466 = !DILocation(line: 5067, column: 11, scope: !9391)
!9467 = !DILocation(line: 5068, column: 21, scope: !9391)
!9468 = !DILocation(line: 5068, column: 28, scope: !9391)
!9469 = !DILocation(line: 5068, column: 12, scope: !9391)
!9470 = !DILocation(line: 5068, column: 32, scope: !9391)
!9471 = !DILocation(line: 5068, column: 10, scope: !9391)
!9472 = !DILocation(line: 5068, column: 11, scope: !9391)
!9473 = !DILocation(line: 5069, column: 27, scope: !9391)
!9474 = !DILocation(line: 5069, column: 36, scope: !9391)
!9475 = !DILocation(line: 5069, column: 10, scope: !9391)
!9476 = !DILocation(line: 5069, column: 9, scope: !9391)
!9477 = !DILocation(line: 5070, column: 9, scope: !9391)
!9478 = !DILocation(line: 5070, column: 10, scope: !9391)
!9479 = !DILocation(line: 5071, column: 9, scope: !9391)
!9480 = !DILocation(line: 5071, column: 10, scope: !9391)
!9481 = !DILocation(line: 5072, column: 7, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5072, column: 7)
!9483 = !DILocation(line: 5072, column: 14, scope: !9482)
!9484 = !DILocation(line: 5072, column: 24, scope: !9482)
!9485 = !DILocation(line: 5072, column: 31, scope: !9482)
!9486 = !DILocation(line: 5072, column: 22, scope: !9482)
!9487 = !DILocation(line: 5072, column: 7, scope: !9391)
!9488 = !DILocation(line: 5073, column: 22, scope: !9482)
!9489 = !DILocation(line: 5073, column: 29, scope: !9482)
!9490 = !DILocation(line: 5073, column: 13, scope: !9482)
!9491 = !DILocation(line: 5073, column: 46, scope: !9482)
!9492 = !DILocation(line: 5073, column: 53, scope: !9482)
!9493 = !DILocation(line: 5073, column: 37, scope: !9482)
!9494 = !DILocation(line: 5073, column: 36, scope: !9482)
!9495 = !DILocation(line: 5073, column: 11, scope: !9482)
!9496 = !DILocation(line: 5073, column: 12, scope: !9482)
!9497 = !DILocation(line: 5073, column: 5, scope: !9482)
!9498 = !DILocation(line: 5075, column: 9, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9482, file: !1, line: 5075, column: 9)
!9500 = !DILocation(line: 5075, column: 16, scope: !9499)
!9501 = !DILocation(line: 5075, column: 26, scope: !9499)
!9502 = !DILocation(line: 5075, column: 33, scope: !9499)
!9503 = !DILocation(line: 5075, column: 24, scope: !9499)
!9504 = !DILocation(line: 5075, column: 9, scope: !9482)
!9505 = !DILocation(line: 5076, column: 24, scope: !9499)
!9506 = !DILocation(line: 5076, column: 31, scope: !9499)
!9507 = !DILocation(line: 5076, column: 15, scope: !9499)
!9508 = !DILocation(line: 5076, column: 45, scope: !9499)
!9509 = !DILocation(line: 5076, column: 52, scope: !9499)
!9510 = !DILocation(line: 5076, column: 36, scope: !9499)
!9511 = !DILocation(line: 5076, column: 35, scope: !9499)
!9512 = !DILocation(line: 5076, column: 13, scope: !9499)
!9513 = !DILocation(line: 5076, column: 14, scope: !9499)
!9514 = !DILocation(line: 5076, column: 7, scope: !9499)
!9515 = !DILocation(line: 5077, column: 37, scope: !9391)
!9516 = !DILocation(line: 5077, column: 20, scope: !9391)
!9517 = !DILocation(line: 5077, column: 10, scope: !9391)
!9518 = !DILocation(line: 5081, column: 9, scope: !9391)
!9519 = !DILocation(line: 5082, column: 11, scope: !9391)
!9520 = !DILocation(line: 5083, column: 24, scope: !9391)
!9521 = !DILocation(line: 5083, column: 3, scope: !9391)
!9522 = !DILocation(line: 5084, column: 38, scope: !9391)
!9523 = !DILocation(line: 5084, column: 44, scope: !9391)
!9524 = !DILocation(line: 5084, column: 14, scope: !9391)
!9525 = !DILocation(line: 5084, column: 13, scope: !9391)
!9526 = !DILocation(line: 5085, column: 40, scope: !9391)
!9527 = !DILocation(line: 5085, column: 52, scope: !9391)
!9528 = !DILocation(line: 5085, column: 14, scope: !9391)
!9529 = !DILocation(line: 5085, column: 13, scope: !9391)
!9530 = !DILocation(line: 5090, column: 9, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5090, column: 3)
!9532 = !DILocation(line: 5090, column: 8, scope: !9531)
!9533 = !DILocation(line: 5090, column: 13, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9531, file: !1, line: 5090, column: 3)
!9535 = !DILocation(line: 5090, column: 27, scope: !9534)
!9536 = !DILocation(line: 5090, column: 34, scope: !9534)
!9537 = !DILocation(line: 5090, column: 15, scope: !9534)
!9538 = !DILocation(line: 5090, column: 3, scope: !9531)
!9539 = !DILocalVariable(name: "distance", scope: !9540, file: !1, line: 5093, type: !856)
!9540 = distinct !DILexicalBlock(scope: !9534, file: !1, line: 5091, column: 3)
!9541 = !DILocation(line: 5093, column: 7, scope: !9540)
!9542 = !DILocalVariable(name: "pixel", scope: !9540, file: !1, line: 5096, type: !1223)
!9543 = !DILocation(line: 5096, column: 7, scope: !9540)
!9544 = !DILocalVariable(name: "delta", scope: !9540, file: !1, line: 5099, type: !1243)
!9545 = !DILocation(line: 5099, column: 7, scope: !9540)
!9546 = !DILocalVariable(name: "swirl_indexes", scope: !9540, file: !1, line: 5102, type: !1637)
!9547 = !DILocation(line: 5102, column: 17, scope: !9540)
!9548 = !DILocalVariable(name: "x", scope: !9540, file: !1, line: 5105, type: !880)
!9549 = !DILocation(line: 5105, column: 7, scope: !9540)
!9550 = !DILocalVariable(name: "q", scope: !9540, file: !1, line: 5108, type: !1642)
!9551 = !DILocation(line: 5108, column: 17, scope: !9540)
!9552 = !DILocation(line: 5110, column: 9, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 5110, column: 9)
!9554 = !DILocation(line: 5110, column: 16, scope: !9553)
!9555 = !DILocation(line: 5110, column: 9, scope: !9540)
!9556 = !DILocation(line: 5111, column: 7, scope: !9553)
!9557 = !DILocation(line: 5112, column: 35, scope: !9540)
!9558 = !DILocation(line: 5112, column: 48, scope: !9540)
!9559 = !DILocation(line: 5112, column: 50, scope: !9540)
!9560 = !DILocation(line: 5112, column: 63, scope: !9540)
!9561 = !DILocation(line: 5113, column: 7, scope: !9540)
!9562 = !DILocation(line: 5112, column: 7, scope: !9540)
!9563 = !DILocation(line: 5112, column: 6, scope: !9540)
!9564 = !DILocation(line: 5114, column: 9, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 5114, column: 9)
!9566 = !DILocation(line: 5114, column: 11, scope: !9565)
!9567 = !DILocation(line: 5114, column: 9, scope: !9540)
!9568 = !DILocation(line: 5116, column: 15, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9565, file: !1, line: 5115, column: 7)
!9570 = !DILocation(line: 5117, column: 9, scope: !9569)
!9571 = !DILocation(line: 5119, column: 51, scope: !9540)
!9572 = !DILocation(line: 5119, column: 19, scope: !9540)
!9573 = !DILocation(line: 5119, column: 18, scope: !9540)
!9574 = !DILocation(line: 5120, column: 19, scope: !9540)
!9575 = !DILocation(line: 5120, column: 31, scope: !9540)
!9576 = !DILocation(line: 5120, column: 40, scope: !9540)
!9577 = !DILocation(line: 5120, column: 32, scope: !9540)
!9578 = !DILocation(line: 5120, column: 20, scope: !9540)
!9579 = !DILocation(line: 5120, column: 11, scope: !9540)
!9580 = !DILocation(line: 5120, column: 12, scope: !9540)
!9581 = !DILocation(line: 5121, column: 11, scope: !9540)
!9582 = !DILocation(line: 5122, column: 11, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 5122, column: 5)
!9584 = !DILocation(line: 5122, column: 10, scope: !9583)
!9585 = !DILocation(line: 5122, column: 15, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9583, file: !1, line: 5122, column: 5)
!9587 = !DILocation(line: 5122, column: 29, scope: !9586)
!9588 = !DILocation(line: 5122, column: 36, scope: !9586)
!9589 = !DILocation(line: 5122, column: 17, scope: !9586)
!9590 = !DILocation(line: 5122, column: 5, scope: !9583)
!9591 = !DILocation(line: 5127, column: 21, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9586, file: !1, line: 5123, column: 5)
!9593 = !DILocation(line: 5127, column: 33, scope: !9592)
!9594 = !DILocation(line: 5127, column: 42, scope: !9592)
!9595 = !DILocation(line: 5127, column: 34, scope: !9592)
!9596 = !DILocation(line: 5127, column: 22, scope: !9592)
!9597 = !DILocation(line: 5127, column: 13, scope: !9592)
!9598 = !DILocation(line: 5127, column: 14, scope: !9592)
!9599 = !DILocation(line: 5128, column: 22, scope: !9592)
!9600 = !DILocation(line: 5128, column: 30, scope: !9592)
!9601 = !DILocation(line: 5128, column: 23, scope: !9592)
!9602 = !DILocation(line: 5128, column: 38, scope: !9592)
!9603 = !DILocation(line: 5128, column: 46, scope: !9592)
!9604 = !DILocation(line: 5128, column: 39, scope: !9592)
!9605 = !DILocation(line: 5128, column: 31, scope: !9592)
!9606 = !DILocation(line: 5128, column: 15, scope: !9592)
!9607 = !DILocation(line: 5129, column: 11, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9592, file: !1, line: 5129, column: 11)
!9609 = !DILocation(line: 5129, column: 23, scope: !9608)
!9610 = !DILocation(line: 5129, column: 30, scope: !9608)
!9611 = !DILocation(line: 5129, column: 29, scope: !9608)
!9612 = !DILocation(line: 5129, column: 20, scope: !9608)
!9613 = !DILocation(line: 5129, column: 11, scope: !9592)
!9614 = !DILocalVariable(name: "cosine", scope: !9615, file: !1, line: 5132, type: !856)
!9615 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 5130, column: 9)
!9616 = !DILocation(line: 5132, column: 13, scope: !9615)
!9617 = !DILocalVariable(name: "factor", scope: !9615, file: !1, line: 5133, type: !856)
!9618 = !DILocation(line: 5133, column: 13, scope: !9615)
!9619 = !DILocalVariable(name: "sine", scope: !9615, file: !1, line: 5134, type: !856)
!9620 = !DILocation(line: 5134, column: 13, scope: !9615)
!9621 = !DILocation(line: 5139, column: 36, scope: !9615)
!9622 = !DILocation(line: 5139, column: 22, scope: !9615)
!9623 = !DILocation(line: 5139, column: 46, scope: !9615)
!9624 = !DILocation(line: 5139, column: 45, scope: !9615)
!9625 = !DILocation(line: 5139, column: 21, scope: !9615)
!9626 = !DILocation(line: 5139, column: 17, scope: !9615)
!9627 = !DILocation(line: 5140, column: 30, scope: !9615)
!9628 = !DILocation(line: 5140, column: 38, scope: !9615)
!9629 = !DILocation(line: 5140, column: 37, scope: !9615)
!9630 = !DILocation(line: 5140, column: 45, scope: !9615)
!9631 = !DILocation(line: 5140, column: 44, scope: !9615)
!9632 = !DILocation(line: 5140, column: 16, scope: !9615)
!9633 = !DILocation(line: 5140, column: 15, scope: !9615)
!9634 = !DILocation(line: 5141, column: 32, scope: !9615)
!9635 = !DILocation(line: 5141, column: 40, scope: !9615)
!9636 = !DILocation(line: 5141, column: 39, scope: !9615)
!9637 = !DILocation(line: 5141, column: 47, scope: !9615)
!9638 = !DILocation(line: 5141, column: 46, scope: !9615)
!9639 = !DILocation(line: 5141, column: 18, scope: !9615)
!9640 = !DILocation(line: 5141, column: 17, scope: !9615)
!9641 = !DILocation(line: 5142, column: 47, scope: !9615)
!9642 = !DILocation(line: 5142, column: 53, scope: !9615)
!9643 = !DILocation(line: 5143, column: 50, scope: !9615)
!9644 = !DILocation(line: 5143, column: 63, scope: !9615)
!9645 = !DILocation(line: 5143, column: 56, scope: !9615)
!9646 = !DILocation(line: 5143, column: 65, scope: !9615)
!9647 = !DILocation(line: 5143, column: 76, scope: !9615)
!9648 = !DILocation(line: 5143, column: 69, scope: !9615)
!9649 = !DILocation(line: 5143, column: 64, scope: !9615)
!9650 = !DILocation(line: 5144, column: 19, scope: !9615)
!9651 = !DILocation(line: 5143, column: 78, scope: !9615)
!9652 = !DILocation(line: 5144, column: 28, scope: !9615)
!9653 = !DILocation(line: 5144, column: 20, scope: !9615)
!9654 = !DILocation(line: 5144, column: 42, scope: !9615)
!9655 = !DILocation(line: 5144, column: 53, scope: !9615)
!9656 = !DILocation(line: 5144, column: 46, scope: !9615)
!9657 = !DILocation(line: 5144, column: 55, scope: !9615)
!9658 = !DILocation(line: 5144, column: 68, scope: !9615)
!9659 = !DILocation(line: 5144, column: 61, scope: !9615)
!9660 = !DILocation(line: 5144, column: 54, scope: !9615)
!9661 = !DILocation(line: 5144, column: 77, scope: !9615)
!9662 = !DILocation(line: 5144, column: 70, scope: !9615)
!9663 = !DILocation(line: 5145, column: 20, scope: !9615)
!9664 = !DILocation(line: 5144, column: 78, scope: !9615)
!9665 = !DILocation(line: 5145, column: 30, scope: !9615)
!9666 = !DILocation(line: 5142, column: 18, scope: !9615)
!9667 = !DILocation(line: 5146, column: 26, scope: !9615)
!9668 = !DILocation(line: 5146, column: 45, scope: !9615)
!9669 = !DILocation(line: 5146, column: 47, scope: !9615)
!9670 = !DILocation(line: 5146, column: 61, scope: !9615)
!9671 = !DILocation(line: 5146, column: 60, scope: !9615)
!9672 = !DILocation(line: 5146, column: 11, scope: !9615)
!9673 = !DILocation(line: 5147, column: 9, scope: !9615)
!9674 = !DILocation(line: 5148, column: 8, scope: !9592)
!9675 = !DILocation(line: 5149, column: 5, scope: !9592)
!9676 = !DILocation(line: 5122, column: 46, scope: !9586)
!9677 = !DILocation(line: 5122, column: 5, scope: !9586)
!9678 = distinct !{!9678, !9590, !9679}
!9679 = !DILocation(line: 5149, column: 5, scope: !9583)
!9680 = !DILocation(line: 5150, column: 38, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 5150, column: 9)
!9682 = !DILocation(line: 5150, column: 49, scope: !9681)
!9683 = !DILocation(line: 5150, column: 9, scope: !9681)
!9684 = !DILocation(line: 5150, column: 60, scope: !9681)
!9685 = !DILocation(line: 5150, column: 9, scope: !9540)
!9686 = !DILocation(line: 5151, column: 13, scope: !9681)
!9687 = !DILocation(line: 5151, column: 7, scope: !9681)
!9688 = !DILocation(line: 5152, column: 9, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9540, file: !1, line: 5152, column: 9)
!9690 = !DILocation(line: 5152, column: 16, scope: !9689)
!9691 = !DILocation(line: 5152, column: 33, scope: !9689)
!9692 = !DILocation(line: 5152, column: 9, scope: !9540)
!9693 = !DILocalVariable(name: "proceed", scope: !9694, file: !1, line: 5155, type: !709)
!9694 = distinct !DILexicalBlock(scope: !9689, file: !1, line: 5153, column: 7)
!9695 = !DILocation(line: 5155, column: 11, scope: !9694)
!9696 = !DILocation(line: 5160, column: 34, scope: !9694)
!9697 = !DILocation(line: 5160, column: 62, scope: !9694)
!9698 = !DILocation(line: 5160, column: 65, scope: !9694)
!9699 = !DILocation(line: 5160, column: 72, scope: !9694)
!9700 = !DILocation(line: 5160, column: 17, scope: !9694)
!9701 = !DILocation(line: 5160, column: 16, scope: !9694)
!9702 = !DILocation(line: 5161, column: 13, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9694, file: !1, line: 5161, column: 13)
!9704 = !DILocation(line: 5161, column: 21, scope: !9703)
!9705 = !DILocation(line: 5161, column: 13, scope: !9694)
!9706 = !DILocation(line: 5162, column: 17, scope: !9703)
!9707 = !DILocation(line: 5162, column: 11, scope: !9703)
!9708 = !DILocation(line: 5163, column: 7, scope: !9694)
!9709 = !DILocation(line: 5164, column: 3, scope: !9540)
!9710 = !DILocation(line: 5090, column: 41, scope: !9534)
!9711 = !DILocation(line: 5090, column: 3, scope: !9534)
!9712 = distinct !{!9712, !9538, !9713}
!9713 = !DILocation(line: 5164, column: 3, scope: !9531)
!9714 = !DILocation(line: 5165, column: 31, scope: !9391)
!9715 = !DILocation(line: 5165, column: 14, scope: !9391)
!9716 = !DILocation(line: 5165, column: 13, scope: !9391)
!9717 = !DILocation(line: 5166, column: 31, scope: !9391)
!9718 = !DILocation(line: 5166, column: 14, scope: !9391)
!9719 = !DILocation(line: 5166, column: 13, scope: !9391)
!9720 = !DILocation(line: 5167, column: 7, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9391, file: !1, line: 5167, column: 7)
!9722 = !DILocation(line: 5167, column: 14, scope: !9721)
!9723 = !DILocation(line: 5167, column: 7, scope: !9391)
!9724 = !DILocation(line: 5168, column: 30, scope: !9721)
!9725 = !DILocation(line: 5168, column: 17, scope: !9721)
!9726 = !DILocation(line: 5168, column: 16, scope: !9721)
!9727 = !DILocation(line: 5168, column: 5, scope: !9721)
!9728 = !DILocation(line: 5169, column: 10, scope: !9391)
!9729 = !DILocation(line: 5169, column: 3, scope: !9391)
!9730 = !DILocation(line: 5170, column: 1, scope: !9391)
!9731 = distinct !DISubprogram(name: "DegreesToRadians", scope: !9732, file: !9732, line: 54, type: !9733, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9732 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!856, !1986}
!9735 = !DILocalVariable(name: "degrees", arg: 1, scope: !9731, file: !9732, line: 54, type: !1986)
!9736 = !DILocation(line: 54, column: 52, scope: !9731)
!9737 = !DILocation(line: 56, column: 29, scope: !9731)
!9738 = !DILocation(line: 56, column: 28, scope: !9731)
!9739 = !DILocation(line: 56, column: 36, scope: !9731)
!9740 = !DILocation(line: 56, column: 3, scope: !9731)
!9741 = distinct !DISubprogram(name: "TintImage", scope: !1, file: !1, line: 5203, type: !2342, scopeLine: 5205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9742 = !DILocalVariable(name: "image", arg: 1, scope: !9741, file: !1, line: 5203, type: !821)
!9743 = !DILocation(line: 5203, column: 44, scope: !9741)
!9744 = !DILocalVariable(name: "opacity", arg: 2, scope: !9741, file: !1, line: 5203, type: !692)
!9745 = !DILocation(line: 5203, column: 62, scope: !9741)
!9746 = !DILocalVariable(name: "tint", arg: 3, scope: !9741, file: !1, line: 5204, type: !1097)
!9747 = !DILocation(line: 5204, column: 21, scope: !9741)
!9748 = !DILocalVariable(name: "exception", arg: 4, scope: !9741, file: !1, line: 5204, type: !695)
!9749 = !DILocation(line: 5204, column: 41, scope: !9741)
!9750 = !DILocalVariable(name: "image_view", scope: !9741, file: !1, line: 5209, type: !1081)
!9751 = !DILocation(line: 5209, column: 6, scope: !9741)
!9752 = !DILocalVariable(name: "tint_view", scope: !9741, file: !1, line: 5210, type: !1081)
!9753 = !DILocation(line: 5210, column: 6, scope: !9741)
!9754 = !DILocalVariable(name: "geometry_info", scope: !9741, file: !1, line: 5213, type: !2357)
!9755 = !DILocation(line: 5213, column: 5, scope: !9741)
!9756 = !DILocalVariable(name: "tint_image", scope: !9741, file: !1, line: 5216, type: !1090)
!9757 = !DILocation(line: 5216, column: 6, scope: !9741)
!9758 = !DILocalVariable(name: "status", scope: !9741, file: !1, line: 5219, type: !709)
!9759 = !DILocation(line: 5219, column: 5, scope: !9741)
!9760 = !DILocalVariable(name: "progress", scope: !9741, file: !1, line: 5222, type: !950)
!9761 = !DILocation(line: 5222, column: 5, scope: !9741)
!9762 = !DILocalVariable(name: "color_vector", scope: !9741, file: !1, line: 5225, type: !1223)
!9763 = !DILocation(line: 5225, column: 5, scope: !9741)
!9764 = !DILocalVariable(name: "pixel", scope: !9741, file: !1, line: 5226, type: !1223)
!9765 = !DILocation(line: 5226, column: 5, scope: !9741)
!9766 = !DILocalVariable(name: "flags", scope: !9741, file: !1, line: 5229, type: !2375)
!9767 = !DILocation(line: 5229, column: 5, scope: !9741)
!9768 = !DILocalVariable(name: "y", scope: !9741, file: !1, line: 5232, type: !880)
!9769 = !DILocation(line: 5232, column: 5, scope: !9741)
!9770 = !DILocation(line: 5239, column: 7, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5239, column: 7)
!9772 = !DILocation(line: 5239, column: 14, scope: !9771)
!9773 = !DILocation(line: 5239, column: 20, scope: !9771)
!9774 = !DILocation(line: 5239, column: 7, scope: !9741)
!9775 = !DILocation(line: 5240, column: 61, scope: !9771)
!9776 = !DILocation(line: 5240, column: 68, scope: !9771)
!9777 = !DILocation(line: 5240, column: 12, scope: !9771)
!9778 = !DILocation(line: 5240, column: 5, scope: !9771)
!9779 = !DILocation(line: 5243, column: 25, scope: !9741)
!9780 = !DILocation(line: 5243, column: 31, scope: !9741)
!9781 = !DILocation(line: 5243, column: 38, scope: !9741)
!9782 = !DILocation(line: 5243, column: 46, scope: !9741)
!9783 = !DILocation(line: 5243, column: 53, scope: !9741)
!9784 = !DILocation(line: 5243, column: 69, scope: !9741)
!9785 = !DILocation(line: 5243, column: 14, scope: !9741)
!9786 = !DILocation(line: 5243, column: 13, scope: !9741)
!9787 = !DILocation(line: 5244, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5244, column: 7)
!9789 = !DILocation(line: 5244, column: 18, scope: !9788)
!9790 = !DILocation(line: 5244, column: 7, scope: !9741)
!9791 = !DILocation(line: 5245, column: 5, scope: !9788)
!9792 = !DILocation(line: 5246, column: 28, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5246, column: 7)
!9794 = !DILocation(line: 5246, column: 7, scope: !9793)
!9795 = !DILocation(line: 5246, column: 52, scope: !9793)
!9796 = !DILocation(line: 5246, column: 7, scope: !9741)
!9797 = !DILocation(line: 5248, column: 24, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9793, file: !1, line: 5247, column: 5)
!9799 = !DILocation(line: 5248, column: 35, scope: !9798)
!9800 = !DILocation(line: 5248, column: 47, scope: !9798)
!9801 = !DILocation(line: 5248, column: 7, scope: !9798)
!9802 = !DILocation(line: 5249, column: 31, scope: !9798)
!9803 = !DILocation(line: 5249, column: 18, scope: !9798)
!9804 = !DILocation(line: 5249, column: 17, scope: !9798)
!9805 = !DILocation(line: 5250, column: 7, scope: !9798)
!9806 = !DILocation(line: 5252, column: 25, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5252, column: 7)
!9808 = !DILocation(line: 5252, column: 32, scope: !9807)
!9809 = !DILocation(line: 5252, column: 8, scope: !9807)
!9810 = !DILocation(line: 5252, column: 44, scope: !9807)
!9811 = !DILocation(line: 5252, column: 60, scope: !9807)
!9812 = !DILocation(line: 5253, column: 8, scope: !9807)
!9813 = !DILocation(line: 5253, column: 27, scope: !9807)
!9814 = !DILocation(line: 5252, column: 7, scope: !9741)
!9815 = !DILocation(line: 5254, column: 31, scope: !9807)
!9816 = !DILocation(line: 5254, column: 12, scope: !9807)
!9817 = !DILocation(line: 5254, column: 5, scope: !9807)
!9818 = !DILocation(line: 5255, column: 7, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5255, column: 7)
!9820 = !DILocation(line: 5255, column: 15, scope: !9819)
!9821 = !DILocation(line: 5255, column: 7, scope: !9741)
!9822 = !DILocation(line: 5256, column: 12, scope: !9819)
!9823 = !DILocation(line: 5256, column: 5, scope: !9819)
!9824 = !DILocation(line: 5260, column: 23, scope: !9741)
!9825 = !DILocation(line: 5260, column: 9, scope: !9741)
!9826 = !DILocation(line: 5260, column: 8, scope: !9741)
!9827 = !DILocation(line: 5261, column: 27, scope: !9741)
!9828 = !DILocation(line: 5261, column: 13, scope: !9741)
!9829 = !DILocation(line: 5261, column: 9, scope: !9741)
!9830 = !DILocation(line: 5261, column: 12, scope: !9741)
!9831 = !DILocation(line: 5262, column: 29, scope: !9741)
!9832 = !DILocation(line: 5262, column: 15, scope: !9741)
!9833 = !DILocation(line: 5262, column: 9, scope: !9741)
!9834 = !DILocation(line: 5262, column: 14, scope: !9741)
!9835 = !DILocation(line: 5263, column: 28, scope: !9741)
!9836 = !DILocation(line: 5263, column: 14, scope: !9741)
!9837 = !DILocation(line: 5263, column: 9, scope: !9741)
!9838 = !DILocation(line: 5263, column: 13, scope: !9741)
!9839 = !DILocation(line: 5264, column: 9, scope: !9741)
!9840 = !DILocation(line: 5264, column: 16, scope: !9741)
!9841 = !DILocation(line: 5265, column: 8, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5265, column: 7)
!9843 = !DILocation(line: 5265, column: 14, scope: !9842)
!9844 = !DILocation(line: 5265, column: 28, scope: !9842)
!9845 = !DILocation(line: 5265, column: 7, scope: !9741)
!9846 = !DILocation(line: 5266, column: 31, scope: !9842)
!9847 = !DILocation(line: 5266, column: 17, scope: !9842)
!9848 = !DILocation(line: 5266, column: 11, scope: !9842)
!9849 = !DILocation(line: 5266, column: 16, scope: !9842)
!9850 = !DILocation(line: 5266, column: 5, scope: !9842)
!9851 = !DILocation(line: 5267, column: 8, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5267, column: 7)
!9853 = !DILocation(line: 5267, column: 14, scope: !9852)
!9854 = !DILocation(line: 5267, column: 25, scope: !9852)
!9855 = !DILocation(line: 5267, column: 7, scope: !9741)
!9856 = !DILocation(line: 5268, column: 30, scope: !9852)
!9857 = !DILocation(line: 5268, column: 16, scope: !9852)
!9858 = !DILocation(line: 5268, column: 11, scope: !9852)
!9859 = !DILocation(line: 5268, column: 15, scope: !9852)
!9860 = !DILocation(line: 5268, column: 5, scope: !9852)
!9861 = !DILocation(line: 5269, column: 8, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5269, column: 7)
!9863 = !DILocation(line: 5269, column: 14, scope: !9862)
!9864 = !DILocation(line: 5269, column: 26, scope: !9862)
!9865 = !DILocation(line: 5269, column: 7, scope: !9741)
!9866 = !DILocation(line: 5270, column: 33, scope: !9862)
!9867 = !DILocation(line: 5270, column: 19, scope: !9862)
!9868 = !DILocation(line: 5270, column: 11, scope: !9862)
!9869 = !DILocation(line: 5270, column: 18, scope: !9862)
!9870 = !DILocation(line: 5270, column: 5, scope: !9862)
!9871 = !DILocation(line: 5271, column: 44, scope: !9741)
!9872 = !DILocation(line: 5271, column: 53, scope: !9741)
!9873 = !DILocation(line: 5271, column: 48, scope: !9741)
!9874 = !DILocation(line: 5271, column: 47, scope: !9741)
!9875 = !DILocation(line: 5271, column: 38, scope: !9741)
!9876 = !DILocation(line: 5271, column: 56, scope: !9741)
!9877 = !DILocation(line: 5272, column: 5, scope: !9741)
!9878 = !DILocation(line: 5271, column: 62, scope: !9741)
!9879 = !DILocation(line: 5271, column: 20, scope: !9741)
!9880 = !DILocation(line: 5271, column: 16, scope: !9741)
!9881 = !DILocation(line: 5271, column: 19, scope: !9741)
!9882 = !DILocation(line: 5273, column: 46, scope: !9741)
!9883 = !DILocation(line: 5273, column: 57, scope: !9741)
!9884 = !DILocation(line: 5273, column: 52, scope: !9741)
!9885 = !DILocation(line: 5273, column: 51, scope: !9741)
!9886 = !DILocation(line: 5273, column: 40, scope: !9741)
!9887 = !DILocation(line: 5273, column: 62, scope: !9741)
!9888 = !DILocation(line: 5274, column: 5, scope: !9741)
!9889 = !DILocation(line: 5273, column: 68, scope: !9741)
!9890 = !DILocation(line: 5273, column: 22, scope: !9741)
!9891 = !DILocation(line: 5273, column: 16, scope: !9741)
!9892 = !DILocation(line: 5273, column: 21, scope: !9741)
!9893 = !DILocation(line: 5275, column: 45, scope: !9741)
!9894 = !DILocation(line: 5275, column: 55, scope: !9741)
!9895 = !DILocation(line: 5275, column: 50, scope: !9741)
!9896 = !DILocation(line: 5275, column: 49, scope: !9741)
!9897 = !DILocation(line: 5275, column: 39, scope: !9741)
!9898 = !DILocation(line: 5275, column: 59, scope: !9741)
!9899 = !DILocation(line: 5276, column: 5, scope: !9741)
!9900 = !DILocation(line: 5275, column: 65, scope: !9741)
!9901 = !DILocation(line: 5275, column: 21, scope: !9741)
!9902 = !DILocation(line: 5275, column: 16, scope: !9741)
!9903 = !DILocation(line: 5275, column: 20, scope: !9741)
!9904 = !DILocation(line: 5280, column: 9, scope: !9741)
!9905 = !DILocation(line: 5281, column: 11, scope: !9741)
!9906 = !DILocation(line: 5282, column: 38, scope: !9741)
!9907 = !DILocation(line: 5282, column: 44, scope: !9741)
!9908 = !DILocation(line: 5282, column: 14, scope: !9741)
!9909 = !DILocation(line: 5282, column: 13, scope: !9741)
!9910 = !DILocation(line: 5283, column: 39, scope: !9741)
!9911 = !DILocation(line: 5283, column: 50, scope: !9741)
!9912 = !DILocation(line: 5283, column: 13, scope: !9741)
!9913 = !DILocation(line: 5283, column: 12, scope: !9741)
!9914 = !DILocation(line: 5288, column: 9, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5288, column: 3)
!9916 = !DILocation(line: 5288, column: 8, scope: !9915)
!9917 = !DILocation(line: 5288, column: 13, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9915, file: !1, line: 5288, column: 3)
!9919 = !DILocation(line: 5288, column: 27, scope: !9918)
!9920 = !DILocation(line: 5288, column: 34, scope: !9918)
!9921 = !DILocation(line: 5288, column: 15, scope: !9918)
!9922 = !DILocation(line: 5288, column: 3, scope: !9915)
!9923 = !DILocalVariable(name: "p", scope: !9924, file: !1, line: 5291, type: !1634)
!9924 = distinct !DILexicalBlock(scope: !9918, file: !1, line: 5289, column: 3)
!9925 = !DILocation(line: 5291, column: 17, scope: !9924)
!9926 = !DILocalVariable(name: "q", scope: !9924, file: !1, line: 5294, type: !1642)
!9927 = !DILocation(line: 5294, column: 17, scope: !9924)
!9928 = !DILocalVariable(name: "x", scope: !9924, file: !1, line: 5297, type: !880)
!9929 = !DILocation(line: 5297, column: 7, scope: !9924)
!9930 = !DILocation(line: 5299, column: 9, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9924, file: !1, line: 5299, column: 9)
!9932 = !DILocation(line: 5299, column: 16, scope: !9931)
!9933 = !DILocation(line: 5299, column: 9, scope: !9924)
!9934 = !DILocation(line: 5300, column: 7, scope: !9931)
!9935 = !DILocation(line: 5301, column: 33, scope: !9924)
!9936 = !DILocation(line: 5301, column: 46, scope: !9924)
!9937 = !DILocation(line: 5301, column: 48, scope: !9924)
!9938 = !DILocation(line: 5301, column: 55, scope: !9924)
!9939 = !DILocation(line: 5301, column: 65, scope: !9924)
!9940 = !DILocation(line: 5301, column: 7, scope: !9924)
!9941 = !DILocation(line: 5301, column: 6, scope: !9924)
!9942 = !DILocation(line: 5302, column: 37, scope: !9924)
!9943 = !DILocation(line: 5302, column: 49, scope: !9924)
!9944 = !DILocation(line: 5302, column: 51, scope: !9924)
!9945 = !DILocation(line: 5302, column: 63, scope: !9924)
!9946 = !DILocation(line: 5303, column: 7, scope: !9924)
!9947 = !DILocation(line: 5302, column: 7, scope: !9924)
!9948 = !DILocation(line: 5302, column: 6, scope: !9924)
!9949 = !DILocation(line: 5304, column: 10, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9924, file: !1, line: 5304, column: 9)
!9951 = !DILocation(line: 5304, column: 12, scope: !9950)
!9952 = !DILocation(line: 5304, column: 43, scope: !9950)
!9953 = !DILocation(line: 5304, column: 47, scope: !9950)
!9954 = !DILocation(line: 5304, column: 49, scope: !9950)
!9955 = !DILocation(line: 5304, column: 9, scope: !9924)
!9956 = !DILocation(line: 5306, column: 15, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9950, file: !1, line: 5305, column: 7)
!9958 = !DILocation(line: 5307, column: 9, scope: !9957)
!9959 = !DILocation(line: 5309, column: 11, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9924, file: !1, line: 5309, column: 5)
!9961 = !DILocation(line: 5309, column: 10, scope: !9960)
!9962 = !DILocation(line: 5309, column: 15, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9960, file: !1, line: 5309, column: 5)
!9964 = !DILocation(line: 5309, column: 29, scope: !9963)
!9965 = !DILocation(line: 5309, column: 36, scope: !9963)
!9966 = !DILocation(line: 5309, column: 17, scope: !9963)
!9967 = !DILocation(line: 5309, column: 5, scope: !9960)
!9968 = !DILocalVariable(name: "weight", scope: !9969, file: !1, line: 5312, type: !856)
!9969 = distinct !DILexicalBlock(scope: !9963, file: !1, line: 5310, column: 5)
!9970 = !DILocation(line: 5312, column: 9, scope: !9969)
!9971 = !DILocalVariable(name: "pixel", scope: !9969, file: !1, line: 5315, type: !1223)
!9972 = !DILocation(line: 5315, column: 9, scope: !9969)
!9973 = !DILocation(line: 5317, column: 27, scope: !9969)
!9974 = !DILocation(line: 5317, column: 26, scope: !9969)
!9975 = !DILocation(line: 5317, column: 41, scope: !9969)
!9976 = !DILocation(line: 5317, column: 13, scope: !9969)
!9977 = !DILocation(line: 5318, column: 34, scope: !9969)
!9978 = !DILocation(line: 5318, column: 17, scope: !9969)
!9979 = !DILocation(line: 5318, column: 62, scope: !9969)
!9980 = !DILocation(line: 5318, column: 49, scope: !9969)
!9981 = !DILocation(line: 5319, column: 10, scope: !9969)
!9982 = !DILocation(line: 5319, column: 17, scope: !9969)
!9983 = !DILocation(line: 5319, column: 16, scope: !9969)
!9984 = !DILocation(line: 5318, column: 75, scope: !9969)
!9985 = !DILocation(line: 5318, column: 70, scope: !9969)
!9986 = !DILocation(line: 5318, column: 65, scope: !9969)
!9987 = !DILocation(line: 5318, column: 48, scope: !9969)
!9988 = !DILocation(line: 5318, column: 13, scope: !9969)
!9989 = !DILocation(line: 5318, column: 16, scope: !9969)
!9990 = !DILocation(line: 5320, column: 7, scope: !9969)
!9991 = !DILocation(line: 5321, column: 27, scope: !9969)
!9992 = !DILocation(line: 5321, column: 26, scope: !9969)
!9993 = !DILocation(line: 5321, column: 43, scope: !9969)
!9994 = !DILocation(line: 5321, column: 13, scope: !9969)
!9995 = !DILocation(line: 5322, column: 36, scope: !9969)
!9996 = !DILocation(line: 5322, column: 19, scope: !9969)
!9997 = !DILocation(line: 5322, column: 66, scope: !9969)
!9998 = !DILocation(line: 5322, column: 53, scope: !9969)
!9999 = !DILocation(line: 5323, column: 15, scope: !9969)
!10000 = !DILocation(line: 5323, column: 22, scope: !9969)
!10001 = !DILocation(line: 5323, column: 21, scope: !9969)
!10002 = !DILocation(line: 5323, column: 13, scope: !9969)
!10003 = !DILocation(line: 5322, column: 76, scope: !9969)
!10004 = !DILocation(line: 5322, column: 71, scope: !9969)
!10005 = !DILocation(line: 5322, column: 52, scope: !9969)
!10006 = !DILocation(line: 5322, column: 13, scope: !9969)
!10007 = !DILocation(line: 5322, column: 18, scope: !9969)
!10008 = !DILocation(line: 5324, column: 7, scope: !9969)
!10009 = !DILocation(line: 5325, column: 27, scope: !9969)
!10010 = !DILocation(line: 5325, column: 26, scope: !9969)
!10011 = !DILocation(line: 5325, column: 42, scope: !9969)
!10012 = !DILocation(line: 5325, column: 13, scope: !9969)
!10013 = !DILocation(line: 5326, column: 35, scope: !9969)
!10014 = !DILocation(line: 5326, column: 18, scope: !9969)
!10015 = !DILocation(line: 5326, column: 64, scope: !9969)
!10016 = !DILocation(line: 5326, column: 51, scope: !9969)
!10017 = !DILocation(line: 5327, column: 10, scope: !9969)
!10018 = !DILocation(line: 5327, column: 17, scope: !9969)
!10019 = !DILocation(line: 5327, column: 16, scope: !9969)
!10020 = !DILocation(line: 5326, column: 78, scope: !9969)
!10021 = !DILocation(line: 5326, column: 73, scope: !9969)
!10022 = !DILocation(line: 5326, column: 68, scope: !9969)
!10023 = !DILocation(line: 5326, column: 50, scope: !9969)
!10024 = !DILocation(line: 5326, column: 13, scope: !9969)
!10025 = !DILocation(line: 5326, column: 17, scope: !9969)
!10026 = !DILocation(line: 5328, column: 7, scope: !9969)
!10027 = !DILocation(line: 5329, column: 7, scope: !9969)
!10028 = !DILocation(line: 5330, column: 8, scope: !9969)
!10029 = !DILocation(line: 5331, column: 8, scope: !9969)
!10030 = !DILocation(line: 5332, column: 5, scope: !9969)
!10031 = !DILocation(line: 5309, column: 46, scope: !9963)
!10032 = !DILocation(line: 5309, column: 5, scope: !9963)
!10033 = distinct !{!10033, !9967, !10034}
!10034 = !DILocation(line: 5332, column: 5, scope: !9960)
!10035 = !DILocation(line: 5333, column: 38, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9924, file: !1, line: 5333, column: 9)
!10037 = !DILocation(line: 5333, column: 48, scope: !10036)
!10038 = !DILocation(line: 5333, column: 9, scope: !10036)
!10039 = !DILocation(line: 5333, column: 59, scope: !10036)
!10040 = !DILocation(line: 5333, column: 9, scope: !9924)
!10041 = !DILocation(line: 5334, column: 13, scope: !10036)
!10042 = !DILocation(line: 5334, column: 7, scope: !10036)
!10043 = !DILocation(line: 5335, column: 9, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !9924, file: !1, line: 5335, column: 9)
!10045 = !DILocation(line: 5335, column: 16, scope: !10044)
!10046 = !DILocation(line: 5335, column: 33, scope: !10044)
!10047 = !DILocation(line: 5335, column: 9, scope: !9924)
!10048 = !DILocalVariable(name: "proceed", scope: !10049, file: !1, line: 5338, type: !709)
!10049 = distinct !DILexicalBlock(scope: !10044, file: !1, line: 5336, column: 7)
!10050 = !DILocation(line: 5338, column: 11, scope: !10049)
!10051 = !DILocation(line: 5343, column: 34, scope: !10049)
!10052 = !DILocation(line: 5343, column: 61, scope: !10049)
!10053 = !DILocation(line: 5343, column: 64, scope: !10049)
!10054 = !DILocation(line: 5343, column: 71, scope: !10049)
!10055 = !DILocation(line: 5343, column: 17, scope: !10049)
!10056 = !DILocation(line: 5343, column: 16, scope: !10049)
!10057 = !DILocation(line: 5344, column: 13, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10049, file: !1, line: 5344, column: 13)
!10059 = !DILocation(line: 5344, column: 21, scope: !10058)
!10060 = !DILocation(line: 5344, column: 13, scope: !10049)
!10061 = !DILocation(line: 5345, column: 17, scope: !10058)
!10062 = !DILocation(line: 5345, column: 11, scope: !10058)
!10063 = !DILocation(line: 5346, column: 7, scope: !10049)
!10064 = !DILocation(line: 5347, column: 3, scope: !9924)
!10065 = !DILocation(line: 5288, column: 41, scope: !9918)
!10066 = !DILocation(line: 5288, column: 3, scope: !9918)
!10067 = distinct !{!10067, !9922, !10068}
!10068 = !DILocation(line: 5347, column: 3, scope: !9915)
!10069 = !DILocation(line: 5348, column: 30, scope: !9741)
!10070 = !DILocation(line: 5348, column: 13, scope: !9741)
!10071 = !DILocation(line: 5348, column: 12, scope: !9741)
!10072 = !DILocation(line: 5349, column: 31, scope: !9741)
!10073 = !DILocation(line: 5349, column: 14, scope: !9741)
!10074 = !DILocation(line: 5349, column: 13, scope: !9741)
!10075 = !DILocation(line: 5350, column: 7, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !9741, file: !1, line: 5350, column: 7)
!10077 = !DILocation(line: 5350, column: 14, scope: !10076)
!10078 = !DILocation(line: 5350, column: 7, scope: !9741)
!10079 = !DILocation(line: 5351, column: 29, scope: !10076)
!10080 = !DILocation(line: 5351, column: 16, scope: !10076)
!10081 = !DILocation(line: 5351, column: 15, scope: !10076)
!10082 = !DILocation(line: 5351, column: 5, scope: !10076)
!10083 = !DILocation(line: 5352, column: 10, scope: !9741)
!10084 = !DILocation(line: 5352, column: 3, scope: !9741)
!10085 = !DILocation(line: 5353, column: 1, scope: !9741)
!10086 = distinct !DISubprogram(name: "PixelPacketIntensity", scope: !2630, file: !2630, line: 174, type: !10087, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!847, !1096}
!10089 = !DILocalVariable(name: "pixel", arg: 1, scope: !10086, file: !2630, line: 174, type: !1096)
!10090 = !DILocation(line: 174, column: 63, scope: !10086)
!10091 = !DILocalVariable(name: "intensity", scope: !10086, file: !2630, line: 177, type: !1098)
!10092 = !DILocation(line: 177, column: 5, scope: !10086)
!10093 = !DILocation(line: 179, column: 8, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10086, file: !2630, line: 179, column: 7)
!10095 = !DILocation(line: 179, column: 15, scope: !10094)
!10096 = !DILocation(line: 179, column: 23, scope: !10094)
!10097 = !DILocation(line: 179, column: 30, scope: !10094)
!10098 = !DILocation(line: 179, column: 20, scope: !10094)
!10099 = !DILocation(line: 179, column: 37, scope: !10094)
!10100 = !DILocation(line: 179, column: 41, scope: !10094)
!10101 = !DILocation(line: 179, column: 48, scope: !10094)
!10102 = !DILocation(line: 179, column: 57, scope: !10094)
!10103 = !DILocation(line: 179, column: 64, scope: !10094)
!10104 = !DILocation(line: 179, column: 54, scope: !10094)
!10105 = !DILocation(line: 179, column: 7, scope: !10086)
!10106 = !DILocation(line: 180, column: 12, scope: !10094)
!10107 = !DILocation(line: 180, column: 19, scope: !10094)
!10108 = !DILocation(line: 180, column: 5, scope: !10094)
!10109 = !DILocation(line: 181, column: 40, scope: !10086)
!10110 = !DILocation(line: 181, column: 47, scope: !10086)
!10111 = !DILocation(line: 181, column: 39, scope: !10086)
!10112 = !DILocation(line: 181, column: 60, scope: !10086)
!10113 = !DILocation(line: 181, column: 67, scope: !10086)
!10114 = !DILocation(line: 181, column: 59, scope: !10086)
!10115 = !DILocation(line: 181, column: 50, scope: !10086)
!10116 = !DILocation(line: 182, column: 14, scope: !10086)
!10117 = !DILocation(line: 182, column: 21, scope: !10086)
!10118 = !DILocation(line: 182, column: 13, scope: !10086)
!10119 = !DILocation(line: 181, column: 72, scope: !10086)
!10120 = !DILocation(line: 181, column: 13, scope: !10086)
!10121 = !DILocation(line: 181, column: 12, scope: !10086)
!10122 = !DILocation(line: 183, column: 25, scope: !10086)
!10123 = !DILocation(line: 183, column: 10, scope: !10086)
!10124 = !DILocation(line: 183, column: 3, scope: !10086)
!10125 = !DILocation(line: 184, column: 1, scope: !10086)
!10126 = distinct !DISubprogram(name: "VignetteImage", scope: !1, file: !1, line: 5387, type: !7844, scopeLine: 5389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!10127 = !DILocalVariable(name: "image", arg: 1, scope: !10126, file: !1, line: 5387, type: !821)
!10128 = !DILocation(line: 5387, column: 48, scope: !10126)
!10129 = !DILocalVariable(name: "radius", arg: 2, scope: !10126, file: !1, line: 5387, type: !1986)
!10130 = !DILocation(line: 5387, column: 67, scope: !10126)
!10131 = !DILocalVariable(name: "sigma", arg: 3, scope: !10126, file: !1, line: 5388, type: !1986)
!10132 = !DILocation(line: 5388, column: 16, scope: !10126)
!10133 = !DILocalVariable(name: "x", arg: 4, scope: !10126, file: !1, line: 5388, type: !3181)
!10134 = !DILocation(line: 5388, column: 36, scope: !10126)
!10135 = !DILocalVariable(name: "y", arg: 5, scope: !10126, file: !1, line: 5388, type: !3181)
!10136 = !DILocation(line: 5388, column: 52, scope: !10126)
!10137 = !DILocalVariable(name: "exception", arg: 6, scope: !10126, file: !1, line: 5388, type: !695)
!10138 = !DILocation(line: 5388, column: 69, scope: !10126)
!10139 = !DILocalVariable(name: "ellipse", scope: !10126, file: !1, line: 5391, type: !967)
!10140 = !DILocation(line: 5391, column: 5, scope: !10126)
!10141 = !DILocalVariable(name: "draw_info", scope: !10126, file: !1, line: 5394, type: !7258)
!10142 = !DILocation(line: 5394, column: 6, scope: !10126)
!10143 = !DILocalVariable(name: "blur_image", scope: !10126, file: !1, line: 5397, type: !1090)
!10144 = !DILocation(line: 5397, column: 6, scope: !10126)
!10145 = !DILocalVariable(name: "canvas_image", scope: !10126, file: !1, line: 5398, type: !1090)
!10146 = !DILocation(line: 5398, column: 6, scope: !10126)
!10147 = !DILocalVariable(name: "oval_image", scope: !10126, file: !1, line: 5399, type: !1090)
!10148 = !DILocation(line: 5399, column: 6, scope: !10126)
!10149 = !DILocalVariable(name: "vignette_image", scope: !10126, file: !1, line: 5400, type: !1090)
!10150 = !DILocation(line: 5400, column: 6, scope: !10126)
!10151 = !DILocation(line: 5404, column: 7, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5404, column: 7)
!10153 = !DILocation(line: 5404, column: 14, scope: !10152)
!10154 = !DILocation(line: 5404, column: 20, scope: !10152)
!10155 = !DILocation(line: 5404, column: 7, scope: !10126)
!10156 = !DILocation(line: 5405, column: 61, scope: !10152)
!10157 = !DILocation(line: 5405, column: 68, scope: !10152)
!10158 = !DILocation(line: 5405, column: 12, scope: !10152)
!10159 = !DILocation(line: 5405, column: 5, scope: !10152)
!10160 = !DILocation(line: 5408, column: 27, scope: !10126)
!10161 = !DILocation(line: 5408, column: 48, scope: !10126)
!10162 = !DILocation(line: 5408, column: 16, scope: !10126)
!10163 = !DILocation(line: 5408, column: 15, scope: !10126)
!10164 = !DILocation(line: 5409, column: 7, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5409, column: 7)
!10166 = !DILocation(line: 5409, column: 20, scope: !10165)
!10167 = !DILocation(line: 5409, column: 7, scope: !10126)
!10168 = !DILocation(line: 5410, column: 5, scope: !10165)
!10169 = !DILocation(line: 5411, column: 28, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5411, column: 7)
!10171 = !DILocation(line: 5411, column: 7, scope: !10170)
!10172 = !DILocation(line: 5411, column: 54, scope: !10170)
!10173 = !DILocation(line: 5411, column: 7, scope: !10126)
!10174 = !DILocation(line: 5413, column: 24, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10170, file: !1, line: 5412, column: 5)
!10176 = !DILocation(line: 5413, column: 35, scope: !10175)
!10177 = !DILocation(line: 5413, column: 49, scope: !10175)
!10178 = !DILocation(line: 5413, column: 7, scope: !10175)
!10179 = !DILocation(line: 5414, column: 33, scope: !10175)
!10180 = !DILocation(line: 5414, column: 20, scope: !10175)
!10181 = !DILocation(line: 5414, column: 19, scope: !10175)
!10182 = !DILocation(line: 5415, column: 7, scope: !10175)
!10183 = !DILocation(line: 5417, column: 3, scope: !10126)
!10184 = !DILocation(line: 5417, column: 17, scope: !10126)
!10185 = !DILocation(line: 5417, column: 22, scope: !10126)
!10186 = !DILocation(line: 5418, column: 25, scope: !10126)
!10187 = !DILocation(line: 5418, column: 38, scope: !10126)
!10188 = !DILocation(line: 5418, column: 52, scope: !10126)
!10189 = !DILocation(line: 5418, column: 60, scope: !10126)
!10190 = !DILocation(line: 5418, column: 74, scope: !10126)
!10191 = !DILocation(line: 5419, column: 16, scope: !10126)
!10192 = !DILocation(line: 5418, column: 14, scope: !10126)
!10193 = !DILocation(line: 5418, column: 13, scope: !10126)
!10194 = !DILocation(line: 5420, column: 7, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5420, column: 7)
!10196 = !DILocation(line: 5420, column: 18, scope: !10195)
!10197 = !DILocation(line: 5420, column: 7, scope: !10126)
!10198 = !DILocation(line: 5422, column: 33, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !1, line: 5421, column: 5)
!10200 = !DILocation(line: 5422, column: 20, scope: !10199)
!10201 = !DILocation(line: 5422, column: 19, scope: !10199)
!10202 = !DILocation(line: 5423, column: 7, scope: !10199)
!10203 = !DILocation(line: 5425, column: 40, scope: !10126)
!10204 = !DILocation(line: 5425, column: 52, scope: !10126)
!10205 = !DILocation(line: 5425, column: 69, scope: !10126)
!10206 = !DILocation(line: 5425, column: 10, scope: !10126)
!10207 = !DILocation(line: 5426, column: 34, scope: !10126)
!10208 = !DILocation(line: 5426, column: 10, scope: !10126)
!10209 = !DILocation(line: 5427, column: 13, scope: !10126)
!10210 = !DILocation(line: 5427, column: 12, scope: !10126)
!10211 = !DILocation(line: 5428, column: 40, scope: !10126)
!10212 = !DILocation(line: 5428, column: 51, scope: !10126)
!10213 = !DILocation(line: 5428, column: 56, scope: !10126)
!10214 = !DILocation(line: 5428, column: 10, scope: !10126)
!10215 = !DILocation(line: 5429, column: 40, scope: !10126)
!10216 = !DILocation(line: 5429, column: 51, scope: !10126)
!10217 = !DILocation(line: 5429, column: 58, scope: !10126)
!10218 = !DILocation(line: 5429, column: 10, scope: !10126)
!10219 = !DILocation(line: 5430, column: 29, scope: !10126)
!10220 = !DILocation(line: 5431, column: 37, scope: !10126)
!10221 = !DILocation(line: 5431, column: 44, scope: !10126)
!10222 = !DILocation(line: 5431, column: 51, scope: !10126)
!10223 = !DILocation(line: 5432, column: 5, scope: !10126)
!10224 = !DILocation(line: 5432, column: 12, scope: !10126)
!10225 = !DILocation(line: 5432, column: 16, scope: !10126)
!10226 = !DILocation(line: 5432, column: 21, scope: !10126)
!10227 = !DILocation(line: 5432, column: 28, scope: !10126)
!10228 = !DILocation(line: 5432, column: 35, scope: !10126)
!10229 = !DILocation(line: 5432, column: 40, scope: !10126)
!10230 = !DILocation(line: 5432, column: 39, scope: !10126)
!10231 = !DILocation(line: 5432, column: 42, scope: !10126)
!10232 = !DILocation(line: 5432, column: 49, scope: !10126)
!10233 = !DILocation(line: 5432, column: 53, scope: !10126)
!10234 = !DILocation(line: 5432, column: 58, scope: !10126)
!10235 = !DILocation(line: 5432, column: 57, scope: !10126)
!10236 = !DILocation(line: 5430, column: 10, scope: !10126)
!10237 = !DILocation(line: 5433, column: 38, scope: !10126)
!10238 = !DILocation(line: 5433, column: 24, scope: !10126)
!10239 = !DILocation(line: 5433, column: 3, scope: !10126)
!10240 = !DILocation(line: 5433, column: 14, scope: !10126)
!10241 = !DILocation(line: 5433, column: 23, scope: !10126)
!10242 = !DILocation(line: 5434, column: 20, scope: !10126)
!10243 = !DILocation(line: 5434, column: 31, scope: !10126)
!10244 = !DILocation(line: 5434, column: 10, scope: !10126)
!10245 = !DILocation(line: 5435, column: 29, scope: !10126)
!10246 = !DILocation(line: 5435, column: 13, scope: !10126)
!10247 = !DILocation(line: 5435, column: 12, scope: !10126)
!10248 = !DILocation(line: 5436, column: 24, scope: !10126)
!10249 = !DILocation(line: 5436, column: 35, scope: !10126)
!10250 = !DILocation(line: 5436, column: 42, scope: !10126)
!10251 = !DILocation(line: 5436, column: 48, scope: !10126)
!10252 = !DILocation(line: 5436, column: 14, scope: !10126)
!10253 = !DILocation(line: 5436, column: 13, scope: !10126)
!10254 = !DILocation(line: 5437, column: 27, scope: !10126)
!10255 = !DILocation(line: 5437, column: 14, scope: !10126)
!10256 = !DILocation(line: 5437, column: 13, scope: !10126)
!10257 = !DILocation(line: 5438, column: 7, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5438, column: 7)
!10259 = !DILocation(line: 5438, column: 18, scope: !10258)
!10260 = !DILocation(line: 5438, column: 7, scope: !10126)
!10261 = !DILocation(line: 5440, column: 33, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10258, file: !1, line: 5439, column: 5)
!10263 = !DILocation(line: 5440, column: 20, scope: !10262)
!10264 = !DILocation(line: 5440, column: 19, scope: !10262)
!10265 = !DILocation(line: 5441, column: 7, scope: !10262)
!10266 = !DILocation(line: 5443, column: 3, scope: !10126)
!10267 = !DILocation(line: 5443, column: 15, scope: !10126)
!10268 = !DILocation(line: 5443, column: 20, scope: !10126)
!10269 = !DILocation(line: 5444, column: 25, scope: !10126)
!10270 = !DILocation(line: 5444, column: 61, scope: !10126)
!10271 = !DILocation(line: 5444, column: 10, scope: !10126)
!10272 = !DILocation(line: 5445, column: 27, scope: !10126)
!10273 = !DILocation(line: 5445, column: 14, scope: !10126)
!10274 = !DILocation(line: 5445, column: 13, scope: !10126)
!10275 = !DILocation(line: 5446, column: 35, scope: !10126)
!10276 = !DILocation(line: 5446, column: 61, scope: !10126)
!10277 = !DILocation(line: 5446, column: 18, scope: !10126)
!10278 = !DILocation(line: 5446, column: 17, scope: !10126)
!10279 = !DILocation(line: 5447, column: 29, scope: !10126)
!10280 = !DILocation(line: 5447, column: 16, scope: !10126)
!10281 = !DILocation(line: 5447, column: 15, scope: !10126)
!10282 = !DILocation(line: 5448, column: 7, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10126, file: !1, line: 5448, column: 7)
!10284 = !DILocation(line: 5448, column: 22, scope: !10283)
!10285 = !DILocation(line: 5448, column: 7, scope: !10126)
!10286 = !DILocation(line: 5449, column: 37, scope: !10283)
!10287 = !DILocation(line: 5449, column: 52, scope: !10283)
!10288 = !DILocation(line: 5449, column: 59, scope: !10283)
!10289 = !DILocation(line: 5449, column: 12, scope: !10283)
!10290 = !DILocation(line: 5449, column: 5, scope: !10283)
!10291 = !DILocation(line: 5450, column: 10, scope: !10126)
!10292 = !DILocation(line: 5450, column: 3, scope: !10126)
!10293 = !DILocation(line: 5451, column: 1, scope: !10126)
!10294 = distinct !DISubprogram(name: "AbsolutePixelValue", scope: !2630, file: !2630, line: 111, type: !10295, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!1098, !1876}
!10297 = !DILocalVariable(name: "x", arg: 1, scope: !10294, file: !2630, line: 111, type: !1876)
!10298 = !DILocation(line: 111, column: 70, scope: !10294)
!10299 = !DILocation(line: 113, column: 10, scope: !10294)
!10300 = !DILocation(line: 113, column: 12, scope: !10294)
!10301 = !DILocation(line: 113, column: 22, scope: !10294)
!10302 = !DILocation(line: 113, column: 21, scope: !10294)
!10303 = !DILocation(line: 113, column: 26, scope: !10294)
!10304 = !DILocation(line: 113, column: 3, scope: !10294)
!10305 = !DILocalVariable(name: "expression", arg: 1, scope: !689, file: !1, line: 1869, type: !692)
!10306 = !DILocation(line: 1869, column: 53, scope: !689)
!10307 = !DILocalVariable(name: "exception", arg: 2, scope: !689, file: !1, line: 1870, type: !695)
!10308 = !DILocation(line: 1870, column: 18, scope: !689)
!10309 = !DILocalVariable(name: "precedence", scope: !689, file: !1, line: 1895, type: !10310)
!10310 = !DIDerivedType(tag: DW_TAG_typedef, name: "FxPrecedence", scope: !689, file: !1, line: 1892, baseType: !688)
!10311 = !DILocation(line: 1895, column: 5, scope: !689)
!10312 = !DILocalVariable(name: "target", scope: !689, file: !1, line: 1896, type: !10310)
!10313 = !DILocation(line: 1896, column: 5, scope: !689)
!10314 = !DILocalVariable(name: "subexpression", scope: !689, file: !1, line: 1899, type: !692)
!10315 = !DILocation(line: 1899, column: 6, scope: !689)
!10316 = !DILocalVariable(name: "c", scope: !689, file: !1, line: 1902, type: !702)
!10317 = !DILocation(line: 1902, column: 5, scope: !689)
!10318 = !DILocalVariable(name: "level", scope: !689, file: !1, line: 1905, type: !716)
!10319 = !DILocation(line: 1905, column: 5, scope: !689)
!10320 = !DILocation(line: 1907, column: 4, scope: !689)
!10321 = !DILocation(line: 1908, column: 8, scope: !689)
!10322 = !DILocation(line: 1909, column: 16, scope: !689)
!10323 = !DILocation(line: 1910, column: 9, scope: !689)
!10324 = !DILocation(line: 1911, column: 3, scope: !689)
!10325 = !DILocation(line: 1911, column: 11, scope: !689)
!10326 = !DILocation(line: 1911, column: 10, scope: !689)
!10327 = !DILocation(line: 1911, column: 22, scope: !689)
!10328 = !DILocation(line: 1913, column: 15, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !689, file: !1, line: 1912, column: 3)
!10330 = !DILocation(line: 1914, column: 10, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 1914, column: 9)
!10332 = !DILocation(line: 1914, column: 55, scope: !10331)
!10333 = !DILocation(line: 1914, column: 61, scope: !10331)
!10334 = !DILocation(line: 1914, column: 65, scope: !10331)
!10335 = !DILocation(line: 1914, column: 67, scope: !10331)
!10336 = !DILocation(line: 1914, column: 9, scope: !10329)
!10337 = !DILocation(line: 1916, column: 19, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10331, file: !1, line: 1915, column: 7)
!10339 = !DILocation(line: 1917, column: 9, scope: !10338)
!10340 = distinct !{!10340, !10324, !10341}
!10341 = !DILocation(line: 2111, column: 3, scope: !689)
!10342 = !DILocation(line: 1919, column: 14, scope: !10329)
!10343 = !DILocation(line: 1919, column: 13, scope: !10329)
!10344 = !DILocation(line: 1919, column: 5, scope: !10329)
!10345 = !DILocation(line: 1925, column: 28, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 1925, column: 13)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !1, line: 1923, column: 7)
!10348 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 1920, column: 5)
!10349 = !DILocation(line: 1925, column: 13, scope: !10346)
!10350 = !DILocation(line: 1925, column: 50, scope: !10346)
!10351 = !DILocation(line: 1925, column: 13, scope: !10347)
!10352 = !DILocation(line: 1927, column: 23, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10346, file: !1, line: 1926, column: 11)
!10354 = !DILocation(line: 1928, column: 13, scope: !10353)
!10355 = !DILocation(line: 1932, column: 28, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 1932, column: 13)
!10357 = !DILocation(line: 1932, column: 13, scope: !10356)
!10358 = !DILocation(line: 1932, column: 50, scope: !10356)
!10359 = !DILocation(line: 1932, column: 13, scope: !10347)
!10360 = !DILocation(line: 1934, column: 23, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !1, line: 1933, column: 11)
!10362 = !DILocation(line: 1935, column: 13, scope: !10361)
!10363 = !DILocation(line: 1939, column: 28, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 1939, column: 13)
!10365 = !DILocation(line: 1939, column: 13, scope: !10364)
!10366 = !DILocation(line: 1939, column: 50, scope: !10364)
!10367 = !DILocation(line: 1939, column: 13, scope: !10347)
!10368 = !DILocation(line: 1941, column: 23, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10364, file: !1, line: 1940, column: 11)
!10370 = !DILocation(line: 1942, column: 13, scope: !10369)
!10371 = !DILocation(line: 1945, column: 28, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 1945, column: 13)
!10373 = !DILocation(line: 1945, column: 13, scope: !10372)
!10374 = !DILocation(line: 1945, column: 50, scope: !10372)
!10375 = !DILocation(line: 1945, column: 13, scope: !10347)
!10376 = !DILocation(line: 1947, column: 23, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10372, file: !1, line: 1946, column: 11)
!10378 = !DILocation(line: 1948, column: 13, scope: !10377)
!10379 = !DILocation(line: 1950, column: 9, scope: !10347)
!10380 = !DILocation(line: 1955, column: 29, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !1, line: 1955, column: 13)
!10382 = distinct !DILexicalBlock(scope: !10348, file: !1, line: 1954, column: 7)
!10383 = !DILocation(line: 1955, column: 14, scope: !10381)
!10384 = !DILocation(line: 1955, column: 48, scope: !10381)
!10385 = !DILocation(line: 1955, column: 54, scope: !10381)
!10386 = !DILocation(line: 1956, column: 29, scope: !10381)
!10387 = !DILocation(line: 1956, column: 14, scope: !10381)
!10388 = !DILocation(line: 1956, column: 48, scope: !10381)
!10389 = !DILocation(line: 1955, column: 13, scope: !10382)
!10390 = !DILocation(line: 1958, column: 23, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10381, file: !1, line: 1957, column: 11)
!10392 = !DILocation(line: 1959, column: 13, scope: !10391)
!10393 = !DILocation(line: 1961, column: 9, scope: !10382)
!10394 = !DILocation(line: 1965, column: 9, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10348, file: !1, line: 1964, column: 7)
!10396 = !DILocation(line: 1965, column: 16, scope: !10395)
!10397 = !DILocation(line: 1965, column: 66, scope: !10395)
!10398 = !DILocation(line: 1966, column: 21, scope: !10395)
!10399 = distinct !{!10399, !10394, !10398}
!10400 = !DILocation(line: 1967, column: 9, scope: !10395)
!10401 = !DILocation(line: 1970, column: 9, scope: !10348)
!10402 = !DILocation(line: 1972, column: 10, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 1972, column: 9)
!10404 = !DILocation(line: 1972, column: 12, scope: !10403)
!10405 = !DILocation(line: 1972, column: 26, scope: !10403)
!10406 = !DILocation(line: 1972, column: 30, scope: !10403)
!10407 = !DILocation(line: 1972, column: 32, scope: !10403)
!10408 = !DILocation(line: 1972, column: 9, scope: !10329)
!10409 = !DILocation(line: 1973, column: 12, scope: !10403)
!10410 = !DILocation(line: 1973, column: 7, scope: !10403)
!10411 = !DILocation(line: 1975, column: 12, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10403, file: !1, line: 1975, column: 11)
!10413 = !DILocation(line: 1975, column: 14, scope: !10412)
!10414 = !DILocation(line: 1975, column: 28, scope: !10412)
!10415 = !DILocation(line: 1975, column: 32, scope: !10412)
!10416 = !DILocation(line: 1975, column: 34, scope: !10412)
!10417 = !DILocation(line: 1975, column: 11, scope: !10403)
!10418 = !DILocation(line: 1976, column: 14, scope: !10412)
!10419 = !DILocation(line: 1976, column: 9, scope: !10412)
!10420 = !DILocation(line: 1977, column: 9, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 1977, column: 9)
!10422 = !DILocation(line: 1977, column: 15, scope: !10421)
!10423 = !DILocation(line: 1977, column: 9, scope: !10329)
!10424 = !DILocation(line: 1978, column: 32, scope: !10421)
!10425 = !DILocation(line: 1978, column: 31, scope: !10421)
!10426 = !DILocation(line: 1978, column: 15, scope: !10421)
!10427 = !DILocation(line: 1978, column: 7, scope: !10421)
!10428 = !DILocation(line: 1983, column: 21, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 1982, column: 9)
!10430 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 1979, column: 7)
!10431 = !DILocation(line: 1984, column: 11, scope: !10429)
!10432 = !DILocation(line: 1989, column: 21, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 1988, column: 9)
!10434 = !DILocation(line: 1990, column: 11, scope: !10433)
!10435 = !DILocation(line: 1994, column: 17, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1, line: 1994, column: 15)
!10437 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 1993, column: 9)
!10438 = !DILocation(line: 1994, column: 19, scope: !10436)
!10439 = !DILocation(line: 1994, column: 25, scope: !10436)
!10440 = !DILocation(line: 1994, column: 30, scope: !10436)
!10441 = !DILocation(line: 1994, column: 65, scope: !10436)
!10442 = !DILocation(line: 1994, column: 71, scope: !10436)
!10443 = !DILocation(line: 1995, column: 51, scope: !10436)
!10444 = !DILocation(line: 1995, column: 35, scope: !10436)
!10445 = !DILocation(line: 1995, column: 28, scope: !10436)
!10446 = !DILocation(line: 1995, column: 17, scope: !10436)
!10447 = !DILocation(line: 1995, column: 55, scope: !10436)
!10448 = !DILocation(line: 1995, column: 75, scope: !10436)
!10449 = !DILocation(line: 1996, column: 18, scope: !10436)
!10450 = !DILocation(line: 1996, column: 63, scope: !10436)
!10451 = !DILocation(line: 1996, column: 69, scope: !10436)
!10452 = !DILocation(line: 1997, column: 52, scope: !10436)
!10453 = !DILocation(line: 1997, column: 51, scope: !10436)
!10454 = !DILocation(line: 1997, column: 28, scope: !10436)
!10455 = !DILocation(line: 1997, column: 17, scope: !10436)
!10456 = !DILocation(line: 1997, column: 65, scope: !10436)
!10457 = !DILocation(line: 1997, column: 84, scope: !10436)
!10458 = !DILocation(line: 1998, column: 18, scope: !10436)
!10459 = !DILocation(line: 1998, column: 53, scope: !10436)
!10460 = !DILocation(line: 1998, column: 59, scope: !10436)
!10461 = !DILocation(line: 1999, column: 18, scope: !10436)
!10462 = !DILocation(line: 1999, column: 63, scope: !10436)
!10463 = !DILocation(line: 1999, column: 71, scope: !10436)
!10464 = !DILocation(line: 2000, column: 52, scope: !10436)
!10465 = !DILocation(line: 2000, column: 51, scope: !10436)
!10466 = !DILocation(line: 2000, column: 28, scope: !10436)
!10467 = !DILocation(line: 2000, column: 16, scope: !10436)
!10468 = !DILocation(line: 2000, column: 65, scope: !10436)
!10469 = !DILocation(line: 1994, column: 15, scope: !10437)
!10470 = !DILocation(line: 2001, column: 23, scope: !10436)
!10471 = !DILocation(line: 2001, column: 13, scope: !10436)
!10472 = !DILocation(line: 2002, column: 11, scope: !10437)
!10473 = !DILocation(line: 2008, column: 21, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2007, column: 9)
!10475 = !DILocation(line: 2009, column: 11, scope: !10474)
!10476 = !DILocation(line: 2014, column: 40, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !1, line: 2014, column: 15)
!10478 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2013, column: 9)
!10479 = !DILocation(line: 2014, column: 16, scope: !10477)
!10480 = !DILocation(line: 2014, column: 43, scope: !10477)
!10481 = !DILocation(line: 2014, column: 61, scope: !10477)
!10482 = !DILocation(line: 2015, column: 16, scope: !10477)
!10483 = !DILocation(line: 2015, column: 27, scope: !10477)
!10484 = !DILocation(line: 2014, column: 15, scope: !10478)
!10485 = !DILocation(line: 2016, column: 23, scope: !10477)
!10486 = !DILocation(line: 2016, column: 13, scope: !10477)
!10487 = !DILocation(line: 2017, column: 11, scope: !10478)
!10488 = !DILocation(line: 2022, column: 21, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2021, column: 9)
!10490 = !DILocation(line: 2023, column: 11, scope: !10489)
!10491 = !DILocation(line: 2030, column: 21, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2029, column: 9)
!10493 = !DILocation(line: 2031, column: 11, scope: !10492)
!10494 = !DILocation(line: 2036, column: 21, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2035, column: 9)
!10496 = !DILocation(line: 2037, column: 11, scope: !10495)
!10497 = !DILocation(line: 2041, column: 21, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2040, column: 9)
!10499 = !DILocation(line: 2042, column: 11, scope: !10498)
!10500 = !DILocation(line: 2046, column: 21, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2045, column: 9)
!10502 = !DILocation(line: 2047, column: 11, scope: !10501)
!10503 = !DILocation(line: 2051, column: 21, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2050, column: 9)
!10505 = !DILocation(line: 2052, column: 11, scope: !10504)
!10506 = !DILocation(line: 2056, column: 21, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2055, column: 9)
!10508 = !DILocation(line: 2057, column: 11, scope: !10507)
!10509 = !DILocation(line: 2061, column: 21, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2060, column: 9)
!10511 = !DILocation(line: 2062, column: 11, scope: !10510)
!10512 = !DILocation(line: 2067, column: 21, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2066, column: 9)
!10514 = !DILocation(line: 2068, column: 11, scope: !10513)
!10515 = !DILocation(line: 2072, column: 21, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2071, column: 9)
!10517 = !DILocation(line: 2073, column: 11, scope: !10516)
!10518 = !DILocation(line: 2077, column: 21, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2076, column: 9)
!10520 = !DILocation(line: 2078, column: 11, scope: !10519)
!10521 = !DILocation(line: 2082, column: 21, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10430, file: !1, line: 2081, column: 9)
!10523 = !DILocation(line: 2083, column: 11, scope: !10522)
!10524 = !DILocation(line: 2085, column: 7, scope: !10430)
!10525 = !DILocation(line: 2086, column: 10, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 2086, column: 9)
!10527 = !DILocation(line: 2086, column: 21, scope: !10526)
!10528 = !DILocation(line: 2086, column: 53, scope: !10526)
!10529 = !DILocation(line: 2087, column: 10, scope: !10526)
!10530 = !DILocation(line: 2087, column: 21, scope: !10526)
!10531 = !DILocation(line: 2087, column: 43, scope: !10526)
!10532 = !DILocation(line: 2088, column: 10, scope: !10526)
!10533 = !DILocation(line: 2088, column: 21, scope: !10526)
!10534 = !DILocation(line: 2086, column: 9, scope: !10329)
!10535 = !DILocation(line: 2090, column: 13, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !1, line: 2090, column: 13)
!10537 = distinct !DILexicalBlock(scope: !10526, file: !1, line: 2089, column: 7)
!10538 = !DILocation(line: 2090, column: 26, scope: !10536)
!10539 = !DILocation(line: 2090, column: 24, scope: !10536)
!10540 = !DILocation(line: 2090, column: 13, scope: !10537)
!10541 = !DILocation(line: 2095, column: 20, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10536, file: !1, line: 2091, column: 11)
!10543 = !DILocation(line: 2095, column: 19, scope: !10542)
!10544 = !DILocation(line: 2096, column: 27, scope: !10542)
!10545 = !DILocation(line: 2096, column: 26, scope: !10542)
!10546 = !DILocation(line: 2097, column: 11, scope: !10542)
!10547 = !DILocation(line: 2098, column: 7, scope: !10537)
!10548 = !DILocation(line: 2100, column: 11, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10526, file: !1, line: 2100, column: 11)
!10550 = !DILocation(line: 2100, column: 25, scope: !10549)
!10551 = !DILocation(line: 2100, column: 22, scope: !10549)
!10552 = !DILocation(line: 2100, column: 11, scope: !10526)
!10553 = !DILocation(line: 2105, column: 18, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10549, file: !1, line: 2101, column: 9)
!10555 = !DILocation(line: 2105, column: 17, scope: !10554)
!10556 = !DILocation(line: 2106, column: 25, scope: !10554)
!10557 = !DILocation(line: 2106, column: 24, scope: !10554)
!10558 = !DILocation(line: 2107, column: 9, scope: !10554)
!10559 = !DILocation(line: 2108, column: 27, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10329, file: !1, line: 2108, column: 9)
!10561 = !DILocation(line: 2108, column: 26, scope: !10560)
!10562 = !DILocation(line: 2108, column: 20, scope: !10560)
!10563 = !DILocation(line: 2108, column: 9, scope: !10560)
!10564 = !DILocation(line: 2108, column: 39, scope: !10560)
!10565 = !DILocation(line: 2108, column: 9, scope: !10329)
!10566 = !DILocation(line: 2109, column: 34, scope: !10560)
!10567 = !DILocation(line: 2109, column: 45, scope: !10560)
!10568 = !DILocation(line: 2109, column: 18, scope: !10560)
!10569 = !DILocation(line: 2109, column: 17, scope: !10560)
!10570 = !DILocation(line: 2109, column: 7, scope: !10560)
!10571 = !DILocation(line: 2110, column: 25, scope: !10329)
!10572 = !DILocation(line: 2110, column: 14, scope: !10329)
!10573 = !DILocation(line: 2110, column: 7, scope: !10329)
!10574 = !DILocation(line: 2110, column: 6, scope: !10329)
!10575 = !DILocation(line: 2112, column: 10, scope: !689)
!10576 = !DILocation(line: 2112, column: 3, scope: !689)
!10577 = distinct !DISubprogram(name: "FxGetSymbol", scope: !1, file: !1, line: 1302, type: !10578, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!856, !815, !1518, !3181, !3181, !692, !695}
!10580 = !DILocalVariable(name: "fx_info", arg: 1, scope: !10577, file: !1, line: 1302, type: !815)
!10581 = !DILocation(line: 1302, column: 35, scope: !10577)
!10582 = !DILocalVariable(name: "channel", arg: 2, scope: !10577, file: !1, line: 1302, type: !1518)
!10583 = !DILocation(line: 1302, column: 61, scope: !10577)
!10584 = !DILocalVariable(name: "x", arg: 3, scope: !10577, file: !1, line: 1303, type: !3181)
!10585 = !DILocation(line: 1303, column: 17, scope: !10577)
!10586 = !DILocalVariable(name: "y", arg: 4, scope: !10577, file: !1, line: 1303, type: !3181)
!10587 = !DILocation(line: 1303, column: 33, scope: !10577)
!10588 = !DILocalVariable(name: "expression", arg: 5, scope: !10577, file: !1, line: 1303, type: !692)
!10589 = !DILocation(line: 1303, column: 47, scope: !10577)
!10590 = !DILocalVariable(name: "exception", arg: 6, scope: !10577, file: !1, line: 1304, type: !695)
!10591 = !DILocation(line: 1304, column: 18, scope: !10577)
!10592 = !DILocalVariable(name: "q", scope: !10577, file: !1, line: 1307, type: !704)
!10593 = !DILocation(line: 1307, column: 6, scope: !10577)
!10594 = !DILocalVariable(name: "subexpression", scope: !10577, file: !1, line: 1308, type: !967)
!10595 = !DILocation(line: 1308, column: 5, scope: !10577)
!10596 = !DILocalVariable(name: "symbol", scope: !10577, file: !1, line: 1309, type: !967)
!10597 = !DILocation(line: 1309, column: 5, scope: !10577)
!10598 = !DILocalVariable(name: "p", scope: !10577, file: !1, line: 1312, type: !692)
!10599 = !DILocation(line: 1312, column: 6, scope: !10577)
!10600 = !DILocalVariable(name: "value", scope: !10577, file: !1, line: 1313, type: !692)
!10601 = !DILocation(line: 1313, column: 6, scope: !10577)
!10602 = !DILocalVariable(name: "alpha", scope: !10577, file: !1, line: 1316, type: !856)
!10603 = !DILocation(line: 1316, column: 5, scope: !10577)
!10604 = !DILocalVariable(name: "beta", scope: !10577, file: !1, line: 1317, type: !856)
!10605 = !DILocation(line: 1317, column: 5, scope: !10577)
!10606 = !DILocalVariable(name: "image", scope: !10577, file: !1, line: 1320, type: !1090)
!10607 = !DILocation(line: 1320, column: 6, scope: !10577)
!10608 = !DILocalVariable(name: "pixel", scope: !10577, file: !1, line: 1323, type: !1223)
!10609 = !DILocation(line: 1323, column: 5, scope: !10577)
!10610 = !DILocalVariable(name: "point", scope: !10577, file: !1, line: 1326, type: !1243)
!10611 = !DILocation(line: 1326, column: 5, scope: !10577)
!10612 = !DILocalVariable(name: "i", scope: !10577, file: !1, line: 1329, type: !880)
!10613 = !DILocation(line: 1329, column: 5, scope: !10577)
!10614 = !DILocalVariable(name: "length", scope: !10577, file: !1, line: 1332, type: !716)
!10615 = !DILocation(line: 1332, column: 5, scope: !10577)
!10616 = !DILocalVariable(name: "level", scope: !10577, file: !1, line: 1335, type: !716)
!10617 = !DILocation(line: 1335, column: 5, scope: !10577)
!10618 = !DILocation(line: 1337, column: 5, scope: !10577)
!10619 = !DILocation(line: 1337, column: 4, scope: !10577)
!10620 = !DILocation(line: 1338, column: 25, scope: !10577)
!10621 = !DILocation(line: 1338, column: 34, scope: !10577)
!10622 = !DILocation(line: 1338, column: 5, scope: !10577)
!10623 = !DILocation(line: 1338, column: 4, scope: !10577)
!10624 = !DILocation(line: 1339, column: 8, scope: !10577)
!10625 = !DILocation(line: 1340, column: 20, scope: !10577)
!10626 = !DILocation(line: 1340, column: 11, scope: !10577)
!10627 = !DILocation(line: 1340, column: 9, scope: !10577)
!10628 = !DILocation(line: 1340, column: 10, scope: !10577)
!10629 = !DILocation(line: 1341, column: 20, scope: !10577)
!10630 = !DILocation(line: 1341, column: 11, scope: !10577)
!10631 = !DILocation(line: 1341, column: 9, scope: !10577)
!10632 = !DILocation(line: 1341, column: 10, scope: !10577)
!10633 = !DILocation(line: 1342, column: 7, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1342, column: 7)
!10635 = !DILocation(line: 1342, column: 47, scope: !10634)
!10636 = !DILocation(line: 1342, column: 7, scope: !10577)
!10637 = !DILocation(line: 1344, column: 31, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !1, line: 1344, column: 11)
!10639 = distinct !DILexicalBlock(scope: !10634, file: !1, line: 1343, column: 5)
!10640 = !DILocation(line: 1344, column: 30, scope: !10638)
!10641 = !DILocation(line: 1344, column: 24, scope: !10638)
!10642 = !DILocation(line: 1344, column: 11, scope: !10638)
!10643 = !DILocation(line: 1344, column: 34, scope: !10638)
!10644 = !DILocation(line: 1344, column: 11, scope: !10639)
!10645 = !DILocation(line: 1346, column: 20, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10638, file: !1, line: 1345, column: 9)
!10647 = !DILocation(line: 1346, column: 19, scope: !10646)
!10648 = !DILocation(line: 1346, column: 11, scope: !10646)
!10649 = !DILocation(line: 1347, column: 11, scope: !10646)
!10650 = !DILocation(line: 1351, column: 37, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10652, file: !1, line: 1350, column: 13)
!10652 = distinct !DILexicalBlock(scope: !10646, file: !1, line: 1347, column: 11)
!10653 = !DILocation(line: 1351, column: 46, scope: !10651)
!10654 = !DILocation(line: 1351, column: 17, scope: !10651)
!10655 = !DILocation(line: 1351, column: 16, scope: !10651)
!10656 = !DILocation(line: 1352, column: 15, scope: !10651)
!10657 = !DILocation(line: 1354, column: 24, scope: !10652)
!10658 = !DILocation(line: 1354, column: 28, scope: !10652)
!10659 = !DILocation(line: 1355, column: 24, scope: !10652)
!10660 = !DILocation(line: 1355, column: 28, scope: !10652)
!10661 = !DILocation(line: 1357, column: 12, scope: !10646)
!10662 = !DILocation(line: 1358, column: 16, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10646, file: !1, line: 1358, column: 15)
!10664 = !DILocation(line: 1358, column: 15, scope: !10663)
!10665 = !DILocation(line: 1358, column: 18, scope: !10663)
!10666 = !DILocation(line: 1358, column: 15, scope: !10646)
!10667 = !DILocation(line: 1360, column: 20, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 1359, column: 13)
!10669 = !DILocation(line: 1361, column: 17, scope: !10668)
!10670 = !DILocation(line: 1361, column: 16, scope: !10668)
!10671 = !DILocation(line: 1362, column: 21, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10668, file: !1, line: 1362, column: 15)
!10673 = !DILocation(line: 1362, column: 20, scope: !10672)
!10674 = !DILocation(line: 1362, column: 26, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10672, file: !1, line: 1362, column: 15)
!10676 = !DILocation(line: 1362, column: 25, scope: !10675)
!10677 = !DILocation(line: 1362, column: 28, scope: !10675)
!10678 = !DILocation(line: 1362, column: 15, scope: !10672)
!10679 = !DILocation(line: 1364, column: 22, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !1, line: 1364, column: 21)
!10681 = distinct !DILexicalBlock(scope: !10675, file: !1, line: 1363, column: 15)
!10682 = !DILocation(line: 1364, column: 21, scope: !10680)
!10683 = !DILocation(line: 1364, column: 24, scope: !10680)
!10684 = !DILocation(line: 1364, column: 21, scope: !10681)
!10685 = !DILocation(line: 1365, column: 24, scope: !10680)
!10686 = !DILocation(line: 1365, column: 19, scope: !10680)
!10687 = !DILocation(line: 1367, column: 24, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10680, file: !1, line: 1367, column: 23)
!10689 = !DILocation(line: 1367, column: 23, scope: !10688)
!10690 = !DILocation(line: 1367, column: 26, scope: !10688)
!10691 = !DILocation(line: 1367, column: 23, scope: !10680)
!10692 = !DILocation(line: 1369, column: 28, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10688, file: !1, line: 1368, column: 21)
!10694 = !DILocation(line: 1370, column: 27, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10693, file: !1, line: 1370, column: 27)
!10696 = !DILocation(line: 1370, column: 33, scope: !10695)
!10697 = !DILocation(line: 1370, column: 27, scope: !10693)
!10698 = !DILocation(line: 1371, column: 25, scope: !10695)
!10699 = !DILocation(line: 1372, column: 21, scope: !10693)
!10700 = !DILocation(line: 1373, column: 25, scope: !10681)
!10701 = !DILocation(line: 1373, column: 23, scope: !10681)
!10702 = !DILocation(line: 1373, column: 19, scope: !10681)
!10703 = !DILocation(line: 1373, column: 21, scope: !10681)
!10704 = !DILocation(line: 1362, column: 15, scope: !10675)
!10705 = distinct !{!10705, !10678, !10706}
!10706 = !DILocation(line: 1374, column: 15, scope: !10672)
!10707 = !DILocation(line: 1375, column: 16, scope: !10668)
!10708 = !DILocation(line: 1375, column: 17, scope: !10668)
!10709 = !DILocation(line: 1376, column: 45, scope: !10668)
!10710 = !DILocation(line: 1376, column: 53, scope: !10668)
!10711 = !DILocation(line: 1376, column: 61, scope: !10668)
!10712 = !DILocation(line: 1376, column: 63, scope: !10668)
!10713 = !DILocation(line: 1376, column: 65, scope: !10668)
!10714 = !DILocation(line: 1377, column: 23, scope: !10668)
!10715 = !DILocation(line: 1376, column: 21, scope: !10668)
!10716 = !DILocation(line: 1376, column: 20, scope: !10668)
!10717 = !DILocation(line: 1378, column: 28, scope: !10668)
!10718 = !DILocation(line: 1378, column: 33, scope: !10668)
!10719 = !DILocation(line: 1378, column: 17, scope: !10668)
!10720 = !DILocation(line: 1378, column: 16, scope: !10668)
!10721 = !DILocation(line: 1379, column: 16, scope: !10668)
!10722 = !DILocation(line: 1380, column: 13, scope: !10668)
!10723 = !DILocation(line: 1381, column: 16, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10646, file: !1, line: 1381, column: 15)
!10725 = !DILocation(line: 1381, column: 15, scope: !10724)
!10726 = !DILocation(line: 1381, column: 18, scope: !10724)
!10727 = !DILocation(line: 1381, column: 15, scope: !10646)
!10728 = !DILocation(line: 1382, column: 14, scope: !10724)
!10729 = !DILocation(line: 1382, column: 13, scope: !10724)
!10730 = !DILocation(line: 1383, column: 9, scope: !10646)
!10731 = !DILocation(line: 1384, column: 13, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10639, file: !1, line: 1384, column: 11)
!10733 = !DILocation(line: 1384, column: 12, scope: !10732)
!10734 = !DILocation(line: 1384, column: 15, scope: !10732)
!10735 = !DILocation(line: 1384, column: 23, scope: !10732)
!10736 = !DILocation(line: 1384, column: 27, scope: !10732)
!10737 = !DILocation(line: 1384, column: 67, scope: !10732)
!10738 = !DILocation(line: 1384, column: 11, scope: !10639)
!10739 = !DILocation(line: 1386, column: 12, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10732, file: !1, line: 1385, column: 9)
!10741 = !DILocation(line: 1387, column: 16, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10740, file: !1, line: 1387, column: 15)
!10743 = !DILocation(line: 1387, column: 15, scope: !10742)
!10744 = !DILocation(line: 1387, column: 18, scope: !10742)
!10745 = !DILocation(line: 1387, column: 15, scope: !10740)
!10746 = !DILocation(line: 1389, column: 20, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10742, file: !1, line: 1388, column: 13)
!10748 = !DILocation(line: 1390, column: 17, scope: !10747)
!10749 = !DILocation(line: 1390, column: 16, scope: !10747)
!10750 = !DILocation(line: 1391, column: 21, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10747, file: !1, line: 1391, column: 15)
!10752 = !DILocation(line: 1391, column: 20, scope: !10751)
!10753 = !DILocation(line: 1391, column: 26, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10751, file: !1, line: 1391, column: 15)
!10755 = !DILocation(line: 1391, column: 25, scope: !10754)
!10756 = !DILocation(line: 1391, column: 28, scope: !10754)
!10757 = !DILocation(line: 1391, column: 15, scope: !10751)
!10758 = !DILocation(line: 1393, column: 22, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !1, line: 1393, column: 21)
!10760 = distinct !DILexicalBlock(scope: !10754, file: !1, line: 1392, column: 15)
!10761 = !DILocation(line: 1393, column: 21, scope: !10759)
!10762 = !DILocation(line: 1393, column: 24, scope: !10759)
!10763 = !DILocation(line: 1393, column: 21, scope: !10760)
!10764 = !DILocation(line: 1394, column: 24, scope: !10759)
!10765 = !DILocation(line: 1394, column: 19, scope: !10759)
!10766 = !DILocation(line: 1396, column: 24, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10759, file: !1, line: 1396, column: 23)
!10768 = !DILocation(line: 1396, column: 23, scope: !10767)
!10769 = !DILocation(line: 1396, column: 26, scope: !10767)
!10770 = !DILocation(line: 1396, column: 23, scope: !10759)
!10771 = !DILocation(line: 1398, column: 28, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10767, file: !1, line: 1397, column: 21)
!10773 = !DILocation(line: 1399, column: 27, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10772, file: !1, line: 1399, column: 27)
!10775 = !DILocation(line: 1399, column: 33, scope: !10774)
!10776 = !DILocation(line: 1399, column: 27, scope: !10772)
!10777 = !DILocation(line: 1400, column: 25, scope: !10774)
!10778 = !DILocation(line: 1401, column: 21, scope: !10772)
!10779 = !DILocation(line: 1402, column: 25, scope: !10760)
!10780 = !DILocation(line: 1402, column: 23, scope: !10760)
!10781 = !DILocation(line: 1402, column: 19, scope: !10760)
!10782 = !DILocation(line: 1402, column: 21, scope: !10760)
!10783 = !DILocation(line: 1391, column: 15, scope: !10754)
!10784 = distinct !{!10784, !10757, !10785}
!10785 = !DILocation(line: 1403, column: 15, scope: !10751)
!10786 = !DILocation(line: 1404, column: 16, scope: !10747)
!10787 = !DILocation(line: 1404, column: 17, scope: !10747)
!10788 = !DILocation(line: 1405, column: 45, scope: !10747)
!10789 = !DILocation(line: 1405, column: 53, scope: !10747)
!10790 = !DILocation(line: 1405, column: 61, scope: !10747)
!10791 = !DILocation(line: 1405, column: 63, scope: !10747)
!10792 = !DILocation(line: 1405, column: 65, scope: !10747)
!10793 = !DILocation(line: 1406, column: 23, scope: !10747)
!10794 = !DILocation(line: 1405, column: 21, scope: !10747)
!10795 = !DILocation(line: 1405, column: 20, scope: !10747)
!10796 = !DILocation(line: 1407, column: 23, scope: !10747)
!10797 = !DILocation(line: 1407, column: 21, scope: !10747)
!10798 = !DILocation(line: 1407, column: 22, scope: !10747)
!10799 = !DILocation(line: 1408, column: 23, scope: !10747)
!10800 = !DILocation(line: 1408, column: 21, scope: !10747)
!10801 = !DILocation(line: 1408, column: 22, scope: !10747)
!10802 = !DILocation(line: 1409, column: 16, scope: !10747)
!10803 = !DILocation(line: 1410, column: 13, scope: !10747)
!10804 = !DILocation(line: 1412, column: 18, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10742, file: !1, line: 1412, column: 17)
!10806 = !DILocation(line: 1412, column: 17, scope: !10805)
!10807 = !DILocation(line: 1412, column: 20, scope: !10805)
!10808 = !DILocation(line: 1412, column: 17, scope: !10742)
!10809 = !DILocation(line: 1414, column: 22, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10805, file: !1, line: 1413, column: 15)
!10811 = !DILocation(line: 1415, column: 19, scope: !10810)
!10812 = !DILocation(line: 1415, column: 18, scope: !10810)
!10813 = !DILocation(line: 1416, column: 23, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10810, file: !1, line: 1416, column: 17)
!10815 = !DILocation(line: 1416, column: 22, scope: !10814)
!10816 = !DILocation(line: 1416, column: 28, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10814, file: !1, line: 1416, column: 17)
!10818 = !DILocation(line: 1416, column: 27, scope: !10817)
!10819 = !DILocation(line: 1416, column: 30, scope: !10817)
!10820 = !DILocation(line: 1416, column: 17, scope: !10814)
!10821 = !DILocation(line: 1418, column: 24, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10823, file: !1, line: 1418, column: 23)
!10823 = distinct !DILexicalBlock(scope: !10817, file: !1, line: 1417, column: 17)
!10824 = !DILocation(line: 1418, column: 23, scope: !10822)
!10825 = !DILocation(line: 1418, column: 26, scope: !10822)
!10826 = !DILocation(line: 1418, column: 23, scope: !10823)
!10827 = !DILocation(line: 1419, column: 26, scope: !10822)
!10828 = !DILocation(line: 1419, column: 21, scope: !10822)
!10829 = !DILocation(line: 1421, column: 26, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10822, file: !1, line: 1421, column: 25)
!10831 = !DILocation(line: 1421, column: 25, scope: !10830)
!10832 = !DILocation(line: 1421, column: 28, scope: !10830)
!10833 = !DILocation(line: 1421, column: 25, scope: !10822)
!10834 = !DILocation(line: 1423, column: 30, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !1, line: 1422, column: 23)
!10836 = !DILocation(line: 1424, column: 29, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10835, file: !1, line: 1424, column: 29)
!10838 = !DILocation(line: 1424, column: 35, scope: !10837)
!10839 = !DILocation(line: 1424, column: 29, scope: !10835)
!10840 = !DILocation(line: 1425, column: 27, scope: !10837)
!10841 = !DILocation(line: 1426, column: 23, scope: !10835)
!10842 = !DILocation(line: 1427, column: 27, scope: !10823)
!10843 = !DILocation(line: 1427, column: 25, scope: !10823)
!10844 = !DILocation(line: 1427, column: 21, scope: !10823)
!10845 = !DILocation(line: 1427, column: 23, scope: !10823)
!10846 = !DILocation(line: 1416, column: 17, scope: !10817)
!10847 = distinct !{!10847, !10820, !10848}
!10848 = !DILocation(line: 1428, column: 17, scope: !10814)
!10849 = !DILocation(line: 1429, column: 18, scope: !10810)
!10850 = !DILocation(line: 1429, column: 19, scope: !10810)
!10851 = !DILocation(line: 1430, column: 47, scope: !10810)
!10852 = !DILocation(line: 1430, column: 55, scope: !10810)
!10853 = !DILocation(line: 1430, column: 63, scope: !10810)
!10854 = !DILocation(line: 1430, column: 65, scope: !10810)
!10855 = !DILocation(line: 1430, column: 67, scope: !10810)
!10856 = !DILocation(line: 1431, column: 25, scope: !10810)
!10857 = !DILocation(line: 1430, column: 23, scope: !10810)
!10858 = !DILocation(line: 1430, column: 22, scope: !10810)
!10859 = !DILocation(line: 1432, column: 26, scope: !10810)
!10860 = !DILocation(line: 1432, column: 23, scope: !10810)
!10861 = !DILocation(line: 1432, column: 24, scope: !10810)
!10862 = !DILocation(line: 1433, column: 26, scope: !10810)
!10863 = !DILocation(line: 1433, column: 23, scope: !10810)
!10864 = !DILocation(line: 1433, column: 24, scope: !10810)
!10865 = !DILocation(line: 1434, column: 18, scope: !10810)
!10866 = !DILocation(line: 1435, column: 15, scope: !10810)
!10867 = !DILocation(line: 1436, column: 16, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10740, file: !1, line: 1436, column: 15)
!10869 = !DILocation(line: 1436, column: 15, scope: !10868)
!10870 = !DILocation(line: 1436, column: 18, scope: !10868)
!10871 = !DILocation(line: 1436, column: 15, scope: !10740)
!10872 = !DILocation(line: 1437, column: 14, scope: !10868)
!10873 = !DILocation(line: 1437, column: 13, scope: !10868)
!10874 = !DILocation(line: 1438, column: 9, scope: !10740)
!10875 = !DILocation(line: 1439, column: 5, scope: !10639)
!10876 = !DILocation(line: 1440, column: 29, scope: !10577)
!10877 = !DILocation(line: 1440, column: 38, scope: !10577)
!10878 = !DILocation(line: 1440, column: 10, scope: !10577)
!10879 = !DILocation(line: 1440, column: 9, scope: !10577)
!10880 = !DILocation(line: 1441, column: 3, scope: !10577)
!10881 = !DILocation(line: 1441, column: 10, scope: !10577)
!10882 = !DILocation(line: 1441, column: 12, scope: !10577)
!10883 = !DILocation(line: 1442, column: 18, scope: !10577)
!10884 = !DILocation(line: 1442, column: 6, scope: !10577)
!10885 = distinct !{!10885, !10880, !10883}
!10886 = !DILocation(line: 1443, column: 6, scope: !10577)
!10887 = !DILocation(line: 1443, column: 4, scope: !10577)
!10888 = !DILocation(line: 1444, column: 26, scope: !10577)
!10889 = !DILocation(line: 1444, column: 35, scope: !10577)
!10890 = !DILocation(line: 1444, column: 42, scope: !10577)
!10891 = !DILocation(line: 1444, column: 9, scope: !10577)
!10892 = !DILocation(line: 1444, column: 8, scope: !10577)
!10893 = !DILocation(line: 1445, column: 7, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1445, column: 7)
!10895 = !DILocation(line: 1445, column: 13, scope: !10894)
!10896 = !DILocation(line: 1445, column: 7, scope: !10577)
!10897 = !DILocation(line: 1447, column: 35, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !1, line: 1446, column: 5)
!10899 = !DILocation(line: 1448, column: 30, scope: !10898)
!10900 = !DILocation(line: 1447, column: 14, scope: !10898)
!10901 = !DILocation(line: 1449, column: 7, scope: !10898)
!10902 = !DILocation(line: 1451, column: 24, scope: !10577)
!10903 = !DILocation(line: 1451, column: 3, scope: !10577)
!10904 = !DILocation(line: 1452, column: 39, scope: !10577)
!10905 = !DILocation(line: 1452, column: 45, scope: !10577)
!10906 = !DILocation(line: 1452, column: 54, scope: !10577)
!10907 = !DILocation(line: 1452, column: 59, scope: !10577)
!10908 = !DILocation(line: 1452, column: 62, scope: !10577)
!10909 = !DILocation(line: 1452, column: 69, scope: !10577)
!10910 = !DILocation(line: 1453, column: 11, scope: !10577)
!10911 = !DILocation(line: 1453, column: 19, scope: !10577)
!10912 = !DILocation(line: 1453, column: 28, scope: !10577)
!10913 = !DILocation(line: 1452, column: 10, scope: !10577)
!10914 = !DILocation(line: 1454, column: 15, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1454, column: 7)
!10916 = !DILocation(line: 1454, column: 8, scope: !10915)
!10917 = !DILocation(line: 1454, column: 18, scope: !10915)
!10918 = !DILocation(line: 1454, column: 23, scope: !10915)
!10919 = !DILocation(line: 1455, column: 22, scope: !10915)
!10920 = !DILocation(line: 1455, column: 8, scope: !10915)
!10921 = !DILocation(line: 1455, column: 37, scope: !10915)
!10922 = !DILocation(line: 1455, column: 43, scope: !10915)
!10923 = !DILocation(line: 1456, column: 22, scope: !10915)
!10924 = !DILocation(line: 1456, column: 8, scope: !10915)
!10925 = !DILocation(line: 1456, column: 32, scope: !10915)
!10926 = !DILocation(line: 1456, column: 38, scope: !10915)
!10927 = !DILocation(line: 1457, column: 22, scope: !10915)
!10928 = !DILocation(line: 1457, column: 8, scope: !10915)
!10929 = !DILocation(line: 1457, column: 37, scope: !10915)
!10930 = !DILocation(line: 1457, column: 43, scope: !10915)
!10931 = !DILocation(line: 1458, column: 22, scope: !10915)
!10932 = !DILocation(line: 1458, column: 8, scope: !10915)
!10933 = !DILocation(line: 1458, column: 31, scope: !10915)
!10934 = !DILocation(line: 1458, column: 37, scope: !10915)
!10935 = !DILocation(line: 1459, column: 22, scope: !10915)
!10936 = !DILocation(line: 1459, column: 8, scope: !10915)
!10937 = !DILocation(line: 1459, column: 38, scope: !10915)
!10938 = !DILocation(line: 1459, column: 44, scope: !10915)
!10939 = !DILocation(line: 1460, column: 22, scope: !10915)
!10940 = !DILocation(line: 1460, column: 8, scope: !10915)
!10941 = !DILocation(line: 1460, column: 37, scope: !10915)
!10942 = !DILocation(line: 1454, column: 7, scope: !10577)
!10943 = !DILocalVariable(name: "name", scope: !10944, file: !1, line: 1463, type: !967)
!10944 = distinct !DILexicalBlock(scope: !10915, file: !1, line: 1461, column: 5)
!10945 = !DILocation(line: 1463, column: 9, scope: !10944)
!10946 = !DILocation(line: 1465, column: 31, scope: !10944)
!10947 = !DILocation(line: 1465, column: 36, scope: !10944)
!10948 = !DILocation(line: 1465, column: 14, scope: !10944)
!10949 = !DILocation(line: 1466, column: 14, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !1, line: 1466, column: 7)
!10951 = !DILocation(line: 1466, column: 27, scope: !10950)
!10952 = !DILocation(line: 1466, column: 20, scope: !10950)
!10953 = !DILocation(line: 1466, column: 32, scope: !10950)
!10954 = !DILocation(line: 1466, column: 18, scope: !10950)
!10955 = !DILocation(line: 1466, column: 13, scope: !10950)
!10956 = !DILocation(line: 1466, column: 12, scope: !10950)
!10957 = !DILocation(line: 1466, column: 37, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10950, file: !1, line: 1466, column: 7)
!10959 = !DILocation(line: 1466, column: 41, scope: !10958)
!10960 = !DILocation(line: 1466, column: 39, scope: !10958)
!10961 = !DILocation(line: 1466, column: 7, scope: !10950)
!10962 = !DILocation(line: 1468, column: 14, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !1, line: 1468, column: 13)
!10964 = distinct !DILexicalBlock(scope: !10958, file: !1, line: 1467, column: 7)
!10965 = !DILocation(line: 1468, column: 13, scope: !10963)
!10966 = !DILocation(line: 1468, column: 16, scope: !10963)
!10967 = !DILocation(line: 1468, column: 13, scope: !10964)
!10968 = !DILocation(line: 1469, column: 11, scope: !10963)
!10969 = !DILocation(line: 1470, column: 14, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10964, file: !1, line: 1470, column: 13)
!10971 = !DILocation(line: 1470, column: 13, scope: !10970)
!10972 = !DILocation(line: 1470, column: 16, scope: !10970)
!10973 = !DILocation(line: 1470, column: 13, scope: !10964)
!10974 = !DILocation(line: 1472, column: 14, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10970, file: !1, line: 1471, column: 11)
!10976 = !DILocation(line: 1472, column: 15, scope: !10975)
!10977 = !DILocation(line: 1473, column: 13, scope: !10975)
!10978 = !DILocation(line: 1475, column: 7, scope: !10964)
!10979 = !DILocation(line: 1466, column: 48, scope: !10958)
!10980 = !DILocation(line: 1466, column: 7, scope: !10958)
!10981 = distinct !{!10981, !10961, !10982}
!10982 = !DILocation(line: 1475, column: 7, scope: !10950)
!10983 = !DILocation(line: 1476, column: 19, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10944, file: !1, line: 1476, column: 11)
!10985 = !DILocation(line: 1476, column: 12, scope: !10984)
!10986 = !DILocation(line: 1476, column: 25, scope: !10984)
!10987 = !DILocation(line: 1476, column: 30, scope: !10984)
!10988 = !DILocation(line: 1477, column: 34, scope: !10984)
!10989 = !DILocation(line: 1477, column: 43, scope: !10984)
!10990 = !DILocation(line: 1477, column: 51, scope: !10984)
!10991 = !DILocation(line: 1477, column: 12, scope: !10984)
!10992 = !DILocation(line: 1477, column: 57, scope: !10984)
!10993 = !DILocation(line: 1476, column: 11, scope: !10944)
!10994 = !DILocalVariable(name: "color", scope: !10995, file: !1, line: 1480, type: !1312)
!10995 = distinct !DILexicalBlock(scope: !10984, file: !1, line: 1478, column: 9)
!10996 = !DILocation(line: 1480, column: 14, scope: !10995)
!10997 = !DILocation(line: 1482, column: 61, scope: !10995)
!10998 = !DILocation(line: 1482, column: 70, scope: !10995)
!10999 = !DILocation(line: 1483, column: 13, scope: !10995)
!11000 = !DILocation(line: 1482, column: 39, scope: !10995)
!11001 = !DILocation(line: 1482, column: 17, scope: !10995)
!11002 = !DILocation(line: 1482, column: 16, scope: !10995)
!11003 = !DILocation(line: 1484, column: 15, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10995, file: !1, line: 1484, column: 15)
!11005 = !DILocation(line: 1484, column: 21, scope: !11004)
!11006 = !DILocation(line: 1484, column: 15, scope: !10995)
!11007 = !DILocation(line: 1486, column: 23, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11004, file: !1, line: 1485, column: 13)
!11009 = !DILocation(line: 1486, column: 22, scope: !11008)
!11010 = !DILocation(line: 1487, column: 25, scope: !11008)
!11011 = !DILocation(line: 1487, column: 18, scope: !11008)
!11012 = !DILocation(line: 1487, column: 16, scope: !11008)
!11013 = !DILocation(line: 1488, column: 13, scope: !11008)
!11014 = !DILocation(line: 1490, column: 34, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11004, file: !1, line: 1490, column: 17)
!11016 = !DILocation(line: 1490, column: 46, scope: !11015)
!11017 = !DILocation(line: 1490, column: 55, scope: !11015)
!11018 = !DILocation(line: 1490, column: 17, scope: !11015)
!11019 = !DILocation(line: 1490, column: 66, scope: !11015)
!11020 = !DILocation(line: 1490, column: 17, scope: !11004)
!11021 = !DILocation(line: 1492, column: 44, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11015, file: !1, line: 1491, column: 15)
!11023 = !DILocation(line: 1492, column: 53, scope: !11022)
!11024 = !DILocation(line: 1492, column: 75, scope: !11022)
!11025 = !DILocation(line: 1492, column: 60, scope: !11022)
!11026 = !DILocation(line: 1493, column: 19, scope: !11022)
!11027 = !DILocation(line: 1492, column: 24, scope: !11022)
!11028 = !DILocation(line: 1494, column: 27, scope: !11022)
!11029 = !DILocation(line: 1494, column: 20, scope: !11022)
!11030 = !DILocation(line: 1494, column: 18, scope: !11022)
!11031 = !DILocation(line: 1495, column: 15, scope: !11022)
!11032 = !DILocation(line: 1496, column: 9, scope: !10995)
!11033 = !DILocation(line: 1497, column: 5, scope: !10944)
!11034 = !DILocation(line: 1498, column: 27, scope: !10577)
!11035 = !DILocation(line: 1498, column: 34, scope: !10577)
!11036 = !DILocation(line: 1498, column: 10, scope: !10577)
!11037 = !DILocation(line: 1499, column: 15, scope: !10577)
!11038 = !DILocation(line: 1499, column: 3, scope: !10577)
!11039 = !DILocation(line: 1500, column: 7, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1500, column: 7)
!11041 = !DILocation(line: 1500, column: 15, scope: !11040)
!11042 = !DILocation(line: 1500, column: 7, scope: !10577)
!11043 = !DILocation(line: 1502, column: 15, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !1, line: 1501, column: 5)
!11045 = !DILocation(line: 1502, column: 7, scope: !11044)
!11046 = !DILocation(line: 1504, column: 52, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11044, file: !1, line: 1503, column: 7)
!11048 = !DILocation(line: 1504, column: 46, scope: !11047)
!11049 = !DILocation(line: 1504, column: 45, scope: !11047)
!11050 = !DILocation(line: 1504, column: 26, scope: !11047)
!11051 = !DILocation(line: 1505, column: 54, scope: !11047)
!11052 = !DILocation(line: 1505, column: 48, scope: !11047)
!11053 = !DILocation(line: 1505, column: 47, scope: !11047)
!11054 = !DILocation(line: 1505, column: 28, scope: !11047)
!11055 = !DILocation(line: 1506, column: 53, scope: !11047)
!11056 = !DILocation(line: 1506, column: 47, scope: !11047)
!11057 = !DILocation(line: 1506, column: 46, scope: !11047)
!11058 = !DILocation(line: 1506, column: 27, scope: !11047)
!11059 = !DILocalVariable(name: "alpha", scope: !11060, file: !1, line: 1510, type: !856)
!11060 = distinct !DILexicalBlock(scope: !11047, file: !1, line: 1508, column: 9)
!11061 = !DILocation(line: 1510, column: 13, scope: !11060)
!11062 = !DILocation(line: 1512, column: 21, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11060, file: !1, line: 1512, column: 15)
!11064 = !DILocation(line: 1512, column: 27, scope: !11063)
!11065 = !DILocation(line: 1512, column: 15, scope: !11060)
!11066 = !DILocation(line: 1513, column: 13, scope: !11063)
!11067 = !DILocation(line: 1514, column: 40, scope: !11060)
!11068 = !DILocation(line: 1514, column: 39, scope: !11060)
!11069 = !DILocation(line: 1514, column: 16, scope: !11060)
!11070 = !DILocation(line: 1515, column: 18, scope: !11060)
!11071 = !DILocation(line: 1515, column: 11, scope: !11060)
!11072 = !DILocation(line: 1519, column: 15, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1, line: 1519, column: 15)
!11074 = distinct !DILexicalBlock(scope: !11047, file: !1, line: 1518, column: 9)
!11075 = !DILocation(line: 1519, column: 22, scope: !11073)
!11076 = !DILocation(line: 1519, column: 33, scope: !11073)
!11077 = !DILocation(line: 1519, column: 15, scope: !11074)
!11078 = !DILocation(line: 1521, column: 43, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11073, file: !1, line: 1520, column: 13)
!11080 = !DILocation(line: 1523, column: 17, scope: !11079)
!11081 = !DILocation(line: 1523, column: 24, scope: !11079)
!11082 = !DILocation(line: 1521, column: 22, scope: !11079)
!11083 = !DILocation(line: 1524, column: 15, scope: !11079)
!11084 = !DILocation(line: 1526, column: 37, scope: !11074)
!11085 = !DILocation(line: 1526, column: 31, scope: !11074)
!11086 = !DILocation(line: 1526, column: 30, scope: !11074)
!11087 = !DILocation(line: 1526, column: 11, scope: !11074)
!11088 = !DILocation(line: 1530, column: 31, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11047, file: !1, line: 1529, column: 9)
!11090 = !DILocation(line: 1530, column: 30, scope: !11089)
!11091 = !DILocation(line: 1530, column: 11, scope: !11089)
!11092 = !DILocation(line: 1533, column: 11, scope: !11047)
!11093 = !DILocation(line: 1535, column: 35, scope: !11044)
!11094 = !DILocation(line: 1536, column: 42, scope: !11044)
!11095 = !DILocation(line: 1535, column: 14, scope: !11044)
!11096 = !DILocation(line: 1537, column: 7, scope: !11044)
!11097 = !DILocation(line: 1539, column: 11, scope: !10577)
!11098 = !DILocation(line: 1539, column: 3, scope: !10577)
!11099 = !DILocation(line: 1544, column: 25, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !1, line: 1544, column: 11)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1543, column: 5)
!11102 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1540, column: 3)
!11103 = !DILocation(line: 1544, column: 11, scope: !11100)
!11104 = !DILocation(line: 1544, column: 37, scope: !11100)
!11105 = !DILocation(line: 1544, column: 11, scope: !11101)
!11106 = !DILocation(line: 1545, column: 39, scope: !11100)
!11107 = !DILocation(line: 1545, column: 38, scope: !11100)
!11108 = !DILocation(line: 1545, column: 9, scope: !11100)
!11109 = !DILocation(line: 1546, column: 7, scope: !11101)
!11110 = !DILocation(line: 1551, column: 25, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !1, line: 1551, column: 11)
!11112 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1550, column: 5)
!11113 = !DILocation(line: 1551, column: 11, scope: !11111)
!11114 = !DILocation(line: 1551, column: 37, scope: !11111)
!11115 = !DILocation(line: 1551, column: 11, scope: !11112)
!11116 = !DILocation(line: 1552, column: 35, scope: !11111)
!11117 = !DILocation(line: 1552, column: 29, scope: !11111)
!11118 = !DILocation(line: 1552, column: 28, scope: !11111)
!11119 = !DILocation(line: 1552, column: 9, scope: !11111)
!11120 = !DILocation(line: 1553, column: 7, scope: !11112)
!11121 = !DILocation(line: 1558, column: 26, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1, line: 1558, column: 11)
!11123 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1557, column: 5)
!11124 = !DILocation(line: 1558, column: 11, scope: !11122)
!11125 = !DILocation(line: 1558, column: 46, scope: !11122)
!11126 = !DILocation(line: 1558, column: 11, scope: !11123)
!11127 = !DILocalVariable(name: "channel_info", scope: !11128, file: !1, line: 1561, type: !2357)
!11128 = distinct !DILexicalBlock(scope: !11122, file: !1, line: 1559, column: 9)
!11129 = !DILocation(line: 1561, column: 13, scope: !11128)
!11130 = !DILocalVariable(name: "flags", scope: !11128, file: !1, line: 1564, type: !2375)
!11131 = !DILocation(line: 1564, column: 13, scope: !11128)
!11132 = !DILocation(line: 1566, column: 31, scope: !11128)
!11133 = !DILocation(line: 1566, column: 37, scope: !11128)
!11134 = !DILocation(line: 1566, column: 17, scope: !11128)
!11135 = !DILocation(line: 1566, column: 16, scope: !11128)
!11136 = !DILocation(line: 1567, column: 15, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11128, file: !1, line: 1567, column: 15)
!11138 = !DILocation(line: 1567, column: 22, scope: !11137)
!11139 = !DILocation(line: 1567, column: 33, scope: !11137)
!11140 = !DILocation(line: 1567, column: 15, scope: !11128)
!11141 = !DILocation(line: 1568, column: 21, scope: !11137)
!11142 = !DILocation(line: 1568, column: 13, scope: !11137)
!11143 = !DILocation(line: 1572, column: 22, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !1, line: 1572, column: 21)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 1571, column: 15)
!11146 = distinct !DILexicalBlock(scope: !11137, file: !1, line: 1569, column: 13)
!11147 = !DILocation(line: 1572, column: 28, scope: !11144)
!11148 = !DILocation(line: 1572, column: 40, scope: !11144)
!11149 = !DILocation(line: 1572, column: 21, scope: !11145)
!11150 = !DILocation(line: 1573, column: 19, scope: !11144)
!11151 = !DILocation(line: 1574, column: 37, scope: !11145)
!11152 = !DILocation(line: 1574, column: 17, scope: !11145)
!11153 = !DILocation(line: 1578, column: 22, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !1, line: 1578, column: 21)
!11155 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 1577, column: 15)
!11156 = !DILocation(line: 1578, column: 28, scope: !11154)
!11157 = !DILocation(line: 1578, column: 42, scope: !11154)
!11158 = !DILocation(line: 1578, column: 21, scope: !11155)
!11159 = !DILocation(line: 1579, column: 19, scope: !11154)
!11160 = !DILocation(line: 1580, column: 37, scope: !11155)
!11161 = !DILocation(line: 1580, column: 17, scope: !11155)
!11162 = !DILocation(line: 1584, column: 22, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1, line: 1584, column: 21)
!11164 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 1583, column: 15)
!11165 = !DILocation(line: 1584, column: 28, scope: !11163)
!11166 = !DILocation(line: 1584, column: 39, scope: !11163)
!11167 = !DILocation(line: 1584, column: 21, scope: !11164)
!11168 = !DILocation(line: 1585, column: 19, scope: !11163)
!11169 = !DILocation(line: 1586, column: 37, scope: !11164)
!11170 = !DILocation(line: 1586, column: 17, scope: !11164)
!11171 = !DILocation(line: 1590, column: 22, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !1, line: 1590, column: 21)
!11173 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 1589, column: 15)
!11174 = !DILocation(line: 1590, column: 28, scope: !11172)
!11175 = !DILocation(line: 1590, column: 40, scope: !11172)
!11176 = !DILocation(line: 1590, column: 21, scope: !11173)
!11177 = !DILocation(line: 1591, column: 19, scope: !11172)
!11178 = !DILocation(line: 1592, column: 37, scope: !11173)
!11179 = !DILocation(line: 1592, column: 17, scope: !11173)
!11180 = !DILocation(line: 1596, column: 22, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !1, line: 1596, column: 21)
!11182 = distinct !DILexicalBlock(scope: !11146, file: !1, line: 1595, column: 15)
!11183 = !DILocation(line: 1596, column: 28, scope: !11181)
!11184 = !DILocation(line: 1596, column: 40, scope: !11181)
!11185 = !DILocation(line: 1596, column: 21, scope: !11182)
!11186 = !DILocation(line: 1597, column: 19, scope: !11181)
!11187 = !DILocation(line: 1598, column: 37, scope: !11182)
!11188 = !DILocation(line: 1598, column: 17, scope: !11182)
!11189 = !DILocation(line: 1601, column: 17, scope: !11146)
!11190 = !DILocation(line: 1603, column: 19, scope: !11128)
!11191 = !DILocation(line: 1603, column: 11, scope: !11128)
!11192 = !DILocation(line: 1607, column: 20, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !1, line: 1607, column: 19)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 1606, column: 13)
!11195 = distinct !DILexicalBlock(scope: !11128, file: !1, line: 1604, column: 11)
!11196 = !DILocation(line: 1607, column: 26, scope: !11193)
!11197 = !DILocation(line: 1607, column: 38, scope: !11193)
!11198 = !DILocation(line: 1607, column: 19, scope: !11194)
!11199 = !DILocation(line: 1608, column: 17, scope: !11193)
!11200 = !DILocation(line: 1609, column: 35, scope: !11194)
!11201 = !DILocation(line: 1609, column: 15, scope: !11194)
!11202 = !DILocation(line: 1613, column: 20, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !1, line: 1613, column: 19)
!11204 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 1612, column: 13)
!11205 = !DILocation(line: 1613, column: 26, scope: !11203)
!11206 = !DILocation(line: 1613, column: 40, scope: !11203)
!11207 = !DILocation(line: 1613, column: 19, scope: !11204)
!11208 = !DILocation(line: 1614, column: 17, scope: !11203)
!11209 = !DILocation(line: 1615, column: 35, scope: !11204)
!11210 = !DILocation(line: 1615, column: 15, scope: !11204)
!11211 = !DILocation(line: 1619, column: 20, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !1, line: 1619, column: 19)
!11213 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 1618, column: 13)
!11214 = !DILocation(line: 1619, column: 26, scope: !11212)
!11215 = !DILocation(line: 1619, column: 37, scope: !11212)
!11216 = !DILocation(line: 1619, column: 19, scope: !11213)
!11217 = !DILocation(line: 1620, column: 17, scope: !11212)
!11218 = !DILocation(line: 1621, column: 35, scope: !11213)
!11219 = !DILocation(line: 1621, column: 15, scope: !11213)
!11220 = !DILocation(line: 1625, column: 20, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !1, line: 1625, column: 19)
!11222 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 1624, column: 13)
!11223 = !DILocation(line: 1625, column: 26, scope: !11221)
!11224 = !DILocation(line: 1625, column: 38, scope: !11221)
!11225 = !DILocation(line: 1625, column: 19, scope: !11222)
!11226 = !DILocation(line: 1626, column: 17, scope: !11221)
!11227 = !DILocation(line: 1627, column: 35, scope: !11222)
!11228 = !DILocation(line: 1627, column: 15, scope: !11222)
!11229 = !DILocation(line: 1631, column: 20, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !1, line: 1631, column: 19)
!11231 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 1630, column: 13)
!11232 = !DILocation(line: 1631, column: 26, scope: !11230)
!11233 = !DILocation(line: 1631, column: 38, scope: !11230)
!11234 = !DILocation(line: 1631, column: 19, scope: !11231)
!11235 = !DILocation(line: 1632, column: 17, scope: !11230)
!11236 = !DILocation(line: 1633, column: 35, scope: !11231)
!11237 = !DILocation(line: 1633, column: 15, scope: !11231)
!11238 = !DILocation(line: 1636, column: 15, scope: !11195)
!11239 = !DILocation(line: 1639, column: 25, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11123, file: !1, line: 1639, column: 11)
!11241 = !DILocation(line: 1639, column: 11, scope: !11240)
!11242 = !DILocation(line: 1639, column: 37, scope: !11240)
!11243 = !DILocation(line: 1639, column: 11, scope: !11123)
!11244 = !DILocation(line: 1640, column: 35, scope: !11240)
!11245 = !DILocation(line: 1640, column: 29, scope: !11240)
!11246 = !DILocation(line: 1640, column: 28, scope: !11240)
!11247 = !DILocation(line: 1640, column: 9, scope: !11240)
!11248 = !DILocation(line: 1641, column: 7, scope: !11123)
!11249 = !DILocation(line: 1646, column: 26, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !1, line: 1646, column: 11)
!11251 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1645, column: 5)
!11252 = !DILocation(line: 1646, column: 11, scope: !11250)
!11253 = !DILocation(line: 1646, column: 44, scope: !11250)
!11254 = !DILocation(line: 1646, column: 11, scope: !11251)
!11255 = !DILocation(line: 1647, column: 36, scope: !11250)
!11256 = !DILocation(line: 1647, column: 44, scope: !11250)
!11257 = !DILocation(line: 1647, column: 50, scope: !11250)
!11258 = !DILocation(line: 1647, column: 58, scope: !11250)
!11259 = !DILocation(line: 1647, column: 65, scope: !11250)
!11260 = !DILocation(line: 1647, column: 16, scope: !11250)
!11261 = !DILocation(line: 1647, column: 9, scope: !11250)
!11262 = !DILocation(line: 1648, column: 7, scope: !11251)
!11263 = !DILocation(line: 1653, column: 25, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !1, line: 1653, column: 11)
!11265 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1652, column: 5)
!11266 = !DILocation(line: 1653, column: 11, scope: !11264)
!11267 = !DILocation(line: 1653, column: 37, scope: !11264)
!11268 = !DILocation(line: 1653, column: 11, scope: !11265)
!11269 = !DILocation(line: 1654, column: 35, scope: !11264)
!11270 = !DILocation(line: 1654, column: 29, scope: !11264)
!11271 = !DILocation(line: 1654, column: 28, scope: !11264)
!11272 = !DILocation(line: 1654, column: 9, scope: !11264)
!11273 = !DILocation(line: 1655, column: 7, scope: !11265)
!11274 = !DILocation(line: 1660, column: 26, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !1, line: 1660, column: 11)
!11276 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1659, column: 5)
!11277 = !DILocation(line: 1660, column: 11, scope: !11275)
!11278 = !DILocation(line: 1660, column: 47, scope: !11275)
!11279 = !DILocation(line: 1660, column: 11, scope: !11276)
!11280 = !DILocation(line: 1661, column: 36, scope: !11275)
!11281 = !DILocation(line: 1661, column: 44, scope: !11275)
!11282 = !DILocation(line: 1661, column: 50, scope: !11275)
!11283 = !DILocation(line: 1661, column: 58, scope: !11275)
!11284 = !DILocation(line: 1661, column: 65, scope: !11275)
!11285 = !DILocation(line: 1661, column: 16, scope: !11275)
!11286 = !DILocation(line: 1661, column: 9, scope: !11275)
!11287 = !DILocation(line: 1662, column: 25, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11276, file: !1, line: 1662, column: 11)
!11289 = !DILocation(line: 1662, column: 11, scope: !11288)
!11290 = !DILocation(line: 1662, column: 37, scope: !11288)
!11291 = !DILocation(line: 1662, column: 11, scope: !11276)
!11292 = !DILocation(line: 1664, column: 15, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !1, line: 1664, column: 15)
!11294 = distinct !DILexicalBlock(scope: !11288, file: !1, line: 1663, column: 9)
!11295 = !DILocation(line: 1664, column: 22, scope: !11293)
!11296 = !DILocation(line: 1664, column: 33, scope: !11293)
!11297 = !DILocation(line: 1664, column: 15, scope: !11294)
!11298 = !DILocation(line: 1666, column: 43, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11293, file: !1, line: 1665, column: 13)
!11300 = !DILocation(line: 1668, column: 17, scope: !11299)
!11301 = !DILocation(line: 1668, column: 24, scope: !11299)
!11302 = !DILocation(line: 1666, column: 22, scope: !11299)
!11303 = !DILocation(line: 1669, column: 15, scope: !11299)
!11304 = !DILocation(line: 1671, column: 37, scope: !11294)
!11305 = !DILocation(line: 1671, column: 31, scope: !11294)
!11306 = !DILocation(line: 1671, column: 30, scope: !11294)
!11307 = !DILocation(line: 1671, column: 11, scope: !11294)
!11308 = !DILocation(line: 1673, column: 7, scope: !11276)
!11309 = !DILocation(line: 1678, column: 25, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !1, line: 1678, column: 11)
!11311 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1677, column: 5)
!11312 = !DILocation(line: 1678, column: 11, scope: !11310)
!11313 = !DILocation(line: 1678, column: 37, scope: !11310)
!11314 = !DILocation(line: 1678, column: 11, scope: !11311)
!11315 = !DILocation(line: 1679, column: 25, scope: !11310)
!11316 = !DILocation(line: 1679, column: 32, scope: !11310)
!11317 = !DILocation(line: 1679, column: 16, scope: !11310)
!11318 = !DILocation(line: 1679, column: 9, scope: !11310)
!11319 = !DILocation(line: 1680, column: 25, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11311, file: !1, line: 1680, column: 11)
!11321 = !DILocation(line: 1680, column: 11, scope: !11320)
!11322 = !DILocation(line: 1680, column: 39, scope: !11320)
!11323 = !DILocation(line: 1680, column: 11, scope: !11311)
!11324 = !DILocalVariable(name: "hue", scope: !11325, file: !1, line: 1683, type: !856)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !1, line: 1681, column: 9)
!11326 = !DILocation(line: 1683, column: 13, scope: !11325)
!11327 = !DILocalVariable(name: "lightness", scope: !11325, file: !1, line: 1684, type: !856)
!11328 = !DILocation(line: 1684, column: 13, scope: !11325)
!11329 = !DILocalVariable(name: "saturation", scope: !11325, file: !1, line: 1685, type: !856)
!11330 = !DILocation(line: 1685, column: 13, scope: !11325)
!11331 = !DILocation(line: 1687, column: 48, scope: !11325)
!11332 = !DILocation(line: 1687, column: 27, scope: !11325)
!11333 = !DILocation(line: 1687, column: 74, scope: !11325)
!11334 = !DILocation(line: 1687, column: 53, scope: !11325)
!11335 = !DILocation(line: 1688, column: 34, scope: !11325)
!11336 = !DILocation(line: 1688, column: 13, scope: !11325)
!11337 = !DILocation(line: 1687, column: 11, scope: !11325)
!11338 = !DILocation(line: 1689, column: 18, scope: !11325)
!11339 = !DILocation(line: 1689, column: 11, scope: !11325)
!11340 = !DILocation(line: 1691, column: 7, scope: !11311)
!11341 = !DILocation(line: 1696, column: 26, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11343, file: !1, line: 1696, column: 11)
!11343 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1695, column: 5)
!11344 = !DILocation(line: 1696, column: 12, scope: !11342)
!11345 = !DILocation(line: 1696, column: 48, scope: !11342)
!11346 = !DILocation(line: 1696, column: 54, scope: !11342)
!11347 = !DILocation(line: 1697, column: 26, scope: !11342)
!11348 = !DILocation(line: 1697, column: 12, scope: !11342)
!11349 = !DILocation(line: 1697, column: 49, scope: !11342)
!11350 = !DILocation(line: 1697, column: 55, scope: !11342)
!11351 = !DILocation(line: 1698, column: 26, scope: !11342)
!11352 = !DILocation(line: 1698, column: 12, scope: !11342)
!11353 = !DILocation(line: 1698, column: 49, scope: !11342)
!11354 = !DILocation(line: 1698, column: 55, scope: !11342)
!11355 = !DILocation(line: 1699, column: 26, scope: !11342)
!11356 = !DILocation(line: 1699, column: 12, scope: !11342)
!11357 = !DILocation(line: 1699, column: 47, scope: !11342)
!11358 = !DILocation(line: 1699, column: 53, scope: !11342)
!11359 = !DILocation(line: 1700, column: 26, scope: !11342)
!11360 = !DILocation(line: 1700, column: 12, scope: !11342)
!11361 = !DILocation(line: 1700, column: 51, scope: !11342)
!11362 = !DILocation(line: 1700, column: 57, scope: !11342)
!11363 = !DILocation(line: 1701, column: 26, scope: !11342)
!11364 = !DILocation(line: 1701, column: 12, scope: !11342)
!11365 = !DILocation(line: 1701, column: 51, scope: !11342)
!11366 = !DILocation(line: 1701, column: 57, scope: !11342)
!11367 = !DILocation(line: 1702, column: 26, scope: !11342)
!11368 = !DILocation(line: 1702, column: 12, scope: !11342)
!11369 = !DILocation(line: 1702, column: 61, scope: !11342)
!11370 = !DILocation(line: 1696, column: 11, scope: !11343)
!11371 = !DILocation(line: 1703, column: 36, scope: !11342)
!11372 = !DILocation(line: 1703, column: 44, scope: !11342)
!11373 = !DILocation(line: 1703, column: 50, scope: !11342)
!11374 = !DILocation(line: 1703, column: 58, scope: !11342)
!11375 = !DILocation(line: 1703, column: 64, scope: !11342)
!11376 = !DILocation(line: 1703, column: 67, scope: !11342)
!11377 = !DILocation(line: 1703, column: 16, scope: !11342)
!11378 = !DILocation(line: 1703, column: 9, scope: !11342)
!11379 = !DILocation(line: 1704, column: 25, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11343, file: !1, line: 1704, column: 11)
!11381 = !DILocation(line: 1704, column: 11, scope: !11380)
!11382 = !DILocation(line: 1704, column: 54, scope: !11380)
!11383 = !DILocation(line: 1704, column: 11, scope: !11343)
!11384 = !DILocation(line: 1705, column: 16, scope: !11380)
!11385 = !DILocation(line: 1705, column: 23, scope: !11380)
!11386 = !DILocation(line: 1705, column: 9, scope: !11380)
!11387 = !DILocation(line: 1706, column: 25, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11343, file: !1, line: 1706, column: 11)
!11389 = !DILocation(line: 1706, column: 11, scope: !11388)
!11390 = !DILocation(line: 1706, column: 54, scope: !11388)
!11391 = !DILocation(line: 1706, column: 11, scope: !11343)
!11392 = !DILocation(line: 1707, column: 16, scope: !11388)
!11393 = !DILocation(line: 1707, column: 23, scope: !11388)
!11394 = !DILocation(line: 1707, column: 9, scope: !11388)
!11395 = !DILocation(line: 1708, column: 25, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11343, file: !1, line: 1708, column: 11)
!11397 = !DILocation(line: 1708, column: 11, scope: !11396)
!11398 = !DILocation(line: 1708, column: 45, scope: !11396)
!11399 = !DILocation(line: 1708, column: 11, scope: !11343)
!11400 = !DILocation(line: 1709, column: 29, scope: !11396)
!11401 = !DILocation(line: 1709, column: 28, scope: !11396)
!11402 = !DILocation(line: 1709, column: 9, scope: !11396)
!11403 = !DILocation(line: 1710, column: 25, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11343, file: !1, line: 1710, column: 11)
!11405 = !DILocation(line: 1710, column: 11, scope: !11404)
!11406 = !DILocation(line: 1710, column: 37, scope: !11404)
!11407 = !DILocation(line: 1710, column: 11, scope: !11343)
!11408 = !DILocation(line: 1711, column: 25, scope: !11404)
!11409 = !DILocation(line: 1711, column: 16, scope: !11404)
!11410 = !DILocation(line: 1711, column: 9, scope: !11404)
!11411 = !DILocation(line: 1712, column: 7, scope: !11343)
!11412 = !DILocation(line: 1717, column: 25, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !1, line: 1717, column: 11)
!11414 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1716, column: 5)
!11415 = !DILocation(line: 1717, column: 11, scope: !11413)
!11416 = !DILocation(line: 1717, column: 37, scope: !11413)
!11417 = !DILocation(line: 1717, column: 11, scope: !11414)
!11418 = !DILocation(line: 1718, column: 25, scope: !11413)
!11419 = !DILocation(line: 1718, column: 16, scope: !11413)
!11420 = !DILocation(line: 1718, column: 9, scope: !11413)
!11421 = !DILocation(line: 1719, column: 7, scope: !11414)
!11422 = !DILocation(line: 1724, column: 25, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !1, line: 1724, column: 11)
!11424 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1723, column: 5)
!11425 = !DILocation(line: 1724, column: 11, scope: !11423)
!11426 = !DILocation(line: 1724, column: 45, scope: !11423)
!11427 = !DILocation(line: 1724, column: 11, scope: !11424)
!11428 = !DILocalVariable(name: "hue", scope: !11429, file: !1, line: 1727, type: !856)
!11429 = distinct !DILexicalBlock(scope: !11423, file: !1, line: 1725, column: 9)
!11430 = !DILocation(line: 1727, column: 13, scope: !11429)
!11431 = !DILocalVariable(name: "lightness", scope: !11429, file: !1, line: 1728, type: !856)
!11432 = !DILocation(line: 1728, column: 13, scope: !11429)
!11433 = !DILocalVariable(name: "saturation", scope: !11429, file: !1, line: 1729, type: !856)
!11434 = !DILocation(line: 1729, column: 13, scope: !11429)
!11435 = !DILocation(line: 1731, column: 48, scope: !11429)
!11436 = !DILocation(line: 1731, column: 27, scope: !11429)
!11437 = !DILocation(line: 1731, column: 74, scope: !11429)
!11438 = !DILocation(line: 1731, column: 53, scope: !11429)
!11439 = !DILocation(line: 1732, column: 34, scope: !11429)
!11440 = !DILocation(line: 1732, column: 13, scope: !11429)
!11441 = !DILocation(line: 1731, column: 11, scope: !11429)
!11442 = !DILocation(line: 1733, column: 18, scope: !11429)
!11443 = !DILocation(line: 1733, column: 11, scope: !11429)
!11444 = !DILocation(line: 1735, column: 25, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11424, file: !1, line: 1735, column: 11)
!11446 = !DILocation(line: 1735, column: 11, scope: !11445)
!11447 = !DILocation(line: 1735, column: 40, scope: !11445)
!11448 = !DILocation(line: 1735, column: 11, scope: !11424)
!11449 = !DILocalVariable(name: "luma", scope: !11450, file: !1, line: 1738, type: !856)
!11450 = distinct !DILexicalBlock(scope: !11445, file: !1, line: 1736, column: 9)
!11451 = !DILocation(line: 1738, column: 13, scope: !11450)
!11452 = !DILocation(line: 1740, column: 31, scope: !11450)
!11453 = !DILocation(line: 1740, column: 25, scope: !11450)
!11454 = !DILocation(line: 1740, column: 24, scope: !11450)
!11455 = !DILocation(line: 1740, column: 50, scope: !11450)
!11456 = !DILocation(line: 1740, column: 44, scope: !11450)
!11457 = !DILocation(line: 1740, column: 43, scope: !11450)
!11458 = !DILocation(line: 1740, column: 34, scope: !11450)
!11459 = !DILocation(line: 1740, column: 71, scope: !11450)
!11460 = !DILocation(line: 1740, column: 65, scope: !11450)
!11461 = !DILocation(line: 1740, column: 64, scope: !11450)
!11462 = !DILocation(line: 1740, column: 55, scope: !11450)
!11463 = !DILocation(line: 1740, column: 15, scope: !11450)
!11464 = !DILocation(line: 1741, column: 31, scope: !11450)
!11465 = !DILocation(line: 1741, column: 30, scope: !11450)
!11466 = !DILocation(line: 1741, column: 11, scope: !11450)
!11467 = !DILocation(line: 1743, column: 25, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11424, file: !1, line: 1743, column: 11)
!11469 = !DILocation(line: 1743, column: 11, scope: !11468)
!11470 = !DILocation(line: 1743, column: 45, scope: !11468)
!11471 = !DILocation(line: 1743, column: 11, scope: !11424)
!11472 = !DILocalVariable(name: "luminance", scope: !11473, file: !1, line: 1746, type: !856)
!11473 = distinct !DILexicalBlock(scope: !11468, file: !1, line: 1744, column: 9)
!11474 = !DILocation(line: 1746, column: 13, scope: !11473)
!11475 = !DILocation(line: 1748, column: 36, scope: !11473)
!11476 = !DILocation(line: 1748, column: 30, scope: !11473)
!11477 = !DILocation(line: 1748, column: 29, scope: !11473)
!11478 = !DILocation(line: 1748, column: 55, scope: !11473)
!11479 = !DILocation(line: 1748, column: 49, scope: !11473)
!11480 = !DILocation(line: 1748, column: 48, scope: !11473)
!11481 = !DILocation(line: 1748, column: 39, scope: !11473)
!11482 = !DILocation(line: 1748, column: 76, scope: !11473)
!11483 = !DILocation(line: 1748, column: 70, scope: !11473)
!11484 = !DILocation(line: 1748, column: 69, scope: !11473)
!11485 = !DILocation(line: 1748, column: 60, scope: !11473)
!11486 = !DILocation(line: 1748, column: 20, scope: !11473)
!11487 = !DILocation(line: 1749, column: 31, scope: !11473)
!11488 = !DILocation(line: 1749, column: 30, scope: !11473)
!11489 = !DILocation(line: 1749, column: 11, scope: !11473)
!11490 = !DILocation(line: 1751, column: 7, scope: !11424)
!11491 = !DILocation(line: 1756, column: 26, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !1, line: 1756, column: 11)
!11493 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1755, column: 5)
!11494 = !DILocation(line: 1756, column: 11, scope: !11492)
!11495 = !DILocation(line: 1756, column: 45, scope: !11492)
!11496 = !DILocation(line: 1756, column: 11, scope: !11493)
!11497 = !DILocation(line: 1757, column: 36, scope: !11492)
!11498 = !DILocation(line: 1757, column: 44, scope: !11492)
!11499 = !DILocation(line: 1757, column: 50, scope: !11492)
!11500 = !DILocation(line: 1757, column: 58, scope: !11492)
!11501 = !DILocation(line: 1757, column: 65, scope: !11492)
!11502 = !DILocation(line: 1757, column: 16, scope: !11492)
!11503 = !DILocation(line: 1757, column: 9, scope: !11492)
!11504 = !DILocation(line: 1758, column: 26, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11493, file: !1, line: 1758, column: 11)
!11506 = !DILocation(line: 1758, column: 11, scope: !11505)
!11507 = !DILocation(line: 1758, column: 43, scope: !11505)
!11508 = !DILocation(line: 1758, column: 11, scope: !11493)
!11509 = !DILocation(line: 1759, column: 36, scope: !11505)
!11510 = !DILocation(line: 1759, column: 44, scope: !11505)
!11511 = !DILocation(line: 1759, column: 50, scope: !11505)
!11512 = !DILocation(line: 1759, column: 58, scope: !11505)
!11513 = !DILocation(line: 1759, column: 65, scope: !11505)
!11514 = !DILocation(line: 1759, column: 16, scope: !11505)
!11515 = !DILocation(line: 1759, column: 9, scope: !11505)
!11516 = !DILocation(line: 1760, column: 26, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11493, file: !1, line: 1760, column: 11)
!11518 = !DILocation(line: 1760, column: 11, scope: !11517)
!11519 = !DILocation(line: 1760, column: 45, scope: !11517)
!11520 = !DILocation(line: 1760, column: 11, scope: !11493)
!11521 = !DILocation(line: 1761, column: 36, scope: !11517)
!11522 = !DILocation(line: 1761, column: 44, scope: !11517)
!11523 = !DILocation(line: 1761, column: 50, scope: !11517)
!11524 = !DILocation(line: 1761, column: 58, scope: !11517)
!11525 = !DILocation(line: 1761, column: 65, scope: !11517)
!11526 = !DILocation(line: 1761, column: 16, scope: !11517)
!11527 = !DILocation(line: 1761, column: 9, scope: !11517)
!11528 = !DILocation(line: 1762, column: 25, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11493, file: !1, line: 1762, column: 11)
!11530 = !DILocation(line: 1762, column: 11, scope: !11529)
!11531 = !DILocation(line: 1762, column: 37, scope: !11529)
!11532 = !DILocation(line: 1762, column: 11, scope: !11493)
!11533 = !DILocation(line: 1763, column: 35, scope: !11529)
!11534 = !DILocation(line: 1763, column: 29, scope: !11529)
!11535 = !DILocation(line: 1763, column: 28, scope: !11529)
!11536 = !DILocation(line: 1763, column: 9, scope: !11529)
!11537 = !DILocation(line: 1764, column: 7, scope: !11493)
!11538 = !DILocation(line: 1769, column: 25, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !1, line: 1769, column: 11)
!11540 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1768, column: 5)
!11541 = !DILocation(line: 1769, column: 11, scope: !11539)
!11542 = !DILocation(line: 1769, column: 37, scope: !11539)
!11543 = !DILocation(line: 1769, column: 11, scope: !11540)
!11544 = !DILocation(line: 1770, column: 44, scope: !11539)
!11545 = !DILocation(line: 1770, column: 53, scope: !11539)
!11546 = !DILocation(line: 1770, column: 25, scope: !11539)
!11547 = !DILocation(line: 1770, column: 16, scope: !11539)
!11548 = !DILocation(line: 1770, column: 9, scope: !11539)
!11549 = !DILocation(line: 1771, column: 7, scope: !11540)
!11550 = !DILocation(line: 1776, column: 25, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !1, line: 1776, column: 11)
!11552 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1775, column: 5)
!11553 = !DILocation(line: 1776, column: 11, scope: !11551)
!11554 = !DILocation(line: 1776, column: 37, scope: !11551)
!11555 = !DILocation(line: 1776, column: 11, scope: !11552)
!11556 = !DILocation(line: 1777, column: 35, scope: !11551)
!11557 = !DILocation(line: 1777, column: 29, scope: !11551)
!11558 = !DILocation(line: 1777, column: 28, scope: !11551)
!11559 = !DILocation(line: 1777, column: 9, scope: !11551)
!11560 = !DILocation(line: 1778, column: 7, scope: !11552)
!11561 = !DILocation(line: 1783, column: 25, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 1783, column: 11)
!11563 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1782, column: 5)
!11564 = !DILocation(line: 1783, column: 11, scope: !11562)
!11565 = !DILocation(line: 1783, column: 47, scope: !11562)
!11566 = !DILocation(line: 1783, column: 11, scope: !11563)
!11567 = !DILocation(line: 1784, column: 25, scope: !11562)
!11568 = !DILocation(line: 1784, column: 32, scope: !11562)
!11569 = !DILocation(line: 1784, column: 37, scope: !11562)
!11570 = !DILocation(line: 1784, column: 16, scope: !11562)
!11571 = !DILocation(line: 1784, column: 9, scope: !11562)
!11572 = !DILocation(line: 1785, column: 25, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 1785, column: 11)
!11574 = !DILocation(line: 1785, column: 11, scope: !11573)
!11575 = !DILocation(line: 1785, column: 46, scope: !11573)
!11576 = !DILocation(line: 1785, column: 11, scope: !11563)
!11577 = !DILocation(line: 1786, column: 25, scope: !11573)
!11578 = !DILocation(line: 1786, column: 32, scope: !11573)
!11579 = !DILocation(line: 1786, column: 37, scope: !11573)
!11580 = !DILocation(line: 1786, column: 16, scope: !11573)
!11581 = !DILocation(line: 1786, column: 9, scope: !11573)
!11582 = !DILocation(line: 1787, column: 25, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 1787, column: 11)
!11584 = !DILocation(line: 1787, column: 11, scope: !11583)
!11585 = !DILocation(line: 1787, column: 42, scope: !11583)
!11586 = !DILocation(line: 1787, column: 11, scope: !11563)
!11587 = !DILocation(line: 1788, column: 25, scope: !11583)
!11588 = !DILocation(line: 1788, column: 32, scope: !11583)
!11589 = !DILocation(line: 1788, column: 37, scope: !11583)
!11590 = !DILocation(line: 1788, column: 16, scope: !11583)
!11591 = !DILocation(line: 1788, column: 9, scope: !11583)
!11592 = !DILocation(line: 1789, column: 25, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11563, file: !1, line: 1789, column: 11)
!11594 = !DILocation(line: 1789, column: 11, scope: !11593)
!11595 = !DILocation(line: 1789, column: 42, scope: !11593)
!11596 = !DILocation(line: 1789, column: 11, scope: !11563)
!11597 = !DILocation(line: 1790, column: 25, scope: !11593)
!11598 = !DILocation(line: 1790, column: 32, scope: !11593)
!11599 = !DILocation(line: 1790, column: 37, scope: !11593)
!11600 = !DILocation(line: 1790, column: 16, scope: !11593)
!11601 = !DILocation(line: 1790, column: 9, scope: !11593)
!11602 = !DILocation(line: 1791, column: 7, scope: !11563)
!11603 = !DILocation(line: 1796, column: 25, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !1, line: 1796, column: 11)
!11605 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1795, column: 5)
!11606 = !DILocation(line: 1796, column: 11, scope: !11604)
!11607 = !DILocation(line: 1796, column: 48, scope: !11604)
!11608 = !DILocation(line: 1796, column: 11, scope: !11605)
!11609 = !DILocation(line: 1797, column: 16, scope: !11604)
!11610 = !DILocation(line: 1797, column: 23, scope: !11604)
!11611 = !DILocation(line: 1797, column: 9, scope: !11604)
!11612 = !DILocation(line: 1798, column: 25, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11605, file: !1, line: 1798, column: 11)
!11614 = !DILocation(line: 1798, column: 11, scope: !11613)
!11615 = !DILocation(line: 1798, column: 48, scope: !11613)
!11616 = !DILocation(line: 1798, column: 11, scope: !11605)
!11617 = !DILocation(line: 1799, column: 16, scope: !11613)
!11618 = !DILocation(line: 1799, column: 23, scope: !11613)
!11619 = !DILocation(line: 1799, column: 9, scope: !11613)
!11620 = !DILocation(line: 1800, column: 25, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11605, file: !1, line: 1800, column: 11)
!11622 = !DILocation(line: 1800, column: 11, scope: !11621)
!11623 = !DILocation(line: 1800, column: 37, scope: !11621)
!11624 = !DILocation(line: 1800, column: 11, scope: !11605)
!11625 = !DILocation(line: 1801, column: 35, scope: !11621)
!11626 = !DILocation(line: 1801, column: 29, scope: !11621)
!11627 = !DILocation(line: 1801, column: 28, scope: !11621)
!11628 = !DILocation(line: 1801, column: 9, scope: !11621)
!11629 = !DILocation(line: 1802, column: 7, scope: !11605)
!11630 = !DILocation(line: 1807, column: 25, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !1, line: 1807, column: 11)
!11632 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1806, column: 5)
!11633 = !DILocation(line: 1807, column: 11, scope: !11631)
!11634 = !DILocation(line: 1807, column: 46, scope: !11631)
!11635 = !DILocation(line: 1807, column: 11, scope: !11632)
!11636 = !DILocalVariable(name: "hue", scope: !11637, file: !1, line: 1810, type: !856)
!11637 = distinct !DILexicalBlock(scope: !11631, file: !1, line: 1808, column: 9)
!11638 = !DILocation(line: 1810, column: 13, scope: !11637)
!11639 = !DILocalVariable(name: "lightness", scope: !11637, file: !1, line: 1811, type: !856)
!11640 = !DILocation(line: 1811, column: 13, scope: !11637)
!11641 = !DILocalVariable(name: "saturation", scope: !11637, file: !1, line: 1812, type: !856)
!11642 = !DILocation(line: 1812, column: 13, scope: !11637)
!11643 = !DILocation(line: 1814, column: 48, scope: !11637)
!11644 = !DILocation(line: 1814, column: 27, scope: !11637)
!11645 = !DILocation(line: 1814, column: 74, scope: !11637)
!11646 = !DILocation(line: 1814, column: 53, scope: !11637)
!11647 = !DILocation(line: 1815, column: 34, scope: !11637)
!11648 = !DILocation(line: 1815, column: 13, scope: !11637)
!11649 = !DILocation(line: 1814, column: 11, scope: !11637)
!11650 = !DILocation(line: 1816, column: 18, scope: !11637)
!11651 = !DILocation(line: 1816, column: 11, scope: !11637)
!11652 = !DILocation(line: 1818, column: 26, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11632, file: !1, line: 1818, column: 11)
!11654 = !DILocation(line: 1818, column: 11, scope: !11653)
!11655 = !DILocation(line: 1818, column: 47, scope: !11653)
!11656 = !DILocation(line: 1818, column: 11, scope: !11632)
!11657 = !DILocation(line: 1819, column: 36, scope: !11653)
!11658 = !DILocation(line: 1819, column: 44, scope: !11653)
!11659 = !DILocation(line: 1819, column: 50, scope: !11653)
!11660 = !DILocation(line: 1819, column: 58, scope: !11653)
!11661 = !DILocation(line: 1819, column: 65, scope: !11653)
!11662 = !DILocation(line: 1819, column: 16, scope: !11653)
!11663 = !DILocation(line: 1819, column: 9, scope: !11653)
!11664 = !DILocation(line: 1820, column: 26, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11632, file: !1, line: 1820, column: 11)
!11666 = !DILocation(line: 1820, column: 11, scope: !11665)
!11667 = !DILocation(line: 1820, column: 58, scope: !11665)
!11668 = !DILocation(line: 1820, column: 11, scope: !11632)
!11669 = !DILocation(line: 1821, column: 36, scope: !11665)
!11670 = !DILocation(line: 1821, column: 44, scope: !11665)
!11671 = !DILocation(line: 1821, column: 50, scope: !11665)
!11672 = !DILocation(line: 1821, column: 58, scope: !11665)
!11673 = !DILocation(line: 1821, column: 65, scope: !11665)
!11674 = !DILocation(line: 1821, column: 16, scope: !11665)
!11675 = !DILocation(line: 1821, column: 9, scope: !11665)
!11676 = !DILocation(line: 1822, column: 7, scope: !11632)
!11677 = !DILocation(line: 1827, column: 25, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !1, line: 1827, column: 11)
!11679 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1826, column: 5)
!11680 = !DILocation(line: 1827, column: 11, scope: !11678)
!11681 = !DILocation(line: 1827, column: 37, scope: !11678)
!11682 = !DILocation(line: 1827, column: 11, scope: !11679)
!11683 = !DILocation(line: 1828, column: 45, scope: !11678)
!11684 = !DILocation(line: 1828, column: 54, scope: !11678)
!11685 = !DILocation(line: 1828, column: 25, scope: !11678)
!11686 = !DILocation(line: 1828, column: 16, scope: !11678)
!11687 = !DILocation(line: 1828, column: 9, scope: !11678)
!11688 = !DILocation(line: 1829, column: 7, scope: !11679)
!11689 = !DILocation(line: 1834, column: 25, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !1, line: 1834, column: 11)
!11691 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1833, column: 5)
!11692 = !DILocation(line: 1834, column: 11, scope: !11690)
!11693 = !DILocation(line: 1834, column: 37, scope: !11690)
!11694 = !DILocation(line: 1834, column: 11, scope: !11691)
!11695 = !DILocation(line: 1835, column: 25, scope: !11690)
!11696 = !DILocation(line: 1835, column: 32, scope: !11690)
!11697 = !DILocation(line: 1835, column: 16, scope: !11690)
!11698 = !DILocation(line: 1835, column: 9, scope: !11690)
!11699 = !DILocation(line: 1836, column: 7, scope: !11691)
!11700 = !DILocation(line: 1841, column: 25, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !1, line: 1841, column: 11)
!11702 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1840, column: 5)
!11703 = !DILocation(line: 1841, column: 11, scope: !11701)
!11704 = !DILocation(line: 1841, column: 37, scope: !11701)
!11705 = !DILocation(line: 1841, column: 11, scope: !11702)
!11706 = !DILocation(line: 1842, column: 35, scope: !11701)
!11707 = !DILocation(line: 1842, column: 29, scope: !11701)
!11708 = !DILocation(line: 1842, column: 28, scope: !11701)
!11709 = !DILocation(line: 1842, column: 9, scope: !11701)
!11710 = !DILocation(line: 1843, column: 7, scope: !11702)
!11711 = !DILocation(line: 1848, column: 25, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !1, line: 1848, column: 11)
!11713 = distinct !DILexicalBlock(scope: !11102, file: !1, line: 1847, column: 5)
!11714 = !DILocation(line: 1848, column: 11, scope: !11712)
!11715 = !DILocation(line: 1848, column: 37, scope: !11712)
!11716 = !DILocation(line: 1848, column: 11, scope: !11713)
!11717 = !DILocalVariable(name: "depth", scope: !11718, file: !1, line: 1851, type: !856)
!11718 = distinct !DILexicalBlock(scope: !11712, file: !1, line: 1849, column: 9)
!11719 = !DILocation(line: 1851, column: 13, scope: !11718)
!11720 = !DILocation(line: 1853, column: 47, scope: !11718)
!11721 = !DILocation(line: 1853, column: 53, scope: !11718)
!11722 = !DILocation(line: 1853, column: 61, scope: !11718)
!11723 = !DILocation(line: 1853, column: 70, scope: !11718)
!11724 = !DILocation(line: 1853, column: 26, scope: !11718)
!11725 = !DILocation(line: 1853, column: 17, scope: !11718)
!11726 = !DILocation(line: 1853, column: 16, scope: !11718)
!11727 = !DILocation(line: 1854, column: 18, scope: !11718)
!11728 = !DILocation(line: 1854, column: 11, scope: !11718)
!11729 = !DILocation(line: 1856, column: 7, scope: !11713)
!11730 = !DILocation(line: 1859, column: 7, scope: !11102)
!11731 = !DILocation(line: 1861, column: 46, scope: !10577)
!11732 = !DILocation(line: 1861, column: 55, scope: !10577)
!11733 = !DILocation(line: 1861, column: 63, scope: !10577)
!11734 = !DILocation(line: 1861, column: 24, scope: !10577)
!11735 = !DILocation(line: 1861, column: 8, scope: !10577)
!11736 = !DILocation(line: 1862, column: 7, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !10577, file: !1, line: 1862, column: 7)
!11738 = !DILocation(line: 1862, column: 13, scope: !11737)
!11739 = !DILocation(line: 1862, column: 7, scope: !10577)
!11740 = !DILocation(line: 1863, column: 27, scope: !11737)
!11741 = !DILocation(line: 1863, column: 12, scope: !11737)
!11742 = !DILocation(line: 1863, column: 5, scope: !11737)
!11743 = !DILocation(line: 1864, column: 31, scope: !10577)
!11744 = !DILocation(line: 1865, column: 38, scope: !10577)
!11745 = !DILocation(line: 1864, column: 10, scope: !10577)
!11746 = !DILocation(line: 1866, column: 3, scope: !10577)
!11747 = !DILocation(line: 1867, column: 1, scope: !10577)
!11748 = distinct !DISubprogram(name: "FxGCD", scope: !1, file: !1, line: 1268, type: !11749, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!11749 = !DISubroutineType(types: !11750)
!11750 = !{!950, !950, !950}
!11751 = !DILocalVariable(name: "alpha", arg: 1, scope: !11748, file: !1, line: 1268, type: !950)
!11752 = !DILocation(line: 1268, column: 48, scope: !11748)
!11753 = !DILocalVariable(name: "beta", arg: 2, scope: !11748, file: !1, line: 1268, type: !950)
!11754 = !DILocation(line: 1268, column: 71, scope: !11748)
!11755 = !DILocation(line: 1270, column: 7, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11748, file: !1, line: 1270, column: 7)
!11757 = !DILocation(line: 1270, column: 12, scope: !11756)
!11758 = !DILocation(line: 1270, column: 7, scope: !11748)
!11759 = !DILocation(line: 1271, column: 18, scope: !11756)
!11760 = !DILocation(line: 1271, column: 23, scope: !11756)
!11761 = !DILocation(line: 1271, column: 31, scope: !11756)
!11762 = !DILocation(line: 1271, column: 29, scope: !11756)
!11763 = !DILocation(line: 1271, column: 12, scope: !11756)
!11764 = !DILocation(line: 1271, column: 5, scope: !11756)
!11765 = !DILocation(line: 1272, column: 10, scope: !11748)
!11766 = !DILocation(line: 1272, column: 3, scope: !11748)
!11767 = !DILocation(line: 1273, column: 1, scope: !11748)
!11768 = distinct !DISubprogram(name: "FxSubexpression", scope: !1, file: !1, line: 1275, type: !690, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!11769 = !DILocalVariable(name: "expression", arg: 1, scope: !11768, file: !1, line: 1275, type: !692)
!11770 = !DILocation(line: 1275, column: 55, scope: !11768)
!11771 = !DILocalVariable(name: "exception", arg: 2, scope: !11768, file: !1, line: 1276, type: !695)
!11772 = !DILocation(line: 1276, column: 18, scope: !11768)
!11773 = !DILocalVariable(name: "subexpression", scope: !11768, file: !1, line: 1279, type: !692)
!11774 = !DILocation(line: 1279, column: 6, scope: !11768)
!11775 = !DILocalVariable(name: "level", scope: !11768, file: !1, line: 1282, type: !880)
!11776 = !DILocation(line: 1282, column: 5, scope: !11768)
!11777 = !DILocation(line: 1284, column: 8, scope: !11768)
!11778 = !DILocation(line: 1285, column: 17, scope: !11768)
!11779 = !DILocation(line: 1285, column: 16, scope: !11768)
!11780 = !DILocation(line: 1286, column: 3, scope: !11768)
!11781 = !DILocation(line: 1286, column: 12, scope: !11768)
!11782 = !DILocation(line: 1286, column: 11, scope: !11768)
!11783 = !DILocation(line: 1286, column: 26, scope: !11768)
!11784 = !DILocation(line: 1286, column: 35, scope: !11768)
!11785 = !DILocation(line: 1287, column: 12, scope: !11768)
!11786 = !DILocation(line: 1287, column: 18, scope: !11768)
!11787 = !DILocation(line: 1287, column: 24, scope: !11768)
!11788 = !DILocation(line: 1287, column: 46, scope: !11768)
!11789 = !DILocation(line: 1287, column: 45, scope: !11768)
!11790 = !DILocation(line: 1287, column: 39, scope: !11768)
!11791 = !DILocation(line: 1287, column: 28, scope: !11768)
!11792 = !DILocation(line: 1287, column: 61, scope: !11768)
!11793 = !DILocation(line: 0, scope: !11768)
!11794 = !DILocation(line: 1289, column: 27, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !1, line: 1289, column: 9)
!11796 = distinct !DILexicalBlock(scope: !11768, file: !1, line: 1288, column: 3)
!11797 = !DILocation(line: 1289, column: 26, scope: !11795)
!11798 = !DILocation(line: 1289, column: 20, scope: !11795)
!11799 = !DILocation(line: 1289, column: 9, scope: !11795)
!11800 = !DILocation(line: 1289, column: 42, scope: !11795)
!11801 = !DILocation(line: 1289, column: 9, scope: !11796)
!11802 = !DILocation(line: 1290, column: 12, scope: !11795)
!11803 = !DILocation(line: 1290, column: 7, scope: !11795)
!11804 = !DILocation(line: 1292, column: 29, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11795, file: !1, line: 1292, column: 11)
!11806 = !DILocation(line: 1292, column: 28, scope: !11805)
!11807 = !DILocation(line: 1292, column: 22, scope: !11805)
!11808 = !DILocation(line: 1292, column: 11, scope: !11805)
!11809 = !DILocation(line: 1292, column: 44, scope: !11805)
!11810 = !DILocation(line: 1292, column: 11, scope: !11795)
!11811 = !DILocation(line: 1293, column: 14, scope: !11805)
!11812 = !DILocation(line: 1293, column: 9, scope: !11805)
!11813 = !DILocation(line: 1294, column: 18, scope: !11796)
!11814 = distinct !{!11814, !11780, !11815}
!11815 = !DILocation(line: 1295, column: 3, scope: !11768)
!11816 = !DILocation(line: 1296, column: 8, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11768, file: !1, line: 1296, column: 7)
!11818 = !DILocation(line: 1296, column: 7, scope: !11817)
!11819 = !DILocation(line: 1296, column: 22, scope: !11817)
!11820 = !DILocation(line: 1296, column: 7, scope: !11768)
!11821 = !DILocation(line: 1297, column: 33, scope: !11817)
!11822 = !DILocation(line: 1298, column: 38, scope: !11817)
!11823 = !DILocation(line: 1297, column: 12, scope: !11817)
!11824 = !DILocation(line: 1297, column: 5, scope: !11817)
!11825 = !DILocation(line: 1299, column: 10, scope: !11768)
!11826 = !DILocation(line: 1299, column: 3, scope: !11768)
!11827 = distinct !DISubprogram(name: "MagickPixelIntensityToQuantum", scope: !11828, file: !11828, line: 95, type: !11829, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!11828 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!11829 = !DISubroutineType(types: !11830)
!11830 = !{!847, !6165}
!11831 = !DILocalVariable(name: "pixel", arg: 1, scope: !11827, file: !11828, line: 96, type: !6165)
!11832 = !DILocation(line: 96, column: 28, scope: !11827)
!11833 = !DILocation(line: 98, column: 7, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11827, file: !11828, line: 98, column: 7)
!11835 = !DILocation(line: 98, column: 14, scope: !11834)
!11836 = !DILocation(line: 98, column: 25, scope: !11834)
!11837 = !DILocation(line: 98, column: 7, scope: !11827)
!11838 = !DILocation(line: 99, column: 27, scope: !11834)
!11839 = !DILocation(line: 99, column: 34, scope: !11834)
!11840 = !DILocation(line: 99, column: 12, scope: !11834)
!11841 = !DILocation(line: 99, column: 5, scope: !11834)
!11842 = !DILocation(line: 100, column: 34, scope: !11827)
!11843 = !DILocation(line: 100, column: 41, scope: !11827)
!11844 = !DILocation(line: 100, column: 33, scope: !11827)
!11845 = !DILocation(line: 100, column: 54, scope: !11827)
!11846 = !DILocation(line: 100, column: 61, scope: !11827)
!11847 = !DILocation(line: 100, column: 53, scope: !11827)
!11848 = !DILocation(line: 100, column: 44, scope: !11827)
!11849 = !DILocation(line: 101, column: 14, scope: !11827)
!11850 = !DILocation(line: 101, column: 21, scope: !11827)
!11851 = !DILocation(line: 101, column: 13, scope: !11827)
!11852 = !DILocation(line: 100, column: 66, scope: !11827)
!11853 = !DILocation(line: 100, column: 25, scope: !11827)
!11854 = !DILocation(line: 100, column: 10, scope: !11827)
!11855 = !DILocation(line: 100, column: 3, scope: !11827)
!11856 = !DILocation(line: 102, column: 1, scope: !11827)
!11857 = distinct !DISubprogram(name: "FxChannelStatistics", scope: !1, file: !1, line: 1154, type: !11858, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!11858 = !DISubroutineType(types: !11859)
!11859 = !{!856, !815, !821, !1146, !692, !695}
!11860 = !DILocalVariable(name: "fx_info", arg: 1, scope: !11857, file: !1, line: 1154, type: !815)
!11861 = !DILocation(line: 1154, column: 43, scope: !11857)
!11862 = !DILocalVariable(name: "image", arg: 2, scope: !11857, file: !1, line: 1154, type: !821)
!11863 = !DILocation(line: 1154, column: 64, scope: !11857)
!11864 = !DILocalVariable(name: "channel", arg: 3, scope: !11857, file: !1, line: 1155, type: !1146)
!11865 = !DILocation(line: 1155, column: 15, scope: !11857)
!11866 = !DILocalVariable(name: "symbol", arg: 4, scope: !11857, file: !1, line: 1155, type: !692)
!11867 = !DILocation(line: 1155, column: 35, scope: !11857)
!11868 = !DILocalVariable(name: "exception", arg: 5, scope: !11857, file: !1, line: 1155, type: !695)
!11869 = !DILocation(line: 1155, column: 57, scope: !11857)
!11870 = !DILocalVariable(name: "channel_symbol", scope: !11857, file: !1, line: 1158, type: !967)
!11871 = !DILocation(line: 1158, column: 5, scope: !11857)
!11872 = !DILocalVariable(name: "key", scope: !11857, file: !1, line: 1159, type: !967)
!11873 = !DILocation(line: 1159, column: 5, scope: !11857)
!11874 = !DILocalVariable(name: "statistic", scope: !11857, file: !1, line: 1160, type: !967)
!11875 = !DILocation(line: 1160, column: 5, scope: !11857)
!11876 = !DILocalVariable(name: "value", scope: !11857, file: !1, line: 1163, type: !692)
!11877 = !DILocation(line: 1163, column: 6, scope: !11857)
!11878 = !DILocalVariable(name: "p", scope: !11857, file: !1, line: 1166, type: !692)
!11879 = !DILocation(line: 1166, column: 6, scope: !11857)
!11880 = !DILocation(line: 1168, column: 10, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1168, column: 3)
!11882 = !DILocation(line: 1168, column: 9, scope: !11881)
!11883 = !DILocation(line: 1168, column: 8, scope: !11881)
!11884 = !DILocation(line: 1168, column: 20, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !1, line: 1168, column: 3)
!11886 = !DILocation(line: 1168, column: 19, scope: !11885)
!11887 = !DILocation(line: 1168, column: 22, scope: !11885)
!11888 = !DILocation(line: 1168, column: 30, scope: !11885)
!11889 = !DILocation(line: 1168, column: 35, scope: !11885)
!11890 = !DILocation(line: 1168, column: 34, scope: !11885)
!11891 = !DILocation(line: 1168, column: 37, scope: !11885)
!11892 = !DILocation(line: 0, scope: !11885)
!11893 = !DILocation(line: 1168, column: 3, scope: !11881)
!11894 = !DILocation(line: 1168, column: 48, scope: !11885)
!11895 = !DILocation(line: 1168, column: 3, scope: !11885)
!11896 = distinct !{!11896, !11893, !11897}
!11897 = !DILocation(line: 1168, column: 52, scope: !11881)
!11898 = !DILocation(line: 1169, column: 3, scope: !11857)
!11899 = !DILocation(line: 1169, column: 18, scope: !11857)
!11900 = !DILocation(line: 1170, column: 8, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1170, column: 7)
!11902 = !DILocation(line: 1170, column: 7, scope: !11901)
!11903 = !DILocation(line: 1170, column: 10, scope: !11901)
!11904 = !DILocation(line: 1170, column: 7, scope: !11857)
!11905 = !DILocalVariable(name: "option", scope: !11906, file: !1, line: 1173, type: !880)
!11906 = distinct !DILexicalBlock(scope: !11901, file: !1, line: 1171, column: 5)
!11907 = !DILocation(line: 1173, column: 9, scope: !11906)
!11908 = !DILocation(line: 1175, column: 31, scope: !11906)
!11909 = !DILocation(line: 1175, column: 46, scope: !11906)
!11910 = !DILocation(line: 1175, column: 47, scope: !11906)
!11911 = !DILocation(line: 1175, column: 14, scope: !11906)
!11912 = !DILocation(line: 1176, column: 65, scope: !11906)
!11913 = !DILocation(line: 1176, column: 14, scope: !11906)
!11914 = !DILocation(line: 1176, column: 13, scope: !11906)
!11915 = !DILocation(line: 1177, column: 11, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11906, file: !1, line: 1177, column: 11)
!11917 = !DILocation(line: 1177, column: 18, scope: !11916)
!11918 = !DILocation(line: 1177, column: 11, scope: !11906)
!11919 = !DILocation(line: 1178, column: 31, scope: !11916)
!11920 = !DILocation(line: 1178, column: 17, scope: !11916)
!11921 = !DILocation(line: 1178, column: 16, scope: !11916)
!11922 = !DILocation(line: 1178, column: 9, scope: !11916)
!11923 = !DILocation(line: 1179, column: 5, scope: !11906)
!11924 = !DILocation(line: 1180, column: 29, scope: !11857)
!11925 = !DILocation(line: 1180, column: 70, scope: !11857)
!11926 = !DILocation(line: 1180, column: 61, scope: !11857)
!11927 = !DILocation(line: 1181, column: 14, scope: !11857)
!11928 = !DILocation(line: 1181, column: 5, scope: !11857)
!11929 = !DILocation(line: 1181, column: 22, scope: !11857)
!11930 = !DILocation(line: 1180, column: 10, scope: !11857)
!11931 = !DILocation(line: 1182, column: 46, scope: !11857)
!11932 = !DILocation(line: 1182, column: 55, scope: !11857)
!11933 = !DILocation(line: 1182, column: 63, scope: !11857)
!11934 = !DILocation(line: 1182, column: 24, scope: !11857)
!11935 = !DILocation(line: 1182, column: 8, scope: !11857)
!11936 = !DILocation(line: 1183, column: 7, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1183, column: 7)
!11938 = !DILocation(line: 1183, column: 13, scope: !11937)
!11939 = !DILocation(line: 1183, column: 7, scope: !11857)
!11940 = !DILocation(line: 1184, column: 40, scope: !11937)
!11941 = !DILocation(line: 1184, column: 25, scope: !11937)
!11942 = !DILocation(line: 1184, column: 24, scope: !11937)
!11943 = !DILocation(line: 1184, column: 5, scope: !11937)
!11944 = !DILocation(line: 1185, column: 34, scope: !11857)
!11945 = !DILocation(line: 1185, column: 43, scope: !11857)
!11946 = !DILocation(line: 1185, column: 51, scope: !11857)
!11947 = !DILocation(line: 1185, column: 10, scope: !11857)
!11948 = !DILocation(line: 1186, column: 22, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1186, column: 7)
!11950 = !DILocation(line: 1186, column: 7, scope: !11949)
!11951 = !DILocation(line: 1186, column: 40, scope: !11949)
!11952 = !DILocation(line: 1186, column: 7, scope: !11857)
!11953 = !DILocalVariable(name: "depth", scope: !11954, file: !1, line: 1189, type: !716)
!11954 = distinct !DILexicalBlock(scope: !11949, file: !1, line: 1187, column: 5)
!11955 = !DILocation(line: 1189, column: 9, scope: !11954)
!11956 = !DILocation(line: 1191, column: 34, scope: !11954)
!11957 = !DILocation(line: 1191, column: 40, scope: !11954)
!11958 = !DILocation(line: 1191, column: 48, scope: !11954)
!11959 = !DILocation(line: 1191, column: 13, scope: !11954)
!11960 = !DILocation(line: 1191, column: 12, scope: !11954)
!11961 = !DILocation(line: 1192, column: 33, scope: !11954)
!11962 = !DILocation(line: 1192, column: 74, scope: !11954)
!11963 = !DILocation(line: 1192, column: 65, scope: !11954)
!11964 = !DILocation(line: 1192, column: 14, scope: !11954)
!11965 = !DILocation(line: 1193, column: 5, scope: !11954)
!11966 = !DILocation(line: 1194, column: 22, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1194, column: 7)
!11968 = !DILocation(line: 1194, column: 7, scope: !11967)
!11969 = !DILocation(line: 1194, column: 43, scope: !11967)
!11970 = !DILocation(line: 1194, column: 7, scope: !11857)
!11971 = !DILocalVariable(name: "kurtosis", scope: !11972, file: !1, line: 1197, type: !856)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !1, line: 1195, column: 5)
!11973 = !DILocation(line: 1197, column: 9, scope: !11972)
!11974 = !DILocalVariable(name: "skewness", scope: !11972, file: !1, line: 1198, type: !856)
!11975 = !DILocation(line: 1198, column: 9, scope: !11972)
!11976 = !DILocation(line: 1200, column: 38, scope: !11972)
!11977 = !DILocation(line: 1200, column: 44, scope: !11972)
!11978 = !DILocation(line: 1201, column: 9, scope: !11972)
!11979 = !DILocation(line: 1200, column: 14, scope: !11972)
!11980 = !DILocation(line: 1202, column: 33, scope: !11972)
!11981 = !DILocation(line: 1202, column: 62, scope: !11972)
!11982 = !DILocation(line: 1202, column: 14, scope: !11972)
!11983 = !DILocation(line: 1203, column: 5, scope: !11972)
!11984 = !DILocation(line: 1204, column: 22, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1204, column: 7)
!11986 = !DILocation(line: 1204, column: 7, scope: !11985)
!11987 = !DILocation(line: 1204, column: 41, scope: !11985)
!11988 = !DILocation(line: 1204, column: 7, scope: !11857)
!11989 = !DILocalVariable(name: "maxima", scope: !11990, file: !1, line: 1207, type: !856)
!11990 = distinct !DILexicalBlock(scope: !11985, file: !1, line: 1205, column: 5)
!11991 = !DILocation(line: 1207, column: 9, scope: !11990)
!11992 = !DILocalVariable(name: "minima", scope: !11990, file: !1, line: 1208, type: !856)
!11993 = !DILocation(line: 1208, column: 9, scope: !11990)
!11994 = !DILocation(line: 1210, column: 35, scope: !11990)
!11995 = !DILocation(line: 1210, column: 41, scope: !11990)
!11996 = !DILocation(line: 1210, column: 65, scope: !11990)
!11997 = !DILocation(line: 1210, column: 14, scope: !11990)
!11998 = !DILocation(line: 1211, column: 25, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11990, file: !1, line: 1211, column: 11)
!12000 = !DILocation(line: 1211, column: 11, scope: !11999)
!12001 = !DILocation(line: 1211, column: 45, scope: !11999)
!12002 = !DILocation(line: 1211, column: 11, scope: !11990)
!12003 = !DILocation(line: 1212, column: 29, scope: !11999)
!12004 = !DILocation(line: 1212, column: 28, scope: !11999)
!12005 = !DILocation(line: 1212, column: 15, scope: !11999)
!12006 = !DILocation(line: 1212, column: 9, scope: !11999)
!12007 = !DILocation(line: 1213, column: 33, scope: !11990)
!12008 = !DILocation(line: 1213, column: 62, scope: !11990)
!12009 = !DILocation(line: 1213, column: 14, scope: !11990)
!12010 = !DILocation(line: 1214, column: 5, scope: !11990)
!12011 = !DILocation(line: 1215, column: 22, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1215, column: 7)
!12013 = !DILocation(line: 1215, column: 7, scope: !12012)
!12014 = !DILocation(line: 1215, column: 39, scope: !12012)
!12015 = !DILocation(line: 1215, column: 7, scope: !11857)
!12016 = !DILocalVariable(name: "mean", scope: !12017, file: !1, line: 1218, type: !856)
!12017 = distinct !DILexicalBlock(scope: !12012, file: !1, line: 1216, column: 5)
!12018 = !DILocation(line: 1218, column: 9, scope: !12017)
!12019 = !DILocalVariable(name: "standard_deviation", scope: !12017, file: !1, line: 1219, type: !856)
!12020 = !DILocation(line: 1219, column: 9, scope: !12017)
!12021 = !DILocation(line: 1221, column: 34, scope: !12017)
!12022 = !DILocation(line: 1221, column: 40, scope: !12017)
!12023 = !DILocation(line: 1222, column: 9, scope: !12017)
!12024 = !DILocation(line: 1221, column: 14, scope: !12017)
!12025 = !DILocation(line: 1223, column: 25, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12017, file: !1, line: 1223, column: 11)
!12027 = !DILocation(line: 1223, column: 11, scope: !12026)
!12028 = !DILocation(line: 1223, column: 45, scope: !12026)
!12029 = !DILocation(line: 1223, column: 11, scope: !12017)
!12030 = !DILocation(line: 1224, column: 27, scope: !12026)
!12031 = !DILocation(line: 1224, column: 26, scope: !12026)
!12032 = !DILocation(line: 1224, column: 13, scope: !12026)
!12033 = !DILocation(line: 1224, column: 9, scope: !12026)
!12034 = !DILocation(line: 1225, column: 33, scope: !12017)
!12035 = !DILocation(line: 1225, column: 62, scope: !12017)
!12036 = !DILocation(line: 1225, column: 14, scope: !12017)
!12037 = !DILocation(line: 1226, column: 5, scope: !12017)
!12038 = !DILocation(line: 1227, column: 22, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1227, column: 7)
!12040 = !DILocation(line: 1227, column: 7, scope: !12039)
!12041 = !DILocation(line: 1227, column: 41, scope: !12039)
!12042 = !DILocation(line: 1227, column: 7, scope: !11857)
!12043 = !DILocalVariable(name: "maxima", scope: !12044, file: !1, line: 1230, type: !856)
!12044 = distinct !DILexicalBlock(scope: !12039, file: !1, line: 1228, column: 5)
!12045 = !DILocation(line: 1230, column: 9, scope: !12044)
!12046 = !DILocalVariable(name: "minima", scope: !12044, file: !1, line: 1231, type: !856)
!12047 = !DILocation(line: 1231, column: 9, scope: !12044)
!12048 = !DILocation(line: 1233, column: 35, scope: !12044)
!12049 = !DILocation(line: 1233, column: 41, scope: !12044)
!12050 = !DILocation(line: 1233, column: 65, scope: !12044)
!12051 = !DILocation(line: 1233, column: 14, scope: !12044)
!12052 = !DILocation(line: 1234, column: 25, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12044, file: !1, line: 1234, column: 11)
!12054 = !DILocation(line: 1234, column: 11, scope: !12053)
!12055 = !DILocation(line: 1234, column: 45, scope: !12053)
!12056 = !DILocation(line: 1234, column: 11, scope: !12044)
!12057 = !DILocation(line: 1235, column: 29, scope: !12053)
!12058 = !DILocation(line: 1235, column: 28, scope: !12053)
!12059 = !DILocation(line: 1235, column: 15, scope: !12053)
!12060 = !DILocation(line: 1235, column: 9, scope: !12053)
!12061 = !DILocation(line: 1236, column: 33, scope: !12044)
!12062 = !DILocation(line: 1236, column: 62, scope: !12044)
!12063 = !DILocation(line: 1236, column: 14, scope: !12044)
!12064 = !DILocation(line: 1237, column: 5, scope: !12044)
!12065 = !DILocation(line: 1238, column: 22, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1238, column: 7)
!12067 = !DILocation(line: 1238, column: 7, scope: !12066)
!12068 = !DILocation(line: 1238, column: 43, scope: !12066)
!12069 = !DILocation(line: 1238, column: 7, scope: !11857)
!12070 = !DILocalVariable(name: "kurtosis", scope: !12071, file: !1, line: 1241, type: !856)
!12071 = distinct !DILexicalBlock(scope: !12066, file: !1, line: 1239, column: 5)
!12072 = !DILocation(line: 1241, column: 9, scope: !12071)
!12073 = !DILocalVariable(name: "skewness", scope: !12071, file: !1, line: 1242, type: !856)
!12074 = !DILocation(line: 1242, column: 9, scope: !12071)
!12075 = !DILocation(line: 1244, column: 38, scope: !12071)
!12076 = !DILocation(line: 1244, column: 44, scope: !12071)
!12077 = !DILocation(line: 1245, column: 9, scope: !12071)
!12078 = !DILocation(line: 1244, column: 14, scope: !12071)
!12079 = !DILocation(line: 1246, column: 33, scope: !12071)
!12080 = !DILocation(line: 1246, column: 62, scope: !12071)
!12081 = !DILocation(line: 1246, column: 14, scope: !12071)
!12082 = !DILocation(line: 1247, column: 5, scope: !12071)
!12083 = !DILocation(line: 1248, column: 22, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1248, column: 7)
!12085 = !DILocation(line: 1248, column: 7, scope: !12084)
!12086 = !DILocation(line: 1248, column: 54, scope: !12084)
!12087 = !DILocation(line: 1248, column: 7, scope: !11857)
!12088 = !DILocalVariable(name: "mean", scope: !12089, file: !1, line: 1251, type: !856)
!12089 = distinct !DILexicalBlock(scope: !12084, file: !1, line: 1249, column: 5)
!12090 = !DILocation(line: 1251, column: 9, scope: !12089)
!12091 = !DILocalVariable(name: "standard_deviation", scope: !12089, file: !1, line: 1252, type: !856)
!12092 = !DILocation(line: 1252, column: 9, scope: !12089)
!12093 = !DILocation(line: 1254, column: 34, scope: !12089)
!12094 = !DILocation(line: 1254, column: 40, scope: !12089)
!12095 = !DILocation(line: 1255, column: 9, scope: !12089)
!12096 = !DILocation(line: 1254, column: 14, scope: !12089)
!12097 = !DILocation(line: 1256, column: 33, scope: !12089)
!12098 = !DILocation(line: 1257, column: 9, scope: !12089)
!12099 = !DILocation(line: 1256, column: 14, scope: !12089)
!12100 = !DILocation(line: 1258, column: 5, scope: !12089)
!12101 = !DILocation(line: 1259, column: 30, scope: !11857)
!12102 = !DILocation(line: 1259, column: 39, scope: !11857)
!12103 = !DILocation(line: 1259, column: 62, scope: !11857)
!12104 = !DILocation(line: 1259, column: 47, scope: !11857)
!12105 = !DILocation(line: 1260, column: 20, scope: !11857)
!12106 = !DILocation(line: 1260, column: 5, scope: !11857)
!12107 = !DILocation(line: 1259, column: 10, scope: !11857)
!12108 = !DILocation(line: 1261, column: 38, scope: !11857)
!12109 = !DILocation(line: 1261, column: 23, scope: !11857)
!12110 = !DILocation(line: 1261, column: 22, scope: !11857)
!12111 = !DILocation(line: 1261, column: 3, scope: !11857)
!12112 = !DILocation(line: 1262, column: 1, scope: !11857)
