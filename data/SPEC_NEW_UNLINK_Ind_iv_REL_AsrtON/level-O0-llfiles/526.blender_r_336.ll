; ModuleID = 'blender/source/blender/render/intern/source/render_texture.c'
source_filename = "blender/source/blender/render/intern/source/render_texture.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RNG_THREAD_ARRAY = type opaque
%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.TexResult = type { float, float, float, float, float, i32, float* }
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.CompatibleBump = type { [3 x float], [3 x float], [3 x float], float, float, float, float, i8 }
%struct.NTapBump = type { i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], float, float }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type opaque
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }

@random_tex_array = internal global %struct.RNG_THREAD_ARRAY* null, align 8, !dbg !0
@R = external dso_local global %struct.Render, align 8
@render_realtime_texture.imatex = internal global [1 x %struct.Tex] zeroinitializer, align 16, !dbg !2725
@render_realtime_texture.firsttime = internal global i32 1, align 4, !dbg !3135
@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@__const.cubemap.proj = private unnamed_addr constant [4 x i32] [i32 0, i32 16, i32 32, i32 64], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_init_texture_rng() #0 !dbg !3145 {
entry:
  %call = call %struct.RNG_THREAD_ARRAY* @BLI_rng_threaded_new(), !dbg !3148
  store %struct.RNG_THREAD_ARRAY* %call, %struct.RNG_THREAD_ARRAY** @random_tex_array, align 8, !dbg !3149
  ret void, !dbg !3150
}

declare dso_local %struct.RNG_THREAD_ARRAY* @BLI_rng_threaded_new() #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_exit_texture_rng() #0 !dbg !3151 {
entry:
  %0 = load %struct.RNG_THREAD_ARRAY*, %struct.RNG_THREAD_ARRAY** @random_tex_array, align 8, !dbg !3152
  call void @BLI_rng_threaded_free(%struct.RNG_THREAD_ARRAY* %0), !dbg !3153
  ret void, !dbg !3154
}

declare dso_local void @BLI_rng_threaded_free(%struct.RNG_THREAD_ARRAY*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_render_textures(%struct.Render* %re) #0 !dbg !3155 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tex = alloca %struct.Tex*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3399, metadata !DIExpression()), !dbg !3400
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !3401, metadata !DIExpression()), !dbg !3403
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3404
  %main = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 43, !dbg !3405
  %1 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !3405
  %tex1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 18, !dbg !3406
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex1, i32 0, i32 0, !dbg !3407
  %2 = load i8*, i8** %first, align 8, !dbg !3407
  %3 = bitcast i8* %2 to %struct.Tex*, !dbg !3404
  store %struct.Tex* %3, %struct.Tex** %tex, align 8, !dbg !3408
  br label %while.cond, !dbg !3409

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3410
  %tobool = icmp ne %struct.Tex* %4, null, !dbg !3409
  br i1 %tobool, label %while.body, label %while.end, !dbg !3409

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3411
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 0, !dbg !3414
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !3415
  %6 = load i32, i32* %us, align 4, !dbg !3415
  %tobool2 = icmp ne i32 %6, 0, !dbg !3411
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3416

if.then:                                          ; preds = %while.body
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3417
  %8 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3418
  call void @init_render_texture(%struct.Render* %7, %struct.Tex* %8), !dbg !3419
  br label %if.end, !dbg !3419

if.end:                                           ; preds = %if.then, %while.body
  %9 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3420
  %id3 = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 0, !dbg !3421
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 0, !dbg !3422
  %10 = load i8*, i8** %next, align 8, !dbg !3422
  %11 = bitcast i8* %10 to %struct.Tex*, !dbg !3420
  store %struct.Tex* %11, %struct.Tex** %tex, align 8, !dbg !3423
  br label %while.cond, !dbg !3409, !llvm.loop !3424

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3426
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_texture(%struct.Render* %re, %struct.Tex* %tex) #0 !dbg !3427 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tex.addr = alloca %struct.Tex*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3434
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 54, !dbg !3436
  %1 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3436
  %tobool = icmp ne %struct.Image* %1, null, !dbg !3434
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3437

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3438
  %ima1 = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 54, !dbg !3439
  %3 = load %struct.Image*, %struct.Image** %ima1, align 8, !dbg !3439
  %call = call zeroext i8 @BKE_image_is_animated(%struct.Image* %3), !dbg !3440
  %conv = zext i8 %call to i32, !dbg !3440
  %tobool2 = icmp ne i32 %conv, 0, !dbg !3440
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3441

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3442
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 51, !dbg !3444
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3445
  %tobool3 = icmp ne %struct.Render* %5, null, !dbg !3445
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !3445

cond.true:                                        ; preds = %if.then
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3446
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !3447
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !3448
  %7 = load i32, i32* %cfra, align 8, !dbg !3448
  br label %cond.end, !dbg !3445

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !3445
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3449
  %tobool4 = icmp ne %struct.Render* %8, null, !dbg !3449
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !3449

cond.true5:                                       ; preds = %cond.end
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3450
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 4, !dbg !3451
  %10 = load i16, i16* %flag, align 8, !dbg !3451
  %conv6 = sext i16 %10 to i32, !dbg !3450
  %and = and i32 %conv6, 4, !dbg !3452
  br label %cond.end8, !dbg !3449

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !3449

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i32 [ %and, %cond.true5 ], [ 0, %cond.false7 ], !dbg !3449
  call void @BKE_image_user_frame_calc(%struct.ImageUser* %iuser, i32 %cond, i32 %cond9), !dbg !3453
  br label %if.end44, !dbg !3454

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3455
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 32, !dbg !3457
  %12 = load i16, i16* %type, align 8, !dbg !3457
  %conv10 = sext i16 %12 to i32, !dbg !3455
  %cmp = icmp eq i32 %conv10, 10, !dbg !3458
  br i1 %cmp, label %if.then12, label %if.end43, !dbg !3459

if.then12:                                        ; preds = %if.else
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3460
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 30, !dbg !3462
  %14 = load i16, i16* %imaflag, align 4, !dbg !3463
  %conv13 = sext i16 %14 to i32, !dbg !3463
  %or = or i32 %conv13, 5, !dbg !3463
  %conv14 = trunc i32 %or to i16, !dbg !3463
  store i16 %conv14, i16* %imaflag, align 4, !dbg !3463
  %15 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3464
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 42, !dbg !3465
  store i16 2, i16* %extend, align 8, !dbg !3466
  %16 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3467
  %env = getelementptr inbounds %struct.Tex, %struct.Tex* %16, i32 0, i32 56, !dbg !3469
  %17 = load %struct.EnvMap*, %struct.EnvMap** %env, align 8, !dbg !3469
  %tobool15 = icmp ne %struct.EnvMap* %17, null, !dbg !3467
  br i1 %tobool15, label %if.then16, label %if.end42, !dbg !3470

if.then16:                                        ; preds = %if.then12
  %18 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3471
  %env17 = getelementptr inbounds %struct.Tex, %struct.Tex* %18, i32 0, i32 56, !dbg !3474
  %19 = load %struct.EnvMap*, %struct.EnvMap** %env17, align 8, !dbg !3474
  %type18 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %19, i32 0, i32 5, !dbg !3475
  %20 = load i16, i16* %type18, align 4, !dbg !3475
  %conv19 = sext i16 %20 to i32, !dbg !3471
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !3476
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !3477

if.then22:                                        ; preds = %if.then16
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3478
  %extend23 = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 42, !dbg !3479
  store i16 1, i16* %extend23, align 8, !dbg !3480
  br label %if.end, !dbg !3478

if.end:                                           ; preds = %if.then22, %if.then16
  %22 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !3481
  %conv24 = zext i8 %22 to i32, !dbg !3483
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !3483
  br i1 %tobool25, label %land.lhs.true26, label %if.end41, !dbg !3484

land.lhs.true26:                                  ; preds = %if.end
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3485
  %tobool27 = icmp ne %struct.Render* %23, null, !dbg !3485
  br i1 %tobool27, label %if.then28, label %if.end41, !dbg !3486

if.then28:                                        ; preds = %land.lhs.true26
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3487
  %r29 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 45, !dbg !3490
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r29, i32 0, i32 47, !dbg !3491
  %25 = load i32, i32* %mode, align 8, !dbg !3491
  %and30 = and i32 %25, 16, !dbg !3492
  %tobool31 = icmp ne i32 %and30, 0, !dbg !3492
  br i1 %tobool31, label %if.then32, label %if.end40, !dbg !3493

if.then32:                                        ; preds = %if.then28
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3494
  %env33 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 56, !dbg !3496
  %27 = load %struct.EnvMap*, %struct.EnvMap** %env33, align 8, !dbg !3496
  %stype = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %27, i32 0, i32 6, !dbg !3497
  %28 = load i16, i16* %stype, align 2, !dbg !3497
  %conv34 = sext i16 %28 to i32, !dbg !3494
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !3498
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !3499

if.then37:                                        ; preds = %if.then32
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3500
  %env38 = getelementptr inbounds %struct.Tex, %struct.Tex* %29, i32 0, i32 56, !dbg !3501
  %30 = load %struct.EnvMap*, %struct.EnvMap** %env38, align 8, !dbg !3501
  call void @BKE_free_envmapdata(%struct.EnvMap* %30), !dbg !3502
  br label %if.end39, !dbg !3502

if.end39:                                         ; preds = %if.then37, %if.then32
  br label %if.end40, !dbg !3503

if.end40:                                         ; preds = %if.end39, %if.then28
  br label %if.end41, !dbg !3504

if.end41:                                         ; preds = %if.end40, %land.lhs.true26, %if.end
  br label %if.end42, !dbg !3505

if.end42:                                         ; preds = %if.end41, %if.then12
  br label %if.end43, !dbg !3506

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %cond.end8
  %31 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3507
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %31, i32 0, i32 52, !dbg !3509
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3509
  %tobool45 = icmp ne %struct.bNodeTree* %32, null, !dbg !3507
  br i1 %tobool45, label %land.lhs.true46, label %if.end52, !dbg !3510

land.lhs.true46:                                  ; preds = %if.end44
  %33 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3511
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %33, i32 0, i32 61, !dbg !3512
  %34 = load i8, i8* %use_nodes, align 8, !dbg !3512
  %conv47 = zext i8 %34 to i32, !dbg !3511
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !3511
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !3513

if.then49:                                        ; preds = %land.lhs.true46
  %35 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3514
  %nodetree50 = getelementptr inbounds %struct.Tex, %struct.Tex* %35, i32 0, i32 52, !dbg !3516
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree50, align 8, !dbg !3516
  %call51 = call %struct.bNodeTreeExec* @ntreeTexBeginExecTree(%struct.bNodeTree* %36), !dbg !3517
  br label %if.end52, !dbg !3518

if.end52:                                         ; preds = %if.then49, %land.lhs.true46, %if.end44
  ret void, !dbg !3519
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @end_render_textures(%struct.Render* %re) #0 !dbg !3520 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tex = alloca %struct.Tex*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3521, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3525
  %main = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 43, !dbg !3527
  %1 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !3527
  %tex1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 18, !dbg !3528
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex1, i32 0, i32 0, !dbg !3529
  %2 = load i8*, i8** %first, align 8, !dbg !3529
  %3 = bitcast i8* %2 to %struct.Tex*, !dbg !3525
  store %struct.Tex* %3, %struct.Tex** %tex, align 8, !dbg !3530
  br label %for.cond, !dbg !3531

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3532
  %tobool = icmp ne %struct.Tex* %4, null, !dbg !3534
  br i1 %tobool, label %for.body, label %for.end, !dbg !3534

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3535
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 0, !dbg !3537
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !3538
  %6 = load i32, i32* %us, align 4, !dbg !3538
  %tobool2 = icmp ne i32 %6, 0, !dbg !3535
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3539

if.then:                                          ; preds = %for.body
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3540
  call void @end_render_texture(%struct.Tex* %7), !dbg !3541
  br label %if.end, !dbg !3541

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3538

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3542
  %id3 = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 0, !dbg !3543
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 0, !dbg !3544
  %9 = load i8*, i8** %next, align 8, !dbg !3544
  %10 = bitcast i8* %9 to %struct.Tex*, !dbg !3542
  store %struct.Tex* %10, %struct.Tex** %tex, align 8, !dbg !3545
  br label %for.cond, !dbg !3546, !llvm.loop !3547

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3549
}

; Function Attrs: noinline nounwind uwtable
define internal void @end_render_texture(%struct.Tex* %tex) #0 !dbg !3550 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3555
  %tobool = icmp ne %struct.Tex* %0, null, !dbg !3555
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3557

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3558
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %1, i32 0, i32 61, !dbg !3559
  %2 = load i8, i8* %use_nodes, align 8, !dbg !3559
  %conv = zext i8 %2 to i32, !dbg !3558
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3558
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !3560

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3561
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %3, i32 0, i32 52, !dbg !3562
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3562
  %tobool3 = icmp ne %struct.bNodeTree* %4, null, !dbg !3561
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !3563

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3564
  %nodetree5 = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 52, !dbg !3565
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree5, align 8, !dbg !3565
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 27, !dbg !3566
  %7 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !3566
  %tobool6 = icmp ne %struct.bNodeTreeExec* %7, null, !dbg !3564
  br i1 %tobool6, label %if.then, label %if.end, !dbg !3567

if.then:                                          ; preds = %land.lhs.true4
  %8 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3568
  %nodetree7 = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 52, !dbg !3569
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree7, align 8, !dbg !3569
  %execdata8 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 27, !dbg !3570
  %10 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata8, align 8, !dbg !3570
  call void @ntreeTexEndExecTree(%struct.bNodeTreeExec* %10), !dbg !3571
  br label %if.end, !dbg !3571

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !3572
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multitex_nodes(%struct.Tex* %tex, float* %texvec, float* %dxt, float* %dyt, i32 %osatex, %struct.TexResult* %texres, i16 signext %thread, i16 signext %which_output, %struct.ShadeInput* %shi, %struct.MTex* %mtex, %struct.ImagePool* %pool) #0 !dbg !3573 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %osatex.addr = alloca i32, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %thread.addr = alloca i16, align 2
  %which_output.addr = alloca i16, align 2
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3589, metadata !DIExpression()), !dbg !3590
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !3591, metadata !DIExpression()), !dbg !3592
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !3593, metadata !DIExpression()), !dbg !3594
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !3595, metadata !DIExpression()), !dbg !3596
  store i32 %osatex, i32* %osatex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %osatex.addr, metadata !3597, metadata !DIExpression()), !dbg !3598
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  store i16 %thread, i16* %thread.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %thread.addr, metadata !3601, metadata !DIExpression()), !dbg !3602
  store i16 %which_output, i16* %which_output.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %which_output.addr, metadata !3603, metadata !DIExpression()), !dbg !3604
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3605, metadata !DIExpression()), !dbg !3606
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !3607, metadata !DIExpression()), !dbg !3608
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !3609, metadata !DIExpression()), !dbg !3610
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3611
  %1 = load float*, float** %texvec.addr, align 8, !dbg !3612
  %2 = load float*, float** %dxt.addr, align 8, !dbg !3613
  %3 = load float*, float** %dyt.addr, align 8, !dbg !3614
  %4 = load i32, i32* %osatex.addr, align 4, !dbg !3615
  %5 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3616
  %6 = load i16, i16* %thread.addr, align 2, !dbg !3617
  %7 = load i16, i16* %which_output.addr, align 2, !dbg !3618
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3619
  %9 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3620
  %10 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3621
  %11 = load i8, i8* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 8), align 8, !dbg !3622
  %call = call i32 @multitex_nodes_intern(%struct.Tex* %0, float* %1, float* %2, float* %3, i32 %4, %struct.TexResult* %5, i16 signext %6, i16 signext %7, %struct.ShadeInput* %8, %struct.MTex* %9, %struct.ImagePool* %10, i8 zeroext %11), !dbg !3623
  ret i32 %call, !dbg !3624
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @multitex_nodes_intern(%struct.Tex* %tex, float* %texvec, float* %dxt, float* %dyt, i32 %osatex, %struct.TexResult* %texres, i16 signext %thread, i16 signext %which_output, %struct.ShadeInput* %shi, %struct.MTex* %mtex, %struct.ImagePool* %pool, i8 zeroext %scene_color_manage) #0 !dbg !3625 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %osatex.addr = alloca i32, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %thread.addr = alloca i16, align 2
  %which_output.addr = alloca i16, align 2
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %scene_color_manage.addr = alloca i8, align 1
  %rgbnor = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %localmtex = alloca %struct.MTex, align 8
  %texvec_l = alloca [3 x float], align 4
  %dxt_l = alloca [3 x float], align 4
  %dyt_l = alloca [3 x float], align 4
  %ibuf41 = alloca %struct.ImBuf*, align 8
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3628, metadata !DIExpression()), !dbg !3629
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !3630, metadata !DIExpression()), !dbg !3631
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !3632, metadata !DIExpression()), !dbg !3633
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !3634, metadata !DIExpression()), !dbg !3635
  store i32 %osatex, i32* %osatex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %osatex.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !3638, metadata !DIExpression()), !dbg !3639
  store i16 %thread, i16* %thread.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %thread.addr, metadata !3640, metadata !DIExpression()), !dbg !3641
  store i16 %which_output, i16* %which_output.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %which_output.addr, metadata !3642, metadata !DIExpression()), !dbg !3643
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !3644, metadata !DIExpression()), !dbg !3645
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !3646, metadata !DIExpression()), !dbg !3647
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !3648, metadata !DIExpression()), !dbg !3649
  store i8 %scene_color_manage, i8* %scene_color_manage.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scene_color_manage.addr, metadata !3650, metadata !DIExpression()), !dbg !3651
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3652
  %cmp = icmp eq %struct.Tex* %0, null, !dbg !3654
  br i1 %cmp, label %if.then, label %if.end, !dbg !3655

if.then:                                          ; preds = %entry
  %1 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3656
  %2 = bitcast %struct.TexResult* %1 to i8*, !dbg !3658
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false), !dbg !3658
  store i32 0, i32* %retval, align 4, !dbg !3659
  br label %return, !dbg !3659

if.end:                                           ; preds = %entry
  %3 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3660
  %tobool = icmp ne %struct.MTex* %3, null, !dbg !3660
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !3662

if.then1:                                         ; preds = %if.end
  %4 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3663
  %which_output2 = getelementptr inbounds %struct.MTex, %struct.MTex* %4, i32 0, i32 19, !dbg !3664
  %5 = load i16, i16* %which_output2, align 2, !dbg !3664
  store i16 %5, i16* %which_output.addr, align 2, !dbg !3665
  br label %if.end3, !dbg !3666

if.end3:                                          ; preds = %if.then1, %if.end
  %6 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3667
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 32, !dbg !3669
  %7 = load i16, i16* %type, align 8, !dbg !3669
  %conv = sext i16 %7 to i32, !dbg !3667
  %cmp4 = icmp eq i32 %conv, 8, !dbg !3670
  br i1 %cmp4, label %if.then6, label %if.else58, !dbg !3671

if.then6:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i32* %rgbnor, metadata !3672, metadata !DIExpression()), !dbg !3674
  %8 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3675
  %tobool7 = icmp ne %struct.MTex* %8, null, !dbg !3675
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3677

if.then8:                                         ; preds = %if.then6
  %9 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3678
  %10 = load float*, float** %texvec.addr, align 8, !dbg !3680
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3681
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 1, !dbg !3682
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3682
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !3683
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 6, !dbg !3684
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !3683
  %14 = load float*, float** %dxt.addr, align 8, !dbg !3685
  %15 = load float*, float** %dyt.addr, align 8, !dbg !3686
  call void @do_2d_mapping(%struct.MTex* %9, float* %10, %struct.VlakRen* %12, float* %arraydecay, float* %14, float* %15), !dbg !3687
  %16 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3688
  %17 = load float*, float** %texvec.addr, align 8, !dbg !3689
  %18 = load float*, float** %dxt.addr, align 8, !dbg !3690
  %19 = load float*, float** %dyt.addr, align 8, !dbg !3691
  %20 = load i32, i32* %osatex.addr, align 4, !dbg !3692
  %21 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3693
  %22 = load i16, i16* %thread.addr, align 2, !dbg !3694
  %23 = load i16, i16* %which_output.addr, align 2, !dbg !3695
  %24 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3696
  %call = call i32 @multitex(%struct.Tex* %16, float* %17, float* %18, float* %19, i32 %20, %struct.TexResult* %21, i16 signext %22, i16 signext %23, %struct.ImagePool* %24), !dbg !3697
  store i32 %call, i32* %rgbnor, align 4, !dbg !3698
  %25 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !3699
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %25, i32 0, i32 1, !dbg !3701
  %26 = load i16, i16* %mapto, align 2, !dbg !3701
  %conv9 = sext i16 %26 to i32, !dbg !3699
  %and = and i32 %conv9, 13, !dbg !3702
  %tobool10 = icmp ne i32 %and, 0, !dbg !3702
  br i1 %tobool10, label %if.then11, label %if.end21, !dbg !3703

if.then11:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !3704, metadata !DIExpression()), !dbg !3708
  %27 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3709
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %27, i32 0, i32 54, !dbg !3710
  %28 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3710
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3711
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %29, i32 0, i32 51, !dbg !3712
  %30 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3713
  %call12 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %28, %struct.ImageUser* %iuser, %struct.ImagePool* %30), !dbg !3714
  store %struct.ImBuf* %call12, %struct.ImBuf** %ibuf, align 8, !dbg !3708
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3715
  %tobool13 = icmp ne %struct.ImBuf* %31, null, !dbg !3715
  br i1 %tobool13, label %land.lhs.true, label %if.end19, !dbg !3717

land.lhs.true:                                    ; preds = %if.then11
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3718
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 9, !dbg !3719
  %33 = load float*, float** %rect_float, align 8, !dbg !3719
  %tobool14 = icmp ne float* %33, null, !dbg !3720
  br i1 %tobool14, label %if.end19, label %land.lhs.true15, !dbg !3721

land.lhs.true15:                                  ; preds = %land.lhs.true
  %34 = load i8, i8* %scene_color_manage.addr, align 1, !dbg !3722
  %conv16 = zext i8 %34 to i32, !dbg !3722
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !3722
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3723

if.then18:                                        ; preds = %land.lhs.true15
  %35 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3724
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %35, i32 0, i32 1, !dbg !3725
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3726
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 34, !dbg !3727
  %37 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !3727
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %tr, %struct.ColorSpace* %37), !dbg !3728
  br label %if.end19, !dbg !3728

if.end19:                                         ; preds = %if.then18, %land.lhs.true15, %land.lhs.true, %if.then11
  %38 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3729
  %ima20 = getelementptr inbounds %struct.Tex, %struct.Tex* %38, i32 0, i32 54, !dbg !3730
  %39 = load %struct.Image*, %struct.Image** %ima20, align 8, !dbg !3730
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3731
  %41 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3732
  call void @BKE_image_pool_release_ibuf(%struct.Image* %39, %struct.ImBuf* %40, %struct.ImagePool* %41), !dbg !3733
  br label %if.end21, !dbg !3734

if.end21:                                         ; preds = %if.end19, %if.then8
  br label %if.end57, !dbg !3735

if.else:                                          ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.MTex* %localmtex, metadata !3736, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec_l, metadata !3739, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt_l, metadata !3741, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt_l, metadata !3743, metadata !DIExpression()), !dbg !3744
  %mapping = getelementptr inbounds %struct.MTex, %struct.MTex* %localmtex, i32 0, i32 10, !dbg !3745
  store i8 0, i8* %mapping, align 1, !dbg !3746
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3747
  %tex22 = getelementptr inbounds %struct.MTex, %struct.MTex* %localmtex, i32 0, i32 5, !dbg !3748
  store %struct.Tex* %42, %struct.Tex** %tex22, align 8, !dbg !3749
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %localmtex, i32 0, i32 4, !dbg !3750
  store %struct.Object* null, %struct.Object** %object, align 8, !dbg !3751
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %localmtex, i32 0, i32 0, !dbg !3752
  store i16 1, i16* %texco, align 8, !dbg !3753
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %texvec_l, i64 0, i64 0, !dbg !3754
  %43 = load float*, float** %texvec.addr, align 8, !dbg !3755
  call void @copy_v3_v3(float* %arraydecay23, float* %43), !dbg !3756
  %44 = load float*, float** %dxt.addr, align 8, !dbg !3757
  %tobool24 = icmp ne float* %44, null, !dbg !3757
  br i1 %tobool24, label %land.lhs.true25, label %if.else30, !dbg !3759

land.lhs.true25:                                  ; preds = %if.else
  %45 = load float*, float** %dyt.addr, align 8, !dbg !3760
  %tobool26 = icmp ne float* %45, null, !dbg !3760
  br i1 %tobool26, label %if.then27, label %if.else30, !dbg !3761

if.then27:                                        ; preds = %land.lhs.true25
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %dxt_l, i64 0, i64 0, !dbg !3762
  %46 = load float*, float** %dxt.addr, align 8, !dbg !3764
  call void @copy_v3_v3(float* %arraydecay28, float* %46), !dbg !3765
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %dyt_l, i64 0, i64 0, !dbg !3766
  %47 = load float*, float** %dyt.addr, align 8, !dbg !3767
  call void @copy_v3_v3(float* %arraydecay29, float* %47), !dbg !3768
  br label %if.end33, !dbg !3769

if.else30:                                        ; preds = %land.lhs.true25, %if.else
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %dxt_l, i64 0, i64 0, !dbg !3770
  call void @zero_v3(float* %arraydecay31), !dbg !3772
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %dyt_l, i64 0, i64 0, !dbg !3773
  call void @zero_v3(float* %arraydecay32), !dbg !3774
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then27
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %texvec_l, i64 0, i64 0, !dbg !3775
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %dxt_l, i64 0, i64 0, !dbg !3776
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %dyt_l, i64 0, i64 0, !dbg !3777
  call void @do_2d_mapping(%struct.MTex* %localmtex, float* %arraydecay34, %struct.VlakRen* null, float* null, float* %arraydecay35, float* %arraydecay36), !dbg !3778
  %48 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3779
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %texvec_l, i64 0, i64 0, !dbg !3780
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %dxt_l, i64 0, i64 0, !dbg !3781
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %dyt_l, i64 0, i64 0, !dbg !3782
  %49 = load i32, i32* %osatex.addr, align 4, !dbg !3783
  %50 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3784
  %51 = load i16, i16* %thread.addr, align 2, !dbg !3785
  %52 = load i16, i16* %which_output.addr, align 2, !dbg !3786
  %53 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3787
  %call40 = call i32 @multitex(%struct.Tex* %48, float* %arraydecay37, float* %arraydecay38, float* %arraydecay39, i32 %49, %struct.TexResult* %50, i16 signext %51, i16 signext %52, %struct.ImagePool* %53), !dbg !3788
  store i32 %call40, i32* %rgbnor, align 4, !dbg !3789
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf41, metadata !3790, metadata !DIExpression()), !dbg !3792
  %54 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3793
  %ima42 = getelementptr inbounds %struct.Tex, %struct.Tex* %54, i32 0, i32 54, !dbg !3794
  %55 = load %struct.Image*, %struct.Image** %ima42, align 8, !dbg !3794
  %56 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3795
  %iuser43 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 51, !dbg !3796
  %57 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3797
  %call44 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %55, %struct.ImageUser* %iuser43, %struct.ImagePool* %57), !dbg !3798
  store %struct.ImBuf* %call44, %struct.ImBuf** %ibuf41, align 8, !dbg !3792
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf41, align 8, !dbg !3799
  %tobool45 = icmp ne %struct.ImBuf* %58, null, !dbg !3799
  br i1 %tobool45, label %land.lhs.true46, label %if.end55, !dbg !3801

land.lhs.true46:                                  ; preds = %if.end33
  %59 = load %struct.ImBuf*, %struct.ImBuf** %ibuf41, align 8, !dbg !3802
  %rect_float47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %59, i32 0, i32 9, !dbg !3803
  %60 = load float*, float** %rect_float47, align 8, !dbg !3803
  %tobool48 = icmp ne float* %60, null, !dbg !3804
  br i1 %tobool48, label %if.end55, label %land.lhs.true49, !dbg !3805

land.lhs.true49:                                  ; preds = %land.lhs.true46
  %61 = load i8, i8* %scene_color_manage.addr, align 1, !dbg !3806
  %conv50 = zext i8 %61 to i32, !dbg !3806
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !3806
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !3807

if.then52:                                        ; preds = %land.lhs.true49
  %62 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3808
  %tr53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %62, i32 0, i32 1, !dbg !3809
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf41, align 8, !dbg !3810
  %rect_colorspace54 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %63, i32 0, i32 34, !dbg !3811
  %64 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace54, align 8, !dbg !3811
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %tr53, %struct.ColorSpace* %64), !dbg !3812
  br label %if.end55, !dbg !3812

if.end55:                                         ; preds = %if.then52, %land.lhs.true49, %land.lhs.true46, %if.end33
  %65 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3813
  %ima56 = getelementptr inbounds %struct.Tex, %struct.Tex* %65, i32 0, i32 54, !dbg !3814
  %66 = load %struct.Image*, %struct.Image** %ima56, align 8, !dbg !3814
  %67 = load %struct.ImBuf*, %struct.ImBuf** %ibuf41, align 8, !dbg !3815
  %68 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3816
  call void @BKE_image_pool_release_ibuf(%struct.Image* %66, %struct.ImBuf* %67, %struct.ImagePool* %68), !dbg !3817
  br label %if.end57

if.end57:                                         ; preds = %if.end55, %if.end21
  %69 = load i32, i32* %rgbnor, align 4, !dbg !3818
  store i32 %69, i32* %retval, align 4, !dbg !3819
  br label %return, !dbg !3819

if.else58:                                        ; preds = %if.end3
  %70 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3820
  %71 = load float*, float** %texvec.addr, align 8, !dbg !3822
  %72 = load float*, float** %dxt.addr, align 8, !dbg !3823
  %73 = load float*, float** %dyt.addr, align 8, !dbg !3824
  %74 = load i32, i32* %osatex.addr, align 4, !dbg !3825
  %75 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3826
  %76 = load i16, i16* %thread.addr, align 2, !dbg !3827
  %77 = load i16, i16* %which_output.addr, align 2, !dbg !3828
  %78 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3829
  %call59 = call i32 @multitex(%struct.Tex* %70, float* %71, float* %72, float* %73, i32 %74, %struct.TexResult* %75, i16 signext %76, i16 signext %77, %struct.ImagePool* %78), !dbg !3830
  store i32 %call59, i32* %retval, align 4, !dbg !3831
  br label %return, !dbg !3831

return:                                           ; preds = %if.else58, %if.end57, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !3832
  ret i32 %79, !dbg !3832
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multitex_ext(%struct.Tex* %tex, float* %texvec, float* %dxt, float* %dyt, i32 %osatex, %struct.TexResult* %texres, %struct.ImagePool* %pool, i8 zeroext %scene_color_manage) #0 !dbg !3833 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %osatex.addr = alloca i32, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %scene_color_manage.addr = alloca i8, align 1
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3836, metadata !DIExpression()), !dbg !3837
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !3838, metadata !DIExpression()), !dbg !3839
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !3842, metadata !DIExpression()), !dbg !3843
  store i32 %osatex, i32* %osatex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %osatex.addr, metadata !3844, metadata !DIExpression()), !dbg !3845
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !3846, metadata !DIExpression()), !dbg !3847
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  store i8 %scene_color_manage, i8* %scene_color_manage.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scene_color_manage.addr, metadata !3850, metadata !DIExpression()), !dbg !3851
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3852
  %1 = load float*, float** %texvec.addr, align 8, !dbg !3853
  %2 = load float*, float** %dxt.addr, align 8, !dbg !3854
  %3 = load float*, float** %dyt.addr, align 8, !dbg !3855
  %4 = load i32, i32* %osatex.addr, align 4, !dbg !3856
  %5 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3857
  %6 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3858
  %7 = load i8, i8* %scene_color_manage.addr, align 1, !dbg !3859
  %call = call i32 @multitex_nodes_intern(%struct.Tex* %0, float* %1, float* %2, float* %3, i32 %4, %struct.TexResult* %5, i16 signext 0, i16 signext 0, %struct.ShadeInput* null, %struct.MTex* null, %struct.ImagePool* %6, i8 zeroext %7), !dbg !3860
  ret i32 %call, !dbg !3861
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multitex_ext_safe(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres, %struct.ImagePool* %pool, i8 zeroext %scene_color_manage) #0 !dbg !3862 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %scene_color_manage.addr = alloca i8, align 1
  %use_nodes = alloca i32, align 4
  %retval2 = alloca i32, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !3865, metadata !DIExpression()), !dbg !3866
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !3867, metadata !DIExpression()), !dbg !3868
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !3869, metadata !DIExpression()), !dbg !3870
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !3871, metadata !DIExpression()), !dbg !3872
  store i8 %scene_color_manage, i8* %scene_color_manage.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scene_color_manage.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata i32* %use_nodes, metadata !3875, metadata !DIExpression()), !dbg !3876
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3877
  %use_nodes1 = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 61, !dbg !3878
  %1 = load i8, i8* %use_nodes1, align 8, !dbg !3878
  %conv = zext i8 %1 to i32, !dbg !3877
  store i32 %conv, i32* %use_nodes, align 4, !dbg !3876
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !3879, metadata !DIExpression()), !dbg !3880
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3881
  %use_nodes3 = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 61, !dbg !3882
  store i8 0, i8* %use_nodes3, align 8, !dbg !3883
  %3 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3884
  %4 = load float*, float** %texvec.addr, align 8, !dbg !3885
  %5 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !3886
  %6 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !3887
  %7 = load i8, i8* %scene_color_manage.addr, align 1, !dbg !3888
  %call = call i32 @multitex_nodes_intern(%struct.Tex* %3, float* %4, float* null, float* null, i32 0, %struct.TexResult* %5, i16 signext 0, i16 signext 0, %struct.ShadeInput* null, %struct.MTex* null, %struct.ImagePool* %6, i8 zeroext %7), !dbg !3889
  store i32 %call, i32* %retval2, align 4, !dbg !3890
  %8 = load i32, i32* %use_nodes, align 4, !dbg !3891
  %conv4 = trunc i32 %8 to i8, !dbg !3891
  %9 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !3892
  %use_nodes5 = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 61, !dbg !3893
  store i8 %conv4, i8* %use_nodes5, align 8, !dbg !3894
  %10 = load i32, i32* %retval2, align 4, !dbg !3895
  ret i32 %10, !dbg !3896
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @texture_rgb_blend(float* %in, float* %tex, float* %out, float %fact, float %facg, i32 %blendtype) #0 !dbg !3897 {
entry:
  %in.addr = alloca float*, align 8
  %tex.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fact.addr = alloca float, align 4
  %facg.addr = alloca float, align 4
  %blendtype.addr = alloca i32, align 4
  %facm = alloca float, align 4
  %col = alloca float, align 4
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !3900, metadata !DIExpression()), !dbg !3901
  store float* %tex, float** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tex.addr, metadata !3902, metadata !DIExpression()), !dbg !3903
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !3904, metadata !DIExpression()), !dbg !3905
  store float %fact, float* %fact.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fact.addr, metadata !3906, metadata !DIExpression()), !dbg !3907
  store float %facg, float* %facg.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facg.addr, metadata !3908, metadata !DIExpression()), !dbg !3909
  store i32 %blendtype, i32* %blendtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blendtype.addr, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata float* %facm, metadata !3912, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.declare(metadata float* %col, metadata !3914, metadata !DIExpression()), !dbg !3915
  %0 = load i32, i32* %blendtype.addr, align 4, !dbg !3916
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 8, label %sw.bb38
    i32 9, label %sw.bb68
    i32 3, label %sw.bb133
    i32 2, label %sw.bb134
    i32 4, label %sw.bb151
    i32 6, label %sw.bb189
    i32 5, label %sw.bb216
    i32 7, label %sw.bb242
    i32 10, label %sw.bb274
    i32 11, label %sw.bb276
    i32 12, label %sw.bb278
    i32 13, label %sw.bb280
    i32 15, label %sw.bb282
    i32 16, label %sw.bb284
  ], !dbg !3917

sw.bb:                                            ; preds = %entry
  %1 = load float, float* %facg.addr, align 4, !dbg !3918
  %2 = load float, float* %fact.addr, align 4, !dbg !3920
  %mul = fmul float %2, %1, !dbg !3920
  store float %mul, float* %fact.addr, align 4, !dbg !3920
  %3 = load float, float* %fact.addr, align 4, !dbg !3921
  %sub = fsub float 1.000000e+00, %3, !dbg !3922
  store float %sub, float* %facm, align 4, !dbg !3923
  %4 = load float, float* %fact.addr, align 4, !dbg !3924
  %5 = load float*, float** %tex.addr, align 8, !dbg !3925
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !3925
  %6 = load float, float* %arrayidx, align 4, !dbg !3925
  %mul1 = fmul float %4, %6, !dbg !3926
  %7 = load float, float* %facm, align 4, !dbg !3927
  %8 = load float*, float** %out.addr, align 8, !dbg !3928
  %arrayidx2 = getelementptr inbounds float, float* %8, i64 0, !dbg !3928
  %9 = load float, float* %arrayidx2, align 4, !dbg !3928
  %mul3 = fmul float %7, %9, !dbg !3929
  %add = fadd float %mul1, %mul3, !dbg !3930
  %10 = load float*, float** %in.addr, align 8, !dbg !3931
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !3931
  store float %add, float* %arrayidx4, align 4, !dbg !3932
  %11 = load float, float* %fact.addr, align 4, !dbg !3933
  %12 = load float*, float** %tex.addr, align 8, !dbg !3934
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !3934
  %13 = load float, float* %arrayidx5, align 4, !dbg !3934
  %mul6 = fmul float %11, %13, !dbg !3935
  %14 = load float, float* %facm, align 4, !dbg !3936
  %15 = load float*, float** %out.addr, align 8, !dbg !3937
  %arrayidx7 = getelementptr inbounds float, float* %15, i64 1, !dbg !3937
  %16 = load float, float* %arrayidx7, align 4, !dbg !3937
  %mul8 = fmul float %14, %16, !dbg !3938
  %add9 = fadd float %mul6, %mul8, !dbg !3939
  %17 = load float*, float** %in.addr, align 8, !dbg !3940
  %arrayidx10 = getelementptr inbounds float, float* %17, i64 1, !dbg !3940
  store float %add9, float* %arrayidx10, align 4, !dbg !3941
  %18 = load float, float* %fact.addr, align 4, !dbg !3942
  %19 = load float*, float** %tex.addr, align 8, !dbg !3943
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 2, !dbg !3943
  %20 = load float, float* %arrayidx11, align 4, !dbg !3943
  %mul12 = fmul float %18, %20, !dbg !3944
  %21 = load float, float* %facm, align 4, !dbg !3945
  %22 = load float*, float** %out.addr, align 8, !dbg !3946
  %arrayidx13 = getelementptr inbounds float, float* %22, i64 2, !dbg !3946
  %23 = load float, float* %arrayidx13, align 4, !dbg !3946
  %mul14 = fmul float %21, %23, !dbg !3947
  %add15 = fadd float %mul12, %mul14, !dbg !3948
  %24 = load float*, float** %in.addr, align 8, !dbg !3949
  %arrayidx16 = getelementptr inbounds float, float* %24, i64 2, !dbg !3949
  store float %add15, float* %arrayidx16, align 4, !dbg !3950
  br label %sw.epilog, !dbg !3951

sw.bb17:                                          ; preds = %entry
  %25 = load float, float* %facg.addr, align 4, !dbg !3952
  %26 = load float, float* %fact.addr, align 4, !dbg !3953
  %mul18 = fmul float %26, %25, !dbg !3953
  store float %mul18, float* %fact.addr, align 4, !dbg !3953
  %27 = load float, float* %fact.addr, align 4, !dbg !3954
  %sub19 = fsub float 1.000000e+00, %27, !dbg !3955
  store float %sub19, float* %facm, align 4, !dbg !3956
  %28 = load float, float* %facm, align 4, !dbg !3957
  %29 = load float, float* %fact.addr, align 4, !dbg !3958
  %30 = load float*, float** %tex.addr, align 8, !dbg !3959
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 0, !dbg !3959
  %31 = load float, float* %arrayidx20, align 4, !dbg !3959
  %mul21 = fmul float %29, %31, !dbg !3960
  %add22 = fadd float %28, %mul21, !dbg !3961
  %32 = load float*, float** %out.addr, align 8, !dbg !3962
  %arrayidx23 = getelementptr inbounds float, float* %32, i64 0, !dbg !3962
  %33 = load float, float* %arrayidx23, align 4, !dbg !3962
  %mul24 = fmul float %add22, %33, !dbg !3963
  %34 = load float*, float** %in.addr, align 8, !dbg !3964
  %arrayidx25 = getelementptr inbounds float, float* %34, i64 0, !dbg !3964
  store float %mul24, float* %arrayidx25, align 4, !dbg !3965
  %35 = load float, float* %facm, align 4, !dbg !3966
  %36 = load float, float* %fact.addr, align 4, !dbg !3967
  %37 = load float*, float** %tex.addr, align 8, !dbg !3968
  %arrayidx26 = getelementptr inbounds float, float* %37, i64 1, !dbg !3968
  %38 = load float, float* %arrayidx26, align 4, !dbg !3968
  %mul27 = fmul float %36, %38, !dbg !3969
  %add28 = fadd float %35, %mul27, !dbg !3970
  %39 = load float*, float** %out.addr, align 8, !dbg !3971
  %arrayidx29 = getelementptr inbounds float, float* %39, i64 1, !dbg !3971
  %40 = load float, float* %arrayidx29, align 4, !dbg !3971
  %mul30 = fmul float %add28, %40, !dbg !3972
  %41 = load float*, float** %in.addr, align 8, !dbg !3973
  %arrayidx31 = getelementptr inbounds float, float* %41, i64 1, !dbg !3973
  store float %mul30, float* %arrayidx31, align 4, !dbg !3974
  %42 = load float, float* %facm, align 4, !dbg !3975
  %43 = load float, float* %fact.addr, align 4, !dbg !3976
  %44 = load float*, float** %tex.addr, align 8, !dbg !3977
  %arrayidx32 = getelementptr inbounds float, float* %44, i64 2, !dbg !3977
  %45 = load float, float* %arrayidx32, align 4, !dbg !3977
  %mul33 = fmul float %43, %45, !dbg !3978
  %add34 = fadd float %42, %mul33, !dbg !3979
  %46 = load float*, float** %out.addr, align 8, !dbg !3980
  %arrayidx35 = getelementptr inbounds float, float* %46, i64 2, !dbg !3980
  %47 = load float, float* %arrayidx35, align 4, !dbg !3980
  %mul36 = fmul float %add34, %47, !dbg !3981
  %48 = load float*, float** %in.addr, align 8, !dbg !3982
  %arrayidx37 = getelementptr inbounds float, float* %48, i64 2, !dbg !3982
  store float %mul36, float* %arrayidx37, align 4, !dbg !3983
  br label %sw.epilog, !dbg !3984

sw.bb38:                                          ; preds = %entry
  %49 = load float, float* %facg.addr, align 4, !dbg !3985
  %50 = load float, float* %fact.addr, align 4, !dbg !3986
  %mul39 = fmul float %50, %49, !dbg !3986
  store float %mul39, float* %fact.addr, align 4, !dbg !3986
  %51 = load float, float* %fact.addr, align 4, !dbg !3987
  %sub40 = fsub float 1.000000e+00, %51, !dbg !3988
  store float %sub40, float* %facm, align 4, !dbg !3989
  %52 = load float, float* %facm, align 4, !dbg !3990
  %53 = load float, float* %fact.addr, align 4, !dbg !3991
  %54 = load float*, float** %tex.addr, align 8, !dbg !3992
  %arrayidx41 = getelementptr inbounds float, float* %54, i64 0, !dbg !3992
  %55 = load float, float* %arrayidx41, align 4, !dbg !3992
  %sub42 = fsub float 1.000000e+00, %55, !dbg !3993
  %mul43 = fmul float %53, %sub42, !dbg !3994
  %add44 = fadd float %52, %mul43, !dbg !3995
  %56 = load float*, float** %out.addr, align 8, !dbg !3996
  %arrayidx45 = getelementptr inbounds float, float* %56, i64 0, !dbg !3996
  %57 = load float, float* %arrayidx45, align 4, !dbg !3996
  %sub46 = fsub float 1.000000e+00, %57, !dbg !3997
  %mul47 = fmul float %add44, %sub46, !dbg !3998
  %sub48 = fsub float 1.000000e+00, %mul47, !dbg !3999
  %58 = load float*, float** %in.addr, align 8, !dbg !4000
  %arrayidx49 = getelementptr inbounds float, float* %58, i64 0, !dbg !4000
  store float %sub48, float* %arrayidx49, align 4, !dbg !4001
  %59 = load float, float* %facm, align 4, !dbg !4002
  %60 = load float, float* %fact.addr, align 4, !dbg !4003
  %61 = load float*, float** %tex.addr, align 8, !dbg !4004
  %arrayidx50 = getelementptr inbounds float, float* %61, i64 1, !dbg !4004
  %62 = load float, float* %arrayidx50, align 4, !dbg !4004
  %sub51 = fsub float 1.000000e+00, %62, !dbg !4005
  %mul52 = fmul float %60, %sub51, !dbg !4006
  %add53 = fadd float %59, %mul52, !dbg !4007
  %63 = load float*, float** %out.addr, align 8, !dbg !4008
  %arrayidx54 = getelementptr inbounds float, float* %63, i64 1, !dbg !4008
  %64 = load float, float* %arrayidx54, align 4, !dbg !4008
  %sub55 = fsub float 1.000000e+00, %64, !dbg !4009
  %mul56 = fmul float %add53, %sub55, !dbg !4010
  %sub57 = fsub float 1.000000e+00, %mul56, !dbg !4011
  %65 = load float*, float** %in.addr, align 8, !dbg !4012
  %arrayidx58 = getelementptr inbounds float, float* %65, i64 1, !dbg !4012
  store float %sub57, float* %arrayidx58, align 4, !dbg !4013
  %66 = load float, float* %facm, align 4, !dbg !4014
  %67 = load float, float* %fact.addr, align 4, !dbg !4015
  %68 = load float*, float** %tex.addr, align 8, !dbg !4016
  %arrayidx59 = getelementptr inbounds float, float* %68, i64 2, !dbg !4016
  %69 = load float, float* %arrayidx59, align 4, !dbg !4016
  %sub60 = fsub float 1.000000e+00, %69, !dbg !4017
  %mul61 = fmul float %67, %sub60, !dbg !4018
  %add62 = fadd float %66, %mul61, !dbg !4019
  %70 = load float*, float** %out.addr, align 8, !dbg !4020
  %arrayidx63 = getelementptr inbounds float, float* %70, i64 2, !dbg !4020
  %71 = load float, float* %arrayidx63, align 4, !dbg !4020
  %sub64 = fsub float 1.000000e+00, %71, !dbg !4021
  %mul65 = fmul float %add62, %sub64, !dbg !4022
  %sub66 = fsub float 1.000000e+00, %mul65, !dbg !4023
  %72 = load float*, float** %in.addr, align 8, !dbg !4024
  %arrayidx67 = getelementptr inbounds float, float* %72, i64 2, !dbg !4024
  store float %sub66, float* %arrayidx67, align 4, !dbg !4025
  br label %sw.epilog, !dbg !4026

sw.bb68:                                          ; preds = %entry
  %73 = load float, float* %facg.addr, align 4, !dbg !4027
  %74 = load float, float* %fact.addr, align 4, !dbg !4028
  %mul69 = fmul float %74, %73, !dbg !4028
  store float %mul69, float* %fact.addr, align 4, !dbg !4028
  %75 = load float, float* %fact.addr, align 4, !dbg !4029
  %sub70 = fsub float 1.000000e+00, %75, !dbg !4030
  store float %sub70, float* %facm, align 4, !dbg !4031
  %76 = load float*, float** %out.addr, align 8, !dbg !4032
  %arrayidx71 = getelementptr inbounds float, float* %76, i64 0, !dbg !4032
  %77 = load float, float* %arrayidx71, align 4, !dbg !4032
  %cmp = fcmp olt float %77, 5.000000e-01, !dbg !4034
  br i1 %cmp, label %if.then, label %if.else, !dbg !4035

if.then:                                          ; preds = %sw.bb68
  %78 = load float*, float** %out.addr, align 8, !dbg !4036
  %arrayidx72 = getelementptr inbounds float, float* %78, i64 0, !dbg !4036
  %79 = load float, float* %arrayidx72, align 4, !dbg !4036
  %80 = load float, float* %facm, align 4, !dbg !4037
  %81 = load float, float* %fact.addr, align 4, !dbg !4038
  %mul73 = fmul float 2.000000e+00, %81, !dbg !4039
  %82 = load float*, float** %tex.addr, align 8, !dbg !4040
  %arrayidx74 = getelementptr inbounds float, float* %82, i64 0, !dbg !4040
  %83 = load float, float* %arrayidx74, align 4, !dbg !4040
  %mul75 = fmul float %mul73, %83, !dbg !4041
  %add76 = fadd float %80, %mul75, !dbg !4042
  %mul77 = fmul float %79, %add76, !dbg !4043
  %84 = load float*, float** %in.addr, align 8, !dbg !4044
  %arrayidx78 = getelementptr inbounds float, float* %84, i64 0, !dbg !4044
  store float %mul77, float* %arrayidx78, align 4, !dbg !4045
  br label %if.end, !dbg !4044

if.else:                                          ; preds = %sw.bb68
  %85 = load float, float* %facm, align 4, !dbg !4046
  %86 = load float, float* %fact.addr, align 4, !dbg !4047
  %mul79 = fmul float 2.000000e+00, %86, !dbg !4048
  %87 = load float*, float** %tex.addr, align 8, !dbg !4049
  %arrayidx80 = getelementptr inbounds float, float* %87, i64 0, !dbg !4049
  %88 = load float, float* %arrayidx80, align 4, !dbg !4049
  %sub81 = fsub float 1.000000e+00, %88, !dbg !4050
  %mul82 = fmul float %mul79, %sub81, !dbg !4051
  %add83 = fadd float %85, %mul82, !dbg !4052
  %89 = load float*, float** %out.addr, align 8, !dbg !4053
  %arrayidx84 = getelementptr inbounds float, float* %89, i64 0, !dbg !4053
  %90 = load float, float* %arrayidx84, align 4, !dbg !4053
  %sub85 = fsub float 1.000000e+00, %90, !dbg !4054
  %mul86 = fmul float %add83, %sub85, !dbg !4055
  %sub87 = fsub float 1.000000e+00, %mul86, !dbg !4056
  %91 = load float*, float** %in.addr, align 8, !dbg !4057
  %arrayidx88 = getelementptr inbounds float, float* %91, i64 0, !dbg !4057
  store float %sub87, float* %arrayidx88, align 4, !dbg !4058
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %92 = load float*, float** %out.addr, align 8, !dbg !4059
  %arrayidx89 = getelementptr inbounds float, float* %92, i64 1, !dbg !4059
  %93 = load float, float* %arrayidx89, align 4, !dbg !4059
  %cmp90 = fcmp olt float %93, 5.000000e-01, !dbg !4061
  br i1 %cmp90, label %if.then91, label %if.else99, !dbg !4062

if.then91:                                        ; preds = %if.end
  %94 = load float*, float** %out.addr, align 8, !dbg !4063
  %arrayidx92 = getelementptr inbounds float, float* %94, i64 1, !dbg !4063
  %95 = load float, float* %arrayidx92, align 4, !dbg !4063
  %96 = load float, float* %facm, align 4, !dbg !4064
  %97 = load float, float* %fact.addr, align 4, !dbg !4065
  %mul93 = fmul float 2.000000e+00, %97, !dbg !4066
  %98 = load float*, float** %tex.addr, align 8, !dbg !4067
  %arrayidx94 = getelementptr inbounds float, float* %98, i64 1, !dbg !4067
  %99 = load float, float* %arrayidx94, align 4, !dbg !4067
  %mul95 = fmul float %mul93, %99, !dbg !4068
  %add96 = fadd float %96, %mul95, !dbg !4069
  %mul97 = fmul float %95, %add96, !dbg !4070
  %100 = load float*, float** %in.addr, align 8, !dbg !4071
  %arrayidx98 = getelementptr inbounds float, float* %100, i64 1, !dbg !4071
  store float %mul97, float* %arrayidx98, align 4, !dbg !4072
  br label %if.end110, !dbg !4071

if.else99:                                        ; preds = %if.end
  %101 = load float, float* %facm, align 4, !dbg !4073
  %102 = load float, float* %fact.addr, align 4, !dbg !4074
  %mul100 = fmul float 2.000000e+00, %102, !dbg !4075
  %103 = load float*, float** %tex.addr, align 8, !dbg !4076
  %arrayidx101 = getelementptr inbounds float, float* %103, i64 1, !dbg !4076
  %104 = load float, float* %arrayidx101, align 4, !dbg !4076
  %sub102 = fsub float 1.000000e+00, %104, !dbg !4077
  %mul103 = fmul float %mul100, %sub102, !dbg !4078
  %add104 = fadd float %101, %mul103, !dbg !4079
  %105 = load float*, float** %out.addr, align 8, !dbg !4080
  %arrayidx105 = getelementptr inbounds float, float* %105, i64 1, !dbg !4080
  %106 = load float, float* %arrayidx105, align 4, !dbg !4080
  %sub106 = fsub float 1.000000e+00, %106, !dbg !4081
  %mul107 = fmul float %add104, %sub106, !dbg !4082
  %sub108 = fsub float 1.000000e+00, %mul107, !dbg !4083
  %107 = load float*, float** %in.addr, align 8, !dbg !4084
  %arrayidx109 = getelementptr inbounds float, float* %107, i64 1, !dbg !4084
  store float %sub108, float* %arrayidx109, align 4, !dbg !4085
  br label %if.end110

if.end110:                                        ; preds = %if.else99, %if.then91
  %108 = load float*, float** %out.addr, align 8, !dbg !4086
  %arrayidx111 = getelementptr inbounds float, float* %108, i64 2, !dbg !4086
  %109 = load float, float* %arrayidx111, align 4, !dbg !4086
  %cmp112 = fcmp olt float %109, 5.000000e-01, !dbg !4088
  br i1 %cmp112, label %if.then113, label %if.else121, !dbg !4089

if.then113:                                       ; preds = %if.end110
  %110 = load float*, float** %out.addr, align 8, !dbg !4090
  %arrayidx114 = getelementptr inbounds float, float* %110, i64 2, !dbg !4090
  %111 = load float, float* %arrayidx114, align 4, !dbg !4090
  %112 = load float, float* %facm, align 4, !dbg !4091
  %113 = load float, float* %fact.addr, align 4, !dbg !4092
  %mul115 = fmul float 2.000000e+00, %113, !dbg !4093
  %114 = load float*, float** %tex.addr, align 8, !dbg !4094
  %arrayidx116 = getelementptr inbounds float, float* %114, i64 2, !dbg !4094
  %115 = load float, float* %arrayidx116, align 4, !dbg !4094
  %mul117 = fmul float %mul115, %115, !dbg !4095
  %add118 = fadd float %112, %mul117, !dbg !4096
  %mul119 = fmul float %111, %add118, !dbg !4097
  %116 = load float*, float** %in.addr, align 8, !dbg !4098
  %arrayidx120 = getelementptr inbounds float, float* %116, i64 2, !dbg !4098
  store float %mul119, float* %arrayidx120, align 4, !dbg !4099
  br label %if.end132, !dbg !4098

if.else121:                                       ; preds = %if.end110
  %117 = load float, float* %facm, align 4, !dbg !4100
  %118 = load float, float* %fact.addr, align 4, !dbg !4101
  %mul122 = fmul float 2.000000e+00, %118, !dbg !4102
  %119 = load float*, float** %tex.addr, align 8, !dbg !4103
  %arrayidx123 = getelementptr inbounds float, float* %119, i64 2, !dbg !4103
  %120 = load float, float* %arrayidx123, align 4, !dbg !4103
  %sub124 = fsub float 1.000000e+00, %120, !dbg !4104
  %mul125 = fmul float %mul122, %sub124, !dbg !4105
  %add126 = fadd float %117, %mul125, !dbg !4106
  %121 = load float*, float** %out.addr, align 8, !dbg !4107
  %arrayidx127 = getelementptr inbounds float, float* %121, i64 2, !dbg !4107
  %122 = load float, float* %arrayidx127, align 4, !dbg !4107
  %sub128 = fsub float 1.000000e+00, %122, !dbg !4108
  %mul129 = fmul float %add126, %sub128, !dbg !4109
  %sub130 = fsub float 1.000000e+00, %mul129, !dbg !4110
  %123 = load float*, float** %in.addr, align 8, !dbg !4111
  %arrayidx131 = getelementptr inbounds float, float* %123, i64 2, !dbg !4111
  store float %sub130, float* %arrayidx131, align 4, !dbg !4112
  br label %if.end132

if.end132:                                        ; preds = %if.else121, %if.then113
  br label %sw.epilog, !dbg !4113

sw.bb133:                                         ; preds = %entry
  %124 = load float, float* %fact.addr, align 4, !dbg !4114
  %fneg = fneg float %124, !dbg !4115
  store float %fneg, float* %fact.addr, align 4, !dbg !4116
  br label %sw.bb134, !dbg !4117

sw.bb134:                                         ; preds = %entry, %sw.bb133
  %125 = load float, float* %facg.addr, align 4, !dbg !4118
  %126 = load float, float* %fact.addr, align 4, !dbg !4119
  %mul135 = fmul float %126, %125, !dbg !4119
  store float %mul135, float* %fact.addr, align 4, !dbg !4119
  %127 = load float, float* %fact.addr, align 4, !dbg !4120
  %128 = load float*, float** %tex.addr, align 8, !dbg !4121
  %arrayidx136 = getelementptr inbounds float, float* %128, i64 0, !dbg !4121
  %129 = load float, float* %arrayidx136, align 4, !dbg !4121
  %mul137 = fmul float %127, %129, !dbg !4122
  %130 = load float*, float** %out.addr, align 8, !dbg !4123
  %arrayidx138 = getelementptr inbounds float, float* %130, i64 0, !dbg !4123
  %131 = load float, float* %arrayidx138, align 4, !dbg !4123
  %add139 = fadd float %mul137, %131, !dbg !4124
  %132 = load float*, float** %in.addr, align 8, !dbg !4125
  %arrayidx140 = getelementptr inbounds float, float* %132, i64 0, !dbg !4125
  store float %add139, float* %arrayidx140, align 4, !dbg !4126
  %133 = load float, float* %fact.addr, align 4, !dbg !4127
  %134 = load float*, float** %tex.addr, align 8, !dbg !4128
  %arrayidx141 = getelementptr inbounds float, float* %134, i64 1, !dbg !4128
  %135 = load float, float* %arrayidx141, align 4, !dbg !4128
  %mul142 = fmul float %133, %135, !dbg !4129
  %136 = load float*, float** %out.addr, align 8, !dbg !4130
  %arrayidx143 = getelementptr inbounds float, float* %136, i64 1, !dbg !4130
  %137 = load float, float* %arrayidx143, align 4, !dbg !4130
  %add144 = fadd float %mul142, %137, !dbg !4131
  %138 = load float*, float** %in.addr, align 8, !dbg !4132
  %arrayidx145 = getelementptr inbounds float, float* %138, i64 1, !dbg !4132
  store float %add144, float* %arrayidx145, align 4, !dbg !4133
  %139 = load float, float* %fact.addr, align 4, !dbg !4134
  %140 = load float*, float** %tex.addr, align 8, !dbg !4135
  %arrayidx146 = getelementptr inbounds float, float* %140, i64 2, !dbg !4135
  %141 = load float, float* %arrayidx146, align 4, !dbg !4135
  %mul147 = fmul float %139, %141, !dbg !4136
  %142 = load float*, float** %out.addr, align 8, !dbg !4137
  %arrayidx148 = getelementptr inbounds float, float* %142, i64 2, !dbg !4137
  %143 = load float, float* %arrayidx148, align 4, !dbg !4137
  %add149 = fadd float %mul147, %143, !dbg !4138
  %144 = load float*, float** %in.addr, align 8, !dbg !4139
  %arrayidx150 = getelementptr inbounds float, float* %144, i64 2, !dbg !4139
  store float %add149, float* %arrayidx150, align 4, !dbg !4140
  br label %sw.epilog, !dbg !4141

sw.bb151:                                         ; preds = %entry
  %145 = load float, float* %facg.addr, align 4, !dbg !4142
  %146 = load float, float* %fact.addr, align 4, !dbg !4143
  %mul152 = fmul float %146, %145, !dbg !4143
  store float %mul152, float* %fact.addr, align 4, !dbg !4143
  %147 = load float, float* %fact.addr, align 4, !dbg !4144
  %sub153 = fsub float 1.000000e+00, %147, !dbg !4145
  store float %sub153, float* %facm, align 4, !dbg !4146
  %148 = load float*, float** %tex.addr, align 8, !dbg !4147
  %arrayidx154 = getelementptr inbounds float, float* %148, i64 0, !dbg !4147
  %149 = load float, float* %arrayidx154, align 4, !dbg !4147
  %cmp155 = fcmp une float %149, 0.000000e+00, !dbg !4149
  br i1 %cmp155, label %if.then156, label %if.end164, !dbg !4150

if.then156:                                       ; preds = %sw.bb151
  %150 = load float, float* %facm, align 4, !dbg !4151
  %151 = load float*, float** %out.addr, align 8, !dbg !4152
  %arrayidx157 = getelementptr inbounds float, float* %151, i64 0, !dbg !4152
  %152 = load float, float* %arrayidx157, align 4, !dbg !4152
  %mul158 = fmul float %150, %152, !dbg !4153
  %153 = load float, float* %fact.addr, align 4, !dbg !4154
  %154 = load float*, float** %out.addr, align 8, !dbg !4155
  %arrayidx159 = getelementptr inbounds float, float* %154, i64 0, !dbg !4155
  %155 = load float, float* %arrayidx159, align 4, !dbg !4155
  %mul160 = fmul float %153, %155, !dbg !4156
  %156 = load float*, float** %tex.addr, align 8, !dbg !4157
  %arrayidx161 = getelementptr inbounds float, float* %156, i64 0, !dbg !4157
  %157 = load float, float* %arrayidx161, align 4, !dbg !4157
  %div = fdiv float %mul160, %157, !dbg !4158
  %add162 = fadd float %mul158, %div, !dbg !4159
  %158 = load float*, float** %in.addr, align 8, !dbg !4160
  %arrayidx163 = getelementptr inbounds float, float* %158, i64 0, !dbg !4160
  store float %add162, float* %arrayidx163, align 4, !dbg !4161
  br label %if.end164, !dbg !4160

if.end164:                                        ; preds = %if.then156, %sw.bb151
  %159 = load float*, float** %tex.addr, align 8, !dbg !4162
  %arrayidx165 = getelementptr inbounds float, float* %159, i64 1, !dbg !4162
  %160 = load float, float* %arrayidx165, align 4, !dbg !4162
  %cmp166 = fcmp une float %160, 0.000000e+00, !dbg !4164
  br i1 %cmp166, label %if.then167, label %if.end176, !dbg !4165

if.then167:                                       ; preds = %if.end164
  %161 = load float, float* %facm, align 4, !dbg !4166
  %162 = load float*, float** %out.addr, align 8, !dbg !4167
  %arrayidx168 = getelementptr inbounds float, float* %162, i64 1, !dbg !4167
  %163 = load float, float* %arrayidx168, align 4, !dbg !4167
  %mul169 = fmul float %161, %163, !dbg !4168
  %164 = load float, float* %fact.addr, align 4, !dbg !4169
  %165 = load float*, float** %out.addr, align 8, !dbg !4170
  %arrayidx170 = getelementptr inbounds float, float* %165, i64 1, !dbg !4170
  %166 = load float, float* %arrayidx170, align 4, !dbg !4170
  %mul171 = fmul float %164, %166, !dbg !4171
  %167 = load float*, float** %tex.addr, align 8, !dbg !4172
  %arrayidx172 = getelementptr inbounds float, float* %167, i64 1, !dbg !4172
  %168 = load float, float* %arrayidx172, align 4, !dbg !4172
  %div173 = fdiv float %mul171, %168, !dbg !4173
  %add174 = fadd float %mul169, %div173, !dbg !4174
  %169 = load float*, float** %in.addr, align 8, !dbg !4175
  %arrayidx175 = getelementptr inbounds float, float* %169, i64 1, !dbg !4175
  store float %add174, float* %arrayidx175, align 4, !dbg !4176
  br label %if.end176, !dbg !4175

if.end176:                                        ; preds = %if.then167, %if.end164
  %170 = load float*, float** %tex.addr, align 8, !dbg !4177
  %arrayidx177 = getelementptr inbounds float, float* %170, i64 2, !dbg !4177
  %171 = load float, float* %arrayidx177, align 4, !dbg !4177
  %cmp178 = fcmp une float %171, 0.000000e+00, !dbg !4179
  br i1 %cmp178, label %if.then179, label %if.end188, !dbg !4180

if.then179:                                       ; preds = %if.end176
  %172 = load float, float* %facm, align 4, !dbg !4181
  %173 = load float*, float** %out.addr, align 8, !dbg !4182
  %arrayidx180 = getelementptr inbounds float, float* %173, i64 2, !dbg !4182
  %174 = load float, float* %arrayidx180, align 4, !dbg !4182
  %mul181 = fmul float %172, %174, !dbg !4183
  %175 = load float, float* %fact.addr, align 4, !dbg !4184
  %176 = load float*, float** %out.addr, align 8, !dbg !4185
  %arrayidx182 = getelementptr inbounds float, float* %176, i64 2, !dbg !4185
  %177 = load float, float* %arrayidx182, align 4, !dbg !4185
  %mul183 = fmul float %175, %177, !dbg !4186
  %178 = load float*, float** %tex.addr, align 8, !dbg !4187
  %arrayidx184 = getelementptr inbounds float, float* %178, i64 2, !dbg !4187
  %179 = load float, float* %arrayidx184, align 4, !dbg !4187
  %div185 = fdiv float %mul183, %179, !dbg !4188
  %add186 = fadd float %mul181, %div185, !dbg !4189
  %180 = load float*, float** %in.addr, align 8, !dbg !4190
  %arrayidx187 = getelementptr inbounds float, float* %180, i64 2, !dbg !4190
  store float %add186, float* %arrayidx187, align 4, !dbg !4191
  br label %if.end188, !dbg !4190

if.end188:                                        ; preds = %if.then179, %if.end176
  br label %sw.epilog, !dbg !4192

sw.bb189:                                         ; preds = %entry
  %181 = load float, float* %facg.addr, align 4, !dbg !4193
  %182 = load float, float* %fact.addr, align 4, !dbg !4194
  %mul190 = fmul float %182, %181, !dbg !4194
  store float %mul190, float* %fact.addr, align 4, !dbg !4194
  %183 = load float, float* %fact.addr, align 4, !dbg !4195
  %sub191 = fsub float 1.000000e+00, %183, !dbg !4196
  store float %sub191, float* %facm, align 4, !dbg !4197
  %184 = load float, float* %facm, align 4, !dbg !4198
  %185 = load float*, float** %out.addr, align 8, !dbg !4199
  %arrayidx192 = getelementptr inbounds float, float* %185, i64 0, !dbg !4199
  %186 = load float, float* %arrayidx192, align 4, !dbg !4199
  %mul193 = fmul float %184, %186, !dbg !4200
  %187 = load float, float* %fact.addr, align 4, !dbg !4201
  %188 = load float*, float** %tex.addr, align 8, !dbg !4202
  %arrayidx194 = getelementptr inbounds float, float* %188, i64 0, !dbg !4202
  %189 = load float, float* %arrayidx194, align 4, !dbg !4202
  %190 = load float*, float** %out.addr, align 8, !dbg !4203
  %arrayidx195 = getelementptr inbounds float, float* %190, i64 0, !dbg !4203
  %191 = load float, float* %arrayidx195, align 4, !dbg !4203
  %sub196 = fsub float %189, %191, !dbg !4204
  %192 = call float @llvm.fabs.f32(float %sub196), !dbg !4205
  %mul197 = fmul float %187, %192, !dbg !4206
  %add198 = fadd float %mul193, %mul197, !dbg !4207
  %193 = load float*, float** %in.addr, align 8, !dbg !4208
  %arrayidx199 = getelementptr inbounds float, float* %193, i64 0, !dbg !4208
  store float %add198, float* %arrayidx199, align 4, !dbg !4209
  %194 = load float, float* %facm, align 4, !dbg !4210
  %195 = load float*, float** %out.addr, align 8, !dbg !4211
  %arrayidx200 = getelementptr inbounds float, float* %195, i64 1, !dbg !4211
  %196 = load float, float* %arrayidx200, align 4, !dbg !4211
  %mul201 = fmul float %194, %196, !dbg !4212
  %197 = load float, float* %fact.addr, align 4, !dbg !4213
  %198 = load float*, float** %tex.addr, align 8, !dbg !4214
  %arrayidx202 = getelementptr inbounds float, float* %198, i64 1, !dbg !4214
  %199 = load float, float* %arrayidx202, align 4, !dbg !4214
  %200 = load float*, float** %out.addr, align 8, !dbg !4215
  %arrayidx203 = getelementptr inbounds float, float* %200, i64 1, !dbg !4215
  %201 = load float, float* %arrayidx203, align 4, !dbg !4215
  %sub204 = fsub float %199, %201, !dbg !4216
  %202 = call float @llvm.fabs.f32(float %sub204), !dbg !4217
  %mul205 = fmul float %197, %202, !dbg !4218
  %add206 = fadd float %mul201, %mul205, !dbg !4219
  %203 = load float*, float** %in.addr, align 8, !dbg !4220
  %arrayidx207 = getelementptr inbounds float, float* %203, i64 1, !dbg !4220
  store float %add206, float* %arrayidx207, align 4, !dbg !4221
  %204 = load float, float* %facm, align 4, !dbg !4222
  %205 = load float*, float** %out.addr, align 8, !dbg !4223
  %arrayidx208 = getelementptr inbounds float, float* %205, i64 2, !dbg !4223
  %206 = load float, float* %arrayidx208, align 4, !dbg !4223
  %mul209 = fmul float %204, %206, !dbg !4224
  %207 = load float, float* %fact.addr, align 4, !dbg !4225
  %208 = load float*, float** %tex.addr, align 8, !dbg !4226
  %arrayidx210 = getelementptr inbounds float, float* %208, i64 2, !dbg !4226
  %209 = load float, float* %arrayidx210, align 4, !dbg !4226
  %210 = load float*, float** %out.addr, align 8, !dbg !4227
  %arrayidx211 = getelementptr inbounds float, float* %210, i64 2, !dbg !4227
  %211 = load float, float* %arrayidx211, align 4, !dbg !4227
  %sub212 = fsub float %209, %211, !dbg !4228
  %212 = call float @llvm.fabs.f32(float %sub212), !dbg !4229
  %mul213 = fmul float %207, %212, !dbg !4230
  %add214 = fadd float %mul209, %mul213, !dbg !4231
  %213 = load float*, float** %in.addr, align 8, !dbg !4232
  %arrayidx215 = getelementptr inbounds float, float* %213, i64 2, !dbg !4232
  store float %add214, float* %arrayidx215, align 4, !dbg !4233
  br label %sw.epilog, !dbg !4234

sw.bb216:                                         ; preds = %entry
  %214 = load float, float* %facg.addr, align 4, !dbg !4235
  %215 = load float, float* %fact.addr, align 4, !dbg !4236
  %mul217 = fmul float %215, %214, !dbg !4236
  store float %mul217, float* %fact.addr, align 4, !dbg !4236
  %216 = load float, float* %fact.addr, align 4, !dbg !4237
  %sub218 = fsub float 1.000000e+00, %216, !dbg !4238
  store float %sub218, float* %facm, align 4, !dbg !4239
  %217 = load float*, float** %out.addr, align 8, !dbg !4240
  %arrayidx219 = getelementptr inbounds float, float* %217, i64 0, !dbg !4240
  %218 = load float, float* %arrayidx219, align 4, !dbg !4240
  %219 = load float*, float** %tex.addr, align 8, !dbg !4241
  %arrayidx220 = getelementptr inbounds float, float* %219, i64 0, !dbg !4241
  %220 = load float, float* %arrayidx220, align 4, !dbg !4241
  %call = call float @min_ff(float %218, float %220), !dbg !4242
  %221 = load float, float* %fact.addr, align 4, !dbg !4243
  %mul221 = fmul float %call, %221, !dbg !4244
  %222 = load float*, float** %out.addr, align 8, !dbg !4245
  %arrayidx222 = getelementptr inbounds float, float* %222, i64 0, !dbg !4245
  %223 = load float, float* %arrayidx222, align 4, !dbg !4245
  %224 = load float, float* %facm, align 4, !dbg !4246
  %mul223 = fmul float %223, %224, !dbg !4247
  %add224 = fadd float %mul221, %mul223, !dbg !4248
  %225 = load float*, float** %in.addr, align 8, !dbg !4249
  %arrayidx225 = getelementptr inbounds float, float* %225, i64 0, !dbg !4249
  store float %add224, float* %arrayidx225, align 4, !dbg !4250
  %226 = load float*, float** %out.addr, align 8, !dbg !4251
  %arrayidx226 = getelementptr inbounds float, float* %226, i64 1, !dbg !4251
  %227 = load float, float* %arrayidx226, align 4, !dbg !4251
  %228 = load float*, float** %tex.addr, align 8, !dbg !4252
  %arrayidx227 = getelementptr inbounds float, float* %228, i64 1, !dbg !4252
  %229 = load float, float* %arrayidx227, align 4, !dbg !4252
  %call228 = call float @min_ff(float %227, float %229), !dbg !4253
  %230 = load float, float* %fact.addr, align 4, !dbg !4254
  %mul229 = fmul float %call228, %230, !dbg !4255
  %231 = load float*, float** %out.addr, align 8, !dbg !4256
  %arrayidx230 = getelementptr inbounds float, float* %231, i64 1, !dbg !4256
  %232 = load float, float* %arrayidx230, align 4, !dbg !4256
  %233 = load float, float* %facm, align 4, !dbg !4257
  %mul231 = fmul float %232, %233, !dbg !4258
  %add232 = fadd float %mul229, %mul231, !dbg !4259
  %234 = load float*, float** %in.addr, align 8, !dbg !4260
  %arrayidx233 = getelementptr inbounds float, float* %234, i64 1, !dbg !4260
  store float %add232, float* %arrayidx233, align 4, !dbg !4261
  %235 = load float*, float** %out.addr, align 8, !dbg !4262
  %arrayidx234 = getelementptr inbounds float, float* %235, i64 2, !dbg !4262
  %236 = load float, float* %arrayidx234, align 4, !dbg !4262
  %237 = load float*, float** %tex.addr, align 8, !dbg !4263
  %arrayidx235 = getelementptr inbounds float, float* %237, i64 2, !dbg !4263
  %238 = load float, float* %arrayidx235, align 4, !dbg !4263
  %call236 = call float @min_ff(float %236, float %238), !dbg !4264
  %239 = load float, float* %fact.addr, align 4, !dbg !4265
  %mul237 = fmul float %call236, %239, !dbg !4266
  %240 = load float*, float** %out.addr, align 8, !dbg !4267
  %arrayidx238 = getelementptr inbounds float, float* %240, i64 2, !dbg !4267
  %241 = load float, float* %arrayidx238, align 4, !dbg !4267
  %242 = load float, float* %facm, align 4, !dbg !4268
  %mul239 = fmul float %241, %242, !dbg !4269
  %add240 = fadd float %mul237, %mul239, !dbg !4270
  %243 = load float*, float** %in.addr, align 8, !dbg !4271
  %arrayidx241 = getelementptr inbounds float, float* %243, i64 2, !dbg !4271
  store float %add240, float* %arrayidx241, align 4, !dbg !4272
  br label %sw.epilog, !dbg !4273

sw.bb242:                                         ; preds = %entry
  %244 = load float, float* %facg.addr, align 4, !dbg !4274
  %245 = load float, float* %fact.addr, align 4, !dbg !4275
  %mul243 = fmul float %245, %244, !dbg !4275
  store float %mul243, float* %fact.addr, align 4, !dbg !4275
  %246 = load float, float* %fact.addr, align 4, !dbg !4276
  %247 = load float*, float** %tex.addr, align 8, !dbg !4277
  %arrayidx244 = getelementptr inbounds float, float* %247, i64 0, !dbg !4277
  %248 = load float, float* %arrayidx244, align 4, !dbg !4277
  %mul245 = fmul float %246, %248, !dbg !4278
  store float %mul245, float* %col, align 4, !dbg !4279
  %249 = load float, float* %col, align 4, !dbg !4280
  %250 = load float*, float** %out.addr, align 8, !dbg !4282
  %arrayidx246 = getelementptr inbounds float, float* %250, i64 0, !dbg !4282
  %251 = load float, float* %arrayidx246, align 4, !dbg !4282
  %cmp247 = fcmp ogt float %249, %251, !dbg !4283
  br i1 %cmp247, label %if.then248, label %if.else250, !dbg !4284

if.then248:                                       ; preds = %sw.bb242
  %252 = load float, float* %col, align 4, !dbg !4285
  %253 = load float*, float** %in.addr, align 8, !dbg !4286
  %arrayidx249 = getelementptr inbounds float, float* %253, i64 0, !dbg !4286
  store float %252, float* %arrayidx249, align 4, !dbg !4287
  br label %if.end253, !dbg !4286

if.else250:                                       ; preds = %sw.bb242
  %254 = load float*, float** %out.addr, align 8, !dbg !4288
  %arrayidx251 = getelementptr inbounds float, float* %254, i64 0, !dbg !4288
  %255 = load float, float* %arrayidx251, align 4, !dbg !4288
  %256 = load float*, float** %in.addr, align 8, !dbg !4289
  %arrayidx252 = getelementptr inbounds float, float* %256, i64 0, !dbg !4289
  store float %255, float* %arrayidx252, align 4, !dbg !4290
  br label %if.end253

if.end253:                                        ; preds = %if.else250, %if.then248
  %257 = load float, float* %fact.addr, align 4, !dbg !4291
  %258 = load float*, float** %tex.addr, align 8, !dbg !4292
  %arrayidx254 = getelementptr inbounds float, float* %258, i64 1, !dbg !4292
  %259 = load float, float* %arrayidx254, align 4, !dbg !4292
  %mul255 = fmul float %257, %259, !dbg !4293
  store float %mul255, float* %col, align 4, !dbg !4294
  %260 = load float, float* %col, align 4, !dbg !4295
  %261 = load float*, float** %out.addr, align 8, !dbg !4297
  %arrayidx256 = getelementptr inbounds float, float* %261, i64 1, !dbg !4297
  %262 = load float, float* %arrayidx256, align 4, !dbg !4297
  %cmp257 = fcmp ogt float %260, %262, !dbg !4298
  br i1 %cmp257, label %if.then258, label %if.else260, !dbg !4299

if.then258:                                       ; preds = %if.end253
  %263 = load float, float* %col, align 4, !dbg !4300
  %264 = load float*, float** %in.addr, align 8, !dbg !4301
  %arrayidx259 = getelementptr inbounds float, float* %264, i64 1, !dbg !4301
  store float %263, float* %arrayidx259, align 4, !dbg !4302
  br label %if.end263, !dbg !4301

if.else260:                                       ; preds = %if.end253
  %265 = load float*, float** %out.addr, align 8, !dbg !4303
  %arrayidx261 = getelementptr inbounds float, float* %265, i64 1, !dbg !4303
  %266 = load float, float* %arrayidx261, align 4, !dbg !4303
  %267 = load float*, float** %in.addr, align 8, !dbg !4304
  %arrayidx262 = getelementptr inbounds float, float* %267, i64 1, !dbg !4304
  store float %266, float* %arrayidx262, align 4, !dbg !4305
  br label %if.end263

if.end263:                                        ; preds = %if.else260, %if.then258
  %268 = load float, float* %fact.addr, align 4, !dbg !4306
  %269 = load float*, float** %tex.addr, align 8, !dbg !4307
  %arrayidx264 = getelementptr inbounds float, float* %269, i64 2, !dbg !4307
  %270 = load float, float* %arrayidx264, align 4, !dbg !4307
  %mul265 = fmul float %268, %270, !dbg !4308
  store float %mul265, float* %col, align 4, !dbg !4309
  %271 = load float, float* %col, align 4, !dbg !4310
  %272 = load float*, float** %out.addr, align 8, !dbg !4312
  %arrayidx266 = getelementptr inbounds float, float* %272, i64 2, !dbg !4312
  %273 = load float, float* %arrayidx266, align 4, !dbg !4312
  %cmp267 = fcmp ogt float %271, %273, !dbg !4313
  br i1 %cmp267, label %if.then268, label %if.else270, !dbg !4314

if.then268:                                       ; preds = %if.end263
  %274 = load float, float* %col, align 4, !dbg !4315
  %275 = load float*, float** %in.addr, align 8, !dbg !4316
  %arrayidx269 = getelementptr inbounds float, float* %275, i64 2, !dbg !4316
  store float %274, float* %arrayidx269, align 4, !dbg !4317
  br label %if.end273, !dbg !4316

if.else270:                                       ; preds = %if.end263
  %276 = load float*, float** %out.addr, align 8, !dbg !4318
  %arrayidx271 = getelementptr inbounds float, float* %276, i64 2, !dbg !4318
  %277 = load float, float* %arrayidx271, align 4, !dbg !4318
  %278 = load float*, float** %in.addr, align 8, !dbg !4319
  %arrayidx272 = getelementptr inbounds float, float* %278, i64 2, !dbg !4319
  store float %277, float* %arrayidx272, align 4, !dbg !4320
  br label %if.end273

if.end273:                                        ; preds = %if.else270, %if.then268
  br label %sw.epilog, !dbg !4321

sw.bb274:                                         ; preds = %entry
  %279 = load float, float* %facg.addr, align 4, !dbg !4322
  %280 = load float, float* %fact.addr, align 4, !dbg !4323
  %mul275 = fmul float %280, %279, !dbg !4323
  store float %mul275, float* %fact.addr, align 4, !dbg !4323
  %281 = load float*, float** %in.addr, align 8, !dbg !4324
  %282 = load float*, float** %out.addr, align 8, !dbg !4325
  call void @copy_v3_v3(float* %281, float* %282), !dbg !4326
  %283 = load float*, float** %in.addr, align 8, !dbg !4327
  %284 = load float, float* %fact.addr, align 4, !dbg !4328
  %285 = load float*, float** %tex.addr, align 8, !dbg !4329
  call void @ramp_blend(i32 12, float* %283, float %284, float* %285), !dbg !4330
  br label %sw.epilog, !dbg !4331

sw.bb276:                                         ; preds = %entry
  %286 = load float, float* %facg.addr, align 4, !dbg !4332
  %287 = load float, float* %fact.addr, align 4, !dbg !4333
  %mul277 = fmul float %287, %286, !dbg !4333
  store float %mul277, float* %fact.addr, align 4, !dbg !4333
  %288 = load float*, float** %in.addr, align 8, !dbg !4334
  %289 = load float*, float** %out.addr, align 8, !dbg !4335
  call void @copy_v3_v3(float* %288, float* %289), !dbg !4336
  %290 = load float*, float** %in.addr, align 8, !dbg !4337
  %291 = load float, float* %fact.addr, align 4, !dbg !4338
  %292 = load float*, float** %tex.addr, align 8, !dbg !4339
  call void @ramp_blend(i32 13, float* %290, float %291, float* %292), !dbg !4340
  br label %sw.epilog, !dbg !4341

sw.bb278:                                         ; preds = %entry
  %293 = load float, float* %facg.addr, align 4, !dbg !4342
  %294 = load float, float* %fact.addr, align 4, !dbg !4343
  %mul279 = fmul float %294, %293, !dbg !4343
  store float %mul279, float* %fact.addr, align 4, !dbg !4343
  %295 = load float*, float** %in.addr, align 8, !dbg !4344
  %296 = load float*, float** %out.addr, align 8, !dbg !4345
  call void @copy_v3_v3(float* %295, float* %296), !dbg !4346
  %297 = load float*, float** %in.addr, align 8, !dbg !4347
  %298 = load float, float* %fact.addr, align 4, !dbg !4348
  %299 = load float*, float** %tex.addr, align 8, !dbg !4349
  call void @ramp_blend(i32 14, float* %297, float %298, float* %299), !dbg !4350
  br label %sw.epilog, !dbg !4351

sw.bb280:                                         ; preds = %entry
  %300 = load float, float* %facg.addr, align 4, !dbg !4352
  %301 = load float, float* %fact.addr, align 4, !dbg !4353
  %mul281 = fmul float %301, %300, !dbg !4353
  store float %mul281, float* %fact.addr, align 4, !dbg !4353
  %302 = load float*, float** %in.addr, align 8, !dbg !4354
  %303 = load float*, float** %out.addr, align 8, !dbg !4355
  call void @copy_v3_v3(float* %302, float* %303), !dbg !4356
  %304 = load float*, float** %in.addr, align 8, !dbg !4357
  %305 = load float, float* %fact.addr, align 4, !dbg !4358
  %306 = load float*, float** %tex.addr, align 8, !dbg !4359
  call void @ramp_blend(i32 15, float* %304, float %305, float* %306), !dbg !4360
  br label %sw.epilog, !dbg !4361

sw.bb282:                                         ; preds = %entry
  %307 = load float, float* %facg.addr, align 4, !dbg !4362
  %308 = load float, float* %fact.addr, align 4, !dbg !4363
  %mul283 = fmul float %308, %307, !dbg !4363
  store float %mul283, float* %fact.addr, align 4, !dbg !4363
  %309 = load float*, float** %in.addr, align 8, !dbg !4364
  %310 = load float*, float** %out.addr, align 8, !dbg !4365
  call void @copy_v3_v3(float* %309, float* %310), !dbg !4366
  %311 = load float*, float** %in.addr, align 8, !dbg !4367
  %312 = load float, float* %fact.addr, align 4, !dbg !4368
  %313 = load float*, float** %tex.addr, align 8, !dbg !4369
  call void @ramp_blend(i32 16, float* %311, float %312, float* %313), !dbg !4370
  br label %sw.epilog, !dbg !4371

sw.bb284:                                         ; preds = %entry
  %314 = load float, float* %facg.addr, align 4, !dbg !4372
  %315 = load float, float* %fact.addr, align 4, !dbg !4373
  %mul285 = fmul float %315, %314, !dbg !4373
  store float %mul285, float* %fact.addr, align 4, !dbg !4373
  %316 = load float*, float** %in.addr, align 8, !dbg !4374
  %317 = load float*, float** %out.addr, align 8, !dbg !4375
  call void @copy_v3_v3(float* %316, float* %317), !dbg !4376
  %318 = load float*, float** %in.addr, align 8, !dbg !4377
  %319 = load float, float* %fact.addr, align 4, !dbg !4378
  %320 = load float*, float** %tex.addr, align 8, !dbg !4379
  call void @ramp_blend(i32 17, float* %318, float %319, float* %320), !dbg !4380
  br label %sw.epilog, !dbg !4381

sw.epilog:                                        ; preds = %entry, %sw.bb284, %sw.bb282, %sw.bb280, %sw.bb278, %sw.bb276, %sw.bb274, %if.end273, %sw.bb216, %sw.bb189, %if.end188, %sw.bb134, %if.end132, %sw.bb38, %sw.bb17, %sw.bb
  ret void, !dbg !4382
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !4383 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4387, metadata !DIExpression()), !dbg !4388
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4389, metadata !DIExpression()), !dbg !4390
  %0 = load float, float* %a.addr, align 4, !dbg !4391
  %1 = load float, float* %b.addr, align 4, !dbg !4392
  %cmp = fcmp olt float %0, %1, !dbg !4393
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4394

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4395
  br label %cond.end, !dbg !4394

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4396
  br label %cond.end, !dbg !4394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4394
  ret float %cond, !dbg !4397
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4398 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4402, metadata !DIExpression()), !dbg !4403
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4404, metadata !DIExpression()), !dbg !4405
  %0 = load float*, float** %a.addr, align 8, !dbg !4406
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4406
  %1 = load float, float* %arrayidx, align 4, !dbg !4406
  %2 = load float*, float** %r.addr, align 8, !dbg !4407
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4407
  store float %1, float* %arrayidx1, align 4, !dbg !4408
  %3 = load float*, float** %a.addr, align 8, !dbg !4409
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4409
  %4 = load float, float* %arrayidx2, align 4, !dbg !4409
  %5 = load float*, float** %r.addr, align 8, !dbg !4410
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4410
  store float %4, float* %arrayidx3, align 4, !dbg !4411
  %6 = load float*, float** %a.addr, align 8, !dbg !4412
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4412
  %7 = load float, float* %arrayidx4, align 4, !dbg !4412
  %8 = load float*, float** %r.addr, align 8, !dbg !4413
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4413
  store float %7, float* %arrayidx5, align 4, !dbg !4414
  ret void, !dbg !4415
}

declare dso_local void @ramp_blend(i32, float*, float, float*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local float @texture_value_blend(float %tex, float %out, float %fact, float %facg, i32 %blendtype) #0 !dbg !4416 {
entry:
  %tex.addr = alloca float, align 4
  %out.addr = alloca float, align 4
  %fact.addr = alloca float, align 4
  %facg.addr = alloca float, align 4
  %blendtype.addr = alloca i32, align 4
  %in = alloca float, align 4
  %facm = alloca float, align 4
  %col = alloca float, align 4
  %scf = alloca float, align 4
  %flip = alloca i32, align 4
  %sw_ap = alloca float, align 4
  store float %tex, float* %tex.addr, align 4
  call void @llvm.dbg.declare(metadata float* %tex.addr, metadata !4419, metadata !DIExpression()), !dbg !4420
  store float %out, float* %out.addr, align 4
  call void @llvm.dbg.declare(metadata float* %out.addr, metadata !4421, metadata !DIExpression()), !dbg !4422
  store float %fact, float* %fact.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fact.addr, metadata !4423, metadata !DIExpression()), !dbg !4424
  store float %facg, float* %facg.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facg.addr, metadata !4425, metadata !DIExpression()), !dbg !4426
  store i32 %blendtype, i32* %blendtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blendtype.addr, metadata !4427, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.declare(metadata float* %in, metadata !4429, metadata !DIExpression()), !dbg !4430
  store float 0.000000e+00, float* %in, align 4, !dbg !4430
  call void @llvm.dbg.declare(metadata float* %facm, metadata !4431, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.declare(metadata float* %col, metadata !4433, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.declare(metadata float* %scf, metadata !4435, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.declare(metadata i32* %flip, metadata !4437, metadata !DIExpression()), !dbg !4438
  %0 = load float, float* %facg.addr, align 4, !dbg !4439
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !4440
  %conv = zext i1 %cmp to i32, !dbg !4440
  store i32 %conv, i32* %flip, align 4, !dbg !4438
  %1 = load float, float* %facg.addr, align 4, !dbg !4441
  %2 = call float @llvm.fabs.f32(float %1), !dbg !4442
  store float %2, float* %facg.addr, align 4, !dbg !4443
  %3 = load float, float* %facg.addr, align 4, !dbg !4444
  %4 = load float, float* %fact.addr, align 4, !dbg !4445
  %mul = fmul float %4, %3, !dbg !4445
  store float %mul, float* %fact.addr, align 4, !dbg !4445
  %5 = load float, float* %fact.addr, align 4, !dbg !4446
  %sub = fsub float 1.000000e+00, %5, !dbg !4447
  store float %sub, float* %facm, align 4, !dbg !4448
  %6 = load i32, i32* %flip, align 4, !dbg !4449
  %tobool = icmp ne i32 %6, 0, !dbg !4449
  br i1 %tobool, label %if.then, label %if.end, !dbg !4451

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !4452, metadata !DIExpression()), !dbg !4454
  %7 = load float, float* %fact.addr, align 4, !dbg !4454
  store float %7, float* %sw_ap, align 4, !dbg !4454
  %8 = load float, float* %facm, align 4, !dbg !4454
  store float %8, float* %fact.addr, align 4, !dbg !4454
  %9 = load float, float* %sw_ap, align 4, !dbg !4454
  store float %9, float* %facm, align 4, !dbg !4454
  br label %if.end, !dbg !4454

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %blendtype.addr, align 4, !dbg !4455
  switch i32 %10, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 8, label %sw.bb8
    i32 9, label %sw.bb16
    i32 3, label %sw.bb33
    i32 2, label %sw.bb34
    i32 4, label %sw.bb37
    i32 6, label %sw.bb45
    i32 5, label %sw.bb50
    i32 7, label %sw.bb54
    i32 15, label %sw.bb61
    i32 16, label %sw.bb74
  ], !dbg !4456

sw.bb:                                            ; preds = %if.end
  %11 = load float, float* %fact.addr, align 4, !dbg !4457
  %12 = load float, float* %tex.addr, align 4, !dbg !4459
  %mul1 = fmul float %11, %12, !dbg !4460
  %13 = load float, float* %facm, align 4, !dbg !4461
  %14 = load float, float* %out.addr, align 4, !dbg !4462
  %mul2 = fmul float %13, %14, !dbg !4463
  %add = fadd float %mul1, %mul2, !dbg !4464
  store float %add, float* %in, align 4, !dbg !4465
  br label %sw.epilog, !dbg !4466

sw.bb3:                                           ; preds = %if.end
  %15 = load float, float* %facg.addr, align 4, !dbg !4467
  %sub4 = fsub float 1.000000e+00, %15, !dbg !4468
  store float %sub4, float* %facm, align 4, !dbg !4469
  %16 = load float, float* %facm, align 4, !dbg !4470
  %17 = load float, float* %fact.addr, align 4, !dbg !4471
  %18 = load float, float* %tex.addr, align 4, !dbg !4472
  %mul5 = fmul float %17, %18, !dbg !4473
  %add6 = fadd float %16, %mul5, !dbg !4474
  %19 = load float, float* %out.addr, align 4, !dbg !4475
  %mul7 = fmul float %add6, %19, !dbg !4476
  store float %mul7, float* %in, align 4, !dbg !4477
  br label %sw.epilog, !dbg !4478

sw.bb8:                                           ; preds = %if.end
  %20 = load float, float* %facg.addr, align 4, !dbg !4479
  %sub9 = fsub float 1.000000e+00, %20, !dbg !4480
  store float %sub9, float* %facm, align 4, !dbg !4481
  %21 = load float, float* %facm, align 4, !dbg !4482
  %22 = load float, float* %fact.addr, align 4, !dbg !4483
  %23 = load float, float* %tex.addr, align 4, !dbg !4484
  %sub10 = fsub float 1.000000e+00, %23, !dbg !4485
  %mul11 = fmul float %22, %sub10, !dbg !4486
  %add12 = fadd float %21, %mul11, !dbg !4487
  %24 = load float, float* %out.addr, align 4, !dbg !4488
  %sub13 = fsub float 1.000000e+00, %24, !dbg !4489
  %mul14 = fmul float %add12, %sub13, !dbg !4490
  %sub15 = fsub float 1.000000e+00, %mul14, !dbg !4491
  store float %sub15, float* %in, align 4, !dbg !4492
  br label %sw.epilog, !dbg !4493

sw.bb16:                                          ; preds = %if.end
  %25 = load float, float* %facg.addr, align 4, !dbg !4494
  %sub17 = fsub float 1.000000e+00, %25, !dbg !4495
  store float %sub17, float* %facm, align 4, !dbg !4496
  %26 = load float, float* %out.addr, align 4, !dbg !4497
  %cmp18 = fcmp olt float %26, 5.000000e-01, !dbg !4499
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !4500

if.then20:                                        ; preds = %sw.bb16
  %27 = load float, float* %out.addr, align 4, !dbg !4501
  %28 = load float, float* %facm, align 4, !dbg !4502
  %29 = load float, float* %fact.addr, align 4, !dbg !4503
  %mul21 = fmul float 2.000000e+00, %29, !dbg !4504
  %30 = load float, float* %tex.addr, align 4, !dbg !4505
  %mul22 = fmul float %mul21, %30, !dbg !4506
  %add23 = fadd float %28, %mul22, !dbg !4507
  %mul24 = fmul float %27, %add23, !dbg !4508
  store float %mul24, float* %in, align 4, !dbg !4509
  br label %if.end32, !dbg !4510

if.else:                                          ; preds = %sw.bb16
  %31 = load float, float* %facm, align 4, !dbg !4511
  %32 = load float, float* %fact.addr, align 4, !dbg !4512
  %mul25 = fmul float 2.000000e+00, %32, !dbg !4513
  %33 = load float, float* %tex.addr, align 4, !dbg !4514
  %sub26 = fsub float 1.000000e+00, %33, !dbg !4515
  %mul27 = fmul float %mul25, %sub26, !dbg !4516
  %add28 = fadd float %31, %mul27, !dbg !4517
  %34 = load float, float* %out.addr, align 4, !dbg !4518
  %sub29 = fsub float 1.000000e+00, %34, !dbg !4519
  %mul30 = fmul float %add28, %sub29, !dbg !4520
  %sub31 = fsub float 1.000000e+00, %mul30, !dbg !4521
  store float %sub31, float* %in, align 4, !dbg !4522
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then20
  br label %sw.epilog, !dbg !4523

sw.bb33:                                          ; preds = %if.end
  %35 = load float, float* %fact.addr, align 4, !dbg !4524
  %fneg = fneg float %35, !dbg !4525
  store float %fneg, float* %fact.addr, align 4, !dbg !4526
  br label %sw.bb34, !dbg !4527

sw.bb34:                                          ; preds = %if.end, %sw.bb33
  %36 = load float, float* %fact.addr, align 4, !dbg !4528
  %37 = load float, float* %tex.addr, align 4, !dbg !4529
  %mul35 = fmul float %36, %37, !dbg !4530
  %38 = load float, float* %out.addr, align 4, !dbg !4531
  %add36 = fadd float %mul35, %38, !dbg !4532
  store float %add36, float* %in, align 4, !dbg !4533
  br label %sw.epilog, !dbg !4534

sw.bb37:                                          ; preds = %if.end
  %39 = load float, float* %tex.addr, align 4, !dbg !4535
  %cmp38 = fcmp une float %39, 0.000000e+00, !dbg !4537
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !4538

if.then40:                                        ; preds = %sw.bb37
  %40 = load float, float* %facm, align 4, !dbg !4539
  %41 = load float, float* %out.addr, align 4, !dbg !4540
  %mul41 = fmul float %40, %41, !dbg !4541
  %42 = load float, float* %fact.addr, align 4, !dbg !4542
  %43 = load float, float* %out.addr, align 4, !dbg !4543
  %mul42 = fmul float %42, %43, !dbg !4544
  %44 = load float, float* %tex.addr, align 4, !dbg !4545
  %div = fdiv float %mul42, %44, !dbg !4546
  %add43 = fadd float %mul41, %div, !dbg !4547
  store float %add43, float* %in, align 4, !dbg !4548
  br label %if.end44, !dbg !4549

if.end44:                                         ; preds = %if.then40, %sw.bb37
  br label %sw.epilog, !dbg !4550

sw.bb45:                                          ; preds = %if.end
  %45 = load float, float* %facm, align 4, !dbg !4551
  %46 = load float, float* %out.addr, align 4, !dbg !4552
  %mul46 = fmul float %45, %46, !dbg !4553
  %47 = load float, float* %fact.addr, align 4, !dbg !4554
  %48 = load float, float* %tex.addr, align 4, !dbg !4555
  %49 = load float, float* %out.addr, align 4, !dbg !4556
  %sub47 = fsub float %48, %49, !dbg !4557
  %50 = call float @llvm.fabs.f32(float %sub47), !dbg !4558
  %mul48 = fmul float %47, %50, !dbg !4559
  %add49 = fadd float %mul46, %mul48, !dbg !4560
  store float %add49, float* %in, align 4, !dbg !4561
  br label %sw.epilog, !dbg !4562

sw.bb50:                                          ; preds = %if.end
  %51 = load float, float* %out.addr, align 4, !dbg !4563
  %52 = load float, float* %tex.addr, align 4, !dbg !4564
  %call = call float @min_ff(float %51, float %52), !dbg !4565
  %53 = load float, float* %fact.addr, align 4, !dbg !4566
  %mul51 = fmul float %call, %53, !dbg !4567
  %54 = load float, float* %out.addr, align 4, !dbg !4568
  %55 = load float, float* %facm, align 4, !dbg !4569
  %mul52 = fmul float %54, %55, !dbg !4570
  %add53 = fadd float %mul51, %mul52, !dbg !4571
  store float %add53, float* %in, align 4, !dbg !4572
  br label %sw.epilog, !dbg !4573

sw.bb54:                                          ; preds = %if.end
  %56 = load float, float* %fact.addr, align 4, !dbg !4574
  %57 = load float, float* %tex.addr, align 4, !dbg !4575
  %mul55 = fmul float %56, %57, !dbg !4576
  store float %mul55, float* %col, align 4, !dbg !4577
  %58 = load float, float* %col, align 4, !dbg !4578
  %59 = load float, float* %out.addr, align 4, !dbg !4580
  %cmp56 = fcmp ogt float %58, %59, !dbg !4581
  br i1 %cmp56, label %if.then58, label %if.else59, !dbg !4582

if.then58:                                        ; preds = %sw.bb54
  %60 = load float, float* %col, align 4, !dbg !4583
  store float %60, float* %in, align 4, !dbg !4584
  br label %if.end60, !dbg !4585

if.else59:                                        ; preds = %sw.bb54
  %61 = load float, float* %out.addr, align 4, !dbg !4586
  store float %61, float* %in, align 4, !dbg !4587
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  br label %sw.epilog, !dbg !4588

sw.bb61:                                          ; preds = %if.end
  %62 = load float, float* %tex.addr, align 4, !dbg !4589
  %sub62 = fsub float 1.000000e+00, %62, !dbg !4590
  %63 = load float, float* %out.addr, align 4, !dbg !4591
  %sub63 = fsub float 1.000000e+00, %63, !dbg !4592
  %mul64 = fmul float %sub62, %sub63, !dbg !4593
  %sub65 = fsub float 1.000000e+00, %mul64, !dbg !4594
  store float %sub65, float* %scf, align 4, !dbg !4595
  %64 = load float, float* %facm, align 4, !dbg !4596
  %65 = load float, float* %out.addr, align 4, !dbg !4597
  %mul66 = fmul float %64, %65, !dbg !4598
  %66 = load float, float* %fact.addr, align 4, !dbg !4599
  %67 = load float, float* %out.addr, align 4, !dbg !4600
  %sub67 = fsub float 1.000000e+00, %67, !dbg !4601
  %68 = load float, float* %tex.addr, align 4, !dbg !4602
  %mul68 = fmul float %sub67, %68, !dbg !4603
  %69 = load float, float* %out.addr, align 4, !dbg !4604
  %mul69 = fmul float %mul68, %69, !dbg !4605
  %mul70 = fmul float %66, %mul69, !dbg !4606
  %add71 = fadd float %mul66, %mul70, !dbg !4607
  %70 = load float, float* %out.addr, align 4, !dbg !4608
  %71 = load float, float* %scf, align 4, !dbg !4609
  %mul72 = fmul float %70, %71, !dbg !4610
  %add73 = fadd float %add71, %mul72, !dbg !4611
  store float %add73, float* %in, align 4, !dbg !4612
  br label %sw.epilog, !dbg !4613

sw.bb74:                                          ; preds = %if.end
  %72 = load float, float* %tex.addr, align 4, !dbg !4614
  %cmp75 = fcmp ogt float %72, 5.000000e-01, !dbg !4616
  br i1 %cmp75, label %if.then77, label %if.else82, !dbg !4617

if.then77:                                        ; preds = %sw.bb74
  %73 = load float, float* %out.addr, align 4, !dbg !4618
  %74 = load float, float* %fact.addr, align 4, !dbg !4619
  %75 = load float, float* %tex.addr, align 4, !dbg !4620
  %sub78 = fsub float %75, 5.000000e-01, !dbg !4621
  %mul79 = fmul float 2.000000e+00, %sub78, !dbg !4622
  %mul80 = fmul float %74, %mul79, !dbg !4623
  %add81 = fadd float %73, %mul80, !dbg !4624
  store float %add81, float* %in, align 4, !dbg !4625
  br label %if.end87, !dbg !4626

if.else82:                                        ; preds = %sw.bb74
  %76 = load float, float* %out.addr, align 4, !dbg !4627
  %77 = load float, float* %fact.addr, align 4, !dbg !4628
  %78 = load float, float* %tex.addr, align 4, !dbg !4629
  %mul83 = fmul float 2.000000e+00, %78, !dbg !4630
  %sub84 = fsub float %mul83, 1.000000e+00, !dbg !4631
  %mul85 = fmul float %77, %sub84, !dbg !4632
  %add86 = fadd float %76, %mul85, !dbg !4633
  store float %add86, float* %in, align 4, !dbg !4634
  br label %if.end87

if.end87:                                         ; preds = %if.else82, %if.then77
  br label %sw.epilog, !dbg !4635

sw.epilog:                                        ; preds = %if.end, %if.end87, %sw.bb61, %if.end60, %sw.bb50, %sw.bb45, %if.end44, %sw.bb34, %if.end32, %sw.bb8, %sw.bb3, %sw.bb
  %79 = load float, float* %in, align 4, !dbg !4636
  ret float %79, !dbg !4637
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @do_material_tex(%struct.ShadeInput* %shi, %struct.Render* %re) #0 !dbg !4638 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %compat_bump = alloca %struct.CompatibleBump, align 4
  %ntap_bump = alloca %struct.NTapBump, align 4
  %mtex = alloca %struct.MTex*, align 8
  %tex = alloca %struct.Tex*, align 8
  %texres = alloca %struct.TexResult, align 8
  %co = alloca float*, align 8
  %dx = alloca float*, align 8
  %dy = alloca float*, align 8
  %fact = alloca float, align 4
  %facm = alloca float, align 4
  %factt = alloca float, align 4
  %facmm = alloca float, align 4
  %stencilTin = alloca float, align 4
  %texvec = alloca [3 x float], align 4
  %dxt = alloca [3 x float], align 4
  %dyt = alloca [3 x float], align 4
  %tempvec = alloca [3 x float], align 4
  %norvec = alloca [3 x float], align 4
  %warpvec = alloca [3 x float], align 4
  %Tnor = alloca float, align 4
  %tex_nr = alloca i32, align 4
  %rgbnor = alloca i32, align 4
  %warp_done = alloca i8, align 1
  %use_compat_bump = alloca i8, align 1
  %use_ntap_bump = alloca i8, align 1
  %found_nmapping = alloca i8, align 1
  %found_deriv_map = alloca i8, align 1
  %iFirstTimeNMap = alloca i8, align 1
  %ob = alloca %struct.Object*, align 8
  %suv = alloca %struct.ShadeInputUV*, align 8
  %i = alloca i32, align 4
  %co_nor = alloca float, align 4
  %si = alloca float, align 4
  %f1 = alloca float, align 4
  %f2 = alloca float, align 4
  %warpnor = alloca float*, align 8
  %warpnor_ = alloca [3 x float], align 4
  %tcol = alloca [3 x float], align 4
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %colfac = alloca float, align 4
  %colspecfac = alloca float, align 4
  %mirrfac = alloca float, align 4
  %norfac = alloca float, align 4
  %B = alloca [3 x float], align 4
  %tv = alloca [3 x float], align 4
  %no = alloca float*, align 8
  %nor713 = alloca [3 x float], align 4
  %nor798 = alloca [3 x float], align 4
  %dot = alloca float, align 4
  %norfac891 = alloca float, align 4
  %difffac = alloca float, align 4
  %specfac = alloca float, align 4
  %emitfac = alloca float, align 4
  %alphafac = alloca float, align 4
  %har = alloca float, align 4
  %hardfac = alloca float, align 4
  %raymirrfac = alloca float, align 4
  %translfac = alloca float, align 4
  %ambfac = alloca float, align 4
  %fnegdot = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4641, metadata !DIExpression()), !dbg !4642
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4643, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.declare(metadata %struct.CompatibleBump* %compat_bump, metadata !4645, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.declare(metadata %struct.NTapBump* %ntap_bump, metadata !4658, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !4671, metadata !DIExpression()), !dbg !4672
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !4675, metadata !DIExpression()), !dbg !4676
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !4676
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !4676
  call void @llvm.dbg.declare(metadata float** %co, metadata !4677, metadata !DIExpression()), !dbg !4678
  store float* null, float** %co, align 8, !dbg !4678
  call void @llvm.dbg.declare(metadata float** %dx, metadata !4679, metadata !DIExpression()), !dbg !4680
  store float* null, float** %dx, align 8, !dbg !4680
  call void @llvm.dbg.declare(metadata float** %dy, metadata !4681, metadata !DIExpression()), !dbg !4682
  store float* null, float** %dy, align 8, !dbg !4682
  call void @llvm.dbg.declare(metadata float* %fact, metadata !4683, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata float* %facm, metadata !4685, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.declare(metadata float* %factt, metadata !4687, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.declare(metadata float* %facmm, metadata !4689, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.declare(metadata float* %stencilTin, metadata !4691, metadata !DIExpression()), !dbg !4692
  store float 1.000000e+00, float* %stencilTin, align 4, !dbg !4692
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !4693, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt, metadata !4695, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt, metadata !4697, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.declare(metadata [3 x float]* %tempvec, metadata !4699, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.declare(metadata [3 x float]* %norvec, metadata !4701, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.declare(metadata [3 x float]* %warpvec, metadata !4703, metadata !DIExpression()), !dbg !4704
  %1 = bitcast [3 x float]* %warpvec to i8*, !dbg !4704
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !4704
  call void @llvm.dbg.declare(metadata float* %Tnor, metadata !4705, metadata !DIExpression()), !dbg !4706
  store float 1.000000e+00, float* %Tnor, align 4, !dbg !4706
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata i32* %rgbnor, metadata !4709, metadata !DIExpression()), !dbg !4710
  store i32 0, i32* %rgbnor, align 4, !dbg !4710
  call void @llvm.dbg.declare(metadata i8* %warp_done, metadata !4711, metadata !DIExpression()), !dbg !4712
  store i8 0, i8* %warp_done, align 1, !dbg !4712
  call void @llvm.dbg.declare(metadata i8* %use_compat_bump, metadata !4713, metadata !DIExpression()), !dbg !4714
  store i8 0, i8* %use_compat_bump, align 1, !dbg !4714
  call void @llvm.dbg.declare(metadata i8* %use_ntap_bump, metadata !4715, metadata !DIExpression()), !dbg !4716
  store i8 0, i8* %use_ntap_bump, align 1, !dbg !4716
  call void @llvm.dbg.declare(metadata i8* %found_nmapping, metadata !4717, metadata !DIExpression()), !dbg !4718
  store i8 0, i8* %found_nmapping, align 1, !dbg !4718
  call void @llvm.dbg.declare(metadata i8* %found_deriv_map, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i8 0, i8* %found_deriv_map, align 1, !dbg !4720
  call void @llvm.dbg.declare(metadata i8* %iFirstTimeNMap, metadata !4721, metadata !DIExpression()), !dbg !4722
  store i8 1, i8* %iFirstTimeNMap, align 1, !dbg !4722
  call void @compatible_bump_init(%struct.CompatibleBump* %compat_bump), !dbg !4723
  call void @ntap_bump_init(%struct.NTapBump* %ntap_bump), !dbg !4724
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4725
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !4727
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !4728
  %3 = load i32, i32* %scemode, align 4, !dbg !4728
  %and = and i32 %3, 8192, !dbg !4729
  %tobool = icmp ne i32 %and, 0, !dbg !4729
  br i1 %tobool, label %if.then, label %if.end, !dbg !4730

if.then:                                          ; preds = %entry
  br label %if.end1273, !dbg !4731

if.end:                                           ; preds = %entry
  store i32 0, i32* %tex_nr, align 4, !dbg !4732
  br label %for.cond, !dbg !4734

for.cond:                                         ; preds = %for.inc1242, %if.end
  %4 = load i32, i32* %tex_nr, align 4, !dbg !4735
  %cmp = icmp slt i32 %4, 18, !dbg !4737
  br i1 %cmp, label %for.body, label %for.end1244, !dbg !4738

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4739
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 0, !dbg !4742
  %6 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4742
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 73, !dbg !4743
  %7 = load i32, i32* %septex, align 8, !dbg !4743
  %8 = load i32, i32* %tex_nr, align 4, !dbg !4744
  %shl = shl i32 1, %8, !dbg !4745
  %and1 = and i32 %7, %shl, !dbg !4746
  %tobool2 = icmp ne i32 %and1, 0, !dbg !4746
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4747

if.then3:                                         ; preds = %for.body
  br label %for.inc1242, !dbg !4748

if.end4:                                          ; preds = %for.body
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4749
  %mat5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %9, i32 0, i32 0, !dbg !4751
  %10 = load %struct.Material*, %struct.Material** %mat5, align 8, !dbg !4751
  %mtex6 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 102, !dbg !4752
  %11 = load i32, i32* %tex_nr, align 4, !dbg !4753
  %idxprom = sext i32 %11 to i64, !dbg !4749
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex6, i64 0, i64 %idxprom, !dbg !4749
  %12 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !4749
  %tobool7 = icmp ne %struct.MTex* %12, null, !dbg !4749
  br i1 %tobool7, label %if.then8, label %if.end1241, !dbg !4754

if.then8:                                         ; preds = %if.end4
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4755
  %mat9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 0, !dbg !4757
  %14 = load %struct.Material*, %struct.Material** %mat9, align 8, !dbg !4757
  %mtex10 = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 102, !dbg !4758
  %15 = load i32, i32* %tex_nr, align 4, !dbg !4759
  %idxprom11 = sext i32 %15 to i64, !dbg !4755
  %arrayidx12 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex10, i64 0, i64 %idxprom11, !dbg !4755
  %16 = load %struct.MTex*, %struct.MTex** %arrayidx12, align 8, !dbg !4755
  store %struct.MTex* %16, %struct.MTex** %mtex, align 8, !dbg !4760
  %17 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4761
  %tex13 = getelementptr inbounds %struct.MTex, %struct.MTex* %17, i32 0, i32 5, !dbg !4762
  %18 = load %struct.Tex*, %struct.Tex** %tex13, align 8, !dbg !4762
  store %struct.Tex* %18, %struct.Tex** %tex, align 8, !dbg !4763
  %19 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4764
  %cmp14 = icmp eq %struct.Tex* %19, null, !dbg !4766
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4767

if.then15:                                        ; preds = %if.then8
  br label %for.inc1242, !dbg !4768

if.end16:                                         ; preds = %if.then8
  %20 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4769
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 32, !dbg !4770
  %21 = load i16, i16* %type, align 8, !dbg !4770
  %conv = sext i16 %21 to i32, !dbg !4769
  %cmp17 = icmp eq i32 %conv, 8, !dbg !4771
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !4772

land.rhs:                                         ; preds = %if.end16
  %22 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4773
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 30, !dbg !4774
  %23 = load i16, i16* %imaflag, align 4, !dbg !4774
  %conv19 = sext i16 %23 to i32, !dbg !4773
  %and20 = and i32 %conv19, 16384, !dbg !4775
  %tobool21 = icmp ne i32 %and20, 0, !dbg !4772
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end16
  %24 = phi i1 [ false, %if.end16 ], [ %tobool21, %land.rhs ], !dbg !4776
  %land.ext = zext i1 %24 to i32, !dbg !4772
  %conv22 = trunc i32 %land.ext to i8, !dbg !4777
  store i8 %conv22, i8* %found_deriv_map, align 1, !dbg !4778
  %25 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4779
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %25, i32 0, i32 14, !dbg !4780
  %26 = load i16, i16* %texflag, align 8, !dbg !4780
  %conv23 = sext i16 %26 to i32, !dbg !4779
  %and24 = and i32 %conv23, 128, !dbg !4781
  %cmp25 = icmp ne i32 %and24, 0, !dbg !4782
  %conv26 = zext i1 %cmp25 to i32, !dbg !4782
  %conv27 = trunc i32 %conv26 to i8, !dbg !4783
  store i8 %conv27, i8* %use_compat_bump, align 1, !dbg !4784
  %27 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4785
  %texflag28 = getelementptr inbounds %struct.MTex, %struct.MTex* %27, i32 0, i32 14, !dbg !4786
  %28 = load i16, i16* %texflag28, align 8, !dbg !4786
  %conv29 = sext i16 %28 to i32, !dbg !4785
  %and30 = and i32 %conv29, 8960, !dbg !4787
  %cmp31 = icmp ne i32 %and30, 0, !dbg !4788
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !4789

lor.rhs:                                          ; preds = %land.end
  %29 = load i8, i8* %found_deriv_map, align 1, !dbg !4790
  %conv33 = zext i8 %29 to i32, !dbg !4790
  %cmp34 = icmp ne i32 %conv33, 0, !dbg !4791
  br label %lor.end, !dbg !4789

lor.end:                                          ; preds = %lor.rhs, %land.end
  %30 = phi i1 [ true, %land.end ], [ %cmp34, %lor.rhs ]
  %31 = zext i1 %30 to i64, !dbg !4792
  %cond = select i1 %30, i32 1, i32 0, !dbg !4792
  %conv36 = trunc i32 %cond to i8, !dbg !4792
  store i8 %conv36, i8* %use_ntap_bump, align 1, !dbg !4793
  %32 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4794
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %32, i32 0, i32 52, !dbg !4796
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4796
  %tobool37 = icmp ne %struct.bNodeTree* %33, null, !dbg !4794
  br i1 %tobool37, label %land.lhs.true, label %if.end41, !dbg !4797

land.lhs.true:                                    ; preds = %lor.end
  %34 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4798
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %34, i32 0, i32 61, !dbg !4799
  %35 = load i8, i8* %use_nodes, align 8, !dbg !4799
  %conv38 = zext i8 %35 to i32, !dbg !4798
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !4798
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4800

if.then40:                                        ; preds = %land.lhs.true
  store i8 0, i8* %use_compat_bump, align 1, !dbg !4801
  store i8 0, i8* %use_ntap_bump, align 1, !dbg !4803
  br label %if.end41, !dbg !4804

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %lor.end
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4805
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 15, !dbg !4807
  %37 = load i16, i16* %osatex, align 8, !dbg !4807
  %conv42 = sext i16 %37 to i32, !dbg !4805
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !4808
  br i1 %cmp43, label %land.lhs.true45, label %if.end49, !dbg !4809

land.lhs.true45:                                  ; preds = %if.end41
  %38 = load i8, i8* %use_ntap_bump, align 1, !dbg !4810
  %conv46 = zext i8 %38 to i32, !dbg !4810
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !4810
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !4811

if.then48:                                        ; preds = %land.lhs.true45
  store i8 0, i8* %use_ntap_bump, align 1, !dbg !4812
  store i8 1, i8* %use_compat_bump, align 1, !dbg !4814
  br label %if.end49, !dbg !4815

if.end49:                                         ; preds = %if.then48, %land.lhs.true45, %if.end41
  %39 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4816
  %type50 = getelementptr inbounds %struct.Tex, %struct.Tex* %39, i32 0, i32 32, !dbg !4818
  %40 = load i16, i16* %type50, align 8, !dbg !4818
  %conv51 = sext i16 %40 to i32, !dbg !4816
  %cmp52 = icmp eq i32 %conv51, 16, !dbg !4819
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !4820

if.then54:                                        ; preds = %if.end49
  store i8 0, i8* %use_ntap_bump, align 1, !dbg !4821
  store i8 0, i8* %use_compat_bump, align 1, !dbg !4823
  br label %if.end55, !dbg !4824

if.end55:                                         ; preds = %if.then54, %if.end49
  %41 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4825
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %41, i32 0, i32 0, !dbg !4827
  %42 = load i16, i16* %texco, align 8, !dbg !4827
  %conv56 = sext i16 %42 to i32, !dbg !4825
  %cmp57 = icmp eq i32 %conv56, 1, !dbg !4828
  br i1 %cmp57, label %if.then59, label %if.else77, !dbg !4829

if.then59:                                        ; preds = %if.end55
  %43 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4830
  %texflag60 = getelementptr inbounds %struct.MTex, %struct.MTex* %43, i32 0, i32 14, !dbg !4833
  %44 = load i16, i16* %texflag60, align 8, !dbg !4833
  %conv61 = sext i16 %44 to i32, !dbg !4830
  %and62 = and i32 %conv61, 32, !dbg !4834
  %tobool63 = icmp ne i32 %and62, 0, !dbg !4834
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !4835

if.then64:                                        ; preds = %if.then59
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4836
  %duplilo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 70, !dbg !4838
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %duplilo, i64 0, i64 0, !dbg !4836
  store float* %arraydecay, float** %co, align 8, !dbg !4839
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !4840
  store float* %arraydecay65, float** %dx, align 8, !dbg !4841
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !4842
  store float* %arraydecay66, float** %dy, align 8, !dbg !4843
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !4844
  store float 0.000000e+00, float* %arrayidx67, align 4, !dbg !4845
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !4846
  store float 0.000000e+00, float* %arrayidx68, align 4, !dbg !4847
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !4848
  store float 0.000000e+00, float* %arrayidx69, align 4, !dbg !4849
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !4850
  store float 0.000000e+00, float* %arrayidx70, align 4, !dbg !4851
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !4852
  store float 0.000000e+00, float* %arrayidx71, align 4, !dbg !4853
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !4854
  store float 0.000000e+00, float* %arrayidx72, align 4, !dbg !4855
  br label %if.end76, !dbg !4856

if.else:                                          ; preds = %if.then59
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4857
  %lo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 56, !dbg !4859
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %lo, i64 0, i64 0, !dbg !4857
  store float* %arraydecay73, float** %co, align 8, !dbg !4860
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4861
  %dxlo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 80, !dbg !4862
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %dxlo, i64 0, i64 0, !dbg !4861
  store float* %arraydecay74, float** %dx, align 8, !dbg !4863
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4864
  %dylo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %48, i32 0, i32 81, !dbg !4865
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %dylo, i64 0, i64 0, !dbg !4864
  store float* %arraydecay75, float** %dy, align 8, !dbg !4866
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then64
  br label %if.end274, !dbg !4867

if.else77:                                        ; preds = %if.end55
  %49 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4868
  %texco78 = getelementptr inbounds %struct.MTex, %struct.MTex* %49, i32 0, i32 0, !dbg !4870
  %50 = load i16, i16* %texco78, align 8, !dbg !4870
  %conv79 = sext i16 %50 to i32, !dbg !4868
  %cmp80 = icmp eq i32 %conv79, 32, !dbg !4871
  br i1 %cmp80, label %if.then82, label %if.else130, !dbg !4872

if.then82:                                        ; preds = %if.else77
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4873, metadata !DIExpression()), !dbg !4875
  %51 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4876
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %51, i32 0, i32 4, !dbg !4877
  %52 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4877
  store %struct.Object* %52, %struct.Object** %ob, align 8, !dbg !4875
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4878
  %tobool83 = icmp ne %struct.Object* %53, null, !dbg !4878
  br i1 %tobool83, label %if.then84, label %if.else122, !dbg !4880

if.then84:                                        ; preds = %if.then82
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !4881
  store float* %arraydecay85, float** %co, align 8, !dbg !4883
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !4884
  store float* %arraydecay86, float** %dx, align 8, !dbg !4885
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !4886
  store float* %arraydecay87, float** %dy, align 8, !dbg !4887
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !4888
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4889
  %co89 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 29, !dbg !4890
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 0, !dbg !4889
  call void @copy_v3_v3(float* %arraydecay88, float* %arraydecay90), !dbg !4891
  %55 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4892
  %texflag91 = getelementptr inbounds %struct.MTex, %struct.MTex* %55, i32 0, i32 14, !dbg !4894
  %56 = load i16, i16* %texflag91, align 8, !dbg !4894
  %conv92 = sext i16 %56 to i32, !dbg !4892
  %and93 = and i32 %conv92, 64, !dbg !4895
  %tobool94 = icmp ne i32 %and93, 0, !dbg !4895
  br i1 %tobool94, label %if.then95, label %if.end105, !dbg !4896

if.then95:                                        ; preds = %if.then84
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4897
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 3, !dbg !4899
  %58 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !4899
  %tobool96 = icmp ne %struct.ObjectInstanceRen* %58, null, !dbg !4897
  br i1 %tobool96, label %land.lhs.true97, label %if.end104, !dbg !4900

land.lhs.true97:                                  ; preds = %if.then95
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4901
  %obi98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 3, !dbg !4902
  %60 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi98, align 8, !dbg !4902
  %duplitexmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %60, i32 0, i32 14, !dbg !4903
  %61 = load [4 x float]*, [4 x float]** %duplitexmat, align 8, !dbg !4903
  %tobool99 = icmp ne [4 x float]* %61, null, !dbg !4901
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !4904

if.then100:                                       ; preds = %land.lhs.true97
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4905
  %obi101 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 3, !dbg !4906
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi101, align 8, !dbg !4906
  %duplitexmat102 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %63, i32 0, i32 14, !dbg !4907
  %64 = load [4 x float]*, [4 x float]** %duplitexmat102, align 8, !dbg !4907
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !4908
  call void @mul_m4_v3([4 x float]* %64, float* %arraydecay103), !dbg !4909
  br label %if.end104, !dbg !4909

if.end104:                                        ; preds = %if.then100, %land.lhs.true97, %if.then95
  br label %if.end105, !dbg !4903

if.end105:                                        ; preds = %if.end104, %if.then84
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4910
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 51, !dbg !4911
  %arraydecay106 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !4910
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !4912
  call void @mul_m4_v3([4 x float]* %arraydecay106, float* %arraydecay107), !dbg !4913
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4914
  %osatex108 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 15, !dbg !4916
  %67 = load i16, i16* %osatex108, align 8, !dbg !4916
  %tobool109 = icmp ne i16 %67, 0, !dbg !4914
  br i1 %tobool109, label %if.then110, label %if.end121, !dbg !4917

if.then110:                                       ; preds = %if.end105
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !4918
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4920
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 78, !dbg !4921
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !4920
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay112), !dbg !4922
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !4923
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4924
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 79, !dbg !4925
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !4924
  call void @copy_v3_v3(float* %arraydecay113, float* %arraydecay114), !dbg !4926
  %70 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4927
  %imat_ren115 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 51, !dbg !4928
  %arraydecay116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren115, i64 0, i64 0, !dbg !4927
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !4929
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay116, float* %arraydecay117), !dbg !4930
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4931
  %imat_ren118 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 51, !dbg !4932
  %arraydecay119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren118, i64 0, i64 0, !dbg !4931
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !4933
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay119, float* %arraydecay120), !dbg !4934
  br label %if.end121, !dbg !4935

if.end121:                                        ; preds = %if.then110, %if.end105
  br label %if.end129, !dbg !4936

if.else122:                                       ; preds = %if.then82
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4937
  %co123 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %72, i32 0, i32 29, !dbg !4939
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %co123, i64 0, i64 0, !dbg !4937
  store float* %arraydecay124, float** %co, align 8, !dbg !4940
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4941
  %dxco125 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 78, !dbg !4942
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %dxco125, i64 0, i64 0, !dbg !4941
  store float* %arraydecay126, float** %dx, align 8, !dbg !4943
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4944
  %dyco127 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %74, i32 0, i32 79, !dbg !4945
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %dyco127, i64 0, i64 0, !dbg !4944
  store float* %arraydecay128, float** %dy, align 8, !dbg !4946
  br label %if.end129

if.end129:                                        ; preds = %if.else122, %if.end121
  br label %if.end273, !dbg !4947

if.else130:                                       ; preds = %if.else77
  %75 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4948
  %texco131 = getelementptr inbounds %struct.MTex, %struct.MTex* %75, i32 0, i32 0, !dbg !4950
  %76 = load i16, i16* %texco131, align 8, !dbg !4950
  %conv132 = sext i16 %76 to i32, !dbg !4948
  %cmp133 = icmp eq i32 %conv132, 2, !dbg !4951
  br i1 %cmp133, label %if.then135, label %if.else139, !dbg !4952

if.then135:                                       ; preds = %if.else130
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4953
  call void @calc_R_ref(%struct.ShadeInput* %77), !dbg !4955
  %78 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4956
  %ref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %78, i32 0, i32 58, !dbg !4957
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %ref, i64 0, i64 0, !dbg !4956
  store float* %arraydecay136, float** %co, align 8, !dbg !4958
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4959
  %dxref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 0, i32 84, !dbg !4960
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %dxref, i64 0, i64 0, !dbg !4959
  store float* %arraydecay137, float** %dx, align 8, !dbg !4961
  %80 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4962
  %dyref = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %80, i32 0, i32 85, !dbg !4963
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %dyref, i64 0, i64 0, !dbg !4962
  store float* %arraydecay138, float** %dy, align 8, !dbg !4964
  br label %if.end272, !dbg !4965

if.else139:                                       ; preds = %if.else130
  %81 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4966
  %texco140 = getelementptr inbounds %struct.MTex, %struct.MTex* %81, i32 0, i32 0, !dbg !4968
  %82 = load i16, i16* %texco140, align 8, !dbg !4968
  %conv141 = sext i16 %82 to i32, !dbg !4966
  %cmp142 = icmp eq i32 %conv141, 4, !dbg !4969
  br i1 %cmp142, label %if.then144, label %if.else148, !dbg !4970

if.then144:                                       ; preds = %if.else139
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4971
  %orn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %83, i32 0, i32 59, !dbg !4973
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %orn, i64 0, i64 0, !dbg !4971
  store float* %arraydecay145, float** %co, align 8, !dbg !4974
  %84 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4975
  %dxno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %84, i32 0, i32 88, !dbg !4976
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %dxno, i64 0, i64 0, !dbg !4975
  store float* %arraydecay146, float** %dx, align 8, !dbg !4977
  %85 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4978
  %dyno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %85, i32 0, i32 89, !dbg !4979
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %dyno, i64 0, i64 0, !dbg !4978
  store float* %arraydecay147, float** %dy, align 8, !dbg !4980
  br label %if.end271, !dbg !4981

if.else148:                                       ; preds = %if.else139
  %86 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4982
  %texco149 = getelementptr inbounds %struct.MTex, %struct.MTex* %86, i32 0, i32 0, !dbg !4984
  %87 = load i16, i16* %texco149, align 8, !dbg !4984
  %conv150 = sext i16 %87 to i32, !dbg !4982
  %cmp151 = icmp eq i32 %conv150, 4096, !dbg !4985
  br i1 %cmp151, label %if.then153, label %if.else159, !dbg !4986

if.then153:                                       ; preds = %if.else148
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4987
  %tang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %88, i32 0, i32 65, !dbg !4989
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !4987
  store float* %arraydecay154, float** %co, align 8, !dbg !4990
  %89 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4991
  %dxno155 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %89, i32 0, i32 88, !dbg !4992
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %dxno155, i64 0, i64 0, !dbg !4991
  store float* %arraydecay156, float** %dx, align 8, !dbg !4993
  %90 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4994
  %dyno157 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %90, i32 0, i32 89, !dbg !4995
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %dyno157, i64 0, i64 0, !dbg !4994
  store float* %arraydecay158, float** %dy, align 8, !dbg !4996
  br label %if.end270, !dbg !4997

if.else159:                                       ; preds = %if.else148
  %91 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !4998
  %texco160 = getelementptr inbounds %struct.MTex, %struct.MTex* %91, i32 0, i32 0, !dbg !5000
  %92 = load i16, i16* %texco160, align 8, !dbg !5000
  %conv161 = sext i16 %92 to i32, !dbg !4998
  %cmp162 = icmp eq i32 %conv161, 8, !dbg !5001
  br i1 %cmp162, label %if.then164, label %if.else168, !dbg !5002

if.then164:                                       ; preds = %if.else159
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5003
  %gl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 57, !dbg !5005
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %gl, i64 0, i64 0, !dbg !5003
  store float* %arraydecay165, float** %co, align 8, !dbg !5006
  %94 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5007
  %dxgl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %94, i32 0, i32 82, !dbg !5008
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %dxgl, i64 0, i64 0, !dbg !5007
  store float* %arraydecay166, float** %dx, align 8, !dbg !5009
  %95 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5010
  %dygl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %95, i32 0, i32 83, !dbg !5011
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %dygl, i64 0, i64 0, !dbg !5010
  store float* %arraydecay167, float** %dy, align 8, !dbg !5012
  br label %if.end269, !dbg !5013

if.else168:                                       ; preds = %if.else159
  %96 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5014
  %texco169 = getelementptr inbounds %struct.MTex, %struct.MTex* %96, i32 0, i32 0, !dbg !5016
  %97 = load i16, i16* %texco169, align 8, !dbg !5016
  %conv170 = sext i16 %97 to i32, !dbg !5014
  %cmp171 = icmp eq i32 %conv170, 16, !dbg !5017
  br i1 %cmp171, label %if.then173, label %if.else219, !dbg !5018

if.then173:                                       ; preds = %if.else168
  %98 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5019
  %texflag174 = getelementptr inbounds %struct.MTex, %struct.MTex* %98, i32 0, i32 14, !dbg !5022
  %99 = load i16, i16* %texflag174, align 8, !dbg !5022
  %conv175 = sext i16 %99 to i32, !dbg !5019
  %and176 = and i32 %conv175, 32, !dbg !5023
  %tobool177 = icmp ne i32 %and176, 0, !dbg !5023
  br i1 %tobool177, label %if.then178, label %if.else188, !dbg !5024

if.then178:                                       ; preds = %if.then173
  %100 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5025
  %dupliuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %100, i32 0, i32 71, !dbg !5027
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %dupliuv, i64 0, i64 0, !dbg !5025
  store float* %arraydecay179, float** %co, align 8, !dbg !5028
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5029
  store float* %arraydecay180, float** %dx, align 8, !dbg !5030
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5031
  store float* %arraydecay181, float** %dy, align 8, !dbg !5032
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !5033
  store float 0.000000e+00, float* %arrayidx182, align 4, !dbg !5034
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !5035
  store float 0.000000e+00, float* %arrayidx183, align 4, !dbg !5036
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5037
  store float 0.000000e+00, float* %arrayidx184, align 4, !dbg !5038
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !5039
  store float 0.000000e+00, float* %arrayidx185, align 4, !dbg !5040
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !5041
  store float 0.000000e+00, float* %arrayidx186, align 4, !dbg !5042
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5043
  store float 0.000000e+00, float* %arrayidx187, align 4, !dbg !5044
  br label %if.end218, !dbg !5045

if.else188:                                       ; preds = %if.then173
  call void @llvm.dbg.declare(metadata %struct.ShadeInputUV** %suv, metadata !5046, metadata !DIExpression()), !dbg !5049
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5050
  %uv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 72, !dbg !5051
  %102 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5052
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %102, i32 0, i32 76, !dbg !5053
  %103 = load i32, i32* %actuv, align 8, !dbg !5053
  %idxprom189 = sext i32 %103 to i64, !dbg !5050
  %arrayidx190 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv, i64 0, i64 %idxprom189, !dbg !5050
  store %struct.ShadeInputUV* %arrayidx190, %struct.ShadeInputUV** %suv, align 8, !dbg !5049
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5054, metadata !DIExpression()), !dbg !5055
  %104 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5056
  %actuv191 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %104, i32 0, i32 76, !dbg !5057
  %105 = load i32, i32* %actuv191, align 8, !dbg !5057
  store i32 %105, i32* %i, align 4, !dbg !5055
  %106 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5058
  %uvname = getelementptr inbounds %struct.MTex, %struct.MTex* %106, i32 0, i32 6, !dbg !5060
  %arrayidx192 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !5058
  %107 = load i8, i8* %arrayidx192, align 8, !dbg !5058
  %conv193 = zext i8 %107 to i32, !dbg !5058
  %cmp194 = icmp ne i32 %conv193, 0, !dbg !5061
  br i1 %cmp194, label %if.then196, label %if.end213, !dbg !5062

if.then196:                                       ; preds = %if.else188
  store i32 0, i32* %i, align 4, !dbg !5063
  br label %for.cond197, !dbg !5066

for.cond197:                                      ; preds = %for.inc, %if.then196
  %108 = load i32, i32* %i, align 4, !dbg !5067
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5069
  %totuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 74, !dbg !5070
  %110 = load i32, i32* %totuv, align 8, !dbg !5070
  %cmp198 = icmp slt i32 %108, %110, !dbg !5071
  br i1 %cmp198, label %for.body200, label %for.end, !dbg !5072

for.body200:                                      ; preds = %for.cond197
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5073
  %uv201 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 72, !dbg !5076
  %112 = load i32, i32* %i, align 4, !dbg !5077
  %idxprom202 = sext i32 %112 to i64, !dbg !5073
  %arrayidx203 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv201, i64 0, i64 %idxprom202, !dbg !5073
  %name = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx203, i32 0, i32 3, !dbg !5078
  %113 = load i8*, i8** %name, align 8, !dbg !5078
  %114 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5079
  %uvname204 = getelementptr inbounds %struct.MTex, %struct.MTex* %114, i32 0, i32 6, !dbg !5080
  %arraydecay205 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname204, i64 0, i64 0, !dbg !5079
  %call = call i32 @strcmp(i8* %113, i8* %arraydecay205) #6, !dbg !5081
  %cmp206 = icmp eq i32 %call, 0, !dbg !5082
  br i1 %cmp206, label %if.then208, label %if.end212, !dbg !5083

if.then208:                                       ; preds = %for.body200
  %115 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5084
  %uv209 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %115, i32 0, i32 72, !dbg !5086
  %116 = load i32, i32* %i, align 4, !dbg !5087
  %idxprom210 = sext i32 %116 to i64, !dbg !5084
  %arrayidx211 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv209, i64 0, i64 %idxprom210, !dbg !5084
  store %struct.ShadeInputUV* %arrayidx211, %struct.ShadeInputUV** %suv, align 8, !dbg !5088
  br label %for.end, !dbg !5089

if.end212:                                        ; preds = %for.body200
  br label %for.inc, !dbg !5090

for.inc:                                          ; preds = %if.end212
  %117 = load i32, i32* %i, align 4, !dbg !5091
  %inc = add nsw i32 %117, 1, !dbg !5091
  store i32 %inc, i32* %i, align 4, !dbg !5091
  br label %for.cond197, !dbg !5092, !llvm.loop !5093

for.end:                                          ; preds = %if.then208, %for.cond197
  br label %if.end213, !dbg !5095

if.end213:                                        ; preds = %for.end, %if.else188
  %118 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !5096
  %uv214 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %118, i32 0, i32 2, !dbg !5097
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %uv214, i64 0, i64 0, !dbg !5096
  store float* %arraydecay215, float** %co, align 8, !dbg !5098
  %119 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !5099
  %dxuv = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %119, i32 0, i32 0, !dbg !5100
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %dxuv, i64 0, i64 0, !dbg !5099
  store float* %arraydecay216, float** %dx, align 8, !dbg !5101
  %120 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !5102
  %dyuv = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %120, i32 0, i32 1, !dbg !5103
  %arraydecay217 = getelementptr inbounds [3 x float], [3 x float]* %dyuv, i64 0, i64 0, !dbg !5102
  store float* %arraydecay217, float** %dy, align 8, !dbg !5104
  %121 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5105
  %122 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5106
  %123 = load i32, i32* %i, align 4, !dbg !5107
  call void @compatible_bump_uv_derivs(%struct.CompatibleBump* %compat_bump, %struct.ShadeInput* %121, %struct.MTex* %122, i32 %123), !dbg !5108
  br label %if.end218

if.end218:                                        ; preds = %if.end213, %if.then178
  br label %if.end268, !dbg !5109

if.else219:                                       ; preds = %if.else168
  %124 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5110
  %texco220 = getelementptr inbounds %struct.MTex, %struct.MTex* %124, i32 0, i32 0, !dbg !5112
  %125 = load i16, i16* %texco220, align 8, !dbg !5112
  %conv221 = sext i16 %125 to i32, !dbg !5110
  %cmp222 = icmp eq i32 %conv221, 1024, !dbg !5113
  br i1 %cmp222, label %if.then224, label %if.else228, !dbg !5114

if.then224:                                       ; preds = %if.else219
  %126 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5115
  %winco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %126, i32 0, i32 60, !dbg !5117
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %winco, i64 0, i64 0, !dbg !5115
  store float* %arraydecay225, float** %co, align 8, !dbg !5118
  %127 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5119
  %dxwin = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %127, i32 0, i32 94, !dbg !5120
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %dxwin, i64 0, i64 0, !dbg !5119
  store float* %arraydecay226, float** %dx, align 8, !dbg !5121
  %128 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5122
  %dywin = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %128, i32 0, i32 95, !dbg !5123
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %dywin, i64 0, i64 0, !dbg !5122
  store float* %arraydecay227, float** %dy, align 8, !dbg !5124
  br label %if.end267, !dbg !5125

if.else228:                                       ; preds = %if.else219
  %129 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5126
  %texco229 = getelementptr inbounds %struct.MTex, %struct.MTex* %129, i32 0, i32 0, !dbg !5128
  %130 = load i16, i16* %texco229, align 8, !dbg !5128
  %conv230 = sext i16 %130 to i32, !dbg !5126
  %cmp231 = icmp eq i32 %conv230, 8192, !dbg !5129
  br i1 %cmp231, label %if.then233, label %if.else246, !dbg !5130

if.then233:                                       ; preds = %if.else228
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !5131
  store float* %arraydecay234, float** %co, align 8, !dbg !5133
  %arraydecay235 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5134
  store float* %arraydecay235, float** %dx, align 8, !dbg !5135
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5136
  store float* %arraydecay236, float** %dy, align 8, !dbg !5137
  %131 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5138
  %strandco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %131, i32 0, i32 64, !dbg !5139
  %132 = load float, float* %strandco, align 4, !dbg !5139
  %133 = load float*, float** %co, align 8, !dbg !5140
  %arrayidx237 = getelementptr inbounds float, float* %133, i64 0, !dbg !5140
  store float %132, float* %arrayidx237, align 4, !dbg !5141
  %134 = load float*, float** %co, align 8, !dbg !5142
  %arrayidx238 = getelementptr inbounds float, float* %134, i64 2, !dbg !5142
  store float 0.000000e+00, float* %arrayidx238, align 4, !dbg !5143
  %135 = load float*, float** %co, align 8, !dbg !5144
  %arrayidx239 = getelementptr inbounds float, float* %135, i64 1, !dbg !5144
  store float 0.000000e+00, float* %arrayidx239, align 4, !dbg !5145
  %136 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5146
  %dxstrand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %136, i32 0, i32 98, !dbg !5147
  %137 = load float, float* %dxstrand, align 8, !dbg !5147
  %138 = load float*, float** %dx, align 8, !dbg !5148
  %arrayidx240 = getelementptr inbounds float, float* %138, i64 0, !dbg !5148
  store float %137, float* %arrayidx240, align 4, !dbg !5149
  %139 = load float*, float** %dx, align 8, !dbg !5150
  %arrayidx241 = getelementptr inbounds float, float* %139, i64 2, !dbg !5150
  store float 0.000000e+00, float* %arrayidx241, align 4, !dbg !5151
  %140 = load float*, float** %dx, align 8, !dbg !5152
  %arrayidx242 = getelementptr inbounds float, float* %140, i64 1, !dbg !5152
  store float 0.000000e+00, float* %arrayidx242, align 4, !dbg !5153
  %141 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5154
  %dystrand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %141, i32 0, i32 99, !dbg !5155
  %142 = load float, float* %dystrand, align 4, !dbg !5155
  %143 = load float*, float** %dy, align 8, !dbg !5156
  %arrayidx243 = getelementptr inbounds float, float* %143, i64 0, !dbg !5156
  store float %142, float* %arrayidx243, align 4, !dbg !5157
  %144 = load float*, float** %dy, align 8, !dbg !5158
  %arrayidx244 = getelementptr inbounds float, float* %144, i64 2, !dbg !5158
  store float 0.000000e+00, float* %arrayidx244, align 4, !dbg !5159
  %145 = load float*, float** %dy, align 8, !dbg !5160
  %arrayidx245 = getelementptr inbounds float, float* %145, i64 1, !dbg !5160
  store float 0.000000e+00, float* %arrayidx245, align 4, !dbg !5161
  br label %if.end266, !dbg !5162

if.else246:                                       ; preds = %if.else228
  %146 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5163
  %texco247 = getelementptr inbounds %struct.MTex, %struct.MTex* %146, i32 0, i32 0, !dbg !5165
  %147 = load i16, i16* %texco247, align 8, !dbg !5165
  %conv248 = sext i16 %147 to i32, !dbg !5163
  %cmp249 = icmp eq i32 %conv248, 16384, !dbg !5166
  br i1 %cmp249, label %if.then251, label %if.else264, !dbg !5167

if.then251:                                       ; preds = %if.else246
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !5168
  store float* %arraydecay252, float** %co, align 8, !dbg !5170
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5171
  store float* %arraydecay253, float** %dx, align 8, !dbg !5172
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5173
  store float* %arraydecay254, float** %dy, align 8, !dbg !5174
  %148 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5175
  %stress = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %148, i32 0, i32 68, !dbg !5176
  %149 = load float, float* %stress, align 8, !dbg !5176
  %150 = load float*, float** %co, align 8, !dbg !5177
  %arrayidx255 = getelementptr inbounds float, float* %150, i64 0, !dbg !5177
  store float %149, float* %arrayidx255, align 4, !dbg !5178
  %151 = load float*, float** %co, align 8, !dbg !5179
  %arrayidx256 = getelementptr inbounds float, float* %151, i64 2, !dbg !5179
  store float 0.000000e+00, float* %arrayidx256, align 4, !dbg !5180
  %152 = load float*, float** %co, align 8, !dbg !5181
  %arrayidx257 = getelementptr inbounds float, float* %152, i64 1, !dbg !5181
  store float 0.000000e+00, float* %arrayidx257, align 4, !dbg !5182
  %153 = load float*, float** %dx, align 8, !dbg !5183
  %arrayidx258 = getelementptr inbounds float, float* %153, i64 0, !dbg !5183
  store float 0.000000e+00, float* %arrayidx258, align 4, !dbg !5184
  %154 = load float*, float** %dx, align 8, !dbg !5185
  %arrayidx259 = getelementptr inbounds float, float* %154, i64 2, !dbg !5185
  store float 0.000000e+00, float* %arrayidx259, align 4, !dbg !5186
  %155 = load float*, float** %dx, align 8, !dbg !5187
  %arrayidx260 = getelementptr inbounds float, float* %155, i64 1, !dbg !5187
  store float 0.000000e+00, float* %arrayidx260, align 4, !dbg !5188
  %156 = load float*, float** %dy, align 8, !dbg !5189
  %arrayidx261 = getelementptr inbounds float, float* %156, i64 0, !dbg !5189
  store float 0.000000e+00, float* %arrayidx261, align 4, !dbg !5190
  %157 = load float*, float** %dy, align 8, !dbg !5191
  %arrayidx262 = getelementptr inbounds float, float* %157, i64 2, !dbg !5191
  store float 0.000000e+00, float* %arrayidx262, align 4, !dbg !5192
  %158 = load float*, float** %dy, align 8, !dbg !5193
  %arrayidx263 = getelementptr inbounds float, float* %158, i64 1, !dbg !5193
  store float 0.000000e+00, float* %arrayidx263, align 4, !dbg !5194
  br label %if.end265, !dbg !5195

if.else264:                                       ; preds = %if.else246
  br label %for.inc1242, !dbg !5196

if.end265:                                        ; preds = %if.then251
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then233
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then224
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.end218
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then164
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then153
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then144
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then135
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end129
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.end76
  %159 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5198
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %159, i32 0, i32 1, !dbg !5200
  %160 = load i16, i16* %mapto, align 2, !dbg !5200
  %conv275 = sext i16 %160 to i32, !dbg !5198
  %and276 = and i32 %conv275, 8194, !dbg !5201
  %tobool277 = icmp ne i32 %and276, 0, !dbg !5201
  br i1 %tobool277, label %if.then278, label %if.else283, !dbg !5202

if.then278:                                       ; preds = %if.end274
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5203
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5205
  store float* %arraydecay279, float** %nor, align 8, !dbg !5206
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 2, !dbg !5207
  store float 0.000000e+00, float* %arrayidx280, align 4, !dbg !5208
  %arrayidx281 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 1, !dbg !5209
  store float 0.000000e+00, float* %arrayidx281, align 4, !dbg !5210
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %norvec, i64 0, i64 0, !dbg !5211
  store float 0.000000e+00, float* %arrayidx282, align 4, !dbg !5212
  br label %if.end285, !dbg !5213

if.else283:                                       ; preds = %if.end274
  %nor284 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5214
  store float* null, float** %nor284, align 8, !dbg !5215
  br label %if.end285

if.end285:                                        ; preds = %if.else283, %if.then278
  %161 = load i8, i8* %warp_done, align 1, !dbg !5216
  %tobool286 = icmp ne i8 %161, 0, !dbg !5216
  br i1 %tobool286, label %if.then287, label %if.end291, !dbg !5218

if.then287:                                       ; preds = %if.end285
  %arraydecay288 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !5219
  %162 = load float*, float** %co, align 8, !dbg !5221
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %warpvec, i64 0, i64 0, !dbg !5222
  call void @add_v3_v3v3(float* %arraydecay288, float* %162, float* %arraydecay289), !dbg !5223
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !5224
  store float* %arraydecay290, float** %co, align 8, !dbg !5225
  br label %if.end291, !dbg !5226

if.end291:                                        ; preds = %if.then287, %if.end285
  %nor292 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5227
  %163 = load float*, float** %nor292, align 8, !dbg !5227
  %tobool293 = icmp ne float* %163, null, !dbg !5229
  br i1 %tobool293, label %land.lhs.true294, label %if.else331, !dbg !5230

land.lhs.true294:                                 ; preds = %if.end291
  %164 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5231
  %type295 = getelementptr inbounds %struct.Tex, %struct.Tex* %164, i32 0, i32 32, !dbg !5232
  %165 = load i16, i16* %type295, align 8, !dbg !5232
  %conv296 = sext i16 %165 to i32, !dbg !5231
  %cmp297 = icmp eq i32 %conv296, 8, !dbg !5233
  br i1 %cmp297, label %land.lhs.true299, label %if.then304, !dbg !5234

land.lhs.true299:                                 ; preds = %land.lhs.true294
  %166 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5235
  %imaflag300 = getelementptr inbounds %struct.Tex, %struct.Tex* %166, i32 0, i32 30, !dbg !5236
  %167 = load i16, i16* %imaflag300, align 4, !dbg !5236
  %conv301 = sext i16 %167 to i32, !dbg !5235
  %and302 = and i32 %conv301, 2048, !dbg !5237
  %tobool303 = icmp ne i32 %and302, 0, !dbg !5237
  br i1 %tobool303, label %if.else331, label %if.then304, !dbg !5238

if.then304:                                       ; preds = %land.lhs.true299, %land.lhs.true294
  %168 = load i8, i8* %use_compat_bump, align 1, !dbg !5239
  %tobool305 = icmp ne i8 %168, 0, !dbg !5239
  br i1 %tobool305, label %if.then306, label %if.else311, !dbg !5242

if.then306:                                       ; preds = %if.then304
  %169 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5243
  %170 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5245
  %171 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5246
  %172 = load float, float* %Tnor, align 4, !dbg !5247
  %173 = load float, float* %stencilTin, align 4, !dbg !5248
  %mul = fmul float %172, %173, !dbg !5249
  %174 = load float*, float** %co, align 8, !dbg !5250
  %175 = load float*, float** %dx, align 8, !dbg !5251
  %176 = load float*, float** %dy, align 8, !dbg !5252
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5253
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5254
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5255
  %177 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5256
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %177, i32 0, i32 100, !dbg !5257
  %178 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !5257
  %call310 = call i32 @compatible_bump_compute(%struct.CompatibleBump* %compat_bump, %struct.ShadeInput* %169, %struct.MTex* %170, %struct.Tex* %171, %struct.TexResult* %texres, float %mul, float* %174, float* %175, float* %176, float* %arraydecay307, float* %arraydecay308, float* %arraydecay309, %struct.ImagePool* %178), !dbg !5258
  store i32 %call310, i32* %rgbnor, align 4, !dbg !5259
  br label %if.end330, !dbg !5260

if.else311:                                       ; preds = %if.then304
  %179 = load i8, i8* %use_ntap_bump, align 1, !dbg !5261
  %tobool312 = icmp ne i8 %179, 0, !dbg !5261
  br i1 %tobool312, label %if.then313, label %if.else320, !dbg !5263

if.then313:                                       ; preds = %if.else311
  %180 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5264
  %181 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5266
  %182 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5267
  %183 = load float, float* %Tnor, align 4, !dbg !5268
  %184 = load float, float* %stencilTin, align 4, !dbg !5269
  %mul314 = fmul float %183, %184, !dbg !5270
  %185 = load float*, float** %co, align 8, !dbg !5271
  %186 = load float*, float** %dx, align 8, !dbg !5272
  %187 = load float*, float** %dy, align 8, !dbg !5273
  %arraydecay315 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5274
  %arraydecay316 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5275
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5276
  %188 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5277
  %pool318 = getelementptr inbounds %struct.Render, %struct.Render* %188, i32 0, i32 100, !dbg !5278
  %189 = load %struct.ImagePool*, %struct.ImagePool** %pool318, align 8, !dbg !5278
  %call319 = call i32 @ntap_bump_compute(%struct.NTapBump* %ntap_bump, %struct.ShadeInput* %180, %struct.MTex* %181, %struct.Tex* %182, %struct.TexResult* %texres, float %mul314, float* %185, float* %186, float* %187, float* %arraydecay315, float* %arraydecay316, float* %arraydecay317, %struct.ImagePool* %189), !dbg !5279
  store i32 %call319, i32* %rgbnor, align 4, !dbg !5280
  br label %if.end329, !dbg !5281

if.else320:                                       ; preds = %if.else311
  %190 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5282
  %191 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5284
  %192 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5285
  %193 = load float*, float** %co, align 8, !dbg !5286
  %194 = load float*, float** %dx, align 8, !dbg !5287
  %195 = load float*, float** %dy, align 8, !dbg !5288
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5289
  %arraydecay322 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5290
  %arraydecay323 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5291
  call void @texco_mapping(%struct.ShadeInput* %190, %struct.Tex* %191, %struct.MTex* %192, float* %193, float* %194, float* %195, float* %arraydecay321, float* %arraydecay322, float* %arraydecay323), !dbg !5292
  %196 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5293
  %197 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5294
  %arraydecay324 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5295
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5296
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5297
  %198 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5298
  %pool327 = getelementptr inbounds %struct.Render, %struct.Render* %198, i32 0, i32 100, !dbg !5299
  %199 = load %struct.ImagePool*, %struct.ImagePool** %pool327, align 8, !dbg !5299
  %call328 = call i32 @multitex_mtex(%struct.ShadeInput* %196, %struct.MTex* %197, float* %arraydecay324, float* %arraydecay325, float* %arraydecay326, %struct.TexResult* %texres, %struct.ImagePool* %199), !dbg !5300
  store i32 %call328, i32* %rgbnor, align 4, !dbg !5301
  br label %if.end329

if.end329:                                        ; preds = %if.else320, %if.then313
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then306
  br label %if.end340, !dbg !5302

if.else331:                                       ; preds = %land.lhs.true299, %if.end291
  %200 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5303
  %201 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5305
  %202 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5306
  %203 = load float*, float** %co, align 8, !dbg !5307
  %204 = load float*, float** %dx, align 8, !dbg !5308
  %205 = load float*, float** %dy, align 8, !dbg !5309
  %arraydecay332 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5310
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5311
  %arraydecay334 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5312
  call void @texco_mapping(%struct.ShadeInput* %200, %struct.Tex* %201, %struct.MTex* %202, float* %203, float* %204, float* %205, float* %arraydecay332, float* %arraydecay333, float* %arraydecay334), !dbg !5313
  %206 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5314
  %207 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5315
  %arraydecay335 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5316
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !5317
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !5318
  %208 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5319
  %pool338 = getelementptr inbounds %struct.Render, %struct.Render* %208, i32 0, i32 100, !dbg !5320
  %209 = load %struct.ImagePool*, %struct.ImagePool** %pool338, align 8, !dbg !5320
  %call339 = call i32 @multitex_mtex(%struct.ShadeInput* %206, %struct.MTex* %207, float* %arraydecay335, float* %arraydecay336, float* %arraydecay337, %struct.TexResult* %texres, %struct.ImagePool* %209), !dbg !5321
  store i32 %call339, i32* %rgbnor, align 4, !dbg !5322
  br label %if.end340

if.end340:                                        ; preds = %if.else331, %if.end330
  %210 = load i32, i32* %rgbnor, align 4, !dbg !5323
  %and341 = and i32 %210, 1, !dbg !5325
  %tobool342 = icmp ne i32 %and341, 0, !dbg !5325
  br i1 %tobool342, label %land.lhs.true343, label %if.end350, !dbg !5326

land.lhs.true343:                                 ; preds = %if.end340
  %211 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5327
  %texflag344 = getelementptr inbounds %struct.MTex, %struct.MTex* %211, i32 0, i32 14, !dbg !5328
  %212 = load i16, i16* %texflag344, align 8, !dbg !5328
  %conv345 = sext i16 %212 to i32, !dbg !5327
  %and346 = and i32 %conv345, 1, !dbg !5329
  %tobool347 = icmp ne i32 %and346, 0, !dbg !5329
  br i1 %tobool347, label %if.then348, label %if.end350, !dbg !5330

if.then348:                                       ; preds = %land.lhs.true343
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5331
  %call349 = call float @rgb_to_grayscale(float* %tr), !dbg !5333
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5334
  store float %call349, float* %tin, align 8, !dbg !5335
  %213 = load i32, i32* %rgbnor, align 4, !dbg !5336
  %sub = sub nsw i32 %213, 1, !dbg !5336
  store i32 %sub, i32* %rgbnor, align 4, !dbg !5336
  br label %if.end350, !dbg !5337

if.end350:                                        ; preds = %if.then348, %land.lhs.true343, %if.end340
  %214 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5338
  %texflag351 = getelementptr inbounds %struct.MTex, %struct.MTex* %214, i32 0, i32 14, !dbg !5340
  %215 = load i16, i16* %texflag351, align 8, !dbg !5340
  %conv352 = sext i16 %215 to i32, !dbg !5338
  %and353 = and i32 %conv352, 4, !dbg !5341
  %tobool354 = icmp ne i32 %and353, 0, !dbg !5341
  br i1 %tobool354, label %if.then355, label %if.end370, !dbg !5342

if.then355:                                       ; preds = %if.end350
  %216 = load i32, i32* %rgbnor, align 4, !dbg !5343
  %and356 = and i32 %216, 1, !dbg !5346
  %tobool357 = icmp ne i32 %and356, 0, !dbg !5346
  br i1 %tobool357, label %if.then358, label %if.end366, !dbg !5347

if.then358:                                       ; preds = %if.then355
  %tr359 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5348
  %217 = load float, float* %tr359, align 4, !dbg !5348
  %sub360 = fsub float 1.000000e+00, %217, !dbg !5350
  %tr361 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5351
  store float %sub360, float* %tr361, align 4, !dbg !5352
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !5353
  %218 = load float, float* %tg, align 8, !dbg !5353
  %sub362 = fsub float 1.000000e+00, %218, !dbg !5354
  %tg363 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !5355
  store float %sub362, float* %tg363, align 8, !dbg !5356
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !5357
  %219 = load float, float* %tb, align 4, !dbg !5357
  %sub364 = fsub float 1.000000e+00, %219, !dbg !5358
  %tb365 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !5359
  store float %sub364, float* %tb365, align 4, !dbg !5360
  br label %if.end366, !dbg !5361

if.end366:                                        ; preds = %if.then358, %if.then355
  %tin367 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5362
  %220 = load float, float* %tin367, align 8, !dbg !5362
  %sub368 = fsub float 1.000000e+00, %220, !dbg !5363
  %tin369 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5364
  store float %sub368, float* %tin369, align 8, !dbg !5365
  br label %if.end370, !dbg !5366

if.end370:                                        ; preds = %if.end366, %if.end350
  %221 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5367
  %texflag371 = getelementptr inbounds %struct.MTex, %struct.MTex* %221, i32 0, i32 14, !dbg !5369
  %222 = load i16, i16* %texflag371, align 8, !dbg !5369
  %conv372 = sext i16 %222 to i32, !dbg !5367
  %and373 = and i32 %conv372, 2, !dbg !5370
  %tobool374 = icmp ne i32 %and373, 0, !dbg !5370
  br i1 %tobool374, label %if.then375, label %if.else388, !dbg !5371

if.then375:                                       ; preds = %if.end370
  %223 = load i32, i32* %rgbnor, align 4, !dbg !5372
  %and376 = and i32 %223, 1, !dbg !5375
  %tobool377 = icmp ne i32 %and376, 0, !dbg !5375
  br i1 %tobool377, label %if.then378, label %if.else382, !dbg !5376

if.then378:                                       ; preds = %if.then375
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !5377
  %224 = load float, float* %ta, align 8, !dbg !5377
  store float %224, float* %fact, align 4, !dbg !5379
  %225 = load float, float* %stencilTin, align 4, !dbg !5380
  %ta379 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !5381
  %226 = load float, float* %ta379, align 8, !dbg !5382
  %mul380 = fmul float %226, %225, !dbg !5382
  store float %mul380, float* %ta379, align 8, !dbg !5382
  %227 = load float, float* %fact, align 4, !dbg !5383
  %228 = load float, float* %stencilTin, align 4, !dbg !5384
  %mul381 = fmul float %228, %227, !dbg !5384
  store float %mul381, float* %stencilTin, align 4, !dbg !5384
  br label %if.end387, !dbg !5385

if.else382:                                       ; preds = %if.then375
  %tin383 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5386
  %229 = load float, float* %tin383, align 8, !dbg !5386
  store float %229, float* %fact, align 4, !dbg !5388
  %230 = load float, float* %stencilTin, align 4, !dbg !5389
  %tin384 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5390
  %231 = load float, float* %tin384, align 8, !dbg !5391
  %mul385 = fmul float %231, %230, !dbg !5391
  store float %mul385, float* %tin384, align 8, !dbg !5391
  %232 = load float, float* %fact, align 4, !dbg !5392
  %233 = load float, float* %stencilTin, align 4, !dbg !5393
  %mul386 = fmul float %233, %232, !dbg !5393
  store float %mul386, float* %stencilTin, align 4, !dbg !5393
  br label %if.end387

if.end387:                                        ; preds = %if.else382, %if.then378
  br label %if.end390, !dbg !5394

if.else388:                                       ; preds = %if.end370
  %234 = load float, float* %stencilTin, align 4, !dbg !5395
  %235 = load float, float* %Tnor, align 4, !dbg !5397
  %mul389 = fmul float %235, %234, !dbg !5397
  store float %mul389, float* %Tnor, align 4, !dbg !5397
  br label %if.end390

if.end390:                                        ; preds = %if.else388, %if.end387
  %nor391 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5398
  %236 = load float*, float** %nor391, align 8, !dbg !5398
  %tobool392 = icmp ne float* %236, null, !dbg !5400
  br i1 %tobool392, label %if.then393, label %if.end461, !dbg !5401

if.then393:                                       ; preds = %if.end390
  %237 = load i32, i32* %rgbnor, align 4, !dbg !5402
  %and394 = and i32 %237, 2, !dbg !5405
  %cmp395 = icmp eq i32 %and394, 0, !dbg !5406
  br i1 %cmp395, label %if.then397, label %if.end434, !dbg !5407

if.then397:                                       ; preds = %if.then393
  %238 = load i32, i32* %rgbnor, align 4, !dbg !5408
  %and398 = and i32 %238, 1, !dbg !5411
  %tobool399 = icmp ne i32 %and398, 0, !dbg !5411
  br i1 %tobool399, label %if.then400, label %if.else403, !dbg !5412

if.then400:                                       ; preds = %if.then397
  %nor401 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5413
  %239 = load float*, float** %nor401, align 8, !dbg !5413
  %tr402 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5415
  call void @copy_v3_v3(float* %239, float* %tr402), !dbg !5416
  br label %if.end433, !dbg !5417

if.else403:                                       ; preds = %if.then397
  call void @llvm.dbg.declare(metadata float* %co_nor, metadata !5418, metadata !DIExpression()), !dbg !5420
  %tin404 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5421
  %240 = load float, float* %tin404, align 8, !dbg !5421
  %sub405 = fsub float %240, 5.000000e-01, !dbg !5422
  %call406 = call float @cosf(float %sub405) #7, !dbg !5423
  %mul407 = fmul float 5.000000e-01, %call406, !dbg !5424
  store float %mul407, float* %co_nor, align 4, !dbg !5420
  call void @llvm.dbg.declare(metadata float* %si, metadata !5425, metadata !DIExpression()), !dbg !5426
  %tin408 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5427
  %241 = load float, float* %tin408, align 8, !dbg !5427
  %sub409 = fsub float %241, 5.000000e-01, !dbg !5428
  %call410 = call float @sinf(float %sub409) #7, !dbg !5429
  %mul411 = fmul float 5.000000e-01, %call410, !dbg !5430
  store float %mul411, float* %si, align 4, !dbg !5426
  call void @llvm.dbg.declare(metadata float* %f1, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.declare(metadata float* %f2, metadata !5433, metadata !DIExpression()), !dbg !5434
  %242 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5435
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %242, i32 0, i32 16, !dbg !5436
  %arrayidx412 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !5435
  %243 = load float, float* %arrayidx412, align 4, !dbg !5435
  store float %243, float* %f1, align 4, !dbg !5437
  %244 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5438
  %vn413 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %244, i32 0, i32 16, !dbg !5439
  %arrayidx414 = getelementptr inbounds [3 x float], [3 x float]* %vn413, i64 0, i64 1, !dbg !5438
  %245 = load float, float* %arrayidx414, align 4, !dbg !5438
  store float %245, float* %f2, align 4, !dbg !5440
  %246 = load float, float* %f1, align 4, !dbg !5441
  %247 = load float, float* %co_nor, align 4, !dbg !5442
  %mul415 = fmul float %246, %247, !dbg !5443
  %248 = load float, float* %f2, align 4, !dbg !5444
  %249 = load float, float* %si, align 4, !dbg !5445
  %mul416 = fmul float %248, %249, !dbg !5446
  %add = fadd float %mul415, %mul416, !dbg !5447
  %nor417 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5448
  %250 = load float*, float** %nor417, align 8, !dbg !5448
  %arrayidx418 = getelementptr inbounds float, float* %250, i64 0, !dbg !5449
  store float %add, float* %arrayidx418, align 4, !dbg !5450
  %251 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5451
  %vn419 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %251, i32 0, i32 16, !dbg !5452
  %arrayidx420 = getelementptr inbounds [3 x float], [3 x float]* %vn419, i64 0, i64 1, !dbg !5451
  %252 = load float, float* %arrayidx420, align 4, !dbg !5451
  store float %252, float* %f1, align 4, !dbg !5453
  %253 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5454
  %vn421 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %253, i32 0, i32 16, !dbg !5455
  %arrayidx422 = getelementptr inbounds [3 x float], [3 x float]* %vn421, i64 0, i64 2, !dbg !5454
  %254 = load float, float* %arrayidx422, align 4, !dbg !5454
  store float %254, float* %f2, align 4, !dbg !5456
  %255 = load float, float* %f1, align 4, !dbg !5457
  %256 = load float, float* %co_nor, align 4, !dbg !5458
  %mul423 = fmul float %255, %256, !dbg !5459
  %257 = load float, float* %f2, align 4, !dbg !5460
  %258 = load float, float* %si, align 4, !dbg !5461
  %mul424 = fmul float %257, %258, !dbg !5462
  %add425 = fadd float %mul423, %mul424, !dbg !5463
  %nor426 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5464
  %259 = load float*, float** %nor426, align 8, !dbg !5464
  %arrayidx427 = getelementptr inbounds float, float* %259, i64 1, !dbg !5465
  store float %add425, float* %arrayidx427, align 4, !dbg !5466
  %260 = load float, float* %f2, align 4, !dbg !5467
  %261 = load float, float* %co_nor, align 4, !dbg !5468
  %mul428 = fmul float %260, %261, !dbg !5469
  %262 = load float, float* %f1, align 4, !dbg !5470
  %263 = load float, float* %si, align 4, !dbg !5471
  %mul429 = fmul float %262, %263, !dbg !5472
  %sub430 = fsub float %mul428, %mul429, !dbg !5473
  %nor431 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5474
  %264 = load float*, float** %nor431, align 8, !dbg !5474
  %arrayidx432 = getelementptr inbounds float, float* %264, i64 2, !dbg !5475
  store float %sub430, float* %arrayidx432, align 4, !dbg !5476
  br label %if.end433

if.end433:                                        ; preds = %if.else403, %if.then400
  br label %if.end434, !dbg !5477

if.end434:                                        ; preds = %if.end433, %if.then393
  %265 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5478
  %mapto435 = getelementptr inbounds %struct.MTex, %struct.MTex* %265, i32 0, i32 1, !dbg !5480
  %266 = load i16, i16* %mapto435, align 2, !dbg !5480
  %conv436 = sext i16 %266 to i32, !dbg !5478
  %and437 = and i32 %conv436, 8192, !dbg !5481
  %tobool438 = icmp ne i32 %and437, 0, !dbg !5481
  br i1 %tobool438, label %if.then439, label %if.end460, !dbg !5482

if.then439:                                       ; preds = %if.end434
  call void @llvm.dbg.declare(metadata float** %warpnor, metadata !5483, metadata !DIExpression()), !dbg !5485
  %nor440 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5486
  %267 = load float*, float** %nor440, align 8, !dbg !5486
  store float* %267, float** %warpnor, align 8, !dbg !5485
  call void @llvm.dbg.declare(metadata [3 x float]* %warpnor_, metadata !5487, metadata !DIExpression()), !dbg !5488
  %268 = load i8, i8* %use_ntap_bump, align 1, !dbg !5489
  %tobool441 = icmp ne i8 %268, 0, !dbg !5489
  br i1 %tobool441, label %if.then442, label %if.end448, !dbg !5491

if.then442:                                       ; preds = %if.then439
  %arraydecay443 = getelementptr inbounds [3 x float], [3 x float]* %warpnor_, i64 0, i64 0, !dbg !5492
  %nor444 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5494
  %269 = load float*, float** %nor444, align 8, !dbg !5494
  call void @copy_v3_v3(float* %arraydecay443, float* %269), !dbg !5495
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %warpnor_, i64 0, i64 0, !dbg !5496
  store float* %arraydecay445, float** %warpnor, align 8, !dbg !5497
  %arraydecay446 = getelementptr inbounds [3 x float], [3 x float]* %warpnor_, i64 0, i64 0, !dbg !5498
  %call447 = call float @normalize_v3(float* %arraydecay446), !dbg !5499
  br label %if.end448, !dbg !5500

if.end448:                                        ; preds = %if.then442, %if.then439
  %270 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5501
  %warpfac = getelementptr inbounds %struct.MTex, %struct.MTex* %270, i32 0, i32 32, !dbg !5502
  %271 = load float, float* %warpfac, align 4, !dbg !5502
  %272 = load float*, float** %warpnor, align 8, !dbg !5503
  %arrayidx449 = getelementptr inbounds float, float* %272, i64 0, !dbg !5503
  %273 = load float, float* %arrayidx449, align 4, !dbg !5503
  %mul450 = fmul float %271, %273, !dbg !5504
  %arrayidx451 = getelementptr inbounds [3 x float], [3 x float]* %warpvec, i64 0, i64 0, !dbg !5505
  store float %mul450, float* %arrayidx451, align 4, !dbg !5506
  %274 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5507
  %warpfac452 = getelementptr inbounds %struct.MTex, %struct.MTex* %274, i32 0, i32 32, !dbg !5508
  %275 = load float, float* %warpfac452, align 4, !dbg !5508
  %276 = load float*, float** %warpnor, align 8, !dbg !5509
  %arrayidx453 = getelementptr inbounds float, float* %276, i64 1, !dbg !5509
  %277 = load float, float* %arrayidx453, align 4, !dbg !5509
  %mul454 = fmul float %275, %277, !dbg !5510
  %arrayidx455 = getelementptr inbounds [3 x float], [3 x float]* %warpvec, i64 0, i64 1, !dbg !5511
  store float %mul454, float* %arrayidx455, align 4, !dbg !5512
  %278 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5513
  %warpfac456 = getelementptr inbounds %struct.MTex, %struct.MTex* %278, i32 0, i32 32, !dbg !5514
  %279 = load float, float* %warpfac456, align 4, !dbg !5514
  %280 = load float*, float** %warpnor, align 8, !dbg !5515
  %arrayidx457 = getelementptr inbounds float, float* %280, i64 2, !dbg !5515
  %281 = load float, float* %arrayidx457, align 4, !dbg !5515
  %mul458 = fmul float %279, %281, !dbg !5516
  %arrayidx459 = getelementptr inbounds [3 x float], [3 x float]* %warpvec, i64 0, i64 2, !dbg !5517
  store float %mul458, float* %arrayidx459, align 4, !dbg !5518
  store i8 1, i8* %warp_done, align 1, !dbg !5519
  br label %if.end460, !dbg !5520

if.end460:                                        ; preds = %if.end448, %if.end434
  br label %if.end461, !dbg !5521

if.end461:                                        ; preds = %if.end460, %if.end390
  %282 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5522
  %mapto462 = getelementptr inbounds %struct.MTex, %struct.MTex* %282, i32 0, i32 1, !dbg !5524
  %283 = load i16, i16* %mapto462, align 2, !dbg !5524
  %conv463 = sext i16 %283 to i32, !dbg !5522
  %and464 = and i32 %conv463, 13, !dbg !5525
  %tobool465 = icmp ne i32 %and464, 0, !dbg !5525
  br i1 %tobool465, label %if.then466, label %if.end589, !dbg !5526

if.then466:                                       ; preds = %if.end461
  call void @llvm.dbg.declare(metadata [3 x float]* %tcol, metadata !5527, metadata !DIExpression()), !dbg !5529
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5530
  %tr468 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5531
  call void @copy_v3_v3(float* %arraydecay467, float* %tr468), !dbg !5532
  %284 = load i32, i32* %rgbnor, align 4, !dbg !5533
  %and469 = and i32 %284, 1, !dbg !5535
  %cmp470 = icmp eq i32 %and469, 0, !dbg !5536
  br i1 %cmp470, label %if.then472, label %if.else475, !dbg !5537

if.then472:                                       ; preds = %if.then466
  %arraydecay473 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5538
  %285 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5540
  %r474 = getelementptr inbounds %struct.MTex, %struct.MTex* %285, i32 0, i32 22, !dbg !5541
  call void @copy_v3_v3(float* %arraydecay473, float* %r474), !dbg !5542
  br label %if.end486, !dbg !5543

if.else475:                                       ; preds = %if.then466
  %286 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5544
  %mapto476 = getelementptr inbounds %struct.MTex, %struct.MTex* %286, i32 0, i32 1, !dbg !5546
  %287 = load i16, i16* %mapto476, align 2, !dbg !5546
  %conv477 = sext i16 %287 to i32, !dbg !5544
  %and478 = and i32 %conv477, 128, !dbg !5547
  %tobool479 = icmp ne i32 %and478, 0, !dbg !5547
  br i1 %tobool479, label %if.then480, label %if.else482, !dbg !5548

if.then480:                                       ; preds = %if.else475
  %288 = load float, float* %stencilTin, align 4, !dbg !5549
  %tin481 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5551
  store float %288, float* %tin481, align 8, !dbg !5552
  br label %if.end485, !dbg !5553

if.else482:                                       ; preds = %if.else475
  %ta483 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !5554
  %289 = load float, float* %ta483, align 8, !dbg !5554
  %tin484 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5556
  store float %289, float* %tin484, align 8, !dbg !5557
  br label %if.end485

if.end485:                                        ; preds = %if.else482, %if.then480
  br label %if.end486

if.end486:                                        ; preds = %if.end485, %if.then472
  %290 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5558
  %type487 = getelementptr inbounds %struct.Tex, %struct.Tex* %290, i32 0, i32 32, !dbg !5560
  %291 = load i16, i16* %type487, align 8, !dbg !5560
  %conv488 = sext i16 %291 to i32, !dbg !5558
  %cmp489 = icmp eq i32 %conv488, 8, !dbg !5561
  br i1 %cmp489, label %if.then491, label %if.end505, !dbg !5562

if.then491:                                       ; preds = %if.end486
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5563, metadata !DIExpression()), !dbg !5565
  %292 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5566
  %ima492 = getelementptr inbounds %struct.Tex, %struct.Tex* %292, i32 0, i32 54, !dbg !5567
  %293 = load %struct.Image*, %struct.Image** %ima492, align 8, !dbg !5567
  store %struct.Image* %293, %struct.Image** %ima, align 8, !dbg !5565
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !5568, metadata !DIExpression()), !dbg !5569
  %294 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5570
  %295 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5571
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %295, i32 0, i32 51, !dbg !5572
  %296 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5573
  %pool493 = getelementptr inbounds %struct.Render, %struct.Render* %296, i32 0, i32 100, !dbg !5574
  %297 = load %struct.ImagePool*, %struct.ImagePool** %pool493, align 8, !dbg !5574
  %call494 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %294, %struct.ImageUser* %iuser, %struct.ImagePool* %297), !dbg !5575
  store %struct.ImBuf* %call494, %struct.ImBuf** %ibuf, align 8, !dbg !5569
  %298 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5576
  %tobool495 = icmp ne %struct.ImBuf* %298, null, !dbg !5576
  br i1 %tobool495, label %land.lhs.true496, label %if.end503, !dbg !5578

land.lhs.true496:                                 ; preds = %if.then491
  %299 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5579
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %299, i32 0, i32 9, !dbg !5580
  %300 = load float*, float** %rect_float, align 8, !dbg !5580
  %tobool497 = icmp ne float* %300, null, !dbg !5581
  br i1 %tobool497, label %if.end503, label %land.lhs.true498, !dbg !5582

land.lhs.true498:                                 ; preds = %land.lhs.true496
  %301 = load i8, i8* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 8), align 8, !dbg !5583
  %conv499 = zext i8 %301 to i32, !dbg !5584
  %tobool500 = icmp ne i32 %conv499, 0, !dbg !5584
  br i1 %tobool500, label %if.then501, label %if.end503, !dbg !5585

if.then501:                                       ; preds = %land.lhs.true498
  %arraydecay502 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5586
  %302 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5587
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %302, i32 0, i32 34, !dbg !5588
  %303 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !5588
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %arraydecay502, %struct.ColorSpace* %303), !dbg !5589
  br label %if.end503, !dbg !5589

if.end503:                                        ; preds = %if.then501, %land.lhs.true498, %land.lhs.true496, %if.then491
  %304 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5590
  %305 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5591
  %306 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5592
  %pool504 = getelementptr inbounds %struct.Render, %struct.Render* %306, i32 0, i32 100, !dbg !5593
  %307 = load %struct.ImagePool*, %struct.ImagePool** %pool504, align 8, !dbg !5593
  call void @BKE_image_pool_release_ibuf(%struct.Image* %304, %struct.ImBuf* %305, %struct.ImagePool* %307), !dbg !5594
  br label %if.end505, !dbg !5595

if.end505:                                        ; preds = %if.end503, %if.end486
  %308 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5596
  %mapto506 = getelementptr inbounds %struct.MTex, %struct.MTex* %308, i32 0, i32 1, !dbg !5598
  %309 = load i16, i16* %mapto506, align 2, !dbg !5598
  %conv507 = sext i16 %309 to i32, !dbg !5596
  %and508 = and i32 %conv507, 1, !dbg !5599
  %tobool509 = icmp ne i32 %and508, 0, !dbg !5599
  br i1 %tobool509, label %if.then510, label %if.end518, !dbg !5600

if.then510:                                       ; preds = %if.end505
  call void @llvm.dbg.declare(metadata float* %colfac, metadata !5601, metadata !DIExpression()), !dbg !5603
  %310 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5604
  %colfac511 = getelementptr inbounds %struct.MTex, %struct.MTex* %310, i32 0, i32 28, !dbg !5605
  %311 = load float, float* %colfac511, align 4, !dbg !5605
  %312 = load float, float* %stencilTin, align 4, !dbg !5606
  %mul512 = fmul float %311, %312, !dbg !5607
  store float %mul512, float* %colfac, align 4, !dbg !5603
  %313 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5608
  %r513 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %313, i32 0, i32 32, !dbg !5609
  %arraydecay514 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5610
  %314 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5611
  %r515 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %314, i32 0, i32 32, !dbg !5612
  %tin516 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5613
  %315 = load float, float* %tin516, align 8, !dbg !5613
  %316 = load float, float* %colfac, align 4, !dbg !5614
  %317 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5615
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %317, i32 0, i32 3, !dbg !5616
  %318 = load i16, i16* %blendtype, align 2, !dbg !5616
  %conv517 = sext i16 %318 to i32, !dbg !5615
  call void @texture_rgb_blend(float* %r513, float* %arraydecay514, float* %r515, float %315, float %316, i32 %conv517), !dbg !5617
  br label %if.end518, !dbg !5618

if.end518:                                        ; preds = %if.then510, %if.end505
  %319 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5619
  %mapto519 = getelementptr inbounds %struct.MTex, %struct.MTex* %319, i32 0, i32 1, !dbg !5621
  %320 = load i16, i16* %mapto519, align 2, !dbg !5621
  %conv520 = sext i16 %320 to i32, !dbg !5619
  %and521 = and i32 %conv520, 4, !dbg !5622
  %tobool522 = icmp ne i32 %and521, 0, !dbg !5622
  br i1 %tobool522, label %if.then523, label %if.end531, !dbg !5623

if.then523:                                       ; preds = %if.end518
  call void @llvm.dbg.declare(metadata float* %colspecfac, metadata !5624, metadata !DIExpression()), !dbg !5626
  %321 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5627
  %colspecfac524 = getelementptr inbounds %struct.MTex, %struct.MTex* %321, i32 0, i32 33, !dbg !5628
  %322 = load float, float* %colspecfac524, align 8, !dbg !5628
  %323 = load float, float* %stencilTin, align 4, !dbg !5629
  %mul525 = fmul float %322, %323, !dbg !5630
  store float %mul525, float* %colspecfac, align 4, !dbg !5626
  %324 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5631
  %specr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %324, i32 0, i32 35, !dbg !5632
  %arraydecay526 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5633
  %325 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5634
  %specr527 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %325, i32 0, i32 35, !dbg !5635
  %tin528 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5636
  %326 = load float, float* %tin528, align 8, !dbg !5636
  %327 = load float, float* %colspecfac, align 4, !dbg !5637
  %328 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5638
  %blendtype529 = getelementptr inbounds %struct.MTex, %struct.MTex* %328, i32 0, i32 3, !dbg !5639
  %329 = load i16, i16* %blendtype529, align 2, !dbg !5639
  %conv530 = sext i16 %329 to i32, !dbg !5638
  call void @texture_rgb_blend(float* %specr, float* %arraydecay526, float* %specr527, float %326, float %327, i32 %conv530), !dbg !5640
  br label %if.end531, !dbg !5641

if.end531:                                        ; preds = %if.then523, %if.end518
  %330 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5642
  %mapto532 = getelementptr inbounds %struct.MTex, %struct.MTex* %330, i32 0, i32 1, !dbg !5644
  %331 = load i16, i16* %mapto532, align 2, !dbg !5644
  %conv533 = sext i16 %331 to i32, !dbg !5642
  %and534 = and i32 %conv533, 8, !dbg !5645
  %tobool535 = icmp ne i32 %and534, 0, !dbg !5645
  br i1 %tobool535, label %if.then536, label %if.end588, !dbg !5646

if.then536:                                       ; preds = %if.end531
  call void @llvm.dbg.declare(metadata float* %mirrfac, metadata !5647, metadata !DIExpression()), !dbg !5649
  %332 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5650
  %mirrfac537 = getelementptr inbounds %struct.MTex, %struct.MTex* %332, i32 0, i32 34, !dbg !5651
  %333 = load float, float* %mirrfac537, align 4, !dbg !5651
  %334 = load float, float* %stencilTin, align 4, !dbg !5652
  %mul538 = fmul float %333, %334, !dbg !5653
  store float %mul538, float* %mirrfac, align 4, !dbg !5649
  %335 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5654
  %type539 = getelementptr inbounds %struct.Tex, %struct.Tex* %335, i32 0, i32 32, !dbg !5656
  %336 = load i16, i16* %type539, align 8, !dbg !5656
  %conv540 = sext i16 %336 to i32, !dbg !5654
  %cmp541 = icmp eq i32 %conv540, 10, !dbg !5657
  br i1 %cmp541, label %land.lhs.true543, label %if.else581, !dbg !5658

land.lhs.true543:                                 ; preds = %if.then536
  %337 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5659
  %blendtype544 = getelementptr inbounds %struct.MTex, %struct.MTex* %337, i32 0, i32 3, !dbg !5660
  %338 = load i16, i16* %blendtype544, align 2, !dbg !5660
  %conv545 = sext i16 %338 to i32, !dbg !5659
  %cmp546 = icmp eq i32 %conv545, 0, !dbg !5661
  br i1 %cmp546, label %if.then548, label %if.else581, !dbg !5662

if.then548:                                       ; preds = %land.lhs.true543
  %tin549 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5663
  %339 = load float, float* %tin549, align 8, !dbg !5663
  %340 = load float, float* %mirrfac, align 4, !dbg !5665
  %mul550 = fmul float %339, %340, !dbg !5666
  store float %mul550, float* %fact, align 4, !dbg !5667
  %341 = load float, float* %fact, align 4, !dbg !5668
  %sub551 = fsub float 1.000000e+00, %341, !dbg !5669
  store float %sub551, float* %facm, align 4, !dbg !5670
  %342 = load float, float* %fact, align 4, !dbg !5671
  %343 = load float, float* %facm, align 4, !dbg !5672
  %344 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5673
  %refcol = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %344, i32 0, i32 62, !dbg !5674
  %arrayidx552 = getelementptr inbounds [4 x float], [4 x float]* %refcol, i64 0, i64 0, !dbg !5673
  %345 = load float, float* %arrayidx552, align 8, !dbg !5673
  %mul553 = fmul float %343, %345, !dbg !5675
  %add554 = fadd float %342, %mul553, !dbg !5676
  %346 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5677
  %refcol555 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %346, i32 0, i32 62, !dbg !5678
  %arrayidx556 = getelementptr inbounds [4 x float], [4 x float]* %refcol555, i64 0, i64 0, !dbg !5677
  store float %add554, float* %arrayidx556, align 8, !dbg !5679
  %347 = load float, float* %fact, align 4, !dbg !5680
  %arrayidx557 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5681
  %348 = load float, float* %arrayidx557, align 4, !dbg !5681
  %mul558 = fmul float %347, %348, !dbg !5682
  %349 = load float, float* %facm, align 4, !dbg !5683
  %350 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5684
  %refcol559 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %350, i32 0, i32 62, !dbg !5685
  %arrayidx560 = getelementptr inbounds [4 x float], [4 x float]* %refcol559, i64 0, i64 1, !dbg !5684
  %351 = load float, float* %arrayidx560, align 4, !dbg !5684
  %mul561 = fmul float %349, %351, !dbg !5686
  %add562 = fadd float %mul558, %mul561, !dbg !5687
  %352 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5688
  %refcol563 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %352, i32 0, i32 62, !dbg !5689
  %arrayidx564 = getelementptr inbounds [4 x float], [4 x float]* %refcol563, i64 0, i64 1, !dbg !5688
  store float %add562, float* %arrayidx564, align 4, !dbg !5690
  %353 = load float, float* %fact, align 4, !dbg !5691
  %arrayidx565 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 1, !dbg !5692
  %354 = load float, float* %arrayidx565, align 4, !dbg !5692
  %mul566 = fmul float %353, %354, !dbg !5693
  %355 = load float, float* %facm, align 4, !dbg !5694
  %356 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5695
  %refcol567 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %356, i32 0, i32 62, !dbg !5696
  %arrayidx568 = getelementptr inbounds [4 x float], [4 x float]* %refcol567, i64 0, i64 2, !dbg !5695
  %357 = load float, float* %arrayidx568, align 8, !dbg !5695
  %mul569 = fmul float %355, %357, !dbg !5697
  %add570 = fadd float %mul566, %mul569, !dbg !5698
  %358 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5699
  %refcol571 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %358, i32 0, i32 62, !dbg !5700
  %arrayidx572 = getelementptr inbounds [4 x float], [4 x float]* %refcol571, i64 0, i64 2, !dbg !5699
  store float %add570, float* %arrayidx572, align 8, !dbg !5701
  %359 = load float, float* %fact, align 4, !dbg !5702
  %arrayidx573 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 2, !dbg !5703
  %360 = load float, float* %arrayidx573, align 4, !dbg !5703
  %mul574 = fmul float %359, %360, !dbg !5704
  %361 = load float, float* %facm, align 4, !dbg !5705
  %362 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5706
  %refcol575 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %362, i32 0, i32 62, !dbg !5707
  %arrayidx576 = getelementptr inbounds [4 x float], [4 x float]* %refcol575, i64 0, i64 3, !dbg !5706
  %363 = load float, float* %arrayidx576, align 4, !dbg !5706
  %mul577 = fmul float %361, %363, !dbg !5708
  %add578 = fadd float %mul574, %mul577, !dbg !5709
  %364 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5710
  %refcol579 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %364, i32 0, i32 62, !dbg !5711
  %arrayidx580 = getelementptr inbounds [4 x float], [4 x float]* %refcol579, i64 0, i64 3, !dbg !5710
  store float %add578, float* %arrayidx580, align 4, !dbg !5712
  br label %if.end587, !dbg !5713

if.else581:                                       ; preds = %land.lhs.true543, %if.then536
  %365 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5714
  %mirr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %365, i32 0, i32 38, !dbg !5716
  %arraydecay582 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !5717
  %366 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5718
  %mirr583 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %366, i32 0, i32 38, !dbg !5719
  %tin584 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5720
  %367 = load float, float* %tin584, align 8, !dbg !5720
  %368 = load float, float* %mirrfac, align 4, !dbg !5721
  %369 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5722
  %blendtype585 = getelementptr inbounds %struct.MTex, %struct.MTex* %369, i32 0, i32 3, !dbg !5723
  %370 = load i16, i16* %blendtype585, align 2, !dbg !5723
  %conv586 = sext i16 %370 to i32, !dbg !5722
  call void @texture_rgb_blend(float* %mirr, float* %arraydecay582, float* %mirr583, float %367, float %368, i32 %conv586), !dbg !5724
  br label %if.end587

if.end587:                                        ; preds = %if.else581, %if.then548
  br label %if.end588, !dbg !5725

if.end588:                                        ; preds = %if.end587, %if.end531
  br label %if.end589, !dbg !5726

if.end589:                                        ; preds = %if.end588, %if.end461
  %371 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5727
  %mapto590 = getelementptr inbounds %struct.MTex, %struct.MTex* %371, i32 0, i32 1, !dbg !5729
  %372 = load i16, i16* %mapto590, align 2, !dbg !5729
  %conv591 = sext i16 %372 to i32, !dbg !5727
  %and592 = and i32 %conv591, 2, !dbg !5730
  %tobool593 = icmp ne i32 %and592, 0, !dbg !5730
  br i1 %tobool593, label %if.then594, label %if.end882, !dbg !5731

if.then594:                                       ; preds = %if.end589
  %nor595 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5732
  %373 = load float*, float** %nor595, align 8, !dbg !5732
  %tobool596 = icmp ne float* %373, null, !dbg !5735
  br i1 %tobool596, label %if.then597, label %if.end881, !dbg !5736

if.then597:                                       ; preds = %if.then594
  call void @llvm.dbg.declare(metadata float* %norfac, metadata !5737, metadata !DIExpression()), !dbg !5739
  %374 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5740
  %norfac598 = getelementptr inbounds %struct.MTex, %struct.MTex* %374, i32 0, i32 30, !dbg !5741
  %375 = load float, float* %norfac598, align 4, !dbg !5741
  store float %375, float* %norfac, align 4, !dbg !5739
  %376 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5742
  %type599 = getelementptr inbounds %struct.Tex, %struct.Tex* %376, i32 0, i32 32, !dbg !5744
  %377 = load i16, i16* %type599, align 8, !dbg !5744
  %conv600 = sext i16 %377 to i32, !dbg !5742
  %cmp601 = icmp eq i32 %conv600, 8, !dbg !5745
  br i1 %cmp601, label %land.lhs.true603, label %if.else779, !dbg !5746

land.lhs.true603:                                 ; preds = %if.then597
  %378 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5747
  %imaflag604 = getelementptr inbounds %struct.Tex, %struct.Tex* %378, i32 0, i32 30, !dbg !5748
  %379 = load i16, i16* %imaflag604, align 4, !dbg !5748
  %conv605 = sext i16 %379 to i32, !dbg !5747
  %and606 = and i32 %conv605, 2048, !dbg !5749
  %tobool607 = icmp ne i32 %and606, 0, !dbg !5749
  br i1 %tobool607, label %if.then608, label %if.else779, !dbg !5750

if.then608:                                       ; preds = %land.lhs.true603
  store i8 1, i8* %found_nmapping, align 1, !dbg !5751
  %380 = load float, float* %norfac, align 4, !dbg !5753
  %cmp609 = fcmp olt float %380, 0.000000e+00, !dbg !5755
  br i1 %cmp609, label %if.then611, label %if.end621, !dbg !5756

if.then611:                                       ; preds = %if.then608
  %nor612 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5757
  %381 = load float*, float** %nor612, align 8, !dbg !5757
  %arrayidx613 = getelementptr inbounds float, float* %381, i64 0, !dbg !5759
  %382 = load float, float* %arrayidx613, align 4, !dbg !5759
  %fneg = fneg float %382, !dbg !5760
  %nor614 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5761
  %383 = load float*, float** %nor614, align 8, !dbg !5761
  %arrayidx615 = getelementptr inbounds float, float* %383, i64 0, !dbg !5762
  store float %fneg, float* %arrayidx615, align 4, !dbg !5763
  %nor616 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5764
  %384 = load float*, float** %nor616, align 8, !dbg !5764
  %arrayidx617 = getelementptr inbounds float, float* %384, i64 1, !dbg !5765
  %385 = load float, float* %arrayidx617, align 4, !dbg !5765
  %fneg618 = fneg float %385, !dbg !5766
  %nor619 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5767
  %386 = load float*, float** %nor619, align 8, !dbg !5767
  %arrayidx620 = getelementptr inbounds float, float* %386, i64 1, !dbg !5768
  store float %fneg618, float* %arrayidx620, align 4, !dbg !5769
  br label %if.end621, !dbg !5770

if.end621:                                        ; preds = %if.then611, %if.then608
  %387 = load float, float* %Tnor, align 4, !dbg !5771
  %388 = load float, float* %norfac, align 4, !dbg !5772
  %389 = call float @llvm.fabs.f32(float %388), !dbg !5773
  %mul622 = fmul float %387, %389, !dbg !5774
  store float %mul622, float* %fact, align 4, !dbg !5775
  %390 = load float, float* %fact, align 4, !dbg !5776
  %cmp623 = fcmp ogt float %390, 1.000000e+00, !dbg !5778
  br i1 %cmp623, label %if.then625, label %if.end626, !dbg !5779

if.then625:                                       ; preds = %if.end621
  store float 1.000000e+00, float* %fact, align 4, !dbg !5780
  br label %if.end626, !dbg !5781

if.end626:                                        ; preds = %if.then625, %if.end621
  %391 = load float, float* %fact, align 4, !dbg !5782
  %sub627 = fsub float 1.000000e+00, %391, !dbg !5783
  store float %sub627, float* %facm, align 4, !dbg !5784
  %392 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5785
  %normapspace = getelementptr inbounds %struct.MTex, %struct.MTex* %392, i32 0, i32 18, !dbg !5787
  %393 = load i16, i16* %normapspace, align 8, !dbg !5787
  %conv628 = sext i16 %393 to i32, !dbg !5785
  %cmp629 = icmp eq i32 %conv628, 3, !dbg !5788
  br i1 %cmp629, label %if.then631, label %if.else712, !dbg !5789

if.then631:                                       ; preds = %if.end626
  call void @llvm.dbg.declare(metadata [3 x float]* %B, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata [3 x float]* %tv, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata float** %no, metadata !5795, metadata !DIExpression()), !dbg !5796
  %394 = load i8, i8* %iFirstTimeNMap, align 1, !dbg !5797
  %conv632 = zext i8 %394 to i32, !dbg !5797
  %tobool633 = icmp ne i32 %conv632, 0, !dbg !5797
  br i1 %tobool633, label %cond.true, label %cond.false, !dbg !5797

cond.true:                                        ; preds = %if.then631
  %395 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5798
  %nmapnorm = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %395, i32 0, i32 66, !dbg !5799
  %arraydecay634 = getelementptr inbounds [3 x float], [3 x float]* %nmapnorm, i64 0, i64 0, !dbg !5798
  br label %cond.end, !dbg !5797

cond.false:                                       ; preds = %if.then631
  %396 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5800
  %vn635 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %396, i32 0, i32 16, !dbg !5801
  %arraydecay636 = getelementptr inbounds [3 x float], [3 x float]* %vn635, i64 0, i64 0, !dbg !5800
  br label %cond.end, !dbg !5797

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond637 = phi float* [ %arraydecay634, %cond.true ], [ %arraydecay636, %cond.false ], !dbg !5797
  store float* %cond637, float** %no, align 8, !dbg !5796
  store i8 0, i8* %iFirstTimeNMap, align 1, !dbg !5802
  %arraydecay638 = getelementptr inbounds [3 x float], [3 x float]* %B, i64 0, i64 0, !dbg !5803
  %397 = load float*, float** %no, align 8, !dbg !5804
  %398 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5805
  %nmaptang = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %398, i32 0, i32 67, !dbg !5806
  %arraydecay639 = getelementptr inbounds [4 x float], [4 x float]* %nmaptang, i64 0, i64 0, !dbg !5805
  call void @cross_v3_v3v3(float* %arraydecay638, float* %397, float* %arraydecay639), !dbg !5807
  %arraydecay640 = getelementptr inbounds [3 x float], [3 x float]* %B, i64 0, i64 0, !dbg !5808
  %399 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5809
  %nmaptang641 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %399, i32 0, i32 67, !dbg !5810
  %arrayidx642 = getelementptr inbounds [4 x float], [4 x float]* %nmaptang641, i64 0, i64 3, !dbg !5809
  %400 = load float, float* %arrayidx642, align 4, !dbg !5809
  call void @mul_v3_fl(float* %arraydecay640, float %400), !dbg !5811
  %nor643 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5812
  %401 = load float*, float** %nor643, align 8, !dbg !5812
  %arrayidx644 = getelementptr inbounds float, float* %401, i64 0, !dbg !5813
  %402 = load float, float* %arrayidx644, align 4, !dbg !5813
  %403 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5814
  %nmaptang645 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %403, i32 0, i32 67, !dbg !5815
  %arrayidx646 = getelementptr inbounds [4 x float], [4 x float]* %nmaptang645, i64 0, i64 0, !dbg !5814
  %404 = load float, float* %arrayidx646, align 8, !dbg !5814
  %mul647 = fmul float %402, %404, !dbg !5816
  %nor648 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5817
  %405 = load float*, float** %nor648, align 8, !dbg !5817
  %arrayidx649 = getelementptr inbounds float, float* %405, i64 1, !dbg !5818
  %406 = load float, float* %arrayidx649, align 4, !dbg !5818
  %arrayidx650 = getelementptr inbounds [3 x float], [3 x float]* %B, i64 0, i64 0, !dbg !5819
  %407 = load float, float* %arrayidx650, align 4, !dbg !5819
  %mul651 = fmul float %406, %407, !dbg !5820
  %add652 = fadd float %mul647, %mul651, !dbg !5821
  %nor653 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5822
  %408 = load float*, float** %nor653, align 8, !dbg !5822
  %arrayidx654 = getelementptr inbounds float, float* %408, i64 2, !dbg !5823
  %409 = load float, float* %arrayidx654, align 4, !dbg !5823
  %410 = load float*, float** %no, align 8, !dbg !5824
  %arrayidx655 = getelementptr inbounds float, float* %410, i64 0, !dbg !5824
  %411 = load float, float* %arrayidx655, align 4, !dbg !5824
  %mul656 = fmul float %409, %411, !dbg !5825
  %add657 = fadd float %add652, %mul656, !dbg !5826
  %arrayidx658 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !5827
  store float %add657, float* %arrayidx658, align 4, !dbg !5828
  %nor659 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5829
  %412 = load float*, float** %nor659, align 8, !dbg !5829
  %arrayidx660 = getelementptr inbounds float, float* %412, i64 0, !dbg !5830
  %413 = load float, float* %arrayidx660, align 4, !dbg !5830
  %414 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5831
  %nmaptang661 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %414, i32 0, i32 67, !dbg !5832
  %arrayidx662 = getelementptr inbounds [4 x float], [4 x float]* %nmaptang661, i64 0, i64 1, !dbg !5831
  %415 = load float, float* %arrayidx662, align 4, !dbg !5831
  %mul663 = fmul float %413, %415, !dbg !5833
  %nor664 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5834
  %416 = load float*, float** %nor664, align 8, !dbg !5834
  %arrayidx665 = getelementptr inbounds float, float* %416, i64 1, !dbg !5835
  %417 = load float, float* %arrayidx665, align 4, !dbg !5835
  %arrayidx666 = getelementptr inbounds [3 x float], [3 x float]* %B, i64 0, i64 1, !dbg !5836
  %418 = load float, float* %arrayidx666, align 4, !dbg !5836
  %mul667 = fmul float %417, %418, !dbg !5837
  %add668 = fadd float %mul663, %mul667, !dbg !5838
  %nor669 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5839
  %419 = load float*, float** %nor669, align 8, !dbg !5839
  %arrayidx670 = getelementptr inbounds float, float* %419, i64 2, !dbg !5840
  %420 = load float, float* %arrayidx670, align 4, !dbg !5840
  %421 = load float*, float** %no, align 8, !dbg !5841
  %arrayidx671 = getelementptr inbounds float, float* %421, i64 1, !dbg !5841
  %422 = load float, float* %arrayidx671, align 4, !dbg !5841
  %mul672 = fmul float %420, %422, !dbg !5842
  %add673 = fadd float %add668, %mul672, !dbg !5843
  %arrayidx674 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 1, !dbg !5844
  store float %add673, float* %arrayidx674, align 4, !dbg !5845
  %nor675 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5846
  %423 = load float*, float** %nor675, align 8, !dbg !5846
  %arrayidx676 = getelementptr inbounds float, float* %423, i64 0, !dbg !5847
  %424 = load float, float* %arrayidx676, align 4, !dbg !5847
  %425 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5848
  %nmaptang677 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %425, i32 0, i32 67, !dbg !5849
  %arrayidx678 = getelementptr inbounds [4 x float], [4 x float]* %nmaptang677, i64 0, i64 2, !dbg !5848
  %426 = load float, float* %arrayidx678, align 8, !dbg !5848
  %mul679 = fmul float %424, %426, !dbg !5850
  %nor680 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5851
  %427 = load float*, float** %nor680, align 8, !dbg !5851
  %arrayidx681 = getelementptr inbounds float, float* %427, i64 1, !dbg !5852
  %428 = load float, float* %arrayidx681, align 4, !dbg !5852
  %arrayidx682 = getelementptr inbounds [3 x float], [3 x float]* %B, i64 0, i64 2, !dbg !5853
  %429 = load float, float* %arrayidx682, align 4, !dbg !5853
  %mul683 = fmul float %428, %429, !dbg !5854
  %add684 = fadd float %mul679, %mul683, !dbg !5855
  %nor685 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5856
  %430 = load float*, float** %nor685, align 8, !dbg !5856
  %arrayidx686 = getelementptr inbounds float, float* %430, i64 2, !dbg !5857
  %431 = load float, float* %arrayidx686, align 4, !dbg !5857
  %432 = load float*, float** %no, align 8, !dbg !5858
  %arrayidx687 = getelementptr inbounds float, float* %432, i64 2, !dbg !5858
  %433 = load float, float* %arrayidx687, align 4, !dbg !5858
  %mul688 = fmul float %431, %433, !dbg !5859
  %add689 = fadd float %add684, %mul688, !dbg !5860
  %arrayidx690 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 2, !dbg !5861
  store float %add689, float* %arrayidx690, align 4, !dbg !5862
  %434 = load float, float* %facm, align 4, !dbg !5863
  %435 = load float*, float** %no, align 8, !dbg !5864
  %arrayidx691 = getelementptr inbounds float, float* %435, i64 0, !dbg !5864
  %436 = load float, float* %arrayidx691, align 4, !dbg !5864
  %mul692 = fmul float %434, %436, !dbg !5865
  %437 = load float, float* %fact, align 4, !dbg !5866
  %arrayidx693 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !5867
  %438 = load float, float* %arrayidx693, align 4, !dbg !5867
  %mul694 = fmul float %437, %438, !dbg !5868
  %add695 = fadd float %mul692, %mul694, !dbg !5869
  %439 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5870
  %vn696 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %439, i32 0, i32 16, !dbg !5871
  %arrayidx697 = getelementptr inbounds [3 x float], [3 x float]* %vn696, i64 0, i64 0, !dbg !5870
  store float %add695, float* %arrayidx697, align 4, !dbg !5872
  %440 = load float, float* %facm, align 4, !dbg !5873
  %441 = load float*, float** %no, align 8, !dbg !5874
  %arrayidx698 = getelementptr inbounds float, float* %441, i64 1, !dbg !5874
  %442 = load float, float* %arrayidx698, align 4, !dbg !5874
  %mul699 = fmul float %440, %442, !dbg !5875
  %443 = load float, float* %fact, align 4, !dbg !5876
  %arrayidx700 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 1, !dbg !5877
  %444 = load float, float* %arrayidx700, align 4, !dbg !5877
  %mul701 = fmul float %443, %444, !dbg !5878
  %add702 = fadd float %mul699, %mul701, !dbg !5879
  %445 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5880
  %vn703 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %445, i32 0, i32 16, !dbg !5881
  %arrayidx704 = getelementptr inbounds [3 x float], [3 x float]* %vn703, i64 0, i64 1, !dbg !5880
  store float %add702, float* %arrayidx704, align 4, !dbg !5882
  %446 = load float, float* %facm, align 4, !dbg !5883
  %447 = load float*, float** %no, align 8, !dbg !5884
  %arrayidx705 = getelementptr inbounds float, float* %447, i64 2, !dbg !5884
  %448 = load float, float* %arrayidx705, align 4, !dbg !5884
  %mul706 = fmul float %446, %448, !dbg !5885
  %449 = load float, float* %fact, align 4, !dbg !5886
  %arrayidx707 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 2, !dbg !5887
  %450 = load float, float* %arrayidx707, align 4, !dbg !5887
  %mul708 = fmul float %449, %450, !dbg !5888
  %add709 = fadd float %mul706, %mul708, !dbg !5889
  %451 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5890
  %vn710 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %451, i32 0, i32 16, !dbg !5891
  %arrayidx711 = getelementptr inbounds [3 x float], [3 x float]* %vn710, i64 0, i64 2, !dbg !5890
  store float %add709, float* %arrayidx711, align 4, !dbg !5892
  br label %if.end778, !dbg !5893

if.else712:                                       ; preds = %if.end626
  call void @llvm.dbg.declare(metadata [3 x float]* %nor713, metadata !5894, metadata !DIExpression()), !dbg !5896
  %arraydecay714 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5897
  %nor715 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5898
  %452 = load float*, float** %nor715, align 8, !dbg !5898
  call void @copy_v3_v3(float* %arraydecay714, float* %452), !dbg !5899
  %453 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5900
  %normapspace716 = getelementptr inbounds %struct.MTex, %struct.MTex* %453, i32 0, i32 18, !dbg !5902
  %454 = load i16, i16* %normapspace716, align 8, !dbg !5902
  %conv717 = sext i16 %454 to i32, !dbg !5900
  %cmp718 = icmp eq i32 %conv717, 0, !dbg !5903
  br i1 %cmp718, label %if.then720, label %if.else721, !dbg !5904

if.then720:                                       ; preds = %if.else712
  br label %if.end751, !dbg !5905

if.else721:                                       ; preds = %if.else712
  %455 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5907
  %normapspace722 = getelementptr inbounds %struct.MTex, %struct.MTex* %455, i32 0, i32 18, !dbg !5909
  %456 = load i16, i16* %normapspace722, align 8, !dbg !5909
  %conv723 = sext i16 %456 to i32, !dbg !5907
  %cmp724 = icmp eq i32 %conv723, 1, !dbg !5910
  br i1 %cmp724, label %if.then726, label %if.else729, !dbg !5911

if.then726:                                       ; preds = %if.else721
  %457 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5912
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %457, i32 0, i32 32, !dbg !5914
  %arraydecay727 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5912
  %arraydecay728 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5915
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay727, float* %arraydecay728), !dbg !5916
  br label %if.end750, !dbg !5917

if.else729:                                       ; preds = %if.else721
  %458 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5918
  %normapspace730 = getelementptr inbounds %struct.MTex, %struct.MTex* %458, i32 0, i32 18, !dbg !5920
  %459 = load i16, i16* %normapspace730, align 8, !dbg !5920
  %conv731 = sext i16 %459 to i32, !dbg !5918
  %cmp732 = icmp eq i32 %conv731, 2, !dbg !5921
  br i1 %cmp732, label %if.then734, label %if.end749, !dbg !5922

if.then734:                                       ; preds = %if.else729
  %460 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5923
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %460, i32 0, i32 4, !dbg !5926
  %461 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5926
  %tobool735 = icmp ne %struct.ObjectRen* %461, null, !dbg !5923
  br i1 %tobool735, label %land.lhs.true736, label %if.end745, !dbg !5927

land.lhs.true736:                                 ; preds = %if.then734
  %462 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5928
  %obr737 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %462, i32 0, i32 4, !dbg !5929
  %463 = load %struct.ObjectRen*, %struct.ObjectRen** %obr737, align 8, !dbg !5929
  %ob738 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %463, i32 0, i32 2, !dbg !5930
  %464 = load %struct.Object*, %struct.Object** %ob738, align 8, !dbg !5930
  %tobool739 = icmp ne %struct.Object* %464, null, !dbg !5928
  br i1 %tobool739, label %if.then740, label %if.end745, !dbg !5931

if.then740:                                       ; preds = %land.lhs.true736
  %465 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5932
  %obr741 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %465, i32 0, i32 4, !dbg !5933
  %466 = load %struct.ObjectRen*, %struct.ObjectRen** %obr741, align 8, !dbg !5933
  %ob742 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %466, i32 0, i32 2, !dbg !5934
  %467 = load %struct.Object*, %struct.Object** %ob742, align 8, !dbg !5934
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %467, i32 0, i32 47, !dbg !5935
  %arraydecay743 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5932
  %arraydecay744 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5936
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay743, float* %arraydecay744), !dbg !5937
  br label %if.end745, !dbg !5937

if.end745:                                        ; preds = %if.then740, %land.lhs.true736, %if.then734
  %468 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5938
  %viewmat746 = getelementptr inbounds %struct.Render, %struct.Render* %468, i32 0, i32 32, !dbg !5939
  %arraydecay747 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat746, i64 0, i64 0, !dbg !5938
  %arraydecay748 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5940
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay747, float* %arraydecay748), !dbg !5941
  br label %if.end749, !dbg !5942

if.end749:                                        ; preds = %if.end745, %if.else729
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then726
  br label %if.end751

if.end751:                                        ; preds = %if.end750, %if.then720
  %arraydecay752 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5943
  %call753 = call float @normalize_v3(float* %arraydecay752), !dbg !5944
  %469 = load float, float* %facm, align 4, !dbg !5945
  %470 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5946
  %vn754 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %470, i32 0, i32 16, !dbg !5947
  %arrayidx755 = getelementptr inbounds [3 x float], [3 x float]* %vn754, i64 0, i64 0, !dbg !5946
  %471 = load float, float* %arrayidx755, align 4, !dbg !5946
  %mul756 = fmul float %469, %471, !dbg !5948
  %472 = load float, float* %fact, align 4, !dbg !5949
  %arrayidx757 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 0, !dbg !5950
  %473 = load float, float* %arrayidx757, align 4, !dbg !5950
  %mul758 = fmul float %472, %473, !dbg !5951
  %add759 = fadd float %mul756, %mul758, !dbg !5952
  %474 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5953
  %vn760 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %474, i32 0, i32 16, !dbg !5954
  %arrayidx761 = getelementptr inbounds [3 x float], [3 x float]* %vn760, i64 0, i64 0, !dbg !5953
  store float %add759, float* %arrayidx761, align 4, !dbg !5955
  %475 = load float, float* %facm, align 4, !dbg !5956
  %476 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5957
  %vn762 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %476, i32 0, i32 16, !dbg !5958
  %arrayidx763 = getelementptr inbounds [3 x float], [3 x float]* %vn762, i64 0, i64 1, !dbg !5957
  %477 = load float, float* %arrayidx763, align 4, !dbg !5957
  %mul764 = fmul float %475, %477, !dbg !5959
  %478 = load float, float* %fact, align 4, !dbg !5960
  %arrayidx765 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 1, !dbg !5961
  %479 = load float, float* %arrayidx765, align 4, !dbg !5961
  %mul766 = fmul float %478, %479, !dbg !5962
  %add767 = fadd float %mul764, %mul766, !dbg !5963
  %480 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5964
  %vn768 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %480, i32 0, i32 16, !dbg !5965
  %arrayidx769 = getelementptr inbounds [3 x float], [3 x float]* %vn768, i64 0, i64 1, !dbg !5964
  store float %add767, float* %arrayidx769, align 4, !dbg !5966
  %481 = load float, float* %facm, align 4, !dbg !5967
  %482 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5968
  %vn770 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %482, i32 0, i32 16, !dbg !5969
  %arrayidx771 = getelementptr inbounds [3 x float], [3 x float]* %vn770, i64 0, i64 2, !dbg !5968
  %483 = load float, float* %arrayidx771, align 4, !dbg !5968
  %mul772 = fmul float %481, %483, !dbg !5970
  %484 = load float, float* %fact, align 4, !dbg !5971
  %arrayidx773 = getelementptr inbounds [3 x float], [3 x float]* %nor713, i64 0, i64 2, !dbg !5972
  %485 = load float, float* %arrayidx773, align 4, !dbg !5972
  %mul774 = fmul float %484, %485, !dbg !5973
  %add775 = fadd float %mul772, %mul774, !dbg !5974
  %486 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5975
  %vn776 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %486, i32 0, i32 16, !dbg !5976
  %arrayidx777 = getelementptr inbounds [3 x float], [3 x float]* %vn776, i64 0, i64 2, !dbg !5975
  store float %add775, float* %arrayidx777, align 4, !dbg !5977
  br label %if.end778

if.end778:                                        ; preds = %if.end751, %cond.end
  br label %if.end862, !dbg !5978

if.else779:                                       ; preds = %land.lhs.true603, %if.then597
  %487 = load i8, i8* %use_compat_bump, align 1, !dbg !5979
  %conv780 = zext i8 %487 to i32, !dbg !5979
  %tobool781 = icmp ne i32 %conv780, 0, !dbg !5979
  br i1 %tobool781, label %if.then784, label %lor.lhs.false, !dbg !5982

lor.lhs.false:                                    ; preds = %if.else779
  %488 = load i8, i8* %use_ntap_bump, align 1, !dbg !5983
  %conv782 = zext i8 %488 to i32, !dbg !5983
  %tobool783 = icmp ne i32 %conv782, 0, !dbg !5983
  br i1 %tobool783, label %if.then784, label %if.else797, !dbg !5984

if.then784:                                       ; preds = %lor.lhs.false, %if.else779
  %nor785 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5985
  %489 = load float*, float** %nor785, align 8, !dbg !5985
  %arrayidx786 = getelementptr inbounds float, float* %489, i64 0, !dbg !5987
  %490 = load float, float* %arrayidx786, align 4, !dbg !5987
  %491 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5988
  %vn787 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %491, i32 0, i32 16, !dbg !5989
  %arrayidx788 = getelementptr inbounds [3 x float], [3 x float]* %vn787, i64 0, i64 0, !dbg !5988
  store float %490, float* %arrayidx788, align 4, !dbg !5990
  %nor789 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5991
  %492 = load float*, float** %nor789, align 8, !dbg !5991
  %arrayidx790 = getelementptr inbounds float, float* %492, i64 1, !dbg !5992
  %493 = load float, float* %arrayidx790, align 4, !dbg !5992
  %494 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5993
  %vn791 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %494, i32 0, i32 16, !dbg !5994
  %arrayidx792 = getelementptr inbounds [3 x float], [3 x float]* %vn791, i64 0, i64 1, !dbg !5993
  store float %493, float* %arrayidx792, align 4, !dbg !5995
  %nor793 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !5996
  %495 = load float*, float** %nor793, align 8, !dbg !5996
  %arrayidx794 = getelementptr inbounds float, float* %495, i64 2, !dbg !5997
  %496 = load float, float* %arrayidx794, align 4, !dbg !5997
  %497 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !5998
  %vn795 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %497, i32 0, i32 16, !dbg !5999
  %arrayidx796 = getelementptr inbounds [3 x float], [3 x float]* %vn795, i64 0, i64 2, !dbg !5998
  store float %496, float* %arrayidx796, align 4, !dbg !6000
  br label %if.end861, !dbg !6001

if.else797:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [3 x float]* %nor798, metadata !6002, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata float* %dot, metadata !6005, metadata !DIExpression()), !dbg !6006
  %498 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6007
  %mat799 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %498, i32 0, i32 0, !dbg !6009
  %499 = load %struct.Material*, %struct.Material** %mat799, align 8, !dbg !6009
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %499, i32 0, i32 51, !dbg !6010
  %500 = load i32, i32* %mode, align 4, !dbg !6010
  %and800 = and i32 %500, 67108864, !dbg !6011
  %tobool801 = icmp ne i32 %and800, 0, !dbg !6011
  br i1 %tobool801, label %if.then802, label %if.end824, !dbg !6012

if.then802:                                       ; preds = %if.else797
  %501 = load float, float* %Tnor, align 4, !dbg !6013
  %502 = load float, float* %norfac, align 4, !dbg !6015
  %mul803 = fmul float %501, %502, !dbg !6016
  %nor804 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6017
  %503 = load float*, float** %nor804, align 8, !dbg !6017
  %arrayidx805 = getelementptr inbounds float, float* %503, i64 0, !dbg !6018
  %504 = load float, float* %arrayidx805, align 4, !dbg !6018
  %mul806 = fmul float %mul803, %504, !dbg !6019
  %505 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6020
  %tang807 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %505, i32 0, i32 65, !dbg !6021
  %arrayidx808 = getelementptr inbounds [3 x float], [3 x float]* %tang807, i64 0, i64 0, !dbg !6020
  %506 = load float, float* %arrayidx808, align 8, !dbg !6022
  %add809 = fadd float %506, %mul806, !dbg !6022
  store float %add809, float* %arrayidx808, align 8, !dbg !6022
  %507 = load float, float* %Tnor, align 4, !dbg !6023
  %508 = load float, float* %norfac, align 4, !dbg !6024
  %mul810 = fmul float %507, %508, !dbg !6025
  %nor811 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6026
  %509 = load float*, float** %nor811, align 8, !dbg !6026
  %arrayidx812 = getelementptr inbounds float, float* %509, i64 1, !dbg !6027
  %510 = load float, float* %arrayidx812, align 4, !dbg !6027
  %mul813 = fmul float %mul810, %510, !dbg !6028
  %511 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6029
  %tang814 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %511, i32 0, i32 65, !dbg !6030
  %arrayidx815 = getelementptr inbounds [3 x float], [3 x float]* %tang814, i64 0, i64 1, !dbg !6029
  %512 = load float, float* %arrayidx815, align 4, !dbg !6031
  %add816 = fadd float %512, %mul813, !dbg !6031
  store float %add816, float* %arrayidx815, align 4, !dbg !6031
  %513 = load float, float* %Tnor, align 4, !dbg !6032
  %514 = load float, float* %norfac, align 4, !dbg !6033
  %mul817 = fmul float %513, %514, !dbg !6034
  %nor818 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6035
  %515 = load float*, float** %nor818, align 8, !dbg !6035
  %arrayidx819 = getelementptr inbounds float, float* %515, i64 2, !dbg !6036
  %516 = load float, float* %arrayidx819, align 4, !dbg !6036
  %mul820 = fmul float %mul817, %516, !dbg !6037
  %517 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6038
  %tang821 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %517, i32 0, i32 65, !dbg !6039
  %arrayidx822 = getelementptr inbounds [3 x float], [3 x float]* %tang821, i64 0, i64 2, !dbg !6038
  %518 = load float, float* %arrayidx822, align 8, !dbg !6040
  %add823 = fadd float %518, %mul820, !dbg !6040
  store float %add823, float* %arrayidx822, align 8, !dbg !6040
  br label %if.end824, !dbg !6041

if.end824:                                        ; preds = %if.then802, %if.else797
  %519 = load float, float* %Tnor, align 4, !dbg !6042
  %520 = load float, float* %norfac, align 4, !dbg !6043
  %mul825 = fmul float %519, %520, !dbg !6044
  %nor826 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6045
  %521 = load float*, float** %nor826, align 8, !dbg !6045
  %arrayidx827 = getelementptr inbounds float, float* %521, i64 0, !dbg !6046
  %522 = load float, float* %arrayidx827, align 4, !dbg !6046
  %mul828 = fmul float %mul825, %522, !dbg !6047
  %arrayidx829 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 0, !dbg !6048
  store float %mul828, float* %arrayidx829, align 4, !dbg !6049
  %523 = load float, float* %Tnor, align 4, !dbg !6050
  %524 = load float, float* %norfac, align 4, !dbg !6051
  %mul830 = fmul float %523, %524, !dbg !6052
  %nor831 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6053
  %525 = load float*, float** %nor831, align 8, !dbg !6053
  %arrayidx832 = getelementptr inbounds float, float* %525, i64 1, !dbg !6054
  %526 = load float, float* %arrayidx832, align 4, !dbg !6054
  %mul833 = fmul float %mul830, %526, !dbg !6055
  %arrayidx834 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 1, !dbg !6056
  store float %mul833, float* %arrayidx834, align 4, !dbg !6057
  %527 = load float, float* %Tnor, align 4, !dbg !6058
  %528 = load float, float* %norfac, align 4, !dbg !6059
  %mul835 = fmul float %527, %528, !dbg !6060
  %nor836 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6061
  %529 = load float*, float** %nor836, align 8, !dbg !6061
  %arrayidx837 = getelementptr inbounds float, float* %529, i64 2, !dbg !6062
  %530 = load float, float* %arrayidx837, align 4, !dbg !6062
  %mul838 = fmul float %mul835, %530, !dbg !6063
  %arrayidx839 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 2, !dbg !6064
  store float %mul838, float* %arrayidx839, align 4, !dbg !6065
  %arraydecay840 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 0, !dbg !6066
  %531 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6067
  %vn841 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %531, i32 0, i32 16, !dbg !6068
  %arraydecay842 = getelementptr inbounds [3 x float], [3 x float]* %vn841, i64 0, i64 0, !dbg !6067
  %call843 = call float @dot_v3v3(float* %arraydecay840, float* %arraydecay842), !dbg !6069
  %mul844 = fmul float 5.000000e-01, %call843, !dbg !6070
  %add845 = fadd float 5.000000e-01, %mul844, !dbg !6071
  store float %add845, float* %dot, align 4, !dbg !6072
  %532 = load float, float* %dot, align 4, !dbg !6073
  %arrayidx846 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 0, !dbg !6074
  %533 = load float, float* %arrayidx846, align 4, !dbg !6074
  %mul847 = fmul float %532, %533, !dbg !6075
  %534 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6076
  %vn848 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %534, i32 0, i32 16, !dbg !6077
  %arrayidx849 = getelementptr inbounds [3 x float], [3 x float]* %vn848, i64 0, i64 0, !dbg !6076
  %535 = load float, float* %arrayidx849, align 4, !dbg !6078
  %add850 = fadd float %535, %mul847, !dbg !6078
  store float %add850, float* %arrayidx849, align 4, !dbg !6078
  %536 = load float, float* %dot, align 4, !dbg !6079
  %arrayidx851 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 1, !dbg !6080
  %537 = load float, float* %arrayidx851, align 4, !dbg !6080
  %mul852 = fmul float %536, %537, !dbg !6081
  %538 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6082
  %vn853 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %538, i32 0, i32 16, !dbg !6083
  %arrayidx854 = getelementptr inbounds [3 x float], [3 x float]* %vn853, i64 0, i64 1, !dbg !6082
  %539 = load float, float* %arrayidx854, align 4, !dbg !6084
  %add855 = fadd float %539, %mul852, !dbg !6084
  store float %add855, float* %arrayidx854, align 4, !dbg !6084
  %540 = load float, float* %dot, align 4, !dbg !6085
  %arrayidx856 = getelementptr inbounds [3 x float], [3 x float]* %nor798, i64 0, i64 2, !dbg !6086
  %541 = load float, float* %arrayidx856, align 4, !dbg !6086
  %mul857 = fmul float %540, %541, !dbg !6087
  %542 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6088
  %vn858 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %542, i32 0, i32 16, !dbg !6089
  %arrayidx859 = getelementptr inbounds [3 x float], [3 x float]* %vn858, i64 0, i64 2, !dbg !6088
  %543 = load float, float* %arrayidx859, align 4, !dbg !6090
  %add860 = fadd float %543, %mul857, !dbg !6090
  store float %add860, float* %arrayidx859, align 4, !dbg !6090
  br label %if.end861

if.end861:                                        ; preds = %if.end824, %if.then784
  br label %if.end862

if.end862:                                        ; preds = %if.end861, %if.end778
  %544 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6091
  %vn863 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %544, i32 0, i32 16, !dbg !6092
  %arraydecay864 = getelementptr inbounds [3 x float], [3 x float]* %vn863, i64 0, i64 0, !dbg !6091
  %call865 = call float @normalize_v3(float* %arraydecay864), !dbg !6093
  %545 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6094
  %vn866 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %545, i32 0, i32 16, !dbg !6095
  %arrayidx867 = getelementptr inbounds [3 x float], [3 x float]* %vn866, i64 0, i64 0, !dbg !6094
  %546 = load float, float* %arrayidx867, align 4, !dbg !6094
  %fneg868 = fneg float %546, !dbg !6096
  %547 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6097
  %orn869 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %547, i32 0, i32 59, !dbg !6098
  %arrayidx870 = getelementptr inbounds [3 x float], [3 x float]* %orn869, i64 0, i64 0, !dbg !6097
  store float %fneg868, float* %arrayidx870, align 8, !dbg !6099
  %548 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6100
  %vn871 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %548, i32 0, i32 16, !dbg !6101
  %arrayidx872 = getelementptr inbounds [3 x float], [3 x float]* %vn871, i64 0, i64 1, !dbg !6100
  %549 = load float, float* %arrayidx872, align 4, !dbg !6100
  %fneg873 = fneg float %549, !dbg !6102
  %550 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6103
  %orn874 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %550, i32 0, i32 59, !dbg !6104
  %arrayidx875 = getelementptr inbounds [3 x float], [3 x float]* %orn874, i64 0, i64 1, !dbg !6103
  store float %fneg873, float* %arrayidx875, align 4, !dbg !6105
  %551 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6106
  %vn876 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %551, i32 0, i32 16, !dbg !6107
  %arrayidx877 = getelementptr inbounds [3 x float], [3 x float]* %vn876, i64 0, i64 2, !dbg !6106
  %552 = load float, float* %arrayidx877, align 4, !dbg !6106
  %fneg878 = fneg float %552, !dbg !6108
  %553 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6109
  %orn879 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %553, i32 0, i32 59, !dbg !6110
  %arrayidx880 = getelementptr inbounds [3 x float], [3 x float]* %orn879, i64 0, i64 2, !dbg !6109
  store float %fneg878, float* %arrayidx880, align 8, !dbg !6111
  br label %if.end881, !dbg !6112

if.end881:                                        ; preds = %if.end862, %if.then594
  br label %if.end882, !dbg !6113

if.end882:                                        ; preds = %if.end881, %if.end589
  %554 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6114
  %mapto883 = getelementptr inbounds %struct.MTex, %struct.MTex* %554, i32 0, i32 1, !dbg !6116
  %555 = load i16, i16* %mapto883, align 2, !dbg !6116
  %conv884 = sext i16 %555 to i32, !dbg !6114
  %and885 = and i32 %conv884, 4096, !dbg !6117
  %tobool886 = icmp ne i32 %and885, 0, !dbg !6117
  br i1 %tobool886, label %if.then887, label %if.end1013, !dbg !6118

if.then887:                                       ; preds = %if.end882
  %nor888 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6119
  %556 = load float*, float** %nor888, align 8, !dbg !6119
  %tobool889 = icmp ne float* %556, null, !dbg !6122
  br i1 %tobool889, label %if.then890, label %if.end916, !dbg !6123

if.then890:                                       ; preds = %if.then887
  call void @llvm.dbg.declare(metadata float* %norfac891, metadata !6124, metadata !DIExpression()), !dbg !6126
  %557 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6127
  %norfac892 = getelementptr inbounds %struct.MTex, %struct.MTex* %557, i32 0, i32 30, !dbg !6128
  %558 = load float, float* %norfac892, align 4, !dbg !6128
  store float %558, float* %norfac891, align 4, !dbg !6126
  %559 = load float, float* %Tnor, align 4, !dbg !6129
  %mul893 = fmul float 0x3FC99999A0000000, %559, !dbg !6130
  %560 = load float, float* %norfac891, align 4, !dbg !6131
  %mul894 = fmul float %mul893, %560, !dbg !6132
  %nor895 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6133
  %561 = load float*, float** %nor895, align 8, !dbg !6133
  %arrayidx896 = getelementptr inbounds float, float* %561, i64 0, !dbg !6134
  %562 = load float, float* %arrayidx896, align 4, !dbg !6134
  %mul897 = fmul float %mul894, %562, !dbg !6135
  %563 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6136
  %displace = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %563, i32 0, i32 63, !dbg !6137
  %arrayidx898 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 0, !dbg !6136
  %564 = load float, float* %arrayidx898, align 8, !dbg !6138
  %add899 = fadd float %564, %mul897, !dbg !6138
  store float %add899, float* %arrayidx898, align 8, !dbg !6138
  %565 = load float, float* %Tnor, align 4, !dbg !6139
  %mul900 = fmul float 0x3FC99999A0000000, %565, !dbg !6140
  %566 = load float, float* %norfac891, align 4, !dbg !6141
  %mul901 = fmul float %mul900, %566, !dbg !6142
  %nor902 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6143
  %567 = load float*, float** %nor902, align 8, !dbg !6143
  %arrayidx903 = getelementptr inbounds float, float* %567, i64 1, !dbg !6144
  %568 = load float, float* %arrayidx903, align 4, !dbg !6144
  %mul904 = fmul float %mul901, %568, !dbg !6145
  %569 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6146
  %displace905 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %569, i32 0, i32 63, !dbg !6147
  %arrayidx906 = getelementptr inbounds [3 x float], [3 x float]* %displace905, i64 0, i64 1, !dbg !6146
  %570 = load float, float* %arrayidx906, align 4, !dbg !6148
  %add907 = fadd float %570, %mul904, !dbg !6148
  store float %add907, float* %arrayidx906, align 4, !dbg !6148
  %571 = load float, float* %Tnor, align 4, !dbg !6149
  %mul908 = fmul float 0x3FC99999A0000000, %571, !dbg !6150
  %572 = load float, float* %norfac891, align 4, !dbg !6151
  %mul909 = fmul float %mul908, %572, !dbg !6152
  %nor910 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !6153
  %573 = load float*, float** %nor910, align 8, !dbg !6153
  %arrayidx911 = getelementptr inbounds float, float* %573, i64 2, !dbg !6154
  %574 = load float, float* %arrayidx911, align 4, !dbg !6154
  %mul912 = fmul float %mul909, %574, !dbg !6155
  %575 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6156
  %displace913 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %575, i32 0, i32 63, !dbg !6157
  %arrayidx914 = getelementptr inbounds [3 x float], [3 x float]* %displace913, i64 0, i64 2, !dbg !6156
  %576 = load float, float* %arrayidx914, align 8, !dbg !6158
  %add915 = fadd float %576, %mul912, !dbg !6158
  store float %add915, float* %arrayidx914, align 8, !dbg !6158
  br label %if.end916, !dbg !6159

if.end916:                                        ; preds = %if.then890, %if.then887
  %577 = load i32, i32* %rgbnor, align 4, !dbg !6160
  %and917 = and i32 %577, 1, !dbg !6162
  %tobool918 = icmp ne i32 %and917, 0, !dbg !6162
  br i1 %tobool918, label %if.then919, label %if.end923, !dbg !6163

if.then919:                                       ; preds = %if.end916
  %tr920 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !6164
  %call921 = call float @rgb_to_grayscale(float* %tr920), !dbg !6166
  %tin922 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6167
  store float %call921, float* %tin922, align 8, !dbg !6168
  br label %if.end923, !dbg !6169

if.end923:                                        ; preds = %if.then919, %if.end916
  %tin924 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6170
  %578 = load float, float* %tin924, align 8, !dbg !6170
  %sub925 = fsub float 5.000000e-01, %578, !dbg !6171
  %579 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6172
  %dispfac = getelementptr inbounds %struct.MTex, %struct.MTex* %579, i32 0, i32 31, !dbg !6173
  %580 = load float, float* %dispfac, align 8, !dbg !6173
  %mul926 = fmul float %sub925, %580, !dbg !6174
  %581 = load float, float* %stencilTin, align 4, !dbg !6175
  %mul927 = fmul float %mul926, %581, !dbg !6176
  store float %mul927, float* %factt, align 4, !dbg !6177
  %582 = load float, float* %factt, align 4, !dbg !6178
  %sub928 = fsub float 1.000000e+00, %582, !dbg !6179
  store float %sub928, float* %facmm, align 4, !dbg !6180
  %583 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6181
  %blendtype929 = getelementptr inbounds %struct.MTex, %struct.MTex* %583, i32 0, i32 3, !dbg !6183
  %584 = load i16, i16* %blendtype929, align 2, !dbg !6183
  %conv930 = sext i16 %584 to i32, !dbg !6181
  %cmp931 = icmp eq i32 %conv930, 0, !dbg !6184
  br i1 %cmp931, label %if.then933, label %if.else961, !dbg !6185

if.then933:                                       ; preds = %if.end923
  %585 = load float, float* %factt, align 4, !dbg !6186
  %586 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6188
  %vn934 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %586, i32 0, i32 16, !dbg !6189
  %arrayidx935 = getelementptr inbounds [3 x float], [3 x float]* %vn934, i64 0, i64 0, !dbg !6188
  %587 = load float, float* %arrayidx935, align 4, !dbg !6188
  %mul936 = fmul float %585, %587, !dbg !6190
  %588 = load float, float* %facmm, align 4, !dbg !6191
  %589 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6192
  %displace937 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %589, i32 0, i32 63, !dbg !6193
  %arrayidx938 = getelementptr inbounds [3 x float], [3 x float]* %displace937, i64 0, i64 0, !dbg !6192
  %590 = load float, float* %arrayidx938, align 8, !dbg !6192
  %mul939 = fmul float %588, %590, !dbg !6194
  %add940 = fadd float %mul936, %mul939, !dbg !6195
  %591 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6196
  %displace941 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %591, i32 0, i32 63, !dbg !6197
  %arrayidx942 = getelementptr inbounds [3 x float], [3 x float]* %displace941, i64 0, i64 0, !dbg !6196
  store float %add940, float* %arrayidx942, align 8, !dbg !6198
  %592 = load float, float* %factt, align 4, !dbg !6199
  %593 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6200
  %vn943 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %593, i32 0, i32 16, !dbg !6201
  %arrayidx944 = getelementptr inbounds [3 x float], [3 x float]* %vn943, i64 0, i64 1, !dbg !6200
  %594 = load float, float* %arrayidx944, align 4, !dbg !6200
  %mul945 = fmul float %592, %594, !dbg !6202
  %595 = load float, float* %facmm, align 4, !dbg !6203
  %596 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6204
  %displace946 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %596, i32 0, i32 63, !dbg !6205
  %arrayidx947 = getelementptr inbounds [3 x float], [3 x float]* %displace946, i64 0, i64 1, !dbg !6204
  %597 = load float, float* %arrayidx947, align 4, !dbg !6204
  %mul948 = fmul float %595, %597, !dbg !6206
  %add949 = fadd float %mul945, %mul948, !dbg !6207
  %598 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6208
  %displace950 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %598, i32 0, i32 63, !dbg !6209
  %arrayidx951 = getelementptr inbounds [3 x float], [3 x float]* %displace950, i64 0, i64 1, !dbg !6208
  store float %add949, float* %arrayidx951, align 4, !dbg !6210
  %599 = load float, float* %factt, align 4, !dbg !6211
  %600 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6212
  %vn952 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %600, i32 0, i32 16, !dbg !6213
  %arrayidx953 = getelementptr inbounds [3 x float], [3 x float]* %vn952, i64 0, i64 2, !dbg !6212
  %601 = load float, float* %arrayidx953, align 4, !dbg !6212
  %mul954 = fmul float %599, %601, !dbg !6214
  %602 = load float, float* %facmm, align 4, !dbg !6215
  %603 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6216
  %displace955 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %603, i32 0, i32 63, !dbg !6217
  %arrayidx956 = getelementptr inbounds [3 x float], [3 x float]* %displace955, i64 0, i64 2, !dbg !6216
  %604 = load float, float* %arrayidx956, align 8, !dbg !6216
  %mul957 = fmul float %602, %604, !dbg !6218
  %add958 = fadd float %mul954, %mul957, !dbg !6219
  %605 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6220
  %displace959 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %605, i32 0, i32 63, !dbg !6221
  %arrayidx960 = getelementptr inbounds [3 x float], [3 x float]* %displace959, i64 0, i64 2, !dbg !6220
  store float %add958, float* %arrayidx960, align 8, !dbg !6222
  br label %if.end1012, !dbg !6223

if.else961:                                       ; preds = %if.end923
  %606 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6224
  %blendtype962 = getelementptr inbounds %struct.MTex, %struct.MTex* %606, i32 0, i32 3, !dbg !6226
  %607 = load i16, i16* %blendtype962, align 2, !dbg !6226
  %conv963 = sext i16 %607 to i32, !dbg !6224
  %cmp964 = icmp eq i32 %conv963, 1, !dbg !6227
  br i1 %cmp964, label %if.then966, label %if.else985, !dbg !6228

if.then966:                                       ; preds = %if.else961
  %608 = load float, float* %factt, align 4, !dbg !6229
  %609 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6231
  %vn967 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %609, i32 0, i32 16, !dbg !6232
  %arrayidx968 = getelementptr inbounds [3 x float], [3 x float]* %vn967, i64 0, i64 0, !dbg !6231
  %610 = load float, float* %arrayidx968, align 4, !dbg !6231
  %mul969 = fmul float %608, %610, !dbg !6233
  %611 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6234
  %displace970 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %611, i32 0, i32 63, !dbg !6235
  %arrayidx971 = getelementptr inbounds [3 x float], [3 x float]* %displace970, i64 0, i64 0, !dbg !6234
  %612 = load float, float* %arrayidx971, align 8, !dbg !6236
  %mul972 = fmul float %612, %mul969, !dbg !6236
  store float %mul972, float* %arrayidx971, align 8, !dbg !6236
  %613 = load float, float* %factt, align 4, !dbg !6237
  %614 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6238
  %vn973 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %614, i32 0, i32 16, !dbg !6239
  %arrayidx974 = getelementptr inbounds [3 x float], [3 x float]* %vn973, i64 0, i64 1, !dbg !6238
  %615 = load float, float* %arrayidx974, align 4, !dbg !6238
  %mul975 = fmul float %613, %615, !dbg !6240
  %616 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6241
  %displace976 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %616, i32 0, i32 63, !dbg !6242
  %arrayidx977 = getelementptr inbounds [3 x float], [3 x float]* %displace976, i64 0, i64 1, !dbg !6241
  %617 = load float, float* %arrayidx977, align 4, !dbg !6243
  %mul978 = fmul float %617, %mul975, !dbg !6243
  store float %mul978, float* %arrayidx977, align 4, !dbg !6243
  %618 = load float, float* %factt, align 4, !dbg !6244
  %619 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6245
  %vn979 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %619, i32 0, i32 16, !dbg !6246
  %arrayidx980 = getelementptr inbounds [3 x float], [3 x float]* %vn979, i64 0, i64 2, !dbg !6245
  %620 = load float, float* %arrayidx980, align 4, !dbg !6245
  %mul981 = fmul float %618, %620, !dbg !6247
  %621 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6248
  %displace982 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %621, i32 0, i32 63, !dbg !6249
  %arrayidx983 = getelementptr inbounds [3 x float], [3 x float]* %displace982, i64 0, i64 2, !dbg !6248
  %622 = load float, float* %arrayidx983, align 8, !dbg !6250
  %mul984 = fmul float %622, %mul981, !dbg !6250
  store float %mul984, float* %arrayidx983, align 8, !dbg !6250
  br label %if.end1011, !dbg !6251

if.else985:                                       ; preds = %if.else961
  %623 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6252
  %blendtype986 = getelementptr inbounds %struct.MTex, %struct.MTex* %623, i32 0, i32 3, !dbg !6255
  %624 = load i16, i16* %blendtype986, align 2, !dbg !6255
  %conv987 = sext i16 %624 to i32, !dbg !6252
  %cmp988 = icmp eq i32 %conv987, 3, !dbg !6256
  br i1 %cmp988, label %if.then990, label %if.end992, !dbg !6257

if.then990:                                       ; preds = %if.else985
  %625 = load float, float* %factt, align 4, !dbg !6258
  %fneg991 = fneg float %625, !dbg !6259
  store float %fneg991, float* %factt, align 4, !dbg !6260
  br label %if.end992, !dbg !6261

if.end992:                                        ; preds = %if.then990, %if.else985
  %626 = load float, float* %factt, align 4, !dbg !6262
  %627 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6263
  %vn993 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %627, i32 0, i32 16, !dbg !6264
  %arrayidx994 = getelementptr inbounds [3 x float], [3 x float]* %vn993, i64 0, i64 0, !dbg !6263
  %628 = load float, float* %arrayidx994, align 4, !dbg !6263
  %mul995 = fmul float %626, %628, !dbg !6265
  %629 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6266
  %displace996 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %629, i32 0, i32 63, !dbg !6267
  %arrayidx997 = getelementptr inbounds [3 x float], [3 x float]* %displace996, i64 0, i64 0, !dbg !6266
  %630 = load float, float* %arrayidx997, align 8, !dbg !6268
  %add998 = fadd float %630, %mul995, !dbg !6268
  store float %add998, float* %arrayidx997, align 8, !dbg !6268
  %631 = load float, float* %factt, align 4, !dbg !6269
  %632 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6270
  %vn999 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %632, i32 0, i32 16, !dbg !6271
  %arrayidx1000 = getelementptr inbounds [3 x float], [3 x float]* %vn999, i64 0, i64 1, !dbg !6270
  %633 = load float, float* %arrayidx1000, align 4, !dbg !6270
  %mul1001 = fmul float %631, %633, !dbg !6272
  %634 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6273
  %displace1002 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %634, i32 0, i32 63, !dbg !6274
  %arrayidx1003 = getelementptr inbounds [3 x float], [3 x float]* %displace1002, i64 0, i64 1, !dbg !6273
  %635 = load float, float* %arrayidx1003, align 4, !dbg !6275
  %add1004 = fadd float %635, %mul1001, !dbg !6275
  store float %add1004, float* %arrayidx1003, align 4, !dbg !6275
  %636 = load float, float* %factt, align 4, !dbg !6276
  %637 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6277
  %vn1005 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %637, i32 0, i32 16, !dbg !6278
  %arrayidx1006 = getelementptr inbounds [3 x float], [3 x float]* %vn1005, i64 0, i64 2, !dbg !6277
  %638 = load float, float* %arrayidx1006, align 4, !dbg !6277
  %mul1007 = fmul float %636, %638, !dbg !6279
  %639 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6280
  %displace1008 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %639, i32 0, i32 63, !dbg !6281
  %arrayidx1009 = getelementptr inbounds [3 x float], [3 x float]* %displace1008, i64 0, i64 2, !dbg !6280
  %640 = load float, float* %arrayidx1009, align 8, !dbg !6282
  %add1010 = fadd float %640, %mul1007, !dbg !6282
  store float %add1010, float* %arrayidx1009, align 8, !dbg !6282
  br label %if.end1011

if.end1011:                                       ; preds = %if.end992, %if.then966
  br label %if.end1012

if.end1012:                                       ; preds = %if.end1011, %if.then933
  br label %if.end1013, !dbg !6283

if.end1013:                                       ; preds = %if.end1012, %if.end882
  %641 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6284
  %mapto1014 = getelementptr inbounds %struct.MTex, %struct.MTex* %641, i32 0, i32 1, !dbg !6286
  %642 = load i16, i16* %mapto1014, align 2, !dbg !6286
  %conv1015 = sext i16 %642 to i32, !dbg !6284
  %and1016 = and i32 %conv1015, 65520, !dbg !6287
  %tobool1017 = icmp ne i32 %and1016, 0, !dbg !6287
  br i1 %tobool1017, label %if.then1018, label %if.end1240, !dbg !6288

if.then1018:                                      ; preds = %if.end1013
  %643 = load i32, i32* %rgbnor, align 4, !dbg !6289
  %and1019 = and i32 %643, 1, !dbg !6292
  %tobool1020 = icmp ne i32 %and1019, 0, !dbg !6292
  br i1 %tobool1020, label %if.then1021, label %if.end1031, !dbg !6293

if.then1021:                                      ; preds = %if.then1018
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !6294
  %644 = load i32, i32* %talpha, align 4, !dbg !6294
  %tobool1022 = icmp ne i32 %644, 0, !dbg !6297
  br i1 %tobool1022, label %if.then1023, label %if.else1026, !dbg !6298

if.then1023:                                      ; preds = %if.then1021
  %ta1024 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !6299
  %645 = load float, float* %ta1024, align 8, !dbg !6299
  %tin1025 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6300
  store float %645, float* %tin1025, align 8, !dbg !6301
  br label %if.end1030, !dbg !6302

if.else1026:                                      ; preds = %if.then1021
  %tr1027 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !6303
  %call1028 = call float @rgb_to_grayscale(float* %tr1027), !dbg !6304
  %tin1029 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6305
  store float %call1028, float* %tin1029, align 8, !dbg !6306
  br label %if.end1030

if.end1030:                                       ; preds = %if.else1026, %if.then1023
  br label %if.end1031, !dbg !6307

if.end1031:                                       ; preds = %if.end1030, %if.then1018
  %646 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6308
  %mapto1032 = getelementptr inbounds %struct.MTex, %struct.MTex* %646, i32 0, i32 1, !dbg !6310
  %647 = load i16, i16* %mapto1032, align 2, !dbg !6310
  %conv1033 = sext i16 %647 to i32, !dbg !6308
  %and1034 = and i32 %conv1033, 16, !dbg !6311
  %tobool1035 = icmp ne i32 %and1034, 0, !dbg !6311
  br i1 %tobool1035, label %if.then1036, label %if.end1050, !dbg !6312

if.then1036:                                      ; preds = %if.end1031
  call void @llvm.dbg.declare(metadata float* %difffac, metadata !6313, metadata !DIExpression()), !dbg !6315
  %648 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6316
  %difffac1037 = getelementptr inbounds %struct.MTex, %struct.MTex* %648, i32 0, i32 36, !dbg !6317
  %649 = load float, float* %difffac1037, align 4, !dbg !6317
  %650 = load float, float* %stencilTin, align 4, !dbg !6318
  %mul1038 = fmul float %649, %650, !dbg !6319
  store float %mul1038, float* %difffac, align 4, !dbg !6315
  %651 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6320
  %def_var = getelementptr inbounds %struct.MTex, %struct.MTex* %651, i32 0, i32 26, !dbg !6321
  %652 = load float, float* %def_var, align 4, !dbg !6321
  %653 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6322
  %refl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %653, i32 0, i32 50, !dbg !6323
  %654 = load float, float* %refl, align 4, !dbg !6323
  %tin1039 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6324
  %655 = load float, float* %tin1039, align 8, !dbg !6324
  %656 = load float, float* %difffac, align 4, !dbg !6325
  %657 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6326
  %blendtype1040 = getelementptr inbounds %struct.MTex, %struct.MTex* %657, i32 0, i32 3, !dbg !6327
  %658 = load i16, i16* %blendtype1040, align 2, !dbg !6327
  %conv1041 = sext i16 %658 to i32, !dbg !6326
  %call1042 = call float @texture_value_blend(float %652, float %654, float %655, float %656, i32 %conv1041), !dbg !6328
  %659 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6329
  %refl1043 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %659, i32 0, i32 50, !dbg !6330
  store float %call1042, float* %refl1043, align 4, !dbg !6331
  %660 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6332
  %refl1044 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %660, i32 0, i32 50, !dbg !6334
  %661 = load float, float* %refl1044, align 4, !dbg !6334
  %cmp1045 = fcmp olt float %661, 0.000000e+00, !dbg !6335
  br i1 %cmp1045, label %if.then1047, label %if.end1049, !dbg !6336

if.then1047:                                      ; preds = %if.then1036
  %662 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6337
  %refl1048 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %662, i32 0, i32 50, !dbg !6338
  store float 0.000000e+00, float* %refl1048, align 4, !dbg !6339
  br label %if.end1049, !dbg !6337

if.end1049:                                       ; preds = %if.then1047, %if.then1036
  br label %if.end1050, !dbg !6340

if.end1050:                                       ; preds = %if.end1049, %if.end1031
  %663 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6341
  %mapto1051 = getelementptr inbounds %struct.MTex, %struct.MTex* %663, i32 0, i32 1, !dbg !6343
  %664 = load i16, i16* %mapto1051, align 2, !dbg !6343
  %conv1052 = sext i16 %664 to i32, !dbg !6341
  %and1053 = and i32 %conv1052, 32, !dbg !6344
  %tobool1054 = icmp ne i32 %and1053, 0, !dbg !6344
  br i1 %tobool1054, label %if.then1055, label %if.end1070, !dbg !6345

if.then1055:                                      ; preds = %if.end1050
  call void @llvm.dbg.declare(metadata float* %specfac, metadata !6346, metadata !DIExpression()), !dbg !6348
  %665 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6349
  %specfac1056 = getelementptr inbounds %struct.MTex, %struct.MTex* %665, i32 0, i32 37, !dbg !6350
  %666 = load float, float* %specfac1056, align 8, !dbg !6350
  %667 = load float, float* %stencilTin, align 4, !dbg !6351
  %mul1057 = fmul float %666, %667, !dbg !6352
  store float %mul1057, float* %specfac, align 4, !dbg !6348
  %668 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6353
  %def_var1058 = getelementptr inbounds %struct.MTex, %struct.MTex* %668, i32 0, i32 26, !dbg !6354
  %669 = load float, float* %def_var1058, align 4, !dbg !6354
  %670 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6355
  %spec = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %670, i32 0, i32 51, !dbg !6356
  %671 = load float, float* %spec, align 8, !dbg !6356
  %tin1059 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6357
  %672 = load float, float* %tin1059, align 8, !dbg !6357
  %673 = load float, float* %specfac, align 4, !dbg !6358
  %674 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6359
  %blendtype1060 = getelementptr inbounds %struct.MTex, %struct.MTex* %674, i32 0, i32 3, !dbg !6360
  %675 = load i16, i16* %blendtype1060, align 2, !dbg !6360
  %conv1061 = sext i16 %675 to i32, !dbg !6359
  %call1062 = call float @texture_value_blend(float %669, float %671, float %672, float %673, i32 %conv1061), !dbg !6361
  %676 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6362
  %spec1063 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %676, i32 0, i32 51, !dbg !6363
  store float %call1062, float* %spec1063, align 8, !dbg !6364
  %677 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6365
  %spec1064 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %677, i32 0, i32 51, !dbg !6367
  %678 = load float, float* %spec1064, align 8, !dbg !6367
  %cmp1065 = fcmp olt float %678, 0.000000e+00, !dbg !6368
  br i1 %cmp1065, label %if.then1067, label %if.end1069, !dbg !6369

if.then1067:                                      ; preds = %if.then1055
  %679 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6370
  %spec1068 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %679, i32 0, i32 51, !dbg !6371
  store float 0.000000e+00, float* %spec1068, align 8, !dbg !6372
  br label %if.end1069, !dbg !6370

if.end1069:                                       ; preds = %if.then1067, %if.then1055
  br label %if.end1070, !dbg !6373

if.end1070:                                       ; preds = %if.end1069, %if.end1050
  %680 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6374
  %mapto1071 = getelementptr inbounds %struct.MTex, %struct.MTex* %680, i32 0, i32 1, !dbg !6376
  %681 = load i16, i16* %mapto1071, align 2, !dbg !6376
  %conv1072 = sext i16 %681 to i32, !dbg !6374
  %and1073 = and i32 %conv1072, 64, !dbg !6377
  %tobool1074 = icmp ne i32 %and1073, 0, !dbg !6377
  br i1 %tobool1074, label %if.then1075, label %if.end1090, !dbg !6378

if.then1075:                                      ; preds = %if.end1070
  call void @llvm.dbg.declare(metadata float* %emitfac, metadata !6379, metadata !DIExpression()), !dbg !6381
  %682 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6382
  %emitfac1076 = getelementptr inbounds %struct.MTex, %struct.MTex* %682, i32 0, i32 38, !dbg !6383
  %683 = load float, float* %emitfac1076, align 4, !dbg !6383
  %684 = load float, float* %stencilTin, align 4, !dbg !6384
  %mul1077 = fmul float %683, %684, !dbg !6385
  store float %mul1077, float* %emitfac, align 4, !dbg !6381
  %685 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6386
  %def_var1078 = getelementptr inbounds %struct.MTex, %struct.MTex* %685, i32 0, i32 26, !dbg !6387
  %686 = load float, float* %def_var1078, align 4, !dbg !6387
  %687 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6388
  %emit = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %687, i32 0, i32 45, !dbg !6389
  %688 = load float, float* %emit, align 8, !dbg !6389
  %tin1079 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6390
  %689 = load float, float* %tin1079, align 8, !dbg !6390
  %690 = load float, float* %emitfac, align 4, !dbg !6391
  %691 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6392
  %blendtype1080 = getelementptr inbounds %struct.MTex, %struct.MTex* %691, i32 0, i32 3, !dbg !6393
  %692 = load i16, i16* %blendtype1080, align 2, !dbg !6393
  %conv1081 = sext i16 %692 to i32, !dbg !6392
  %call1082 = call float @texture_value_blend(float %686, float %688, float %689, float %690, i32 %conv1081), !dbg !6394
  %693 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6395
  %emit1083 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %693, i32 0, i32 45, !dbg !6396
  store float %call1082, float* %emit1083, align 8, !dbg !6397
  %694 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6398
  %emit1084 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %694, i32 0, i32 45, !dbg !6400
  %695 = load float, float* %emit1084, align 8, !dbg !6400
  %cmp1085 = fcmp olt float %695, 0.000000e+00, !dbg !6401
  br i1 %cmp1085, label %if.then1087, label %if.end1089, !dbg !6402

if.then1087:                                      ; preds = %if.then1075
  %696 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6403
  %emit1088 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %696, i32 0, i32 45, !dbg !6404
  store float 0.000000e+00, float* %emit1088, align 8, !dbg !6405
  br label %if.end1089, !dbg !6403

if.end1089:                                       ; preds = %if.then1087, %if.then1075
  br label %if.end1090, !dbg !6406

if.end1090:                                       ; preds = %if.end1089, %if.end1070
  %697 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6407
  %mapto1091 = getelementptr inbounds %struct.MTex, %struct.MTex* %697, i32 0, i32 1, !dbg !6409
  %698 = load i16, i16* %mapto1091, align 2, !dbg !6409
  %conv1092 = sext i16 %698 to i32, !dbg !6407
  %and1093 = and i32 %conv1092, 128, !dbg !6410
  %tobool1094 = icmp ne i32 %and1093, 0, !dbg !6410
  br i1 %tobool1094, label %if.then1095, label %if.end1117, !dbg !6411

if.then1095:                                      ; preds = %if.end1090
  call void @llvm.dbg.declare(metadata float* %alphafac, metadata !6412, metadata !DIExpression()), !dbg !6414
  %699 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6415
  %alphafac1096 = getelementptr inbounds %struct.MTex, %struct.MTex* %699, i32 0, i32 35, !dbg !6416
  %700 = load float, float* %alphafac1096, align 8, !dbg !6416
  %701 = load float, float* %stencilTin, align 4, !dbg !6417
  %mul1097 = fmul float %700, %701, !dbg !6418
  store float %mul1097, float* %alphafac, align 4, !dbg !6414
  %702 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6419
  %def_var1098 = getelementptr inbounds %struct.MTex, %struct.MTex* %702, i32 0, i32 26, !dbg !6420
  %703 = load float, float* %def_var1098, align 4, !dbg !6420
  %704 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6421
  %alpha = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %704, i32 0, i32 49, !dbg !6422
  %705 = load float, float* %alpha, align 8, !dbg !6422
  %tin1099 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6423
  %706 = load float, float* %tin1099, align 8, !dbg !6423
  %707 = load float, float* %alphafac, align 4, !dbg !6424
  %708 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6425
  %blendtype1100 = getelementptr inbounds %struct.MTex, %struct.MTex* %708, i32 0, i32 3, !dbg !6426
  %709 = load i16, i16* %blendtype1100, align 2, !dbg !6426
  %conv1101 = sext i16 %709 to i32, !dbg !6425
  %call1102 = call float @texture_value_blend(float %703, float %705, float %706, float %707, i32 %conv1101), !dbg !6427
  %710 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6428
  %alpha1103 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %710, i32 0, i32 49, !dbg !6429
  store float %call1102, float* %alpha1103, align 8, !dbg !6430
  %711 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6431
  %alpha1104 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %711, i32 0, i32 49, !dbg !6433
  %712 = load float, float* %alpha1104, align 8, !dbg !6433
  %cmp1105 = fcmp olt float %712, 0.000000e+00, !dbg !6434
  br i1 %cmp1105, label %if.then1107, label %if.else1109, !dbg !6435

if.then1107:                                      ; preds = %if.then1095
  %713 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6436
  %alpha1108 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %713, i32 0, i32 49, !dbg !6437
  store float 0.000000e+00, float* %alpha1108, align 8, !dbg !6438
  br label %if.end1116, !dbg !6436

if.else1109:                                      ; preds = %if.then1095
  %714 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6439
  %alpha1110 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %714, i32 0, i32 49, !dbg !6441
  %715 = load float, float* %alpha1110, align 8, !dbg !6441
  %cmp1111 = fcmp ogt float %715, 1.000000e+00, !dbg !6442
  br i1 %cmp1111, label %if.then1113, label %if.end1115, !dbg !6443

if.then1113:                                      ; preds = %if.else1109
  %716 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6444
  %alpha1114 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %716, i32 0, i32 49, !dbg !6445
  store float 1.000000e+00, float* %alpha1114, align 8, !dbg !6446
  br label %if.end1115, !dbg !6444

if.end1115:                                       ; preds = %if.then1113, %if.else1109
  br label %if.end1116

if.end1116:                                       ; preds = %if.end1115, %if.then1107
  br label %if.end1117, !dbg !6447

if.end1117:                                       ; preds = %if.end1116, %if.end1090
  %717 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6448
  %mapto1118 = getelementptr inbounds %struct.MTex, %struct.MTex* %717, i32 0, i32 1, !dbg !6450
  %718 = load i16, i16* %mapto1118, align 2, !dbg !6450
  %conv1119 = sext i16 %718 to i32, !dbg !6448
  %and1120 = and i32 %conv1119, 256, !dbg !6451
  %tobool1121 = icmp ne i32 %and1120, 0, !dbg !6451
  br i1 %tobool1121, label %if.then1122, label %if.end1147, !dbg !6452

if.then1122:                                      ; preds = %if.end1117
  call void @llvm.dbg.declare(metadata float* %har, metadata !6453, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata float* %hardfac, metadata !6456, metadata !DIExpression()), !dbg !6457
  %719 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6458
  %hardfac1123 = getelementptr inbounds %struct.MTex, %struct.MTex* %719, i32 0, i32 39, !dbg !6459
  %720 = load float, float* %hardfac1123, align 8, !dbg !6459
  %721 = load float, float* %stencilTin, align 4, !dbg !6460
  %mul1124 = fmul float %720, %721, !dbg !6461
  store float %mul1124, float* %hardfac, align 4, !dbg !6457
  %722 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6462
  %har1125 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %722, i32 0, i32 55, !dbg !6463
  %723 = load i32, i32* %har1125, align 8, !dbg !6463
  %conv1126 = sitofp i32 %723 to float, !dbg !6464
  %div = fdiv float %conv1126, 1.280000e+02, !dbg !6465
  store float %div, float* %har, align 4, !dbg !6466
  %724 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6467
  %def_var1127 = getelementptr inbounds %struct.MTex, %struct.MTex* %724, i32 0, i32 26, !dbg !6468
  %725 = load float, float* %def_var1127, align 4, !dbg !6468
  %726 = load float, float* %har, align 4, !dbg !6469
  %tin1128 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6470
  %727 = load float, float* %tin1128, align 8, !dbg !6470
  %728 = load float, float* %hardfac, align 4, !dbg !6471
  %729 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6472
  %blendtype1129 = getelementptr inbounds %struct.MTex, %struct.MTex* %729, i32 0, i32 3, !dbg !6473
  %730 = load i16, i16* %blendtype1129, align 2, !dbg !6473
  %conv1130 = sext i16 %730 to i32, !dbg !6472
  %call1131 = call float @texture_value_blend(float %725, float %726, float %727, float %728, i32 %conv1130), !dbg !6474
  %mul1132 = fmul float 1.280000e+02, %call1131, !dbg !6475
  store float %mul1132, float* %har, align 4, !dbg !6476
  %731 = load float, float* %har, align 4, !dbg !6477
  %cmp1133 = fcmp olt float %731, 1.000000e+00, !dbg !6479
  br i1 %cmp1133, label %if.then1135, label %if.else1137, !dbg !6480

if.then1135:                                      ; preds = %if.then1122
  %732 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6481
  %har1136 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %732, i32 0, i32 55, !dbg !6482
  store i32 1, i32* %har1136, align 8, !dbg !6483
  br label %if.end1146, !dbg !6481

if.else1137:                                      ; preds = %if.then1122
  %733 = load float, float* %har, align 4, !dbg !6484
  %cmp1138 = fcmp ogt float %733, 5.110000e+02, !dbg !6486
  br i1 %cmp1138, label %if.then1140, label %if.else1142, !dbg !6487

if.then1140:                                      ; preds = %if.else1137
  %734 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6488
  %har1141 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %734, i32 0, i32 55, !dbg !6489
  store i32 511, i32* %har1141, align 8, !dbg !6490
  br label %if.end1145, !dbg !6488

if.else1142:                                      ; preds = %if.else1137
  %735 = load float, float* %har, align 4, !dbg !6491
  %conv1143 = fptosi float %735 to i32, !dbg !6492
  %736 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6493
  %har1144 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %736, i32 0, i32 55, !dbg !6494
  store i32 %conv1143, i32* %har1144, align 8, !dbg !6495
  br label %if.end1145

if.end1145:                                       ; preds = %if.else1142, %if.then1140
  br label %if.end1146

if.end1146:                                       ; preds = %if.end1145, %if.then1135
  br label %if.end1147, !dbg !6496

if.end1147:                                       ; preds = %if.end1146, %if.end1117
  %737 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6497
  %mapto1148 = getelementptr inbounds %struct.MTex, %struct.MTex* %737, i32 0, i32 1, !dbg !6499
  %738 = load i16, i16* %mapto1148, align 2, !dbg !6499
  %conv1149 = sext i16 %738 to i32, !dbg !6497
  %and1150 = and i32 %conv1149, 512, !dbg !6500
  %tobool1151 = icmp ne i32 %and1150, 0, !dbg !6500
  br i1 %tobool1151, label %if.then1152, label %if.end1174, !dbg !6501

if.then1152:                                      ; preds = %if.end1147
  call void @llvm.dbg.declare(metadata float* %raymirrfac, metadata !6502, metadata !DIExpression()), !dbg !6504
  %739 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6505
  %raymirrfac1153 = getelementptr inbounds %struct.MTex, %struct.MTex* %739, i32 0, i32 40, !dbg !6506
  %740 = load float, float* %raymirrfac1153, align 4, !dbg !6506
  %741 = load float, float* %stencilTin, align 4, !dbg !6507
  %mul1154 = fmul float %740, %741, !dbg !6508
  store float %mul1154, float* %raymirrfac, align 4, !dbg !6504
  %742 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6509
  %def_var1155 = getelementptr inbounds %struct.MTex, %struct.MTex* %742, i32 0, i32 26, !dbg !6510
  %743 = load float, float* %def_var1155, align 4, !dbg !6510
  %744 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6511
  %ray_mirror = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %744, i32 0, i32 48, !dbg !6512
  %745 = load float, float* %ray_mirror, align 4, !dbg !6512
  %tin1156 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6513
  %746 = load float, float* %tin1156, align 8, !dbg !6513
  %747 = load float, float* %raymirrfac, align 4, !dbg !6514
  %748 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6515
  %blendtype1157 = getelementptr inbounds %struct.MTex, %struct.MTex* %748, i32 0, i32 3, !dbg !6516
  %749 = load i16, i16* %blendtype1157, align 2, !dbg !6516
  %conv1158 = sext i16 %749 to i32, !dbg !6515
  %call1159 = call float @texture_value_blend(float %743, float %745, float %746, float %747, i32 %conv1158), !dbg !6517
  %750 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6518
  %ray_mirror1160 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %750, i32 0, i32 48, !dbg !6519
  store float %call1159, float* %ray_mirror1160, align 4, !dbg !6520
  %751 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6521
  %ray_mirror1161 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %751, i32 0, i32 48, !dbg !6523
  %752 = load float, float* %ray_mirror1161, align 4, !dbg !6523
  %cmp1162 = fcmp olt float %752, 0.000000e+00, !dbg !6524
  br i1 %cmp1162, label %if.then1164, label %if.else1166, !dbg !6525

if.then1164:                                      ; preds = %if.then1152
  %753 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6526
  %ray_mirror1165 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %753, i32 0, i32 48, !dbg !6527
  store float 0.000000e+00, float* %ray_mirror1165, align 4, !dbg !6528
  br label %if.end1173, !dbg !6526

if.else1166:                                      ; preds = %if.then1152
  %754 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6529
  %ray_mirror1167 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %754, i32 0, i32 48, !dbg !6531
  %755 = load float, float* %ray_mirror1167, align 4, !dbg !6531
  %cmp1168 = fcmp ogt float %755, 1.000000e+00, !dbg !6532
  br i1 %cmp1168, label %if.then1170, label %if.end1172, !dbg !6533

if.then1170:                                      ; preds = %if.else1166
  %756 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6534
  %ray_mirror1171 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %756, i32 0, i32 48, !dbg !6535
  store float 1.000000e+00, float* %ray_mirror1171, align 4, !dbg !6536
  br label %if.end1172, !dbg !6534

if.end1172:                                       ; preds = %if.then1170, %if.else1166
  br label %if.end1173

if.end1173:                                       ; preds = %if.end1172, %if.then1164
  br label %if.end1174, !dbg !6537

if.end1174:                                       ; preds = %if.end1173, %if.end1147
  %757 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6538
  %mapto1175 = getelementptr inbounds %struct.MTex, %struct.MTex* %757, i32 0, i32 1, !dbg !6540
  %758 = load i16, i16* %mapto1175, align 2, !dbg !6540
  %conv1176 = sext i16 %758 to i32, !dbg !6538
  %and1177 = and i32 %conv1176, 1024, !dbg !6541
  %tobool1178 = icmp ne i32 %and1177, 0, !dbg !6541
  br i1 %tobool1178, label %if.then1179, label %if.end1201, !dbg !6542

if.then1179:                                      ; preds = %if.end1174
  call void @llvm.dbg.declare(metadata float* %translfac, metadata !6543, metadata !DIExpression()), !dbg !6545
  %759 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6546
  %translfac1180 = getelementptr inbounds %struct.MTex, %struct.MTex* %759, i32 0, i32 41, !dbg !6547
  %760 = load float, float* %translfac1180, align 8, !dbg !6547
  %761 = load float, float* %stencilTin, align 4, !dbg !6548
  %mul1181 = fmul float %760, %761, !dbg !6549
  store float %mul1181, float* %translfac, align 4, !dbg !6545
  %762 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6550
  %def_var1182 = getelementptr inbounds %struct.MTex, %struct.MTex* %762, i32 0, i32 26, !dbg !6551
  %763 = load float, float* %def_var1182, align 4, !dbg !6551
  %764 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6552
  %translucency = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %764, i32 0, i32 54, !dbg !6553
  %765 = load float, float* %translucency, align 4, !dbg !6553
  %tin1183 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6554
  %766 = load float, float* %tin1183, align 8, !dbg !6554
  %767 = load float, float* %translfac, align 4, !dbg !6555
  %768 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6556
  %blendtype1184 = getelementptr inbounds %struct.MTex, %struct.MTex* %768, i32 0, i32 3, !dbg !6557
  %769 = load i16, i16* %blendtype1184, align 2, !dbg !6557
  %conv1185 = sext i16 %769 to i32, !dbg !6556
  %call1186 = call float @texture_value_blend(float %763, float %765, float %766, float %767, i32 %conv1185), !dbg !6558
  %770 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6559
  %translucency1187 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %770, i32 0, i32 54, !dbg !6560
  store float %call1186, float* %translucency1187, align 4, !dbg !6561
  %771 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6562
  %translucency1188 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %771, i32 0, i32 54, !dbg !6564
  %772 = load float, float* %translucency1188, align 4, !dbg !6564
  %cmp1189 = fcmp olt float %772, 0.000000e+00, !dbg !6565
  br i1 %cmp1189, label %if.then1191, label %if.else1193, !dbg !6566

if.then1191:                                      ; preds = %if.then1179
  %773 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6567
  %translucency1192 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %773, i32 0, i32 54, !dbg !6568
  store float 0.000000e+00, float* %translucency1192, align 4, !dbg !6569
  br label %if.end1200, !dbg !6567

if.else1193:                                      ; preds = %if.then1179
  %774 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6570
  %translucency1194 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %774, i32 0, i32 54, !dbg !6572
  %775 = load float, float* %translucency1194, align 4, !dbg !6572
  %cmp1195 = fcmp ogt float %775, 1.000000e+00, !dbg !6573
  br i1 %cmp1195, label %if.then1197, label %if.end1199, !dbg !6574

if.then1197:                                      ; preds = %if.else1193
  %776 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6575
  %translucency1198 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %776, i32 0, i32 54, !dbg !6576
  store float 1.000000e+00, float* %translucency1198, align 4, !dbg !6577
  br label %if.end1199, !dbg !6575

if.end1199:                                       ; preds = %if.then1197, %if.else1193
  br label %if.end1200

if.end1200:                                       ; preds = %if.end1199, %if.then1191
  br label %if.end1201, !dbg !6578

if.end1201:                                       ; preds = %if.end1200, %if.end1174
  %777 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6579
  %mapto1202 = getelementptr inbounds %struct.MTex, %struct.MTex* %777, i32 0, i32 1, !dbg !6581
  %778 = load i16, i16* %mapto1202, align 2, !dbg !6581
  %conv1203 = sext i16 %778 to i32, !dbg !6579
  %and1204 = and i32 %conv1203, 2048, !dbg !6582
  %tobool1205 = icmp ne i32 %and1204, 0, !dbg !6582
  br i1 %tobool1205, label %if.then1206, label %if.end1239, !dbg !6583

if.then1206:                                      ; preds = %if.end1201
  call void @llvm.dbg.declare(metadata float* %ambfac, metadata !6584, metadata !DIExpression()), !dbg !6586
  %779 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6587
  %ambfac1207 = getelementptr inbounds %struct.MTex, %struct.MTex* %779, i32 0, i32 42, !dbg !6588
  %780 = load float, float* %ambfac1207, align 4, !dbg !6588
  %781 = load float, float* %stencilTin, align 4, !dbg !6589
  %mul1208 = fmul float %780, %781, !dbg !6590
  store float %mul1208, float* %ambfac, align 4, !dbg !6586
  %782 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6591
  %def_var1209 = getelementptr inbounds %struct.MTex, %struct.MTex* %782, i32 0, i32 26, !dbg !6592
  %783 = load float, float* %def_var1209, align 4, !dbg !6592
  %784 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6593
  %amb = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %784, i32 0, i32 44, !dbg !6594
  %785 = load float, float* %amb, align 4, !dbg !6594
  %tin1210 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !6595
  %786 = load float, float* %tin1210, align 8, !dbg !6595
  %787 = load float, float* %ambfac, align 4, !dbg !6596
  %788 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6597
  %blendtype1211 = getelementptr inbounds %struct.MTex, %struct.MTex* %788, i32 0, i32 3, !dbg !6598
  %789 = load i16, i16* %blendtype1211, align 2, !dbg !6598
  %conv1212 = sext i16 %789 to i32, !dbg !6597
  %call1213 = call float @texture_value_blend(float %783, float %785, float %786, float %787, i32 %conv1212), !dbg !6599
  %790 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6600
  %amb1214 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %790, i32 0, i32 44, !dbg !6601
  store float %call1213, float* %amb1214, align 4, !dbg !6602
  %791 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6603
  %amb1215 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %791, i32 0, i32 44, !dbg !6605
  %792 = load float, float* %amb1215, align 4, !dbg !6605
  %cmp1216 = fcmp olt float %792, 0.000000e+00, !dbg !6606
  br i1 %cmp1216, label %if.then1218, label %if.else1220, !dbg !6607

if.then1218:                                      ; preds = %if.then1206
  %793 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6608
  %amb1219 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %793, i32 0, i32 44, !dbg !6609
  store float 0.000000e+00, float* %amb1219, align 4, !dbg !6610
  br label %if.end1227, !dbg !6608

if.else1220:                                      ; preds = %if.then1206
  %794 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6611
  %amb1221 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %794, i32 0, i32 44, !dbg !6613
  %795 = load float, float* %amb1221, align 4, !dbg !6613
  %cmp1222 = fcmp ogt float %795, 1.000000e+00, !dbg !6614
  br i1 %cmp1222, label %if.then1224, label %if.end1226, !dbg !6615

if.then1224:                                      ; preds = %if.else1220
  %796 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6616
  %amb1225 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %796, i32 0, i32 44, !dbg !6617
  store float 1.000000e+00, float* %amb1225, align 4, !dbg !6618
  br label %if.end1226, !dbg !6616

if.end1226:                                       ; preds = %if.then1224, %if.else1220
  br label %if.end1227

if.end1227:                                       ; preds = %if.end1226, %if.then1218
  %797 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6619
  %amb1228 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %797, i32 0, i32 44, !dbg !6620
  %798 = load float, float* %amb1228, align 4, !dbg !6620
  %799 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6621
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %799, i32 0, i32 46, !dbg !6622
  %ambr = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 12, !dbg !6623
  %800 = load float, float* %ambr, align 8, !dbg !6623
  %mul1229 = fmul float %798, %800, !dbg !6624
  %801 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6625
  %ambr1230 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %801, i32 0, i32 41, !dbg !6626
  store float %mul1229, float* %ambr1230, align 8, !dbg !6627
  %802 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6628
  %amb1231 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %802, i32 0, i32 44, !dbg !6629
  %803 = load float, float* %amb1231, align 4, !dbg !6629
  %804 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6630
  %wrld1232 = getelementptr inbounds %struct.Render, %struct.Render* %804, i32 0, i32 46, !dbg !6631
  %ambg = getelementptr inbounds %struct.World, %struct.World* %wrld1232, i32 0, i32 13, !dbg !6632
  %805 = load float, float* %ambg, align 4, !dbg !6632
  %mul1233 = fmul float %803, %805, !dbg !6633
  %806 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6634
  %ambg1234 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %806, i32 0, i32 43, !dbg !6635
  store float %mul1233, float* %ambg1234, align 8, !dbg !6636
  %807 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6637
  %amb1235 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %807, i32 0, i32 44, !dbg !6638
  %808 = load float, float* %amb1235, align 4, !dbg !6638
  %809 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6639
  %wrld1236 = getelementptr inbounds %struct.Render, %struct.Render* %809, i32 0, i32 46, !dbg !6640
  %ambb = getelementptr inbounds %struct.World, %struct.World* %wrld1236, i32 0, i32 14, !dbg !6641
  %810 = load float, float* %ambb, align 8, !dbg !6641
  %mul1237 = fmul float %808, %810, !dbg !6642
  %811 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6643
  %ambb1238 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %811, i32 0, i32 42, !dbg !6644
  store float %mul1237, float* %ambb1238, align 4, !dbg !6645
  br label %if.end1239, !dbg !6646

if.end1239:                                       ; preds = %if.end1227, %if.end1201
  br label %if.end1240, !dbg !6647

if.end1240:                                       ; preds = %if.end1239, %if.end1013
  br label %if.end1241, !dbg !6648

if.end1241:                                       ; preds = %if.end1240, %if.end4
  br label %for.inc1242, !dbg !6649

for.inc1242:                                      ; preds = %if.end1241, %if.else264, %if.then15, %if.then3
  %812 = load i32, i32* %tex_nr, align 4, !dbg !6650
  %inc1243 = add nsw i32 %812, 1, !dbg !6650
  store i32 %inc1243, i32* %tex_nr, align 4, !dbg !6650
  br label %for.cond, !dbg !6651, !llvm.loop !6652

for.end1244:                                      ; preds = %for.cond
  %813 = load i8, i8* %use_compat_bump, align 1, !dbg !6654
  %conv1245 = zext i8 %813 to i32, !dbg !6654
  %tobool1246 = icmp ne i32 %conv1245, 0, !dbg !6654
  br i1 %tobool1246, label %land.lhs.true1253, label %lor.lhs.false1247, !dbg !6656

lor.lhs.false1247:                                ; preds = %for.end1244
  %814 = load i8, i8* %use_ntap_bump, align 1, !dbg !6657
  %conv1248 = zext i8 %814 to i32, !dbg !6657
  %tobool1249 = icmp ne i32 %conv1248, 0, !dbg !6657
  br i1 %tobool1249, label %land.lhs.true1253, label %lor.lhs.false1250, !dbg !6658

lor.lhs.false1250:                                ; preds = %lor.lhs.false1247
  %815 = load i8, i8* %found_nmapping, align 1, !dbg !6659
  %conv1251 = zext i8 %815 to i32, !dbg !6659
  %tobool1252 = icmp ne i32 %conv1251, 0, !dbg !6659
  br i1 %tobool1252, label %land.lhs.true1253, label %if.end1273, !dbg !6660

land.lhs.true1253:                                ; preds = %lor.lhs.false1250, %lor.lhs.false1247, %for.end1244
  %816 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6661
  %mat1254 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %816, i32 0, i32 0, !dbg !6662
  %817 = load %struct.Material*, %struct.Material** %mat1254, align 8, !dbg !6662
  %mode1255 = getelementptr inbounds %struct.Material, %struct.Material* %817, i32 0, i32 51, !dbg !6663
  %818 = load i32, i32* %mode1255, align 4, !dbg !6663
  %and1256 = and i32 %818, 67108864, !dbg !6664
  %cmp1257 = icmp ne i32 %and1256, 0, !dbg !6665
  br i1 %cmp1257, label %if.then1259, label %if.end1273, !dbg !6666

if.then1259:                                      ; preds = %land.lhs.true1253
  call void @llvm.dbg.declare(metadata float* %fnegdot, metadata !6667, metadata !DIExpression()), !dbg !6669
  %819 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6670
  %vn1260 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %819, i32 0, i32 16, !dbg !6671
  %arraydecay1261 = getelementptr inbounds [3 x float], [3 x float]* %vn1260, i64 0, i64 0, !dbg !6670
  %820 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6672
  %tang1262 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %820, i32 0, i32 65, !dbg !6673
  %arraydecay1263 = getelementptr inbounds [3 x float], [3 x float]* %tang1262, i64 0, i64 0, !dbg !6672
  %call1264 = call float @dot_v3v3(float* %arraydecay1261, float* %arraydecay1263), !dbg !6674
  %fneg1265 = fneg float %call1264, !dbg !6675
  store float %fneg1265, float* %fnegdot, align 4, !dbg !6669
  %821 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6676
  %tang1266 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %821, i32 0, i32 65, !dbg !6677
  %arraydecay1267 = getelementptr inbounds [3 x float], [3 x float]* %tang1266, i64 0, i64 0, !dbg !6676
  %822 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6678
  %vn1268 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %822, i32 0, i32 16, !dbg !6679
  %arraydecay1269 = getelementptr inbounds [3 x float], [3 x float]* %vn1268, i64 0, i64 0, !dbg !6678
  %823 = load float, float* %fnegdot, align 4, !dbg !6680
  call void @madd_v3_v3fl(float* %arraydecay1267, float* %arraydecay1269, float %823), !dbg !6681
  %824 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6682
  %tang1270 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %824, i32 0, i32 65, !dbg !6683
  %arraydecay1271 = getelementptr inbounds [3 x float], [3 x float]* %tang1270, i64 0, i64 0, !dbg !6682
  %call1272 = call float @normalize_v3(float* %arraydecay1271), !dbg !6684
  br label %if.end1273, !dbg !6685

if.end1273:                                       ; preds = %if.then, %if.then1259, %land.lhs.true1253, %lor.lhs.false1250
  ret void, !dbg !6686
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @compatible_bump_init(%struct.CompatibleBump* %compat_bump) #0 !dbg !6687 {
entry:
  %compat_bump.addr = alloca %struct.CompatibleBump*, align 8
  store %struct.CompatibleBump* %compat_bump, %struct.CompatibleBump** %compat_bump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CompatibleBump** %compat_bump.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  %0 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6693
  %1 = bitcast %struct.CompatibleBump* %0 to i8*, !dbg !6694
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 56, i1 false), !dbg !6694
  %2 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6695
  %dudnu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %2, i32 0, i32 3, !dbg !6696
  store float 1.000000e+00, float* %dudnu, align 4, !dbg !6697
  %3 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6698
  %dvdnv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %3, i32 0, i32 6, !dbg !6699
  store float 1.000000e+00, float* %dvdnv, align 4, !dbg !6700
  ret void, !dbg !6701
}

; Function Attrs: noinline nounwind uwtable
define internal void @ntap_bump_init(%struct.NTapBump* %ntap_bump) #0 !dbg !6702 {
entry:
  %ntap_bump.addr = alloca %struct.NTapBump*, align 8
  store %struct.NTapBump* %ntap_bump, %struct.NTapBump** %ntap_bump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NTapBump** %ntap_bump.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  %0 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !6708
  %1 = bitcast %struct.NTapBump* %0 to i8*, !dbg !6709
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 64, i1 false), !dbg !6709
  ret void, !dbg !6710
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #1

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #1

declare dso_local void @calc_R_ref(%struct.ShadeInput*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @compatible_bump_uv_derivs(%struct.CompatibleBump* %compat_bump, %struct.ShadeInput* %shi, %struct.MTex* %mtex, i32 %i) #0 !dbg !6711 {
entry:
  %compat_bump.addr = alloca %struct.CompatibleBump*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %i.addr = alloca i32, align 4
  %tf = alloca %struct.MTFace*, align 8
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %j3 = alloca i32, align 4
  %uv1 = alloca float*, align 8
  %uv2 = alloca float*, align 8
  %uv3 = alloca float*, align 8
  %an = alloca [3 x float], align 4
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %dp1_a1 = alloca float, align 4
  %dp1_a2 = alloca float, align 4
  %dp2_a1 = alloca float, align 4
  %dp2_a2 = alloca float, align 4
  %du1 = alloca float, align 4
  %du2 = alloca float, align 4
  %dv1 = alloca float, align 4
  %dv2 = alloca float, align 4
  %dpdu_a1 = alloca float, align 4
  %dpdu_a2 = alloca float, align 4
  %dpdv_a1 = alloca float, align 4
  %dpdv_a2 = alloca float, align 4
  %d = alloca float, align 4
  %uvd = alloca float, align 4
  store %struct.CompatibleBump* %compat_bump, %struct.CompatibleBump** %compat_bump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CompatibleBump** %compat_bump.addr, metadata !6714, metadata !DIExpression()), !dbg !6715
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6722
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %0, i32 0, i32 14, !dbg !6724
  %1 = load i16, i16* %texflag, align 8, !dbg !6724
  %conv = sext i16 %1 to i32, !dbg !6722
  %and = and i32 %conv, 128, !dbg !6725
  %tobool = icmp ne i32 %and, 0, !dbg !6725
  br i1 %tobool, label %land.lhs.true, label %if.end190, !dbg !6726

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6727
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %2, i32 0, i32 4, !dbg !6728
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6728
  %tobool1 = icmp ne %struct.ObjectRen* %3, null, !dbg !6727
  br i1 %tobool1, label %land.lhs.true2, label %if.end190, !dbg !6729

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6730
  %obr3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 4, !dbg !6731
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr3, align 8, !dbg !6731
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 2, !dbg !6732
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6732
  %tobool4 = icmp ne %struct.Object* %6, null, !dbg !6730
  br i1 %tobool4, label %land.lhs.true5, label %if.end190, !dbg !6733

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6734
  %v1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 8, !dbg !6735
  %8 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !6735
  %tobool6 = icmp ne %struct.VertRen* %8, null, !dbg !6734
  br i1 %tobool6, label %if.then, label %if.end190, !dbg !6736

if.then:                                          ; preds = %land.lhs.true5
  %9 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6737
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %9, i32 0, i32 1, !dbg !6740
  %10 = load i16, i16* %mapto, align 2, !dbg !6740
  %conv7 = sext i16 %10 to i32, !dbg !6737
  %and8 = and i32 %conv7, 8194, !dbg !6741
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6741
  br i1 %tobool9, label %land.lhs.true10, label %if.end189, !dbg !6742

land.lhs.true10:                                  ; preds = %if.then
  %11 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6743
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %11, i32 0, i32 5, !dbg !6744
  %12 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !6744
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 32, !dbg !6745
  %13 = load i16, i16* %type, align 8, !dbg !6745
  %conv11 = sext i16 %13 to i32, !dbg !6743
  %cmp = icmp eq i32 %conv11, 8, !dbg !6746
  br i1 %cmp, label %land.lhs.true13, label %if.then18, !dbg !6747

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %14 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6748
  %tex14 = getelementptr inbounds %struct.MTex, %struct.MTex* %14, i32 0, i32 5, !dbg !6749
  %15 = load %struct.Tex*, %struct.Tex** %tex14, align 8, !dbg !6749
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 30, !dbg !6750
  %16 = load i16, i16* %imaflag, align 4, !dbg !6750
  %conv15 = sext i16 %16 to i32, !dbg !6748
  %and16 = and i32 %conv15, 2048, !dbg !6751
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6751
  br i1 %tobool17, label %if.end189, label %if.then18, !dbg !6752

if.then18:                                        ; preds = %land.lhs.true13, %land.lhs.true10
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !6753, metadata !DIExpression()), !dbg !6755
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6756
  %obr19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 4, !dbg !6757
  %18 = load %struct.ObjectRen*, %struct.ObjectRen** %obr19, align 8, !dbg !6757
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6758
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 1, !dbg !6759
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6759
  %21 = load i32, i32* %i.addr, align 4, !dbg !6760
  %call = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %18, %struct.VlakRen* %20, i32 %21, i8** null, i32 0), !dbg !6761
  store %struct.MTFace* %call, %struct.MTFace** %tf, align 8, !dbg !6755
  call void @llvm.dbg.declare(metadata i32* %j1, metadata !6762, metadata !DIExpression()), !dbg !6763
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6764
  %i1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 11, !dbg !6765
  %23 = load i16, i16* %i1, align 8, !dbg !6765
  %conv20 = sext i16 %23 to i32, !dbg !6764
  store i32 %conv20, i32* %j1, align 4, !dbg !6763
  call void @llvm.dbg.declare(metadata i32* %j2, metadata !6766, metadata !DIExpression()), !dbg !6767
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6768
  %i2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 12, !dbg !6769
  %25 = load i16, i16* %i2, align 2, !dbg !6769
  %conv21 = sext i16 %25 to i32, !dbg !6768
  store i32 %conv21, i32* %j2, align 4, !dbg !6767
  call void @llvm.dbg.declare(metadata i32* %j3, metadata !6770, metadata !DIExpression()), !dbg !6771
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6772
  %i3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 13, !dbg !6773
  %27 = load i16, i16* %i3, align 4, !dbg !6773
  %conv22 = sext i16 %27 to i32, !dbg !6772
  store i32 %conv22, i32* %j3, align 4, !dbg !6771
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6774
  %vlr23 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 1, !dbg !6775
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr23, align 8, !dbg !6775
  call void @vlr_set_uv_indices(%struct.VlakRen* %29, i32* %j1, i32* %j2, i32* %j3), !dbg !6776
  %30 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6777
  %nunvdone = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %30, i32 0, i32 7, !dbg !6779
  %31 = load i8, i8* %nunvdone, align 4, !dbg !6779
  %tobool24 = icmp ne i8 %31, 0, !dbg !6777
  br i1 %tobool24, label %if.end, label %if.then25, !dbg !6780

if.then25:                                        ; preds = %if.then18
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6781
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 16, !dbg !6783
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !6781
  %33 = load float, float* %arrayidx, align 4, !dbg !6781
  %fneg = fneg float %33, !dbg !6784
  %34 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6785
  %nn = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %34, i32 0, i32 2, !dbg !6786
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %nn, i64 0, i64 0, !dbg !6785
  store float %fneg, float* %arrayidx26, align 4, !dbg !6787
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6788
  %vn27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 16, !dbg !6789
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %vn27, i64 0, i64 1, !dbg !6788
  %36 = load float, float* %arrayidx28, align 4, !dbg !6788
  %fneg29 = fneg float %36, !dbg !6790
  %37 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6791
  %nn30 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %37, i32 0, i32 2, !dbg !6792
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %nn30, i64 0, i64 1, !dbg !6791
  store float %fneg29, float* %arrayidx31, align 4, !dbg !6793
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6794
  %vn32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 16, !dbg !6795
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %vn32, i64 0, i64 2, !dbg !6794
  %39 = load float, float* %arrayidx33, align 4, !dbg !6794
  %fneg34 = fneg float %39, !dbg !6796
  %40 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6797
  %nn35 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %40, i32 0, i32 2, !dbg !6798
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %nn35, i64 0, i64 2, !dbg !6797
  store float %fneg34, float* %arrayidx36, align 4, !dbg !6799
  %41 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6800
  %nu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %41, i32 0, i32 0, !dbg !6801
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nu, i64 0, i64 0, !dbg !6800
  %42 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6802
  %nv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %42, i32 0, i32 1, !dbg !6803
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %nv, i64 0, i64 0, !dbg !6802
  %43 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6804
  %nn38 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %43, i32 0, i32 2, !dbg !6805
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %nn38, i64 0, i64 0, !dbg !6804
  call void @ortho_basis_v3v3_v3(float* %arraydecay, float* %arraydecay37, float* %arraydecay39), !dbg !6806
  %44 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6807
  %nunvdone40 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %44, i32 0, i32 7, !dbg !6808
  store i8 1, i8* %nunvdone40, align 4, !dbg !6809
  br label %if.end, !dbg !6810

if.end:                                           ; preds = %if.then25, %if.then18
  %45 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6811
  %tobool41 = icmp ne %struct.MTFace* %45, null, !dbg !6811
  br i1 %tobool41, label %if.then42, label %if.end188, !dbg !6813

if.then42:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float** %uv1, metadata !6814, metadata !DIExpression()), !dbg !6816
  %46 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6817
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %46, i32 0, i32 0, !dbg !6818
  %47 = load i32, i32* %j1, align 4, !dbg !6819
  %idxprom = sext i32 %47 to i64, !dbg !6817
  %arrayidx43 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom, !dbg !6817
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx43, i64 0, i64 0, !dbg !6817
  store float* %arraydecay44, float** %uv1, align 8, !dbg !6816
  call void @llvm.dbg.declare(metadata float** %uv2, metadata !6820, metadata !DIExpression()), !dbg !6821
  %48 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6822
  %uv45 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %48, i32 0, i32 0, !dbg !6823
  %49 = load i32, i32* %j2, align 4, !dbg !6824
  %idxprom46 = sext i32 %49 to i64, !dbg !6822
  %arrayidx47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv45, i64 0, i64 %idxprom46, !dbg !6822
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 0, !dbg !6822
  store float* %arraydecay48, float** %uv2, align 8, !dbg !6821
  call void @llvm.dbg.declare(metadata float** %uv3, metadata !6825, metadata !DIExpression()), !dbg !6826
  %50 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !6827
  %uv49 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %50, i32 0, i32 0, !dbg !6828
  %51 = load i32, i32* %j3, align 4, !dbg !6829
  %idxprom50 = sext i32 %51 to i64, !dbg !6827
  %arrayidx51 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv49, i64 0, i64 %idxprom50, !dbg !6827
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !6827
  store float* %arraydecay52, float** %uv3, align 8, !dbg !6826
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !6830, metadata !DIExpression()), !dbg !6832
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !6833
  %52 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6834
  %nn53 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %52, i32 0, i32 2, !dbg !6835
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %nn53, i64 0, i64 0, !dbg !6834
  %53 = load float, float* %arrayidx54, align 4, !dbg !6834
  %54 = call float @llvm.fabs.f32(float %53), !dbg !6836
  store float %54, float* %arrayinit.begin, align 4, !dbg !6833
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6833
  %55 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6837
  %nn55 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %55, i32 0, i32 2, !dbg !6838
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %nn55, i64 0, i64 1, !dbg !6837
  %56 = load float, float* %arrayidx56, align 4, !dbg !6837
  %57 = call float @llvm.fabs.f32(float %56), !dbg !6839
  store float %57, float* %arrayinit.element, align 4, !dbg !6833
  %arrayinit.element57 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !6833
  %58 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !6840
  %nn58 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %58, i32 0, i32 2, !dbg !6841
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %nn58, i64 0, i64 2, !dbg !6840
  %59 = load float, float* %arrayidx59, align 4, !dbg !6840
  %60 = call float @llvm.fabs.f32(float %59), !dbg !6842
  store float %60, float* %arrayinit.element57, align 4, !dbg !6833
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !6843, metadata !DIExpression()), !dbg !6845
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !6846
  %61 = load float, float* %arrayidx60, align 4, !dbg !6846
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 1, !dbg !6847
  %62 = load float, float* %arrayidx61, align 4, !dbg !6847
  %cmp62 = fcmp ogt float %61, %62, !dbg !6848
  br i1 %cmp62, label %land.rhs, label %land.end, !dbg !6849

land.rhs:                                         ; preds = %if.then42
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !6850
  %63 = load float, float* %arrayidx64, align 4, !dbg !6850
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 2, !dbg !6851
  %64 = load float, float* %arrayidx65, align 4, !dbg !6851
  %cmp66 = fcmp ogt float %63, %64, !dbg !6852
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then42
  %65 = phi i1 [ false, %if.then42 ], [ %cmp66, %land.rhs ], !dbg !6853
  %66 = zext i1 %65 to i64, !dbg !6854
  %cond = select i1 %65, i32 1, i32 0, !dbg !6854
  store i32 %cond, i32* %a1, align 4, !dbg !6845
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !6855, metadata !DIExpression()), !dbg !6856
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 2, !dbg !6857
  %67 = load float, float* %arrayidx68, align 4, !dbg !6857
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !6858
  %68 = load float, float* %arrayidx69, align 4, !dbg !6858
  %cmp70 = fcmp ogt float %67, %68, !dbg !6859
  br i1 %cmp70, label %land.rhs72, label %land.end77, !dbg !6860

land.rhs72:                                       ; preds = %land.end
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 2, !dbg !6861
  %69 = load float, float* %arrayidx73, align 4, !dbg !6861
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 1, !dbg !6862
  %70 = load float, float* %arrayidx74, align 4, !dbg !6862
  %cmp75 = fcmp ogt float %69, %70, !dbg !6863
  br label %land.end77

land.end77:                                       ; preds = %land.rhs72, %land.end
  %71 = phi i1 [ false, %land.end ], [ %cmp75, %land.rhs72 ], !dbg !6853
  %72 = zext i1 %71 to i64, !dbg !6864
  %cond78 = select i1 %71, i32 1, i32 2, !dbg !6864
  store i32 %cond78, i32* %a2, align 4, !dbg !6856
  call void @llvm.dbg.declare(metadata float* %dp1_a1, metadata !6865, metadata !DIExpression()), !dbg !6866
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6867
  %v179 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 8, !dbg !6868
  %74 = load %struct.VertRen*, %struct.VertRen** %v179, align 8, !dbg !6868
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %74, i32 0, i32 0, !dbg !6869
  %75 = load i32, i32* %a1, align 4, !dbg !6870
  %idxprom80 = sext i32 %75 to i64, !dbg !6867
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom80, !dbg !6867
  %76 = load float, float* %arrayidx81, align 4, !dbg !6867
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6871
  %v3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 10, !dbg !6872
  %78 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !6872
  %co82 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %78, i32 0, i32 0, !dbg !6873
  %79 = load i32, i32* %a1, align 4, !dbg !6874
  %idxprom83 = sext i32 %79 to i64, !dbg !6871
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %co82, i64 0, i64 %idxprom83, !dbg !6871
  %80 = load float, float* %arrayidx84, align 4, !dbg !6871
  %sub = fsub float %76, %80, !dbg !6875
  store float %sub, float* %dp1_a1, align 4, !dbg !6866
  call void @llvm.dbg.declare(metadata float* %dp1_a2, metadata !6876, metadata !DIExpression()), !dbg !6877
  %81 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6878
  %v185 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %81, i32 0, i32 8, !dbg !6879
  %82 = load %struct.VertRen*, %struct.VertRen** %v185, align 8, !dbg !6879
  %co86 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %82, i32 0, i32 0, !dbg !6880
  %83 = load i32, i32* %a2, align 4, !dbg !6881
  %idxprom87 = sext i32 %83 to i64, !dbg !6878
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %co86, i64 0, i64 %idxprom87, !dbg !6878
  %84 = load float, float* %arrayidx88, align 4, !dbg !6878
  %85 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6882
  %v389 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %85, i32 0, i32 10, !dbg !6883
  %86 = load %struct.VertRen*, %struct.VertRen** %v389, align 8, !dbg !6883
  %co90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %86, i32 0, i32 0, !dbg !6884
  %87 = load i32, i32* %a2, align 4, !dbg !6885
  %idxprom91 = sext i32 %87 to i64, !dbg !6882
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %co90, i64 0, i64 %idxprom91, !dbg !6882
  %88 = load float, float* %arrayidx92, align 4, !dbg !6882
  %sub93 = fsub float %84, %88, !dbg !6886
  store float %sub93, float* %dp1_a2, align 4, !dbg !6877
  call void @llvm.dbg.declare(metadata float* %dp2_a1, metadata !6887, metadata !DIExpression()), !dbg !6888
  %89 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6889
  %v2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %89, i32 0, i32 9, !dbg !6890
  %90 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !6890
  %co94 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %90, i32 0, i32 0, !dbg !6891
  %91 = load i32, i32* %a1, align 4, !dbg !6892
  %idxprom95 = sext i32 %91 to i64, !dbg !6889
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %co94, i64 0, i64 %idxprom95, !dbg !6889
  %92 = load float, float* %arrayidx96, align 4, !dbg !6889
  %93 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6893
  %v397 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %93, i32 0, i32 10, !dbg !6894
  %94 = load %struct.VertRen*, %struct.VertRen** %v397, align 8, !dbg !6894
  %co98 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %94, i32 0, i32 0, !dbg !6895
  %95 = load i32, i32* %a1, align 4, !dbg !6896
  %idxprom99 = sext i32 %95 to i64, !dbg !6893
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 %idxprom99, !dbg !6893
  %96 = load float, float* %arrayidx100, align 4, !dbg !6893
  %sub101 = fsub float %92, %96, !dbg !6897
  store float %sub101, float* %dp2_a1, align 4, !dbg !6888
  call void @llvm.dbg.declare(metadata float* %dp2_a2, metadata !6898, metadata !DIExpression()), !dbg !6899
  %97 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6900
  %v2102 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %97, i32 0, i32 9, !dbg !6901
  %98 = load %struct.VertRen*, %struct.VertRen** %v2102, align 8, !dbg !6901
  %co103 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %98, i32 0, i32 0, !dbg !6902
  %99 = load i32, i32* %a2, align 4, !dbg !6903
  %idxprom104 = sext i32 %99 to i64, !dbg !6900
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %co103, i64 0, i64 %idxprom104, !dbg !6900
  %100 = load float, float* %arrayidx105, align 4, !dbg !6900
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6904
  %v3106 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 10, !dbg !6905
  %102 = load %struct.VertRen*, %struct.VertRen** %v3106, align 8, !dbg !6905
  %co107 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %102, i32 0, i32 0, !dbg !6906
  %103 = load i32, i32* %a2, align 4, !dbg !6907
  %idxprom108 = sext i32 %103 to i64, !dbg !6904
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %co107, i64 0, i64 %idxprom108, !dbg !6904
  %104 = load float, float* %arrayidx109, align 4, !dbg !6904
  %sub110 = fsub float %100, %104, !dbg !6908
  store float %sub110, float* %dp2_a2, align 4, !dbg !6899
  call void @llvm.dbg.declare(metadata float* %du1, metadata !6909, metadata !DIExpression()), !dbg !6910
  %105 = load float*, float** %uv1, align 8, !dbg !6911
  %arrayidx111 = getelementptr inbounds float, float* %105, i64 0, !dbg !6911
  %106 = load float, float* %arrayidx111, align 4, !dbg !6911
  %107 = load float*, float** %uv3, align 8, !dbg !6912
  %arrayidx112 = getelementptr inbounds float, float* %107, i64 0, !dbg !6912
  %108 = load float, float* %arrayidx112, align 4, !dbg !6912
  %sub113 = fsub float %106, %108, !dbg !6913
  store float %sub113, float* %du1, align 4, !dbg !6910
  call void @llvm.dbg.declare(metadata float* %du2, metadata !6914, metadata !DIExpression()), !dbg !6915
  %109 = load float*, float** %uv2, align 8, !dbg !6916
  %arrayidx114 = getelementptr inbounds float, float* %109, i64 0, !dbg !6916
  %110 = load float, float* %arrayidx114, align 4, !dbg !6916
  %111 = load float*, float** %uv3, align 8, !dbg !6917
  %arrayidx115 = getelementptr inbounds float, float* %111, i64 0, !dbg !6917
  %112 = load float, float* %arrayidx115, align 4, !dbg !6917
  %sub116 = fsub float %110, %112, !dbg !6918
  store float %sub116, float* %du2, align 4, !dbg !6915
  call void @llvm.dbg.declare(metadata float* %dv1, metadata !6919, metadata !DIExpression()), !dbg !6920
  %113 = load float*, float** %uv1, align 8, !dbg !6921
  %arrayidx117 = getelementptr inbounds float, float* %113, i64 1, !dbg !6921
  %114 = load float, float* %arrayidx117, align 4, !dbg !6921
  %115 = load float*, float** %uv3, align 8, !dbg !6922
  %arrayidx118 = getelementptr inbounds float, float* %115, i64 1, !dbg !6922
  %116 = load float, float* %arrayidx118, align 4, !dbg !6922
  %sub119 = fsub float %114, %116, !dbg !6923
  store float %sub119, float* %dv1, align 4, !dbg !6920
  call void @llvm.dbg.declare(metadata float* %dv2, metadata !6924, metadata !DIExpression()), !dbg !6925
  %117 = load float*, float** %uv2, align 8, !dbg !6926
  %arrayidx120 = getelementptr inbounds float, float* %117, i64 1, !dbg !6926
  %118 = load float, float* %arrayidx120, align 4, !dbg !6926
  %119 = load float*, float** %uv3, align 8, !dbg !6927
  %arrayidx121 = getelementptr inbounds float, float* %119, i64 1, !dbg !6927
  %120 = load float, float* %arrayidx121, align 4, !dbg !6927
  %sub122 = fsub float %118, %120, !dbg !6928
  store float %sub122, float* %dv2, align 4, !dbg !6925
  call void @llvm.dbg.declare(metadata float* %dpdu_a1, metadata !6929, metadata !DIExpression()), !dbg !6930
  %121 = load float, float* %dv2, align 4, !dbg !6931
  %122 = load float, float* %dp1_a1, align 4, !dbg !6932
  %mul = fmul float %121, %122, !dbg !6933
  %123 = load float, float* %dv1, align 4, !dbg !6934
  %124 = load float, float* %dp2_a1, align 4, !dbg !6935
  %mul123 = fmul float %123, %124, !dbg !6936
  %sub124 = fsub float %mul, %mul123, !dbg !6937
  store float %sub124, float* %dpdu_a1, align 4, !dbg !6930
  call void @llvm.dbg.declare(metadata float* %dpdu_a2, metadata !6938, metadata !DIExpression()), !dbg !6939
  %125 = load float, float* %dv2, align 4, !dbg !6940
  %126 = load float, float* %dp1_a2, align 4, !dbg !6941
  %mul125 = fmul float %125, %126, !dbg !6942
  %127 = load float, float* %dv1, align 4, !dbg !6943
  %128 = load float, float* %dp2_a2, align 4, !dbg !6944
  %mul126 = fmul float %127, %128, !dbg !6945
  %sub127 = fsub float %mul125, %mul126, !dbg !6946
  store float %sub127, float* %dpdu_a2, align 4, !dbg !6939
  call void @llvm.dbg.declare(metadata float* %dpdv_a1, metadata !6947, metadata !DIExpression()), !dbg !6948
  %129 = load float, float* %du1, align 4, !dbg !6949
  %130 = load float, float* %dp2_a1, align 4, !dbg !6950
  %mul128 = fmul float %129, %130, !dbg !6951
  %131 = load float, float* %du2, align 4, !dbg !6952
  %132 = load float, float* %dp1_a1, align 4, !dbg !6953
  %mul129 = fmul float %131, %132, !dbg !6954
  %sub130 = fsub float %mul128, %mul129, !dbg !6955
  store float %sub130, float* %dpdv_a1, align 4, !dbg !6948
  call void @llvm.dbg.declare(metadata float* %dpdv_a2, metadata !6956, metadata !DIExpression()), !dbg !6957
  %133 = load float, float* %du1, align 4, !dbg !6958
  %134 = load float, float* %dp2_a2, align 4, !dbg !6959
  %mul131 = fmul float %133, %134, !dbg !6960
  %135 = load float, float* %du2, align 4, !dbg !6961
  %136 = load float, float* %dp1_a2, align 4, !dbg !6962
  %mul132 = fmul float %135, %136, !dbg !6963
  %sub133 = fsub float %mul131, %mul132, !dbg !6964
  store float %sub133, float* %dpdv_a2, align 4, !dbg !6957
  call void @llvm.dbg.declare(metadata float* %d, metadata !6965, metadata !DIExpression()), !dbg !6966
  %137 = load float, float* %dpdu_a1, align 4, !dbg !6967
  %138 = load float, float* %dpdv_a2, align 4, !dbg !6968
  %mul134 = fmul float %137, %138, !dbg !6969
  %139 = load float, float* %dpdv_a1, align 4, !dbg !6970
  %140 = load float, float* %dpdu_a2, align 4, !dbg !6971
  %mul135 = fmul float %139, %140, !dbg !6972
  %sub136 = fsub float %mul134, %mul135, !dbg !6973
  store float %sub136, float* %d, align 4, !dbg !6966
  call void @llvm.dbg.declare(metadata float* %uvd, metadata !6974, metadata !DIExpression()), !dbg !6975
  %141 = load float, float* %du1, align 4, !dbg !6976
  %142 = load float, float* %dv2, align 4, !dbg !6977
  %mul137 = fmul float %141, %142, !dbg !6978
  %143 = load float, float* %dv1, align 4, !dbg !6979
  %144 = load float, float* %du2, align 4, !dbg !6980
  %mul138 = fmul float %143, %144, !dbg !6981
  %sub139 = fsub float %mul137, %mul138, !dbg !6982
  store float %sub139, float* %uvd, align 4, !dbg !6975
  %145 = load float, float* %uvd, align 4, !dbg !6983
  %cmp140 = fcmp oeq float %145, 0.000000e+00, !dbg !6985
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !6986

if.then142:                                       ; preds = %land.end77
  store float 0x3EE4F8B580000000, float* %uvd, align 4, !dbg !6987
  br label %if.end143, !dbg !6988

if.end143:                                        ; preds = %if.then142, %land.end77
  %146 = load float, float* %d, align 4, !dbg !6989
  %cmp144 = fcmp oeq float %146, 0.000000e+00, !dbg !6991
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !6992

if.then146:                                       ; preds = %if.end143
  store float 0x3EE4F8B580000000, float* %d, align 4, !dbg !6993
  br label %if.end147, !dbg !6994

if.end147:                                        ; preds = %if.then146, %if.end143
  %147 = load float, float* %uvd, align 4, !dbg !6995
  %148 = load float, float* %d, align 4, !dbg !6996
  %div = fdiv float %147, %148, !dbg !6997
  store float %div, float* %d, align 4, !dbg !6998
  %149 = load float, float* %dpdv_a2, align 4, !dbg !6999
  %150 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7000
  %nu148 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %150, i32 0, i32 0, !dbg !7001
  %151 = load i32, i32* %a1, align 4, !dbg !7002
  %idxprom149 = sext i32 %151 to i64, !dbg !7000
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %nu148, i64 0, i64 %idxprom149, !dbg !7000
  %152 = load float, float* %arrayidx150, align 4, !dbg !7000
  %mul151 = fmul float %149, %152, !dbg !7003
  %153 = load float, float* %dpdv_a1, align 4, !dbg !7004
  %154 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7005
  %nu152 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %154, i32 0, i32 0, !dbg !7006
  %155 = load i32, i32* %a2, align 4, !dbg !7007
  %idxprom153 = sext i32 %155 to i64, !dbg !7005
  %arrayidx154 = getelementptr inbounds [3 x float], [3 x float]* %nu152, i64 0, i64 %idxprom153, !dbg !7005
  %156 = load float, float* %arrayidx154, align 4, !dbg !7005
  %mul155 = fmul float %153, %156, !dbg !7008
  %sub156 = fsub float %mul151, %mul155, !dbg !7009
  %157 = load float, float* %d, align 4, !dbg !7010
  %mul157 = fmul float %sub156, %157, !dbg !7011
  %158 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7012
  %dudnu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %158, i32 0, i32 3, !dbg !7013
  store float %mul157, float* %dudnu, align 4, !dbg !7014
  %159 = load float, float* %dpdu_a1, align 4, !dbg !7015
  %160 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7016
  %nu158 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %160, i32 0, i32 0, !dbg !7017
  %161 = load i32, i32* %a2, align 4, !dbg !7018
  %idxprom159 = sext i32 %161 to i64, !dbg !7016
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %nu158, i64 0, i64 %idxprom159, !dbg !7016
  %162 = load float, float* %arrayidx160, align 4, !dbg !7016
  %mul161 = fmul float %159, %162, !dbg !7019
  %163 = load float, float* %dpdu_a2, align 4, !dbg !7020
  %164 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7021
  %nu162 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %164, i32 0, i32 0, !dbg !7022
  %165 = load i32, i32* %a1, align 4, !dbg !7023
  %idxprom163 = sext i32 %165 to i64, !dbg !7021
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %nu162, i64 0, i64 %idxprom163, !dbg !7021
  %166 = load float, float* %arrayidx164, align 4, !dbg !7021
  %mul165 = fmul float %163, %166, !dbg !7024
  %sub166 = fsub float %mul161, %mul165, !dbg !7025
  %167 = load float, float* %d, align 4, !dbg !7026
  %mul167 = fmul float %sub166, %167, !dbg !7027
  %168 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7028
  %dvdnu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %168, i32 0, i32 5, !dbg !7029
  store float %mul167, float* %dvdnu, align 4, !dbg !7030
  %169 = load float, float* %dpdv_a2, align 4, !dbg !7031
  %170 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7032
  %nv168 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %170, i32 0, i32 1, !dbg !7033
  %171 = load i32, i32* %a1, align 4, !dbg !7034
  %idxprom169 = sext i32 %171 to i64, !dbg !7032
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %nv168, i64 0, i64 %idxprom169, !dbg !7032
  %172 = load float, float* %arrayidx170, align 4, !dbg !7032
  %mul171 = fmul float %169, %172, !dbg !7035
  %173 = load float, float* %dpdv_a1, align 4, !dbg !7036
  %174 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7037
  %nv172 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %174, i32 0, i32 1, !dbg !7038
  %175 = load i32, i32* %a2, align 4, !dbg !7039
  %idxprom173 = sext i32 %175 to i64, !dbg !7037
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %nv172, i64 0, i64 %idxprom173, !dbg !7037
  %176 = load float, float* %arrayidx174, align 4, !dbg !7037
  %mul175 = fmul float %173, %176, !dbg !7040
  %sub176 = fsub float %mul171, %mul175, !dbg !7041
  %177 = load float, float* %d, align 4, !dbg !7042
  %mul177 = fmul float %sub176, %177, !dbg !7043
  %178 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7044
  %dudnv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %178, i32 0, i32 4, !dbg !7045
  store float %mul177, float* %dudnv, align 4, !dbg !7046
  %179 = load float, float* %dpdu_a1, align 4, !dbg !7047
  %180 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7048
  %nv178 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %180, i32 0, i32 1, !dbg !7049
  %181 = load i32, i32* %a2, align 4, !dbg !7050
  %idxprom179 = sext i32 %181 to i64, !dbg !7048
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %nv178, i64 0, i64 %idxprom179, !dbg !7048
  %182 = load float, float* %arrayidx180, align 4, !dbg !7048
  %mul181 = fmul float %179, %182, !dbg !7051
  %183 = load float, float* %dpdu_a2, align 4, !dbg !7052
  %184 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7053
  %nv182 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %184, i32 0, i32 1, !dbg !7054
  %185 = load i32, i32* %a1, align 4, !dbg !7055
  %idxprom183 = sext i32 %185 to i64, !dbg !7053
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %nv182, i64 0, i64 %idxprom183, !dbg !7053
  %186 = load float, float* %arrayidx184, align 4, !dbg !7053
  %mul185 = fmul float %183, %186, !dbg !7056
  %sub186 = fsub float %mul181, %mul185, !dbg !7057
  %187 = load float, float* %d, align 4, !dbg !7058
  %mul187 = fmul float %sub186, %187, !dbg !7059
  %188 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7060
  %dvdnv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %188, i32 0, i32 6, !dbg !7061
  store float %mul187, float* %dvdnv, align 4, !dbg !7062
  br label %if.end188, !dbg !7063

if.end188:                                        ; preds = %if.end147, %if.end
  br label %if.end189, !dbg !7064

if.end189:                                        ; preds = %if.end188, %land.lhs.true13, %if.then
  br label %if.end190, !dbg !7065

if.end190:                                        ; preds = %if.end189, %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !7066
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7067 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  %0 = load float*, float** %a.addr, align 8, !dbg !7076
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7076
  %1 = load float, float* %arrayidx, align 4, !dbg !7076
  %2 = load float*, float** %b.addr, align 8, !dbg !7077
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7077
  %3 = load float, float* %arrayidx1, align 4, !dbg !7077
  %add = fadd float %1, %3, !dbg !7078
  %4 = load float*, float** %r.addr, align 8, !dbg !7079
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7079
  store float %add, float* %arrayidx2, align 4, !dbg !7080
  %5 = load float*, float** %a.addr, align 8, !dbg !7081
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7081
  %6 = load float, float* %arrayidx3, align 4, !dbg !7081
  %7 = load float*, float** %b.addr, align 8, !dbg !7082
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7082
  %8 = load float, float* %arrayidx4, align 4, !dbg !7082
  %add5 = fadd float %6, %8, !dbg !7083
  %9 = load float*, float** %r.addr, align 8, !dbg !7084
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7084
  store float %add5, float* %arrayidx6, align 4, !dbg !7085
  %10 = load float*, float** %a.addr, align 8, !dbg !7086
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7086
  %11 = load float, float* %arrayidx7, align 4, !dbg !7086
  %12 = load float*, float** %b.addr, align 8, !dbg !7087
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7087
  %13 = load float, float* %arrayidx8, align 4, !dbg !7087
  %add9 = fadd float %11, %13, !dbg !7088
  %14 = load float*, float** %r.addr, align 8, !dbg !7089
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7089
  store float %add9, float* %arrayidx10, align 4, !dbg !7090
  ret void, !dbg !7091
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compatible_bump_compute(%struct.CompatibleBump* %compat_bump, %struct.ShadeInput* %shi, %struct.MTex* %mtex, %struct.Tex* %tex, %struct.TexResult* %texres, float %Tnor, float* %co, float* %dx, float* %dy, float* %texvec, float* %dxt, float* %dyt, %struct.ImagePool* %pool) #0 !dbg !7092 {
entry:
  %compat_bump.addr = alloca %struct.CompatibleBump*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %tex.addr = alloca %struct.Tex*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %Tnor.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %dx.addr = alloca float*, align 8
  %dy.addr = alloca float*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %ttexr = alloca %struct.TexResult, align 8
  %tco = alloca [3 x float], align 4
  %texv = alloca [3 x float], align 4
  %cd = alloca float, align 4
  %ud = alloca float, align 4
  %vd = alloca float, align 4
  %du = alloca float, align 4
  %dv = alloca float, align 4
  %idu = alloca float, align 4
  %idv = alloca float, align 4
  %fromrgb = alloca i32, align 4
  %bf = alloca float, align 4
  %rgbnor = alloca i32, align 4
  %nvec = alloca float*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %adx = alloca [2 x float], align 4
  %ady = alloca [2 x float], align 4
  %adx61 = alloca [3 x float], align 4
  %ady68 = alloca [3 x float], align 4
  %tu = alloca [3 x float], align 4
  %tv = alloca [3 x float], align 4
  store %struct.CompatibleBump* %compat_bump, %struct.CompatibleBump** %compat_bump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CompatibleBump** %compat_bump.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7097, metadata !DIExpression()), !dbg !7098
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !7099, metadata !DIExpression()), !dbg !7100
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  store float %Tnor, float* %Tnor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Tnor.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store float* %dx, float** %dx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dx.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store float* %dy, float** %dy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dy.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.declare(metadata %struct.TexResult* %ttexr, metadata !7121, metadata !DIExpression()), !dbg !7122
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7123
  store float 0.000000e+00, float* %tin, align 8, !dbg !7123
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7123
  store float 0.000000e+00, float* %tr, align 4, !dbg !7123
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7123
  store float 0.000000e+00, float* %tg, align 8, !dbg !7123
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7123
  store float 0.000000e+00, float* %tb, align 4, !dbg !7123
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 4, !dbg !7123
  store float 0.000000e+00, float* %ta, align 8, !dbg !7123
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 5, !dbg !7123
  %0 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7124
  %talpha1 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %0, i32 0, i32 5, !dbg !7125
  %1 = load i32, i32* %talpha1, align 4, !dbg !7125
  store i32 %1, i32* %talpha, align 4, !dbg !7123
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 6, !dbg !7123
  store float* null, float** %nor, align 8, !dbg !7123
  call void @llvm.dbg.declare(metadata [3 x float]* %tco, metadata !7126, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.declare(metadata [3 x float]* %texv, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata float* %cd, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata float* %ud, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata float* %vd, metadata !7134, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.declare(metadata float* %du, metadata !7136, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata float* %dv, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata float* %idu, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.declare(metadata float* %idv, metadata !7142, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.declare(metadata i32* %fromrgb, metadata !7144, metadata !DIExpression()), !dbg !7145
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7146
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 32, !dbg !7147
  %3 = load i16, i16* %type, align 8, !dbg !7147
  %conv = sext i16 %3 to i32, !dbg !7146
  %cmp = icmp eq i32 %conv, 8, !dbg !7148
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7149

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7150
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 31, !dbg !7151
  %5 = load i16, i16* %flag, align 2, !dbg !7151
  %conv3 = sext i16 %5 to i32, !dbg !7150
  %and = and i32 %conv3, 1, !dbg !7152
  %cmp4 = icmp ne i32 %and, 0, !dbg !7153
  br label %lor.end, !dbg !7149

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !7149
  store i32 %lor.ext, i32* %fromrgb, align 4, !dbg !7145
  call void @llvm.dbg.declare(metadata float* %bf, metadata !7154, metadata !DIExpression()), !dbg !7155
  %7 = load float, float* %Tnor.addr, align 4, !dbg !7156
  %mul = fmul float 0xBFA47AE140000000, %7, !dbg !7157
  %8 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7158
  %norfac = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 30, !dbg !7159
  %9 = load float, float* %norfac, align 4, !dbg !7159
  %mul6 = fmul float %mul, %9, !dbg !7160
  store float %mul6, float* %bf, align 4, !dbg !7155
  call void @llvm.dbg.declare(metadata i32* %rgbnor, metadata !7161, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.declare(metadata float** %nvec, metadata !7163, metadata !DIExpression()), !dbg !7164
  %10 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7165
  %nor7 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %10, i32 0, i32 6, !dbg !7166
  %11 = load float*, float** %nor7, align 8, !dbg !7166
  store float* %11, float** %nvec, align 8, !dbg !7164
  %12 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7167
  %nor8 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %12, i32 0, i32 6, !dbg !7168
  store float* null, float** %nor8, align 8, !dbg !7169
  store float 0x3F847AE140000000, float* %dv, align 4, !dbg !7170
  store float 0x3F847AE140000000, float* %du, align 4, !dbg !7171
  %13 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7172
  %nunvdone = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %13, i32 0, i32 7, !dbg !7174
  %14 = load i8, i8* %nunvdone, align 4, !dbg !7174
  %tobool = icmp ne i8 %14, 0, !dbg !7172
  br i1 %tobool, label %if.end, label %if.then, !dbg !7175

if.then:                                          ; preds = %lor.end
  %15 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7176
  %nn = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %15, i32 0, i32 2, !dbg !7178
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nn, i64 0, i64 0, !dbg !7176
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7179
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 16, !dbg !7180
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7179
  call void @negate_v3_v3(float* %arraydecay, float* %arraydecay9), !dbg !7181
  %17 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7182
  %nu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %17, i32 0, i32 0, !dbg !7183
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %nu, i64 0, i64 0, !dbg !7182
  %18 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7184
  %nv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %18, i32 0, i32 1, !dbg !7185
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %nv, i64 0, i64 0, !dbg !7184
  %19 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7186
  %nn12 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %19, i32 0, i32 2, !dbg !7187
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %nn12, i64 0, i64 0, !dbg !7186
  call void @ortho_basis_v3v3_v3(float* %arraydecay10, float* %arraydecay11, float* %arraydecay13), !dbg !7188
  %20 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7189
  %nunvdone14 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %20, i32 0, i32 7, !dbg !7190
  store i8 1, i8* %nunvdone14, align 4, !dbg !7191
  br label %if.end, !dbg !7192

if.end:                                           ; preds = %if.then, %lor.end
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7193
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 15, !dbg !7195
  %22 = load i16, i16* %osatex, align 8, !dbg !7195
  %tobool15 = icmp ne i16 %22, 0, !dbg !7193
  br i1 %tobool15, label %if.else, label %land.lhs.true, !dbg !7196

land.lhs.true:                                    ; preds = %if.end
  %23 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7197
  %type16 = getelementptr inbounds %struct.Tex, %struct.Tex* %23, i32 0, i32 32, !dbg !7198
  %24 = load i16, i16* %type16, align 8, !dbg !7198
  %conv17 = sext i16 %24 to i32, !dbg !7197
  %cmp18 = icmp eq i32 %conv17, 8, !dbg !7199
  br i1 %cmp18, label %land.lhs.true20, label %if.else, !dbg !7200

land.lhs.true20:                                  ; preds = %land.lhs.true
  %25 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7201
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %25, i32 0, i32 54, !dbg !7202
  %26 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7202
  %tobool21 = icmp ne %struct.Image* %26, null, !dbg !7201
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !7203

if.then22:                                        ; preds = %land.lhs.true20
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !7204, metadata !DIExpression()), !dbg !7206
  %27 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7207
  %ima23 = getelementptr inbounds %struct.Tex, %struct.Tex* %27, i32 0, i32 54, !dbg !7208
  %28 = load %struct.Image*, %struct.Image** %ima23, align 8, !dbg !7208
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7209
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %29, i32 0, i32 51, !dbg !7210
  %30 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7211
  %call = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %28, %struct.ImageUser* %iuser, %struct.ImagePool* %30), !dbg !7212
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !7206
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7213
  %tobool24 = icmp ne %struct.ImBuf* %31, null, !dbg !7213
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !7215

if.then25:                                        ; preds = %if.then22
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7216
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 2, !dbg !7218
  %33 = load i32, i32* %x, align 8, !dbg !7218
  %conv26 = sitofp i32 %33 to float, !dbg !7219
  %div = fdiv float 1.000000e+00, %conv26, !dbg !7220
  store float %div, float* %du, align 4, !dbg !7221
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7222
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 3, !dbg !7223
  %35 = load i32, i32* %y, align 4, !dbg !7223
  %conv27 = sitofp i32 %35 to float, !dbg !7224
  %div28 = fdiv float 1.000000e+00, %conv27, !dbg !7225
  store float %div28, float* %dv, align 4, !dbg !7226
  br label %if.end29, !dbg !7227

if.end29:                                         ; preds = %if.then25, %if.then22
  %36 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7228
  %ima30 = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 54, !dbg !7229
  %37 = load %struct.Image*, %struct.Image** %ima30, align 8, !dbg !7229
  %38 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7230
  %39 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7231
  call void @BKE_image_pool_release_ibuf(%struct.Image* %37, %struct.ImBuf* %38, %struct.ImagePool* %39), !dbg !7232
  br label %if.end85, !dbg !7233

if.else:                                          ; preds = %land.lhs.true20, %land.lhs.true, %if.end
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7234
  %osatex31 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %40, i32 0, i32 15, !dbg !7236
  %41 = load i16, i16* %osatex31, align 8, !dbg !7236
  %tobool32 = icmp ne i16 %41, 0, !dbg !7234
  br i1 %tobool32, label %if.then33, label %if.end84, !dbg !7237

if.then33:                                        ; preds = %if.else
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7238
  %type34 = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 32, !dbg !7241
  %43 = load i16, i16* %type34, align 8, !dbg !7241
  %conv35 = sext i16 %43 to i32, !dbg !7238
  %cmp36 = icmp eq i32 %conv35, 8, !dbg !7242
  br i1 %cmp36, label %if.then38, label %if.else60, !dbg !7243

if.then38:                                        ; preds = %if.then33
  call void @llvm.dbg.declare(metadata [2 x float]* %adx, metadata !7244, metadata !DIExpression()), !dbg !7247
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %adx, i64 0, i64 0, !dbg !7248
  %44 = load float*, float** %dx.addr, align 8, !dbg !7249
  %arrayidx = getelementptr inbounds float, float* %44, i64 0, !dbg !7249
  %45 = load float, float* %arrayidx, align 4, !dbg !7249
  %46 = call float @llvm.fabs.f32(float %45), !dbg !7250
  store float %46, float* %arrayinit.begin, align 4, !dbg !7248
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !7248
  %47 = load float*, float** %dx.addr, align 8, !dbg !7251
  %arrayidx39 = getelementptr inbounds float, float* %47, i64 1, !dbg !7251
  %48 = load float, float* %arrayidx39, align 4, !dbg !7251
  %49 = call float @llvm.fabs.f32(float %48), !dbg !7252
  store float %49, float* %arrayinit.element, align 4, !dbg !7248
  call void @llvm.dbg.declare(metadata [2 x float]* %ady, metadata !7253, metadata !DIExpression()), !dbg !7254
  %arrayinit.begin40 = getelementptr inbounds [2 x float], [2 x float]* %ady, i64 0, i64 0, !dbg !7255
  %50 = load float*, float** %dy.addr, align 8, !dbg !7256
  %arrayidx41 = getelementptr inbounds float, float* %50, i64 0, !dbg !7256
  %51 = load float, float* %arrayidx41, align 4, !dbg !7256
  %52 = call float @llvm.fabs.f32(float %51), !dbg !7257
  store float %52, float* %arrayinit.begin40, align 4, !dbg !7255
  %arrayinit.element42 = getelementptr inbounds float, float* %arrayinit.begin40, i64 1, !dbg !7255
  %53 = load float*, float** %dy.addr, align 8, !dbg !7258
  %arrayidx43 = getelementptr inbounds float, float* %53, i64 1, !dbg !7258
  %54 = load float, float* %arrayidx43, align 4, !dbg !7258
  %55 = call float @llvm.fabs.f32(float %54), !dbg !7259
  store float %55, float* %arrayinit.element42, align 4, !dbg !7255
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %adx, i64 0, i64 0, !dbg !7260
  %56 = load float, float* %arrayidx44, align 4, !dbg !7260
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %ady, i64 0, i64 0, !dbg !7260
  %57 = load float, float* %arrayidx45, align 4, !dbg !7260
  %cmp46 = fcmp ogt float %56, %57, !dbg !7260
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !7260

cond.true:                                        ; preds = %if.then38
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %adx, i64 0, i64 0, !dbg !7260
  %58 = load float, float* %arrayidx48, align 4, !dbg !7260
  br label %cond.end, !dbg !7260

cond.false:                                       ; preds = %if.then38
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %ady, i64 0, i64 0, !dbg !7260
  %59 = load float, float* %arrayidx49, align 4, !dbg !7260
  br label %cond.end, !dbg !7260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %58, %cond.true ], [ %59, %cond.false ], !dbg !7260
  store float %cond, float* %du, align 4, !dbg !7261
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %adx, i64 0, i64 1, !dbg !7262
  %60 = load float, float* %arrayidx50, align 4, !dbg !7262
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %ady, i64 0, i64 1, !dbg !7262
  %61 = load float, float* %arrayidx51, align 4, !dbg !7262
  %cmp52 = fcmp ogt float %60, %61, !dbg !7262
  br i1 %cmp52, label %cond.true54, label %cond.false56, !dbg !7262

cond.true54:                                      ; preds = %cond.end
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %adx, i64 0, i64 1, !dbg !7262
  %62 = load float, float* %arrayidx55, align 4, !dbg !7262
  br label %cond.end58, !dbg !7262

cond.false56:                                     ; preds = %cond.end
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %ady, i64 0, i64 1, !dbg !7262
  %63 = load float, float* %arrayidx57, align 4, !dbg !7262
  br label %cond.end58, !dbg !7262

cond.end58:                                       ; preds = %cond.false56, %cond.true54
  %cond59 = phi float [ %62, %cond.true54 ], [ %63, %cond.false56 ], !dbg !7262
  store float %cond59, float* %dv, align 4, !dbg !7263
  br label %if.end83, !dbg !7264

if.else60:                                        ; preds = %if.then33
  call void @llvm.dbg.declare(metadata [3 x float]* %adx61, metadata !7265, metadata !DIExpression()), !dbg !7267
  %arrayinit.begin62 = getelementptr inbounds [3 x float], [3 x float]* %adx61, i64 0, i64 0, !dbg !7268
  %64 = load float*, float** %dx.addr, align 8, !dbg !7269
  %arrayidx63 = getelementptr inbounds float, float* %64, i64 0, !dbg !7269
  %65 = load float, float* %arrayidx63, align 4, !dbg !7269
  %66 = call float @llvm.fabs.f32(float %65), !dbg !7270
  store float %66, float* %arrayinit.begin62, align 4, !dbg !7268
  %arrayinit.element64 = getelementptr inbounds float, float* %arrayinit.begin62, i64 1, !dbg !7268
  %67 = load float*, float** %dx.addr, align 8, !dbg !7271
  %arrayidx65 = getelementptr inbounds float, float* %67, i64 1, !dbg !7271
  %68 = load float, float* %arrayidx65, align 4, !dbg !7271
  %69 = call float @llvm.fabs.f32(float %68), !dbg !7272
  store float %69, float* %arrayinit.element64, align 4, !dbg !7268
  %arrayinit.element66 = getelementptr inbounds float, float* %arrayinit.element64, i64 1, !dbg !7268
  %70 = load float*, float** %dx.addr, align 8, !dbg !7273
  %arrayidx67 = getelementptr inbounds float, float* %70, i64 2, !dbg !7273
  %71 = load float, float* %arrayidx67, align 4, !dbg !7273
  %72 = call float @llvm.fabs.f32(float %71), !dbg !7274
  store float %72, float* %arrayinit.element66, align 4, !dbg !7268
  call void @llvm.dbg.declare(metadata [3 x float]* %ady68, metadata !7275, metadata !DIExpression()), !dbg !7276
  %arrayinit.begin69 = getelementptr inbounds [3 x float], [3 x float]* %ady68, i64 0, i64 0, !dbg !7277
  %73 = load float*, float** %dy.addr, align 8, !dbg !7278
  %arrayidx70 = getelementptr inbounds float, float* %73, i64 0, !dbg !7278
  %74 = load float, float* %arrayidx70, align 4, !dbg !7278
  %75 = call float @llvm.fabs.f32(float %74), !dbg !7279
  store float %75, float* %arrayinit.begin69, align 4, !dbg !7277
  %arrayinit.element71 = getelementptr inbounds float, float* %arrayinit.begin69, i64 1, !dbg !7277
  %76 = load float*, float** %dy.addr, align 8, !dbg !7280
  %arrayidx72 = getelementptr inbounds float, float* %76, i64 1, !dbg !7280
  %77 = load float, float* %arrayidx72, align 4, !dbg !7280
  %78 = call float @llvm.fabs.f32(float %77), !dbg !7281
  store float %78, float* %arrayinit.element71, align 4, !dbg !7277
  %arrayinit.element73 = getelementptr inbounds float, float* %arrayinit.element71, i64 1, !dbg !7277
  %79 = load float*, float** %dy.addr, align 8, !dbg !7282
  %arrayidx74 = getelementptr inbounds float, float* %79, i64 2, !dbg !7282
  %80 = load float, float* %arrayidx74, align 4, !dbg !7282
  %81 = call float @llvm.fabs.f32(float %80), !dbg !7283
  store float %81, float* %arrayinit.element73, align 4, !dbg !7277
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %adx61, i64 0, i64 0, !dbg !7284
  %82 = load float, float* %arrayidx75, align 4, !dbg !7284
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %adx61, i64 0, i64 1, !dbg !7285
  %83 = load float, float* %arrayidx76, align 4, !dbg !7285
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %adx61, i64 0, i64 2, !dbg !7286
  %84 = load float, float* %arrayidx77, align 4, !dbg !7286
  %call78 = call float @max_fff(float %82, float %83, float %84), !dbg !7287
  store float %call78, float* %du, align 4, !dbg !7288
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %ady68, i64 0, i64 0, !dbg !7289
  %85 = load float, float* %arrayidx79, align 4, !dbg !7289
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %ady68, i64 0, i64 1, !dbg !7290
  %86 = load float, float* %arrayidx80, align 4, !dbg !7290
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %ady68, i64 0, i64 2, !dbg !7291
  %87 = load float, float* %arrayidx81, align 4, !dbg !7291
  %call82 = call float @max_fff(float %85, float %86, float %87), !dbg !7292
  store float %call82, float* %dv, align 4, !dbg !7293
  br label %if.end83

if.end83:                                         ; preds = %if.else60, %cond.end58
  br label %if.end84, !dbg !7294

if.end84:                                         ; preds = %if.end83, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end29
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7295
  %89 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7296
  %90 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7297
  %91 = load float*, float** %co.addr, align 8, !dbg !7298
  %92 = load float*, float** %dx.addr, align 8, !dbg !7299
  %93 = load float*, float** %dy.addr, align 8, !dbg !7300
  %94 = load float*, float** %texvec.addr, align 8, !dbg !7301
  %95 = load float*, float** %dxt.addr, align 8, !dbg !7302
  %96 = load float*, float** %dyt.addr, align 8, !dbg !7303
  call void @texco_mapping(%struct.ShadeInput* %88, %struct.Tex* %89, %struct.MTex* %90, float* %91, float* %92, float* %93, float* %94, float* %95, float* %96), !dbg !7304
  %97 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7305
  %98 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7306
  %99 = load float*, float** %texvec.addr, align 8, !dbg !7307
  %100 = load float*, float** %dxt.addr, align 8, !dbg !7308
  %101 = load float*, float** %dyt.addr, align 8, !dbg !7309
  %102 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7310
  %103 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7311
  %call86 = call i32 @multitex_mtex(%struct.ShadeInput* %97, %struct.MTex* %98, float* %99, float* %100, float* %101, %struct.TexResult* %102, %struct.ImagePool* %103), !dbg !7312
  store i32 %call86, i32* %rgbnor, align 4, !dbg !7313
  %104 = load i32, i32* %fromrgb, align 4, !dbg !7314
  %tobool87 = icmp ne i32 %104, 0, !dbg !7314
  br i1 %tobool87, label %cond.true88, label %cond.false94, !dbg !7314

cond.true88:                                      ; preds = %if.end85
  %105 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7315
  %tr89 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %105, i32 0, i32 1, !dbg !7316
  %106 = load float, float* %tr89, align 4, !dbg !7316
  %107 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7317
  %tg90 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %107, i32 0, i32 2, !dbg !7318
  %108 = load float, float* %tg90, align 8, !dbg !7318
  %add = fadd float %106, %108, !dbg !7319
  %109 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7320
  %tb91 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %109, i32 0, i32 3, !dbg !7321
  %110 = load float, float* %tb91, align 4, !dbg !7321
  %add92 = fadd float %add, %110, !dbg !7322
  %div93 = fdiv float %add92, 3.000000e+00, !dbg !7323
  br label %cond.end96, !dbg !7314

cond.false94:                                     ; preds = %if.end85
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7324
  %tin95 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 0, !dbg !7325
  %112 = load float, float* %tin95, align 8, !dbg !7325
  br label %cond.end96, !dbg !7314

cond.end96:                                       ; preds = %cond.false94, %cond.true88
  %cond97 = phi float [ %div93, %cond.true88 ], [ %112, %cond.false94 ], !dbg !7314
  store float %cond97, float* %cd, align 4, !dbg !7326
  %113 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7327
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %113, i32 0, i32 0, !dbg !7329
  %114 = load i16, i16* %texco, align 8, !dbg !7329
  %conv98 = sext i16 %114 to i32, !dbg !7327
  %cmp99 = icmp eq i32 %conv98, 16, !dbg !7330
  br i1 %cmp99, label %if.then101, label %if.else163, !dbg !7331

if.then101:                                       ; preds = %cond.end96
  %115 = load float, float* %du, align 4, !dbg !7332
  %116 = load float, float* %dv, align 4, !dbg !7334
  %call102 = call float @min_ff(float %115, float %116), !dbg !7335
  store float %call102, float* %du, align 4, !dbg !7336
  %117 = load float, float* %du, align 4, !dbg !7337
  %cmp103 = fcmp olt float %117, 0x3EE4F8B580000000, !dbg !7338
  br i1 %cmp103, label %cond.true105, label %cond.false106, !dbg !7339

cond.true105:                                     ; preds = %if.then101
  %118 = load float, float* %bf, align 4, !dbg !7340
  br label %cond.end108, !dbg !7339

cond.false106:                                    ; preds = %if.then101
  %119 = load float, float* %bf, align 4, !dbg !7341
  %120 = load float, float* %du, align 4, !dbg !7342
  %div107 = fdiv float %119, %120, !dbg !7343
  br label %cond.end108, !dbg !7339

cond.end108:                                      ; preds = %cond.false106, %cond.true105
  %cond109 = phi float [ %118, %cond.true105 ], [ %div107, %cond.false106 ], !dbg !7339
  store float %cond109, float* %idu, align 4, !dbg !7344
  %121 = load float*, float** %co.addr, align 8, !dbg !7345
  %arrayidx110 = getelementptr inbounds float, float* %121, i64 0, !dbg !7345
  %122 = load float, float* %arrayidx110, align 4, !dbg !7345
  %123 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7346
  %dudnu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %123, i32 0, i32 3, !dbg !7347
  %124 = load float, float* %dudnu, align 4, !dbg !7347
  %125 = load float, float* %du, align 4, !dbg !7348
  %mul111 = fmul float %124, %125, !dbg !7349
  %add112 = fadd float %122, %mul111, !dbg !7350
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7351
  store float %add112, float* %arrayidx113, align 4, !dbg !7352
  %126 = load float*, float** %co.addr, align 8, !dbg !7353
  %arrayidx114 = getelementptr inbounds float, float* %126, i64 1, !dbg !7353
  %127 = load float, float* %arrayidx114, align 4, !dbg !7353
  %128 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7354
  %dvdnu = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %128, i32 0, i32 5, !dbg !7355
  %129 = load float, float* %dvdnu, align 4, !dbg !7355
  %130 = load float, float* %du, align 4, !dbg !7356
  %mul115 = fmul float %129, %130, !dbg !7357
  %add116 = fadd float %127, %mul115, !dbg !7358
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 1, !dbg !7359
  store float %add116, float* %arrayidx117, align 4, !dbg !7360
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 2, !dbg !7361
  store float 0.000000e+00, float* %arrayidx118, align 4, !dbg !7362
  %131 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7363
  %132 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7364
  %133 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7365
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7366
  %134 = load float*, float** %dx.addr, align 8, !dbg !7367
  %135 = load float*, float** %dy.addr, align 8, !dbg !7368
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7369
  %136 = load float*, float** %dxt.addr, align 8, !dbg !7370
  %137 = load float*, float** %dyt.addr, align 8, !dbg !7371
  call void @texco_mapping(%struct.ShadeInput* %131, %struct.Tex* %132, %struct.MTex* %133, float* %arraydecay119, float* %134, float* %135, float* %arraydecay120, float* %136, float* %137), !dbg !7372
  %138 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7373
  %139 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7374
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7375
  %140 = load float*, float** %dxt.addr, align 8, !dbg !7376
  %141 = load float*, float** %dyt.addr, align 8, !dbg !7377
  %142 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7378
  %call122 = call i32 @multitex_mtex(%struct.ShadeInput* %138, %struct.MTex* %139, float* %arraydecay121, float* %140, float* %141, %struct.TexResult* %ttexr, %struct.ImagePool* %142), !dbg !7379
  %143 = load float, float* %idu, align 4, !dbg !7380
  %144 = load float, float* %cd, align 4, !dbg !7381
  %145 = load i32, i32* %fromrgb, align 4, !dbg !7382
  %tobool123 = icmp ne i32 %145, 0, !dbg !7382
  br i1 %tobool123, label %cond.true124, label %cond.false131, !dbg !7382

cond.true124:                                     ; preds = %cond.end108
  %tr125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7383
  %146 = load float, float* %tr125, align 4, !dbg !7383
  %tg126 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7384
  %147 = load float, float* %tg126, align 8, !dbg !7384
  %add127 = fadd float %146, %147, !dbg !7385
  %tb128 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7386
  %148 = load float, float* %tb128, align 4, !dbg !7386
  %add129 = fadd float %add127, %148, !dbg !7387
  %div130 = fdiv float %add129, 3.000000e+00, !dbg !7388
  br label %cond.end133, !dbg !7382

cond.false131:                                    ; preds = %cond.end108
  %tin132 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7389
  %149 = load float, float* %tin132, align 8, !dbg !7389
  br label %cond.end133, !dbg !7382

cond.end133:                                      ; preds = %cond.false131, %cond.true124
  %cond134 = phi float [ %div130, %cond.true124 ], [ %149, %cond.false131 ], !dbg !7382
  %sub = fsub float %144, %cond134, !dbg !7390
  %mul135 = fmul float %143, %sub, !dbg !7391
  store float %mul135, float* %ud, align 4, !dbg !7392
  %150 = load float*, float** %co.addr, align 8, !dbg !7393
  %arrayidx136 = getelementptr inbounds float, float* %150, i64 0, !dbg !7393
  %151 = load float, float* %arrayidx136, align 4, !dbg !7393
  %152 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7394
  %dudnv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %152, i32 0, i32 4, !dbg !7395
  %153 = load float, float* %dudnv, align 4, !dbg !7395
  %154 = load float, float* %du, align 4, !dbg !7396
  %mul137 = fmul float %153, %154, !dbg !7397
  %add138 = fadd float %151, %mul137, !dbg !7398
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7399
  store float %add138, float* %arrayidx139, align 4, !dbg !7400
  %155 = load float*, float** %co.addr, align 8, !dbg !7401
  %arrayidx140 = getelementptr inbounds float, float* %155, i64 1, !dbg !7401
  %156 = load float, float* %arrayidx140, align 4, !dbg !7401
  %157 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7402
  %dvdnv = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %157, i32 0, i32 6, !dbg !7403
  %158 = load float, float* %dvdnv, align 4, !dbg !7403
  %159 = load float, float* %du, align 4, !dbg !7404
  %mul141 = fmul float %158, %159, !dbg !7405
  %add142 = fadd float %156, %mul141, !dbg !7406
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 1, !dbg !7407
  store float %add142, float* %arrayidx143, align 4, !dbg !7408
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 2, !dbg !7409
  store float 0.000000e+00, float* %arrayidx144, align 4, !dbg !7410
  %160 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7411
  %161 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7412
  %162 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7413
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7414
  %163 = load float*, float** %dx.addr, align 8, !dbg !7415
  %164 = load float*, float** %dy.addr, align 8, !dbg !7416
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7417
  %165 = load float*, float** %dxt.addr, align 8, !dbg !7418
  %166 = load float*, float** %dyt.addr, align 8, !dbg !7419
  call void @texco_mapping(%struct.ShadeInput* %160, %struct.Tex* %161, %struct.MTex* %162, float* %arraydecay145, float* %163, float* %164, float* %arraydecay146, float* %165, float* %166), !dbg !7420
  %167 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7421
  %168 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7422
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7423
  %169 = load float*, float** %dxt.addr, align 8, !dbg !7424
  %170 = load float*, float** %dyt.addr, align 8, !dbg !7425
  %171 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7426
  %call148 = call i32 @multitex_mtex(%struct.ShadeInput* %167, %struct.MTex* %168, float* %arraydecay147, float* %169, float* %170, %struct.TexResult* %ttexr, %struct.ImagePool* %171), !dbg !7427
  %172 = load float, float* %idu, align 4, !dbg !7428
  %173 = load float, float* %cd, align 4, !dbg !7429
  %174 = load i32, i32* %fromrgb, align 4, !dbg !7430
  %tobool149 = icmp ne i32 %174, 0, !dbg !7430
  br i1 %tobool149, label %cond.true150, label %cond.false157, !dbg !7430

cond.true150:                                     ; preds = %cond.end133
  %tr151 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7431
  %175 = load float, float* %tr151, align 4, !dbg !7431
  %tg152 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7432
  %176 = load float, float* %tg152, align 8, !dbg !7432
  %add153 = fadd float %175, %176, !dbg !7433
  %tb154 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7434
  %177 = load float, float* %tb154, align 4, !dbg !7434
  %add155 = fadd float %add153, %177, !dbg !7435
  %div156 = fdiv float %add155, 3.000000e+00, !dbg !7436
  br label %cond.end159, !dbg !7430

cond.false157:                                    ; preds = %cond.end133
  %tin158 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7437
  %178 = load float, float* %tin158, align 8, !dbg !7437
  br label %cond.end159, !dbg !7430

cond.end159:                                      ; preds = %cond.false157, %cond.true150
  %cond160 = phi float [ %div156, %cond.true150 ], [ %178, %cond.false157 ], !dbg !7430
  %sub161 = fsub float %173, %cond160, !dbg !7438
  %mul162 = fmul float %172, %sub161, !dbg !7439
  store float %mul162, float* %vd, align 4, !dbg !7440
  br label %if.end304, !dbg !7441

if.else163:                                       ; preds = %cond.end96
  call void @llvm.dbg.declare(metadata [3 x float]* %tu, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata [3 x float]* %tv, metadata !7445, metadata !DIExpression()), !dbg !7446
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7447
  %179 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7448
  %nu165 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %179, i32 0, i32 0, !dbg !7449
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %nu165, i64 0, i64 0, !dbg !7448
  call void @copy_v3_v3(float* %arraydecay164, float* %arraydecay166), !dbg !7450
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7451
  %180 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7452
  %nv168 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %180, i32 0, i32 1, !dbg !7453
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %nv168, i64 0, i64 0, !dbg !7452
  call void @copy_v3_v3(float* %arraydecay167, float* %arraydecay169), !dbg !7454
  %181 = load float, float* %du, align 4, !dbg !7455
  %cmp170 = fcmp olt float %181, 0x3EE4F8B580000000, !dbg !7456
  br i1 %cmp170, label %cond.true172, label %cond.false173, !dbg !7457

cond.true172:                                     ; preds = %if.else163
  %182 = load float, float* %bf, align 4, !dbg !7458
  br label %cond.end175, !dbg !7457

cond.false173:                                    ; preds = %if.else163
  %183 = load float, float* %bf, align 4, !dbg !7459
  %184 = load float, float* %du, align 4, !dbg !7460
  %div174 = fdiv float %183, %184, !dbg !7461
  br label %cond.end175, !dbg !7457

cond.end175:                                      ; preds = %cond.false173, %cond.true172
  %cond176 = phi float [ %182, %cond.true172 ], [ %div174, %cond.false173 ], !dbg !7457
  store float %cond176, float* %idu, align 4, !dbg !7462
  %185 = load float, float* %dv, align 4, !dbg !7463
  %cmp177 = fcmp olt float %185, 0x3EE4F8B580000000, !dbg !7464
  br i1 %cmp177, label %cond.true179, label %cond.false180, !dbg !7465

cond.true179:                                     ; preds = %cond.end175
  %186 = load float, float* %bf, align 4, !dbg !7466
  br label %cond.end182, !dbg !7465

cond.false180:                                    ; preds = %cond.end175
  %187 = load float, float* %bf, align 4, !dbg !7467
  %188 = load float, float* %dv, align 4, !dbg !7468
  %div181 = fdiv float %187, %188, !dbg !7469
  br label %cond.end182, !dbg !7465

cond.end182:                                      ; preds = %cond.false180, %cond.true179
  %cond183 = phi float [ %186, %cond.true179 ], [ %div181, %cond.false180 ], !dbg !7465
  store float %cond183, float* %idv, align 4, !dbg !7470
  %189 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7471
  %texco184 = getelementptr inbounds %struct.MTex, %struct.MTex* %189, i32 0, i32 0, !dbg !7473
  %190 = load i16, i16* %texco184, align 8, !dbg !7473
  %conv185 = sext i16 %190 to i32, !dbg !7471
  %cmp186 = icmp eq i32 %conv185, 1, !dbg !7474
  br i1 %cmp186, label %land.lhs.true188, label %if.else207, !dbg !7475

land.lhs.true188:                                 ; preds = %cond.end182
  %191 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7476
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %191, i32 0, i32 4, !dbg !7477
  %192 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7477
  %tobool189 = icmp ne %struct.ObjectRen* %192, null, !dbg !7476
  br i1 %tobool189, label %land.lhs.true190, label %if.else207, !dbg !7478

land.lhs.true190:                                 ; preds = %land.lhs.true188
  %193 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7479
  %obr191 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %193, i32 0, i32 4, !dbg !7480
  %194 = load %struct.ObjectRen*, %struct.ObjectRen** %obr191, align 8, !dbg !7480
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %194, i32 0, i32 2, !dbg !7481
  %195 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7481
  %tobool192 = icmp ne %struct.Object* %195, null, !dbg !7479
  br i1 %tobool192, label %if.then193, label %if.else207, !dbg !7482

if.then193:                                       ; preds = %land.lhs.true190
  %196 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7483
  %obr194 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %196, i32 0, i32 4, !dbg !7485
  %197 = load %struct.ObjectRen*, %struct.ObjectRen** %obr194, align 8, !dbg !7485
  %ob195 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %197, i32 0, i32 2, !dbg !7486
  %198 = load %struct.Object*, %struct.Object** %ob195, align 8, !dbg !7486
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %198, i32 0, i32 51, !dbg !7487
  %arraydecay196 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !7483
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7488
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay196, float* %arraydecay197), !dbg !7489
  %199 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7490
  %obr198 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %199, i32 0, i32 4, !dbg !7491
  %200 = load %struct.ObjectRen*, %struct.ObjectRen** %obr198, align 8, !dbg !7491
  %ob199 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %200, i32 0, i32 2, !dbg !7492
  %201 = load %struct.Object*, %struct.Object** %ob199, align 8, !dbg !7492
  %imat_ren200 = getelementptr inbounds %struct.Object, %struct.Object* %201, i32 0, i32 51, !dbg !7493
  %arraydecay201 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren200, i64 0, i64 0, !dbg !7490
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7494
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay201, float* %arraydecay202), !dbg !7495
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7496
  %call204 = call float @normalize_v3(float* %arraydecay203), !dbg !7497
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7498
  %call206 = call float @normalize_v3(float* %arraydecay205), !dbg !7499
  br label %if.end237, !dbg !7500

if.else207:                                       ; preds = %land.lhs.true190, %land.lhs.true188, %cond.end182
  %202 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7501
  %texco208 = getelementptr inbounds %struct.MTex, %struct.MTex* %202, i32 0, i32 0, !dbg !7503
  %203 = load i16, i16* %texco208, align 8, !dbg !7503
  %conv209 = sext i16 %203 to i32, !dbg !7501
  %cmp210 = icmp eq i32 %conv209, 8, !dbg !7504
  br i1 %cmp210, label %if.then212, label %if.else215, !dbg !7505

if.then212:                                       ; preds = %if.else207
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7506
  call void @mul_mat3_m4_v3([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0), float* %arraydecay213), !dbg !7508
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7509
  call void @mul_mat3_m4_v3([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0), float* %arraydecay214), !dbg !7510
  br label %if.end236, !dbg !7511

if.else215:                                       ; preds = %if.else207
  %204 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7512
  %texco216 = getelementptr inbounds %struct.MTex, %struct.MTex* %204, i32 0, i32 0, !dbg !7514
  %205 = load i16, i16* %texco216, align 8, !dbg !7514
  %conv217 = sext i16 %205 to i32, !dbg !7512
  %cmp218 = icmp eq i32 %conv217, 32, !dbg !7515
  br i1 %cmp218, label %land.lhs.true220, label %if.end235, !dbg !7516

land.lhs.true220:                                 ; preds = %if.else215
  %206 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7517
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %206, i32 0, i32 4, !dbg !7518
  %207 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !7518
  %tobool221 = icmp ne %struct.Object* %207, null, !dbg !7517
  br i1 %tobool221, label %if.then222, label %if.end235, !dbg !7519

if.then222:                                       ; preds = %land.lhs.true220
  %208 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7520
  %object223 = getelementptr inbounds %struct.MTex, %struct.MTex* %208, i32 0, i32 4, !dbg !7522
  %209 = load %struct.Object*, %struct.Object** %object223, align 8, !dbg !7522
  %imat_ren224 = getelementptr inbounds %struct.Object, %struct.Object* %209, i32 0, i32 51, !dbg !7523
  %arraydecay225 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren224, i64 0, i64 0, !dbg !7520
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7524
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay225, float* %arraydecay226), !dbg !7525
  %210 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7526
  %object227 = getelementptr inbounds %struct.MTex, %struct.MTex* %210, i32 0, i32 4, !dbg !7527
  %211 = load %struct.Object*, %struct.Object** %object227, align 8, !dbg !7527
  %imat_ren228 = getelementptr inbounds %struct.Object, %struct.Object* %211, i32 0, i32 51, !dbg !7528
  %arraydecay229 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren228, i64 0, i64 0, !dbg !7526
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7529
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay229, float* %arraydecay230), !dbg !7530
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7531
  %call232 = call float @normalize_v3(float* %arraydecay231), !dbg !7532
  %arraydecay233 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7533
  %call234 = call float @normalize_v3(float* %arraydecay233), !dbg !7534
  br label %if.end235, !dbg !7535

if.end235:                                        ; preds = %if.then222, %land.lhs.true220, %if.else215
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.then212
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then193
  %212 = load float*, float** %co.addr, align 8, !dbg !7536
  %arrayidx238 = getelementptr inbounds float, float* %212, i64 0, !dbg !7536
  %213 = load float, float* %arrayidx238, align 4, !dbg !7536
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 0, !dbg !7537
  %214 = load float, float* %arrayidx239, align 4, !dbg !7537
  %215 = load float, float* %du, align 4, !dbg !7538
  %mul240 = fmul float %214, %215, !dbg !7539
  %add241 = fadd float %213, %mul240, !dbg !7540
  %arrayidx242 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7541
  store float %add241, float* %arrayidx242, align 4, !dbg !7542
  %216 = load float*, float** %co.addr, align 8, !dbg !7543
  %arrayidx243 = getelementptr inbounds float, float* %216, i64 1, !dbg !7543
  %217 = load float, float* %arrayidx243, align 4, !dbg !7543
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 1, !dbg !7544
  %218 = load float, float* %arrayidx244, align 4, !dbg !7544
  %219 = load float, float* %du, align 4, !dbg !7545
  %mul245 = fmul float %218, %219, !dbg !7546
  %add246 = fadd float %217, %mul245, !dbg !7547
  %arrayidx247 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 1, !dbg !7548
  store float %add246, float* %arrayidx247, align 4, !dbg !7549
  %220 = load float*, float** %co.addr, align 8, !dbg !7550
  %arrayidx248 = getelementptr inbounds float, float* %220, i64 2, !dbg !7550
  %221 = load float, float* %arrayidx248, align 4, !dbg !7550
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %tu, i64 0, i64 2, !dbg !7551
  %222 = load float, float* %arrayidx249, align 4, !dbg !7551
  %223 = load float, float* %du, align 4, !dbg !7552
  %mul250 = fmul float %222, %223, !dbg !7553
  %add251 = fadd float %221, %mul250, !dbg !7554
  %arrayidx252 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 2, !dbg !7555
  store float %add251, float* %arrayidx252, align 4, !dbg !7556
  %224 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7557
  %225 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7558
  %226 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7559
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7560
  %227 = load float*, float** %dx.addr, align 8, !dbg !7561
  %228 = load float*, float** %dy.addr, align 8, !dbg !7562
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7563
  %229 = load float*, float** %dxt.addr, align 8, !dbg !7564
  %230 = load float*, float** %dyt.addr, align 8, !dbg !7565
  call void @texco_mapping(%struct.ShadeInput* %224, %struct.Tex* %225, %struct.MTex* %226, float* %arraydecay253, float* %227, float* %228, float* %arraydecay254, float* %229, float* %230), !dbg !7566
  %231 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7567
  %232 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7568
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7569
  %233 = load float*, float** %dxt.addr, align 8, !dbg !7570
  %234 = load float*, float** %dyt.addr, align 8, !dbg !7571
  %235 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7572
  %call256 = call i32 @multitex_mtex(%struct.ShadeInput* %231, %struct.MTex* %232, float* %arraydecay255, float* %233, float* %234, %struct.TexResult* %ttexr, %struct.ImagePool* %235), !dbg !7573
  %236 = load float, float* %idu, align 4, !dbg !7574
  %237 = load float, float* %cd, align 4, !dbg !7575
  %238 = load i32, i32* %fromrgb, align 4, !dbg !7576
  %tobool257 = icmp ne i32 %238, 0, !dbg !7576
  br i1 %tobool257, label %cond.true258, label %cond.false265, !dbg !7576

cond.true258:                                     ; preds = %if.end237
  %tr259 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7577
  %239 = load float, float* %tr259, align 4, !dbg !7577
  %tg260 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7578
  %240 = load float, float* %tg260, align 8, !dbg !7578
  %add261 = fadd float %239, %240, !dbg !7579
  %tb262 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7580
  %241 = load float, float* %tb262, align 4, !dbg !7580
  %add263 = fadd float %add261, %241, !dbg !7581
  %div264 = fdiv float %add263, 3.000000e+00, !dbg !7582
  br label %cond.end267, !dbg !7576

cond.false265:                                    ; preds = %if.end237
  %tin266 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7583
  %242 = load float, float* %tin266, align 8, !dbg !7583
  br label %cond.end267, !dbg !7576

cond.end267:                                      ; preds = %cond.false265, %cond.true258
  %cond268 = phi float [ %div264, %cond.true258 ], [ %242, %cond.false265 ], !dbg !7576
  %sub269 = fsub float %237, %cond268, !dbg !7584
  %mul270 = fmul float %236, %sub269, !dbg !7585
  store float %mul270, float* %ud, align 4, !dbg !7586
  %243 = load float*, float** %co.addr, align 8, !dbg !7587
  %arrayidx271 = getelementptr inbounds float, float* %243, i64 0, !dbg !7587
  %244 = load float, float* %arrayidx271, align 4, !dbg !7587
  %arrayidx272 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 0, !dbg !7588
  %245 = load float, float* %arrayidx272, align 4, !dbg !7588
  %246 = load float, float* %dv, align 4, !dbg !7589
  %mul273 = fmul float %245, %246, !dbg !7590
  %add274 = fadd float %244, %mul273, !dbg !7591
  %arrayidx275 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7592
  store float %add274, float* %arrayidx275, align 4, !dbg !7593
  %247 = load float*, float** %co.addr, align 8, !dbg !7594
  %arrayidx276 = getelementptr inbounds float, float* %247, i64 1, !dbg !7594
  %248 = load float, float* %arrayidx276, align 4, !dbg !7594
  %arrayidx277 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 1, !dbg !7595
  %249 = load float, float* %arrayidx277, align 4, !dbg !7595
  %250 = load float, float* %dv, align 4, !dbg !7596
  %mul278 = fmul float %249, %250, !dbg !7597
  %add279 = fadd float %248, %mul278, !dbg !7598
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 1, !dbg !7599
  store float %add279, float* %arrayidx280, align 4, !dbg !7600
  %251 = load float*, float** %co.addr, align 8, !dbg !7601
  %arrayidx281 = getelementptr inbounds float, float* %251, i64 2, !dbg !7601
  %252 = load float, float* %arrayidx281, align 4, !dbg !7601
  %arrayidx282 = getelementptr inbounds [3 x float], [3 x float]* %tv, i64 0, i64 2, !dbg !7602
  %253 = load float, float* %arrayidx282, align 4, !dbg !7602
  %254 = load float, float* %dv, align 4, !dbg !7603
  %mul283 = fmul float %253, %254, !dbg !7604
  %add284 = fadd float %252, %mul283, !dbg !7605
  %arrayidx285 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 2, !dbg !7606
  store float %add284, float* %arrayidx285, align 4, !dbg !7607
  %255 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7608
  %256 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7609
  %257 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7610
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %tco, i64 0, i64 0, !dbg !7611
  %258 = load float*, float** %dx.addr, align 8, !dbg !7612
  %259 = load float*, float** %dy.addr, align 8, !dbg !7613
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7614
  %260 = load float*, float** %dxt.addr, align 8, !dbg !7615
  %261 = load float*, float** %dyt.addr, align 8, !dbg !7616
  call void @texco_mapping(%struct.ShadeInput* %255, %struct.Tex* %256, %struct.MTex* %257, float* %arraydecay286, float* %258, float* %259, float* %arraydecay287, float* %260, float* %261), !dbg !7617
  %262 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7618
  %263 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7619
  %arraydecay288 = getelementptr inbounds [3 x float], [3 x float]* %texv, i64 0, i64 0, !dbg !7620
  %264 = load float*, float** %dxt.addr, align 8, !dbg !7621
  %265 = load float*, float** %dyt.addr, align 8, !dbg !7622
  %266 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7623
  %call289 = call i32 @multitex_mtex(%struct.ShadeInput* %262, %struct.MTex* %263, float* %arraydecay288, float* %264, float* %265, %struct.TexResult* %ttexr, %struct.ImagePool* %266), !dbg !7624
  %267 = load float, float* %idv, align 4, !dbg !7625
  %268 = load float, float* %cd, align 4, !dbg !7626
  %269 = load i32, i32* %fromrgb, align 4, !dbg !7627
  %tobool290 = icmp ne i32 %269, 0, !dbg !7627
  br i1 %tobool290, label %cond.true291, label %cond.false298, !dbg !7627

cond.true291:                                     ; preds = %cond.end267
  %tr292 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7628
  %270 = load float, float* %tr292, align 4, !dbg !7628
  %tg293 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7629
  %271 = load float, float* %tg293, align 8, !dbg !7629
  %add294 = fadd float %270, %271, !dbg !7630
  %tb295 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7631
  %272 = load float, float* %tb295, align 4, !dbg !7631
  %add296 = fadd float %add294, %272, !dbg !7632
  %div297 = fdiv float %add296, 3.000000e+00, !dbg !7633
  br label %cond.end300, !dbg !7627

cond.false298:                                    ; preds = %cond.end267
  %tin299 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7634
  %273 = load float, float* %tin299, align 8, !dbg !7634
  br label %cond.end300, !dbg !7627

cond.end300:                                      ; preds = %cond.false298, %cond.true291
  %cond301 = phi float [ %div297, %cond.true291 ], [ %273, %cond.false298 ], !dbg !7627
  %sub302 = fsub float %268, %cond301, !dbg !7635
  %mul303 = fmul float %267, %sub302, !dbg !7636
  store float %mul303, float* %vd, align 4, !dbg !7637
  br label %if.end304

if.end304:                                        ; preds = %cond.end300, %cond.end159
  %274 = load float, float* %ud, align 4, !dbg !7638
  %275 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7639
  %nn305 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %275, i32 0, i32 2, !dbg !7640
  %arrayidx306 = getelementptr inbounds [3 x float], [3 x float]* %nn305, i64 0, i64 0, !dbg !7639
  %276 = load float, float* %arrayidx306, align 4, !dbg !7639
  %mul307 = fmul float %274, %276, !dbg !7641
  %277 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7642
  %nu308 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %277, i32 0, i32 0, !dbg !7643
  %arrayidx309 = getelementptr inbounds [3 x float], [3 x float]* %nu308, i64 0, i64 0, !dbg !7642
  %278 = load float, float* %arrayidx309, align 4, !dbg !7644
  %add310 = fadd float %278, %mul307, !dbg !7644
  store float %add310, float* %arrayidx309, align 4, !dbg !7644
  %279 = load float, float* %ud, align 4, !dbg !7645
  %280 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7646
  %nn311 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %280, i32 0, i32 2, !dbg !7647
  %arrayidx312 = getelementptr inbounds [3 x float], [3 x float]* %nn311, i64 0, i64 1, !dbg !7646
  %281 = load float, float* %arrayidx312, align 4, !dbg !7646
  %mul313 = fmul float %279, %281, !dbg !7648
  %282 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7649
  %nu314 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %282, i32 0, i32 0, !dbg !7650
  %arrayidx315 = getelementptr inbounds [3 x float], [3 x float]* %nu314, i64 0, i64 1, !dbg !7649
  %283 = load float, float* %arrayidx315, align 4, !dbg !7651
  %add316 = fadd float %283, %mul313, !dbg !7651
  store float %add316, float* %arrayidx315, align 4, !dbg !7651
  %284 = load float, float* %ud, align 4, !dbg !7652
  %285 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7653
  %nn317 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %285, i32 0, i32 2, !dbg !7654
  %arrayidx318 = getelementptr inbounds [3 x float], [3 x float]* %nn317, i64 0, i64 2, !dbg !7653
  %286 = load float, float* %arrayidx318, align 4, !dbg !7653
  %mul319 = fmul float %284, %286, !dbg !7655
  %287 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7656
  %nu320 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %287, i32 0, i32 0, !dbg !7657
  %arrayidx321 = getelementptr inbounds [3 x float], [3 x float]* %nu320, i64 0, i64 2, !dbg !7656
  %288 = load float, float* %arrayidx321, align 4, !dbg !7658
  %add322 = fadd float %288, %mul319, !dbg !7658
  store float %add322, float* %arrayidx321, align 4, !dbg !7658
  %289 = load float, float* %vd, align 4, !dbg !7659
  %290 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7660
  %nn323 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %290, i32 0, i32 2, !dbg !7661
  %arrayidx324 = getelementptr inbounds [3 x float], [3 x float]* %nn323, i64 0, i64 0, !dbg !7660
  %291 = load float, float* %arrayidx324, align 4, !dbg !7660
  %mul325 = fmul float %289, %291, !dbg !7662
  %292 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7663
  %nv326 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %292, i32 0, i32 1, !dbg !7664
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %nv326, i64 0, i64 0, !dbg !7663
  %293 = load float, float* %arrayidx327, align 4, !dbg !7665
  %add328 = fadd float %293, %mul325, !dbg !7665
  store float %add328, float* %arrayidx327, align 4, !dbg !7665
  %294 = load float, float* %vd, align 4, !dbg !7666
  %295 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7667
  %nn329 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %295, i32 0, i32 2, !dbg !7668
  %arrayidx330 = getelementptr inbounds [3 x float], [3 x float]* %nn329, i64 0, i64 1, !dbg !7667
  %296 = load float, float* %arrayidx330, align 4, !dbg !7667
  %mul331 = fmul float %294, %296, !dbg !7669
  %297 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7670
  %nv332 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %297, i32 0, i32 1, !dbg !7671
  %arrayidx333 = getelementptr inbounds [3 x float], [3 x float]* %nv332, i64 0, i64 1, !dbg !7670
  %298 = load float, float* %arrayidx333, align 4, !dbg !7672
  %add334 = fadd float %298, %mul331, !dbg !7672
  store float %add334, float* %arrayidx333, align 4, !dbg !7672
  %299 = load float, float* %vd, align 4, !dbg !7673
  %300 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7674
  %nn335 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %300, i32 0, i32 2, !dbg !7675
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %nn335, i64 0, i64 2, !dbg !7674
  %301 = load float, float* %arrayidx336, align 4, !dbg !7674
  %mul337 = fmul float %299, %301, !dbg !7676
  %302 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7677
  %nv338 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %302, i32 0, i32 1, !dbg !7678
  %arrayidx339 = getelementptr inbounds [3 x float], [3 x float]* %nv338, i64 0, i64 2, !dbg !7677
  %303 = load float, float* %arrayidx339, align 4, !dbg !7679
  %add340 = fadd float %303, %mul337, !dbg !7679
  store float %add340, float* %arrayidx339, align 4, !dbg !7679
  %304 = load float*, float** %nvec, align 8, !dbg !7680
  %305 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7681
  %nu341 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %305, i32 0, i32 0, !dbg !7682
  %arraydecay342 = getelementptr inbounds [3 x float], [3 x float]* %nu341, i64 0, i64 0, !dbg !7681
  %306 = load %struct.CompatibleBump*, %struct.CompatibleBump** %compat_bump.addr, align 8, !dbg !7683
  %nv343 = getelementptr inbounds %struct.CompatibleBump, %struct.CompatibleBump* %306, i32 0, i32 1, !dbg !7684
  %arraydecay344 = getelementptr inbounds [3 x float], [3 x float]* %nv343, i64 0, i64 0, !dbg !7683
  call void @cross_v3_v3v3(float* %304, float* %arraydecay342, float* %arraydecay344), !dbg !7685
  %307 = load float*, float** %nvec, align 8, !dbg !7686
  %arrayidx345 = getelementptr inbounds float, float* %307, i64 0, !dbg !7686
  %308 = load float, float* %arrayidx345, align 4, !dbg !7686
  %fneg = fneg float %308, !dbg !7687
  %309 = load float*, float** %nvec, align 8, !dbg !7688
  %arrayidx346 = getelementptr inbounds float, float* %309, i64 0, !dbg !7688
  store float %fneg, float* %arrayidx346, align 4, !dbg !7689
  %310 = load float*, float** %nvec, align 8, !dbg !7690
  %arrayidx347 = getelementptr inbounds float, float* %310, i64 1, !dbg !7690
  %311 = load float, float* %arrayidx347, align 4, !dbg !7690
  %fneg348 = fneg float %311, !dbg !7691
  %312 = load float*, float** %nvec, align 8, !dbg !7692
  %arrayidx349 = getelementptr inbounds float, float* %312, i64 1, !dbg !7692
  store float %fneg348, float* %arrayidx349, align 4, !dbg !7693
  %313 = load float*, float** %nvec, align 8, !dbg !7694
  %arrayidx350 = getelementptr inbounds float, float* %313, i64 2, !dbg !7694
  %314 = load float, float* %arrayidx350, align 4, !dbg !7694
  %fneg351 = fneg float %314, !dbg !7695
  %315 = load float*, float** %nvec, align 8, !dbg !7696
  %arrayidx352 = getelementptr inbounds float, float* %315, i64 2, !dbg !7696
  store float %fneg351, float* %arrayidx352, align 4, !dbg !7697
  %316 = load float*, float** %nvec, align 8, !dbg !7698
  %317 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7699
  %nor353 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %317, i32 0, i32 6, !dbg !7700
  store float* %316, float** %nor353, align 8, !dbg !7701
  %318 = load i32, i32* %rgbnor, align 4, !dbg !7702
  %or = or i32 %318, 2, !dbg !7702
  store i32 %or, i32* %rgbnor, align 4, !dbg !7702
  %319 = load i32, i32* %rgbnor, align 4, !dbg !7703
  ret i32 %319, !dbg !7704
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ntap_bump_compute(%struct.NTapBump* %ntap_bump, %struct.ShadeInput* %shi, %struct.MTex* %mtex, %struct.Tex* %tex, %struct.TexResult* %texres, float %Tnor, float* %co, float* %dx, float* %dy, float* %texvec, float* %dxt, float* %dyt, %struct.ImagePool* %pool) #0 !dbg !7705 {
entry:
  %ntap_bump.addr = alloca %struct.NTapBump*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %tex.addr = alloca %struct.Tex*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %Tnor.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %dx.addr = alloca float*, align 8
  %dy.addr = alloca float*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %ttexr = alloca %struct.TexResult, align 8
  %fromrgb = alloca i32, align 4
  %Hscale = alloca float, align 4
  %dimx = alloca i32, align 4
  %dimy = alloca i32, align 4
  %imag_tspace_dimension_x = alloca i32, align 4
  %aspect = alloca float, align 4
  %nr_channels = alloca i32, align 4
  %c = alloca i32, align 4
  %rgbnor = alloca i32, align 4
  %iBumpSpace = alloca i32, align 4
  %dHdx = alloca float, align 4
  %dHdy = alloca float, align 4
  %found_deriv_map = alloca i32, align 4
  %nvec = alloca float*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %dBdu = alloca float, align 4
  %dBdv = alloca float, align 4
  %auto_bump = alloca float, align 4
  %s = alloca float, align 4
  %fVirtDim = alloca float, align 4
  %STll = alloca [3 x float], align 4
  %STlr = alloca [3 x float], align 4
  %STul = alloca [3 x float], align 4
  %Hll = alloca float, align 4
  %Hlr = alloca float, align 4
  %Hul = alloca float, align 4
  %STc = alloca [3 x float], align 4
  %STl = alloca [3 x float], align 4
  %STr = alloca [3 x float], align 4
  %STd = alloca [3 x float], align 4
  %STu = alloca [3 x float], align 4
  %Hl = alloca float, align 4
  %Hr = alloca float, align 4
  %Hd = alloca float, align 4
  %Hu = alloca float, align 4
  %xyz = alloca i32, align 4
  %fDet = alloca float, align 4
  %abs_fDet = alloca float, align 4
  %fMagnitude = alloca float, align 4
  %obj2view = alloca [3 x [3 x float]], align 16
  %view2obj = alloca [3 x [3 x float]], align 16
  %tmp = alloca [4 x [4 x float]], align 16
  %dPdx = alloca [3 x float], align 4
  %dPdy = alloca [3 x float], align 4
  %vN = alloca [3 x float], align 4
  %vec = alloca [2 x float], align 4
  %imag_tspace_dimension_y = alloca float, align 4
  %vSurfGrad_compi = alloca float, align 4
  store %struct.NTapBump* %ntap_bump, %struct.NTapBump** %ntap_bump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NTapBump** %ntap_bump.addr, metadata !7708, metadata !DIExpression()), !dbg !7709
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !7710, metadata !DIExpression()), !dbg !7711
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !7712, metadata !DIExpression()), !dbg !7713
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !7716, metadata !DIExpression()), !dbg !7717
  store float %Tnor, float* %Tnor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Tnor.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store float* %dx, float** %dx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dx.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  store float* %dy, float** %dy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dy.addr, metadata !7724, metadata !DIExpression()), !dbg !7725
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata %struct.TexResult* %ttexr, metadata !7734, metadata !DIExpression()), !dbg !7735
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !7736
  store float 0.000000e+00, float* %tin, align 8, !dbg !7736
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !7736
  store float 0.000000e+00, float* %tr, align 4, !dbg !7736
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 2, !dbg !7736
  store float 0.000000e+00, float* %tg, align 8, !dbg !7736
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 3, !dbg !7736
  store float 0.000000e+00, float* %tb, align 4, !dbg !7736
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 4, !dbg !7736
  store float 0.000000e+00, float* %ta, align 8, !dbg !7736
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 5, !dbg !7736
  %0 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7737
  %talpha1 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %0, i32 0, i32 5, !dbg !7738
  %1 = load i32, i32* %talpha1, align 4, !dbg !7738
  store i32 %1, i32* %talpha, align 4, !dbg !7736
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 6, !dbg !7736
  store float* null, float** %nor, align 8, !dbg !7736
  call void @llvm.dbg.declare(metadata i32* %fromrgb, metadata !7739, metadata !DIExpression()), !dbg !7740
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7741
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 32, !dbg !7742
  %3 = load i16, i16* %type, align 8, !dbg !7742
  %conv = sext i16 %3 to i32, !dbg !7741
  %cmp = icmp eq i32 %conv, 8, !dbg !7743
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7744

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7745
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 31, !dbg !7746
  %5 = load i16, i16* %flag, align 2, !dbg !7746
  %conv3 = sext i16 %5 to i32, !dbg !7745
  %and = and i32 %conv3, 1, !dbg !7747
  %cmp4 = icmp ne i32 %and, 0, !dbg !7748
  br label %lor.end, !dbg !7744

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !7744
  store i32 %lor.ext, i32* %fromrgb, align 4, !dbg !7740
  call void @llvm.dbg.declare(metadata float* %Hscale, metadata !7749, metadata !DIExpression()), !dbg !7750
  %7 = load float, float* %Tnor.addr, align 4, !dbg !7751
  %fneg = fneg float %7, !dbg !7752
  %8 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7753
  %norfac = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 30, !dbg !7754
  %9 = load float, float* %norfac, align 4, !dbg !7754
  %mul = fmul float %fneg, %9, !dbg !7755
  store float %mul, float* %Hscale, align 4, !dbg !7750
  call void @llvm.dbg.declare(metadata i32* %dimx, metadata !7756, metadata !DIExpression()), !dbg !7757
  store i32 512, i32* %dimx, align 4, !dbg !7757
  call void @llvm.dbg.declare(metadata i32* %dimy, metadata !7758, metadata !DIExpression()), !dbg !7759
  store i32 512, i32* %dimy, align 4, !dbg !7759
  call void @llvm.dbg.declare(metadata i32* %imag_tspace_dimension_x, metadata !7760, metadata !DIExpression()), !dbg !7761
  store i32 1024, i32* %imag_tspace_dimension_x, align 4, !dbg !7761
  call void @llvm.dbg.declare(metadata float* %aspect, metadata !7762, metadata !DIExpression()), !dbg !7763
  store float 1.000000e+00, float* %aspect, align 4, !dbg !7763
  call void @llvm.dbg.declare(metadata i32* %nr_channels, metadata !7764, metadata !DIExpression()), !dbg !7765
  %10 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7766
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %10, i32 0, i32 0, !dbg !7767
  %11 = load i16, i16* %texco, align 8, !dbg !7767
  %conv6 = sext i16 %11 to i32, !dbg !7766
  %cmp7 = icmp eq i32 %conv6, 16, !dbg !7768
  %12 = zext i1 %cmp7 to i64, !dbg !7769
  %cond = select i1 %cmp7, i32 2, i32 3, !dbg !7769
  store i32 %cond, i32* %nr_channels, align 4, !dbg !7765
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata i32* %rgbnor, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.declare(metadata i32* %iBumpSpace, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata float* %dHdx, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.declare(metadata float* %dHdy, metadata !7778, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.declare(metadata i32* %found_deriv_map, metadata !7780, metadata !DIExpression()), !dbg !7781
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7782
  %type9 = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 32, !dbg !7783
  %14 = load i16, i16* %type9, align 8, !dbg !7783
  %conv10 = sext i16 %14 to i32, !dbg !7782
  %cmp11 = icmp eq i32 %conv10, 8, !dbg !7784
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !7785

land.rhs:                                         ; preds = %lor.end
  %15 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7786
  %imaflag = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 30, !dbg !7787
  %16 = load i16, i16* %imaflag, align 4, !dbg !7787
  %conv13 = sext i16 %16 to i32, !dbg !7786
  %and14 = and i32 %conv13, 16384, !dbg !7788
  %tobool = icmp ne i32 %and14, 0, !dbg !7785
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %17 = phi i1 [ false, %lor.end ], [ %tobool, %land.rhs ], !dbg !7789
  %land.ext = zext i1 %17 to i32, !dbg !7785
  store i32 %land.ext, i32* %found_deriv_map, align 4, !dbg !7781
  call void @llvm.dbg.declare(metadata float** %nvec, metadata !7790, metadata !DIExpression()), !dbg !7791
  %18 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7792
  %nor15 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %18, i32 0, i32 6, !dbg !7793
  %19 = load float*, float** %nor15, align 8, !dbg !7793
  store float* %19, float** %nvec, align 8, !dbg !7791
  %20 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7794
  %nor16 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %20, i32 0, i32 6, !dbg !7795
  store float* null, float** %nor16, align 8, !dbg !7796
  %21 = load i32, i32* %found_deriv_map, align 4, !dbg !7797
  %cmp17 = icmp eq i32 %21, 0, !dbg !7799
  br i1 %cmp17, label %if.then, label %if.end28, !dbg !7800

if.then:                                          ; preds = %land.end
  %22 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7801
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %22, i32 0, i32 14, !dbg !7804
  %23 = load i16, i16* %texflag, align 8, !dbg !7804
  %conv19 = sext i16 %23 to i32, !dbg !7801
  %and20 = and i32 %conv19, 2048, !dbg !7805
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7805
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !7806

if.then22:                                        ; preds = %if.then
  %24 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7807
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 54, !dbg !7810
  %25 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7810
  %tobool23 = icmp ne %struct.Image* %25, null, !dbg !7807
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !7811

if.then24:                                        ; preds = %if.then22
  %26 = load float, float* %Hscale, align 4, !dbg !7812
  %mul25 = fmul float %26, 1.300000e+01, !dbg !7812
  store float %mul25, float* %Hscale, align 4, !dbg !7812
  br label %if.end, !dbg !7813

if.end:                                           ; preds = %if.then24, %if.then22
  br label %if.end27, !dbg !7814

if.else:                                          ; preds = %if.then
  %27 = load float, float* %Hscale, align 4, !dbg !7815
  %mul26 = fmul float %27, 0x3FB99999A0000000, !dbg !7815
  store float %mul26, float* %Hscale, align 4, !dbg !7815
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end
  br label %if.end28, !dbg !7816

if.end28:                                         ; preds = %if.end27, %land.end
  %28 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7817
  %init_done = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %28, i32 0, i32 0, !dbg !7819
  %29 = load i32, i32* %init_done, align 4, !dbg !7819
  %tobool29 = icmp ne i32 %29, 0, !dbg !7817
  br i1 %tobool29, label %if.end36, label %if.then30, !dbg !7820

if.then30:                                        ; preds = %if.end28
  %30 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7821
  %vNacc = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %30, i32 0, i32 3, !dbg !7823
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vNacc, i64 0, i64 0, !dbg !7821
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7824
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 16, !dbg !7825
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7824
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay31), !dbg !7826
  %32 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7827
  %vNorg = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %32, i32 0, i32 2, !dbg !7828
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vNorg, i64 0, i64 0, !dbg !7827
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7829
  %vn33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 16, !dbg !7830
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vn33, i64 0, i64 0, !dbg !7829
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay34), !dbg !7831
  %34 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7832
  %fPrevMagnitude = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %34, i32 0, i32 7, !dbg !7833
  store float 1.000000e+00, float* %fPrevMagnitude, align 4, !dbg !7834
  %35 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7835
  %iPrevBumpSpace = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %35, i32 0, i32 1, !dbg !7836
  store i32 0, i32* %iPrevBumpSpace, align 4, !dbg !7837
  %36 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !7838
  %init_done35 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %36, i32 0, i32 0, !dbg !7839
  store i32 1, i32* %init_done35, align 4, !dbg !7840
  br label %if.end36, !dbg !7841

if.end36:                                         ; preds = %if.then30, %if.end28
  %37 = load i32, i32* %found_deriv_map, align 4, !dbg !7842
  %tobool37 = icmp ne i32 %37, 0, !dbg !7842
  br i1 %tobool37, label %if.then43, label %lor.lhs.false, !dbg !7844

lor.lhs.false:                                    ; preds = %if.end36
  %38 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7845
  %texflag38 = getelementptr inbounds %struct.MTex, %struct.MTex* %38, i32 0, i32 14, !dbg !7846
  %39 = load i16, i16* %texflag38, align 8, !dbg !7846
  %conv39 = sext i16 %39 to i32, !dbg !7845
  %and40 = and i32 %conv39, 2048, !dbg !7847
  %cmp41 = icmp ne i32 %and40, 0, !dbg !7848
  br i1 %cmp41, label %if.then43, label %if.end51, !dbg !7849

if.then43:                                        ; preds = %lor.lhs.false, %if.end36
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !7850, metadata !DIExpression()), !dbg !7852
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7853
  %ima44 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 54, !dbg !7854
  %41 = load %struct.Image*, %struct.Image** %ima44, align 8, !dbg !7854
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7855
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 51, !dbg !7856
  %43 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7857
  %call = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %41, %struct.ImageUser* %iuser, %struct.ImagePool* %43), !dbg !7858
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !7852
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7859
  %tobool45 = icmp ne %struct.ImBuf* %44, null, !dbg !7859
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !7861

if.then46:                                        ; preds = %if.then43
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7862
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 2, !dbg !7864
  %46 = load i32, i32* %x, align 8, !dbg !7864
  store i32 %46, i32* %dimx, align 4, !dbg !7865
  %47 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7866
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %47, i32 0, i32 3, !dbg !7867
  %48 = load i32, i32* %y, align 4, !dbg !7867
  store i32 %48, i32* %dimy, align 4, !dbg !7868
  %49 = load i32, i32* %dimy, align 4, !dbg !7869
  %conv47 = sitofp i32 %49 to float, !dbg !7870
  %50 = load i32, i32* %dimx, align 4, !dbg !7871
  %conv48 = sitofp i32 %50 to float, !dbg !7871
  %div = fdiv float %conv47, %conv48, !dbg !7872
  store float %div, float* %aspect, align 4, !dbg !7873
  br label %if.end49, !dbg !7874

if.end49:                                         ; preds = %if.then46, %if.then43
  %51 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7875
  %ima50 = getelementptr inbounds %struct.Tex, %struct.Tex* %51, i32 0, i32 54, !dbg !7876
  %52 = load %struct.Image*, %struct.Image** %ima50, align 8, !dbg !7876
  %53 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7877
  %54 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7878
  call void @BKE_image_pool_release_ibuf(%struct.Image* %52, %struct.ImBuf* %53, %struct.ImagePool* %54), !dbg !7879
  br label %if.end51, !dbg !7880

if.end51:                                         ; preds = %if.end49, %lor.lhs.false
  %55 = load i32, i32* %found_deriv_map, align 4, !dbg !7881
  %tobool52 = icmp ne i32 %55, 0, !dbg !7881
  br i1 %tobool52, label %if.then53, label %if.else96, !dbg !7883

if.then53:                                        ; preds = %if.end51
  call void @llvm.dbg.declare(metadata float* %dBdu, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.declare(metadata float* %dBdv, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata float* %auto_bump, metadata !7889, metadata !DIExpression()), !dbg !7890
  store float 1.000000e+00, float* %auto_bump, align 4, !dbg !7890
  call void @llvm.dbg.declare(metadata float* %s, metadata !7891, metadata !DIExpression()), !dbg !7892
  store float 1.000000e+00, float* %s, align 4, !dbg !7892
  %56 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7893
  %57 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !7894
  %58 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7895
  %59 = load float*, float** %co.addr, align 8, !dbg !7896
  %60 = load float*, float** %dx.addr, align 8, !dbg !7897
  %61 = load float*, float** %dy.addr, align 8, !dbg !7898
  %62 = load float*, float** %texvec.addr, align 8, !dbg !7899
  %63 = load float*, float** %dxt.addr, align 8, !dbg !7900
  %64 = load float*, float** %dyt.addr, align 8, !dbg !7901
  call void @texco_mapping(%struct.ShadeInput* %56, %struct.Tex* %57, %struct.MTex* %58, float* %59, float* %60, float* %61, float* %62, float* %63, float* %64), !dbg !7902
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7903
  %66 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7904
  %67 = load float*, float** %texvec.addr, align 8, !dbg !7905
  %68 = load float*, float** %dxt.addr, align 8, !dbg !7906
  %69 = load float*, float** %dyt.addr, align 8, !dbg !7907
  %70 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7908
  %71 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !7909
  %call54 = call i32 @multitex_mtex(%struct.ShadeInput* %65, %struct.MTex* %66, float* %67, float* %68, float* %69, %struct.TexResult* %70, %struct.ImagePool* %71), !dbg !7910
  store i32 %call54, i32* %rgbnor, align 4, !dbg !7911
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7912
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %72, i32 0, i32 4, !dbg !7914
  %73 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7914
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %73, i32 0, i32 2, !dbg !7915
  %74 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7915
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 120, !dbg !7916
  %75 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !7916
  %tobool55 = icmp ne %struct.DerivedMesh* %75, null, !dbg !7912
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !7917

if.then56:                                        ; preds = %if.then53
  %76 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !7918
  %obr57 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %76, i32 0, i32 4, !dbg !7920
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr57, align 8, !dbg !7920
  %ob58 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %77, i32 0, i32 2, !dbg !7921
  %78 = load %struct.Object*, %struct.Object** %ob58, align 8, !dbg !7921
  %derivedFinal59 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 120, !dbg !7922
  %79 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal59, align 8, !dbg !7922
  %auto_bump_scale = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %79, i32 0, i32 15, !dbg !7923
  %80 = load float, float* %auto_bump_scale, align 4, !dbg !7923
  store float %80, float* %auto_bump, align 4, !dbg !7924
  br label %if.end60, !dbg !7925

if.end60:                                         ; preds = %if.then56, %if.then53
  call void @llvm.dbg.declare(metadata float* %fVirtDim, metadata !7926, metadata !DIExpression()), !dbg !7928
  %81 = load i32, i32* %dimx, align 4, !dbg !7929
  %82 = load i32, i32* %dimy, align 4, !dbg !7930
  %mul61 = mul nsw i32 %81, %82, !dbg !7931
  %conv62 = sitofp i32 %mul61 to float, !dbg !7932
  %83 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7933
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %83, i32 0, i32 12, !dbg !7934
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7933
  %84 = load float, float* %arrayidx, align 8, !dbg !7933
  %mul63 = fmul float %conv62, %84, !dbg !7935
  %85 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7936
  %size64 = getelementptr inbounds %struct.MTex, %struct.MTex* %85, i32 0, i32 12, !dbg !7937
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %size64, i64 0, i64 1, !dbg !7936
  %86 = load float, float* %arrayidx65, align 4, !dbg !7936
  %mul66 = fmul float %mul63, %86, !dbg !7938
  %87 = call float @llvm.fabs.f32(float %mul66), !dbg !7939
  %call67 = call float @sqrtf(float %87) #7, !dbg !7940
  store float %call67, float* %fVirtDim, align 4, !dbg !7928
  %88 = load float, float* %fVirtDim, align 4, !dbg !7941
  %cmp68 = fcmp ogt float %88, 0x3E80000000000000, !dbg !7941
  br i1 %cmp68, label %cond.true, label %cond.false, !dbg !7941

cond.true:                                        ; preds = %if.end60
  %89 = load float, float* %fVirtDim, align 4, !dbg !7941
  br label %cond.end, !dbg !7941

cond.false:                                       ; preds = %if.end60
  br label %cond.end, !dbg !7941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond70 = phi float [ %89, %cond.true ], [ 0x3E80000000000000, %cond.false ], !dbg !7941
  %90 = load float, float* %auto_bump, align 4, !dbg !7942
  %div71 = fdiv float %90, %cond70, !dbg !7942
  store float %div71, float* %auto_bump, align 4, !dbg !7942
  %91 = load float, float* %auto_bump, align 4, !dbg !7943
  %92 = load float, float* %Hscale, align 4, !dbg !7944
  %mul72 = fmul float %91, %92, !dbg !7945
  %93 = load i32, i32* %dimx, align 4, !dbg !7946
  %conv73 = sitofp i32 %93 to float, !dbg !7946
  %mul74 = fmul float %mul72, %conv73, !dbg !7947
  %94 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7948
  %tr75 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %94, i32 0, i32 1, !dbg !7949
  %95 = load float, float* %tr75, align 4, !dbg !7949
  %mul76 = fmul float 2.000000e+00, %95, !dbg !7950
  %sub = fsub float %mul76, 1.000000e+00, !dbg !7951
  %mul77 = fmul float %mul74, %sub, !dbg !7952
  store float %mul77, float* %dBdu, align 4, !dbg !7953
  %96 = load float, float* %auto_bump, align 4, !dbg !7954
  %97 = load float, float* %Hscale, align 4, !dbg !7955
  %mul78 = fmul float %96, %97, !dbg !7956
  %98 = load i32, i32* %dimy, align 4, !dbg !7957
  %conv79 = sitofp i32 %98 to float, !dbg !7957
  %mul80 = fmul float %mul78, %conv79, !dbg !7958
  %99 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !7959
  %tg81 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %99, i32 0, i32 2, !dbg !7960
  %100 = load float, float* %tg81, align 8, !dbg !7960
  %mul82 = fmul float 2.000000e+00, %100, !dbg !7961
  %sub83 = fsub float %mul82, 1.000000e+00, !dbg !7962
  %mul84 = fmul float %mul80, %sub83, !dbg !7963
  store float %mul84, float* %dBdv, align 4, !dbg !7964
  %101 = load float, float* %dBdu, align 4, !dbg !7965
  %102 = load float*, float** %dxt.addr, align 8, !dbg !7966
  %arrayidx85 = getelementptr inbounds float, float* %102, i64 0, !dbg !7966
  %103 = load float, float* %arrayidx85, align 4, !dbg !7966
  %mul86 = fmul float %101, %103, !dbg !7967
  %104 = load float, float* %s, align 4, !dbg !7968
  %105 = load float, float* %dBdv, align 4, !dbg !7969
  %mul87 = fmul float %104, %105, !dbg !7970
  %106 = load float*, float** %dxt.addr, align 8, !dbg !7971
  %arrayidx88 = getelementptr inbounds float, float* %106, i64 1, !dbg !7971
  %107 = load float, float* %arrayidx88, align 4, !dbg !7971
  %mul89 = fmul float %mul87, %107, !dbg !7972
  %add = fadd float %mul86, %mul89, !dbg !7973
  store float %add, float* %dHdx, align 4, !dbg !7974
  %108 = load float, float* %dBdu, align 4, !dbg !7975
  %109 = load float*, float** %dyt.addr, align 8, !dbg !7976
  %arrayidx90 = getelementptr inbounds float, float* %109, i64 0, !dbg !7976
  %110 = load float, float* %arrayidx90, align 4, !dbg !7976
  %mul91 = fmul float %108, %110, !dbg !7977
  %111 = load float, float* %s, align 4, !dbg !7978
  %112 = load float, float* %dBdv, align 4, !dbg !7979
  %mul92 = fmul float %111, %112, !dbg !7980
  %113 = load float*, float** %dyt.addr, align 8, !dbg !7981
  %arrayidx93 = getelementptr inbounds float, float* %113, i64 1, !dbg !7981
  %114 = load float, float* %arrayidx93, align 4, !dbg !7981
  %mul94 = fmul float %mul92, %114, !dbg !7982
  %add95 = fadd float %mul91, %mul94, !dbg !7983
  store float %add95, float* %dHdy, align 4, !dbg !7984
  br label %if.end276, !dbg !7985

if.else96:                                        ; preds = %if.end51
  %115 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !7986
  %texflag97 = getelementptr inbounds %struct.MTex, %struct.MTex* %115, i32 0, i32 14, !dbg !7988
  %116 = load i16, i16* %texflag97, align 8, !dbg !7988
  %conv98 = sext i16 %116 to i32, !dbg !7986
  %and99 = and i32 %conv98, 512, !dbg !7989
  %tobool100 = icmp ne i32 %and99, 0, !dbg !7989
  br i1 %tobool100, label %if.else168, label %if.then101, !dbg !7990

if.then101:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata [3 x float]* %STll, metadata !7991, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata [3 x float]* %STlr, metadata !7994, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.declare(metadata [3 x float]* %STul, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata float* %Hll, metadata !7998, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata float* %Hlr, metadata !8000, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.declare(metadata float* %Hul, metadata !8002, metadata !DIExpression()), !dbg !8003
  %117 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8004
  %118 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8005
  %119 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8006
  %120 = load float*, float** %co.addr, align 8, !dbg !8007
  %121 = load float*, float** %dx.addr, align 8, !dbg !8008
  %122 = load float*, float** %dy.addr, align 8, !dbg !8009
  %123 = load float*, float** %texvec.addr, align 8, !dbg !8010
  %124 = load float*, float** %dxt.addr, align 8, !dbg !8011
  %125 = load float*, float** %dyt.addr, align 8, !dbg !8012
  call void @texco_mapping(%struct.ShadeInput* %117, %struct.Tex* %118, %struct.MTex* %119, float* %120, float* %121, float* %122, float* %123, float* %124, float* %125), !dbg !8013
  store i32 0, i32* %c, align 4, !dbg !8014
  br label %for.cond, !dbg !8016

for.cond:                                         ; preds = %for.inc, %if.then101
  %126 = load i32, i32* %c, align 4, !dbg !8017
  %127 = load i32, i32* %nr_channels, align 4, !dbg !8019
  %cmp102 = icmp slt i32 %126, %127, !dbg !8020
  br i1 %cmp102, label %for.body, label %for.end, !dbg !8021

for.body:                                         ; preds = %for.cond
  %128 = load float*, float** %texvec.addr, align 8, !dbg !8022
  %129 = load i32, i32* %c, align 4, !dbg !8024
  %idxprom = sext i32 %129 to i64, !dbg !8022
  %arrayidx104 = getelementptr inbounds float, float* %128, i64 %idxprom, !dbg !8022
  %130 = load float, float* %arrayidx104, align 4, !dbg !8022
  %131 = load i32, i32* %c, align 4, !dbg !8025
  %idxprom105 = sext i32 %131 to i64, !dbg !8026
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %STll, i64 0, i64 %idxprom105, !dbg !8026
  store float %130, float* %arrayidx106, align 4, !dbg !8027
  %132 = load float*, float** %texvec.addr, align 8, !dbg !8028
  %133 = load i32, i32* %c, align 4, !dbg !8029
  %idxprom107 = sext i32 %133 to i64, !dbg !8028
  %arrayidx108 = getelementptr inbounds float, float* %132, i64 %idxprom107, !dbg !8028
  %134 = load float, float* %arrayidx108, align 4, !dbg !8028
  %135 = load float*, float** %dxt.addr, align 8, !dbg !8030
  %136 = load i32, i32* %c, align 4, !dbg !8031
  %idxprom109 = sext i32 %136 to i64, !dbg !8030
  %arrayidx110 = getelementptr inbounds float, float* %135, i64 %idxprom109, !dbg !8030
  %137 = load float, float* %arrayidx110, align 4, !dbg !8030
  %add111 = fadd float %134, %137, !dbg !8032
  %138 = load i32, i32* %c, align 4, !dbg !8033
  %idxprom112 = sext i32 %138 to i64, !dbg !8034
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %STlr, i64 0, i64 %idxprom112, !dbg !8034
  store float %add111, float* %arrayidx113, align 4, !dbg !8035
  %139 = load float*, float** %texvec.addr, align 8, !dbg !8036
  %140 = load i32, i32* %c, align 4, !dbg !8037
  %idxprom114 = sext i32 %140 to i64, !dbg !8036
  %arrayidx115 = getelementptr inbounds float, float* %139, i64 %idxprom114, !dbg !8036
  %141 = load float, float* %arrayidx115, align 4, !dbg !8036
  %142 = load float*, float** %dyt.addr, align 8, !dbg !8038
  %143 = load i32, i32* %c, align 4, !dbg !8039
  %idxprom116 = sext i32 %143 to i64, !dbg !8038
  %arrayidx117 = getelementptr inbounds float, float* %142, i64 %idxprom116, !dbg !8038
  %144 = load float, float* %arrayidx117, align 4, !dbg !8038
  %add118 = fadd float %141, %144, !dbg !8040
  %145 = load i32, i32* %c, align 4, !dbg !8041
  %idxprom119 = sext i32 %145 to i64, !dbg !8042
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %STul, i64 0, i64 %idxprom119, !dbg !8042
  store float %add118, float* %arrayidx120, align 4, !dbg !8043
  br label %for.inc, !dbg !8044

for.inc:                                          ; preds = %for.body
  %146 = load i32, i32* %c, align 4, !dbg !8045
  %inc = add nsw i32 %146, 1, !dbg !8045
  store i32 %inc, i32* %c, align 4, !dbg !8045
  br label %for.cond, !dbg !8046, !llvm.loop !8047

for.end:                                          ; preds = %for.cond
  %147 = load i32, i32* %nr_channels, align 4, !dbg !8049
  store i32 %147, i32* %c, align 4, !dbg !8051
  br label %for.cond121, !dbg !8052

for.cond121:                                      ; preds = %for.inc131, %for.end
  %148 = load i32, i32* %c, align 4, !dbg !8053
  %cmp122 = icmp slt i32 %148, 3, !dbg !8055
  br i1 %cmp122, label %for.body124, label %for.end133, !dbg !8056

for.body124:                                      ; preds = %for.cond121
  %149 = load i32, i32* %c, align 4, !dbg !8057
  %idxprom125 = sext i32 %149 to i64, !dbg !8059
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %STll, i64 0, i64 %idxprom125, !dbg !8059
  store float 0.000000e+00, float* %arrayidx126, align 4, !dbg !8060
  %150 = load i32, i32* %c, align 4, !dbg !8061
  %idxprom127 = sext i32 %150 to i64, !dbg !8062
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %STlr, i64 0, i64 %idxprom127, !dbg !8062
  store float 0.000000e+00, float* %arrayidx128, align 4, !dbg !8063
  %151 = load i32, i32* %c, align 4, !dbg !8064
  %idxprom129 = sext i32 %151 to i64, !dbg !8065
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %STul, i64 0, i64 %idxprom129, !dbg !8065
  store float 0.000000e+00, float* %arrayidx130, align 4, !dbg !8066
  br label %for.inc131, !dbg !8067

for.inc131:                                       ; preds = %for.body124
  %152 = load i32, i32* %c, align 4, !dbg !8068
  %inc132 = add nsw i32 %152, 1, !dbg !8068
  store i32 %inc132, i32* %c, align 4, !dbg !8068
  br label %for.cond121, !dbg !8069, !llvm.loop !8070

for.end133:                                       ; preds = %for.cond121
  %153 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8072
  %154 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8073
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %STll, i64 0, i64 0, !dbg !8074
  %155 = load float*, float** %dxt.addr, align 8, !dbg !8075
  %156 = load float*, float** %dyt.addr, align 8, !dbg !8076
  %157 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8077
  %158 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8078
  %call135 = call i32 @multitex_mtex(%struct.ShadeInput* %153, %struct.MTex* %154, float* %arraydecay134, float* %155, float* %156, %struct.TexResult* %157, %struct.ImagePool* %158), !dbg !8079
  store i32 %call135, i32* %rgbnor, align 4, !dbg !8080
  %159 = load i32, i32* %fromrgb, align 4, !dbg !8081
  %tobool136 = icmp ne i32 %159, 0, !dbg !8082
  br i1 %tobool136, label %cond.true137, label %cond.false140, !dbg !8082

cond.true137:                                     ; preds = %for.end133
  %160 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8083
  %tr138 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %160, i32 0, i32 1, !dbg !8084
  %call139 = call float @rgb_to_grayscale(float* %tr138), !dbg !8085
  br label %cond.end142, !dbg !8082

cond.false140:                                    ; preds = %for.end133
  %161 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8086
  %tin141 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %161, i32 0, i32 0, !dbg !8087
  %162 = load float, float* %tin141, align 8, !dbg !8087
  br label %cond.end142, !dbg !8082

cond.end142:                                      ; preds = %cond.false140, %cond.true137
  %cond143 = phi float [ %call139, %cond.true137 ], [ %162, %cond.false140 ], !dbg !8082
  store float %cond143, float* %Hll, align 4, !dbg !8088
  %163 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8089
  %164 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8090
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %STlr, i64 0, i64 0, !dbg !8091
  %165 = load float*, float** %dxt.addr, align 8, !dbg !8092
  %166 = load float*, float** %dyt.addr, align 8, !dbg !8093
  %167 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8094
  %call145 = call i32 @multitex_mtex(%struct.ShadeInput* %163, %struct.MTex* %164, float* %arraydecay144, float* %165, float* %166, %struct.TexResult* %ttexr, %struct.ImagePool* %167), !dbg !8095
  %168 = load i32, i32* %fromrgb, align 4, !dbg !8096
  %tobool146 = icmp ne i32 %168, 0, !dbg !8097
  br i1 %tobool146, label %cond.true147, label %cond.false150, !dbg !8097

cond.true147:                                     ; preds = %cond.end142
  %tr148 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8098
  %call149 = call float @rgb_to_grayscale(float* %tr148), !dbg !8099
  br label %cond.end152, !dbg !8097

cond.false150:                                    ; preds = %cond.end142
  %tin151 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8100
  %169 = load float, float* %tin151, align 8, !dbg !8100
  br label %cond.end152, !dbg !8097

cond.end152:                                      ; preds = %cond.false150, %cond.true147
  %cond153 = phi float [ %call149, %cond.true147 ], [ %169, %cond.false150 ], !dbg !8097
  store float %cond153, float* %Hlr, align 4, !dbg !8101
  %170 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8102
  %171 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8103
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %STul, i64 0, i64 0, !dbg !8104
  %172 = load float*, float** %dxt.addr, align 8, !dbg !8105
  %173 = load float*, float** %dyt.addr, align 8, !dbg !8106
  %174 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8107
  %call155 = call i32 @multitex_mtex(%struct.ShadeInput* %170, %struct.MTex* %171, float* %arraydecay154, float* %172, float* %173, %struct.TexResult* %ttexr, %struct.ImagePool* %174), !dbg !8108
  %175 = load i32, i32* %fromrgb, align 4, !dbg !8109
  %tobool156 = icmp ne i32 %175, 0, !dbg !8110
  br i1 %tobool156, label %cond.true157, label %cond.false160, !dbg !8110

cond.true157:                                     ; preds = %cond.end152
  %tr158 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8111
  %call159 = call float @rgb_to_grayscale(float* %tr158), !dbg !8112
  br label %cond.end162, !dbg !8110

cond.false160:                                    ; preds = %cond.end152
  %tin161 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8113
  %176 = load float, float* %tin161, align 8, !dbg !8113
  br label %cond.end162, !dbg !8110

cond.end162:                                      ; preds = %cond.false160, %cond.true157
  %cond163 = phi float [ %call159, %cond.true157 ], [ %176, %cond.false160 ], !dbg !8110
  store float %cond163, float* %Hul, align 4, !dbg !8114
  %177 = load float, float* %Hscale, align 4, !dbg !8115
  %178 = load float, float* %Hlr, align 4, !dbg !8116
  %179 = load float, float* %Hll, align 4, !dbg !8117
  %sub164 = fsub float %178, %179, !dbg !8118
  %mul165 = fmul float %177, %sub164, !dbg !8119
  store float %mul165, float* %dHdx, align 4, !dbg !8120
  %180 = load float, float* %Hscale, align 4, !dbg !8121
  %181 = load float, float* %Hul, align 4, !dbg !8122
  %182 = load float, float* %Hll, align 4, !dbg !8123
  %sub166 = fsub float %181, %182, !dbg !8124
  %mul167 = fmul float %180, %sub166, !dbg !8125
  store float %mul167, float* %dHdy, align 4, !dbg !8126
  br label %if.end275, !dbg !8127

if.else168:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata [3 x float]* %STc, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.declare(metadata [3 x float]* %STl, metadata !8131, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.declare(metadata [3 x float]* %STr, metadata !8133, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata [3 x float]* %STd, metadata !8135, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.declare(metadata [3 x float]* %STu, metadata !8137, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.declare(metadata float* %Hl, metadata !8139, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.declare(metadata float* %Hr, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.declare(metadata float* %Hd, metadata !8143, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.declare(metadata float* %Hu, metadata !8145, metadata !DIExpression()), !dbg !8146
  %183 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8147
  %184 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8148
  %185 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8149
  %186 = load float*, float** %co.addr, align 8, !dbg !8150
  %187 = load float*, float** %dx.addr, align 8, !dbg !8151
  %188 = load float*, float** %dy.addr, align 8, !dbg !8152
  %189 = load float*, float** %texvec.addr, align 8, !dbg !8153
  %190 = load float*, float** %dxt.addr, align 8, !dbg !8154
  %191 = load float*, float** %dyt.addr, align 8, !dbg !8155
  call void @texco_mapping(%struct.ShadeInput* %183, %struct.Tex* %184, %struct.MTex* %185, float* %186, float* %187, float* %188, float* %189, float* %190, float* %191), !dbg !8156
  store i32 0, i32* %c, align 4, !dbg !8157
  br label %for.cond169, !dbg !8159

for.cond169:                                      ; preds = %for.inc209, %if.else168
  %192 = load i32, i32* %c, align 4, !dbg !8160
  %193 = load i32, i32* %nr_channels, align 4, !dbg !8162
  %cmp170 = icmp slt i32 %192, %193, !dbg !8163
  br i1 %cmp170, label %for.body172, label %for.end211, !dbg !8164

for.body172:                                      ; preds = %for.cond169
  %194 = load float*, float** %texvec.addr, align 8, !dbg !8165
  %195 = load i32, i32* %c, align 4, !dbg !8167
  %idxprom173 = sext i32 %195 to i64, !dbg !8165
  %arrayidx174 = getelementptr inbounds float, float* %194, i64 %idxprom173, !dbg !8165
  %196 = load float, float* %arrayidx174, align 4, !dbg !8165
  %197 = load i32, i32* %c, align 4, !dbg !8168
  %idxprom175 = sext i32 %197 to i64, !dbg !8169
  %arrayidx176 = getelementptr inbounds [3 x float], [3 x float]* %STc, i64 0, i64 %idxprom175, !dbg !8169
  store float %196, float* %arrayidx176, align 4, !dbg !8170
  %198 = load float*, float** %texvec.addr, align 8, !dbg !8171
  %199 = load i32, i32* %c, align 4, !dbg !8172
  %idxprom177 = sext i32 %199 to i64, !dbg !8171
  %arrayidx178 = getelementptr inbounds float, float* %198, i64 %idxprom177, !dbg !8171
  %200 = load float, float* %arrayidx178, align 4, !dbg !8171
  %201 = load float*, float** %dxt.addr, align 8, !dbg !8173
  %202 = load i32, i32* %c, align 4, !dbg !8174
  %idxprom179 = sext i32 %202 to i64, !dbg !8173
  %arrayidx180 = getelementptr inbounds float, float* %201, i64 %idxprom179, !dbg !8173
  %203 = load float, float* %arrayidx180, align 4, !dbg !8173
  %mul181 = fmul float 5.000000e-01, %203, !dbg !8175
  %sub182 = fsub float %200, %mul181, !dbg !8176
  %204 = load i32, i32* %c, align 4, !dbg !8177
  %idxprom183 = sext i32 %204 to i64, !dbg !8178
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %STl, i64 0, i64 %idxprom183, !dbg !8178
  store float %sub182, float* %arrayidx184, align 4, !dbg !8179
  %205 = load float*, float** %texvec.addr, align 8, !dbg !8180
  %206 = load i32, i32* %c, align 4, !dbg !8181
  %idxprom185 = sext i32 %206 to i64, !dbg !8180
  %arrayidx186 = getelementptr inbounds float, float* %205, i64 %idxprom185, !dbg !8180
  %207 = load float, float* %arrayidx186, align 4, !dbg !8180
  %208 = load float*, float** %dxt.addr, align 8, !dbg !8182
  %209 = load i32, i32* %c, align 4, !dbg !8183
  %idxprom187 = sext i32 %209 to i64, !dbg !8182
  %arrayidx188 = getelementptr inbounds float, float* %208, i64 %idxprom187, !dbg !8182
  %210 = load float, float* %arrayidx188, align 4, !dbg !8182
  %mul189 = fmul float 5.000000e-01, %210, !dbg !8184
  %add190 = fadd float %207, %mul189, !dbg !8185
  %211 = load i32, i32* %c, align 4, !dbg !8186
  %idxprom191 = sext i32 %211 to i64, !dbg !8187
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %STr, i64 0, i64 %idxprom191, !dbg !8187
  store float %add190, float* %arrayidx192, align 4, !dbg !8188
  %212 = load float*, float** %texvec.addr, align 8, !dbg !8189
  %213 = load i32, i32* %c, align 4, !dbg !8190
  %idxprom193 = sext i32 %213 to i64, !dbg !8189
  %arrayidx194 = getelementptr inbounds float, float* %212, i64 %idxprom193, !dbg !8189
  %214 = load float, float* %arrayidx194, align 4, !dbg !8189
  %215 = load float*, float** %dyt.addr, align 8, !dbg !8191
  %216 = load i32, i32* %c, align 4, !dbg !8192
  %idxprom195 = sext i32 %216 to i64, !dbg !8191
  %arrayidx196 = getelementptr inbounds float, float* %215, i64 %idxprom195, !dbg !8191
  %217 = load float, float* %arrayidx196, align 4, !dbg !8191
  %mul197 = fmul float 5.000000e-01, %217, !dbg !8193
  %sub198 = fsub float %214, %mul197, !dbg !8194
  %218 = load i32, i32* %c, align 4, !dbg !8195
  %idxprom199 = sext i32 %218 to i64, !dbg !8196
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %STd, i64 0, i64 %idxprom199, !dbg !8196
  store float %sub198, float* %arrayidx200, align 4, !dbg !8197
  %219 = load float*, float** %texvec.addr, align 8, !dbg !8198
  %220 = load i32, i32* %c, align 4, !dbg !8199
  %idxprom201 = sext i32 %220 to i64, !dbg !8198
  %arrayidx202 = getelementptr inbounds float, float* %219, i64 %idxprom201, !dbg !8198
  %221 = load float, float* %arrayidx202, align 4, !dbg !8198
  %222 = load float*, float** %dyt.addr, align 8, !dbg !8200
  %223 = load i32, i32* %c, align 4, !dbg !8201
  %idxprom203 = sext i32 %223 to i64, !dbg !8200
  %arrayidx204 = getelementptr inbounds float, float* %222, i64 %idxprom203, !dbg !8200
  %224 = load float, float* %arrayidx204, align 4, !dbg !8200
  %mul205 = fmul float 5.000000e-01, %224, !dbg !8202
  %add206 = fadd float %221, %mul205, !dbg !8203
  %225 = load i32, i32* %c, align 4, !dbg !8204
  %idxprom207 = sext i32 %225 to i64, !dbg !8205
  %arrayidx208 = getelementptr inbounds [3 x float], [3 x float]* %STu, i64 0, i64 %idxprom207, !dbg !8205
  store float %add206, float* %arrayidx208, align 4, !dbg !8206
  br label %for.inc209, !dbg !8207

for.inc209:                                       ; preds = %for.body172
  %226 = load i32, i32* %c, align 4, !dbg !8208
  %inc210 = add nsw i32 %226, 1, !dbg !8208
  store i32 %inc210, i32* %c, align 4, !dbg !8208
  br label %for.cond169, !dbg !8209, !llvm.loop !8210

for.end211:                                       ; preds = %for.cond169
  %227 = load i32, i32* %nr_channels, align 4, !dbg !8212
  store i32 %227, i32* %c, align 4, !dbg !8214
  br label %for.cond212, !dbg !8215

for.cond212:                                      ; preds = %for.inc226, %for.end211
  %228 = load i32, i32* %c, align 4, !dbg !8216
  %cmp213 = icmp slt i32 %228, 3, !dbg !8218
  br i1 %cmp213, label %for.body215, label %for.end228, !dbg !8219

for.body215:                                      ; preds = %for.cond212
  %229 = load i32, i32* %c, align 4, !dbg !8220
  %idxprom216 = sext i32 %229 to i64, !dbg !8222
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %STc, i64 0, i64 %idxprom216, !dbg !8222
  store float 0.000000e+00, float* %arrayidx217, align 4, !dbg !8223
  %230 = load i32, i32* %c, align 4, !dbg !8224
  %idxprom218 = sext i32 %230 to i64, !dbg !8225
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %STl, i64 0, i64 %idxprom218, !dbg !8225
  store float 0.000000e+00, float* %arrayidx219, align 4, !dbg !8226
  %231 = load i32, i32* %c, align 4, !dbg !8227
  %idxprom220 = sext i32 %231 to i64, !dbg !8228
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %STr, i64 0, i64 %idxprom220, !dbg !8228
  store float 0.000000e+00, float* %arrayidx221, align 4, !dbg !8229
  %232 = load i32, i32* %c, align 4, !dbg !8230
  %idxprom222 = sext i32 %232 to i64, !dbg !8231
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %STd, i64 0, i64 %idxprom222, !dbg !8231
  store float 0.000000e+00, float* %arrayidx223, align 4, !dbg !8232
  %233 = load i32, i32* %c, align 4, !dbg !8233
  %idxprom224 = sext i32 %233 to i64, !dbg !8234
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %STu, i64 0, i64 %idxprom224, !dbg !8234
  store float 0.000000e+00, float* %arrayidx225, align 4, !dbg !8235
  br label %for.inc226, !dbg !8236

for.inc226:                                       ; preds = %for.body215
  %234 = load i32, i32* %c, align 4, !dbg !8237
  %inc227 = add nsw i32 %234, 1, !dbg !8237
  store i32 %inc227, i32* %c, align 4, !dbg !8237
  br label %for.cond212, !dbg !8238, !llvm.loop !8239

for.end228:                                       ; preds = %for.cond212
  %235 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8241
  %236 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8242
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %STc, i64 0, i64 0, !dbg !8243
  %237 = load float*, float** %dxt.addr, align 8, !dbg !8244
  %238 = load float*, float** %dyt.addr, align 8, !dbg !8245
  %239 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8246
  %240 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8247
  %call230 = call i32 @multitex_mtex(%struct.ShadeInput* %235, %struct.MTex* %236, float* %arraydecay229, float* %237, float* %238, %struct.TexResult* %239, %struct.ImagePool* %240), !dbg !8248
  store i32 %call230, i32* %rgbnor, align 4, !dbg !8249
  %241 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8250
  %242 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8251
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %STl, i64 0, i64 0, !dbg !8252
  %243 = load float*, float** %dxt.addr, align 8, !dbg !8253
  %244 = load float*, float** %dyt.addr, align 8, !dbg !8254
  %245 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8255
  %call232 = call i32 @multitex_mtex(%struct.ShadeInput* %241, %struct.MTex* %242, float* %arraydecay231, float* %243, float* %244, %struct.TexResult* %ttexr, %struct.ImagePool* %245), !dbg !8256
  %246 = load i32, i32* %fromrgb, align 4, !dbg !8257
  %tobool233 = icmp ne i32 %246, 0, !dbg !8258
  br i1 %tobool233, label %cond.true234, label %cond.false237, !dbg !8258

cond.true234:                                     ; preds = %for.end228
  %tr235 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8259
  %call236 = call float @rgb_to_grayscale(float* %tr235), !dbg !8260
  br label %cond.end239, !dbg !8258

cond.false237:                                    ; preds = %for.end228
  %tin238 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8261
  %247 = load float, float* %tin238, align 8, !dbg !8261
  br label %cond.end239, !dbg !8258

cond.end239:                                      ; preds = %cond.false237, %cond.true234
  %cond240 = phi float [ %call236, %cond.true234 ], [ %247, %cond.false237 ], !dbg !8258
  store float %cond240, float* %Hl, align 4, !dbg !8262
  %248 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8263
  %249 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8264
  %arraydecay241 = getelementptr inbounds [3 x float], [3 x float]* %STr, i64 0, i64 0, !dbg !8265
  %250 = load float*, float** %dxt.addr, align 8, !dbg !8266
  %251 = load float*, float** %dyt.addr, align 8, !dbg !8267
  %252 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8268
  %call242 = call i32 @multitex_mtex(%struct.ShadeInput* %248, %struct.MTex* %249, float* %arraydecay241, float* %250, float* %251, %struct.TexResult* %ttexr, %struct.ImagePool* %252), !dbg !8269
  %253 = load i32, i32* %fromrgb, align 4, !dbg !8270
  %tobool243 = icmp ne i32 %253, 0, !dbg !8271
  br i1 %tobool243, label %cond.true244, label %cond.false247, !dbg !8271

cond.true244:                                     ; preds = %cond.end239
  %tr245 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8272
  %call246 = call float @rgb_to_grayscale(float* %tr245), !dbg !8273
  br label %cond.end249, !dbg !8271

cond.false247:                                    ; preds = %cond.end239
  %tin248 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8274
  %254 = load float, float* %tin248, align 8, !dbg !8274
  br label %cond.end249, !dbg !8271

cond.end249:                                      ; preds = %cond.false247, %cond.true244
  %cond250 = phi float [ %call246, %cond.true244 ], [ %254, %cond.false247 ], !dbg !8271
  store float %cond250, float* %Hr, align 4, !dbg !8275
  %255 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8276
  %256 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8277
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %STd, i64 0, i64 0, !dbg !8278
  %257 = load float*, float** %dxt.addr, align 8, !dbg !8279
  %258 = load float*, float** %dyt.addr, align 8, !dbg !8280
  %259 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8281
  %call252 = call i32 @multitex_mtex(%struct.ShadeInput* %255, %struct.MTex* %256, float* %arraydecay251, float* %257, float* %258, %struct.TexResult* %ttexr, %struct.ImagePool* %259), !dbg !8282
  %260 = load i32, i32* %fromrgb, align 4, !dbg !8283
  %tobool253 = icmp ne i32 %260, 0, !dbg !8284
  br i1 %tobool253, label %cond.true254, label %cond.false257, !dbg !8284

cond.true254:                                     ; preds = %cond.end249
  %tr255 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8285
  %call256 = call float @rgb_to_grayscale(float* %tr255), !dbg !8286
  br label %cond.end259, !dbg !8284

cond.false257:                                    ; preds = %cond.end249
  %tin258 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8287
  %261 = load float, float* %tin258, align 8, !dbg !8287
  br label %cond.end259, !dbg !8284

cond.end259:                                      ; preds = %cond.false257, %cond.true254
  %cond260 = phi float [ %call256, %cond.true254 ], [ %261, %cond.false257 ], !dbg !8284
  store float %cond260, float* %Hd, align 4, !dbg !8288
  %262 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8289
  %263 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8290
  %arraydecay261 = getelementptr inbounds [3 x float], [3 x float]* %STu, i64 0, i64 0, !dbg !8291
  %264 = load float*, float** %dxt.addr, align 8, !dbg !8292
  %265 = load float*, float** %dyt.addr, align 8, !dbg !8293
  %266 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !8294
  %call262 = call i32 @multitex_mtex(%struct.ShadeInput* %262, %struct.MTex* %263, float* %arraydecay261, float* %264, float* %265, %struct.TexResult* %ttexr, %struct.ImagePool* %266), !dbg !8295
  %267 = load i32, i32* %fromrgb, align 4, !dbg !8296
  %tobool263 = icmp ne i32 %267, 0, !dbg !8297
  br i1 %tobool263, label %cond.true264, label %cond.false267, !dbg !8297

cond.true264:                                     ; preds = %cond.end259
  %tr265 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 1, !dbg !8298
  %call266 = call float @rgb_to_grayscale(float* %tr265), !dbg !8299
  br label %cond.end269, !dbg !8297

cond.false267:                                    ; preds = %cond.end259
  %tin268 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %ttexr, i32 0, i32 0, !dbg !8300
  %268 = load float, float* %tin268, align 8, !dbg !8300
  br label %cond.end269, !dbg !8297

cond.end269:                                      ; preds = %cond.false267, %cond.true264
  %cond270 = phi float [ %call266, %cond.true264 ], [ %268, %cond.false267 ], !dbg !8297
  store float %cond270, float* %Hu, align 4, !dbg !8301
  %269 = load float, float* %Hscale, align 4, !dbg !8302
  %270 = load float, float* %Hr, align 4, !dbg !8303
  %271 = load float, float* %Hl, align 4, !dbg !8304
  %sub271 = fsub float %270, %271, !dbg !8305
  %mul272 = fmul float %269, %sub271, !dbg !8306
  store float %mul272, float* %dHdx, align 4, !dbg !8307
  %272 = load float, float* %Hscale, align 4, !dbg !8308
  %273 = load float, float* %Hu, align 4, !dbg !8309
  %274 = load float, float* %Hd, align 4, !dbg !8310
  %sub273 = fsub float %273, %274, !dbg !8311
  %mul274 = fmul float %272, %sub273, !dbg !8312
  store float %mul274, float* %dHdy, align 4, !dbg !8313
  br label %if.end275

if.end275:                                        ; preds = %cond.end269, %cond.end162
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %cond.end
  %275 = load float*, float** %nvec, align 8, !dbg !8314
  %276 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8315
  %nor277 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %276, i32 0, i32 6, !dbg !8316
  store float* %275, float** %nor277, align 8, !dbg !8317
  %277 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8318
  %texflag278 = getelementptr inbounds %struct.MTex, %struct.MTex* %277, i32 0, i32 14, !dbg !8320
  %278 = load i16, i16* %texflag278, align 8, !dbg !8320
  %conv279 = sext i16 %278 to i32, !dbg !8318
  %and280 = and i32 %conv279, 1024, !dbg !8321
  %tobool281 = icmp ne i32 %and280, 0, !dbg !8321
  br i1 %tobool281, label %if.then282, label %if.else283, !dbg !8322

if.then282:                                       ; preds = %if.end276
  store i32 1, i32* %iBumpSpace, align 4, !dbg !8323
  br label %if.end291, !dbg !8324

if.else283:                                       ; preds = %if.end276
  %279 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8325
  %texflag284 = getelementptr inbounds %struct.MTex, %struct.MTex* %279, i32 0, i32 14, !dbg !8327
  %280 = load i16, i16* %texflag284, align 8, !dbg !8327
  %conv285 = sext i16 %280 to i32, !dbg !8325
  %and286 = and i32 %conv285, 2048, !dbg !8328
  %tobool287 = icmp ne i32 %and286, 0, !dbg !8328
  br i1 %tobool287, label %if.then288, label %if.else289, !dbg !8329

if.then288:                                       ; preds = %if.else283
  store i32 2, i32* %iBumpSpace, align 4, !dbg !8330
  br label %if.end290, !dbg !8331

if.else289:                                       ; preds = %if.else283
  store i32 4, i32* %iBumpSpace, align 4, !dbg !8332
  br label %if.end290

if.end290:                                        ; preds = %if.else289, %if.then288
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then282
  %281 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8333
  %iPrevBumpSpace292 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %281, i32 0, i32 1, !dbg !8335
  %282 = load i32, i32* %iPrevBumpSpace292, align 4, !dbg !8335
  %283 = load i32, i32* %iBumpSpace, align 4, !dbg !8336
  %cmp293 = icmp ne i32 %282, %283, !dbg !8337
  br i1 %cmp293, label %if.then295, label %if.end394, !dbg !8338

if.then295:                                       ; preds = %if.end291
  call void @llvm.dbg.declare(metadata i32* %xyz, metadata !8339, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.declare(metadata float* %fDet, metadata !8342, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.declare(metadata float* %abs_fDet, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata float* %fMagnitude, metadata !8346, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %obj2view, metadata !8348, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %view2obj, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmp, metadata !8352, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.declare(metadata [3 x float]* %dPdx, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata [3 x float]* %dPdy, metadata !8356, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata [3 x float]* %vN, metadata !8358, metadata !DIExpression()), !dbg !8359
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %dPdx, i64 0, i64 0, !dbg !8360
  %284 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8361
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %284, i32 0, i32 78, !dbg !8362
  %arraydecay297 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !8361
  call void @copy_v3_v3(float* %arraydecay296, float* %arraydecay297), !dbg !8363
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %dPdy, i64 0, i64 0, !dbg !8364
  %285 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8365
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %285, i32 0, i32 79, !dbg !8366
  %arraydecay299 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !8365
  call void @copy_v3_v3(float* %arraydecay298, float* %arraydecay299), !dbg !8367
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8368
  %286 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8369
  %vNorg301 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %286, i32 0, i32 2, !dbg !8370
  %arraydecay302 = getelementptr inbounds [3 x float], [3 x float]* %vNorg301, i64 0, i64 0, !dbg !8369
  call void @copy_v3_v3(float* %arraydecay300, float* %arraydecay302), !dbg !8371
  %287 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8372
  %texflag303 = getelementptr inbounds %struct.MTex, %struct.MTex* %287, i32 0, i32 14, !dbg !8374
  %288 = load i16, i16* %texflag303, align 8, !dbg !8374
  %conv304 = sext i16 %288 to i32, !dbg !8372
  %and305 = and i32 %conv304, 1024, !dbg !8375
  %tobool306 = icmp ne i32 %and305, 0, !dbg !8375
  br i1 %tobool306, label %if.then307, label %if.end325, !dbg !8376

if.then307:                                       ; preds = %if.then295
  %arraydecay308 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp, i64 0, i64 0, !dbg !8377
  %289 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8379
  %obr309 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %289, i32 0, i32 4, !dbg !8380
  %290 = load %struct.ObjectRen*, %struct.ObjectRen** %obr309, align 8, !dbg !8380
  %ob310 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %290, i32 0, i32 2, !dbg !8381
  %291 = load %struct.Object*, %struct.Object** %ob310, align 8, !dbg !8381
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %291, i32 0, i32 47, !dbg !8382
  %arraydecay311 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8379
  call void @mul_m4_m4m4([4 x float]* %arraydecay308, [4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 32, i64 0), [4 x float]* %arraydecay311), !dbg !8383
  %arraydecay312 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obj2view, i64 0, i64 0, !dbg !8384
  %arraydecay313 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp, i64 0, i64 0, !dbg !8385
  call void @copy_m3_m4([3 x float]* %arraydecay312, [4 x float]* %arraydecay313), !dbg !8386
  %arraydecay314 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8387
  %arraydecay315 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obj2view, i64 0, i64 0, !dbg !8388
  %call316 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay314, [3 x float]* %arraydecay315), !dbg !8389
  %arraydecay317 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8390
  %arraydecay318 = getelementptr inbounds [3 x float], [3 x float]* %dPdx, i64 0, i64 0, !dbg !8391
  call void @mul_m3_v3([3 x float]* %arraydecay317, float* %arraydecay318), !dbg !8392
  %arraydecay319 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8393
  %arraydecay320 = getelementptr inbounds [3 x float], [3 x float]* %dPdy, i64 0, i64 0, !dbg !8394
  call void @mul_m3_v3([3 x float]* %arraydecay319, float* %arraydecay320), !dbg !8395
  %arraydecay321 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obj2view, i64 0, i64 0, !dbg !8396
  %arraydecay322 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8397
  call void @mul_transposed_m3_v3([3 x float]* %arraydecay321, float* %arraydecay322), !dbg !8398
  %arraydecay323 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8399
  %call324 = call float @normalize_v3(float* %arraydecay323), !dbg !8400
  br label %if.end325, !dbg !8401

if.end325:                                        ; preds = %if.then307, %if.then295
  %292 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8402
  %vR1 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %292, i32 0, i32 4, !dbg !8403
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %vR1, i64 0, i64 0, !dbg !8402
  %arraydecay327 = getelementptr inbounds [3 x float], [3 x float]* %dPdy, i64 0, i64 0, !dbg !8404
  %arraydecay328 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8405
  call void @cross_v3_v3v3(float* %arraydecay326, float* %arraydecay327, float* %arraydecay328), !dbg !8406
  %293 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8407
  %vR2 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %293, i32 0, i32 5, !dbg !8408
  %arraydecay329 = getelementptr inbounds [3 x float], [3 x float]* %vR2, i64 0, i64 0, !dbg !8407
  %arraydecay330 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8409
  %arraydecay331 = getelementptr inbounds [3 x float], [3 x float]* %dPdx, i64 0, i64 0, !dbg !8410
  call void @cross_v3_v3v3(float* %arraydecay329, float* %arraydecay330, float* %arraydecay331), !dbg !8411
  %arraydecay332 = getelementptr inbounds [3 x float], [3 x float]* %dPdx, i64 0, i64 0, !dbg !8412
  %294 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8413
  %vR1333 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %294, i32 0, i32 4, !dbg !8414
  %arraydecay334 = getelementptr inbounds [3 x float], [3 x float]* %vR1333, i64 0, i64 0, !dbg !8413
  %call335 = call float @dot_v3v3(float* %arraydecay332, float* %arraydecay334), !dbg !8415
  store float %call335, float* %fDet, align 4, !dbg !8416
  %295 = load float, float* %fDet, align 4, !dbg !8417
  %cmp336 = fcmp olt float %295, 0.000000e+00, !dbg !8418
  %296 = zext i1 %cmp336 to i64, !dbg !8419
  %cond338 = select i1 %cmp336, float -1.000000e+00, float 1.000000e+00, !dbg !8419
  %297 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8420
  %sgn_det = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %297, i32 0, i32 6, !dbg !8421
  store float %cond338, float* %sgn_det, align 4, !dbg !8422
  %298 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8423
  %sgn_det339 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %298, i32 0, i32 6, !dbg !8424
  %299 = load float, float* %sgn_det339, align 4, !dbg !8424
  %300 = load float, float* %fDet, align 4, !dbg !8425
  %mul340 = fmul float %299, %300, !dbg !8426
  store float %mul340, float* %abs_fDet, align 4, !dbg !8427
  %301 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8428
  %texflag341 = getelementptr inbounds %struct.MTex, %struct.MTex* %301, i32 0, i32 14, !dbg !8430
  %302 = load i16, i16* %texflag341, align 8, !dbg !8430
  %conv342 = sext i16 %302 to i32, !dbg !8428
  %and343 = and i32 %conv342, 2048, !dbg !8431
  %tobool344 = icmp ne i32 %and343, 0, !dbg !8431
  br i1 %tobool344, label %if.then345, label %if.end356, !dbg !8432

if.then345:                                       ; preds = %if.end325
  %303 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8433
  %ima346 = getelementptr inbounds %struct.Tex, %struct.Tex* %303, i32 0, i32 54, !dbg !8436
  %304 = load %struct.Image*, %struct.Image** %ima346, align 8, !dbg !8436
  %tobool347 = icmp ne %struct.Image* %304, null, !dbg !8433
  br i1 %tobool347, label %if.then348, label %if.end355, !dbg !8437

if.then348:                                       ; preds = %if.then345
  %305 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8438
  %vR1349 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %305, i32 0, i32 4, !dbg !8440
  %arraydecay350 = getelementptr inbounds [3 x float], [3 x float]* %vR1349, i64 0, i64 0, !dbg !8438
  %call351 = call float @normalize_v3(float* %arraydecay350), !dbg !8441
  %306 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8442
  %vR2352 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %306, i32 0, i32 5, !dbg !8443
  %arraydecay353 = getelementptr inbounds [3 x float], [3 x float]* %vR2352, i64 0, i64 0, !dbg !8442
  %call354 = call float @normalize_v3(float* %arraydecay353), !dbg !8444
  store float 1.000000e+00, float* %abs_fDet, align 4, !dbg !8445
  br label %if.end355, !dbg !8446

if.end355:                                        ; preds = %if.then348, %if.then345
  br label %if.end356, !dbg !8447

if.end356:                                        ; preds = %if.end355, %if.end325
  %307 = load float, float* %abs_fDet, align 4, !dbg !8448
  store float %307, float* %fMagnitude, align 4, !dbg !8449
  %308 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8450
  %texflag357 = getelementptr inbounds %struct.MTex, %struct.MTex* %308, i32 0, i32 14, !dbg !8452
  %309 = load i16, i16* %texflag357, align 8, !dbg !8452
  %conv358 = sext i16 %309 to i32, !dbg !8450
  %and359 = and i32 %conv358, 1024, !dbg !8453
  %tobool360 = icmp ne i32 %and359, 0, !dbg !8453
  br i1 %tobool360, label %if.then361, label %if.end373, !dbg !8454

if.then361:                                       ; preds = %if.end356
  %arraydecay362 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8455
  %arraydecay363 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8457
  call void @mul_transposed_m3_v3([3 x float]* %arraydecay362, float* %arraydecay363), !dbg !8458
  %arraydecay364 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8459
  %310 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8460
  %vR1365 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %310, i32 0, i32 4, !dbg !8461
  %arraydecay366 = getelementptr inbounds [3 x float], [3 x float]* %vR1365, i64 0, i64 0, !dbg !8460
  call void @mul_transposed_m3_v3([3 x float]* %arraydecay364, float* %arraydecay366), !dbg !8462
  %arraydecay367 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %view2obj, i64 0, i64 0, !dbg !8463
  %311 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8464
  %vR2368 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %311, i32 0, i32 5, !dbg !8465
  %arraydecay369 = getelementptr inbounds [3 x float], [3 x float]* %vR2368, i64 0, i64 0, !dbg !8464
  call void @mul_transposed_m3_v3([3 x float]* %arraydecay367, float* %arraydecay369), !dbg !8466
  %arraydecay370 = getelementptr inbounds [3 x float], [3 x float]* %vN, i64 0, i64 0, !dbg !8467
  %call371 = call float @len_v3(float* %arraydecay370), !dbg !8468
  %312 = load float, float* %fMagnitude, align 4, !dbg !8469
  %mul372 = fmul float %312, %call371, !dbg !8469
  store float %mul372, float* %fMagnitude, align 4, !dbg !8469
  br label %if.end373, !dbg !8470

if.end373:                                        ; preds = %if.then361, %if.end356
  %313 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8471
  %fPrevMagnitude374 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %313, i32 0, i32 7, !dbg !8473
  %314 = load float, float* %fPrevMagnitude374, align 4, !dbg !8473
  %cmp375 = fcmp ogt float %314, 0.000000e+00, !dbg !8474
  br i1 %cmp375, label %if.then377, label %if.end391, !dbg !8475

if.then377:                                       ; preds = %if.end373
  store i32 0, i32* %xyz, align 4, !dbg !8476
  br label %for.cond378, !dbg !8478

for.cond378:                                      ; preds = %for.inc388, %if.then377
  %315 = load i32, i32* %xyz, align 4, !dbg !8479
  %cmp379 = icmp slt i32 %315, 3, !dbg !8481
  br i1 %cmp379, label %for.body381, label %for.end390, !dbg !8482

for.body381:                                      ; preds = %for.cond378
  %316 = load float, float* %fMagnitude, align 4, !dbg !8483
  %317 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8484
  %fPrevMagnitude382 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %317, i32 0, i32 7, !dbg !8485
  %318 = load float, float* %fPrevMagnitude382, align 4, !dbg !8485
  %div383 = fdiv float %316, %318, !dbg !8486
  %319 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8487
  %vNacc384 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %319, i32 0, i32 3, !dbg !8488
  %320 = load i32, i32* %xyz, align 4, !dbg !8489
  %idxprom385 = sext i32 %320 to i64, !dbg !8487
  %arrayidx386 = getelementptr inbounds [3 x float], [3 x float]* %vNacc384, i64 0, i64 %idxprom385, !dbg !8487
  %321 = load float, float* %arrayidx386, align 4, !dbg !8490
  %mul387 = fmul float %321, %div383, !dbg !8490
  store float %mul387, float* %arrayidx386, align 4, !dbg !8490
  br label %for.inc388, !dbg !8487

for.inc388:                                       ; preds = %for.body381
  %322 = load i32, i32* %xyz, align 4, !dbg !8491
  %inc389 = add nsw i32 %322, 1, !dbg !8491
  store i32 %inc389, i32* %xyz, align 4, !dbg !8491
  br label %for.cond378, !dbg !8492, !llvm.loop !8493

for.end390:                                       ; preds = %for.cond378
  br label %if.end391, !dbg !8494

if.end391:                                        ; preds = %for.end390, %if.end373
  %323 = load float, float* %fMagnitude, align 4, !dbg !8495
  %324 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8496
  %fPrevMagnitude392 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %324, i32 0, i32 7, !dbg !8497
  store float %323, float* %fPrevMagnitude392, align 4, !dbg !8498
  %325 = load i32, i32* %iBumpSpace, align 4, !dbg !8499
  %326 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8500
  %iPrevBumpSpace393 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %326, i32 0, i32 1, !dbg !8501
  store i32 %325, i32* %iPrevBumpSpace393, align 4, !dbg !8502
  br label %if.end394, !dbg !8503

if.end394:                                        ; preds = %if.end391, %if.end291
  %327 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8504
  %texflag395 = getelementptr inbounds %struct.MTex, %struct.MTex* %327, i32 0, i32 14, !dbg !8506
  %328 = load i16, i16* %texflag395, align 8, !dbg !8506
  %conv396 = sext i16 %328 to i32, !dbg !8504
  %and397 = and i32 %conv396, 2048, !dbg !8507
  %tobool398 = icmp ne i32 %and397, 0, !dbg !8507
  br i1 %tobool398, label %if.then399, label %if.end425, !dbg !8508

if.then399:                                       ; preds = %if.end394
  %329 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8509
  %ima400 = getelementptr inbounds %struct.Tex, %struct.Tex* %329, i32 0, i32 54, !dbg !8512
  %330 = load %struct.Image*, %struct.Image** %ima400, align 8, !dbg !8512
  %tobool401 = icmp ne %struct.Image* %330, null, !dbg !8509
  br i1 %tobool401, label %if.then402, label %if.end424, !dbg !8513

if.then402:                                       ; preds = %if.then399
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !8514, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.declare(metadata float* %imag_tspace_dimension_y, metadata !8517, metadata !DIExpression()), !dbg !8518
  %331 = load float, float* %aspect, align 4, !dbg !8519
  %mul403 = fmul float %331, 1.024000e+03, !dbg !8520
  store float %mul403, float* %imag_tspace_dimension_y, align 4, !dbg !8518
  %332 = load float*, float** %dxt.addr, align 8, !dbg !8521
  %arrayidx404 = getelementptr inbounds float, float* %332, i64 0, !dbg !8521
  %333 = load float, float* %arrayidx404, align 4, !dbg !8521
  %mul405 = fmul float 1.024000e+03, %333, !dbg !8522
  %arrayidx406 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !8523
  store float %mul405, float* %arrayidx406, align 4, !dbg !8524
  %334 = load float, float* %imag_tspace_dimension_y, align 4, !dbg !8525
  %335 = load float*, float** %dxt.addr, align 8, !dbg !8526
  %arrayidx407 = getelementptr inbounds float, float* %335, i64 1, !dbg !8526
  %336 = load float, float* %arrayidx407, align 4, !dbg !8526
  %mul408 = fmul float %334, %336, !dbg !8527
  %arrayidx409 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !8528
  store float %mul408, float* %arrayidx409, align 4, !dbg !8529
  %arraydecay410 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !8530
  %call411 = call float @len_v2(float* %arraydecay410), !dbg !8531
  %div412 = fdiv float 1.000000e+00, %call411, !dbg !8532
  %337 = load float, float* %dHdx, align 4, !dbg !8533
  %mul413 = fmul float %337, %div412, !dbg !8533
  store float %mul413, float* %dHdx, align 4, !dbg !8533
  %338 = load float*, float** %dyt.addr, align 8, !dbg !8534
  %arrayidx414 = getelementptr inbounds float, float* %338, i64 0, !dbg !8534
  %339 = load float, float* %arrayidx414, align 4, !dbg !8534
  %mul415 = fmul float 1.024000e+03, %339, !dbg !8535
  %arrayidx416 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !8536
  store float %mul415, float* %arrayidx416, align 4, !dbg !8537
  %340 = load float, float* %imag_tspace_dimension_y, align 4, !dbg !8538
  %341 = load float*, float** %dyt.addr, align 8, !dbg !8539
  %arrayidx417 = getelementptr inbounds float, float* %341, i64 1, !dbg !8539
  %342 = load float, float* %arrayidx417, align 4, !dbg !8539
  %mul418 = fmul float %340, %342, !dbg !8540
  %arrayidx419 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !8541
  store float %mul418, float* %arrayidx419, align 4, !dbg !8542
  %arraydecay420 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !8543
  %call421 = call float @len_v2(float* %arraydecay420), !dbg !8544
  %div422 = fdiv float 1.000000e+00, %call421, !dbg !8545
  %343 = load float, float* %dHdy, align 4, !dbg !8546
  %mul423 = fmul float %343, %div422, !dbg !8546
  store float %mul423, float* %dHdy, align 4, !dbg !8546
  br label %if.end424, !dbg !8547

if.end424:                                        ; preds = %if.then402, %if.then399
  br label %if.end425, !dbg !8548

if.end425:                                        ; preds = %if.end424, %if.end394
  store i32 0, i32* %c, align 4, !dbg !8549
  br label %for.cond426, !dbg !8551

for.cond426:                                      ; preds = %for.inc451, %if.end425
  %344 = load i32, i32* %c, align 4, !dbg !8552
  %cmp427 = icmp slt i32 %344, 3, !dbg !8554
  br i1 %cmp427, label %for.body429, label %for.end453, !dbg !8555

for.body429:                                      ; preds = %for.cond426
  call void @llvm.dbg.declare(metadata float* %vSurfGrad_compi, metadata !8556, metadata !DIExpression()), !dbg !8558
  %345 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8559
  %sgn_det430 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %345, i32 0, i32 6, !dbg !8560
  %346 = load float, float* %sgn_det430, align 4, !dbg !8560
  %347 = load float, float* %dHdx, align 4, !dbg !8561
  %348 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8562
  %vR1431 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %348, i32 0, i32 4, !dbg !8563
  %349 = load i32, i32* %c, align 4, !dbg !8564
  %idxprom432 = sext i32 %349 to i64, !dbg !8562
  %arrayidx433 = getelementptr inbounds [3 x float], [3 x float]* %vR1431, i64 0, i64 %idxprom432, !dbg !8562
  %350 = load float, float* %arrayidx433, align 4, !dbg !8562
  %mul434 = fmul float %347, %350, !dbg !8565
  %351 = load float, float* %dHdy, align 4, !dbg !8566
  %352 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8567
  %vR2435 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %352, i32 0, i32 5, !dbg !8568
  %353 = load i32, i32* %c, align 4, !dbg !8569
  %idxprom436 = sext i32 %353 to i64, !dbg !8567
  %arrayidx437 = getelementptr inbounds [3 x float], [3 x float]* %vR2435, i64 0, i64 %idxprom436, !dbg !8567
  %354 = load float, float* %arrayidx437, align 4, !dbg !8567
  %mul438 = fmul float %351, %354, !dbg !8570
  %add439 = fadd float %mul434, %mul438, !dbg !8571
  %mul440 = fmul float %346, %add439, !dbg !8572
  store float %mul440, float* %vSurfGrad_compi, align 4, !dbg !8558
  %355 = load float, float* %vSurfGrad_compi, align 4, !dbg !8573
  %356 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8574
  %vNacc441 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %356, i32 0, i32 3, !dbg !8575
  %357 = load i32, i32* %c, align 4, !dbg !8576
  %idxprom442 = sext i32 %357 to i64, !dbg !8574
  %arrayidx443 = getelementptr inbounds [3 x float], [3 x float]* %vNacc441, i64 0, i64 %idxprom442, !dbg !8574
  %358 = load float, float* %arrayidx443, align 4, !dbg !8577
  %sub444 = fsub float %358, %355, !dbg !8577
  store float %sub444, float* %arrayidx443, align 4, !dbg !8577
  %359 = load %struct.NTapBump*, %struct.NTapBump** %ntap_bump.addr, align 8, !dbg !8578
  %vNacc445 = getelementptr inbounds %struct.NTapBump, %struct.NTapBump* %359, i32 0, i32 3, !dbg !8579
  %360 = load i32, i32* %c, align 4, !dbg !8580
  %idxprom446 = sext i32 %360 to i64, !dbg !8578
  %arrayidx447 = getelementptr inbounds [3 x float], [3 x float]* %vNacc445, i64 0, i64 %idxprom446, !dbg !8578
  %361 = load float, float* %arrayidx447, align 4, !dbg !8578
  %362 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !8581
  %nor448 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %362, i32 0, i32 6, !dbg !8582
  %363 = load float*, float** %nor448, align 8, !dbg !8582
  %364 = load i32, i32* %c, align 4, !dbg !8583
  %idxprom449 = sext i32 %364 to i64, !dbg !8581
  %arrayidx450 = getelementptr inbounds float, float* %363, i64 %idxprom449, !dbg !8581
  store float %361, float* %arrayidx450, align 4, !dbg !8584
  br label %for.inc451, !dbg !8585

for.inc451:                                       ; preds = %for.body429
  %365 = load i32, i32* %c, align 4, !dbg !8586
  %inc452 = add nsw i32 %365, 1, !dbg !8586
  store i32 %inc452, i32* %c, align 4, !dbg !8586
  br label %for.cond426, !dbg !8587, !llvm.loop !8588

for.end453:                                       ; preds = %for.cond426
  %366 = load i32, i32* %rgbnor, align 4, !dbg !8590
  %or = or i32 %366, 2, !dbg !8590
  store i32 %or, i32* %rgbnor, align 4, !dbg !8590
  %367 = load i32, i32* %rgbnor, align 4, !dbg !8591
  ret i32 %367, !dbg !8592
}

; Function Attrs: noinline nounwind uwtable
define internal void @texco_mapping(%struct.ShadeInput* %shi, %struct.Tex* %tex, %struct.MTex* %mtex, float* %co, float* %dx, float* %dy, float* %texvec, float* %dxt, float* %dyt) #0 !dbg !8593 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %tex.addr = alloca %struct.Tex*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %co.addr = alloca float*, align 8
  %dx.addr = alloca float*, align 8
  %dy.addr = alloca float*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %tx = alloca float, align 4
  %ty = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !8600, metadata !DIExpression()), !dbg !8601
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !8602, metadata !DIExpression()), !dbg !8603
  store float* %dx, float** %dx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dx.addr, metadata !8604, metadata !DIExpression()), !dbg !8605
  store float* %dy, float** %dy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dy.addr, metadata !8606, metadata !DIExpression()), !dbg !8607
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8614
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 32, !dbg !8616
  %1 = load i16, i16* %type, align 8, !dbg !8616
  %conv = sext i16 %1 to i32, !dbg !8614
  %cmp = icmp eq i32 %conv, 8, !dbg !8617
  br i1 %cmp, label %if.then, label %if.else206, !dbg !8618

if.then:                                          ; preds = %entry
  %2 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8619
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %2, i32 0, i32 7, !dbg !8621
  %3 = load i8, i8* %projx, align 8, !dbg !8621
  %conv2 = zext i8 %3 to i32, !dbg !8619
  %tobool = icmp ne i32 %conv2, 0, !dbg !8619
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8619

cond.true:                                        ; preds = %if.then
  %4 = load float*, float** %co.addr, align 8, !dbg !8622
  %5 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8623
  %projx3 = getelementptr inbounds %struct.MTex, %struct.MTex* %5, i32 0, i32 7, !dbg !8624
  %6 = load i8, i8* %projx3, align 8, !dbg !8624
  %conv4 = zext i8 %6 to i32, !dbg !8623
  %sub = sub nsw i32 %conv4, 1, !dbg !8625
  %idxprom = sext i32 %sub to i64, !dbg !8622
  %arrayidx = getelementptr inbounds float, float* %4, i64 %idxprom, !dbg !8622
  %7 = load float, float* %arrayidx, align 4, !dbg !8622
  br label %cond.end, !dbg !8619

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !8619

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %7, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !8619
  %8 = load float*, float** %texvec.addr, align 8, !dbg !8626
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !8626
  store float %cond, float* %arrayidx5, align 4, !dbg !8627
  %9 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8628
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %9, i32 0, i32 8, !dbg !8629
  %10 = load i8, i8* %projy, align 1, !dbg !8629
  %conv6 = zext i8 %10 to i32, !dbg !8628
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !8628
  br i1 %tobool7, label %cond.true8, label %cond.false14, !dbg !8628

cond.true8:                                       ; preds = %cond.end
  %11 = load float*, float** %co.addr, align 8, !dbg !8630
  %12 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8631
  %projy9 = getelementptr inbounds %struct.MTex, %struct.MTex* %12, i32 0, i32 8, !dbg !8632
  %13 = load i8, i8* %projy9, align 1, !dbg !8632
  %conv10 = zext i8 %13 to i32, !dbg !8631
  %sub11 = sub nsw i32 %conv10, 1, !dbg !8633
  %idxprom12 = sext i32 %sub11 to i64, !dbg !8630
  %arrayidx13 = getelementptr inbounds float, float* %11, i64 %idxprom12, !dbg !8630
  %14 = load float, float* %arrayidx13, align 4, !dbg !8630
  br label %cond.end15, !dbg !8628

cond.false14:                                     ; preds = %cond.end
  br label %cond.end15, !dbg !8628

cond.end15:                                       ; preds = %cond.false14, %cond.true8
  %cond16 = phi float [ %14, %cond.true8 ], [ 0.000000e+00, %cond.false14 ], !dbg !8628
  %15 = load float*, float** %texvec.addr, align 8, !dbg !8634
  %arrayidx17 = getelementptr inbounds float, float* %15, i64 1, !dbg !8634
  store float %cond16, float* %arrayidx17, align 4, !dbg !8635
  %16 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8636
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %16, i32 0, i32 9, !dbg !8637
  %17 = load i8, i8* %projz, align 2, !dbg !8637
  %conv18 = zext i8 %17 to i32, !dbg !8636
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !8636
  br i1 %tobool19, label %cond.true20, label %cond.false26, !dbg !8636

cond.true20:                                      ; preds = %cond.end15
  %18 = load float*, float** %co.addr, align 8, !dbg !8638
  %19 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8639
  %projz21 = getelementptr inbounds %struct.MTex, %struct.MTex* %19, i32 0, i32 9, !dbg !8640
  %20 = load i8, i8* %projz21, align 2, !dbg !8640
  %conv22 = zext i8 %20 to i32, !dbg !8639
  %sub23 = sub nsw i32 %conv22, 1, !dbg !8641
  %idxprom24 = sext i32 %sub23 to i64, !dbg !8638
  %arrayidx25 = getelementptr inbounds float, float* %18, i64 %idxprom24, !dbg !8638
  %21 = load float, float* %arrayidx25, align 4, !dbg !8638
  br label %cond.end27, !dbg !8636

cond.false26:                                     ; preds = %cond.end15
  br label %cond.end27, !dbg !8636

cond.end27:                                       ; preds = %cond.false26, %cond.true20
  %cond28 = phi float [ %21, %cond.true20 ], [ 0.000000e+00, %cond.false26 ], !dbg !8636
  %22 = load float*, float** %texvec.addr, align 8, !dbg !8642
  %arrayidx29 = getelementptr inbounds float, float* %22, i64 2, !dbg !8642
  store float %cond28, float* %arrayidx29, align 4, !dbg !8643
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8644
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 15, !dbg !8646
  %24 = load i16, i16* %osatex, align 8, !dbg !8646
  %tobool30 = icmp ne i16 %24, 0, !dbg !8644
  br i1 %tobool30, label %if.then31, label %if.end87, !dbg !8647

if.then31:                                        ; preds = %cond.end27
  %25 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8648
  %projx32 = getelementptr inbounds %struct.MTex, %struct.MTex* %25, i32 0, i32 7, !dbg !8651
  %26 = load i8, i8* %projx32, align 8, !dbg !8651
  %tobool33 = icmp ne i8 %26, 0, !dbg !8648
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !8652

if.then34:                                        ; preds = %if.then31
  %27 = load float*, float** %dx.addr, align 8, !dbg !8653
  %28 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8655
  %projx35 = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 7, !dbg !8656
  %29 = load i8, i8* %projx35, align 8, !dbg !8656
  %conv36 = zext i8 %29 to i32, !dbg !8655
  %sub37 = sub nsw i32 %conv36, 1, !dbg !8657
  %idxprom38 = sext i32 %sub37 to i64, !dbg !8653
  %arrayidx39 = getelementptr inbounds float, float* %27, i64 %idxprom38, !dbg !8653
  %30 = load float, float* %arrayidx39, align 4, !dbg !8653
  %31 = load float*, float** %dxt.addr, align 8, !dbg !8658
  %arrayidx40 = getelementptr inbounds float, float* %31, i64 0, !dbg !8658
  store float %30, float* %arrayidx40, align 4, !dbg !8659
  %32 = load float*, float** %dy.addr, align 8, !dbg !8660
  %33 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8661
  %projx41 = getelementptr inbounds %struct.MTex, %struct.MTex* %33, i32 0, i32 7, !dbg !8662
  %34 = load i8, i8* %projx41, align 8, !dbg !8662
  %conv42 = zext i8 %34 to i32, !dbg !8661
  %sub43 = sub nsw i32 %conv42, 1, !dbg !8663
  %idxprom44 = sext i32 %sub43 to i64, !dbg !8660
  %arrayidx45 = getelementptr inbounds float, float* %32, i64 %idxprom44, !dbg !8660
  %35 = load float, float* %arrayidx45, align 4, !dbg !8660
  %36 = load float*, float** %dyt.addr, align 8, !dbg !8664
  %arrayidx46 = getelementptr inbounds float, float* %36, i64 0, !dbg !8664
  store float %35, float* %arrayidx46, align 4, !dbg !8665
  br label %if.end, !dbg !8666

if.else:                                          ; preds = %if.then31
  %37 = load float*, float** %dyt.addr, align 8, !dbg !8667
  %arrayidx47 = getelementptr inbounds float, float* %37, i64 0, !dbg !8667
  store float 0.000000e+00, float* %arrayidx47, align 4, !dbg !8668
  %38 = load float*, float** %dxt.addr, align 8, !dbg !8669
  %arrayidx48 = getelementptr inbounds float, float* %38, i64 0, !dbg !8669
  store float 0.000000e+00, float* %arrayidx48, align 4, !dbg !8670
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then34
  %39 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8671
  %projy49 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 8, !dbg !8673
  %40 = load i8, i8* %projy49, align 1, !dbg !8673
  %tobool50 = icmp ne i8 %40, 0, !dbg !8671
  br i1 %tobool50, label %if.then51, label %if.else64, !dbg !8674

if.then51:                                        ; preds = %if.end
  %41 = load float*, float** %dx.addr, align 8, !dbg !8675
  %42 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8677
  %projy52 = getelementptr inbounds %struct.MTex, %struct.MTex* %42, i32 0, i32 8, !dbg !8678
  %43 = load i8, i8* %projy52, align 1, !dbg !8678
  %conv53 = zext i8 %43 to i32, !dbg !8677
  %sub54 = sub nsw i32 %conv53, 1, !dbg !8679
  %idxprom55 = sext i32 %sub54 to i64, !dbg !8675
  %arrayidx56 = getelementptr inbounds float, float* %41, i64 %idxprom55, !dbg !8675
  %44 = load float, float* %arrayidx56, align 4, !dbg !8675
  %45 = load float*, float** %dxt.addr, align 8, !dbg !8680
  %arrayidx57 = getelementptr inbounds float, float* %45, i64 1, !dbg !8680
  store float %44, float* %arrayidx57, align 4, !dbg !8681
  %46 = load float*, float** %dy.addr, align 8, !dbg !8682
  %47 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8683
  %projy58 = getelementptr inbounds %struct.MTex, %struct.MTex* %47, i32 0, i32 8, !dbg !8684
  %48 = load i8, i8* %projy58, align 1, !dbg !8684
  %conv59 = zext i8 %48 to i32, !dbg !8683
  %sub60 = sub nsw i32 %conv59, 1, !dbg !8685
  %idxprom61 = sext i32 %sub60 to i64, !dbg !8682
  %arrayidx62 = getelementptr inbounds float, float* %46, i64 %idxprom61, !dbg !8682
  %49 = load float, float* %arrayidx62, align 4, !dbg !8682
  %50 = load float*, float** %dyt.addr, align 8, !dbg !8686
  %arrayidx63 = getelementptr inbounds float, float* %50, i64 1, !dbg !8686
  store float %49, float* %arrayidx63, align 4, !dbg !8687
  br label %if.end67, !dbg !8688

if.else64:                                        ; preds = %if.end
  %51 = load float*, float** %dyt.addr, align 8, !dbg !8689
  %arrayidx65 = getelementptr inbounds float, float* %51, i64 1, !dbg !8689
  store float 0.000000e+00, float* %arrayidx65, align 4, !dbg !8690
  %52 = load float*, float** %dxt.addr, align 8, !dbg !8691
  %arrayidx66 = getelementptr inbounds float, float* %52, i64 1, !dbg !8691
  store float 0.000000e+00, float* %arrayidx66, align 4, !dbg !8692
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then51
  %53 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8693
  %projz68 = getelementptr inbounds %struct.MTex, %struct.MTex* %53, i32 0, i32 9, !dbg !8695
  %54 = load i8, i8* %projz68, align 2, !dbg !8695
  %tobool69 = icmp ne i8 %54, 0, !dbg !8693
  br i1 %tobool69, label %if.then70, label %if.else83, !dbg !8696

if.then70:                                        ; preds = %if.end67
  %55 = load float*, float** %dx.addr, align 8, !dbg !8697
  %56 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8699
  %projz71 = getelementptr inbounds %struct.MTex, %struct.MTex* %56, i32 0, i32 9, !dbg !8700
  %57 = load i8, i8* %projz71, align 2, !dbg !8700
  %conv72 = zext i8 %57 to i32, !dbg !8699
  %sub73 = sub nsw i32 %conv72, 1, !dbg !8701
  %idxprom74 = sext i32 %sub73 to i64, !dbg !8697
  %arrayidx75 = getelementptr inbounds float, float* %55, i64 %idxprom74, !dbg !8697
  %58 = load float, float* %arrayidx75, align 4, !dbg !8697
  %59 = load float*, float** %dxt.addr, align 8, !dbg !8702
  %arrayidx76 = getelementptr inbounds float, float* %59, i64 2, !dbg !8702
  store float %58, float* %arrayidx76, align 4, !dbg !8703
  %60 = load float*, float** %dy.addr, align 8, !dbg !8704
  %61 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8705
  %projz77 = getelementptr inbounds %struct.MTex, %struct.MTex* %61, i32 0, i32 9, !dbg !8706
  %62 = load i8, i8* %projz77, align 2, !dbg !8706
  %conv78 = zext i8 %62 to i32, !dbg !8705
  %sub79 = sub nsw i32 %conv78, 1, !dbg !8707
  %idxprom80 = sext i32 %sub79 to i64, !dbg !8704
  %arrayidx81 = getelementptr inbounds float, float* %60, i64 %idxprom80, !dbg !8704
  %63 = load float, float* %arrayidx81, align 4, !dbg !8704
  %64 = load float*, float** %dyt.addr, align 8, !dbg !8708
  %arrayidx82 = getelementptr inbounds float, float* %64, i64 2, !dbg !8708
  store float %63, float* %arrayidx82, align 4, !dbg !8709
  br label %if.end86, !dbg !8710

if.else83:                                        ; preds = %if.end67
  %65 = load float*, float** %dyt.addr, align 8, !dbg !8711
  %arrayidx84 = getelementptr inbounds float, float* %65, i64 2, !dbg !8711
  store float 0.000000e+00, float* %arrayidx84, align 4, !dbg !8712
  %66 = load float*, float** %dxt.addr, align 8, !dbg !8713
  %arrayidx85 = getelementptr inbounds float, float* %66, i64 2, !dbg !8713
  store float 0.000000e+00, float* %arrayidx85, align 4, !dbg !8714
  br label %if.end86

if.end86:                                         ; preds = %if.else83, %if.then70
  br label %if.end87, !dbg !8715

if.end87:                                         ; preds = %if.end86, %cond.end27
  %67 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8716
  %68 = load float*, float** %texvec.addr, align 8, !dbg !8717
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8718
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 1, !dbg !8719
  %70 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8719
  %71 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8720
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %71, i32 0, i32 6, !dbg !8721
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !8720
  %72 = load float*, float** %dxt.addr, align 8, !dbg !8722
  %73 = load float*, float** %dyt.addr, align 8, !dbg !8723
  call void @do_2d_mapping(%struct.MTex* %67, float* %68, %struct.VlakRen* %70, float* %arraydecay, float* %72, float* %73), !dbg !8724
  %74 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8725
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %74, i32 0, i32 12, !dbg !8726
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !8725
  %75 = load float, float* %arrayidx88, align 8, !dbg !8725
  %76 = load float*, float** %texvec.addr, align 8, !dbg !8727
  %arrayidx89 = getelementptr inbounds float, float* %76, i64 0, !dbg !8727
  %77 = load float, float* %arrayidx89, align 4, !dbg !8727
  %sub90 = fsub float %77, 5.000000e-01, !dbg !8728
  %mul = fmul float %75, %sub90, !dbg !8729
  %78 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8730
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %78, i32 0, i32 11, !dbg !8731
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !8730
  %79 = load float, float* %arrayidx91, align 4, !dbg !8730
  %add = fadd float %mul, %79, !dbg !8732
  %add92 = fadd float %add, 5.000000e-01, !dbg !8733
  %80 = load float*, float** %texvec.addr, align 8, !dbg !8734
  %arrayidx93 = getelementptr inbounds float, float* %80, i64 0, !dbg !8734
  store float %add92, float* %arrayidx93, align 4, !dbg !8735
  %81 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8736
  %size94 = getelementptr inbounds %struct.MTex, %struct.MTex* %81, i32 0, i32 12, !dbg !8737
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %size94, i64 0, i64 1, !dbg !8736
  %82 = load float, float* %arrayidx95, align 4, !dbg !8736
  %83 = load float*, float** %texvec.addr, align 8, !dbg !8738
  %arrayidx96 = getelementptr inbounds float, float* %83, i64 1, !dbg !8738
  %84 = load float, float* %arrayidx96, align 4, !dbg !8738
  %sub97 = fsub float %84, 5.000000e-01, !dbg !8739
  %mul98 = fmul float %82, %sub97, !dbg !8740
  %85 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8741
  %ofs99 = getelementptr inbounds %struct.MTex, %struct.MTex* %85, i32 0, i32 11, !dbg !8742
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %ofs99, i64 0, i64 1, !dbg !8741
  %86 = load float, float* %arrayidx100, align 4, !dbg !8741
  %add101 = fadd float %mul98, %86, !dbg !8743
  %add102 = fadd float %add101, 5.000000e-01, !dbg !8744
  %87 = load float*, float** %texvec.addr, align 8, !dbg !8745
  %arrayidx103 = getelementptr inbounds float, float* %87, i64 1, !dbg !8745
  store float %add102, float* %arrayidx103, align 4, !dbg !8746
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8747
  %osatex104 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %88, i32 0, i32 15, !dbg !8749
  %89 = load i16, i16* %osatex104, align 8, !dbg !8749
  %tobool105 = icmp ne i16 %89, 0, !dbg !8747
  br i1 %tobool105, label %if.then106, label %if.end127, !dbg !8750

if.then106:                                       ; preds = %if.end87
  %90 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8751
  %size107 = getelementptr inbounds %struct.MTex, %struct.MTex* %90, i32 0, i32 12, !dbg !8753
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %size107, i64 0, i64 0, !dbg !8751
  %91 = load float, float* %arrayidx108, align 8, !dbg !8751
  %92 = load float*, float** %dxt.addr, align 8, !dbg !8754
  %arrayidx109 = getelementptr inbounds float, float* %92, i64 0, !dbg !8754
  %93 = load float, float* %arrayidx109, align 4, !dbg !8754
  %mul110 = fmul float %91, %93, !dbg !8755
  %94 = load float*, float** %dxt.addr, align 8, !dbg !8756
  %arrayidx111 = getelementptr inbounds float, float* %94, i64 0, !dbg !8756
  store float %mul110, float* %arrayidx111, align 4, !dbg !8757
  %95 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8758
  %size112 = getelementptr inbounds %struct.MTex, %struct.MTex* %95, i32 0, i32 12, !dbg !8759
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %size112, i64 0, i64 1, !dbg !8758
  %96 = load float, float* %arrayidx113, align 4, !dbg !8758
  %97 = load float*, float** %dxt.addr, align 8, !dbg !8760
  %arrayidx114 = getelementptr inbounds float, float* %97, i64 1, !dbg !8760
  %98 = load float, float* %arrayidx114, align 4, !dbg !8760
  %mul115 = fmul float %96, %98, !dbg !8761
  %99 = load float*, float** %dxt.addr, align 8, !dbg !8762
  %arrayidx116 = getelementptr inbounds float, float* %99, i64 1, !dbg !8762
  store float %mul115, float* %arrayidx116, align 4, !dbg !8763
  %100 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8764
  %size117 = getelementptr inbounds %struct.MTex, %struct.MTex* %100, i32 0, i32 12, !dbg !8765
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %size117, i64 0, i64 0, !dbg !8764
  %101 = load float, float* %arrayidx118, align 8, !dbg !8764
  %102 = load float*, float** %dyt.addr, align 8, !dbg !8766
  %arrayidx119 = getelementptr inbounds float, float* %102, i64 0, !dbg !8766
  %103 = load float, float* %arrayidx119, align 4, !dbg !8766
  %mul120 = fmul float %101, %103, !dbg !8767
  %104 = load float*, float** %dyt.addr, align 8, !dbg !8768
  %arrayidx121 = getelementptr inbounds float, float* %104, i64 0, !dbg !8768
  store float %mul120, float* %arrayidx121, align 4, !dbg !8769
  %105 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8770
  %size122 = getelementptr inbounds %struct.MTex, %struct.MTex* %105, i32 0, i32 12, !dbg !8771
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %size122, i64 0, i64 1, !dbg !8770
  %106 = load float, float* %arrayidx123, align 4, !dbg !8770
  %107 = load float*, float** %dyt.addr, align 8, !dbg !8772
  %arrayidx124 = getelementptr inbounds float, float* %107, i64 1, !dbg !8772
  %108 = load float, float* %arrayidx124, align 4, !dbg !8772
  %mul125 = fmul float %106, %108, !dbg !8773
  %109 = load float*, float** %dyt.addr, align 8, !dbg !8774
  %arrayidx126 = getelementptr inbounds float, float* %109, i64 1, !dbg !8774
  store float %mul125, float* %arrayidx126, align 4, !dbg !8775
  br label %if.end127, !dbg !8776

if.end127:                                        ; preds = %if.then106, %if.end87
  %110 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8777
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %110, i32 0, i32 42, !dbg !8779
  %111 = load i16, i16* %extend, align 8, !dbg !8779
  %conv128 = sext i16 %111 to i32, !dbg !8777
  %cmp129 = icmp eq i32 %conv128, 3, !dbg !8780
  br i1 %cmp129, label %land.lhs.true, label %if.end163, !dbg !8781

land.lhs.true:                                    ; preds = %if.end127
  %112 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8782
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %112, i32 0, i32 31, !dbg !8783
  %113 = load i16, i16* %flag, align 2, !dbg !8783
  %conv131 = sext i16 %113 to i32, !dbg !8782
  %and = and i32 %conv131, 128, !dbg !8784
  %tobool132 = icmp ne i32 %and, 0, !dbg !8784
  br i1 %tobool132, label %if.then133, label %if.end163, !dbg !8785

if.then133:                                       ; preds = %land.lhs.true
  %114 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8786
  %texfilter = getelementptr inbounds %struct.Tex, %struct.Tex* %114, i32 0, i32 38, !dbg !8789
  %115 = load i32, i32* %texfilter, align 4, !dbg !8789
  %cmp134 = icmp eq i32 %115, 0, !dbg !8790
  br i1 %cmp134, label %if.then136, label %if.else140, !dbg !8791

if.then136:                                       ; preds = %if.then133
  %116 = load float*, float** %texvec.addr, align 8, !dbg !8792
  %arrayidx137 = getelementptr inbounds float, float* %116, i64 0, !dbg !8792
  %117 = load float, float* %arrayidx137, align 4, !dbg !8792
  %118 = call float @llvm.floor.f32(float %117), !dbg !8793
  %119 = load float*, float** %texvec.addr, align 8, !dbg !8794
  %arrayidx138 = getelementptr inbounds float, float* %119, i64 0, !dbg !8794
  %120 = load float, float* %arrayidx138, align 4, !dbg !8795
  %sub139 = fsub float %120, %118, !dbg !8795
  store float %sub139, float* %arrayidx138, align 4, !dbg !8795
  br label %if.end162, !dbg !8794

if.else140:                                       ; preds = %if.then133
  %121 = load float*, float** %texvec.addr, align 8, !dbg !8796
  %arrayidx141 = getelementptr inbounds float, float* %121, i64 0, !dbg !8796
  %122 = load float, float* %arrayidx141, align 4, !dbg !8796
  %cmp142 = fcmp olt float %122, 0.000000e+00, !dbg !8798
  br i1 %cmp142, label %if.then147, label %lor.lhs.false, !dbg !8799

lor.lhs.false:                                    ; preds = %if.else140
  %123 = load float*, float** %texvec.addr, align 8, !dbg !8800
  %arrayidx144 = getelementptr inbounds float, float* %123, i64 0, !dbg !8800
  %124 = load float, float* %arrayidx144, align 4, !dbg !8800
  %cmp145 = fcmp ogt float %124, 1.000000e+00, !dbg !8801
  br i1 %cmp145, label %if.then147, label %if.end161, !dbg !8802

if.then147:                                       ; preds = %lor.lhs.false, %if.else140
  call void @llvm.dbg.declare(metadata float* %tx, metadata !8803, metadata !DIExpression()), !dbg !8805
  %125 = load float*, float** %texvec.addr, align 8, !dbg !8806
  %arrayidx148 = getelementptr inbounds float, float* %125, i64 0, !dbg !8806
  %126 = load float, float* %arrayidx148, align 4, !dbg !8806
  %mul149 = fmul float 5.000000e-01, %126, !dbg !8807
  store float %mul149, float* %tx, align 4, !dbg !8805
  %127 = load float, float* %tx, align 4, !dbg !8808
  %128 = load float, float* %tx, align 4, !dbg !8809
  %129 = call float @llvm.floor.f32(float %128), !dbg !8810
  %sub150 = fsub float %127, %129, !dbg !8811
  %mul151 = fmul float 2.000000e+00, %sub150, !dbg !8812
  %130 = load float*, float** %texvec.addr, align 8, !dbg !8813
  %arrayidx152 = getelementptr inbounds float, float* %130, i64 0, !dbg !8813
  store float %mul151, float* %arrayidx152, align 4, !dbg !8814
  %131 = load float*, float** %texvec.addr, align 8, !dbg !8815
  %arrayidx153 = getelementptr inbounds float, float* %131, i64 0, !dbg !8815
  %132 = load float, float* %arrayidx153, align 4, !dbg !8815
  %cmp154 = fcmp ogt float %132, 1.000000e+00, !dbg !8817
  br i1 %cmp154, label %if.then156, label %if.end160, !dbg !8818

if.then156:                                       ; preds = %if.then147
  %133 = load float*, float** %texvec.addr, align 8, !dbg !8819
  %arrayidx157 = getelementptr inbounds float, float* %133, i64 0, !dbg !8819
  %134 = load float, float* %arrayidx157, align 4, !dbg !8819
  %sub158 = fsub float 2.000000e+00, %134, !dbg !8820
  %135 = load float*, float** %texvec.addr, align 8, !dbg !8821
  %arrayidx159 = getelementptr inbounds float, float* %135, i64 0, !dbg !8821
  store float %sub158, float* %arrayidx159, align 4, !dbg !8822
  br label %if.end160, !dbg !8821

if.end160:                                        ; preds = %if.then156, %if.then147
  br label %if.end161, !dbg !8823

if.end161:                                        ; preds = %if.end160, %lor.lhs.false
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then136
  br label %if.end163, !dbg !8824

if.end163:                                        ; preds = %if.end162, %land.lhs.true, %if.end127
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8825
  %extend164 = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 42, !dbg !8827
  %137 = load i16, i16* %extend164, align 8, !dbg !8827
  %conv165 = sext i16 %137 to i32, !dbg !8825
  %cmp166 = icmp eq i32 %conv165, 3, !dbg !8828
  br i1 %cmp166, label %land.lhs.true168, label %if.end205, !dbg !8829

land.lhs.true168:                                 ; preds = %if.end163
  %138 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8830
  %flag169 = getelementptr inbounds %struct.Tex, %struct.Tex* %138, i32 0, i32 31, !dbg !8831
  %139 = load i16, i16* %flag169, align 2, !dbg !8831
  %conv170 = sext i16 %139 to i32, !dbg !8830
  %and171 = and i32 %conv170, 256, !dbg !8832
  %tobool172 = icmp ne i32 %and171, 0, !dbg !8832
  br i1 %tobool172, label %if.then173, label %if.end205, !dbg !8833

if.then173:                                       ; preds = %land.lhs.true168
  %140 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !8834
  %texfilter174 = getelementptr inbounds %struct.Tex, %struct.Tex* %140, i32 0, i32 38, !dbg !8837
  %141 = load i32, i32* %texfilter174, align 4, !dbg !8837
  %cmp175 = icmp eq i32 %141, 0, !dbg !8838
  br i1 %cmp175, label %if.then177, label %if.else181, !dbg !8839

if.then177:                                       ; preds = %if.then173
  %142 = load float*, float** %texvec.addr, align 8, !dbg !8840
  %arrayidx178 = getelementptr inbounds float, float* %142, i64 1, !dbg !8840
  %143 = load float, float* %arrayidx178, align 4, !dbg !8840
  %144 = call float @llvm.floor.f32(float %143), !dbg !8841
  %145 = load float*, float** %texvec.addr, align 8, !dbg !8842
  %arrayidx179 = getelementptr inbounds float, float* %145, i64 1, !dbg !8842
  %146 = load float, float* %arrayidx179, align 4, !dbg !8843
  %sub180 = fsub float %146, %144, !dbg !8843
  store float %sub180, float* %arrayidx179, align 4, !dbg !8843
  br label %if.end204, !dbg !8842

if.else181:                                       ; preds = %if.then173
  %147 = load float*, float** %texvec.addr, align 8, !dbg !8844
  %arrayidx182 = getelementptr inbounds float, float* %147, i64 1, !dbg !8844
  %148 = load float, float* %arrayidx182, align 4, !dbg !8844
  %cmp183 = fcmp olt float %148, 0.000000e+00, !dbg !8846
  br i1 %cmp183, label %if.then189, label %lor.lhs.false185, !dbg !8847

lor.lhs.false185:                                 ; preds = %if.else181
  %149 = load float*, float** %texvec.addr, align 8, !dbg !8848
  %arrayidx186 = getelementptr inbounds float, float* %149, i64 1, !dbg !8848
  %150 = load float, float* %arrayidx186, align 4, !dbg !8848
  %cmp187 = fcmp ogt float %150, 1.000000e+00, !dbg !8849
  br i1 %cmp187, label %if.then189, label %if.end203, !dbg !8850

if.then189:                                       ; preds = %lor.lhs.false185, %if.else181
  call void @llvm.dbg.declare(metadata float* %ty, metadata !8851, metadata !DIExpression()), !dbg !8853
  %151 = load float*, float** %texvec.addr, align 8, !dbg !8854
  %arrayidx190 = getelementptr inbounds float, float* %151, i64 1, !dbg !8854
  %152 = load float, float* %arrayidx190, align 4, !dbg !8854
  %mul191 = fmul float 5.000000e-01, %152, !dbg !8855
  store float %mul191, float* %ty, align 4, !dbg !8853
  %153 = load float, float* %ty, align 4, !dbg !8856
  %154 = load float, float* %ty, align 4, !dbg !8857
  %155 = call float @llvm.floor.f32(float %154), !dbg !8858
  %sub192 = fsub float %153, %155, !dbg !8859
  %mul193 = fmul float 2.000000e+00, %sub192, !dbg !8860
  %156 = load float*, float** %texvec.addr, align 8, !dbg !8861
  %arrayidx194 = getelementptr inbounds float, float* %156, i64 1, !dbg !8861
  store float %mul193, float* %arrayidx194, align 4, !dbg !8862
  %157 = load float*, float** %texvec.addr, align 8, !dbg !8863
  %arrayidx195 = getelementptr inbounds float, float* %157, i64 1, !dbg !8863
  %158 = load float, float* %arrayidx195, align 4, !dbg !8863
  %cmp196 = fcmp ogt float %158, 1.000000e+00, !dbg !8865
  br i1 %cmp196, label %if.then198, label %if.end202, !dbg !8866

if.then198:                                       ; preds = %if.then189
  %159 = load float*, float** %texvec.addr, align 8, !dbg !8867
  %arrayidx199 = getelementptr inbounds float, float* %159, i64 1, !dbg !8867
  %160 = load float, float* %arrayidx199, align 4, !dbg !8867
  %sub200 = fsub float 2.000000e+00, %160, !dbg !8868
  %161 = load float*, float** %texvec.addr, align 8, !dbg !8869
  %arrayidx201 = getelementptr inbounds float, float* %161, i64 1, !dbg !8869
  store float %sub200, float* %arrayidx201, align 4, !dbg !8870
  br label %if.end202, !dbg !8869

if.end202:                                        ; preds = %if.then198, %if.then189
  br label %if.end203, !dbg !8871

if.end203:                                        ; preds = %if.end202, %lor.lhs.false185
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then177
  br label %if.end205, !dbg !8872

if.end205:                                        ; preds = %if.end204, %land.lhs.true168, %if.end163
  br label %if.end349, !dbg !8873

if.else206:                                       ; preds = %entry
  %162 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8874
  %size207 = getelementptr inbounds %struct.MTex, %struct.MTex* %162, i32 0, i32 12, !dbg !8876
  %arrayidx208 = getelementptr inbounds [3 x float], [3 x float]* %size207, i64 0, i64 0, !dbg !8874
  %163 = load float, float* %arrayidx208, align 8, !dbg !8874
  %164 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8877
  %projx209 = getelementptr inbounds %struct.MTex, %struct.MTex* %164, i32 0, i32 7, !dbg !8878
  %165 = load i8, i8* %projx209, align 8, !dbg !8878
  %conv210 = zext i8 %165 to i32, !dbg !8877
  %tobool211 = icmp ne i32 %conv210, 0, !dbg !8877
  br i1 %tobool211, label %cond.true212, label %cond.false221, !dbg !8877

cond.true212:                                     ; preds = %if.else206
  %166 = load float*, float** %co.addr, align 8, !dbg !8879
  %167 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8880
  %projx213 = getelementptr inbounds %struct.MTex, %struct.MTex* %167, i32 0, i32 7, !dbg !8881
  %168 = load i8, i8* %projx213, align 8, !dbg !8881
  %conv214 = zext i8 %168 to i32, !dbg !8880
  %sub215 = sub nsw i32 %conv214, 1, !dbg !8882
  %idxprom216 = sext i32 %sub215 to i64, !dbg !8879
  %arrayidx217 = getelementptr inbounds float, float* %166, i64 %idxprom216, !dbg !8879
  %169 = load float, float* %arrayidx217, align 4, !dbg !8879
  %170 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8883
  %ofs218 = getelementptr inbounds %struct.MTex, %struct.MTex* %170, i32 0, i32 11, !dbg !8884
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %ofs218, i64 0, i64 0, !dbg !8883
  %171 = load float, float* %arrayidx219, align 4, !dbg !8883
  %add220 = fadd float %169, %171, !dbg !8885
  br label %cond.end224, !dbg !8877

cond.false221:                                    ; preds = %if.else206
  %172 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8886
  %ofs222 = getelementptr inbounds %struct.MTex, %struct.MTex* %172, i32 0, i32 11, !dbg !8887
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %ofs222, i64 0, i64 0, !dbg !8886
  %173 = load float, float* %arrayidx223, align 4, !dbg !8886
  br label %cond.end224, !dbg !8877

cond.end224:                                      ; preds = %cond.false221, %cond.true212
  %cond225 = phi float [ %add220, %cond.true212 ], [ %173, %cond.false221 ], !dbg !8877
  %mul226 = fmul float %163, %cond225, !dbg !8888
  %174 = load float*, float** %texvec.addr, align 8, !dbg !8889
  %arrayidx227 = getelementptr inbounds float, float* %174, i64 0, !dbg !8889
  store float %mul226, float* %arrayidx227, align 4, !dbg !8890
  %175 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8891
  %size228 = getelementptr inbounds %struct.MTex, %struct.MTex* %175, i32 0, i32 12, !dbg !8892
  %arrayidx229 = getelementptr inbounds [3 x float], [3 x float]* %size228, i64 0, i64 1, !dbg !8891
  %176 = load float, float* %arrayidx229, align 4, !dbg !8891
  %177 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8893
  %projy230 = getelementptr inbounds %struct.MTex, %struct.MTex* %177, i32 0, i32 8, !dbg !8894
  %178 = load i8, i8* %projy230, align 1, !dbg !8894
  %conv231 = zext i8 %178 to i32, !dbg !8893
  %tobool232 = icmp ne i32 %conv231, 0, !dbg !8893
  br i1 %tobool232, label %cond.true233, label %cond.false242, !dbg !8893

cond.true233:                                     ; preds = %cond.end224
  %179 = load float*, float** %co.addr, align 8, !dbg !8895
  %180 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8896
  %projy234 = getelementptr inbounds %struct.MTex, %struct.MTex* %180, i32 0, i32 8, !dbg !8897
  %181 = load i8, i8* %projy234, align 1, !dbg !8897
  %conv235 = zext i8 %181 to i32, !dbg !8896
  %sub236 = sub nsw i32 %conv235, 1, !dbg !8898
  %idxprom237 = sext i32 %sub236 to i64, !dbg !8895
  %arrayidx238 = getelementptr inbounds float, float* %179, i64 %idxprom237, !dbg !8895
  %182 = load float, float* %arrayidx238, align 4, !dbg !8895
  %183 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8899
  %ofs239 = getelementptr inbounds %struct.MTex, %struct.MTex* %183, i32 0, i32 11, !dbg !8900
  %arrayidx240 = getelementptr inbounds [3 x float], [3 x float]* %ofs239, i64 0, i64 1, !dbg !8899
  %184 = load float, float* %arrayidx240, align 4, !dbg !8899
  %add241 = fadd float %182, %184, !dbg !8901
  br label %cond.end245, !dbg !8893

cond.false242:                                    ; preds = %cond.end224
  %185 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8902
  %ofs243 = getelementptr inbounds %struct.MTex, %struct.MTex* %185, i32 0, i32 11, !dbg !8903
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %ofs243, i64 0, i64 1, !dbg !8902
  %186 = load float, float* %arrayidx244, align 4, !dbg !8902
  br label %cond.end245, !dbg !8893

cond.end245:                                      ; preds = %cond.false242, %cond.true233
  %cond246 = phi float [ %add241, %cond.true233 ], [ %186, %cond.false242 ], !dbg !8893
  %mul247 = fmul float %176, %cond246, !dbg !8904
  %187 = load float*, float** %texvec.addr, align 8, !dbg !8905
  %arrayidx248 = getelementptr inbounds float, float* %187, i64 1, !dbg !8905
  store float %mul247, float* %arrayidx248, align 4, !dbg !8906
  %188 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8907
  %size249 = getelementptr inbounds %struct.MTex, %struct.MTex* %188, i32 0, i32 12, !dbg !8908
  %arrayidx250 = getelementptr inbounds [3 x float], [3 x float]* %size249, i64 0, i64 2, !dbg !8907
  %189 = load float, float* %arrayidx250, align 8, !dbg !8907
  %190 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8909
  %projz251 = getelementptr inbounds %struct.MTex, %struct.MTex* %190, i32 0, i32 9, !dbg !8910
  %191 = load i8, i8* %projz251, align 2, !dbg !8910
  %conv252 = zext i8 %191 to i32, !dbg !8909
  %tobool253 = icmp ne i32 %conv252, 0, !dbg !8909
  br i1 %tobool253, label %cond.true254, label %cond.false263, !dbg !8909

cond.true254:                                     ; preds = %cond.end245
  %192 = load float*, float** %co.addr, align 8, !dbg !8911
  %193 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8912
  %projz255 = getelementptr inbounds %struct.MTex, %struct.MTex* %193, i32 0, i32 9, !dbg !8913
  %194 = load i8, i8* %projz255, align 2, !dbg !8913
  %conv256 = zext i8 %194 to i32, !dbg !8912
  %sub257 = sub nsw i32 %conv256, 1, !dbg !8914
  %idxprom258 = sext i32 %sub257 to i64, !dbg !8911
  %arrayidx259 = getelementptr inbounds float, float* %192, i64 %idxprom258, !dbg !8911
  %195 = load float, float* %arrayidx259, align 4, !dbg !8911
  %196 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8915
  %ofs260 = getelementptr inbounds %struct.MTex, %struct.MTex* %196, i32 0, i32 11, !dbg !8916
  %arrayidx261 = getelementptr inbounds [3 x float], [3 x float]* %ofs260, i64 0, i64 2, !dbg !8915
  %197 = load float, float* %arrayidx261, align 4, !dbg !8915
  %add262 = fadd float %195, %197, !dbg !8917
  br label %cond.end266, !dbg !8909

cond.false263:                                    ; preds = %cond.end245
  %198 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8918
  %ofs264 = getelementptr inbounds %struct.MTex, %struct.MTex* %198, i32 0, i32 11, !dbg !8919
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %ofs264, i64 0, i64 2, !dbg !8918
  %199 = load float, float* %arrayidx265, align 4, !dbg !8918
  br label %cond.end266, !dbg !8909

cond.end266:                                      ; preds = %cond.false263, %cond.true254
  %cond267 = phi float [ %add262, %cond.true254 ], [ %199, %cond.false263 ], !dbg !8909
  %mul268 = fmul float %189, %cond267, !dbg !8920
  %200 = load float*, float** %texvec.addr, align 8, !dbg !8921
  %arrayidx269 = getelementptr inbounds float, float* %200, i64 2, !dbg !8921
  store float %mul268, float* %arrayidx269, align 4, !dbg !8922
  %201 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8923
  %osatex270 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %201, i32 0, i32 15, !dbg !8925
  %202 = load i16, i16* %osatex270, align 8, !dbg !8925
  %tobool271 = icmp ne i16 %202, 0, !dbg !8923
  br i1 %tobool271, label %if.then272, label %if.end348, !dbg !8926

if.then272:                                       ; preds = %cond.end266
  %203 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8927
  %projx273 = getelementptr inbounds %struct.MTex, %struct.MTex* %203, i32 0, i32 7, !dbg !8930
  %204 = load i8, i8* %projx273, align 8, !dbg !8930
  %tobool274 = icmp ne i8 %204, 0, !dbg !8927
  br i1 %tobool274, label %if.then275, label %if.else294, !dbg !8931

if.then275:                                       ; preds = %if.then272
  %205 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8932
  %size276 = getelementptr inbounds %struct.MTex, %struct.MTex* %205, i32 0, i32 12, !dbg !8934
  %arrayidx277 = getelementptr inbounds [3 x float], [3 x float]* %size276, i64 0, i64 0, !dbg !8932
  %206 = load float, float* %arrayidx277, align 8, !dbg !8932
  %207 = load float*, float** %dx.addr, align 8, !dbg !8935
  %208 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8936
  %projx278 = getelementptr inbounds %struct.MTex, %struct.MTex* %208, i32 0, i32 7, !dbg !8937
  %209 = load i8, i8* %projx278, align 8, !dbg !8937
  %conv279 = zext i8 %209 to i32, !dbg !8936
  %sub280 = sub nsw i32 %conv279, 1, !dbg !8938
  %idxprom281 = sext i32 %sub280 to i64, !dbg !8935
  %arrayidx282 = getelementptr inbounds float, float* %207, i64 %idxprom281, !dbg !8935
  %210 = load float, float* %arrayidx282, align 4, !dbg !8935
  %mul283 = fmul float %206, %210, !dbg !8939
  %211 = load float*, float** %dxt.addr, align 8, !dbg !8940
  %arrayidx284 = getelementptr inbounds float, float* %211, i64 0, !dbg !8940
  store float %mul283, float* %arrayidx284, align 4, !dbg !8941
  %212 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8942
  %size285 = getelementptr inbounds %struct.MTex, %struct.MTex* %212, i32 0, i32 12, !dbg !8943
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %size285, i64 0, i64 0, !dbg !8942
  %213 = load float, float* %arrayidx286, align 8, !dbg !8942
  %214 = load float*, float** %dy.addr, align 8, !dbg !8944
  %215 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8945
  %projx287 = getelementptr inbounds %struct.MTex, %struct.MTex* %215, i32 0, i32 7, !dbg !8946
  %216 = load i8, i8* %projx287, align 8, !dbg !8946
  %conv288 = zext i8 %216 to i32, !dbg !8945
  %sub289 = sub nsw i32 %conv288, 1, !dbg !8947
  %idxprom290 = sext i32 %sub289 to i64, !dbg !8944
  %arrayidx291 = getelementptr inbounds float, float* %214, i64 %idxprom290, !dbg !8944
  %217 = load float, float* %arrayidx291, align 4, !dbg !8944
  %mul292 = fmul float %213, %217, !dbg !8948
  %218 = load float*, float** %dyt.addr, align 8, !dbg !8949
  %arrayidx293 = getelementptr inbounds float, float* %218, i64 0, !dbg !8949
  store float %mul292, float* %arrayidx293, align 4, !dbg !8950
  br label %if.end297, !dbg !8951

if.else294:                                       ; preds = %if.then272
  %219 = load float*, float** %dyt.addr, align 8, !dbg !8952
  %arrayidx295 = getelementptr inbounds float, float* %219, i64 0, !dbg !8952
  store float 0.000000e+00, float* %arrayidx295, align 4, !dbg !8953
  %220 = load float*, float** %dxt.addr, align 8, !dbg !8954
  %arrayidx296 = getelementptr inbounds float, float* %220, i64 0, !dbg !8954
  store float 0.000000e+00, float* %arrayidx296, align 4, !dbg !8955
  br label %if.end297

if.end297:                                        ; preds = %if.else294, %if.then275
  %221 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8956
  %projy298 = getelementptr inbounds %struct.MTex, %struct.MTex* %221, i32 0, i32 8, !dbg !8958
  %222 = load i8, i8* %projy298, align 1, !dbg !8958
  %tobool299 = icmp ne i8 %222, 0, !dbg !8956
  br i1 %tobool299, label %if.then300, label %if.else319, !dbg !8959

if.then300:                                       ; preds = %if.end297
  %223 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8960
  %size301 = getelementptr inbounds %struct.MTex, %struct.MTex* %223, i32 0, i32 12, !dbg !8962
  %arrayidx302 = getelementptr inbounds [3 x float], [3 x float]* %size301, i64 0, i64 1, !dbg !8960
  %224 = load float, float* %arrayidx302, align 4, !dbg !8960
  %225 = load float*, float** %dx.addr, align 8, !dbg !8963
  %226 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8964
  %projy303 = getelementptr inbounds %struct.MTex, %struct.MTex* %226, i32 0, i32 8, !dbg !8965
  %227 = load i8, i8* %projy303, align 1, !dbg !8965
  %conv304 = zext i8 %227 to i32, !dbg !8964
  %sub305 = sub nsw i32 %conv304, 1, !dbg !8966
  %idxprom306 = sext i32 %sub305 to i64, !dbg !8963
  %arrayidx307 = getelementptr inbounds float, float* %225, i64 %idxprom306, !dbg !8963
  %228 = load float, float* %arrayidx307, align 4, !dbg !8963
  %mul308 = fmul float %224, %228, !dbg !8967
  %229 = load float*, float** %dxt.addr, align 8, !dbg !8968
  %arrayidx309 = getelementptr inbounds float, float* %229, i64 1, !dbg !8968
  store float %mul308, float* %arrayidx309, align 4, !dbg !8969
  %230 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8970
  %size310 = getelementptr inbounds %struct.MTex, %struct.MTex* %230, i32 0, i32 12, !dbg !8971
  %arrayidx311 = getelementptr inbounds [3 x float], [3 x float]* %size310, i64 0, i64 1, !dbg !8970
  %231 = load float, float* %arrayidx311, align 4, !dbg !8970
  %232 = load float*, float** %dy.addr, align 8, !dbg !8972
  %233 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8973
  %projy312 = getelementptr inbounds %struct.MTex, %struct.MTex* %233, i32 0, i32 8, !dbg !8974
  %234 = load i8, i8* %projy312, align 1, !dbg !8974
  %conv313 = zext i8 %234 to i32, !dbg !8973
  %sub314 = sub nsw i32 %conv313, 1, !dbg !8975
  %idxprom315 = sext i32 %sub314 to i64, !dbg !8972
  %arrayidx316 = getelementptr inbounds float, float* %232, i64 %idxprom315, !dbg !8972
  %235 = load float, float* %arrayidx316, align 4, !dbg !8972
  %mul317 = fmul float %231, %235, !dbg !8976
  %236 = load float*, float** %dyt.addr, align 8, !dbg !8977
  %arrayidx318 = getelementptr inbounds float, float* %236, i64 1, !dbg !8977
  store float %mul317, float* %arrayidx318, align 4, !dbg !8978
  br label %if.end322, !dbg !8979

if.else319:                                       ; preds = %if.end297
  %237 = load float*, float** %dyt.addr, align 8, !dbg !8980
  %arrayidx320 = getelementptr inbounds float, float* %237, i64 1, !dbg !8980
  store float 0.000000e+00, float* %arrayidx320, align 4, !dbg !8981
  %238 = load float*, float** %dxt.addr, align 8, !dbg !8982
  %arrayidx321 = getelementptr inbounds float, float* %238, i64 1, !dbg !8982
  store float 0.000000e+00, float* %arrayidx321, align 4, !dbg !8983
  br label %if.end322

if.end322:                                        ; preds = %if.else319, %if.then300
  %239 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8984
  %projz323 = getelementptr inbounds %struct.MTex, %struct.MTex* %239, i32 0, i32 9, !dbg !8986
  %240 = load i8, i8* %projz323, align 2, !dbg !8986
  %tobool324 = icmp ne i8 %240, 0, !dbg !8984
  br i1 %tobool324, label %if.then325, label %if.else344, !dbg !8987

if.then325:                                       ; preds = %if.end322
  %241 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8988
  %size326 = getelementptr inbounds %struct.MTex, %struct.MTex* %241, i32 0, i32 12, !dbg !8990
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %size326, i64 0, i64 2, !dbg !8988
  %242 = load float, float* %arrayidx327, align 8, !dbg !8988
  %243 = load float*, float** %dx.addr, align 8, !dbg !8991
  %244 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8992
  %projz328 = getelementptr inbounds %struct.MTex, %struct.MTex* %244, i32 0, i32 9, !dbg !8993
  %245 = load i8, i8* %projz328, align 2, !dbg !8993
  %conv329 = zext i8 %245 to i32, !dbg !8992
  %sub330 = sub nsw i32 %conv329, 1, !dbg !8994
  %idxprom331 = sext i32 %sub330 to i64, !dbg !8991
  %arrayidx332 = getelementptr inbounds float, float* %243, i64 %idxprom331, !dbg !8991
  %246 = load float, float* %arrayidx332, align 4, !dbg !8991
  %mul333 = fmul float %242, %246, !dbg !8995
  %247 = load float*, float** %dxt.addr, align 8, !dbg !8996
  %arrayidx334 = getelementptr inbounds float, float* %247, i64 2, !dbg !8996
  store float %mul333, float* %arrayidx334, align 4, !dbg !8997
  %248 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !8998
  %size335 = getelementptr inbounds %struct.MTex, %struct.MTex* %248, i32 0, i32 12, !dbg !8999
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %size335, i64 0, i64 2, !dbg !8998
  %249 = load float, float* %arrayidx336, align 8, !dbg !8998
  %250 = load float*, float** %dy.addr, align 8, !dbg !9000
  %251 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9001
  %projz337 = getelementptr inbounds %struct.MTex, %struct.MTex* %251, i32 0, i32 9, !dbg !9002
  %252 = load i8, i8* %projz337, align 2, !dbg !9002
  %conv338 = zext i8 %252 to i32, !dbg !9001
  %sub339 = sub nsw i32 %conv338, 1, !dbg !9003
  %idxprom340 = sext i32 %sub339 to i64, !dbg !9000
  %arrayidx341 = getelementptr inbounds float, float* %250, i64 %idxprom340, !dbg !9000
  %253 = load float, float* %arrayidx341, align 4, !dbg !9000
  %mul342 = fmul float %249, %253, !dbg !9004
  %254 = load float*, float** %dyt.addr, align 8, !dbg !9005
  %arrayidx343 = getelementptr inbounds float, float* %254, i64 2, !dbg !9005
  store float %mul342, float* %arrayidx343, align 4, !dbg !9006
  br label %if.end347, !dbg !9007

if.else344:                                       ; preds = %if.end322
  %255 = load float*, float** %dyt.addr, align 8, !dbg !9008
  %arrayidx345 = getelementptr inbounds float, float* %255, i64 2, !dbg !9008
  store float 0.000000e+00, float* %arrayidx345, align 4, !dbg !9009
  %256 = load float*, float** %dxt.addr, align 8, !dbg !9010
  %arrayidx346 = getelementptr inbounds float, float* %256, i64 2, !dbg !9010
  store float 0.000000e+00, float* %arrayidx346, align 4, !dbg !9011
  br label %if.end347

if.end347:                                        ; preds = %if.else344, %if.then325
  br label %if.end348, !dbg !9012

if.end348:                                        ; preds = %if.end347, %cond.end266
  br label %if.end349

if.end349:                                        ; preds = %if.end348, %if.end205
  ret void, !dbg !9013
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @multitex_mtex(%struct.ShadeInput* %shi, %struct.MTex* %mtex, float* %texvec, float* %dxt, float* %dyt, %struct.TexResult* %texres, %struct.ImagePool* %pool) #0 !dbg !9014 {
entry:
  %retval = alloca i32, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %mtex.addr = alloca %struct.MTex*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %tex = alloca %struct.Tex*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9017, metadata !DIExpression()), !dbg !9018
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !9019, metadata !DIExpression()), !dbg !9020
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !9021, metadata !DIExpression()), !dbg !9022
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !9023, metadata !DIExpression()), !dbg !9024
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !9031, metadata !DIExpression()), !dbg !9032
  %0 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9033
  %tex1 = getelementptr inbounds %struct.MTex, %struct.MTex* %0, i32 0, i32 5, !dbg !9034
  %1 = load %struct.Tex*, %struct.Tex** %tex1, align 8, !dbg !9034
  store %struct.Tex* %1, %struct.Tex** %tex, align 8, !dbg !9032
  %2 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9035
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 61, !dbg !9037
  %3 = load i8, i8* %use_nodes, align 8, !dbg !9037
  %conv = zext i8 %3 to i32, !dbg !9035
  %tobool = icmp ne i32 %conv, 0, !dbg !9035
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9038

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9039
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 52, !dbg !9040
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !9040
  %tobool2 = icmp ne %struct.bNodeTree* %5, null, !dbg !9039
  br i1 %tobool2, label %if.then, label %if.else, !dbg !9041

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9042
  %nodetree3 = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 52, !dbg !9044
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree3, align 8, !dbg !9044
  %8 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !9045
  %9 = load float*, float** %texvec.addr, align 8, !dbg !9046
  %10 = load float*, float** %dxt.addr, align 8, !dbg !9047
  %11 = load float*, float** %dyt.addr, align 8, !dbg !9048
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9049
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 15, !dbg !9050
  %13 = load i16, i16* %osatex, align 8, !dbg !9050
  %conv4 = sext i16 %13 to i32, !dbg !9049
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9051
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 114, !dbg !9052
  %15 = load i16, i16* %thread, align 2, !dbg !9052
  %16 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9053
  %17 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9054
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %17, i32 0, i32 19, !dbg !9055
  %18 = load i16, i16* %which_output, align 2, !dbg !9055
  %19 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 5), align 8, !dbg !9056
  %20 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !9057
  %and = and i32 %20, 262144, !dbg !9058
  %cmp = icmp ne i32 %and, 0, !dbg !9059
  %conv5 = zext i1 %cmp to i32, !dbg !9059
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9060
  %22 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9061
  %call = call i32 @ntreeTexExecTree(%struct.bNodeTree* %7, %struct.TexResult* %8, float* %9, float* %10, float* %11, i32 %conv4, i16 signext %15, %struct.Tex* %16, i16 signext %18, i32 %19, i32 %conv5, %struct.ShadeInput* %21, %struct.MTex* %22), !dbg !9062
  store i32 %call, i32* %retval, align 4, !dbg !9063
  br label %return, !dbg !9063

if.else:                                          ; preds = %land.lhs.true, %entry
  %23 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9064
  %tex6 = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 5, !dbg !9066
  %24 = load %struct.Tex*, %struct.Tex** %tex6, align 8, !dbg !9066
  %25 = load float*, float** %texvec.addr, align 8, !dbg !9067
  %26 = load float*, float** %dxt.addr, align 8, !dbg !9068
  %27 = load float*, float** %dyt.addr, align 8, !dbg !9069
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9070
  %osatex7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 15, !dbg !9071
  %29 = load i16, i16* %osatex7, align 8, !dbg !9071
  %conv8 = sext i16 %29 to i32, !dbg !9070
  %30 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !9072
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9073
  %thread9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 114, !dbg !9074
  %32 = load i16, i16* %thread9, align 2, !dbg !9074
  %33 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !9075
  %which_output10 = getelementptr inbounds %struct.MTex, %struct.MTex* %33, i32 0, i32 19, !dbg !9076
  %34 = load i16, i16* %which_output10, align 2, !dbg !9076
  %35 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9077
  %call11 = call i32 @multitex(%struct.Tex* %24, float* %25, float* %26, float* %27, i32 %conv8, %struct.TexResult* %30, i16 signext %32, i16 signext %34, %struct.ImagePool* %35), !dbg !9078
  store i32 %call11, i32* %retval, align 4, !dbg !9079
  br label %return, !dbg !9079

return:                                           ; preds = %if.else, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !9080
  ret i32 %36, !dbg !9080
}

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_grayscale(float* %rgb) #0 !dbg !9081 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !9085, metadata !DIExpression()), !dbg !9086
  %0 = load float*, float** %rgb.addr, align 8, !dbg !9087
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9087
  %1 = load float, float* %arrayidx, align 4, !dbg !9087
  %mul = fmul float 0x3FD3333340000000, %1, !dbg !9088
  %2 = load float*, float** %rgb.addr, align 8, !dbg !9089
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !9089
  %3 = load float, float* %arrayidx1, align 4, !dbg !9089
  %mul2 = fmul float 0x3FE28F5C20000000, %3, !dbg !9090
  %add = fadd float %mul, %mul2, !dbg !9091
  %4 = load float*, float** %rgb.addr, align 8, !dbg !9092
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !9092
  %5 = load float, float* %arrayidx3, align 4, !dbg !9092
  %mul4 = fmul float 0x3FBEB851E0000000, %5, !dbg !9093
  %add5 = fadd float %add, %mul4, !dbg !9094
  ret float %add5, !dbg !9095
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #5

; Function Attrs: nounwind
declare dso_local float @sinf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !9096 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load float*, float** %n.addr, align 8, !dbg !9101
  %1 = load float*, float** %n.addr, align 8, !dbg !9102
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !9103
  ret float %call, !dbg !9104
}

declare dso_local %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image*, %struct.ImageUser*, %struct.ImagePool*) #1

declare dso_local void @IMB_colormanagement_colorspace_to_scene_linear_v3(float*, %struct.ColorSpace*) #1

declare dso_local void @BKE_image_pool_release_ibuf(%struct.Image*, %struct.ImBuf*, %struct.ImagePool*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !9105 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9110, metadata !DIExpression()), !dbg !9111
  %0 = load float*, float** %a.addr, align 8, !dbg !9112
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !9112
  %1 = load float, float* %arrayidx, align 4, !dbg !9112
  %2 = load float*, float** %b.addr, align 8, !dbg !9113
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !9113
  %3 = load float, float* %arrayidx1, align 4, !dbg !9113
  %mul = fmul float %1, %3, !dbg !9114
  %4 = load float*, float** %a.addr, align 8, !dbg !9115
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !9115
  %5 = load float, float* %arrayidx2, align 4, !dbg !9115
  %6 = load float*, float** %b.addr, align 8, !dbg !9116
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9116
  %7 = load float, float* %arrayidx3, align 4, !dbg !9116
  %mul4 = fmul float %5, %7, !dbg !9117
  %sub = fsub float %mul, %mul4, !dbg !9118
  %8 = load float*, float** %r.addr, align 8, !dbg !9119
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !9119
  store float %sub, float* %arrayidx5, align 4, !dbg !9120
  %9 = load float*, float** %a.addr, align 8, !dbg !9121
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !9121
  %10 = load float, float* %arrayidx6, align 4, !dbg !9121
  %11 = load float*, float** %b.addr, align 8, !dbg !9122
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !9122
  %12 = load float, float* %arrayidx7, align 4, !dbg !9122
  %mul8 = fmul float %10, %12, !dbg !9123
  %13 = load float*, float** %a.addr, align 8, !dbg !9124
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !9124
  %14 = load float, float* %arrayidx9, align 4, !dbg !9124
  %15 = load float*, float** %b.addr, align 8, !dbg !9125
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !9125
  %16 = load float, float* %arrayidx10, align 4, !dbg !9125
  %mul11 = fmul float %14, %16, !dbg !9126
  %sub12 = fsub float %mul8, %mul11, !dbg !9127
  %17 = load float*, float** %r.addr, align 8, !dbg !9128
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !9128
  store float %sub12, float* %arrayidx13, align 4, !dbg !9129
  %18 = load float*, float** %a.addr, align 8, !dbg !9130
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !9130
  %19 = load float, float* %arrayidx14, align 4, !dbg !9130
  %20 = load float*, float** %b.addr, align 8, !dbg !9131
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !9131
  %21 = load float, float* %arrayidx15, align 4, !dbg !9131
  %mul16 = fmul float %19, %21, !dbg !9132
  %22 = load float*, float** %a.addr, align 8, !dbg !9133
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !9133
  %23 = load float, float* %arrayidx17, align 4, !dbg !9133
  %24 = load float*, float** %b.addr, align 8, !dbg !9134
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !9134
  %25 = load float, float* %arrayidx18, align 4, !dbg !9134
  %mul19 = fmul float %23, %25, !dbg !9135
  %sub20 = fsub float %mul16, %mul19, !dbg !9136
  %26 = load float*, float** %r.addr, align 8, !dbg !9137
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !9137
  store float %sub20, float* %arrayidx21, align 4, !dbg !9138
  ret void, !dbg !9139
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !9140 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  %0 = load float, float* %f.addr, align 4, !dbg !9147
  %1 = load float*, float** %r.addr, align 8, !dbg !9148
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !9148
  %2 = load float, float* %arrayidx, align 4, !dbg !9149
  %mul = fmul float %2, %0, !dbg !9149
  store float %mul, float* %arrayidx, align 4, !dbg !9149
  %3 = load float, float* %f.addr, align 4, !dbg !9150
  %4 = load float*, float** %r.addr, align 8, !dbg !9151
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !9151
  %5 = load float, float* %arrayidx1, align 4, !dbg !9152
  %mul2 = fmul float %5, %3, !dbg !9152
  store float %mul2, float* %arrayidx1, align 4, !dbg !9152
  %6 = load float, float* %f.addr, align 4, !dbg !9153
  %7 = load float*, float** %r.addr, align 8, !dbg !9154
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !9154
  %8 = load float, float* %arrayidx3, align 4, !dbg !9155
  %mul4 = fmul float %8, %6, !dbg !9155
  store float %mul4, float* %arrayidx3, align 4, !dbg !9155
  ret void, !dbg !9156
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !9157 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9160, metadata !DIExpression()), !dbg !9161
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9162, metadata !DIExpression()), !dbg !9163
  %0 = load float*, float** %a.addr, align 8, !dbg !9164
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9164
  %1 = load float, float* %arrayidx, align 4, !dbg !9164
  %2 = load float*, float** %b.addr, align 8, !dbg !9165
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9165
  %3 = load float, float* %arrayidx1, align 4, !dbg !9165
  %mul = fmul float %1, %3, !dbg !9166
  %4 = load float*, float** %a.addr, align 8, !dbg !9167
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9167
  %5 = load float, float* %arrayidx2, align 4, !dbg !9167
  %6 = load float*, float** %b.addr, align 8, !dbg !9168
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9168
  %7 = load float, float* %arrayidx3, align 4, !dbg !9168
  %mul4 = fmul float %5, %7, !dbg !9169
  %add = fadd float %mul, %mul4, !dbg !9170
  %8 = load float*, float** %a.addr, align 8, !dbg !9171
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9171
  %9 = load float, float* %arrayidx5, align 4, !dbg !9171
  %10 = load float*, float** %b.addr, align 8, !dbg !9172
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9172
  %11 = load float, float* %arrayidx6, align 4, !dbg !9172
  %mul7 = fmul float %9, %11, !dbg !9173
  %add8 = fadd float %add, %mul7, !dbg !9174
  ret float %add8, !dbg !9175
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !9176 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9183, metadata !DIExpression()), !dbg !9184
  %0 = load float*, float** %a.addr, align 8, !dbg !9185
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9185
  %1 = load float, float* %arrayidx, align 4, !dbg !9185
  %2 = load float, float* %f.addr, align 4, !dbg !9186
  %mul = fmul float %1, %2, !dbg !9187
  %3 = load float*, float** %r.addr, align 8, !dbg !9188
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9188
  %4 = load float, float* %arrayidx1, align 4, !dbg !9189
  %add = fadd float %4, %mul, !dbg !9189
  store float %add, float* %arrayidx1, align 4, !dbg !9189
  %5 = load float*, float** %a.addr, align 8, !dbg !9190
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !9190
  %6 = load float, float* %arrayidx2, align 4, !dbg !9190
  %7 = load float, float* %f.addr, align 4, !dbg !9191
  %mul3 = fmul float %6, %7, !dbg !9192
  %8 = load float*, float** %r.addr, align 8, !dbg !9193
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !9193
  %9 = load float, float* %arrayidx4, align 4, !dbg !9194
  %add5 = fadd float %9, %mul3, !dbg !9194
  store float %add5, float* %arrayidx4, align 4, !dbg !9194
  %10 = load float*, float** %a.addr, align 8, !dbg !9195
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9195
  %11 = load float, float* %arrayidx6, align 4, !dbg !9195
  %12 = load float, float* %f.addr, align 4, !dbg !9196
  %mul7 = fmul float %11, %12, !dbg !9197
  %13 = load float*, float** %r.addr, align 8, !dbg !9198
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !9198
  %14 = load float, float* %arrayidx8, align 4, !dbg !9199
  %add9 = fadd float %14, %mul7, !dbg !9199
  store float %add9, float* %arrayidx8, align 4, !dbg !9199
  ret void, !dbg !9200
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @do_volume_tex(%struct.ShadeInput* %shi, float* %xyz, i32 %mapto_flag, float* %col_r, float* %val, %struct.Render* %re) #0 !dbg !9201 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %xyz.addr = alloca float*, align 8
  %mapto_flag.addr = alloca i32, align 4
  %col_r.addr = alloca float*, align 8
  %val.addr = alloca float*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %tex = alloca %struct.Tex*, align 8
  %texres = alloca %struct.TexResult, align 8
  %tex_nr = alloca i32, align 4
  %rgbnor = alloca i32, align 4
  %co = alloca [3 x float], align 4
  %texvec = alloca [3 x float], align 4
  %fact = alloca float, align 4
  %stencilTin = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %ob117 = alloca %struct.Object*, align 8
  %tcol = alloca [3 x float], align 4
  %colemitfac = alloca float, align 4
  %colreflfac = alloca float, align 4
  %coltransfac = alloca float, align 4
  %emitfac = alloca float, align 4
  %densfac = alloca float, align 4
  %scatterfac = alloca float, align 4
  %reflfac = alloca float, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !9204, metadata !DIExpression()), !dbg !9205
  store float* %xyz, float** %xyz.addr, align 8
  call void @llvm.dbg.declare(metadata float** %xyz.addr, metadata !9206, metadata !DIExpression()), !dbg !9207
  store i32 %mapto_flag, i32* %mapto_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mapto_flag.addr, metadata !9208, metadata !DIExpression()), !dbg !9209
  store float* %col_r, float** %col_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col_r.addr, metadata !9210, metadata !DIExpression()), !dbg !9211
  store float* %val, float** %val.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val.addr, metadata !9212, metadata !DIExpression()), !dbg !9213
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !9216, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !9220, metadata !DIExpression()), !dbg !9221
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !9221
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !9221
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !9222, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.declare(metadata i32* %rgbnor, metadata !9224, metadata !DIExpression()), !dbg !9225
  store i32 0, i32* %rgbnor, align 4, !dbg !9225
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !9226, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !9228, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.declare(metadata float* %fact, metadata !9230, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.declare(metadata float* %stencilTin, metadata !9232, metadata !DIExpression()), !dbg !9233
  store float 1.000000e+00, float* %stencilTin, align 4, !dbg !9233
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9234
  %r = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 45, !dbg !9236
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !9237
  %2 = load i32, i32* %scemode, align 4, !dbg !9237
  %and = and i32 %2, 8192, !dbg !9238
  %tobool = icmp ne i32 %and, 0, !dbg !9238
  br i1 %tobool, label %if.then, label %if.end, !dbg !9239

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9240

if.end:                                           ; preds = %entry
  store i32 0, i32* %tex_nr, align 4, !dbg !9241
  br label %for.cond, !dbg !9243

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %tex_nr, align 4, !dbg !9244
  %cmp = icmp slt i32 %3, 18, !dbg !9246
  br i1 %cmp, label %for.body, label %for.end, !dbg !9247

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9248
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 0, !dbg !9251
  %5 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !9251
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 73, !dbg !9252
  %6 = load i32, i32* %septex, align 8, !dbg !9252
  %7 = load i32, i32* %tex_nr, align 4, !dbg !9253
  %shl = shl i32 1, %7, !dbg !9254
  %and1 = and i32 %6, %shl, !dbg !9255
  %tobool2 = icmp ne i32 %and1, 0, !dbg !9255
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9256

if.then3:                                         ; preds = %for.body
  br label %for.inc, !dbg !9257

if.end4:                                          ; preds = %for.body
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9258
  %mat5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 0, !dbg !9260
  %9 = load %struct.Material*, %struct.Material** %mat5, align 8, !dbg !9260
  %mtex6 = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 102, !dbg !9261
  %10 = load i32, i32* %tex_nr, align 4, !dbg !9262
  %idxprom = sext i32 %10 to i64, !dbg !9258
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex6, i64 0, i64 %idxprom, !dbg !9258
  %11 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !9258
  %tobool7 = icmp ne %struct.MTex* %11, null, !dbg !9258
  br i1 %tobool7, label %if.then8, label %if.end522, !dbg !9263

if.then8:                                         ; preds = %if.end4
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9264
  %mat9 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 0, !dbg !9266
  %13 = load %struct.Material*, %struct.Material** %mat9, align 8, !dbg !9266
  %mtex10 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 102, !dbg !9267
  %14 = load i32, i32* %tex_nr, align 4, !dbg !9268
  %idxprom11 = sext i32 %14 to i64, !dbg !9264
  %arrayidx12 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex10, i64 0, i64 %idxprom11, !dbg !9264
  %15 = load %struct.MTex*, %struct.MTex** %arrayidx12, align 8, !dbg !9264
  store %struct.MTex* %15, %struct.MTex** %mtex, align 8, !dbg !9269
  %16 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9270
  %tex13 = getelementptr inbounds %struct.MTex, %struct.MTex* %16, i32 0, i32 5, !dbg !9271
  %17 = load %struct.Tex*, %struct.Tex** %tex13, align 8, !dbg !9271
  store %struct.Tex* %17, %struct.Tex** %tex, align 8, !dbg !9272
  %18 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9273
  %cmp14 = icmp eq %struct.Tex* %18, null, !dbg !9275
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !9276

if.then15:                                        ; preds = %if.then8
  br label %for.inc, !dbg !9277

if.end16:                                         ; preds = %if.then8
  %19 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9278
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %19, i32 0, i32 1, !dbg !9280
  %20 = load i16, i16* %mapto, align 2, !dbg !9280
  %conv = sext i16 %20 to i32, !dbg !9278
  %21 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9281
  %and17 = and i32 %conv, %21, !dbg !9282
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9282
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !9283

if.then19:                                        ; preds = %if.end16
  br label %for.inc, !dbg !9284

if.end20:                                         ; preds = %if.end16
  %22 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9285
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %22, i32 0, i32 0, !dbg !9287
  %23 = load i16, i16* %texco, align 8, !dbg !9287
  %conv21 = sext i16 %23 to i32, !dbg !9285
  %cmp22 = icmp eq i32 %conv21, 32, !dbg !9288
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !9289

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9290, metadata !DIExpression()), !dbg !9292
  %24 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9293
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %24, i32 0, i32 4, !dbg !9294
  %25 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9294
  store %struct.Object* %25, %struct.Object** %ob, align 8, !dbg !9292
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9295
  %tobool25 = icmp ne %struct.Object* %26, null, !dbg !9295
  br i1 %tobool25, label %if.then26, label %if.end103, !dbg !9297

if.then26:                                        ; preds = %if.then24
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9298
  %27 = load float*, float** %xyz.addr, align 8, !dbg !9300
  call void @copy_v3_v3(float* %arraydecay, float* %27), !dbg !9301
  %28 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9302
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 14, !dbg !9304
  %29 = load i16, i16* %texflag, align 8, !dbg !9304
  %conv27 = sext i16 %29 to i32, !dbg !9302
  %and28 = and i32 %conv27, 64, !dbg !9305
  %tobool29 = icmp ne i32 %and28, 0, !dbg !9305
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !9306

if.then30:                                        ; preds = %if.then26
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9307
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 3, !dbg !9310
  %31 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9310
  %tobool31 = icmp ne %struct.ObjectInstanceRen* %31, null, !dbg !9307
  br i1 %tobool31, label %land.lhs.true, label %if.end38, !dbg !9311

land.lhs.true:                                    ; preds = %if.then30
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9312
  %obi32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 3, !dbg !9313
  %33 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi32, align 8, !dbg !9313
  %duplitexmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %33, i32 0, i32 14, !dbg !9314
  %34 = load [4 x float]*, [4 x float]** %duplitexmat, align 8, !dbg !9314
  %tobool33 = icmp ne [4 x float]* %34, null, !dbg !9312
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !9315

if.then34:                                        ; preds = %land.lhs.true
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9316
  %obi35 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 3, !dbg !9317
  %36 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi35, align 8, !dbg !9317
  %duplitexmat36 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %36, i32 0, i32 14, !dbg !9318
  %37 = load [4 x float]*, [4 x float]** %duplitexmat36, align 8, !dbg !9318
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9319
  call void @mul_m4_v3([4 x float]* %37, float* %arraydecay37), !dbg !9320
  br label %if.end38, !dbg !9320

if.end38:                                         ; preds = %if.then34, %land.lhs.true, %if.then30
  br label %if.end39, !dbg !9321

if.end39:                                         ; preds = %if.end38, %if.then26
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9322
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 51, !dbg !9323
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !9322
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9324
  call void @mul_m4_v3([4 x float]* %arraydecay40, float* %arraydecay41), !dbg !9325
  %39 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9326
  %texflag42 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 14, !dbg !9328
  %40 = load i16, i16* %texflag42, align 8, !dbg !9328
  %conv43 = sext i16 %40 to i32, !dbg !9326
  %and44 = and i32 %conv43, 16384, !dbg !9329
  %tobool45 = icmp ne i32 %and44, 0, !dbg !9329
  br i1 %tobool45, label %land.lhs.true46, label %if.end102, !dbg !9330

land.lhs.true46:                                  ; preds = %if.end39
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9331
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 15, !dbg !9332
  %42 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !9332
  %tobool47 = icmp ne %struct.BoundBox* %42, null, !dbg !9331
  br i1 %tobool47, label %if.then48, label %if.end102, !dbg !9333

if.then48:                                        ; preds = %land.lhs.true46
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9334
  %43 = load float, float* %arrayidx49, align 4, !dbg !9334
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9336
  %bb50 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 15, !dbg !9337
  %45 = load %struct.BoundBox*, %struct.BoundBox** %bb50, align 8, !dbg !9337
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %45, i32 0, i32 0, !dbg !9338
  %arrayidx51 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !9336
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx51, i64 0, i64 0, !dbg !9336
  %46 = load float, float* %arrayidx52, align 4, !dbg !9336
  %sub = fsub float %43, %46, !dbg !9339
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9340
  %bb53 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 15, !dbg !9341
  %48 = load %struct.BoundBox*, %struct.BoundBox** %bb53, align 8, !dbg !9341
  %vec54 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %48, i32 0, i32 0, !dbg !9342
  %arrayidx55 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec54, i64 0, i64 6, !dbg !9340
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !9340
  %49 = load float, float* %arrayidx56, align 4, !dbg !9340
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9343
  %bb57 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 15, !dbg !9344
  %51 = load %struct.BoundBox*, %struct.BoundBox** %bb57, align 8, !dbg !9344
  %vec58 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %51, i32 0, i32 0, !dbg !9345
  %arrayidx59 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec58, i64 0, i64 0, !dbg !9343
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !9343
  %52 = load float, float* %arrayidx60, align 4, !dbg !9343
  %sub61 = fsub float %49, %52, !dbg !9346
  %div = fdiv float %sub, %sub61, !dbg !9347
  %mul = fmul float %div, 2.000000e+00, !dbg !9348
  %sub62 = fsub float %mul, 1.000000e+00, !dbg !9349
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9350
  store float %sub62, float* %arrayidx63, align 4, !dbg !9351
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 1, !dbg !9352
  %53 = load float, float* %arrayidx64, align 4, !dbg !9352
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9353
  %bb65 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 15, !dbg !9354
  %55 = load %struct.BoundBox*, %struct.BoundBox** %bb65, align 8, !dbg !9354
  %vec66 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %55, i32 0, i32 0, !dbg !9355
  %arrayidx67 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec66, i64 0, i64 0, !dbg !9353
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 1, !dbg !9353
  %56 = load float, float* %arrayidx68, align 4, !dbg !9353
  %sub69 = fsub float %53, %56, !dbg !9356
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9357
  %bb70 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 15, !dbg !9358
  %58 = load %struct.BoundBox*, %struct.BoundBox** %bb70, align 8, !dbg !9358
  %vec71 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %58, i32 0, i32 0, !dbg !9359
  %arrayidx72 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec71, i64 0, i64 6, !dbg !9357
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 1, !dbg !9357
  %59 = load float, float* %arrayidx73, align 4, !dbg !9357
  %60 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9360
  %bb74 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 15, !dbg !9361
  %61 = load %struct.BoundBox*, %struct.BoundBox** %bb74, align 8, !dbg !9361
  %vec75 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %61, i32 0, i32 0, !dbg !9362
  %arrayidx76 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec75, i64 0, i64 0, !dbg !9360
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx76, i64 0, i64 1, !dbg !9360
  %62 = load float, float* %arrayidx77, align 4, !dbg !9360
  %sub78 = fsub float %59, %62, !dbg !9363
  %div79 = fdiv float %sub69, %sub78, !dbg !9364
  %mul80 = fmul float %div79, 2.000000e+00, !dbg !9365
  %sub81 = fsub float %mul80, 1.000000e+00, !dbg !9366
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 1, !dbg !9367
  store float %sub81, float* %arrayidx82, align 4, !dbg !9368
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !9369
  %63 = load float, float* %arrayidx83, align 4, !dbg !9369
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9370
  %bb84 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 15, !dbg !9371
  %65 = load %struct.BoundBox*, %struct.BoundBox** %bb84, align 8, !dbg !9371
  %vec85 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %65, i32 0, i32 0, !dbg !9372
  %arrayidx86 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec85, i64 0, i64 0, !dbg !9370
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx86, i64 0, i64 2, !dbg !9370
  %66 = load float, float* %arrayidx87, align 4, !dbg !9370
  %sub88 = fsub float %63, %66, !dbg !9373
  %67 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9374
  %bb89 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 15, !dbg !9375
  %68 = load %struct.BoundBox*, %struct.BoundBox** %bb89, align 8, !dbg !9375
  %vec90 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %68, i32 0, i32 0, !dbg !9376
  %arrayidx91 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec90, i64 0, i64 6, !dbg !9374
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx91, i64 0, i64 2, !dbg !9374
  %69 = load float, float* %arrayidx92, align 4, !dbg !9374
  %70 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9377
  %bb93 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 15, !dbg !9378
  %71 = load %struct.BoundBox*, %struct.BoundBox** %bb93, align 8, !dbg !9378
  %vec94 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %71, i32 0, i32 0, !dbg !9379
  %arrayidx95 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec94, i64 0, i64 0, !dbg !9377
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx95, i64 0, i64 2, !dbg !9377
  %72 = load float, float* %arrayidx96, align 4, !dbg !9377
  %sub97 = fsub float %69, %72, !dbg !9380
  %div98 = fdiv float %sub88, %sub97, !dbg !9381
  %mul99 = fmul float %div98, 2.000000e+00, !dbg !9382
  %sub100 = fsub float %mul99, 1.000000e+00, !dbg !9383
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !9384
  store float %sub100, float* %arrayidx101, align 4, !dbg !9385
  br label %if.end102, !dbg !9386

if.end102:                                        ; preds = %if.then48, %land.lhs.true46, %if.end39
  br label %if.end103, !dbg !9387

if.end103:                                        ; preds = %if.end102, %if.then24
  br label %if.end203, !dbg !9388

if.else:                                          ; preds = %if.end20
  %73 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9389
  %texco104 = getelementptr inbounds %struct.MTex, %struct.MTex* %73, i32 0, i32 0, !dbg !9391
  %74 = load i16, i16* %texco104, align 8, !dbg !9391
  %conv105 = sext i16 %74 to i32, !dbg !9389
  %cmp106 = icmp eq i32 %conv105, 1, !dbg !9392
  br i1 %cmp106, label %if.then108, label %if.else191, !dbg !9393

if.then108:                                       ; preds = %if.else
  %75 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9394
  %texflag109 = getelementptr inbounds %struct.MTex, %struct.MTex* %75, i32 0, i32 14, !dbg !9397
  %76 = load i16, i16* %texflag109, align 8, !dbg !9397
  %conv110 = sext i16 %76 to i32, !dbg !9394
  %and111 = and i32 %conv110, 32, !dbg !9398
  %tobool112 = icmp ne i32 %and111, 0, !dbg !9398
  br i1 %tobool112, label %if.then113, label %if.else116, !dbg !9399

if.then113:                                       ; preds = %if.then108
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9400
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9402
  %duplilo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 70, !dbg !9403
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %duplilo, i64 0, i64 0, !dbg !9402
  call void @copy_v3_v3(float* %arraydecay114, float* %arraydecay115), !dbg !9404
  br label %if.end190, !dbg !9405

if.else116:                                       ; preds = %if.then108
  call void @llvm.dbg.declare(metadata %struct.Object** %ob117, metadata !9406, metadata !DIExpression()), !dbg !9408
  %78 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9409
  %obi118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %78, i32 0, i32 3, !dbg !9410
  %79 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi118, align 8, !dbg !9410
  %ob119 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %79, i32 0, i32 3, !dbg !9411
  %80 = load %struct.Object*, %struct.Object** %ob119, align 8, !dbg !9411
  store %struct.Object* %80, %struct.Object** %ob117, align 8, !dbg !9408
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9412
  %81 = load float*, float** %xyz.addr, align 8, !dbg !9413
  call void @copy_v3_v3(float* %arraydecay120, float* %81), !dbg !9414
  %82 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9415
  %imat_ren121 = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 51, !dbg !9416
  %arraydecay122 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren121, i64 0, i64 0, !dbg !9415
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9417
  call void @mul_m4_v3([4 x float]* %arraydecay122, float* %arraydecay123), !dbg !9418
  %83 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9419
  %texflag124 = getelementptr inbounds %struct.MTex, %struct.MTex* %83, i32 0, i32 14, !dbg !9421
  %84 = load i16, i16* %texflag124, align 8, !dbg !9421
  %conv125 = sext i16 %84 to i32, !dbg !9419
  %and126 = and i32 %conv125, 16384, !dbg !9422
  %tobool127 = icmp ne i32 %and126, 0, !dbg !9422
  br i1 %tobool127, label %land.lhs.true128, label %if.end189, !dbg !9423

land.lhs.true128:                                 ; preds = %if.else116
  %85 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9424
  %bb129 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 15, !dbg !9425
  %86 = load %struct.BoundBox*, %struct.BoundBox** %bb129, align 8, !dbg !9425
  %tobool130 = icmp ne %struct.BoundBox* %86, null, !dbg !9424
  br i1 %tobool130, label %if.then131, label %if.end189, !dbg !9426

if.then131:                                       ; preds = %land.lhs.true128
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9427
  %87 = load float, float* %arrayidx132, align 4, !dbg !9427
  %88 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9429
  %bb133 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 15, !dbg !9430
  %89 = load %struct.BoundBox*, %struct.BoundBox** %bb133, align 8, !dbg !9430
  %vec134 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %89, i32 0, i32 0, !dbg !9431
  %arrayidx135 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec134, i64 0, i64 0, !dbg !9429
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx135, i64 0, i64 0, !dbg !9429
  %90 = load float, float* %arrayidx136, align 4, !dbg !9429
  %sub137 = fsub float %87, %90, !dbg !9432
  %91 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9433
  %bb138 = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 15, !dbg !9434
  %92 = load %struct.BoundBox*, %struct.BoundBox** %bb138, align 8, !dbg !9434
  %vec139 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %92, i32 0, i32 0, !dbg !9435
  %arrayidx140 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec139, i64 0, i64 6, !dbg !9433
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx140, i64 0, i64 0, !dbg !9433
  %93 = load float, float* %arrayidx141, align 4, !dbg !9433
  %94 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9436
  %bb142 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 15, !dbg !9437
  %95 = load %struct.BoundBox*, %struct.BoundBox** %bb142, align 8, !dbg !9437
  %vec143 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %95, i32 0, i32 0, !dbg !9438
  %arrayidx144 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec143, i64 0, i64 0, !dbg !9436
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx144, i64 0, i64 0, !dbg !9436
  %96 = load float, float* %arrayidx145, align 4, !dbg !9436
  %sub146 = fsub float %93, %96, !dbg !9439
  %div147 = fdiv float %sub137, %sub146, !dbg !9440
  %mul148 = fmul float %div147, 2.000000e+00, !dbg !9441
  %sub149 = fsub float %mul148, 1.000000e+00, !dbg !9442
  %arrayidx150 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9443
  store float %sub149, float* %arrayidx150, align 4, !dbg !9444
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 1, !dbg !9445
  %97 = load float, float* %arrayidx151, align 4, !dbg !9445
  %98 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9446
  %bb152 = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 15, !dbg !9447
  %99 = load %struct.BoundBox*, %struct.BoundBox** %bb152, align 8, !dbg !9447
  %vec153 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %99, i32 0, i32 0, !dbg !9448
  %arrayidx154 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec153, i64 0, i64 0, !dbg !9446
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx154, i64 0, i64 1, !dbg !9446
  %100 = load float, float* %arrayidx155, align 4, !dbg !9446
  %sub156 = fsub float %97, %100, !dbg !9449
  %101 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9450
  %bb157 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 15, !dbg !9451
  %102 = load %struct.BoundBox*, %struct.BoundBox** %bb157, align 8, !dbg !9451
  %vec158 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %102, i32 0, i32 0, !dbg !9452
  %arrayidx159 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec158, i64 0, i64 6, !dbg !9450
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 1, !dbg !9450
  %103 = load float, float* %arrayidx160, align 4, !dbg !9450
  %104 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9453
  %bb161 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 15, !dbg !9454
  %105 = load %struct.BoundBox*, %struct.BoundBox** %bb161, align 8, !dbg !9454
  %vec162 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %105, i32 0, i32 0, !dbg !9455
  %arrayidx163 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec162, i64 0, i64 0, !dbg !9453
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx163, i64 0, i64 1, !dbg !9453
  %106 = load float, float* %arrayidx164, align 4, !dbg !9453
  %sub165 = fsub float %103, %106, !dbg !9456
  %div166 = fdiv float %sub156, %sub165, !dbg !9457
  %mul167 = fmul float %div166, 2.000000e+00, !dbg !9458
  %sub168 = fsub float %mul167, 1.000000e+00, !dbg !9459
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 1, !dbg !9460
  store float %sub168, float* %arrayidx169, align 4, !dbg !9461
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !9462
  %107 = load float, float* %arrayidx170, align 4, !dbg !9462
  %108 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9463
  %bb171 = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 15, !dbg !9464
  %109 = load %struct.BoundBox*, %struct.BoundBox** %bb171, align 8, !dbg !9464
  %vec172 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %109, i32 0, i32 0, !dbg !9465
  %arrayidx173 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec172, i64 0, i64 0, !dbg !9463
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 2, !dbg !9463
  %110 = load float, float* %arrayidx174, align 4, !dbg !9463
  %sub175 = fsub float %107, %110, !dbg !9466
  %111 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9467
  %bb176 = getelementptr inbounds %struct.Object, %struct.Object* %111, i32 0, i32 15, !dbg !9468
  %112 = load %struct.BoundBox*, %struct.BoundBox** %bb176, align 8, !dbg !9468
  %vec177 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %112, i32 0, i32 0, !dbg !9469
  %arrayidx178 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec177, i64 0, i64 6, !dbg !9467
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 2, !dbg !9467
  %113 = load float, float* %arrayidx179, align 4, !dbg !9467
  %114 = load %struct.Object*, %struct.Object** %ob117, align 8, !dbg !9470
  %bb180 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 15, !dbg !9471
  %115 = load %struct.BoundBox*, %struct.BoundBox** %bb180, align 8, !dbg !9471
  %vec181 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %115, i32 0, i32 0, !dbg !9472
  %arrayidx182 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec181, i64 0, i64 0, !dbg !9470
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx182, i64 0, i64 2, !dbg !9470
  %116 = load float, float* %arrayidx183, align 4, !dbg !9470
  %sub184 = fsub float %113, %116, !dbg !9473
  %div185 = fdiv float %sub175, %sub184, !dbg !9474
  %mul186 = fmul float %div185, 2.000000e+00, !dbg !9475
  %sub187 = fsub float %mul186, 1.000000e+00, !dbg !9476
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !9477
  store float %sub187, float* %arrayidx188, align 4, !dbg !9478
  br label %if.end189, !dbg !9479

if.end189:                                        ; preds = %if.then131, %land.lhs.true128, %if.else116
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then113
  br label %if.end202, !dbg !9480

if.else191:                                       ; preds = %if.else
  %117 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9481
  %texco192 = getelementptr inbounds %struct.MTex, %struct.MTex* %117, i32 0, i32 0, !dbg !9483
  %118 = load i16, i16* %texco192, align 8, !dbg !9483
  %conv193 = sext i16 %118 to i32, !dbg !9481
  %cmp194 = icmp eq i32 %conv193, 8, !dbg !9484
  br i1 %cmp194, label %if.then196, label %if.else200, !dbg !9485

if.then196:                                       ; preds = %if.else191
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9486
  %119 = load float*, float** %xyz.addr, align 8, !dbg !9488
  call void @copy_v3_v3(float* %arraydecay197, float* %119), !dbg !9489
  %120 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9490
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %120, i32 0, i32 33, !dbg !9491
  %arraydecay198 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !9490
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9492
  call void @mul_m4_v3([4 x float]* %arraydecay198, float* %arraydecay199), !dbg !9493
  br label %if.end201, !dbg !9494

if.else200:                                       ; preds = %if.else191
  br label %for.inc, !dbg !9495

if.end201:                                        ; preds = %if.then196
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.end190
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.end103
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !9497
  store float* null, float** %nor, align 8, !dbg !9498
  %121 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9499
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %121, i32 0, i32 32, !dbg !9501
  %122 = load i16, i16* %type, align 8, !dbg !9501
  %conv204 = sext i16 %122 to i32, !dbg !9499
  %cmp205 = icmp eq i32 %conv204, 8, !dbg !9502
  br i1 %cmp205, label %if.then207, label %if.else208, !dbg !9503

if.then207:                                       ; preds = %if.end203
  br label %for.inc, !dbg !9504

if.else208:                                       ; preds = %if.end203
  %123 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9506
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %123, i32 0, i32 7, !dbg !9509
  %124 = load i8, i8* %projx, align 8, !dbg !9509
  %tobool209 = icmp ne i8 %124, 0, !dbg !9506
  br i1 %tobool209, label %if.then210, label %if.else220, !dbg !9510

if.then210:                                       ; preds = %if.else208
  %125 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9511
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %125, i32 0, i32 12, !dbg !9512
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !9511
  %126 = load float, float* %arrayidx211, align 8, !dbg !9511
  %127 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9513
  %projx212 = getelementptr inbounds %struct.MTex, %struct.MTex* %127, i32 0, i32 7, !dbg !9514
  %128 = load i8, i8* %projx212, align 8, !dbg !9514
  %conv213 = zext i8 %128 to i32, !dbg !9513
  %sub214 = sub nsw i32 %conv213, 1, !dbg !9515
  %idxprom215 = sext i32 %sub214 to i64, !dbg !9516
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom215, !dbg !9516
  %129 = load float, float* %arrayidx216, align 4, !dbg !9516
  %130 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9517
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %130, i32 0, i32 11, !dbg !9518
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !9517
  %131 = load float, float* %arrayidx217, align 4, !dbg !9517
  %add = fadd float %129, %131, !dbg !9519
  %mul218 = fmul float %126, %add, !dbg !9520
  %arrayidx219 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !9521
  store float %mul218, float* %arrayidx219, align 4, !dbg !9522
  br label %if.end227, !dbg !9521

if.else220:                                       ; preds = %if.else208
  %132 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9523
  %size221 = getelementptr inbounds %struct.MTex, %struct.MTex* %132, i32 0, i32 12, !dbg !9524
  %arrayidx222 = getelementptr inbounds [3 x float], [3 x float]* %size221, i64 0, i64 0, !dbg !9523
  %133 = load float, float* %arrayidx222, align 8, !dbg !9523
  %134 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9525
  %ofs223 = getelementptr inbounds %struct.MTex, %struct.MTex* %134, i32 0, i32 11, !dbg !9526
  %arrayidx224 = getelementptr inbounds [3 x float], [3 x float]* %ofs223, i64 0, i64 0, !dbg !9525
  %135 = load float, float* %arrayidx224, align 4, !dbg !9525
  %mul225 = fmul float %133, %135, !dbg !9527
  %arrayidx226 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !9528
  store float %mul225, float* %arrayidx226, align 4, !dbg !9529
  br label %if.end227

if.end227:                                        ; preds = %if.else220, %if.then210
  %136 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9530
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %136, i32 0, i32 8, !dbg !9532
  %137 = load i8, i8* %projy, align 1, !dbg !9532
  %tobool228 = icmp ne i8 %137, 0, !dbg !9530
  br i1 %tobool228, label %if.then229, label %if.else242, !dbg !9533

if.then229:                                       ; preds = %if.end227
  %138 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9534
  %size230 = getelementptr inbounds %struct.MTex, %struct.MTex* %138, i32 0, i32 12, !dbg !9535
  %arrayidx231 = getelementptr inbounds [3 x float], [3 x float]* %size230, i64 0, i64 1, !dbg !9534
  %139 = load float, float* %arrayidx231, align 4, !dbg !9534
  %140 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9536
  %projy232 = getelementptr inbounds %struct.MTex, %struct.MTex* %140, i32 0, i32 8, !dbg !9537
  %141 = load i8, i8* %projy232, align 1, !dbg !9537
  %conv233 = zext i8 %141 to i32, !dbg !9536
  %sub234 = sub nsw i32 %conv233, 1, !dbg !9538
  %idxprom235 = sext i32 %sub234 to i64, !dbg !9539
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom235, !dbg !9539
  %142 = load float, float* %arrayidx236, align 4, !dbg !9539
  %143 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9540
  %ofs237 = getelementptr inbounds %struct.MTex, %struct.MTex* %143, i32 0, i32 11, !dbg !9541
  %arrayidx238 = getelementptr inbounds [3 x float], [3 x float]* %ofs237, i64 0, i64 1, !dbg !9540
  %144 = load float, float* %arrayidx238, align 4, !dbg !9540
  %add239 = fadd float %142, %144, !dbg !9542
  %mul240 = fmul float %139, %add239, !dbg !9543
  %arrayidx241 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !9544
  store float %mul240, float* %arrayidx241, align 4, !dbg !9545
  br label %if.end249, !dbg !9544

if.else242:                                       ; preds = %if.end227
  %145 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9546
  %size243 = getelementptr inbounds %struct.MTex, %struct.MTex* %145, i32 0, i32 12, !dbg !9547
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %size243, i64 0, i64 1, !dbg !9546
  %146 = load float, float* %arrayidx244, align 4, !dbg !9546
  %147 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9548
  %ofs245 = getelementptr inbounds %struct.MTex, %struct.MTex* %147, i32 0, i32 11, !dbg !9549
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %ofs245, i64 0, i64 1, !dbg !9548
  %148 = load float, float* %arrayidx246, align 4, !dbg !9548
  %mul247 = fmul float %146, %148, !dbg !9550
  %arrayidx248 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !9551
  store float %mul247, float* %arrayidx248, align 4, !dbg !9552
  br label %if.end249

if.end249:                                        ; preds = %if.else242, %if.then229
  %149 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9553
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %149, i32 0, i32 9, !dbg !9555
  %150 = load i8, i8* %projz, align 2, !dbg !9555
  %tobool250 = icmp ne i8 %150, 0, !dbg !9553
  br i1 %tobool250, label %if.then251, label %if.else264, !dbg !9556

if.then251:                                       ; preds = %if.end249
  %151 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9557
  %size252 = getelementptr inbounds %struct.MTex, %struct.MTex* %151, i32 0, i32 12, !dbg !9558
  %arrayidx253 = getelementptr inbounds [3 x float], [3 x float]* %size252, i64 0, i64 2, !dbg !9557
  %152 = load float, float* %arrayidx253, align 8, !dbg !9557
  %153 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9559
  %projz254 = getelementptr inbounds %struct.MTex, %struct.MTex* %153, i32 0, i32 9, !dbg !9560
  %154 = load i8, i8* %projz254, align 2, !dbg !9560
  %conv255 = zext i8 %154 to i32, !dbg !9559
  %sub256 = sub nsw i32 %conv255, 1, !dbg !9561
  %idxprom257 = sext i32 %sub256 to i64, !dbg !9562
  %arrayidx258 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom257, !dbg !9562
  %155 = load float, float* %arrayidx258, align 4, !dbg !9562
  %156 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9563
  %ofs259 = getelementptr inbounds %struct.MTex, %struct.MTex* %156, i32 0, i32 11, !dbg !9564
  %arrayidx260 = getelementptr inbounds [3 x float], [3 x float]* %ofs259, i64 0, i64 2, !dbg !9563
  %157 = load float, float* %arrayidx260, align 4, !dbg !9563
  %add261 = fadd float %155, %157, !dbg !9565
  %mul262 = fmul float %152, %add261, !dbg !9566
  %arrayidx263 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !9567
  store float %mul262, float* %arrayidx263, align 4, !dbg !9568
  br label %if.end271, !dbg !9567

if.else264:                                       ; preds = %if.end249
  %158 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9569
  %size265 = getelementptr inbounds %struct.MTex, %struct.MTex* %158, i32 0, i32 12, !dbg !9570
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %size265, i64 0, i64 2, !dbg !9569
  %159 = load float, float* %arrayidx266, align 8, !dbg !9569
  %160 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9571
  %ofs267 = getelementptr inbounds %struct.MTex, %struct.MTex* %160, i32 0, i32 11, !dbg !9572
  %arrayidx268 = getelementptr inbounds [3 x float], [3 x float]* %ofs267, i64 0, i64 2, !dbg !9571
  %161 = load float, float* %arrayidx268, align 4, !dbg !9571
  %mul269 = fmul float %159, %161, !dbg !9573
  %arrayidx270 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !9574
  store float %mul269, float* %arrayidx270, align 4, !dbg !9575
  br label %if.end271

if.end271:                                        ; preds = %if.else264, %if.then251
  br label %if.end272

if.end272:                                        ; preds = %if.end271
  %162 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9576
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !9577
  %163 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !9578
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %163, i32 0, i32 114, !dbg !9579
  %164 = load i16, i16* %thread, align 2, !dbg !9579
  %165 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9580
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %165, i32 0, i32 19, !dbg !9581
  %166 = load i16, i16* %which_output, align 2, !dbg !9581
  %167 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9582
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %167, i32 0, i32 100, !dbg !9583
  %168 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !9583
  %call = call i32 @multitex(%struct.Tex* %162, float* %arraydecay273, float* null, float* null, i32 0, %struct.TexResult* %texres, i16 signext %164, i16 signext %166, %struct.ImagePool* %168), !dbg !9584
  store i32 %call, i32* %rgbnor, align 4, !dbg !9585
  %169 = load i32, i32* %rgbnor, align 4, !dbg !9586
  %and274 = and i32 %169, 1, !dbg !9588
  %tobool275 = icmp ne i32 %and274, 0, !dbg !9588
  br i1 %tobool275, label %land.lhs.true276, label %if.end284, !dbg !9589

land.lhs.true276:                                 ; preds = %if.end272
  %170 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9590
  %texflag277 = getelementptr inbounds %struct.MTex, %struct.MTex* %170, i32 0, i32 14, !dbg !9591
  %171 = load i16, i16* %texflag277, align 8, !dbg !9591
  %conv278 = sext i16 %171 to i32, !dbg !9590
  %and279 = and i32 %conv278, 1, !dbg !9592
  %tobool280 = icmp ne i32 %and279, 0, !dbg !9592
  br i1 %tobool280, label %if.then281, label %if.end284, !dbg !9593

if.then281:                                       ; preds = %land.lhs.true276
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9594
  %call282 = call float @rgb_to_grayscale(float* %tr), !dbg !9596
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9597
  store float %call282, float* %tin, align 8, !dbg !9598
  %172 = load i32, i32* %rgbnor, align 4, !dbg !9599
  %sub283 = sub nsw i32 %172, 1, !dbg !9599
  store i32 %sub283, i32* %rgbnor, align 4, !dbg !9599
  br label %if.end284, !dbg !9600

if.end284:                                        ; preds = %if.then281, %land.lhs.true276, %if.end272
  %173 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9601
  %texflag285 = getelementptr inbounds %struct.MTex, %struct.MTex* %173, i32 0, i32 14, !dbg !9603
  %174 = load i16, i16* %texflag285, align 8, !dbg !9603
  %conv286 = sext i16 %174 to i32, !dbg !9601
  %and287 = and i32 %conv286, 4, !dbg !9604
  %tobool288 = icmp ne i32 %and287, 0, !dbg !9604
  br i1 %tobool288, label %if.then289, label %if.end304, !dbg !9605

if.then289:                                       ; preds = %if.end284
  %175 = load i32, i32* %rgbnor, align 4, !dbg !9606
  %and290 = and i32 %175, 1, !dbg !9609
  %tobool291 = icmp ne i32 %and290, 0, !dbg !9609
  br i1 %tobool291, label %if.then292, label %if.end300, !dbg !9610

if.then292:                                       ; preds = %if.then289
  %tr293 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9611
  %176 = load float, float* %tr293, align 4, !dbg !9611
  %sub294 = fsub float 1.000000e+00, %176, !dbg !9613
  %tr295 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9614
  store float %sub294, float* %tr295, align 4, !dbg !9615
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !9616
  %177 = load float, float* %tg, align 8, !dbg !9616
  %sub296 = fsub float 1.000000e+00, %177, !dbg !9617
  %tg297 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !9618
  store float %sub296, float* %tg297, align 8, !dbg !9619
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !9620
  %178 = load float, float* %tb, align 4, !dbg !9620
  %sub298 = fsub float 1.000000e+00, %178, !dbg !9621
  %tb299 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !9622
  store float %sub298, float* %tb299, align 4, !dbg !9623
  br label %if.end300, !dbg !9624

if.end300:                                        ; preds = %if.then292, %if.then289
  %tin301 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9625
  %179 = load float, float* %tin301, align 8, !dbg !9625
  %sub302 = fsub float 1.000000e+00, %179, !dbg !9626
  %tin303 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9627
  store float %sub302, float* %tin303, align 8, !dbg !9628
  br label %if.end304, !dbg !9629

if.end304:                                        ; preds = %if.end300, %if.end284
  %180 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9630
  %texflag305 = getelementptr inbounds %struct.MTex, %struct.MTex* %180, i32 0, i32 14, !dbg !9632
  %181 = load i16, i16* %texflag305, align 8, !dbg !9632
  %conv306 = sext i16 %181 to i32, !dbg !9630
  %and307 = and i32 %conv306, 2, !dbg !9633
  %tobool308 = icmp ne i32 %and307, 0, !dbg !9633
  br i1 %tobool308, label %if.then309, label %if.end322, !dbg !9634

if.then309:                                       ; preds = %if.end304
  %182 = load i32, i32* %rgbnor, align 4, !dbg !9635
  %and310 = and i32 %182, 1, !dbg !9638
  %tobool311 = icmp ne i32 %and310, 0, !dbg !9638
  br i1 %tobool311, label %if.then312, label %if.else316, !dbg !9639

if.then312:                                       ; preds = %if.then309
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !9640
  %183 = load float, float* %ta, align 8, !dbg !9640
  store float %183, float* %fact, align 4, !dbg !9642
  %184 = load float, float* %stencilTin, align 4, !dbg !9643
  %ta313 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !9644
  %185 = load float, float* %ta313, align 8, !dbg !9645
  %mul314 = fmul float %185, %184, !dbg !9645
  store float %mul314, float* %ta313, align 8, !dbg !9645
  %186 = load float, float* %fact, align 4, !dbg !9646
  %187 = load float, float* %stencilTin, align 4, !dbg !9647
  %mul315 = fmul float %187, %186, !dbg !9647
  store float %mul315, float* %stencilTin, align 4, !dbg !9647
  br label %if.end321, !dbg !9648

if.else316:                                       ; preds = %if.then309
  %tin317 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9649
  %188 = load float, float* %tin317, align 8, !dbg !9649
  store float %188, float* %fact, align 4, !dbg !9651
  %189 = load float, float* %stencilTin, align 4, !dbg !9652
  %tin318 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9653
  %190 = load float, float* %tin318, align 8, !dbg !9654
  %mul319 = fmul float %190, %189, !dbg !9654
  store float %mul319, float* %tin318, align 8, !dbg !9654
  %191 = load float, float* %fact, align 4, !dbg !9655
  %192 = load float, float* %stencilTin, align 4, !dbg !9656
  %mul320 = fmul float %192, %191, !dbg !9656
  store float %mul320, float* %stencilTin, align 4, !dbg !9656
  br label %if.end321

if.end321:                                        ; preds = %if.else316, %if.then312
  br label %if.end322, !dbg !9657

if.end322:                                        ; preds = %if.end321, %if.end304
  %193 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9658
  %and323 = and i32 %193, 13, !dbg !9660
  %tobool324 = icmp ne i32 %and323, 0, !dbg !9660
  br i1 %tobool324, label %land.lhs.true325, label %if.end404, !dbg !9661

land.lhs.true325:                                 ; preds = %if.end322
  %194 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9662
  %mapto326 = getelementptr inbounds %struct.MTex, %struct.MTex* %194, i32 0, i32 1, !dbg !9663
  %195 = load i16, i16* %mapto326, align 2, !dbg !9663
  %conv327 = sext i16 %195 to i32, !dbg !9662
  %and328 = and i32 %conv327, 13, !dbg !9664
  %tobool329 = icmp ne i32 %and328, 0, !dbg !9664
  br i1 %tobool329, label %if.then330, label %if.end404, !dbg !9665

if.then330:                                       ; preds = %land.lhs.true325
  call void @llvm.dbg.declare(metadata [3 x float]* %tcol, metadata !9666, metadata !DIExpression()), !dbg !9668
  %196 = load i32, i32* %rgbnor, align 4, !dbg !9669
  %and331 = and i32 %196, 1, !dbg !9671
  %cmp332 = icmp eq i32 %and331, 0, !dbg !9672
  br i1 %cmp332, label %if.then334, label %if.else337, !dbg !9673

if.then334:                                       ; preds = %if.then330
  %arraydecay335 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9674
  %197 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9676
  %r336 = getelementptr inbounds %struct.MTex, %struct.MTex* %197, i32 0, i32 22, !dbg !9677
  call void @copy_v3_v3(float* %arraydecay335, float* %r336), !dbg !9678
  br label %if.end359, !dbg !9679

if.else337:                                       ; preds = %if.then330
  %198 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9680
  %mapto338 = getelementptr inbounds %struct.MTex, %struct.MTex* %198, i32 0, i32 1, !dbg !9682
  %199 = load i16, i16* %mapto338, align 2, !dbg !9682
  %conv339 = sext i16 %199 to i32, !dbg !9680
  %and340 = and i32 %conv339, 128, !dbg !9683
  %tobool341 = icmp ne i32 %and340, 0, !dbg !9683
  br i1 %tobool341, label %if.then342, label %if.else349, !dbg !9684

if.then342:                                       ; preds = %if.else337
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9685
  %tr344 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9687
  call void @copy_v3_v3(float* %arraydecay343, float* %tr344), !dbg !9688
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !9689
  %200 = load i32, i32* %talpha, align 4, !dbg !9689
  %tobool345 = icmp ne i32 %200, 0, !dbg !9691
  br i1 %tobool345, label %if.then346, label %if.end348, !dbg !9692

if.then346:                                       ; preds = %if.then342
  %201 = load float, float* %stencilTin, align 4, !dbg !9693
  %tin347 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9695
  store float %201, float* %tin347, align 8, !dbg !9696
  br label %if.end348, !dbg !9697

if.end348:                                        ; preds = %if.then346, %if.then342
  br label %if.end358, !dbg !9698

if.else349:                                       ; preds = %if.else337
  %arraydecay350 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9699
  %tr351 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9701
  call void @copy_v3_v3(float* %arraydecay350, float* %tr351), !dbg !9702
  %talpha352 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !9703
  %202 = load i32, i32* %talpha352, align 4, !dbg !9703
  %tobool353 = icmp ne i32 %202, 0, !dbg !9705
  br i1 %tobool353, label %if.then354, label %if.end357, !dbg !9706

if.then354:                                       ; preds = %if.else349
  %ta355 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !9707
  %203 = load float, float* %ta355, align 8, !dbg !9707
  %tin356 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9709
  store float %203, float* %tin356, align 8, !dbg !9710
  br label %if.end357, !dbg !9711

if.end357:                                        ; preds = %if.then354, %if.else349
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.end348
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.then334
  %204 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9712
  %and360 = and i32 %204, 1, !dbg !9714
  %tobool361 = icmp ne i32 %and360, 0, !dbg !9714
  br i1 %tobool361, label %land.lhs.true362, label %if.end373, !dbg !9715

land.lhs.true362:                                 ; preds = %if.end359
  %205 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9716
  %mapto363 = getelementptr inbounds %struct.MTex, %struct.MTex* %205, i32 0, i32 1, !dbg !9717
  %206 = load i16, i16* %mapto363, align 2, !dbg !9717
  %conv364 = sext i16 %206 to i32, !dbg !9716
  %and365 = and i32 %conv364, 1, !dbg !9718
  %tobool366 = icmp ne i32 %and365, 0, !dbg !9718
  br i1 %tobool366, label %if.then367, label %if.end373, !dbg !9719

if.then367:                                       ; preds = %land.lhs.true362
  call void @llvm.dbg.declare(metadata float* %colemitfac, metadata !9720, metadata !DIExpression()), !dbg !9722
  %207 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9723
  %colemitfac368 = getelementptr inbounds %struct.MTex, %struct.MTex* %207, i32 0, i32 43, !dbg !9724
  %208 = load float, float* %colemitfac368, align 8, !dbg !9724
  %209 = load float, float* %stencilTin, align 4, !dbg !9725
  %mul369 = fmul float %208, %209, !dbg !9726
  store float %mul369, float* %colemitfac, align 4, !dbg !9722
  %210 = load float*, float** %col_r.addr, align 8, !dbg !9727
  %arraydecay370 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9728
  %211 = load float*, float** %col_r.addr, align 8, !dbg !9729
  %tin371 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9730
  %212 = load float, float* %tin371, align 8, !dbg !9730
  %213 = load float, float* %colemitfac, align 4, !dbg !9731
  %214 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9732
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %214, i32 0, i32 3, !dbg !9733
  %215 = load i16, i16* %blendtype, align 2, !dbg !9733
  %conv372 = sext i16 %215 to i32, !dbg !9732
  call void @texture_rgb_blend(float* %210, float* %arraydecay370, float* %211, float %212, float %213, i32 %conv372), !dbg !9734
  br label %if.end373, !dbg !9735

if.end373:                                        ; preds = %if.then367, %land.lhs.true362, %if.end359
  %216 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9736
  %and374 = and i32 %216, 4, !dbg !9738
  %tobool375 = icmp ne i32 %and374, 0, !dbg !9738
  br i1 %tobool375, label %land.lhs.true376, label %if.end388, !dbg !9739

land.lhs.true376:                                 ; preds = %if.end373
  %217 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9740
  %mapto377 = getelementptr inbounds %struct.MTex, %struct.MTex* %217, i32 0, i32 1, !dbg !9741
  %218 = load i16, i16* %mapto377, align 2, !dbg !9741
  %conv378 = sext i16 %218 to i32, !dbg !9740
  %and379 = and i32 %conv378, 4, !dbg !9742
  %tobool380 = icmp ne i32 %and379, 0, !dbg !9742
  br i1 %tobool380, label %if.then381, label %if.end388, !dbg !9743

if.then381:                                       ; preds = %land.lhs.true376
  call void @llvm.dbg.declare(metadata float* %colreflfac, metadata !9744, metadata !DIExpression()), !dbg !9746
  %219 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9747
  %colreflfac382 = getelementptr inbounds %struct.MTex, %struct.MTex* %219, i32 0, i32 44, !dbg !9748
  %220 = load float, float* %colreflfac382, align 4, !dbg !9748
  %221 = load float, float* %stencilTin, align 4, !dbg !9749
  %mul383 = fmul float %220, %221, !dbg !9750
  store float %mul383, float* %colreflfac, align 4, !dbg !9746
  %222 = load float*, float** %col_r.addr, align 8, !dbg !9751
  %arraydecay384 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9752
  %223 = load float*, float** %col_r.addr, align 8, !dbg !9753
  %tin385 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9754
  %224 = load float, float* %tin385, align 8, !dbg !9754
  %225 = load float, float* %colreflfac, align 4, !dbg !9755
  %226 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9756
  %blendtype386 = getelementptr inbounds %struct.MTex, %struct.MTex* %226, i32 0, i32 3, !dbg !9757
  %227 = load i16, i16* %blendtype386, align 2, !dbg !9757
  %conv387 = sext i16 %227 to i32, !dbg !9756
  call void @texture_rgb_blend(float* %222, float* %arraydecay384, float* %223, float %224, float %225, i32 %conv387), !dbg !9758
  br label %if.end388, !dbg !9759

if.end388:                                        ; preds = %if.then381, %land.lhs.true376, %if.end373
  %228 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9760
  %and389 = and i32 %228, 8, !dbg !9762
  %tobool390 = icmp ne i32 %and389, 0, !dbg !9762
  br i1 %tobool390, label %land.lhs.true391, label %if.end403, !dbg !9763

land.lhs.true391:                                 ; preds = %if.end388
  %229 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9764
  %mapto392 = getelementptr inbounds %struct.MTex, %struct.MTex* %229, i32 0, i32 1, !dbg !9765
  %230 = load i16, i16* %mapto392, align 2, !dbg !9765
  %conv393 = sext i16 %230 to i32, !dbg !9764
  %and394 = and i32 %conv393, 8, !dbg !9766
  %tobool395 = icmp ne i32 %and394, 0, !dbg !9766
  br i1 %tobool395, label %if.then396, label %if.end403, !dbg !9767

if.then396:                                       ; preds = %land.lhs.true391
  call void @llvm.dbg.declare(metadata float* %coltransfac, metadata !9768, metadata !DIExpression()), !dbg !9770
  %231 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9771
  %coltransfac397 = getelementptr inbounds %struct.MTex, %struct.MTex* %231, i32 0, i32 45, !dbg !9772
  %232 = load float, float* %coltransfac397, align 8, !dbg !9772
  %233 = load float, float* %stencilTin, align 4, !dbg !9773
  %mul398 = fmul float %232, %233, !dbg !9774
  store float %mul398, float* %coltransfac, align 4, !dbg !9770
  %234 = load float*, float** %col_r.addr, align 8, !dbg !9775
  %arraydecay399 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !9776
  %235 = load float*, float** %col_r.addr, align 8, !dbg !9777
  %tin400 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9778
  %236 = load float, float* %tin400, align 8, !dbg !9778
  %237 = load float, float* %coltransfac, align 4, !dbg !9779
  %238 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9780
  %blendtype401 = getelementptr inbounds %struct.MTex, %struct.MTex* %238, i32 0, i32 3, !dbg !9781
  %239 = load i16, i16* %blendtype401, align 2, !dbg !9781
  %conv402 = sext i16 %239 to i32, !dbg !9780
  call void @texture_rgb_blend(float* %234, float* %arraydecay399, float* %235, float %236, float %237, i32 %conv402), !dbg !9782
  br label %if.end403, !dbg !9783

if.end403:                                        ; preds = %if.then396, %land.lhs.true391, %if.end388
  br label %if.end404, !dbg !9784

if.end404:                                        ; preds = %if.end403, %land.lhs.true325, %if.end322
  %240 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9785
  %and405 = and i32 %240, 65520, !dbg !9787
  %tobool406 = icmp ne i32 %and405, 0, !dbg !9787
  br i1 %tobool406, label %land.lhs.true407, label %if.end521, !dbg !9788

land.lhs.true407:                                 ; preds = %if.end404
  %241 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9789
  %mapto408 = getelementptr inbounds %struct.MTex, %struct.MTex* %241, i32 0, i32 1, !dbg !9790
  %242 = load i16, i16* %mapto408, align 2, !dbg !9790
  %conv409 = sext i16 %242 to i32, !dbg !9789
  %and410 = and i32 %conv409, 65520, !dbg !9791
  %tobool411 = icmp ne i32 %and410, 0, !dbg !9791
  br i1 %tobool411, label %if.then412, label %if.end521, !dbg !9792

if.then412:                                       ; preds = %land.lhs.true407
  %243 = load i32, i32* %rgbnor, align 4, !dbg !9793
  %and413 = and i32 %243, 1, !dbg !9796
  %tobool414 = icmp ne i32 %and413, 0, !dbg !9796
  br i1 %tobool414, label %if.then415, label %if.end426, !dbg !9797

if.then415:                                       ; preds = %if.then412
  %talpha416 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !9798
  %244 = load i32, i32* %talpha416, align 4, !dbg !9798
  %tobool417 = icmp ne i32 %244, 0, !dbg !9801
  br i1 %tobool417, label %if.then418, label %if.else421, !dbg !9802

if.then418:                                       ; preds = %if.then415
  %ta419 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !9803
  %245 = load float, float* %ta419, align 8, !dbg !9803
  %tin420 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9804
  store float %245, float* %tin420, align 8, !dbg !9805
  br label %if.end425, !dbg !9806

if.else421:                                       ; preds = %if.then415
  %tr422 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !9807
  %call423 = call float @rgb_to_grayscale(float* %tr422), !dbg !9808
  %tin424 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9809
  store float %call423, float* %tin424, align 8, !dbg !9810
  br label %if.end425

if.end425:                                        ; preds = %if.else421, %if.then418
  br label %if.end426, !dbg !9811

if.end426:                                        ; preds = %if.end425, %if.then412
  %246 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9812
  %and427 = and i32 %246, 64, !dbg !9814
  %tobool428 = icmp ne i32 %and427, 0, !dbg !9814
  br i1 %tobool428, label %land.lhs.true429, label %if.end445, !dbg !9815

land.lhs.true429:                                 ; preds = %if.end426
  %247 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9816
  %mapto430 = getelementptr inbounds %struct.MTex, %struct.MTex* %247, i32 0, i32 1, !dbg !9817
  %248 = load i16, i16* %mapto430, align 2, !dbg !9817
  %conv431 = sext i16 %248 to i32, !dbg !9816
  %and432 = and i32 %conv431, 64, !dbg !9818
  %tobool433 = icmp ne i32 %and432, 0, !dbg !9818
  br i1 %tobool433, label %if.then434, label %if.end445, !dbg !9819

if.then434:                                       ; preds = %land.lhs.true429
  call void @llvm.dbg.declare(metadata float* %emitfac, metadata !9820, metadata !DIExpression()), !dbg !9822
  %249 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9823
  %emitfac435 = getelementptr inbounds %struct.MTex, %struct.MTex* %249, i32 0, i32 38, !dbg !9824
  %250 = load float, float* %emitfac435, align 4, !dbg !9824
  %251 = load float, float* %stencilTin, align 4, !dbg !9825
  %mul436 = fmul float %250, %251, !dbg !9826
  store float %mul436, float* %emitfac, align 4, !dbg !9822
  %252 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9827
  %def_var = getelementptr inbounds %struct.MTex, %struct.MTex* %252, i32 0, i32 26, !dbg !9828
  %253 = load float, float* %def_var, align 4, !dbg !9828
  %254 = load float*, float** %val.addr, align 8, !dbg !9829
  %255 = load float, float* %254, align 4, !dbg !9830
  %tin437 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9831
  %256 = load float, float* %tin437, align 8, !dbg !9831
  %257 = load float, float* %emitfac, align 4, !dbg !9832
  %258 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9833
  %blendtype438 = getelementptr inbounds %struct.MTex, %struct.MTex* %258, i32 0, i32 3, !dbg !9834
  %259 = load i16, i16* %blendtype438, align 2, !dbg !9834
  %conv439 = sext i16 %259 to i32, !dbg !9833
  %call440 = call float @texture_value_blend(float %253, float %255, float %256, float %257, i32 %conv439), !dbg !9835
  %260 = load float*, float** %val.addr, align 8, !dbg !9836
  store float %call440, float* %260, align 4, !dbg !9837
  %261 = load float*, float** %val.addr, align 8, !dbg !9838
  %262 = load float, float* %261, align 4, !dbg !9840
  %cmp441 = fcmp olt float %262, 0.000000e+00, !dbg !9841
  br i1 %cmp441, label %if.then443, label %if.end444, !dbg !9842

if.then443:                                       ; preds = %if.then434
  %263 = load float*, float** %val.addr, align 8, !dbg !9843
  store float 0.000000e+00, float* %263, align 4, !dbg !9844
  br label %if.end444, !dbg !9845

if.end444:                                        ; preds = %if.then443, %if.then434
  br label %if.end445, !dbg !9846

if.end445:                                        ; preds = %if.end444, %land.lhs.true429, %if.end426
  %264 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9847
  %and446 = and i32 %264, 128, !dbg !9849
  %tobool447 = icmp ne i32 %and446, 0, !dbg !9849
  br i1 %tobool447, label %land.lhs.true448, label %if.end470, !dbg !9850

land.lhs.true448:                                 ; preds = %if.end445
  %265 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9851
  %mapto449 = getelementptr inbounds %struct.MTex, %struct.MTex* %265, i32 0, i32 1, !dbg !9852
  %266 = load i16, i16* %mapto449, align 2, !dbg !9852
  %conv450 = sext i16 %266 to i32, !dbg !9851
  %and451 = and i32 %conv450, 128, !dbg !9853
  %tobool452 = icmp ne i32 %and451, 0, !dbg !9853
  br i1 %tobool452, label %if.then453, label %if.end470, !dbg !9854

if.then453:                                       ; preds = %land.lhs.true448
  call void @llvm.dbg.declare(metadata float* %densfac, metadata !9855, metadata !DIExpression()), !dbg !9857
  %267 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9858
  %densfac454 = getelementptr inbounds %struct.MTex, %struct.MTex* %267, i32 0, i32 46, !dbg !9859
  %268 = load float, float* %densfac454, align 4, !dbg !9859
  %269 = load float, float* %stencilTin, align 4, !dbg !9860
  %mul455 = fmul float %268, %269, !dbg !9861
  store float %mul455, float* %densfac, align 4, !dbg !9857
  %270 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9862
  %def_var456 = getelementptr inbounds %struct.MTex, %struct.MTex* %270, i32 0, i32 26, !dbg !9863
  %271 = load float, float* %def_var456, align 4, !dbg !9863
  %272 = load float*, float** %val.addr, align 8, !dbg !9864
  %273 = load float, float* %272, align 4, !dbg !9865
  %tin457 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9866
  %274 = load float, float* %tin457, align 8, !dbg !9866
  %275 = load float, float* %densfac, align 4, !dbg !9867
  %276 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9868
  %blendtype458 = getelementptr inbounds %struct.MTex, %struct.MTex* %276, i32 0, i32 3, !dbg !9869
  %277 = load i16, i16* %blendtype458, align 2, !dbg !9869
  %conv459 = sext i16 %277 to i32, !dbg !9868
  %call460 = call float @texture_value_blend(float %271, float %273, float %274, float %275, i32 %conv459), !dbg !9870
  %278 = load float*, float** %val.addr, align 8, !dbg !9871
  store float %call460, float* %278, align 4, !dbg !9872
  %279 = load float*, float** %val.addr, align 8, !dbg !9873
  %280 = load float, float* %279, align 4, !dbg !9873
  %cmp461 = fcmp olt float %280, 0.000000e+00, !dbg !9873
  br i1 %cmp461, label %if.then463, label %if.else464, !dbg !9876

if.then463:                                       ; preds = %if.then453
  %281 = load float*, float** %val.addr, align 8, !dbg !9873
  store float 0.000000e+00, float* %281, align 4, !dbg !9873
  br label %if.end469, !dbg !9873

if.else464:                                       ; preds = %if.then453
  %282 = load float*, float** %val.addr, align 8, !dbg !9877
  %283 = load float, float* %282, align 4, !dbg !9877
  %cmp465 = fcmp ogt float %283, 1.000000e+00, !dbg !9877
  br i1 %cmp465, label %if.then467, label %if.end468, !dbg !9873

if.then467:                                       ; preds = %if.else464
  %284 = load float*, float** %val.addr, align 8, !dbg !9877
  store float 1.000000e+00, float* %284, align 4, !dbg !9877
  br label %if.end468, !dbg !9877

if.end468:                                        ; preds = %if.then467, %if.else464
  br label %if.end469

if.end469:                                        ; preds = %if.end468, %if.then463
  br label %if.end470, !dbg !9879

if.end470:                                        ; preds = %if.end469, %land.lhs.true448, %if.end445
  %285 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9880
  %and471 = and i32 %285, 16, !dbg !9882
  %tobool472 = icmp ne i32 %and471, 0, !dbg !9882
  br i1 %tobool472, label %land.lhs.true473, label %if.end495, !dbg !9883

land.lhs.true473:                                 ; preds = %if.end470
  %286 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9884
  %mapto474 = getelementptr inbounds %struct.MTex, %struct.MTex* %286, i32 0, i32 1, !dbg !9885
  %287 = load i16, i16* %mapto474, align 2, !dbg !9885
  %conv475 = sext i16 %287 to i32, !dbg !9884
  %and476 = and i32 %conv475, 16, !dbg !9886
  %tobool477 = icmp ne i32 %and476, 0, !dbg !9886
  br i1 %tobool477, label %if.then478, label %if.end495, !dbg !9887

if.then478:                                       ; preds = %land.lhs.true473
  call void @llvm.dbg.declare(metadata float* %scatterfac, metadata !9888, metadata !DIExpression()), !dbg !9890
  %288 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9891
  %scatterfac479 = getelementptr inbounds %struct.MTex, %struct.MTex* %288, i32 0, i32 47, !dbg !9892
  %289 = load float, float* %scatterfac479, align 8, !dbg !9892
  %290 = load float, float* %stencilTin, align 4, !dbg !9893
  %mul480 = fmul float %289, %290, !dbg !9894
  store float %mul480, float* %scatterfac, align 4, !dbg !9890
  %291 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9895
  %def_var481 = getelementptr inbounds %struct.MTex, %struct.MTex* %291, i32 0, i32 26, !dbg !9896
  %292 = load float, float* %def_var481, align 4, !dbg !9896
  %293 = load float*, float** %val.addr, align 8, !dbg !9897
  %294 = load float, float* %293, align 4, !dbg !9898
  %tin482 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9899
  %295 = load float, float* %tin482, align 8, !dbg !9899
  %296 = load float, float* %scatterfac, align 4, !dbg !9900
  %297 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9901
  %blendtype483 = getelementptr inbounds %struct.MTex, %struct.MTex* %297, i32 0, i32 3, !dbg !9902
  %298 = load i16, i16* %blendtype483, align 2, !dbg !9902
  %conv484 = sext i16 %298 to i32, !dbg !9901
  %call485 = call float @texture_value_blend(float %292, float %294, float %295, float %296, i32 %conv484), !dbg !9903
  %299 = load float*, float** %val.addr, align 8, !dbg !9904
  store float %call485, float* %299, align 4, !dbg !9905
  %300 = load float*, float** %val.addr, align 8, !dbg !9906
  %301 = load float, float* %300, align 4, !dbg !9906
  %cmp486 = fcmp olt float %301, 0.000000e+00, !dbg !9906
  br i1 %cmp486, label %if.then488, label %if.else489, !dbg !9909

if.then488:                                       ; preds = %if.then478
  %302 = load float*, float** %val.addr, align 8, !dbg !9906
  store float 0.000000e+00, float* %302, align 4, !dbg !9906
  br label %if.end494, !dbg !9906

if.else489:                                       ; preds = %if.then478
  %303 = load float*, float** %val.addr, align 8, !dbg !9910
  %304 = load float, float* %303, align 4, !dbg !9910
  %cmp490 = fcmp ogt float %304, 1.000000e+00, !dbg !9910
  br i1 %cmp490, label %if.then492, label %if.end493, !dbg !9906

if.then492:                                       ; preds = %if.else489
  %305 = load float*, float** %val.addr, align 8, !dbg !9910
  store float 1.000000e+00, float* %305, align 4, !dbg !9910
  br label %if.end493, !dbg !9910

if.end493:                                        ; preds = %if.then492, %if.else489
  br label %if.end494

if.end494:                                        ; preds = %if.end493, %if.then488
  br label %if.end495, !dbg !9912

if.end495:                                        ; preds = %if.end494, %land.lhs.true473, %if.end470
  %306 = load i32, i32* %mapto_flag.addr, align 4, !dbg !9913
  %and496 = and i32 %306, 32, !dbg !9915
  %tobool497 = icmp ne i32 %and496, 0, !dbg !9915
  br i1 %tobool497, label %land.lhs.true498, label %if.end520, !dbg !9916

land.lhs.true498:                                 ; preds = %if.end495
  %307 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9917
  %mapto499 = getelementptr inbounds %struct.MTex, %struct.MTex* %307, i32 0, i32 1, !dbg !9918
  %308 = load i16, i16* %mapto499, align 2, !dbg !9918
  %conv500 = sext i16 %308 to i32, !dbg !9917
  %and501 = and i32 %conv500, 32, !dbg !9919
  %tobool502 = icmp ne i32 %and501, 0, !dbg !9919
  br i1 %tobool502, label %if.then503, label %if.end520, !dbg !9920

if.then503:                                       ; preds = %land.lhs.true498
  call void @llvm.dbg.declare(metadata float* %reflfac, metadata !9921, metadata !DIExpression()), !dbg !9923
  %309 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9924
  %reflfac504 = getelementptr inbounds %struct.MTex, %struct.MTex* %309, i32 0, i32 48, !dbg !9925
  %310 = load float, float* %reflfac504, align 4, !dbg !9925
  %311 = load float, float* %stencilTin, align 4, !dbg !9926
  %mul505 = fmul float %310, %311, !dbg !9927
  store float %mul505, float* %reflfac, align 4, !dbg !9923
  %312 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9928
  %def_var506 = getelementptr inbounds %struct.MTex, %struct.MTex* %312, i32 0, i32 26, !dbg !9929
  %313 = load float, float* %def_var506, align 4, !dbg !9929
  %314 = load float*, float** %val.addr, align 8, !dbg !9930
  %315 = load float, float* %314, align 4, !dbg !9931
  %tin507 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !9932
  %316 = load float, float* %tin507, align 8, !dbg !9932
  %317 = load float, float* %reflfac, align 4, !dbg !9933
  %318 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9934
  %blendtype508 = getelementptr inbounds %struct.MTex, %struct.MTex* %318, i32 0, i32 3, !dbg !9935
  %319 = load i16, i16* %blendtype508, align 2, !dbg !9935
  %conv509 = sext i16 %319 to i32, !dbg !9934
  %call510 = call float @texture_value_blend(float %313, float %315, float %316, float %317, i32 %conv509), !dbg !9936
  %320 = load float*, float** %val.addr, align 8, !dbg !9937
  store float %call510, float* %320, align 4, !dbg !9938
  %321 = load float*, float** %val.addr, align 8, !dbg !9939
  %322 = load float, float* %321, align 4, !dbg !9939
  %cmp511 = fcmp olt float %322, 0.000000e+00, !dbg !9939
  br i1 %cmp511, label %if.then513, label %if.else514, !dbg !9942

if.then513:                                       ; preds = %if.then503
  %323 = load float*, float** %val.addr, align 8, !dbg !9939
  store float 0.000000e+00, float* %323, align 4, !dbg !9939
  br label %if.end519, !dbg !9939

if.else514:                                       ; preds = %if.then503
  %324 = load float*, float** %val.addr, align 8, !dbg !9943
  %325 = load float, float* %324, align 4, !dbg !9943
  %cmp515 = fcmp ogt float %325, 1.000000e+00, !dbg !9943
  br i1 %cmp515, label %if.then517, label %if.end518, !dbg !9939

if.then517:                                       ; preds = %if.else514
  %326 = load float*, float** %val.addr, align 8, !dbg !9943
  store float 1.000000e+00, float* %326, align 4, !dbg !9943
  br label %if.end518, !dbg !9943

if.end518:                                        ; preds = %if.then517, %if.else514
  br label %if.end519

if.end519:                                        ; preds = %if.end518, %if.then513
  br label %if.end520, !dbg !9945

if.end520:                                        ; preds = %if.end519, %land.lhs.true498, %if.end495
  br label %if.end521, !dbg !9946

if.end521:                                        ; preds = %if.end520, %land.lhs.true407, %if.end404
  br label %if.end522, !dbg !9947

if.end522:                                        ; preds = %if.end521, %if.end4
  br label %for.inc, !dbg !9948

for.inc:                                          ; preds = %if.end522, %if.then207, %if.else200, %if.then19, %if.then15, %if.then3
  %327 = load i32, i32* %tex_nr, align 4, !dbg !9949
  %inc = add nsw i32 %327, 1, !dbg !9949
  store i32 %inc, i32* %tex_nr, align 4, !dbg !9949
  br label %for.cond, !dbg !9950, !llvm.loop !9951

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9953
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @multitex(%struct.Tex* %tex, float* %texvec, float* %dxt, float* %dyt, i32 %osatex, %struct.TexResult* %texres, i16 signext %thread, i16 signext %which_output, %struct.ImagePool* %pool) #0 !dbg !9954 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %osatex.addr = alloca i32, align 4
  %texres.addr = alloca %struct.TexResult*, align 8
  %thread.addr = alloca i16, align 2
  %which_output.addr = alloca i16, align 2
  %pool.addr = alloca %struct.ImagePool*, align 8
  %tmpvec = alloca [3 x float], align 4
  %retval1 = alloca i32, align 4
  %col = alloca [4 x float], align 16
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !9959, metadata !DIExpression()), !dbg !9960
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i32 %osatex, i32* %osatex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %osatex.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i16 %thread, i16* %thread.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %thread.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  store i16 %which_output, i16* %which_output.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %which_output.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata [3 x float]* %tmpvec, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9977, metadata !DIExpression()), !dbg !9978
  store i32 0, i32* %retval1, align 4, !dbg !9978
  %0 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !9979
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %0, i32 0, i32 5, !dbg !9980
  store i32 0, i32* %talpha, align 4, !dbg !9981
  %1 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !9982
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %1, i32 0, i32 61, !dbg !9984
  %2 = load i8, i8* %use_nodes, align 8, !dbg !9984
  %conv = zext i8 %2 to i32, !dbg !9982
  %tobool = icmp ne i32 %conv, 0, !dbg !9982
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9985

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !9986
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %3, i32 0, i32 52, !dbg !9987
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !9987
  %tobool2 = icmp ne %struct.bNodeTree* %4, null, !dbg !9986
  br i1 %tobool2, label %if.then, label %if.else, !dbg !9988

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !9989
  %nodetree3 = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 52, !dbg !9991
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree3, align 8, !dbg !9991
  %7 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !9992
  %8 = load float*, float** %texvec.addr, align 8, !dbg !9993
  %9 = load float*, float** %dxt.addr, align 8, !dbg !9994
  %10 = load float*, float** %dyt.addr, align 8, !dbg !9995
  %11 = load i32, i32* %osatex.addr, align 4, !dbg !9996
  %12 = load i16, i16* %thread.addr, align 2, !dbg !9997
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !9998
  %14 = load i16, i16* %which_output.addr, align 2, !dbg !9999
  %15 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 5), align 8, !dbg !10000
  %16 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !10001
  %and = and i32 %16, 262144, !dbg !10002
  %cmp = icmp ne i32 %and, 0, !dbg !10003
  %conv4 = zext i1 %cmp to i32, !dbg !10003
  %call = call i32 @ntreeTexExecTree(%struct.bNodeTree* %6, %struct.TexResult* %7, float* %8, float* %9, float* %10, i32 %11, i16 signext %12, %struct.Tex* %13, i16 signext %14, i32 %15, i32 %conv4, %struct.ShadeInput* null, %struct.MTex* null), !dbg !10004
  store i32 %call, i32* %retval1, align 4, !dbg !10005
  br label %if.end73, !dbg !10006

if.else:                                          ; preds = %land.lhs.true, %entry
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10007
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 32, !dbg !10009
  %18 = load i16, i16* %type, align 8, !dbg !10009
  %conv5 = sext i16 %18 to i32, !dbg !10007
  switch i32 %conv5, label %sw.epilog72 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb8
    i32 3, label %sw.bb10
    i32 4, label %sw.bb12
    i32 5, label %sw.bb14
    i32 6, label %sw.bb16
    i32 7, label %sw.bb18
    i32 8, label %sw.bb21
    i32 10, label %sw.bb33
    i32 11, label %sw.bb35
    i32 12, label %sw.bb50
    i32 13, label %sw.bb58
    i32 14, label %sw.bb66
    i32 15, label %sw.bb68
    i32 16, label %sw.bb70
  ], !dbg !10010

sw.bb:                                            ; preds = %if.else
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10011
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 0, !dbg !10013
  store float 0.000000e+00, float* %tin, align 8, !dbg !10014
  store i32 0, i32* %retval, align 4, !dbg !10015
  br label %return, !dbg !10015

sw.bb6:                                           ; preds = %if.else
  %20 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10016
  %21 = load float*, float** %texvec.addr, align 8, !dbg !10017
  %22 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10018
  %call7 = call i32 @clouds(%struct.Tex* %20, float* %21, %struct.TexResult* %22), !dbg !10019
  store i32 %call7, i32* %retval1, align 4, !dbg !10020
  br label %sw.epilog72, !dbg !10021

sw.bb8:                                           ; preds = %if.else
  %23 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10022
  %24 = load float*, float** %texvec.addr, align 8, !dbg !10023
  %25 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10024
  %call9 = call i32 @wood(%struct.Tex* %23, float* %24, %struct.TexResult* %25), !dbg !10025
  store i32 %call9, i32* %retval1, align 4, !dbg !10026
  br label %sw.epilog72, !dbg !10027

sw.bb10:                                          ; preds = %if.else
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10028
  %27 = load float*, float** %texvec.addr, align 8, !dbg !10029
  %28 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10030
  %call11 = call i32 @marble(%struct.Tex* %26, float* %27, %struct.TexResult* %28), !dbg !10031
  store i32 %call11, i32* %retval1, align 4, !dbg !10032
  br label %sw.epilog72, !dbg !10033

sw.bb12:                                          ; preds = %if.else
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10034
  %30 = load float*, float** %texvec.addr, align 8, !dbg !10035
  %31 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10036
  %call13 = call i32 @magic(%struct.Tex* %29, float* %30, %struct.TexResult* %31), !dbg !10037
  store i32 %call13, i32* %retval1, align 4, !dbg !10038
  br label %sw.epilog72, !dbg !10039

sw.bb14:                                          ; preds = %if.else
  %32 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10040
  %33 = load float*, float** %texvec.addr, align 8, !dbg !10041
  %34 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10042
  %call15 = call i32 @blend(%struct.Tex* %32, float* %33, %struct.TexResult* %34), !dbg !10043
  store i32 %call15, i32* %retval1, align 4, !dbg !10044
  br label %sw.epilog72, !dbg !10045

sw.bb16:                                          ; preds = %if.else
  %35 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10046
  %36 = load float*, float** %texvec.addr, align 8, !dbg !10047
  %37 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10048
  %call17 = call i32 @stucci(%struct.Tex* %35, float* %36, %struct.TexResult* %37), !dbg !10049
  store i32 %call17, i32* %retval1, align 4, !dbg !10050
  br label %sw.epilog72, !dbg !10051

sw.bb18:                                          ; preds = %if.else
  %38 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10052
  %39 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10053
  %40 = load i16, i16* %thread.addr, align 2, !dbg !10054
  %conv19 = sext i16 %40 to i32, !dbg !10054
  %call20 = call i32 @texnoise(%struct.Tex* %38, %struct.TexResult* %39, i32 %conv19), !dbg !10055
  store i32 %call20, i32* %retval1, align 4, !dbg !10056
  br label %sw.epilog72, !dbg !10057

sw.bb21:                                          ; preds = %if.else
  %41 = load i32, i32* %osatex.addr, align 4, !dbg !10058
  %tobool22 = icmp ne i32 %41, 0, !dbg !10058
  br i1 %tobool22, label %if.then23, label %if.else25, !dbg !10060

if.then23:                                        ; preds = %sw.bb21
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10061
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10062
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %43, i32 0, i32 54, !dbg !10063
  %44 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10063
  %45 = load float*, float** %texvec.addr, align 8, !dbg !10064
  %46 = load float*, float** %dxt.addr, align 8, !dbg !10065
  %47 = load float*, float** %dyt.addr, align 8, !dbg !10066
  %48 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10067
  %49 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !10068
  %call24 = call i32 @imagewraposa(%struct.Tex* %42, %struct.Image* %44, %struct.ImBuf* null, float* %45, float* %46, float* %47, %struct.TexResult* %48, %struct.ImagePool* %49), !dbg !10069
  store i32 %call24, i32* %retval1, align 4, !dbg !10070
  br label %if.end, !dbg !10071

if.else25:                                        ; preds = %sw.bb21
  %50 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10072
  %51 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10073
  %ima26 = getelementptr inbounds %struct.Tex, %struct.Tex* %51, i32 0, i32 54, !dbg !10074
  %52 = load %struct.Image*, %struct.Image** %ima26, align 8, !dbg !10074
  %53 = load float*, float** %texvec.addr, align 8, !dbg !10075
  %54 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10076
  %55 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !10077
  %call27 = call i32 @imagewrap(%struct.Tex* %50, %struct.Image* %52, %struct.ImBuf* null, float* %53, %struct.TexResult* %54, %struct.ImagePool* %55), !dbg !10078
  store i32 %call27, i32* %retval1, align 4, !dbg !10079
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then23
  %56 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10080
  %ima28 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 54, !dbg !10082
  %57 = load %struct.Image*, %struct.Image** %ima28, align 8, !dbg !10082
  %tobool29 = icmp ne %struct.Image* %57, null, !dbg !10080
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !10083

if.then30:                                        ; preds = %if.end
  %58 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10084
  %ima31 = getelementptr inbounds %struct.Tex, %struct.Tex* %58, i32 0, i32 54, !dbg !10086
  %59 = load %struct.Image*, %struct.Image** %ima31, align 8, !dbg !10086
  call void @BKE_image_tag_time(%struct.Image* %59), !dbg !10087
  br label %if.end32, !dbg !10088

if.end32:                                         ; preds = %if.then30, %if.end
  br label %sw.epilog72, !dbg !10089

sw.bb33:                                          ; preds = %if.else
  %60 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10090
  %61 = load float*, float** %texvec.addr, align 8, !dbg !10091
  %62 = load float*, float** %dxt.addr, align 8, !dbg !10092
  %63 = load float*, float** %dyt.addr, align 8, !dbg !10093
  %64 = load i32, i32* %osatex.addr, align 4, !dbg !10094
  %65 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10095
  %66 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !10096
  %call34 = call i32 @envmaptex(%struct.Tex* %60, float* %61, float* %62, float* %63, i32 %64, %struct.TexResult* %65, %struct.ImagePool* %66), !dbg !10097
  store i32 %call34, i32* %retval1, align 4, !dbg !10098
  br label %sw.epilog72, !dbg !10099

sw.bb35:                                          ; preds = %if.else
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10100
  %67 = load float*, float** %texvec.addr, align 8, !dbg !10101
  call void @copy_v3_v3(float* %arraydecay, float* %67), !dbg !10102
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10103
  %68 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10104
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %68, i32 0, i32 2, !dbg !10105
  %69 = load float, float* %noisesize, align 8, !dbg !10105
  %div = fdiv float 1.000000e+00, %69, !dbg !10106
  call void @mul_v3_fl(float* %arraydecay36, float %div), !dbg !10107
  %70 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10108
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %70, i32 0, i32 33, !dbg !10109
  %71 = load i16, i16* %stype, align 2, !dbg !10109
  %conv37 = sext i16 %71 to i32, !dbg !10108
  switch i32 %conv37, label %sw.epilog [
    i32 0, label %sw.bb38
    i32 3, label %sw.bb38
    i32 1, label %sw.bb42
    i32 2, label %sw.bb42
    i32 4, label %sw.bb46
  ], !dbg !10110

sw.bb38:                                          ; preds = %sw.bb35, %sw.bb35
  %72 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10111
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10113
  %73 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10114
  %call40 = call float @mg_mFractalOrfBmTex(%struct.Tex* %72, float* %arraydecay39, %struct.TexResult* %73), !dbg !10115
  %conv41 = fptosi float %call40 to i32, !dbg !10115
  store i32 %conv41, i32* %retval1, align 4, !dbg !10116
  br label %sw.epilog, !dbg !10117

sw.bb42:                                          ; preds = %sw.bb35, %sw.bb35
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10118
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10119
  %75 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10120
  %call44 = call float @mg_ridgedOrHybridMFTex(%struct.Tex* %74, float* %arraydecay43, %struct.TexResult* %75), !dbg !10121
  %conv45 = fptosi float %call44 to i32, !dbg !10121
  store i32 %conv45, i32* %retval1, align 4, !dbg !10122
  br label %sw.epilog, !dbg !10123

sw.bb46:                                          ; preds = %sw.bb35
  %76 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10124
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10125
  %77 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10126
  %call48 = call float @mg_HTerrainTex(%struct.Tex* %76, float* %arraydecay47, %struct.TexResult* %77), !dbg !10127
  %conv49 = fptosi float %call48 to i32, !dbg !10127
  store i32 %conv49, i32* %retval1, align 4, !dbg !10128
  br label %sw.epilog, !dbg !10129

sw.epilog:                                        ; preds = %sw.bb35, %sw.bb46, %sw.bb42, %sw.bb38
  br label %sw.epilog72, !dbg !10130

sw.bb50:                                          ; preds = %if.else
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10131
  %78 = load float*, float** %texvec.addr, align 8, !dbg !10132
  call void @copy_v3_v3(float* %arraydecay51, float* %78), !dbg !10133
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10134
  %79 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10135
  %noisesize53 = getelementptr inbounds %struct.Tex, %struct.Tex* %79, i32 0, i32 2, !dbg !10136
  %80 = load float, float* %noisesize53, align 8, !dbg !10136
  %div54 = fdiv float 1.000000e+00, %80, !dbg !10137
  call void @mul_v3_fl(float* %arraydecay52, float %div54), !dbg !10138
  %81 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10139
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10140
  %82 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10141
  %call56 = call float @voronoiTex(%struct.Tex* %81, float* %arraydecay55, %struct.TexResult* %82), !dbg !10142
  %conv57 = fptosi float %call56 to i32, !dbg !10142
  store i32 %conv57, i32* %retval1, align 4, !dbg !10143
  br label %sw.epilog72, !dbg !10144

sw.bb58:                                          ; preds = %if.else
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10145
  %83 = load float*, float** %texvec.addr, align 8, !dbg !10146
  call void @copy_v3_v3(float* %arraydecay59, float* %83), !dbg !10147
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10148
  %84 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10149
  %noisesize61 = getelementptr inbounds %struct.Tex, %struct.Tex* %84, i32 0, i32 2, !dbg !10150
  %85 = load float, float* %noisesize61, align 8, !dbg !10150
  %div62 = fdiv float 1.000000e+00, %85, !dbg !10151
  call void @mul_v3_fl(float* %arraydecay60, float %div62), !dbg !10152
  %86 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10153
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %tmpvec, i64 0, i64 0, !dbg !10154
  %87 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10155
  %call64 = call float @mg_distNoiseTex(%struct.Tex* %86, float* %arraydecay63, %struct.TexResult* %87), !dbg !10156
  %conv65 = fptosi float %call64 to i32, !dbg !10156
  store i32 %conv65, i32* %retval1, align 4, !dbg !10157
  br label %sw.epilog72, !dbg !10158

sw.bb66:                                          ; preds = %if.else
  %88 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10159
  %89 = load float*, float** %texvec.addr, align 8, !dbg !10160
  %90 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10161
  %call67 = call i32 @pointdensitytex(%struct.Tex* %88, float* %89, %struct.TexResult* %90), !dbg !10162
  store i32 %call67, i32* %retval1, align 4, !dbg !10163
  br label %sw.epilog72, !dbg !10164

sw.bb68:                                          ; preds = %if.else
  %91 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10165
  %92 = load float*, float** %texvec.addr, align 8, !dbg !10166
  %93 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10167
  %call69 = call i32 @voxeldatatex(%struct.Tex* %91, float* %92, %struct.TexResult* %93), !dbg !10168
  store i32 %call69, i32* %retval1, align 4, !dbg !10169
  br label %sw.epilog72, !dbg !10170

sw.bb70:                                          ; preds = %if.else
  %94 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10171
  %95 = load float*, float** %texvec.addr, align 8, !dbg !10172
  %96 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10173
  %call71 = call i32 @ocean_texture(%struct.Tex* %94, float* %95, %struct.TexResult* %96), !dbg !10174
  store i32 %call71, i32* %retval1, align 4, !dbg !10175
  br label %sw.epilog72, !dbg !10176

sw.epilog72:                                      ; preds = %if.else, %sw.bb70, %sw.bb68, %sw.bb66, %sw.bb58, %sw.bb50, %sw.epilog, %sw.bb33, %if.end32, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6
  br label %if.end73

if.end73:                                         ; preds = %sw.epilog72, %if.then
  %97 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10177
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %97, i32 0, i32 31, !dbg !10179
  %98 = load i16, i16* %flag, align 2, !dbg !10179
  %conv74 = sext i16 %98 to i32, !dbg !10177
  %and75 = and i32 %conv74, 1, !dbg !10180
  %tobool76 = icmp ne i32 %and75, 0, !dbg !10180
  br i1 %tobool76, label %if.then77, label %if.end88, !dbg !10181

if.then77:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !10182, metadata !DIExpression()), !dbg !10184
  %99 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !10185
  %coba = getelementptr inbounds %struct.Tex, %struct.Tex* %99, i32 0, i32 55, !dbg !10187
  %100 = load %struct.ColorBand*, %struct.ColorBand** %coba, align 8, !dbg !10187
  %101 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10188
  %tin78 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %101, i32 0, i32 0, !dbg !10189
  %102 = load float, float* %tin78, align 8, !dbg !10189
  %arraydecay79 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10190
  %call80 = call zeroext i8 @do_colorband(%struct.ColorBand* %100, float %102, float* %arraydecay79), !dbg !10191
  %tobool81 = icmp ne i8 %call80, 0, !dbg !10191
  br i1 %tobool81, label %if.then82, label %if.end87, !dbg !10192

if.then82:                                        ; preds = %if.then77
  %103 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10193
  %talpha83 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %103, i32 0, i32 5, !dbg !10195
  store i32 1, i32* %talpha83, align 4, !dbg !10196
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !10197
  %104 = load float, float* %arrayidx, align 16, !dbg !10197
  %105 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10198
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %105, i32 0, i32 1, !dbg !10199
  store float %104, float* %tr, align 4, !dbg !10200
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !10201
  %106 = load float, float* %arrayidx84, align 4, !dbg !10201
  %107 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10202
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %107, i32 0, i32 2, !dbg !10203
  store float %106, float* %tg, align 8, !dbg !10204
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !10205
  %108 = load float, float* %arrayidx85, align 8, !dbg !10205
  %109 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10206
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %109, i32 0, i32 3, !dbg !10207
  store float %108, float* %tb, align 4, !dbg !10208
  %arrayidx86 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !10209
  %110 = load float, float* %arrayidx86, align 4, !dbg !10209
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !10210
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 4, !dbg !10211
  store float %110, float* %ta, align 8, !dbg !10212
  %112 = load i32, i32* %retval1, align 4, !dbg !10213
  %or = or i32 %112, 1, !dbg !10213
  store i32 %or, i32* %retval1, align 4, !dbg !10213
  br label %if.end87, !dbg !10214

if.end87:                                         ; preds = %if.then82, %if.then77
  br label %if.end88, !dbg !10215

if.end88:                                         ; preds = %if.end87, %if.end73
  %113 = load i32, i32* %retval1, align 4, !dbg !10216
  store i32 %113, i32* %retval, align 4, !dbg !10217
  br label %return, !dbg !10217

return:                                           ; preds = %if.end88, %sw.bb
  %114 = load i32, i32* %retval, align 4, !dbg !10218
  ret i32 %114, !dbg !10218
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @do_halo_tex(%struct.HaloRen* %har, float %xn, float %yn, float* %col_r) #0 !dbg !10219 {
entry:
  %har.addr = alloca %struct.HaloRen*, align 8
  %xn.addr = alloca float, align 4
  %yn.addr = alloca float, align 4
  %col_r.addr = alloca float*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %texres = alloca %struct.TexResult, align 8
  %texvec = alloca [3 x float], align 4
  %dxt = alloca [3 x float], align 4
  %dyt = alloca [3 x float], align 4
  %fact = alloca float, align 4
  %facm = alloca float, align 4
  %dx = alloca float, align 4
  %rgb = alloca i32, align 4
  %osatex = alloca i32, align 4
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.HaloRen* %har, %struct.HaloRen** %har.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store float %xn, float* %xn.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xn.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store float %yn, float* %yn.addr, align 4
  call void @llvm.dbg.declare(metadata float* %yn.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store float* %col_r, float** %col_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col_r.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !10232, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !10234, metadata !DIExpression()), !dbg !10235
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !10235
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !10235
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt, metadata !10238, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt, metadata !10240, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.declare(metadata float* %fact, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata float* %facm, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.declare(metadata float* %dx, metadata !10246, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata i32* %osatex, metadata !10250, metadata !DIExpression()), !dbg !10251
  %1 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !10252
  %and = and i32 %1, 8192, !dbg !10254
  %tobool = icmp ne i32 %and, 0, !dbg !10254
  br i1 %tobool, label %if.then, label %if.end, !dbg !10255

if.then:                                          ; preds = %entry
  br label %if.end342, !dbg !10256

if.end:                                           ; preds = %entry
  %2 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10257
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %2, i32 0, i32 29, !dbg !10258
  %3 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !10258
  %mtex1 = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 102, !dbg !10259
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex1, i64 0, i64 0, !dbg !10257
  %4 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !10257
  store %struct.MTex* %4, %struct.MTex** %mtex, align 8, !dbg !10260
  %5 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10261
  %mat2 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %5, i32 0, i32 29, !dbg !10263
  %6 = load %struct.Material*, %struct.Material** %mat2, align 8, !dbg !10263
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 73, !dbg !10264
  %7 = load i32, i32* %septex, align 8, !dbg !10264
  %and3 = and i32 %7, 1, !dbg !10265
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10265
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10266

if.then5:                                         ; preds = %if.end
  br label %if.end342, !dbg !10267

if.end6:                                          ; preds = %if.end
  %8 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10268
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 5, !dbg !10270
  %9 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10270
  %cmp = icmp eq %struct.Tex* %9, null, !dbg !10271
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !10272

if.then7:                                         ; preds = %if.end6
  br label %if.end342, !dbg !10273

if.end8:                                          ; preds = %if.end6
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !10274
  store float* null, float** %nor, align 8, !dbg !10275
  %10 = load float, float* %xn.addr, align 4, !dbg !10276
  %11 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10277
  %rad = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %11, i32 0, i32 5, !dbg !10278
  %12 = load float, float* %rad, align 8, !dbg !10278
  %div = fdiv float %10, %12, !dbg !10279
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !10280
  store float %div, float* %arrayidx9, align 4, !dbg !10281
  %13 = load float, float* %yn.addr, align 4, !dbg !10282
  %14 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10283
  %rad10 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %14, i32 0, i32 5, !dbg !10284
  %15 = load float, float* %rad10, align 8, !dbg !10284
  %div11 = fdiv float %13, %15, !dbg !10285
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !10286
  store float %div11, float* %arrayidx12, align 4, !dbg !10287
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !10288
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !10289
  %16 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10290
  %mat14 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %16, i32 0, i32 29, !dbg !10291
  %17 = load %struct.Material*, %struct.Material** %mat14, align 8, !dbg !10291
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 90, !dbg !10292
  %18 = load i16, i16* %texco, align 4, !dbg !10292
  %conv = sext i16 %18 to i32, !dbg !10290
  %and15 = and i32 %conv, 512, !dbg !10293
  store i32 %and15, i32* %osatex, align 4, !dbg !10294
  %19 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10295
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %19, i32 0, i32 7, !dbg !10297
  %20 = load i8, i8* %projx, align 8, !dbg !10297
  %tobool16 = icmp ne i8 %20, 0, !dbg !10295
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10298

if.then17:                                        ; preds = %if.end8
  %21 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10299
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %21, i32 0, i32 12, !dbg !10300
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10299
  %22 = load float, float* %arrayidx18, align 8, !dbg !10299
  %23 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10301
  %projx19 = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 7, !dbg !10302
  %24 = load i8, i8* %projx19, align 8, !dbg !10302
  %conv20 = zext i8 %24 to i32, !dbg !10301
  %sub = sub nsw i32 %conv20, 1, !dbg !10303
  %idxprom = sext i32 %sub to i64, !dbg !10304
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 %idxprom, !dbg !10304
  %25 = load float, float* %arrayidx21, align 4, !dbg !10304
  %26 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10305
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %26, i32 0, i32 11, !dbg !10306
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !10305
  %27 = load float, float* %arrayidx22, align 4, !dbg !10305
  %add = fadd float %25, %27, !dbg !10307
  %mul = fmul float %22, %add, !dbg !10308
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !10309
  store float %mul, float* %arrayidx23, align 4, !dbg !10310
  br label %if.end30, !dbg !10309

if.else:                                          ; preds = %if.end8
  %28 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10311
  %size24 = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 12, !dbg !10312
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %size24, i64 0, i64 0, !dbg !10311
  %29 = load float, float* %arrayidx25, align 8, !dbg !10311
  %30 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10313
  %ofs26 = getelementptr inbounds %struct.MTex, %struct.MTex* %30, i32 0, i32 11, !dbg !10314
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %ofs26, i64 0, i64 0, !dbg !10313
  %31 = load float, float* %arrayidx27, align 4, !dbg !10313
  %mul28 = fmul float %29, %31, !dbg !10315
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !10316
  store float %mul28, float* %arrayidx29, align 4, !dbg !10317
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then17
  %32 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10318
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %32, i32 0, i32 8, !dbg !10320
  %33 = load i8, i8* %projy, align 1, !dbg !10320
  %tobool31 = icmp ne i8 %33, 0, !dbg !10318
  br i1 %tobool31, label %if.then32, label %if.else45, !dbg !10321

if.then32:                                        ; preds = %if.end30
  %34 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10322
  %size33 = getelementptr inbounds %struct.MTex, %struct.MTex* %34, i32 0, i32 12, !dbg !10323
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %size33, i64 0, i64 1, !dbg !10322
  %35 = load float, float* %arrayidx34, align 4, !dbg !10322
  %36 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10324
  %projy35 = getelementptr inbounds %struct.MTex, %struct.MTex* %36, i32 0, i32 8, !dbg !10325
  %37 = load i8, i8* %projy35, align 1, !dbg !10325
  %conv36 = zext i8 %37 to i32, !dbg !10324
  %sub37 = sub nsw i32 %conv36, 1, !dbg !10326
  %idxprom38 = sext i32 %sub37 to i64, !dbg !10327
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 %idxprom38, !dbg !10327
  %38 = load float, float* %arrayidx39, align 4, !dbg !10327
  %39 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10328
  %ofs40 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 11, !dbg !10329
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %ofs40, i64 0, i64 1, !dbg !10328
  %40 = load float, float* %arrayidx41, align 4, !dbg !10328
  %add42 = fadd float %38, %40, !dbg !10330
  %mul43 = fmul float %35, %add42, !dbg !10331
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !10332
  store float %mul43, float* %arrayidx44, align 4, !dbg !10333
  br label %if.end52, !dbg !10332

if.else45:                                        ; preds = %if.end30
  %41 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10334
  %size46 = getelementptr inbounds %struct.MTex, %struct.MTex* %41, i32 0, i32 12, !dbg !10335
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %size46, i64 0, i64 1, !dbg !10334
  %42 = load float, float* %arrayidx47, align 4, !dbg !10334
  %43 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10336
  %ofs48 = getelementptr inbounds %struct.MTex, %struct.MTex* %43, i32 0, i32 11, !dbg !10337
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %ofs48, i64 0, i64 1, !dbg !10336
  %44 = load float, float* %arrayidx49, align 4, !dbg !10336
  %mul50 = fmul float %42, %44, !dbg !10338
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !10339
  store float %mul50, float* %arrayidx51, align 4, !dbg !10340
  br label %if.end52

if.end52:                                         ; preds = %if.else45, %if.then32
  %45 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10341
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %45, i32 0, i32 9, !dbg !10343
  %46 = load i8, i8* %projz, align 2, !dbg !10343
  %tobool53 = icmp ne i8 %46, 0, !dbg !10341
  br i1 %tobool53, label %if.then54, label %if.else67, !dbg !10344

if.then54:                                        ; preds = %if.end52
  %47 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10345
  %size55 = getelementptr inbounds %struct.MTex, %struct.MTex* %47, i32 0, i32 12, !dbg !10346
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %size55, i64 0, i64 2, !dbg !10345
  %48 = load float, float* %arrayidx56, align 8, !dbg !10345
  %49 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10347
  %projz57 = getelementptr inbounds %struct.MTex, %struct.MTex* %49, i32 0, i32 9, !dbg !10348
  %50 = load i8, i8* %projz57, align 2, !dbg !10348
  %conv58 = zext i8 %50 to i32, !dbg !10347
  %sub59 = sub nsw i32 %conv58, 1, !dbg !10349
  %idxprom60 = sext i32 %sub59 to i64, !dbg !10350
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 %idxprom60, !dbg !10350
  %51 = load float, float* %arrayidx61, align 4, !dbg !10350
  %52 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10351
  %ofs62 = getelementptr inbounds %struct.MTex, %struct.MTex* %52, i32 0, i32 11, !dbg !10352
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %ofs62, i64 0, i64 2, !dbg !10351
  %53 = load float, float* %arrayidx63, align 4, !dbg !10351
  %add64 = fadd float %51, %53, !dbg !10353
  %mul65 = fmul float %48, %add64, !dbg !10354
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !10355
  store float %mul65, float* %arrayidx66, align 4, !dbg !10356
  br label %if.end74, !dbg !10355

if.else67:                                        ; preds = %if.end52
  %54 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10357
  %size68 = getelementptr inbounds %struct.MTex, %struct.MTex* %54, i32 0, i32 12, !dbg !10358
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %size68, i64 0, i64 2, !dbg !10357
  %55 = load float, float* %arrayidx69, align 8, !dbg !10357
  %56 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10359
  %ofs70 = getelementptr inbounds %struct.MTex, %struct.MTex* %56, i32 0, i32 11, !dbg !10360
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %ofs70, i64 0, i64 2, !dbg !10359
  %57 = load float, float* %arrayidx71, align 4, !dbg !10359
  %mul72 = fmul float %55, %57, !dbg !10361
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !10362
  store float %mul72, float* %arrayidx73, align 4, !dbg !10363
  br label %if.end74

if.end74:                                         ; preds = %if.else67, %if.then54
  %58 = load i32, i32* %osatex, align 4, !dbg !10364
  %tobool75 = icmp ne i32 %58, 0, !dbg !10364
  br i1 %tobool75, label %if.then76, label %if.end118, !dbg !10366

if.then76:                                        ; preds = %if.end74
  %59 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10367
  %rad77 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %59, i32 0, i32 5, !dbg !10369
  %60 = load float, float* %rad77, align 8, !dbg !10369
  %div78 = fdiv float 1.000000e+00, %60, !dbg !10370
  store float %div78, float* %dx, align 4, !dbg !10371
  %61 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10372
  %projx79 = getelementptr inbounds %struct.MTex, %struct.MTex* %61, i32 0, i32 7, !dbg !10374
  %62 = load i8, i8* %projx79, align 8, !dbg !10374
  %tobool80 = icmp ne i8 %62, 0, !dbg !10372
  br i1 %tobool80, label %if.then81, label %if.else90, !dbg !10375

if.then81:                                        ; preds = %if.then76
  %63 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10376
  %size82 = getelementptr inbounds %struct.MTex, %struct.MTex* %63, i32 0, i32 12, !dbg !10378
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %size82, i64 0, i64 0, !dbg !10376
  %64 = load float, float* %arrayidx83, align 8, !dbg !10376
  %65 = load float, float* %dx, align 4, !dbg !10379
  %mul84 = fmul float %64, %65, !dbg !10380
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !10381
  store float %mul84, float* %arrayidx85, align 4, !dbg !10382
  %66 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10383
  %size86 = getelementptr inbounds %struct.MTex, %struct.MTex* %66, i32 0, i32 12, !dbg !10384
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %size86, i64 0, i64 0, !dbg !10383
  %67 = load float, float* %arrayidx87, align 8, !dbg !10383
  %68 = load float, float* %dx, align 4, !dbg !10385
  %mul88 = fmul float %67, %68, !dbg !10386
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !10387
  store float %mul88, float* %arrayidx89, align 4, !dbg !10388
  br label %if.end93, !dbg !10389

if.else90:                                        ; preds = %if.then76
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !10390
  store float 0.000000e+00, float* %arrayidx91, align 4, !dbg !10391
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !10392
  store float 0.000000e+00, float* %arrayidx92, align 4, !dbg !10393
  br label %if.end93

if.end93:                                         ; preds = %if.else90, %if.then81
  %69 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10394
  %projy94 = getelementptr inbounds %struct.MTex, %struct.MTex* %69, i32 0, i32 8, !dbg !10396
  %70 = load i8, i8* %projy94, align 1, !dbg !10396
  %tobool95 = icmp ne i8 %70, 0, !dbg !10394
  br i1 %tobool95, label %if.then96, label %if.else105, !dbg !10397

if.then96:                                        ; preds = %if.end93
  %71 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10398
  %size97 = getelementptr inbounds %struct.MTex, %struct.MTex* %71, i32 0, i32 12, !dbg !10400
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %size97, i64 0, i64 1, !dbg !10398
  %72 = load float, float* %arrayidx98, align 4, !dbg !10398
  %73 = load float, float* %dx, align 4, !dbg !10401
  %mul99 = fmul float %72, %73, !dbg !10402
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !10403
  store float %mul99, float* %arrayidx100, align 4, !dbg !10404
  %74 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10405
  %size101 = getelementptr inbounds %struct.MTex, %struct.MTex* %74, i32 0, i32 12, !dbg !10406
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %size101, i64 0, i64 1, !dbg !10405
  %75 = load float, float* %arrayidx102, align 4, !dbg !10405
  %76 = load float, float* %dx, align 4, !dbg !10407
  %mul103 = fmul float %75, %76, !dbg !10408
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !10409
  store float %mul103, float* %arrayidx104, align 4, !dbg !10410
  br label %if.end108, !dbg !10411

if.else105:                                       ; preds = %if.end93
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !10412
  store float 0.000000e+00, float* %arrayidx106, align 4, !dbg !10413
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !10414
  store float 0.000000e+00, float* %arrayidx107, align 4, !dbg !10415
  br label %if.end108

if.end108:                                        ; preds = %if.else105, %if.then96
  %77 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10416
  %projz109 = getelementptr inbounds %struct.MTex, %struct.MTex* %77, i32 0, i32 9, !dbg !10418
  %78 = load i8, i8* %projz109, align 2, !dbg !10418
  %tobool110 = icmp ne i8 %78, 0, !dbg !10416
  br i1 %tobool110, label %if.then111, label %if.else114, !dbg !10419

if.then111:                                       ; preds = %if.end108
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !10420
  store float 0.000000e+00, float* %arrayidx112, align 4, !dbg !10422
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !10423
  store float 0.000000e+00, float* %arrayidx113, align 4, !dbg !10424
  br label %if.end117, !dbg !10425

if.else114:                                       ; preds = %if.end108
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !10426
  store float 0.000000e+00, float* %arrayidx115, align 4, !dbg !10427
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !10428
  store float 0.000000e+00, float* %arrayidx116, align 4, !dbg !10429
  br label %if.end117

if.end117:                                        ; preds = %if.else114, %if.then111
  br label %if.end118, !dbg !10430

if.end118:                                        ; preds = %if.end117, %if.end74
  %79 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10431
  %tex119 = getelementptr inbounds %struct.MTex, %struct.MTex* %79, i32 0, i32 5, !dbg !10433
  %80 = load %struct.Tex*, %struct.Tex** %tex119, align 8, !dbg !10433
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %80, i32 0, i32 32, !dbg !10434
  %81 = load i16, i16* %type, align 8, !dbg !10434
  %conv120 = sext i16 %81 to i32, !dbg !10431
  %cmp121 = icmp eq i32 %conv120, 8, !dbg !10435
  br i1 %cmp121, label %if.then123, label %if.end126, !dbg !10436

if.then123:                                       ; preds = %if.end118
  %82 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10437
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !10438
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !10439
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !10440
  call void @do_2d_mapping(%struct.MTex* %82, float* %arraydecay, %struct.VlakRen* null, float* null, float* %arraydecay124, float* %arraydecay125), !dbg !10441
  br label %if.end126, !dbg !10441

if.end126:                                        ; preds = %if.then123, %if.end118
  %83 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10442
  %tex127 = getelementptr inbounds %struct.MTex, %struct.MTex* %83, i32 0, i32 5, !dbg !10443
  %84 = load %struct.Tex*, %struct.Tex** %tex127, align 8, !dbg !10443
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !10444
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !10445
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !10446
  %85 = load i32, i32* %osatex, align 4, !dbg !10447
  %86 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10448
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %86, i32 0, i32 19, !dbg !10449
  %87 = load i16, i16* %which_output, align 2, !dbg !10449
  %88 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10450
  %pool = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %88, i32 0, i32 30, !dbg !10451
  %89 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !10451
  %call = call i32 @multitex(%struct.Tex* %84, float* %arraydecay128, float* %arraydecay129, float* %arraydecay130, i32 %85, %struct.TexResult* %texres, i16 signext 0, i16 signext %87, %struct.ImagePool* %89), !dbg !10452
  store i32 %call, i32* %rgb, align 4, !dbg !10453
  %90 = load i32, i32* %rgb, align 4, !dbg !10454
  %tobool131 = icmp ne i32 %90, 0, !dbg !10454
  br i1 %tobool131, label %land.lhs.true, label %if.end137, !dbg !10456

land.lhs.true:                                    ; preds = %if.end126
  %91 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10457
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %91, i32 0, i32 14, !dbg !10458
  %92 = load i16, i16* %texflag, align 8, !dbg !10458
  %conv132 = sext i16 %92 to i32, !dbg !10457
  %and133 = and i32 %conv132, 1, !dbg !10459
  %tobool134 = icmp ne i32 %and133, 0, !dbg !10459
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !10460

if.then135:                                       ; preds = %land.lhs.true
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10461
  %call136 = call float @rgb_to_bw(float* %tr), !dbg !10463
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10464
  store float %call136, float* %tin, align 8, !dbg !10465
  store i32 0, i32* %rgb, align 4, !dbg !10466
  br label %if.end137, !dbg !10467

if.end137:                                        ; preds = %if.then135, %land.lhs.true, %if.end126
  %93 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10468
  %texflag138 = getelementptr inbounds %struct.MTex, %struct.MTex* %93, i32 0, i32 14, !dbg !10470
  %94 = load i16, i16* %texflag138, align 8, !dbg !10470
  %conv139 = sext i16 %94 to i32, !dbg !10468
  %and140 = and i32 %conv139, 4, !dbg !10471
  %tobool141 = icmp ne i32 %and140, 0, !dbg !10471
  br i1 %tobool141, label %if.then142, label %if.end157, !dbg !10472

if.then142:                                       ; preds = %if.end137
  %95 = load i32, i32* %rgb, align 4, !dbg !10473
  %tobool143 = icmp ne i32 %95, 0, !dbg !10473
  br i1 %tobool143, label %if.then144, label %if.else152, !dbg !10476

if.then144:                                       ; preds = %if.then142
  %tr145 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10477
  %96 = load float, float* %tr145, align 4, !dbg !10477
  %sub146 = fsub float 1.000000e+00, %96, !dbg !10479
  %tr147 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10480
  store float %sub146, float* %tr147, align 4, !dbg !10481
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10482
  %97 = load float, float* %tg, align 8, !dbg !10482
  %sub148 = fsub float 1.000000e+00, %97, !dbg !10483
  %tg149 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10484
  store float %sub148, float* %tg149, align 8, !dbg !10485
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10486
  %98 = load float, float* %tb, align 4, !dbg !10486
  %sub150 = fsub float 1.000000e+00, %98, !dbg !10487
  %tb151 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10488
  store float %sub150, float* %tb151, align 4, !dbg !10489
  br label %if.end156, !dbg !10490

if.else152:                                       ; preds = %if.then142
  %tin153 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10491
  %99 = load float, float* %tin153, align 8, !dbg !10491
  %sub154 = fsub float 1.000000e+00, %99, !dbg !10492
  %tin155 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10493
  store float %sub154, float* %tin155, align 8, !dbg !10494
  br label %if.end156

if.end156:                                        ; preds = %if.else152, %if.then144
  br label %if.end157, !dbg !10495

if.end157:                                        ; preds = %if.end156, %if.end137
  %100 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10496
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %100, i32 0, i32 1, !dbg !10498
  %101 = load i16, i16* %mapto, align 2, !dbg !10498
  %conv158 = sext i16 %101 to i32, !dbg !10496
  %and159 = and i32 %conv158, 1, !dbg !10499
  %tobool160 = icmp ne i32 %and159, 0, !dbg !10499
  br i1 %tobool160, label %if.then161, label %if.end321, !dbg !10500

if.then161:                                       ; preds = %if.end157
  %102 = load i32, i32* %rgb, align 4, !dbg !10501
  %cmp162 = icmp eq i32 %102, 0, !dbg !10504
  br i1 %cmp162, label %if.then164, label %if.else168, !dbg !10505

if.then164:                                       ; preds = %if.then161
  %103 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10506
  %r = getelementptr inbounds %struct.MTex, %struct.MTex* %103, i32 0, i32 22, !dbg !10508
  %104 = load float, float* %r, align 4, !dbg !10508
  %tr165 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10509
  store float %104, float* %tr165, align 4, !dbg !10510
  %105 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10511
  %g = getelementptr inbounds %struct.MTex, %struct.MTex* %105, i32 0, i32 23, !dbg !10512
  %106 = load float, float* %g, align 8, !dbg !10512
  %tg166 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10513
  store float %106, float* %tg166, align 8, !dbg !10514
  %107 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10515
  %b = getelementptr inbounds %struct.MTex, %struct.MTex* %107, i32 0, i32 24, !dbg !10516
  %108 = load float, float* %b, align 4, !dbg !10516
  %tb167 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10517
  store float %108, float* %tb167, align 4, !dbg !10518
  br label %if.end178, !dbg !10519

if.else168:                                       ; preds = %if.then161
  %109 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10520
  %mapto169 = getelementptr inbounds %struct.MTex, %struct.MTex* %109, i32 0, i32 1, !dbg !10522
  %110 = load i16, i16* %mapto169, align 2, !dbg !10522
  %conv170 = sext i16 %110 to i32, !dbg !10520
  %and171 = and i32 %conv170, 128, !dbg !10523
  %tobool172 = icmp ne i32 %and171, 0, !dbg !10523
  br i1 %tobool172, label %if.then173, label %if.else175, !dbg !10524

if.then173:                                       ; preds = %if.else168
  %tin174 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10525
  store float 1.000000e+00, float* %tin174, align 8, !dbg !10527
  br label %if.end177, !dbg !10528

if.else175:                                       ; preds = %if.else168
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !10529
  %111 = load float, float* %ta, align 8, !dbg !10529
  %tin176 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10530
  store float %111, float* %tin176, align 8, !dbg !10531
  br label %if.end177

if.end177:                                        ; preds = %if.else175, %if.then173
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then164
  %112 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10532
  %tex179 = getelementptr inbounds %struct.MTex, %struct.MTex* %112, i32 0, i32 5, !dbg !10534
  %113 = load %struct.Tex*, %struct.Tex** %tex179, align 8, !dbg !10534
  %type180 = getelementptr inbounds %struct.Tex, %struct.Tex* %113, i32 0, i32 32, !dbg !10535
  %114 = load i16, i16* %type180, align 8, !dbg !10535
  %conv181 = sext i16 %114 to i32, !dbg !10532
  %cmp182 = icmp eq i32 %conv181, 8, !dbg !10536
  br i1 %cmp182, label %if.then184, label %if.end200, !dbg !10537

if.then184:                                       ; preds = %if.end178
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !10538, metadata !DIExpression()), !dbg !10540
  %115 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10541
  %tex185 = getelementptr inbounds %struct.MTex, %struct.MTex* %115, i32 0, i32 5, !dbg !10542
  %116 = load %struct.Tex*, %struct.Tex** %tex185, align 8, !dbg !10542
  %ima186 = getelementptr inbounds %struct.Tex, %struct.Tex* %116, i32 0, i32 54, !dbg !10543
  %117 = load %struct.Image*, %struct.Image** %ima186, align 8, !dbg !10543
  store %struct.Image* %117, %struct.Image** %ima, align 8, !dbg !10540
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10544, metadata !DIExpression()), !dbg !10545
  %118 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10546
  %119 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10547
  %tex187 = getelementptr inbounds %struct.MTex, %struct.MTex* %119, i32 0, i32 5, !dbg !10548
  %120 = load %struct.Tex*, %struct.Tex** %tex187, align 8, !dbg !10548
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %120, i32 0, i32 51, !dbg !10549
  %121 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10550
  %pool188 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %121, i32 0, i32 30, !dbg !10551
  %122 = load %struct.ImagePool*, %struct.ImagePool** %pool188, align 8, !dbg !10551
  %call189 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %118, %struct.ImageUser* %iuser, %struct.ImagePool* %122), !dbg !10552
  store %struct.ImBuf* %call189, %struct.ImBuf** %ibuf, align 8, !dbg !10545
  %123 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10553
  %tobool190 = icmp ne %struct.ImBuf* %123, null, !dbg !10553
  br i1 %tobool190, label %land.lhs.true191, label %if.end198, !dbg !10555

land.lhs.true191:                                 ; preds = %if.then184
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10556
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %124, i32 0, i32 9, !dbg !10557
  %125 = load float*, float** %rect_float, align 8, !dbg !10557
  %tobool192 = icmp ne float* %125, null, !dbg !10558
  br i1 %tobool192, label %if.end198, label %land.lhs.true193, !dbg !10559

land.lhs.true193:                                 ; preds = %land.lhs.true191
  %126 = load i8, i8* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 8), align 8, !dbg !10560
  %conv194 = zext i8 %126 to i32, !dbg !10561
  %tobool195 = icmp ne i32 %conv194, 0, !dbg !10561
  br i1 %tobool195, label %if.then196, label %if.end198, !dbg !10562

if.then196:                                       ; preds = %land.lhs.true193
  %tr197 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10563
  %127 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10564
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %127, i32 0, i32 34, !dbg !10565
  %128 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !10565
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %tr197, %struct.ColorSpace* %128), !dbg !10566
  br label %if.end198, !dbg !10566

if.end198:                                        ; preds = %if.then196, %land.lhs.true193, %land.lhs.true191, %if.then184
  %129 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !10567
  %130 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10568
  %131 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10569
  %pool199 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %131, i32 0, i32 30, !dbg !10570
  %132 = load %struct.ImagePool*, %struct.ImagePool** %pool199, align 8, !dbg !10570
  call void @BKE_image_pool_release_ibuf(%struct.Image* %129, %struct.ImBuf* %130, %struct.ImagePool* %132), !dbg !10571
  br label %if.end200, !dbg !10572

if.end200:                                        ; preds = %if.end198, %if.end178
  %tin201 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10573
  %133 = load float, float* %tin201, align 8, !dbg !10573
  %134 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10574
  %colfac = getelementptr inbounds %struct.MTex, %struct.MTex* %134, i32 0, i32 28, !dbg !10575
  %135 = load float, float* %colfac, align 4, !dbg !10575
  %mul202 = fmul float %133, %135, !dbg !10576
  store float %mul202, float* %fact, align 4, !dbg !10577
  %136 = load float, float* %fact, align 4, !dbg !10578
  %sub203 = fsub float 1.000000e+00, %136, !dbg !10579
  store float %sub203, float* %facm, align 4, !dbg !10580
  %137 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10581
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %137, i32 0, i32 3, !dbg !10583
  %138 = load i16, i16* %blendtype, align 2, !dbg !10583
  %conv204 = sext i16 %138 to i32, !dbg !10581
  %cmp205 = icmp eq i32 %conv204, 1, !dbg !10584
  br i1 %cmp205, label %if.then207, label %if.end210, !dbg !10585

if.then207:                                       ; preds = %if.end200
  %139 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10586
  %colfac208 = getelementptr inbounds %struct.MTex, %struct.MTex* %139, i32 0, i32 28, !dbg !10588
  %140 = load float, float* %colfac208, align 4, !dbg !10588
  %sub209 = fsub float 1.000000e+00, %140, !dbg !10589
  store float %sub209, float* %facm, align 4, !dbg !10590
  br label %if.end210, !dbg !10591

if.end210:                                        ; preds = %if.then207, %if.end200
  %141 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10592
  %blendtype211 = getelementptr inbounds %struct.MTex, %struct.MTex* %141, i32 0, i32 3, !dbg !10594
  %142 = load i16, i16* %blendtype211, align 2, !dbg !10594
  %conv212 = sext i16 %142 to i32, !dbg !10592
  %cmp213 = icmp eq i32 %conv212, 3, !dbg !10595
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !10596

if.then215:                                       ; preds = %if.end210
  %143 = load float, float* %fact, align 4, !dbg !10597
  %fneg = fneg float %143, !dbg !10598
  store float %fneg, float* %fact, align 4, !dbg !10599
  br label %if.end216, !dbg !10600

if.end216:                                        ; preds = %if.then215, %if.end210
  %144 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10601
  %blendtype217 = getelementptr inbounds %struct.MTex, %struct.MTex* %144, i32 0, i32 3, !dbg !10603
  %145 = load i16, i16* %blendtype217, align 2, !dbg !10603
  %conv218 = sext i16 %145 to i32, !dbg !10601
  %cmp219 = icmp eq i32 %conv218, 0, !dbg !10604
  br i1 %cmp219, label %if.then221, label %if.else240, !dbg !10605

if.then221:                                       ; preds = %if.end216
  %146 = load float, float* %fact, align 4, !dbg !10606
  %tr222 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10608
  %147 = load float, float* %tr222, align 4, !dbg !10608
  %mul223 = fmul float %146, %147, !dbg !10609
  %148 = load float, float* %facm, align 4, !dbg !10610
  %149 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10611
  %r224 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %149, i32 0, i32 14, !dbg !10612
  %150 = load float, float* %r224, align 4, !dbg !10612
  %mul225 = fmul float %148, %150, !dbg !10613
  %add226 = fadd float %mul223, %mul225, !dbg !10614
  %151 = load float*, float** %col_r.addr, align 8, !dbg !10615
  %arrayidx227 = getelementptr inbounds float, float* %151, i64 0, !dbg !10615
  store float %add226, float* %arrayidx227, align 4, !dbg !10616
  %152 = load float, float* %fact, align 4, !dbg !10617
  %tg228 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10618
  %153 = load float, float* %tg228, align 8, !dbg !10618
  %mul229 = fmul float %152, %153, !dbg !10619
  %154 = load float, float* %facm, align 4, !dbg !10620
  %155 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10621
  %g230 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %155, i32 0, i32 13, !dbg !10622
  %156 = load float, float* %g230, align 8, !dbg !10622
  %mul231 = fmul float %154, %156, !dbg !10623
  %add232 = fadd float %mul229, %mul231, !dbg !10624
  %157 = load float*, float** %col_r.addr, align 8, !dbg !10625
  %arrayidx233 = getelementptr inbounds float, float* %157, i64 1, !dbg !10625
  store float %add232, float* %arrayidx233, align 4, !dbg !10626
  %158 = load float, float* %fact, align 4, !dbg !10627
  %tb234 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10628
  %159 = load float, float* %tb234, align 4, !dbg !10628
  %mul235 = fmul float %158, %159, !dbg !10629
  %160 = load float, float* %facm, align 4, !dbg !10630
  %161 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10631
  %b236 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %161, i32 0, i32 12, !dbg !10632
  %162 = load float, float* %b236, align 4, !dbg !10632
  %mul237 = fmul float %160, %162, !dbg !10633
  %add238 = fadd float %mul235, %mul237, !dbg !10634
  %163 = load float*, float** %col_r.addr, align 8, !dbg !10635
  %arrayidx239 = getelementptr inbounds float, float* %163, i64 2, !dbg !10635
  store float %add238, float* %arrayidx239, align 4, !dbg !10636
  br label %if.end320, !dbg !10637

if.else240:                                       ; preds = %if.end216
  %164 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10638
  %blendtype241 = getelementptr inbounds %struct.MTex, %struct.MTex* %164, i32 0, i32 3, !dbg !10640
  %165 = load i16, i16* %blendtype241, align 2, !dbg !10640
  %conv242 = sext i16 %165 to i32, !dbg !10638
  %cmp243 = icmp eq i32 %conv242, 1, !dbg !10641
  br i1 %cmp243, label %if.then245, label %if.else264, !dbg !10642

if.then245:                                       ; preds = %if.else240
  %166 = load float, float* %facm, align 4, !dbg !10643
  %167 = load float, float* %fact, align 4, !dbg !10645
  %tr246 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10646
  %168 = load float, float* %tr246, align 4, !dbg !10646
  %mul247 = fmul float %167, %168, !dbg !10647
  %add248 = fadd float %166, %mul247, !dbg !10648
  %169 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10649
  %r249 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %169, i32 0, i32 14, !dbg !10650
  %170 = load float, float* %r249, align 4, !dbg !10650
  %mul250 = fmul float %add248, %170, !dbg !10651
  %171 = load float*, float** %col_r.addr, align 8, !dbg !10652
  %arrayidx251 = getelementptr inbounds float, float* %171, i64 0, !dbg !10652
  store float %mul250, float* %arrayidx251, align 4, !dbg !10653
  %172 = load float, float* %facm, align 4, !dbg !10654
  %173 = load float, float* %fact, align 4, !dbg !10655
  %tg252 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10656
  %174 = load float, float* %tg252, align 8, !dbg !10656
  %mul253 = fmul float %173, %174, !dbg !10657
  %add254 = fadd float %172, %mul253, !dbg !10658
  %175 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10659
  %g255 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %175, i32 0, i32 13, !dbg !10660
  %176 = load float, float* %g255, align 8, !dbg !10660
  %mul256 = fmul float %add254, %176, !dbg !10661
  %177 = load float*, float** %col_r.addr, align 8, !dbg !10662
  %arrayidx257 = getelementptr inbounds float, float* %177, i64 1, !dbg !10662
  store float %mul256, float* %arrayidx257, align 4, !dbg !10663
  %178 = load float, float* %facm, align 4, !dbg !10664
  %179 = load float, float* %fact, align 4, !dbg !10665
  %tb258 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10666
  %180 = load float, float* %tb258, align 4, !dbg !10666
  %mul259 = fmul float %179, %180, !dbg !10667
  %add260 = fadd float %178, %mul259, !dbg !10668
  %181 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10669
  %b261 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %181, i32 0, i32 12, !dbg !10670
  %182 = load float, float* %b261, align 4, !dbg !10670
  %mul262 = fmul float %add260, %182, !dbg !10671
  %183 = load float*, float** %col_r.addr, align 8, !dbg !10672
  %arrayidx263 = getelementptr inbounds float, float* %183, i64 2, !dbg !10672
  store float %mul262, float* %arrayidx263, align 4, !dbg !10673
  br label %if.end319, !dbg !10674

if.else264:                                       ; preds = %if.else240
  %184 = load float, float* %fact, align 4, !dbg !10675
  %tr265 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10677
  %185 = load float, float* %tr265, align 4, !dbg !10677
  %mul266 = fmul float %184, %185, !dbg !10678
  %186 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10679
  %r267 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %186, i32 0, i32 14, !dbg !10680
  %187 = load float, float* %r267, align 4, !dbg !10680
  %add268 = fadd float %mul266, %187, !dbg !10681
  %188 = load float*, float** %col_r.addr, align 8, !dbg !10682
  %arrayidx269 = getelementptr inbounds float, float* %188, i64 0, !dbg !10682
  store float %add268, float* %arrayidx269, align 4, !dbg !10683
  %189 = load float, float* %fact, align 4, !dbg !10684
  %tg270 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !10685
  %190 = load float, float* %tg270, align 8, !dbg !10685
  %mul271 = fmul float %189, %190, !dbg !10686
  %191 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10687
  %g272 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %191, i32 0, i32 13, !dbg !10688
  %192 = load float, float* %g272, align 8, !dbg !10688
  %add273 = fadd float %mul271, %192, !dbg !10689
  %193 = load float*, float** %col_r.addr, align 8, !dbg !10690
  %arrayidx274 = getelementptr inbounds float, float* %193, i64 1, !dbg !10690
  store float %add273, float* %arrayidx274, align 4, !dbg !10691
  %194 = load float, float* %fact, align 4, !dbg !10692
  %tb275 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !10693
  %195 = load float, float* %tb275, align 4, !dbg !10693
  %mul276 = fmul float %194, %195, !dbg !10694
  %196 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !10695
  %b277 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %196, i32 0, i32 12, !dbg !10696
  %197 = load float, float* %b277, align 4, !dbg !10696
  %add278 = fadd float %mul276, %197, !dbg !10697
  %198 = load float*, float** %col_r.addr, align 8, !dbg !10698
  %arrayidx279 = getelementptr inbounds float, float* %198, i64 2, !dbg !10698
  store float %add278, float* %arrayidx279, align 4, !dbg !10699
  %199 = load float*, float** %col_r.addr, align 8, !dbg !10700
  %arrayidx280 = getelementptr inbounds float, float* %199, i64 0, !dbg !10700
  %200 = load float, float* %arrayidx280, align 4, !dbg !10700
  %cmp281 = fcmp olt float %200, 0.000000e+00, !dbg !10700
  br i1 %cmp281, label %if.then283, label %if.else285, !dbg !10703

if.then283:                                       ; preds = %if.else264
  %201 = load float*, float** %col_r.addr, align 8, !dbg !10700
  %arrayidx284 = getelementptr inbounds float, float* %201, i64 0, !dbg !10700
  store float 0.000000e+00, float* %arrayidx284, align 4, !dbg !10700
  br label %if.end292, !dbg !10700

if.else285:                                       ; preds = %if.else264
  %202 = load float*, float** %col_r.addr, align 8, !dbg !10704
  %arrayidx286 = getelementptr inbounds float, float* %202, i64 0, !dbg !10704
  %203 = load float, float* %arrayidx286, align 4, !dbg !10704
  %cmp287 = fcmp ogt float %203, 1.000000e+00, !dbg !10704
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !10700

if.then289:                                       ; preds = %if.else285
  %204 = load float*, float** %col_r.addr, align 8, !dbg !10704
  %arrayidx290 = getelementptr inbounds float, float* %204, i64 0, !dbg !10704
  store float 1.000000e+00, float* %arrayidx290, align 4, !dbg !10704
  br label %if.end291, !dbg !10704

if.end291:                                        ; preds = %if.then289, %if.else285
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then283
  %205 = load float*, float** %col_r.addr, align 8, !dbg !10706
  %arrayidx293 = getelementptr inbounds float, float* %205, i64 1, !dbg !10706
  %206 = load float, float* %arrayidx293, align 4, !dbg !10706
  %cmp294 = fcmp olt float %206, 0.000000e+00, !dbg !10706
  br i1 %cmp294, label %if.then296, label %if.else298, !dbg !10709

if.then296:                                       ; preds = %if.end292
  %207 = load float*, float** %col_r.addr, align 8, !dbg !10706
  %arrayidx297 = getelementptr inbounds float, float* %207, i64 1, !dbg !10706
  store float 0.000000e+00, float* %arrayidx297, align 4, !dbg !10706
  br label %if.end305, !dbg !10706

if.else298:                                       ; preds = %if.end292
  %208 = load float*, float** %col_r.addr, align 8, !dbg !10710
  %arrayidx299 = getelementptr inbounds float, float* %208, i64 1, !dbg !10710
  %209 = load float, float* %arrayidx299, align 4, !dbg !10710
  %cmp300 = fcmp ogt float %209, 1.000000e+00, !dbg !10710
  br i1 %cmp300, label %if.then302, label %if.end304, !dbg !10706

if.then302:                                       ; preds = %if.else298
  %210 = load float*, float** %col_r.addr, align 8, !dbg !10710
  %arrayidx303 = getelementptr inbounds float, float* %210, i64 1, !dbg !10710
  store float 1.000000e+00, float* %arrayidx303, align 4, !dbg !10710
  br label %if.end304, !dbg !10710

if.end304:                                        ; preds = %if.then302, %if.else298
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then296
  %211 = load float*, float** %col_r.addr, align 8, !dbg !10712
  %arrayidx306 = getelementptr inbounds float, float* %211, i64 2, !dbg !10712
  %212 = load float, float* %arrayidx306, align 4, !dbg !10712
  %cmp307 = fcmp olt float %212, 0.000000e+00, !dbg !10712
  br i1 %cmp307, label %if.then309, label %if.else311, !dbg !10715

if.then309:                                       ; preds = %if.end305
  %213 = load float*, float** %col_r.addr, align 8, !dbg !10712
  %arrayidx310 = getelementptr inbounds float, float* %213, i64 2, !dbg !10712
  store float 0.000000e+00, float* %arrayidx310, align 4, !dbg !10712
  br label %if.end318, !dbg !10712

if.else311:                                       ; preds = %if.end305
  %214 = load float*, float** %col_r.addr, align 8, !dbg !10716
  %arrayidx312 = getelementptr inbounds float, float* %214, i64 2, !dbg !10716
  %215 = load float, float* %arrayidx312, align 4, !dbg !10716
  %cmp313 = fcmp ogt float %215, 1.000000e+00, !dbg !10716
  br i1 %cmp313, label %if.then315, label %if.end317, !dbg !10712

if.then315:                                       ; preds = %if.else311
  %216 = load float*, float** %col_r.addr, align 8, !dbg !10716
  %arrayidx316 = getelementptr inbounds float, float* %216, i64 2, !dbg !10716
  store float 1.000000e+00, float* %arrayidx316, align 4, !dbg !10716
  br label %if.end317, !dbg !10716

if.end317:                                        ; preds = %if.then315, %if.else311
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then309
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then245
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then221
  br label %if.end321, !dbg !10718

if.end321:                                        ; preds = %if.end320, %if.end157
  %217 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !10719
  %mapto322 = getelementptr inbounds %struct.MTex, %struct.MTex* %217, i32 0, i32 1, !dbg !10721
  %218 = load i16, i16* %mapto322, align 2, !dbg !10721
  %conv323 = sext i16 %218 to i32, !dbg !10719
  %and324 = and i32 %conv323, 128, !dbg !10722
  %tobool325 = icmp ne i32 %and324, 0, !dbg !10722
  br i1 %tobool325, label %if.then326, label %if.end342, !dbg !10723

if.then326:                                       ; preds = %if.end321
  %219 = load i32, i32* %rgb, align 4, !dbg !10724
  %tobool327 = icmp ne i32 %219, 0, !dbg !10724
  br i1 %tobool327, label %if.then328, label %if.end338, !dbg !10727

if.then328:                                       ; preds = %if.then326
  %talpha = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 5, !dbg !10728
  %220 = load i32, i32* %talpha, align 4, !dbg !10728
  %tobool329 = icmp ne i32 %220, 0, !dbg !10731
  br i1 %tobool329, label %if.then330, label %if.else333, !dbg !10732

if.then330:                                       ; preds = %if.then328
  %ta331 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !10733
  %221 = load float, float* %ta331, align 8, !dbg !10733
  %tin332 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10735
  store float %221, float* %tin332, align 8, !dbg !10736
  br label %if.end337, !dbg !10737

if.else333:                                       ; preds = %if.then328
  %tr334 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !10738
  %call335 = call float @rgb_to_bw(float* %tr334), !dbg !10740
  %tin336 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10741
  store float %call335, float* %tin336, align 8, !dbg !10742
  br label %if.end337

if.end337:                                        ; preds = %if.else333, %if.then330
  br label %if.end338, !dbg !10743

if.end338:                                        ; preds = %if.end337, %if.then326
  %tin339 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !10744
  %222 = load float, float* %tin339, align 8, !dbg !10744
  %223 = load float*, float** %col_r.addr, align 8, !dbg !10745
  %arrayidx340 = getelementptr inbounds float, float* %223, i64 3, !dbg !10745
  %224 = load float, float* %arrayidx340, align 4, !dbg !10746
  %mul341 = fmul float %224, %222, !dbg !10746
  store float %mul341, float* %arrayidx340, align 4, !dbg !10746
  br label %if.end342, !dbg !10747

if.end342:                                        ; preds = %if.then, %if.then5, %if.then7, %if.end338, %if.end321
  ret void, !dbg !10748
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_2d_mapping(%struct.MTex* %mtex, float* %texvec, %struct.VlakRen* %vlr, float* %n, float* %dxt, float* %dyt) #0 !dbg !10749 {
entry:
  %mtex.addr = alloca %struct.MTex*, align 8
  %texvec.addr = alloca float*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %n.addr = alloca float*, align 8
  %dxt.addr = alloca float*, align 8
  %dyt.addr = alloca float*, align 8
  %tex = alloca %struct.Tex*, align 8
  %ob = alloca %struct.Object*, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %fac1 = alloca float, align 4
  %area = alloca [8 x float], align 16
  %ok = alloca i32, align 4
  %proj = alloca i32, align 4
  %areaflag = alloca i32, align 4
  %wrap = alloca i32, align 4
  %texco = alloca i32, align 4
  %origf = alloca float, align 4
  %orig = alloca i32, align 4
  %origf90 = alloca float, align 4
  %orig116 = alloca i32, align 4
  %sw_ap = alloca float, align 4
  %sw_ap337 = alloca float, align 4
  %f1 = alloca float, align 4
  %f2 = alloca float, align 4
  %max = alloca float, align 4
  %origf401 = alloca float, align 4
  %orig430 = alloca i32, align 4
  %origf458 = alloca float, align 4
  %orig488 = alloca i32, align 4
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  store float* %dxt, float** %dxt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxt.addr, metadata !10762, metadata !DIExpression()), !dbg !10763
  store float* %dyt, float** %dyt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dyt.addr, metadata !10764, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !10766, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10768, metadata !DIExpression()), !dbg !10769
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !10769
  call void @llvm.dbg.declare(metadata float* %fx, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata float* %fy, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !10774, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.declare(metadata [8 x float]* %area, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !10779, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.declare(metadata i32* %proj, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata i32* %areaflag, metadata !10783, metadata !DIExpression()), !dbg !10784
  store i32 0, i32* %areaflag, align 4, !dbg !10784
  call void @llvm.dbg.declare(metadata i32* %wrap, metadata !10785, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.declare(metadata i32* %texco, metadata !10787, metadata !DIExpression()), !dbg !10788
  %0 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !10789
  %mapping = getelementptr inbounds %struct.MTex, %struct.MTex* %0, i32 0, i32 10, !dbg !10790
  %1 = load i8, i8* %mapping, align 1, !dbg !10790
  %conv = zext i8 %1 to i32, !dbg !10789
  store i32 %conv, i32* %wrap, align 4, !dbg !10791
  %2 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !10792
  %tex1 = getelementptr inbounds %struct.MTex, %struct.MTex* %2, i32 0, i32 5, !dbg !10793
  %3 = load %struct.Tex*, %struct.Tex** %tex1, align 8, !dbg !10793
  store %struct.Tex* %3, %struct.Tex** %tex, align 8, !dbg !10794
  %4 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !10795
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %4, i32 0, i32 4, !dbg !10796
  %5 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !10796
  store %struct.Object* %5, %struct.Object** %ob, align 8, !dbg !10797
  %6 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !10798
  %texco2 = getelementptr inbounds %struct.MTex, %struct.MTex* %6, i32 0, i32 0, !dbg !10799
  %7 = load i16, i16* %texco2, align 8, !dbg !10799
  %conv3 = sext i16 %7 to i32, !dbg !10798
  store i32 %conv3, i32* %texco, align 4, !dbg !10800
  %8 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !10801
  %conv4 = sext i16 %8 to i32, !dbg !10803
  %cmp = icmp eq i32 %conv4, 0, !dbg !10804
  br i1 %cmp, label %if.then, label %if.else154, !dbg !10805

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %wrap, align 4, !dbg !10806
  %cmp6 = icmp eq i32 %9, 0, !dbg !10809
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !10810

if.then8:                                         ; preds = %if.then
  %10 = load float*, float** %texvec.addr, align 8, !dbg !10811
  %arrayidx = getelementptr inbounds float, float* %10, i64 0, !dbg !10811
  %11 = load float, float* %arrayidx, align 4, !dbg !10811
  %add = fadd float %11, 1.000000e+00, !dbg !10813
  %div = fdiv float %add, 2.000000e+00, !dbg !10814
  store float %div, float* %fx, align 4, !dbg !10815
  %12 = load float*, float** %texvec.addr, align 8, !dbg !10816
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 1, !dbg !10816
  %13 = load float, float* %arrayidx9, align 4, !dbg !10816
  %add10 = fadd float %13, 1.000000e+00, !dbg !10817
  %div11 = fdiv float %add10, 2.000000e+00, !dbg !10818
  store float %div11, float* %fy, align 4, !dbg !10819
  br label %if.end48, !dbg !10820

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %wrap, align 4, !dbg !10821
  %cmp12 = icmp eq i32 %14, 2, !dbg !10823
  br i1 %cmp12, label %if.then14, label %if.else18, !dbg !10824

if.then14:                                        ; preds = %if.else
  %15 = load float*, float** %texvec.addr, align 8, !dbg !10825
  %arrayidx15 = getelementptr inbounds float, float* %15, i64 0, !dbg !10825
  %16 = load float, float* %arrayidx15, align 4, !dbg !10825
  %17 = load float*, float** %texvec.addr, align 8, !dbg !10826
  %arrayidx16 = getelementptr inbounds float, float* %17, i64 1, !dbg !10826
  %18 = load float, float* %arrayidx16, align 4, !dbg !10826
  %19 = load float*, float** %texvec.addr, align 8, !dbg !10827
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 2, !dbg !10827
  %20 = load float, float* %arrayidx17, align 4, !dbg !10827
  call void @map_to_tube(float* %fx, float* %fy, float %16, float %18, float %20), !dbg !10828
  br label %if.end47, !dbg !10828

if.else18:                                        ; preds = %if.else
  %21 = load i32, i32* %wrap, align 4, !dbg !10829
  %cmp19 = icmp eq i32 %21, 3, !dbg !10831
  br i1 %cmp19, label %if.then21, label %if.else25, !dbg !10832

if.then21:                                        ; preds = %if.else18
  %22 = load float*, float** %texvec.addr, align 8, !dbg !10833
  %arrayidx22 = getelementptr inbounds float, float* %22, i64 0, !dbg !10833
  %23 = load float, float* %arrayidx22, align 4, !dbg !10833
  %24 = load float*, float** %texvec.addr, align 8, !dbg !10834
  %arrayidx23 = getelementptr inbounds float, float* %24, i64 1, !dbg !10834
  %25 = load float, float* %arrayidx23, align 4, !dbg !10834
  %26 = load float*, float** %texvec.addr, align 8, !dbg !10835
  %arrayidx24 = getelementptr inbounds float, float* %26, i64 2, !dbg !10835
  %27 = load float, float* %arrayidx24, align 4, !dbg !10835
  call void @map_to_sphere(float* %fx, float* %fy, float %23, float %25, float %27), !dbg !10836
  br label %if.end46, !dbg !10836

if.else25:                                        ; preds = %if.else18
  %28 = load i32, i32* %texco, align 4, !dbg !10837
  %cmp26 = icmp eq i32 %28, 32, !dbg !10840
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !10841

if.then28:                                        ; preds = %if.else25
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10842
  %30 = load float*, float** %n.addr, align 8, !dbg !10843
  %31 = load float*, float** %texvec.addr, align 8, !dbg !10844
  %arrayidx29 = getelementptr inbounds float, float* %31, i64 0, !dbg !10844
  %32 = load float, float* %arrayidx29, align 4, !dbg !10844
  %33 = load float*, float** %texvec.addr, align 8, !dbg !10845
  %arrayidx30 = getelementptr inbounds float, float* %33, i64 1, !dbg !10845
  %34 = load float, float* %arrayidx30, align 4, !dbg !10845
  %35 = load float*, float** %texvec.addr, align 8, !dbg !10846
  %arrayidx31 = getelementptr inbounds float, float* %35, i64 2, !dbg !10846
  %36 = load float, float* %arrayidx31, align 4, !dbg !10846
  %call = call i32 @cubemap_ob(%struct.Object* %29, float* %30, float %32, float %34, float %36, float* %fx, float* %fy), !dbg !10847
  br label %if.end45, !dbg !10847

if.else32:                                        ; preds = %if.else25
  %37 = load i32, i32* %texco, align 4, !dbg !10848
  %cmp33 = icmp eq i32 %37, 8, !dbg !10850
  br i1 %cmp33, label %if.then35, label %if.else40, !dbg !10851

if.then35:                                        ; preds = %if.else32
  %38 = load float*, float** %n.addr, align 8, !dbg !10852
  %39 = load float*, float** %texvec.addr, align 8, !dbg !10853
  %arrayidx36 = getelementptr inbounds float, float* %39, i64 0, !dbg !10853
  %40 = load float, float* %arrayidx36, align 4, !dbg !10853
  %41 = load float*, float** %texvec.addr, align 8, !dbg !10854
  %arrayidx37 = getelementptr inbounds float, float* %41, i64 1, !dbg !10854
  %42 = load float, float* %arrayidx37, align 4, !dbg !10854
  %43 = load float*, float** %texvec.addr, align 8, !dbg !10855
  %arrayidx38 = getelementptr inbounds float, float* %43, i64 2, !dbg !10855
  %44 = load float, float* %arrayidx38, align 4, !dbg !10855
  %call39 = call i32 @cubemap_glob(float* %38, float %40, float %42, float %44, float* %fx, float* %fy), !dbg !10856
  br label %if.end, !dbg !10856

if.else40:                                        ; preds = %if.else32
  %45 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !10857
  %46 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !10858
  %47 = load float*, float** %n.addr, align 8, !dbg !10859
  %48 = load float*, float** %texvec.addr, align 8, !dbg !10860
  %arrayidx41 = getelementptr inbounds float, float* %48, i64 0, !dbg !10860
  %49 = load float, float* %arrayidx41, align 4, !dbg !10860
  %50 = load float*, float** %texvec.addr, align 8, !dbg !10861
  %arrayidx42 = getelementptr inbounds float, float* %50, i64 1, !dbg !10861
  %51 = load float, float* %arrayidx42, align 4, !dbg !10861
  %52 = load float*, float** %texvec.addr, align 8, !dbg !10862
  %arrayidx43 = getelementptr inbounds float, float* %52, i64 2, !dbg !10862
  %53 = load float, float* %arrayidx43, align 4, !dbg !10862
  %call44 = call i32 @cubemap(%struct.MTex* %45, %struct.VlakRen* %46, float* %47, float %49, float %51, float %53, float* %fx, float* %fy), !dbg !10863
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then35
  br label %if.end45

if.end45:                                         ; preds = %if.end, %if.then28
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then21
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then14
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then8
  %54 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10864
  %extend = getelementptr inbounds %struct.Tex, %struct.Tex* %54, i32 0, i32 42, !dbg !10866
  %55 = load i16, i16* %extend, align 8, !dbg !10866
  %conv49 = sext i16 %55 to i32, !dbg !10864
  %cmp50 = icmp eq i32 %conv49, 3, !dbg !10867
  br i1 %cmp50, label %if.then52, label %if.end126, !dbg !10868

if.then52:                                        ; preds = %if.end48
  %56 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10869
  %xrepeat = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 40, !dbg !10872
  %57 = load i16, i16* %xrepeat, align 4, !dbg !10872
  %conv53 = sext i16 %57 to i32, !dbg !10869
  %cmp54 = icmp sgt i32 %conv53, 1, !dbg !10873
  br i1 %cmp54, label %if.then56, label %if.end85, !dbg !10874

if.then56:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata float* %origf, metadata !10875, metadata !DIExpression()), !dbg !10877
  %58 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10878
  %xrepeat57 = getelementptr inbounds %struct.Tex, %struct.Tex* %58, i32 0, i32 40, !dbg !10879
  %59 = load i16, i16* %xrepeat57, align 4, !dbg !10879
  %conv58 = sext i16 %59 to i32, !dbg !10878
  %conv59 = sitofp i32 %conv58 to float, !dbg !10878
  %60 = load float, float* %fx, align 4, !dbg !10880
  %mul = fmul float %60, %conv59, !dbg !10880
  store float %mul, float* %fx, align 4, !dbg !10880
  store float %mul, float* %origf, align 4, !dbg !10877
  %61 = load float, float* %fx, align 4, !dbg !10881
  %cmp60 = fcmp ogt float %61, 1.000000e+00, !dbg !10883
  br i1 %cmp60, label %if.then62, label %if.else65, !dbg !10884

if.then62:                                        ; preds = %if.then56
  %62 = load float, float* %fx, align 4, !dbg !10885
  %conv63 = fptosi float %62 to i32, !dbg !10886
  %conv64 = sitofp i32 %conv63 to float, !dbg !10886
  %63 = load float, float* %fx, align 4, !dbg !10887
  %sub = fsub float %63, %conv64, !dbg !10887
  store float %sub, float* %fx, align 4, !dbg !10887
  br label %if.end74, !dbg !10888

if.else65:                                        ; preds = %if.then56
  %64 = load float, float* %fx, align 4, !dbg !10889
  %cmp66 = fcmp olt float %64, 0.000000e+00, !dbg !10891
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !10892

if.then68:                                        ; preds = %if.else65
  %65 = load float, float* %fx, align 4, !dbg !10893
  %conv69 = fptosi float %65 to i32, !dbg !10894
  %sub70 = sub nsw i32 1, %conv69, !dbg !10895
  %conv71 = sitofp i32 %sub70 to float, !dbg !10896
  %66 = load float, float* %fx, align 4, !dbg !10897
  %add72 = fadd float %66, %conv71, !dbg !10897
  store float %add72, float* %fx, align 4, !dbg !10897
  br label %if.end73, !dbg !10898

if.end73:                                         ; preds = %if.then68, %if.else65
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then62
  %67 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10899
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %67, i32 0, i32 31, !dbg !10901
  %68 = load i16, i16* %flag, align 2, !dbg !10901
  %conv75 = sext i16 %68 to i32, !dbg !10899
  %and = and i32 %conv75, 128, !dbg !10902
  %tobool = icmp ne i32 %and, 0, !dbg !10902
  br i1 %tobool, label %if.then76, label %if.end84, !dbg !10903

if.then76:                                        ; preds = %if.end74
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !10904, metadata !DIExpression()), !dbg !10906
  %69 = load float, float* %origf, align 4, !dbg !10907
  %conv77 = fpext float %69 to double, !dbg !10907
  %70 = call double @llvm.floor.f64(double %conv77), !dbg !10908
  %conv78 = fptosi double %70 to i32, !dbg !10909
  store i32 %conv78, i32* %orig, align 4, !dbg !10906
  %71 = load i32, i32* %orig, align 4, !dbg !10910
  %and79 = and i32 %71, 1, !dbg !10912
  %tobool80 = icmp ne i32 %and79, 0, !dbg !10912
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !10913

if.then81:                                        ; preds = %if.then76
  %72 = load float, float* %fx, align 4, !dbg !10914
  %sub82 = fsub float 1.000000e+00, %72, !dbg !10915
  store float %sub82, float* %fx, align 4, !dbg !10916
  br label %if.end83, !dbg !10917

if.end83:                                         ; preds = %if.then81, %if.then76
  br label %if.end84, !dbg !10918

if.end84:                                         ; preds = %if.end83, %if.end74
  br label %if.end85, !dbg !10919

if.end85:                                         ; preds = %if.end84, %if.then52
  %73 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10920
  %yrepeat = getelementptr inbounds %struct.Tex, %struct.Tex* %73, i32 0, i32 41, !dbg !10922
  %74 = load i16, i16* %yrepeat, align 2, !dbg !10922
  %conv86 = sext i16 %74 to i32, !dbg !10920
  %cmp87 = icmp sgt i32 %conv86, 1, !dbg !10923
  br i1 %cmp87, label %if.then89, label %if.end125, !dbg !10924

if.then89:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata float* %origf90, metadata !10925, metadata !DIExpression()), !dbg !10927
  %75 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10928
  %yrepeat91 = getelementptr inbounds %struct.Tex, %struct.Tex* %75, i32 0, i32 41, !dbg !10929
  %76 = load i16, i16* %yrepeat91, align 2, !dbg !10929
  %conv92 = sext i16 %76 to i32, !dbg !10928
  %conv93 = sitofp i32 %conv92 to float, !dbg !10928
  %77 = load float, float* %fy, align 4, !dbg !10930
  %mul94 = fmul float %77, %conv93, !dbg !10930
  store float %mul94, float* %fy, align 4, !dbg !10930
  store float %mul94, float* %origf90, align 4, !dbg !10927
  %78 = load float, float* %fy, align 4, !dbg !10931
  %cmp95 = fcmp ogt float %78, 1.000000e+00, !dbg !10933
  br i1 %cmp95, label %if.then97, label %if.else101, !dbg !10934

if.then97:                                        ; preds = %if.then89
  %79 = load float, float* %fy, align 4, !dbg !10935
  %conv98 = fptosi float %79 to i32, !dbg !10936
  %conv99 = sitofp i32 %conv98 to float, !dbg !10936
  %80 = load float, float* %fy, align 4, !dbg !10937
  %sub100 = fsub float %80, %conv99, !dbg !10937
  store float %sub100, float* %fy, align 4, !dbg !10937
  br label %if.end110, !dbg !10938

if.else101:                                       ; preds = %if.then89
  %81 = load float, float* %fy, align 4, !dbg !10939
  %cmp102 = fcmp olt float %81, 0.000000e+00, !dbg !10941
  br i1 %cmp102, label %if.then104, label %if.end109, !dbg !10942

if.then104:                                       ; preds = %if.else101
  %82 = load float, float* %fy, align 4, !dbg !10943
  %conv105 = fptosi float %82 to i32, !dbg !10944
  %sub106 = sub nsw i32 1, %conv105, !dbg !10945
  %conv107 = sitofp i32 %sub106 to float, !dbg !10946
  %83 = load float, float* %fy, align 4, !dbg !10947
  %add108 = fadd float %83, %conv107, !dbg !10947
  store float %add108, float* %fy, align 4, !dbg !10947
  br label %if.end109, !dbg !10948

if.end109:                                        ; preds = %if.then104, %if.else101
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then97
  %84 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10949
  %flag111 = getelementptr inbounds %struct.Tex, %struct.Tex* %84, i32 0, i32 31, !dbg !10951
  %85 = load i16, i16* %flag111, align 2, !dbg !10951
  %conv112 = sext i16 %85 to i32, !dbg !10949
  %and113 = and i32 %conv112, 256, !dbg !10952
  %tobool114 = icmp ne i32 %and113, 0, !dbg !10952
  br i1 %tobool114, label %if.then115, label %if.end124, !dbg !10953

if.then115:                                       ; preds = %if.end110
  call void @llvm.dbg.declare(metadata i32* %orig116, metadata !10954, metadata !DIExpression()), !dbg !10956
  %86 = load float, float* %origf90, align 4, !dbg !10957
  %conv117 = fpext float %86 to double, !dbg !10957
  %87 = call double @llvm.floor.f64(double %conv117), !dbg !10958
  %conv118 = fptosi double %87 to i32, !dbg !10959
  store i32 %conv118, i32* %orig116, align 4, !dbg !10956
  %88 = load i32, i32* %orig116, align 4, !dbg !10960
  %and119 = and i32 %88, 1, !dbg !10962
  %tobool120 = icmp ne i32 %and119, 0, !dbg !10962
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !10963

if.then121:                                       ; preds = %if.then115
  %89 = load float, float* %fy, align 4, !dbg !10964
  %sub122 = fsub float 1.000000e+00, %89, !dbg !10965
  store float %sub122, float* %fy, align 4, !dbg !10966
  br label %if.end123, !dbg !10967

if.end123:                                        ; preds = %if.then121, %if.then115
  br label %if.end124, !dbg !10968

if.end124:                                        ; preds = %if.end123, %if.end110
  br label %if.end125, !dbg !10969

if.end125:                                        ; preds = %if.end124, %if.end85
  br label %if.end126, !dbg !10970

if.end126:                                        ; preds = %if.end125, %if.end48
  %90 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10971
  %cropxmin = getelementptr inbounds %struct.Tex, %struct.Tex* %90, i32 0, i32 34, !dbg !10973
  %91 = load float, float* %cropxmin, align 4, !dbg !10973
  %cmp127 = fcmp une float %91, 0.000000e+00, !dbg !10974
  br i1 %cmp127, label %if.then131, label %lor.lhs.false, !dbg !10975

lor.lhs.false:                                    ; preds = %if.end126
  %92 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10976
  %cropxmax = getelementptr inbounds %struct.Tex, %struct.Tex* %92, i32 0, i32 36, !dbg !10977
  %93 = load float, float* %cropxmax, align 4, !dbg !10977
  %cmp129 = fcmp une float %93, 1.000000e+00, !dbg !10978
  br i1 %cmp129, label %if.then131, label %if.end138, !dbg !10979

if.then131:                                       ; preds = %lor.lhs.false, %if.end126
  %94 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10980
  %cropxmax132 = getelementptr inbounds %struct.Tex, %struct.Tex* %94, i32 0, i32 36, !dbg !10982
  %95 = load float, float* %cropxmax132, align 4, !dbg !10982
  %96 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10983
  %cropxmin133 = getelementptr inbounds %struct.Tex, %struct.Tex* %96, i32 0, i32 34, !dbg !10984
  %97 = load float, float* %cropxmin133, align 4, !dbg !10984
  %sub134 = fsub float %95, %97, !dbg !10985
  store float %sub134, float* %fac1, align 4, !dbg !10986
  %98 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10987
  %cropxmin135 = getelementptr inbounds %struct.Tex, %struct.Tex* %98, i32 0, i32 34, !dbg !10988
  %99 = load float, float* %cropxmin135, align 4, !dbg !10988
  %100 = load float, float* %fx, align 4, !dbg !10989
  %101 = load float, float* %fac1, align 4, !dbg !10990
  %mul136 = fmul float %100, %101, !dbg !10991
  %add137 = fadd float %99, %mul136, !dbg !10992
  store float %add137, float* %fx, align 4, !dbg !10993
  br label %if.end138, !dbg !10994

if.end138:                                        ; preds = %if.then131, %lor.lhs.false
  %102 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10995
  %cropymin = getelementptr inbounds %struct.Tex, %struct.Tex* %102, i32 0, i32 35, !dbg !10997
  %103 = load float, float* %cropymin, align 8, !dbg !10997
  %cmp139 = fcmp une float %103, 0.000000e+00, !dbg !10998
  br i1 %cmp139, label %if.then144, label %lor.lhs.false141, !dbg !10999

lor.lhs.false141:                                 ; preds = %if.end138
  %104 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11000
  %cropymax = getelementptr inbounds %struct.Tex, %struct.Tex* %104, i32 0, i32 37, !dbg !11001
  %105 = load float, float* %cropymax, align 8, !dbg !11001
  %cmp142 = fcmp une float %105, 1.000000e+00, !dbg !11002
  br i1 %cmp142, label %if.then144, label %if.end151, !dbg !11003

if.then144:                                       ; preds = %lor.lhs.false141, %if.end138
  %106 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11004
  %cropymax145 = getelementptr inbounds %struct.Tex, %struct.Tex* %106, i32 0, i32 37, !dbg !11006
  %107 = load float, float* %cropymax145, align 8, !dbg !11006
  %108 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11007
  %cropymin146 = getelementptr inbounds %struct.Tex, %struct.Tex* %108, i32 0, i32 35, !dbg !11008
  %109 = load float, float* %cropymin146, align 8, !dbg !11008
  %sub147 = fsub float %107, %109, !dbg !11009
  store float %sub147, float* %fac1, align 4, !dbg !11010
  %110 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11011
  %cropymin148 = getelementptr inbounds %struct.Tex, %struct.Tex* %110, i32 0, i32 35, !dbg !11012
  %111 = load float, float* %cropymin148, align 8, !dbg !11012
  %112 = load float, float* %fy, align 4, !dbg !11013
  %113 = load float, float* %fac1, align 4, !dbg !11014
  %mul149 = fmul float %112, %113, !dbg !11015
  %add150 = fadd float %111, %mul149, !dbg !11016
  store float %add150, float* %fy, align 4, !dbg !11017
  br label %if.end151, !dbg !11018

if.end151:                                        ; preds = %if.then144, %lor.lhs.false141
  %114 = load float, float* %fx, align 4, !dbg !11019
  %115 = load float*, float** %texvec.addr, align 8, !dbg !11020
  %arrayidx152 = getelementptr inbounds float, float* %115, i64 0, !dbg !11020
  store float %114, float* %arrayidx152, align 4, !dbg !11021
  %116 = load float, float* %fy, align 4, !dbg !11022
  %117 = load float*, float** %texvec.addr, align 8, !dbg !11023
  %arrayidx153 = getelementptr inbounds float, float* %117, i64 1, !dbg !11023
  store float %116, float* %arrayidx153, align 4, !dbg !11024
  br label %if.end567, !dbg !11025

if.else154:                                       ; preds = %entry
  %118 = load i32, i32* %wrap, align 4, !dbg !11026
  %cmp155 = icmp eq i32 %118, 0, !dbg !11029
  br i1 %cmp155, label %if.then157, label %if.else176, !dbg !11030

if.then157:                                       ; preds = %if.else154
  %119 = load float*, float** %texvec.addr, align 8, !dbg !11031
  %arrayidx158 = getelementptr inbounds float, float* %119, i64 0, !dbg !11031
  %120 = load float, float* %arrayidx158, align 4, !dbg !11031
  %add159 = fadd float %120, 1.000000e+00, !dbg !11033
  %div160 = fdiv float %add159, 2.000000e+00, !dbg !11034
  store float %div160, float* %fx, align 4, !dbg !11035
  %121 = load float*, float** %texvec.addr, align 8, !dbg !11036
  %arrayidx161 = getelementptr inbounds float, float* %121, i64 1, !dbg !11036
  %122 = load float, float* %arrayidx161, align 4, !dbg !11036
  %add162 = fadd float %122, 1.000000e+00, !dbg !11037
  %div163 = fdiv float %add162, 2.000000e+00, !dbg !11038
  store float %div163, float* %fy, align 4, !dbg !11039
  %123 = load float*, float** %dxt.addr, align 8, !dbg !11040
  %arrayidx164 = getelementptr inbounds float, float* %123, i64 0, !dbg !11040
  %124 = load float, float* %arrayidx164, align 4, !dbg !11041
  %div165 = fdiv float %124, 2.000000e+00, !dbg !11041
  store float %div165, float* %arrayidx164, align 4, !dbg !11041
  %125 = load float*, float** %dxt.addr, align 8, !dbg !11042
  %arrayidx166 = getelementptr inbounds float, float* %125, i64 1, !dbg !11042
  %126 = load float, float* %arrayidx166, align 4, !dbg !11043
  %div167 = fdiv float %126, 2.000000e+00, !dbg !11043
  store float %div167, float* %arrayidx166, align 4, !dbg !11043
  %127 = load float*, float** %dxt.addr, align 8, !dbg !11044
  %arrayidx168 = getelementptr inbounds float, float* %127, i64 2, !dbg !11044
  %128 = load float, float* %arrayidx168, align 4, !dbg !11045
  %div169 = fdiv float %128, 2.000000e+00, !dbg !11045
  store float %div169, float* %arrayidx168, align 4, !dbg !11045
  %129 = load float*, float** %dyt.addr, align 8, !dbg !11046
  %arrayidx170 = getelementptr inbounds float, float* %129, i64 0, !dbg !11046
  %130 = load float, float* %arrayidx170, align 4, !dbg !11047
  %div171 = fdiv float %130, 2.000000e+00, !dbg !11047
  store float %div171, float* %arrayidx170, align 4, !dbg !11047
  %131 = load float*, float** %dyt.addr, align 8, !dbg !11048
  %arrayidx172 = getelementptr inbounds float, float* %131, i64 1, !dbg !11048
  %132 = load float, float* %arrayidx172, align 4, !dbg !11049
  %div173 = fdiv float %132, 2.000000e+00, !dbg !11049
  store float %div173, float* %arrayidx172, align 4, !dbg !11049
  %133 = load float*, float** %dyt.addr, align 8, !dbg !11050
  %arrayidx174 = getelementptr inbounds float, float* %133, i64 2, !dbg !11050
  %134 = load float, float* %arrayidx174, align 4, !dbg !11051
  %div175 = fdiv float %134, 2.000000e+00, !dbg !11051
  store float %div175, float* %arrayidx174, align 4, !dbg !11051
  br label %if.end373, !dbg !11052

if.else176:                                       ; preds = %if.else154
  %135 = load i32, i32* %wrap, align 4, !dbg !11053
  %cmp177 = icmp eq i32 %135, 2, !dbg !11053
  br i1 %cmp177, label %if.then182, label %lor.lhs.false179, !dbg !11053

lor.lhs.false179:                                 ; preds = %if.else176
  %136 = load i32, i32* %wrap, align 4, !dbg !11053
  %cmp180 = icmp eq i32 %136, 3, !dbg !11053
  br i1 %cmp180, label %if.then182, label %if.else307, !dbg !11055

if.then182:                                       ; preds = %lor.lhs.false179, %if.else176
  store i32 1, i32* %ok, align 4, !dbg !11056
  %137 = load float*, float** %texvec.addr, align 8, !dbg !11058
  %arrayidx183 = getelementptr inbounds float, float* %137, i64 1, !dbg !11058
  %138 = load float, float* %arrayidx183, align 4, !dbg !11058
  %cmp184 = fcmp ole float %138, 0.000000e+00, !dbg !11060
  br i1 %cmp184, label %if.then186, label %if.end216, !dbg !11061

if.then186:                                       ; preds = %if.then182
  %139 = load float*, float** %texvec.addr, align 8, !dbg !11062
  %arrayidx187 = getelementptr inbounds float, float* %139, i64 0, !dbg !11062
  %140 = load float, float* %arrayidx187, align 4, !dbg !11062
  %141 = load float*, float** %dxt.addr, align 8, !dbg !11064
  %arrayidx188 = getelementptr inbounds float, float* %141, i64 0, !dbg !11064
  %142 = load float, float* %arrayidx188, align 4, !dbg !11064
  %add189 = fadd float %140, %142, !dbg !11065
  store float %add189, float* %fx, align 4, !dbg !11066
  %143 = load float*, float** %texvec.addr, align 8, !dbg !11067
  %arrayidx190 = getelementptr inbounds float, float* %143, i64 0, !dbg !11067
  %144 = load float, float* %arrayidx190, align 4, !dbg !11067
  %145 = load float*, float** %dyt.addr, align 8, !dbg !11068
  %arrayidx191 = getelementptr inbounds float, float* %145, i64 0, !dbg !11068
  %146 = load float, float* %arrayidx191, align 4, !dbg !11068
  %add192 = fadd float %144, %146, !dbg !11069
  store float %add192, float* %fy, align 4, !dbg !11070
  %147 = load float, float* %fx, align 4, !dbg !11071
  %cmp193 = fcmp oge float %147, 0.000000e+00, !dbg !11073
  br i1 %cmp193, label %land.lhs.true, label %if.else202, !dbg !11074

land.lhs.true:                                    ; preds = %if.then186
  %148 = load float, float* %fy, align 4, !dbg !11075
  %cmp195 = fcmp oge float %148, 0.000000e+00, !dbg !11076
  br i1 %cmp195, label %land.lhs.true197, label %if.else202, !dbg !11077

land.lhs.true197:                                 ; preds = %land.lhs.true
  %149 = load float*, float** %texvec.addr, align 8, !dbg !11078
  %arrayidx198 = getelementptr inbounds float, float* %149, i64 0, !dbg !11078
  %150 = load float, float* %arrayidx198, align 4, !dbg !11078
  %cmp199 = fcmp oge float %150, 0.000000e+00, !dbg !11079
  br i1 %cmp199, label %if.then201, label %if.else202, !dbg !11080

if.then201:                                       ; preds = %land.lhs.true197
  br label %if.end215, !dbg !11081

if.else202:                                       ; preds = %land.lhs.true197, %land.lhs.true, %if.then186
  %151 = load float, float* %fx, align 4, !dbg !11083
  %cmp203 = fcmp ole float %151, 0.000000e+00, !dbg !11085
  br i1 %cmp203, label %land.lhs.true205, label %if.else213, !dbg !11086

land.lhs.true205:                                 ; preds = %if.else202
  %152 = load float, float* %fy, align 4, !dbg !11087
  %cmp206 = fcmp ole float %152, 0.000000e+00, !dbg !11088
  br i1 %cmp206, label %land.lhs.true208, label %if.else213, !dbg !11089

land.lhs.true208:                                 ; preds = %land.lhs.true205
  %153 = load float*, float** %texvec.addr, align 8, !dbg !11090
  %arrayidx209 = getelementptr inbounds float, float* %153, i64 0, !dbg !11090
  %154 = load float, float* %arrayidx209, align 4, !dbg !11090
  %cmp210 = fcmp ole float %154, 0.000000e+00, !dbg !11091
  br i1 %cmp210, label %if.then212, label %if.else213, !dbg !11092

if.then212:                                       ; preds = %land.lhs.true208
  br label %if.end214, !dbg !11093

if.else213:                                       ; preds = %land.lhs.true208, %land.lhs.true205, %if.else202
  store i32 0, i32* %ok, align 4, !dbg !11095
  br label %if.end214

if.end214:                                        ; preds = %if.else213, %if.then212
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.then201
  br label %if.end216, !dbg !11097

if.end216:                                        ; preds = %if.end215, %if.then182
  %155 = load i32, i32* %ok, align 4, !dbg !11098
  %tobool217 = icmp ne i32 %155, 0, !dbg !11098
  br i1 %tobool217, label %if.then218, label %if.else286, !dbg !11100

if.then218:                                       ; preds = %if.end216
  %156 = load i32, i32* %wrap, align 4, !dbg !11101
  %cmp219 = icmp eq i32 %156, 2, !dbg !11104
  br i1 %cmp219, label %if.then221, label %if.else252, !dbg !11105

if.then221:                                       ; preds = %if.then218
  %arraydecay = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11106
  %arraydecay222 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11108
  %add.ptr = getelementptr inbounds float, float* %arraydecay222, i64 1, !dbg !11109
  %157 = load float*, float** %texvec.addr, align 8, !dbg !11110
  %arrayidx223 = getelementptr inbounds float, float* %157, i64 0, !dbg !11110
  %158 = load float, float* %arrayidx223, align 4, !dbg !11110
  %159 = load float*, float** %texvec.addr, align 8, !dbg !11111
  %arrayidx224 = getelementptr inbounds float, float* %159, i64 1, !dbg !11111
  %160 = load float, float* %arrayidx224, align 4, !dbg !11111
  %161 = load float*, float** %texvec.addr, align 8, !dbg !11112
  %arrayidx225 = getelementptr inbounds float, float* %161, i64 2, !dbg !11112
  %162 = load float, float* %arrayidx225, align 4, !dbg !11112
  call void @map_to_tube(float* %arraydecay, float* %add.ptr, float %158, float %160, float %162), !dbg !11113
  %arraydecay226 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11114
  %add.ptr227 = getelementptr inbounds float, float* %arraydecay226, i64 2, !dbg !11115
  %arraydecay228 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11116
  %add.ptr229 = getelementptr inbounds float, float* %arraydecay228, i64 3, !dbg !11117
  %163 = load float*, float** %texvec.addr, align 8, !dbg !11118
  %arrayidx230 = getelementptr inbounds float, float* %163, i64 0, !dbg !11118
  %164 = load float, float* %arrayidx230, align 4, !dbg !11118
  %165 = load float*, float** %dxt.addr, align 8, !dbg !11119
  %arrayidx231 = getelementptr inbounds float, float* %165, i64 0, !dbg !11119
  %166 = load float, float* %arrayidx231, align 4, !dbg !11119
  %add232 = fadd float %164, %166, !dbg !11120
  %167 = load float*, float** %texvec.addr, align 8, !dbg !11121
  %arrayidx233 = getelementptr inbounds float, float* %167, i64 1, !dbg !11121
  %168 = load float, float* %arrayidx233, align 4, !dbg !11121
  %169 = load float*, float** %dxt.addr, align 8, !dbg !11122
  %arrayidx234 = getelementptr inbounds float, float* %169, i64 1, !dbg !11122
  %170 = load float, float* %arrayidx234, align 4, !dbg !11122
  %add235 = fadd float %168, %170, !dbg !11123
  %171 = load float*, float** %texvec.addr, align 8, !dbg !11124
  %arrayidx236 = getelementptr inbounds float, float* %171, i64 2, !dbg !11124
  %172 = load float, float* %arrayidx236, align 4, !dbg !11124
  %173 = load float*, float** %dxt.addr, align 8, !dbg !11125
  %arrayidx237 = getelementptr inbounds float, float* %173, i64 2, !dbg !11125
  %174 = load float, float* %arrayidx237, align 4, !dbg !11125
  %add238 = fadd float %172, %174, !dbg !11126
  call void @map_to_tube(float* %add.ptr227, float* %add.ptr229, float %add232, float %add235, float %add238), !dbg !11127
  %arraydecay239 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11128
  %add.ptr240 = getelementptr inbounds float, float* %arraydecay239, i64 4, !dbg !11129
  %arraydecay241 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11130
  %add.ptr242 = getelementptr inbounds float, float* %arraydecay241, i64 5, !dbg !11131
  %175 = load float*, float** %texvec.addr, align 8, !dbg !11132
  %arrayidx243 = getelementptr inbounds float, float* %175, i64 0, !dbg !11132
  %176 = load float, float* %arrayidx243, align 4, !dbg !11132
  %177 = load float*, float** %dyt.addr, align 8, !dbg !11133
  %arrayidx244 = getelementptr inbounds float, float* %177, i64 0, !dbg !11133
  %178 = load float, float* %arrayidx244, align 4, !dbg !11133
  %add245 = fadd float %176, %178, !dbg !11134
  %179 = load float*, float** %texvec.addr, align 8, !dbg !11135
  %arrayidx246 = getelementptr inbounds float, float* %179, i64 1, !dbg !11135
  %180 = load float, float* %arrayidx246, align 4, !dbg !11135
  %181 = load float*, float** %dyt.addr, align 8, !dbg !11136
  %arrayidx247 = getelementptr inbounds float, float* %181, i64 1, !dbg !11136
  %182 = load float, float* %arrayidx247, align 4, !dbg !11136
  %add248 = fadd float %180, %182, !dbg !11137
  %183 = load float*, float** %texvec.addr, align 8, !dbg !11138
  %arrayidx249 = getelementptr inbounds float, float* %183, i64 2, !dbg !11138
  %184 = load float, float* %arrayidx249, align 4, !dbg !11138
  %185 = load float*, float** %dyt.addr, align 8, !dbg !11139
  %arrayidx250 = getelementptr inbounds float, float* %185, i64 2, !dbg !11139
  %186 = load float, float* %arrayidx250, align 4, !dbg !11139
  %add251 = fadd float %184, %186, !dbg !11140
  call void @map_to_tube(float* %add.ptr240, float* %add.ptr242, float %add245, float %add248, float %add251), !dbg !11141
  br label %if.end285, !dbg !11142

if.else252:                                       ; preds = %if.then218
  %arraydecay253 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11143
  %arraydecay254 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11145
  %add.ptr255 = getelementptr inbounds float, float* %arraydecay254, i64 1, !dbg !11146
  %187 = load float*, float** %texvec.addr, align 8, !dbg !11147
  %arrayidx256 = getelementptr inbounds float, float* %187, i64 0, !dbg !11147
  %188 = load float, float* %arrayidx256, align 4, !dbg !11147
  %189 = load float*, float** %texvec.addr, align 8, !dbg !11148
  %arrayidx257 = getelementptr inbounds float, float* %189, i64 1, !dbg !11148
  %190 = load float, float* %arrayidx257, align 4, !dbg !11148
  %191 = load float*, float** %texvec.addr, align 8, !dbg !11149
  %arrayidx258 = getelementptr inbounds float, float* %191, i64 2, !dbg !11149
  %192 = load float, float* %arrayidx258, align 4, !dbg !11149
  call void @map_to_sphere(float* %arraydecay253, float* %add.ptr255, float %188, float %190, float %192), !dbg !11150
  %arraydecay259 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11151
  %add.ptr260 = getelementptr inbounds float, float* %arraydecay259, i64 2, !dbg !11152
  %arraydecay261 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11153
  %add.ptr262 = getelementptr inbounds float, float* %arraydecay261, i64 3, !dbg !11154
  %193 = load float*, float** %texvec.addr, align 8, !dbg !11155
  %arrayidx263 = getelementptr inbounds float, float* %193, i64 0, !dbg !11155
  %194 = load float, float* %arrayidx263, align 4, !dbg !11155
  %195 = load float*, float** %dxt.addr, align 8, !dbg !11156
  %arrayidx264 = getelementptr inbounds float, float* %195, i64 0, !dbg !11156
  %196 = load float, float* %arrayidx264, align 4, !dbg !11156
  %add265 = fadd float %194, %196, !dbg !11157
  %197 = load float*, float** %texvec.addr, align 8, !dbg !11158
  %arrayidx266 = getelementptr inbounds float, float* %197, i64 1, !dbg !11158
  %198 = load float, float* %arrayidx266, align 4, !dbg !11158
  %199 = load float*, float** %dxt.addr, align 8, !dbg !11159
  %arrayidx267 = getelementptr inbounds float, float* %199, i64 1, !dbg !11159
  %200 = load float, float* %arrayidx267, align 4, !dbg !11159
  %add268 = fadd float %198, %200, !dbg !11160
  %201 = load float*, float** %texvec.addr, align 8, !dbg !11161
  %arrayidx269 = getelementptr inbounds float, float* %201, i64 2, !dbg !11161
  %202 = load float, float* %arrayidx269, align 4, !dbg !11161
  %203 = load float*, float** %dxt.addr, align 8, !dbg !11162
  %arrayidx270 = getelementptr inbounds float, float* %203, i64 2, !dbg !11162
  %204 = load float, float* %arrayidx270, align 4, !dbg !11162
  %add271 = fadd float %202, %204, !dbg !11163
  call void @map_to_sphere(float* %add.ptr260, float* %add.ptr262, float %add265, float %add268, float %add271), !dbg !11164
  %arraydecay272 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11165
  %add.ptr273 = getelementptr inbounds float, float* %arraydecay272, i64 4, !dbg !11166
  %arraydecay274 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11167
  %add.ptr275 = getelementptr inbounds float, float* %arraydecay274, i64 5, !dbg !11168
  %205 = load float*, float** %texvec.addr, align 8, !dbg !11169
  %arrayidx276 = getelementptr inbounds float, float* %205, i64 0, !dbg !11169
  %206 = load float, float* %arrayidx276, align 4, !dbg !11169
  %207 = load float*, float** %dyt.addr, align 8, !dbg !11170
  %arrayidx277 = getelementptr inbounds float, float* %207, i64 0, !dbg !11170
  %208 = load float, float* %arrayidx277, align 4, !dbg !11170
  %add278 = fadd float %206, %208, !dbg !11171
  %209 = load float*, float** %texvec.addr, align 8, !dbg !11172
  %arrayidx279 = getelementptr inbounds float, float* %209, i64 1, !dbg !11172
  %210 = load float, float* %arrayidx279, align 4, !dbg !11172
  %211 = load float*, float** %dyt.addr, align 8, !dbg !11173
  %arrayidx280 = getelementptr inbounds float, float* %211, i64 1, !dbg !11173
  %212 = load float, float* %arrayidx280, align 4, !dbg !11173
  %add281 = fadd float %210, %212, !dbg !11174
  %213 = load float*, float** %texvec.addr, align 8, !dbg !11175
  %arrayidx282 = getelementptr inbounds float, float* %213, i64 2, !dbg !11175
  %214 = load float, float* %arrayidx282, align 4, !dbg !11175
  %215 = load float*, float** %dyt.addr, align 8, !dbg !11176
  %arrayidx283 = getelementptr inbounds float, float* %215, i64 2, !dbg !11176
  %216 = load float, float* %arrayidx283, align 4, !dbg !11176
  %add284 = fadd float %214, %216, !dbg !11177
  call void @map_to_sphere(float* %add.ptr273, float* %add.ptr275, float %add278, float %add281, float %add284), !dbg !11178
  br label %if.end285

if.end285:                                        ; preds = %if.else252, %if.then221
  store i32 1, i32* %areaflag, align 4, !dbg !11179
  br label %if.end306, !dbg !11180

if.else286:                                       ; preds = %if.end216
  %217 = load i32, i32* %wrap, align 4, !dbg !11181
  %cmp287 = icmp eq i32 %217, 2, !dbg !11184
  br i1 %cmp287, label %if.then289, label %if.else293, !dbg !11185

if.then289:                                       ; preds = %if.else286
  %218 = load float*, float** %texvec.addr, align 8, !dbg !11186
  %arrayidx290 = getelementptr inbounds float, float* %218, i64 0, !dbg !11186
  %219 = load float, float* %arrayidx290, align 4, !dbg !11186
  %220 = load float*, float** %texvec.addr, align 8, !dbg !11187
  %arrayidx291 = getelementptr inbounds float, float* %220, i64 1, !dbg !11187
  %221 = load float, float* %arrayidx291, align 4, !dbg !11187
  %222 = load float*, float** %texvec.addr, align 8, !dbg !11188
  %arrayidx292 = getelementptr inbounds float, float* %222, i64 2, !dbg !11188
  %223 = load float, float* %arrayidx292, align 4, !dbg !11188
  call void @map_to_tube(float* %fx, float* %fy, float %219, float %221, float %223), !dbg !11189
  br label %if.end297, !dbg !11189

if.else293:                                       ; preds = %if.else286
  %224 = load float*, float** %texvec.addr, align 8, !dbg !11190
  %arrayidx294 = getelementptr inbounds float, float* %224, i64 0, !dbg !11190
  %225 = load float, float* %arrayidx294, align 4, !dbg !11190
  %226 = load float*, float** %texvec.addr, align 8, !dbg !11191
  %arrayidx295 = getelementptr inbounds float, float* %226, i64 1, !dbg !11191
  %227 = load float, float* %arrayidx295, align 4, !dbg !11191
  %228 = load float*, float** %texvec.addr, align 8, !dbg !11192
  %arrayidx296 = getelementptr inbounds float, float* %228, i64 2, !dbg !11192
  %229 = load float, float* %arrayidx296, align 4, !dbg !11192
  call void @map_to_sphere(float* %fx, float* %fy, float %225, float %227, float %229), !dbg !11193
  br label %if.end297

if.end297:                                        ; preds = %if.else293, %if.then289
  %230 = load float*, float** %dxt.addr, align 8, !dbg !11194
  %arrayidx298 = getelementptr inbounds float, float* %230, i64 0, !dbg !11194
  %231 = load float, float* %arrayidx298, align 4, !dbg !11195
  %div299 = fdiv float %231, 2.000000e+00, !dbg !11195
  store float %div299, float* %arrayidx298, align 4, !dbg !11195
  %232 = load float*, float** %dxt.addr, align 8, !dbg !11196
  %arrayidx300 = getelementptr inbounds float, float* %232, i64 1, !dbg !11196
  %233 = load float, float* %arrayidx300, align 4, !dbg !11197
  %div301 = fdiv float %233, 2.000000e+00, !dbg !11197
  store float %div301, float* %arrayidx300, align 4, !dbg !11197
  %234 = load float*, float** %dyt.addr, align 8, !dbg !11198
  %arrayidx302 = getelementptr inbounds float, float* %234, i64 0, !dbg !11198
  %235 = load float, float* %arrayidx302, align 4, !dbg !11199
  %div303 = fdiv float %235, 2.000000e+00, !dbg !11199
  store float %div303, float* %arrayidx302, align 4, !dbg !11199
  %236 = load float*, float** %dyt.addr, align 8, !dbg !11200
  %arrayidx304 = getelementptr inbounds float, float* %236, i64 1, !dbg !11200
  %237 = load float, float* %arrayidx304, align 4, !dbg !11201
  %div305 = fdiv float %237, 2.000000e+00, !dbg !11201
  store float %div305, float* %arrayidx304, align 4, !dbg !11201
  br label %if.end306

if.end306:                                        ; preds = %if.end297, %if.end285
  br label %if.end372, !dbg !11202

if.else307:                                       ; preds = %lor.lhs.false179
  %238 = load i32, i32* %texco, align 4, !dbg !11203
  %cmp308 = icmp eq i32 %238, 32, !dbg !11206
  br i1 %cmp308, label %if.then310, label %if.else315, !dbg !11207

if.then310:                                       ; preds = %if.else307
  %239 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11208
  %240 = load float*, float** %n.addr, align 8, !dbg !11209
  %241 = load float*, float** %texvec.addr, align 8, !dbg !11210
  %arrayidx311 = getelementptr inbounds float, float* %241, i64 0, !dbg !11210
  %242 = load float, float* %arrayidx311, align 4, !dbg !11210
  %243 = load float*, float** %texvec.addr, align 8, !dbg !11211
  %arrayidx312 = getelementptr inbounds float, float* %243, i64 1, !dbg !11211
  %244 = load float, float* %arrayidx312, align 4, !dbg !11211
  %245 = load float*, float** %texvec.addr, align 8, !dbg !11212
  %arrayidx313 = getelementptr inbounds float, float* %245, i64 2, !dbg !11212
  %246 = load float, float* %arrayidx313, align 4, !dbg !11212
  %call314 = call i32 @cubemap_ob(%struct.Object* %239, float* %240, float %242, float %244, float %246, float* %fx, float* %fy), !dbg !11213
  store i32 %call314, i32* %proj, align 4, !dbg !11214
  br label %if.end329, !dbg !11215

if.else315:                                       ; preds = %if.else307
  %247 = load i32, i32* %texco, align 4, !dbg !11216
  %cmp316 = icmp eq i32 %247, 8, !dbg !11218
  br i1 %cmp316, label %if.then318, label %if.else323, !dbg !11219

if.then318:                                       ; preds = %if.else315
  %248 = load float*, float** %n.addr, align 8, !dbg !11220
  %249 = load float*, float** %texvec.addr, align 8, !dbg !11221
  %arrayidx319 = getelementptr inbounds float, float* %249, i64 0, !dbg !11221
  %250 = load float, float* %arrayidx319, align 4, !dbg !11221
  %251 = load float*, float** %texvec.addr, align 8, !dbg !11222
  %arrayidx320 = getelementptr inbounds float, float* %251, i64 1, !dbg !11222
  %252 = load float, float* %arrayidx320, align 4, !dbg !11222
  %253 = load float*, float** %texvec.addr, align 8, !dbg !11223
  %arrayidx321 = getelementptr inbounds float, float* %253, i64 2, !dbg !11223
  %254 = load float, float* %arrayidx321, align 4, !dbg !11223
  %call322 = call i32 @cubemap_glob(float* %248, float %250, float %252, float %254, float* %fx, float* %fy), !dbg !11224
  store i32 %call322, i32* %proj, align 4, !dbg !11225
  br label %if.end328, !dbg !11226

if.else323:                                       ; preds = %if.else315
  %255 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !11227
  %256 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !11228
  %257 = load float*, float** %n.addr, align 8, !dbg !11229
  %258 = load float*, float** %texvec.addr, align 8, !dbg !11230
  %arrayidx324 = getelementptr inbounds float, float* %258, i64 0, !dbg !11230
  %259 = load float, float* %arrayidx324, align 4, !dbg !11230
  %260 = load float*, float** %texvec.addr, align 8, !dbg !11231
  %arrayidx325 = getelementptr inbounds float, float* %260, i64 1, !dbg !11231
  %261 = load float, float* %arrayidx325, align 4, !dbg !11231
  %262 = load float*, float** %texvec.addr, align 8, !dbg !11232
  %arrayidx326 = getelementptr inbounds float, float* %262, i64 2, !dbg !11232
  %263 = load float, float* %arrayidx326, align 4, !dbg !11232
  %call327 = call i32 @cubemap(%struct.MTex* %255, %struct.VlakRen* %256, float* %257, float %259, float %261, float %263, float* %fx, float* %fy), !dbg !11233
  store i32 %call327, i32* %proj, align 4, !dbg !11234
  br label %if.end328

if.end328:                                        ; preds = %if.else323, %if.then318
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then310
  %264 = load i32, i32* %proj, align 4, !dbg !11235
  %cmp330 = icmp eq i32 %264, 1, !dbg !11237
  br i1 %cmp330, label %if.then332, label %if.else342, !dbg !11238

if.then332:                                       ; preds = %if.end329
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !11239, metadata !DIExpression()), !dbg !11242
  %265 = load float*, float** %dxt.addr, align 8, !dbg !11242
  %arrayidx333 = getelementptr inbounds float, float* %265, i64 1, !dbg !11242
  %266 = load float, float* %arrayidx333, align 4, !dbg !11242
  store float %266, float* %sw_ap, align 4, !dbg !11242
  %267 = load float*, float** %dxt.addr, align 8, !dbg !11242
  %arrayidx334 = getelementptr inbounds float, float* %267, i64 2, !dbg !11242
  %268 = load float, float* %arrayidx334, align 4, !dbg !11242
  %269 = load float*, float** %dxt.addr, align 8, !dbg !11242
  %arrayidx335 = getelementptr inbounds float, float* %269, i64 1, !dbg !11242
  store float %268, float* %arrayidx335, align 4, !dbg !11242
  %270 = load float, float* %sw_ap, align 4, !dbg !11242
  %271 = load float*, float** %dxt.addr, align 8, !dbg !11242
  %arrayidx336 = getelementptr inbounds float, float* %271, i64 2, !dbg !11242
  store float %270, float* %arrayidx336, align 4, !dbg !11242
  call void @llvm.dbg.declare(metadata float* %sw_ap337, metadata !11243, metadata !DIExpression()), !dbg !11245
  %272 = load float*, float** %dyt.addr, align 8, !dbg !11245
  %arrayidx338 = getelementptr inbounds float, float* %272, i64 1, !dbg !11245
  %273 = load float, float* %arrayidx338, align 4, !dbg !11245
  store float %273, float* %sw_ap337, align 4, !dbg !11245
  %274 = load float*, float** %dyt.addr, align 8, !dbg !11245
  %arrayidx339 = getelementptr inbounds float, float* %274, i64 2, !dbg !11245
  %275 = load float, float* %arrayidx339, align 4, !dbg !11245
  %276 = load float*, float** %dyt.addr, align 8, !dbg !11245
  %arrayidx340 = getelementptr inbounds float, float* %276, i64 1, !dbg !11245
  store float %275, float* %arrayidx340, align 4, !dbg !11245
  %277 = load float, float* %sw_ap337, align 4, !dbg !11245
  %278 = load float*, float** %dyt.addr, align 8, !dbg !11245
  %arrayidx341 = getelementptr inbounds float, float* %278, i64 2, !dbg !11245
  store float %277, float* %arrayidx341, align 4, !dbg !11245
  br label %if.end359, !dbg !11246

if.else342:                                       ; preds = %if.end329
  %279 = load i32, i32* %proj, align 4, !dbg !11247
  %cmp343 = icmp eq i32 %279, 2, !dbg !11249
  br i1 %cmp343, label %if.then345, label %if.end358, !dbg !11250

if.then345:                                       ; preds = %if.else342
  call void @llvm.dbg.declare(metadata float* %f1, metadata !11251, metadata !DIExpression()), !dbg !11253
  %280 = load float*, float** %dxt.addr, align 8, !dbg !11254
  %arrayidx346 = getelementptr inbounds float, float* %280, i64 0, !dbg !11254
  %281 = load float, float* %arrayidx346, align 4, !dbg !11254
  store float %281, float* %f1, align 4, !dbg !11253
  call void @llvm.dbg.declare(metadata float* %f2, metadata !11255, metadata !DIExpression()), !dbg !11256
  %282 = load float*, float** %dyt.addr, align 8, !dbg !11257
  %arrayidx347 = getelementptr inbounds float, float* %282, i64 0, !dbg !11257
  %283 = load float, float* %arrayidx347, align 4, !dbg !11257
  store float %283, float* %f2, align 4, !dbg !11256
  %284 = load float*, float** %dxt.addr, align 8, !dbg !11258
  %arrayidx348 = getelementptr inbounds float, float* %284, i64 1, !dbg !11258
  %285 = load float, float* %arrayidx348, align 4, !dbg !11258
  %286 = load float*, float** %dxt.addr, align 8, !dbg !11259
  %arrayidx349 = getelementptr inbounds float, float* %286, i64 0, !dbg !11259
  store float %285, float* %arrayidx349, align 4, !dbg !11260
  %287 = load float*, float** %dyt.addr, align 8, !dbg !11261
  %arrayidx350 = getelementptr inbounds float, float* %287, i64 1, !dbg !11261
  %288 = load float, float* %arrayidx350, align 4, !dbg !11261
  %289 = load float*, float** %dyt.addr, align 8, !dbg !11262
  %arrayidx351 = getelementptr inbounds float, float* %289, i64 0, !dbg !11262
  store float %288, float* %arrayidx351, align 4, !dbg !11263
  %290 = load float*, float** %dxt.addr, align 8, !dbg !11264
  %arrayidx352 = getelementptr inbounds float, float* %290, i64 2, !dbg !11264
  %291 = load float, float* %arrayidx352, align 4, !dbg !11264
  %292 = load float*, float** %dxt.addr, align 8, !dbg !11265
  %arrayidx353 = getelementptr inbounds float, float* %292, i64 1, !dbg !11265
  store float %291, float* %arrayidx353, align 4, !dbg !11266
  %293 = load float*, float** %dyt.addr, align 8, !dbg !11267
  %arrayidx354 = getelementptr inbounds float, float* %293, i64 2, !dbg !11267
  %294 = load float, float* %arrayidx354, align 4, !dbg !11267
  %295 = load float*, float** %dyt.addr, align 8, !dbg !11268
  %arrayidx355 = getelementptr inbounds float, float* %295, i64 1, !dbg !11268
  store float %294, float* %arrayidx355, align 4, !dbg !11269
  %296 = load float, float* %f1, align 4, !dbg !11270
  %297 = load float*, float** %dxt.addr, align 8, !dbg !11271
  %arrayidx356 = getelementptr inbounds float, float* %297, i64 2, !dbg !11271
  store float %296, float* %arrayidx356, align 4, !dbg !11272
  %298 = load float, float* %f2, align 4, !dbg !11273
  %299 = load float*, float** %dyt.addr, align 8, !dbg !11274
  %arrayidx357 = getelementptr inbounds float, float* %299, i64 2, !dbg !11274
  store float %298, float* %arrayidx357, align 4, !dbg !11275
  br label %if.end358, !dbg !11276

if.end358:                                        ; preds = %if.then345, %if.else342
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.then332
  %300 = load float*, float** %dxt.addr, align 8, !dbg !11277
  %arrayidx360 = getelementptr inbounds float, float* %300, i64 0, !dbg !11277
  %301 = load float, float* %arrayidx360, align 4, !dbg !11278
  %mul361 = fmul float %301, 5.000000e-01, !dbg !11278
  store float %mul361, float* %arrayidx360, align 4, !dbg !11278
  %302 = load float*, float** %dxt.addr, align 8, !dbg !11279
  %arrayidx362 = getelementptr inbounds float, float* %302, i64 1, !dbg !11279
  %303 = load float, float* %arrayidx362, align 4, !dbg !11280
  %mul363 = fmul float %303, 5.000000e-01, !dbg !11280
  store float %mul363, float* %arrayidx362, align 4, !dbg !11280
  %304 = load float*, float** %dxt.addr, align 8, !dbg !11281
  %arrayidx364 = getelementptr inbounds float, float* %304, i64 2, !dbg !11281
  %305 = load float, float* %arrayidx364, align 4, !dbg !11282
  %mul365 = fmul float %305, 5.000000e-01, !dbg !11282
  store float %mul365, float* %arrayidx364, align 4, !dbg !11282
  %306 = load float*, float** %dyt.addr, align 8, !dbg !11283
  %arrayidx366 = getelementptr inbounds float, float* %306, i64 0, !dbg !11283
  %307 = load float, float* %arrayidx366, align 4, !dbg !11284
  %mul367 = fmul float %307, 5.000000e-01, !dbg !11284
  store float %mul367, float* %arrayidx366, align 4, !dbg !11284
  %308 = load float*, float** %dyt.addr, align 8, !dbg !11285
  %arrayidx368 = getelementptr inbounds float, float* %308, i64 1, !dbg !11285
  %309 = load float, float* %arrayidx368, align 4, !dbg !11286
  %mul369 = fmul float %309, 5.000000e-01, !dbg !11286
  store float %mul369, float* %arrayidx368, align 4, !dbg !11286
  %310 = load float*, float** %dyt.addr, align 8, !dbg !11287
  %arrayidx370 = getelementptr inbounds float, float* %310, i64 2, !dbg !11287
  %311 = load float, float* %arrayidx370, align 4, !dbg !11288
  %mul371 = fmul float %311, 5.000000e-01, !dbg !11288
  store float %mul371, float* %arrayidx370, align 4, !dbg !11288
  br label %if.end372

if.end372:                                        ; preds = %if.end359, %if.end306
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.then157
  %312 = load i32, i32* %areaflag, align 4, !dbg !11289
  %tobool374 = icmp ne i32 %312, 0, !dbg !11289
  br i1 %tobool374, label %if.then375, label %if.end390, !dbg !11291

if.then375:                                       ; preds = %if.end373
  %arrayidx376 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 0, !dbg !11292
  %313 = load float, float* %arrayidx376, align 16, !dbg !11292
  store float %313, float* %fx, align 4, !dbg !11294
  %arrayidx377 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 1, !dbg !11295
  %314 = load float, float* %arrayidx377, align 4, !dbg !11295
  store float %314, float* %fy, align 4, !dbg !11296
  %arrayidx378 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 2, !dbg !11297
  %315 = load float, float* %arrayidx378, align 8, !dbg !11297
  %316 = load float, float* %fx, align 4, !dbg !11298
  %sub379 = fsub float %315, %316, !dbg !11299
  %317 = load float*, float** %dxt.addr, align 8, !dbg !11300
  %arrayidx380 = getelementptr inbounds float, float* %317, i64 0, !dbg !11300
  store float %sub379, float* %arrayidx380, align 4, !dbg !11301
  %arrayidx381 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 3, !dbg !11302
  %318 = load float, float* %arrayidx381, align 4, !dbg !11302
  %319 = load float, float* %fy, align 4, !dbg !11303
  %sub382 = fsub float %318, %319, !dbg !11304
  %320 = load float*, float** %dxt.addr, align 8, !dbg !11305
  %arrayidx383 = getelementptr inbounds float, float* %320, i64 1, !dbg !11305
  store float %sub382, float* %arrayidx383, align 4, !dbg !11306
  %arrayidx384 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 4, !dbg !11307
  %321 = load float, float* %arrayidx384, align 16, !dbg !11307
  %322 = load float, float* %fx, align 4, !dbg !11308
  %sub385 = fsub float %321, %322, !dbg !11309
  %323 = load float*, float** %dyt.addr, align 8, !dbg !11310
  %arrayidx386 = getelementptr inbounds float, float* %323, i64 0, !dbg !11310
  store float %sub385, float* %arrayidx386, align 4, !dbg !11311
  %arrayidx387 = getelementptr inbounds [8 x float], [8 x float]* %area, i64 0, i64 5, !dbg !11312
  %324 = load float, float* %arrayidx387, align 4, !dbg !11312
  %325 = load float, float* %fy, align 4, !dbg !11313
  %sub388 = fsub float %324, %325, !dbg !11314
  %326 = load float*, float** %dyt.addr, align 8, !dbg !11315
  %arrayidx389 = getelementptr inbounds float, float* %326, i64 1, !dbg !11315
  store float %sub388, float* %arrayidx389, align 4, !dbg !11316
  br label %if.end390, !dbg !11317

if.end390:                                        ; preds = %if.then375, %if.end373
  %327 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11318
  %extend391 = getelementptr inbounds %struct.Tex, %struct.Tex* %327, i32 0, i32 42, !dbg !11320
  %328 = load i16, i16* %extend391, align 8, !dbg !11320
  %conv392 = sext i16 %328 to i32, !dbg !11318
  %cmp393 = icmp eq i32 %conv392, 3, !dbg !11321
  br i1 %cmp393, label %if.then395, label %if.end526, !dbg !11322

if.then395:                                       ; preds = %if.end390
  call void @llvm.dbg.declare(metadata float* %max, metadata !11323, metadata !DIExpression()), !dbg !11325
  store float 1.000000e+00, float* %max, align 4, !dbg !11325
  %329 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11326
  %xrepeat396 = getelementptr inbounds %struct.Tex, %struct.Tex* %329, i32 0, i32 40, !dbg !11328
  %330 = load i16, i16* %xrepeat396, align 4, !dbg !11328
  %conv397 = sext i16 %330 to i32, !dbg !11326
  %cmp398 = icmp sgt i32 %conv397, 1, !dbg !11329
  br i1 %cmp398, label %if.then400, label %if.end452, !dbg !11330

if.then400:                                       ; preds = %if.then395
  call void @llvm.dbg.declare(metadata float* %origf401, metadata !11331, metadata !DIExpression()), !dbg !11333
  %331 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11334
  %xrepeat402 = getelementptr inbounds %struct.Tex, %struct.Tex* %331, i32 0, i32 40, !dbg !11335
  %332 = load i16, i16* %xrepeat402, align 4, !dbg !11335
  %conv403 = sext i16 %332 to i32, !dbg !11334
  %conv404 = sitofp i32 %conv403 to float, !dbg !11334
  %333 = load float, float* %fx, align 4, !dbg !11336
  %mul405 = fmul float %333, %conv404, !dbg !11336
  store float %mul405, float* %fx, align 4, !dbg !11336
  store float %mul405, float* %origf401, align 4, !dbg !11333
  %334 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11337
  %texfilter = getelementptr inbounds %struct.Tex, %struct.Tex* %334, i32 0, i32 38, !dbg !11339
  %335 = load i32, i32* %texfilter, align 4, !dbg !11339
  %cmp406 = icmp eq i32 %335, 0, !dbg !11340
  br i1 %cmp406, label %if.then408, label %if.end439, !dbg !11341

if.then408:                                       ; preds = %if.then400
  %336 = load float, float* %fx, align 4, !dbg !11342
  %cmp409 = fcmp ogt float %336, 1.000000e+00, !dbg !11345
  br i1 %cmp409, label %if.then411, label %if.else415, !dbg !11346

if.then411:                                       ; preds = %if.then408
  %337 = load float, float* %fx, align 4, !dbg !11347
  %conv412 = fptosi float %337 to i32, !dbg !11348
  %conv413 = sitofp i32 %conv412 to float, !dbg !11348
  %338 = load float, float* %fx, align 4, !dbg !11349
  %sub414 = fsub float %338, %conv413, !dbg !11349
  store float %sub414, float* %fx, align 4, !dbg !11349
  br label %if.end424, !dbg !11350

if.else415:                                       ; preds = %if.then408
  %339 = load float, float* %fx, align 4, !dbg !11351
  %cmp416 = fcmp olt float %339, 0.000000e+00, !dbg !11353
  br i1 %cmp416, label %if.then418, label %if.end423, !dbg !11354

if.then418:                                       ; preds = %if.else415
  %340 = load float, float* %fx, align 4, !dbg !11355
  %conv419 = fptosi float %340 to i32, !dbg !11356
  %sub420 = sub nsw i32 1, %conv419, !dbg !11357
  %conv421 = sitofp i32 %sub420 to float, !dbg !11358
  %341 = load float, float* %fx, align 4, !dbg !11359
  %add422 = fadd float %341, %conv421, !dbg !11359
  store float %add422, float* %fx, align 4, !dbg !11359
  br label %if.end423, !dbg !11360

if.end423:                                        ; preds = %if.then418, %if.else415
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.then411
  %342 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11361
  %flag425 = getelementptr inbounds %struct.Tex, %struct.Tex* %342, i32 0, i32 31, !dbg !11363
  %343 = load i16, i16* %flag425, align 2, !dbg !11363
  %conv426 = sext i16 %343 to i32, !dbg !11361
  %and427 = and i32 %conv426, 128, !dbg !11364
  %tobool428 = icmp ne i32 %and427, 0, !dbg !11364
  br i1 %tobool428, label %if.then429, label %if.end438, !dbg !11365

if.then429:                                       ; preds = %if.end424
  call void @llvm.dbg.declare(metadata i32* %orig430, metadata !11366, metadata !DIExpression()), !dbg !11368
  %344 = load float, float* %origf401, align 4, !dbg !11369
  %conv431 = fpext float %344 to double, !dbg !11369
  %345 = call double @llvm.floor.f64(double %conv431), !dbg !11370
  %conv432 = fptosi double %345 to i32, !dbg !11371
  store i32 %conv432, i32* %orig430, align 4, !dbg !11368
  %346 = load i32, i32* %orig430, align 4, !dbg !11372
  %and433 = and i32 %346, 1, !dbg !11374
  %tobool434 = icmp ne i32 %and433, 0, !dbg !11374
  br i1 %tobool434, label %if.then435, label %if.end437, !dbg !11375

if.then435:                                       ; preds = %if.then429
  %347 = load float, float* %fx, align 4, !dbg !11376
  %sub436 = fsub float 1.000000e+00, %347, !dbg !11377
  store float %sub436, float* %fx, align 4, !dbg !11378
  br label %if.end437, !dbg !11379

if.end437:                                        ; preds = %if.then435, %if.then429
  br label %if.end438, !dbg !11380

if.end438:                                        ; preds = %if.end437, %if.end424
  br label %if.end439, !dbg !11381

if.end439:                                        ; preds = %if.end438, %if.then400
  %348 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11382
  %xrepeat440 = getelementptr inbounds %struct.Tex, %struct.Tex* %348, i32 0, i32 40, !dbg !11383
  %349 = load i16, i16* %xrepeat440, align 4, !dbg !11383
  %conv441 = sitofp i16 %349 to float, !dbg !11382
  store float %conv441, float* %max, align 4, !dbg !11384
  %350 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11385
  %xrepeat442 = getelementptr inbounds %struct.Tex, %struct.Tex* %350, i32 0, i32 40, !dbg !11386
  %351 = load i16, i16* %xrepeat442, align 4, !dbg !11386
  %conv443 = sext i16 %351 to i32, !dbg !11385
  %conv444 = sitofp i32 %conv443 to float, !dbg !11385
  %352 = load float*, float** %dxt.addr, align 8, !dbg !11387
  %arrayidx445 = getelementptr inbounds float, float* %352, i64 0, !dbg !11387
  %353 = load float, float* %arrayidx445, align 4, !dbg !11388
  %mul446 = fmul float %353, %conv444, !dbg !11388
  store float %mul446, float* %arrayidx445, align 4, !dbg !11388
  %354 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11389
  %xrepeat447 = getelementptr inbounds %struct.Tex, %struct.Tex* %354, i32 0, i32 40, !dbg !11390
  %355 = load i16, i16* %xrepeat447, align 4, !dbg !11390
  %conv448 = sext i16 %355 to i32, !dbg !11389
  %conv449 = sitofp i32 %conv448 to float, !dbg !11389
  %356 = load float*, float** %dyt.addr, align 8, !dbg !11391
  %arrayidx450 = getelementptr inbounds float, float* %356, i64 0, !dbg !11391
  %357 = load float, float* %arrayidx450, align 4, !dbg !11392
  %mul451 = fmul float %357, %conv449, !dbg !11392
  store float %mul451, float* %arrayidx450, align 4, !dbg !11392
  br label %if.end452, !dbg !11393

if.end452:                                        ; preds = %if.end439, %if.then395
  %358 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11394
  %yrepeat453 = getelementptr inbounds %struct.Tex, %struct.Tex* %358, i32 0, i32 41, !dbg !11396
  %359 = load i16, i16* %yrepeat453, align 2, !dbg !11396
  %conv454 = sext i16 %359 to i32, !dbg !11394
  %cmp455 = icmp sgt i32 %conv454, 1, !dbg !11397
  br i1 %cmp455, label %if.then457, label %if.end517, !dbg !11398

if.then457:                                       ; preds = %if.end452
  call void @llvm.dbg.declare(metadata float* %origf458, metadata !11399, metadata !DIExpression()), !dbg !11401
  %360 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11402
  %yrepeat459 = getelementptr inbounds %struct.Tex, %struct.Tex* %360, i32 0, i32 41, !dbg !11403
  %361 = load i16, i16* %yrepeat459, align 2, !dbg !11403
  %conv460 = sext i16 %361 to i32, !dbg !11402
  %conv461 = sitofp i32 %conv460 to float, !dbg !11402
  %362 = load float, float* %fy, align 4, !dbg !11404
  %mul462 = fmul float %362, %conv461, !dbg !11404
  store float %mul462, float* %fy, align 4, !dbg !11404
  store float %mul462, float* %origf458, align 4, !dbg !11401
  %363 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11405
  %texfilter463 = getelementptr inbounds %struct.Tex, %struct.Tex* %363, i32 0, i32 38, !dbg !11407
  %364 = load i32, i32* %texfilter463, align 4, !dbg !11407
  %cmp464 = icmp eq i32 %364, 0, !dbg !11408
  br i1 %cmp464, label %if.then466, label %if.end497, !dbg !11409

if.then466:                                       ; preds = %if.then457
  %365 = load float, float* %fy, align 4, !dbg !11410
  %cmp467 = fcmp ogt float %365, 1.000000e+00, !dbg !11413
  br i1 %cmp467, label %if.then469, label %if.else473, !dbg !11414

if.then469:                                       ; preds = %if.then466
  %366 = load float, float* %fy, align 4, !dbg !11415
  %conv470 = fptosi float %366 to i32, !dbg !11416
  %conv471 = sitofp i32 %conv470 to float, !dbg !11416
  %367 = load float, float* %fy, align 4, !dbg !11417
  %sub472 = fsub float %367, %conv471, !dbg !11417
  store float %sub472, float* %fy, align 4, !dbg !11417
  br label %if.end482, !dbg !11418

if.else473:                                       ; preds = %if.then466
  %368 = load float, float* %fy, align 4, !dbg !11419
  %cmp474 = fcmp olt float %368, 0.000000e+00, !dbg !11421
  br i1 %cmp474, label %if.then476, label %if.end481, !dbg !11422

if.then476:                                       ; preds = %if.else473
  %369 = load float, float* %fy, align 4, !dbg !11423
  %conv477 = fptosi float %369 to i32, !dbg !11424
  %sub478 = sub nsw i32 1, %conv477, !dbg !11425
  %conv479 = sitofp i32 %sub478 to float, !dbg !11426
  %370 = load float, float* %fy, align 4, !dbg !11427
  %add480 = fadd float %370, %conv479, !dbg !11427
  store float %add480, float* %fy, align 4, !dbg !11427
  br label %if.end481, !dbg !11428

if.end481:                                        ; preds = %if.then476, %if.else473
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.then469
  %371 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11429
  %flag483 = getelementptr inbounds %struct.Tex, %struct.Tex* %371, i32 0, i32 31, !dbg !11431
  %372 = load i16, i16* %flag483, align 2, !dbg !11431
  %conv484 = sext i16 %372 to i32, !dbg !11429
  %and485 = and i32 %conv484, 256, !dbg !11432
  %tobool486 = icmp ne i32 %and485, 0, !dbg !11432
  br i1 %tobool486, label %if.then487, label %if.end496, !dbg !11433

if.then487:                                       ; preds = %if.end482
  call void @llvm.dbg.declare(metadata i32* %orig488, metadata !11434, metadata !DIExpression()), !dbg !11436
  %373 = load float, float* %origf458, align 4, !dbg !11437
  %conv489 = fpext float %373 to double, !dbg !11437
  %374 = call double @llvm.floor.f64(double %conv489), !dbg !11438
  %conv490 = fptosi double %374 to i32, !dbg !11439
  store i32 %conv490, i32* %orig488, align 4, !dbg !11436
  %375 = load i32, i32* %orig488, align 4, !dbg !11440
  %and491 = and i32 %375, 1, !dbg !11442
  %tobool492 = icmp ne i32 %and491, 0, !dbg !11442
  br i1 %tobool492, label %if.then493, label %if.end495, !dbg !11443

if.then493:                                       ; preds = %if.then487
  %376 = load float, float* %fy, align 4, !dbg !11444
  %sub494 = fsub float 1.000000e+00, %376, !dbg !11445
  store float %sub494, float* %fy, align 4, !dbg !11446
  br label %if.end495, !dbg !11447

if.end495:                                        ; preds = %if.then493, %if.then487
  br label %if.end496, !dbg !11448

if.end496:                                        ; preds = %if.end495, %if.end482
  br label %if.end497, !dbg !11449

if.end497:                                        ; preds = %if.end496, %if.then457
  %377 = load float, float* %max, align 4, !dbg !11450
  %378 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11452
  %yrepeat498 = getelementptr inbounds %struct.Tex, %struct.Tex* %378, i32 0, i32 41, !dbg !11453
  %379 = load i16, i16* %yrepeat498, align 2, !dbg !11453
  %conv499 = sext i16 %379 to i32, !dbg !11452
  %conv500 = sitofp i32 %conv499 to float, !dbg !11452
  %cmp501 = fcmp olt float %377, %conv500, !dbg !11454
  br i1 %cmp501, label %if.then503, label %if.end506, !dbg !11455

if.then503:                                       ; preds = %if.end497
  %380 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11456
  %yrepeat504 = getelementptr inbounds %struct.Tex, %struct.Tex* %380, i32 0, i32 41, !dbg !11457
  %381 = load i16, i16* %yrepeat504, align 2, !dbg !11457
  %conv505 = sitofp i16 %381 to float, !dbg !11456
  store float %conv505, float* %max, align 4, !dbg !11458
  br label %if.end506, !dbg !11459

if.end506:                                        ; preds = %if.then503, %if.end497
  %382 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11460
  %yrepeat507 = getelementptr inbounds %struct.Tex, %struct.Tex* %382, i32 0, i32 41, !dbg !11461
  %383 = load i16, i16* %yrepeat507, align 2, !dbg !11461
  %conv508 = sext i16 %383 to i32, !dbg !11460
  %conv509 = sitofp i32 %conv508 to float, !dbg !11460
  %384 = load float*, float** %dxt.addr, align 8, !dbg !11462
  %arrayidx510 = getelementptr inbounds float, float* %384, i64 1, !dbg !11462
  %385 = load float, float* %arrayidx510, align 4, !dbg !11463
  %mul511 = fmul float %385, %conv509, !dbg !11463
  store float %mul511, float* %arrayidx510, align 4, !dbg !11463
  %386 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11464
  %yrepeat512 = getelementptr inbounds %struct.Tex, %struct.Tex* %386, i32 0, i32 41, !dbg !11465
  %387 = load i16, i16* %yrepeat512, align 2, !dbg !11465
  %conv513 = sext i16 %387 to i32, !dbg !11464
  %conv514 = sitofp i32 %conv513 to float, !dbg !11464
  %388 = load float*, float** %dyt.addr, align 8, !dbg !11466
  %arrayidx515 = getelementptr inbounds float, float* %388, i64 1, !dbg !11466
  %389 = load float, float* %arrayidx515, align 4, !dbg !11467
  %mul516 = fmul float %389, %conv514, !dbg !11467
  store float %mul516, float* %arrayidx515, align 4, !dbg !11467
  br label %if.end517, !dbg !11468

if.end517:                                        ; preds = %if.end506, %if.end452
  %390 = load float, float* %max, align 4, !dbg !11469
  %cmp518 = fcmp une float %390, 1.000000e+00, !dbg !11471
  br i1 %cmp518, label %if.then520, label %if.end525, !dbg !11472

if.then520:                                       ; preds = %if.end517
  %391 = load float, float* %max, align 4, !dbg !11473
  %392 = load float*, float** %dxt.addr, align 8, !dbg !11475
  %arrayidx521 = getelementptr inbounds float, float* %392, i64 2, !dbg !11475
  %393 = load float, float* %arrayidx521, align 4, !dbg !11476
  %mul522 = fmul float %393, %391, !dbg !11476
  store float %mul522, float* %arrayidx521, align 4, !dbg !11476
  %394 = load float, float* %max, align 4, !dbg !11477
  %395 = load float*, float** %dyt.addr, align 8, !dbg !11478
  %arrayidx523 = getelementptr inbounds float, float* %395, i64 2, !dbg !11478
  %396 = load float, float* %arrayidx523, align 4, !dbg !11479
  %mul524 = fmul float %396, %394, !dbg !11479
  store float %mul524, float* %arrayidx523, align 4, !dbg !11479
  br label %if.end525, !dbg !11480

if.end525:                                        ; preds = %if.then520, %if.end517
  br label %if.end526, !dbg !11481

if.end526:                                        ; preds = %if.end525, %if.end390
  %397 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11482
  %cropxmin527 = getelementptr inbounds %struct.Tex, %struct.Tex* %397, i32 0, i32 34, !dbg !11484
  %398 = load float, float* %cropxmin527, align 4, !dbg !11484
  %cmp528 = fcmp une float %398, 0.000000e+00, !dbg !11485
  br i1 %cmp528, label %if.then534, label %lor.lhs.false530, !dbg !11486

lor.lhs.false530:                                 ; preds = %if.end526
  %399 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11487
  %cropxmax531 = getelementptr inbounds %struct.Tex, %struct.Tex* %399, i32 0, i32 36, !dbg !11488
  %400 = load float, float* %cropxmax531, align 4, !dbg !11488
  %cmp532 = fcmp une float %400, 1.000000e+00, !dbg !11489
  br i1 %cmp532, label %if.then534, label %if.end545, !dbg !11490

if.then534:                                       ; preds = %lor.lhs.false530, %if.end526
  %401 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11491
  %cropxmax535 = getelementptr inbounds %struct.Tex, %struct.Tex* %401, i32 0, i32 36, !dbg !11493
  %402 = load float, float* %cropxmax535, align 4, !dbg !11493
  %403 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11494
  %cropxmin536 = getelementptr inbounds %struct.Tex, %struct.Tex* %403, i32 0, i32 34, !dbg !11495
  %404 = load float, float* %cropxmin536, align 4, !dbg !11495
  %sub537 = fsub float %402, %404, !dbg !11496
  store float %sub537, float* %fac1, align 4, !dbg !11497
  %405 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11498
  %cropxmin538 = getelementptr inbounds %struct.Tex, %struct.Tex* %405, i32 0, i32 34, !dbg !11499
  %406 = load float, float* %cropxmin538, align 4, !dbg !11499
  %407 = load float, float* %fx, align 4, !dbg !11500
  %408 = load float, float* %fac1, align 4, !dbg !11501
  %mul539 = fmul float %407, %408, !dbg !11502
  %add540 = fadd float %406, %mul539, !dbg !11503
  store float %add540, float* %fx, align 4, !dbg !11504
  %409 = load float, float* %fac1, align 4, !dbg !11505
  %410 = load float*, float** %dxt.addr, align 8, !dbg !11506
  %arrayidx541 = getelementptr inbounds float, float* %410, i64 0, !dbg !11506
  %411 = load float, float* %arrayidx541, align 4, !dbg !11507
  %mul542 = fmul float %411, %409, !dbg !11507
  store float %mul542, float* %arrayidx541, align 4, !dbg !11507
  %412 = load float, float* %fac1, align 4, !dbg !11508
  %413 = load float*, float** %dyt.addr, align 8, !dbg !11509
  %arrayidx543 = getelementptr inbounds float, float* %413, i64 0, !dbg !11509
  %414 = load float, float* %arrayidx543, align 4, !dbg !11510
  %mul544 = fmul float %414, %412, !dbg !11510
  store float %mul544, float* %arrayidx543, align 4, !dbg !11510
  br label %if.end545, !dbg !11511

if.end545:                                        ; preds = %if.then534, %lor.lhs.false530
  %415 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11512
  %cropymin546 = getelementptr inbounds %struct.Tex, %struct.Tex* %415, i32 0, i32 35, !dbg !11514
  %416 = load float, float* %cropymin546, align 8, !dbg !11514
  %cmp547 = fcmp une float %416, 0.000000e+00, !dbg !11515
  br i1 %cmp547, label %if.then553, label %lor.lhs.false549, !dbg !11516

lor.lhs.false549:                                 ; preds = %if.end545
  %417 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11517
  %cropymax550 = getelementptr inbounds %struct.Tex, %struct.Tex* %417, i32 0, i32 37, !dbg !11518
  %418 = load float, float* %cropymax550, align 8, !dbg !11518
  %cmp551 = fcmp une float %418, 1.000000e+00, !dbg !11519
  br i1 %cmp551, label %if.then553, label %if.end564, !dbg !11520

if.then553:                                       ; preds = %lor.lhs.false549, %if.end545
  %419 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11521
  %cropymax554 = getelementptr inbounds %struct.Tex, %struct.Tex* %419, i32 0, i32 37, !dbg !11523
  %420 = load float, float* %cropymax554, align 8, !dbg !11523
  %421 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11524
  %cropymin555 = getelementptr inbounds %struct.Tex, %struct.Tex* %421, i32 0, i32 35, !dbg !11525
  %422 = load float, float* %cropymin555, align 8, !dbg !11525
  %sub556 = fsub float %420, %422, !dbg !11526
  store float %sub556, float* %fac1, align 4, !dbg !11527
  %423 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11528
  %cropymin557 = getelementptr inbounds %struct.Tex, %struct.Tex* %423, i32 0, i32 35, !dbg !11529
  %424 = load float, float* %cropymin557, align 8, !dbg !11529
  %425 = load float, float* %fy, align 4, !dbg !11530
  %426 = load float, float* %fac1, align 4, !dbg !11531
  %mul558 = fmul float %425, %426, !dbg !11532
  %add559 = fadd float %424, %mul558, !dbg !11533
  store float %add559, float* %fy, align 4, !dbg !11534
  %427 = load float, float* %fac1, align 4, !dbg !11535
  %428 = load float*, float** %dxt.addr, align 8, !dbg !11536
  %arrayidx560 = getelementptr inbounds float, float* %428, i64 1, !dbg !11536
  %429 = load float, float* %arrayidx560, align 4, !dbg !11537
  %mul561 = fmul float %429, %427, !dbg !11537
  store float %mul561, float* %arrayidx560, align 4, !dbg !11537
  %430 = load float, float* %fac1, align 4, !dbg !11538
  %431 = load float*, float** %dyt.addr, align 8, !dbg !11539
  %arrayidx562 = getelementptr inbounds float, float* %431, i64 1, !dbg !11539
  %432 = load float, float* %arrayidx562, align 4, !dbg !11540
  %mul563 = fmul float %432, %430, !dbg !11540
  store float %mul563, float* %arrayidx562, align 4, !dbg !11540
  br label %if.end564, !dbg !11541

if.end564:                                        ; preds = %if.then553, %lor.lhs.false549
  %433 = load float, float* %fx, align 4, !dbg !11542
  %434 = load float*, float** %texvec.addr, align 8, !dbg !11543
  %arrayidx565 = getelementptr inbounds float, float* %434, i64 0, !dbg !11543
  store float %433, float* %arrayidx565, align 4, !dbg !11544
  %435 = load float, float* %fy, align 4, !dbg !11545
  %436 = load float*, float** %texvec.addr, align 8, !dbg !11546
  %arrayidx566 = getelementptr inbounds float, float* %436, i64 1, !dbg !11546
  store float %435, float* %arrayidx566, align 4, !dbg !11547
  br label %if.end567

if.end567:                                        ; preds = %if.end564, %if.end151
  ret void, !dbg !11548
}

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_bw(float* %rgb) #0 !dbg !11549 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !11550, metadata !DIExpression()), !dbg !11551
  %0 = load float*, float** %rgb.addr, align 8, !dbg !11552
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11552
  %1 = load float, float* %arrayidx, align 4, !dbg !11552
  %mul = fmul float 0x3FD6666660000000, %1, !dbg !11553
  %2 = load float*, float** %rgb.addr, align 8, !dbg !11554
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !11554
  %3 = load float, float* %arrayidx1, align 4, !dbg !11554
  %mul2 = fmul float 0x3FDCCCCCC0000000, %3, !dbg !11555
  %add = fadd float %mul, %mul2, !dbg !11556
  %4 = load float*, float** %rgb.addr, align 8, !dbg !11557
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !11557
  %5 = load float, float* %arrayidx3, align 4, !dbg !11557
  %mul4 = fmul float 0x3FC99999A0000000, %5, !dbg !11558
  %add5 = fadd float %add, %mul4, !dbg !11559
  ret float %add5, !dbg !11560
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @do_sky_tex(float* %rco, float* %lo, float* %dxyview, float* %hor, float* %zen, float* %blend, i32 %skyflag, i16 signext %thread) #0 !dbg !11561 {
entry:
  %rco.addr = alloca float*, align 8
  %lo.addr = alloca float*, align 8
  %dxyview.addr = alloca float*, align 8
  %hor.addr = alloca float*, align 8
  %zen.addr = alloca float*, align 8
  %blend.addr = alloca float*, align 8
  %skyflag.addr = alloca i32, align 4
  %thread.addr = alloca i16, align 2
  %mtex = alloca %struct.MTex*, align 8
  %tex = alloca %struct.Tex*, align 8
  %texres = alloca %struct.TexResult, align 8
  %co = alloca float*, align 8
  %fact = alloca float, align 4
  %stencilTin = alloca float, align 4
  %tempvec = alloca [3 x float], align 4
  %texvec = alloca [3 x float], align 4
  %dxt = alloca [3 x float], align 4
  %dyt = alloca [3 x float], align 4
  %tex_nr = alloca i32, align 4
  %rgb = alloca i32, align 4
  %tcol = alloca [3 x float], align 4
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %zenfac = alloca float, align 4
  store float* %rco, float** %rco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rco.addr, metadata !11564, metadata !DIExpression()), !dbg !11565
  store float* %lo, float** %lo.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lo.addr, metadata !11566, metadata !DIExpression()), !dbg !11567
  store float* %dxyview, float** %dxyview.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dxyview.addr, metadata !11568, metadata !DIExpression()), !dbg !11569
  store float* %hor, float** %hor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hor.addr, metadata !11570, metadata !DIExpression()), !dbg !11571
  store float* %zen, float** %zen.addr, align 8
  call void @llvm.dbg.declare(metadata float** %zen.addr, metadata !11572, metadata !DIExpression()), !dbg !11573
  store float* %blend, float** %blend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %blend.addr, metadata !11574, metadata !DIExpression()), !dbg !11575
  store i32 %skyflag, i32* %skyflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skyflag.addr, metadata !11576, metadata !DIExpression()), !dbg !11577
  store i16 %thread, i16* %thread.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %thread.addr, metadata !11578, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !11580, metadata !DIExpression()), !dbg !11581
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !11582, metadata !DIExpression()), !dbg !11583
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !11584, metadata !DIExpression()), !dbg !11585
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !11585
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !11585
  call void @llvm.dbg.declare(metadata float** %co, metadata !11586, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.declare(metadata float* %fact, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata float* %stencilTin, metadata !11590, metadata !DIExpression()), !dbg !11591
  store float 1.000000e+00, float* %stencilTin, align 4, !dbg !11591
  call void @llvm.dbg.declare(metadata [3 x float]* %tempvec, metadata !11592, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !11594, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt, metadata !11596, metadata !DIExpression()), !dbg !11597
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt, metadata !11598, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !11600, metadata !DIExpression()), !dbg !11601
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !11602, metadata !DIExpression()), !dbg !11603
  store i32 0, i32* %rgb, align 4, !dbg !11603
  %1 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !11604
  %and = and i32 %1, 8192, !dbg !11606
  %tobool = icmp ne i32 %and, 0, !dbg !11606
  br i1 %tobool, label %if.then, label %if.end, !dbg !11607

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !11608

if.end:                                           ; preds = %entry
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !11609
  store float* null, float** %nor, align 8, !dbg !11610
  store i32 0, i32* %tex_nr, align 4, !dbg !11611
  br label %for.cond, !dbg !11613

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %tex_nr, align 4, !dbg !11614
  %cmp = icmp slt i32 %2, 18, !dbg !11616
  br i1 %cmp, label %for.body, label %for.end, !dbg !11617

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %tex_nr, align 4, !dbg !11618
  %idxprom = sext i32 %3 to i64, !dbg !11621
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 70), i64 0, i64 %idxprom, !dbg !11621
  %4 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !11621
  %tobool1 = icmp ne %struct.MTex* %4, null, !dbg !11621
  br i1 %tobool1, label %if.then2, label %if.end368, !dbg !11622

if.then2:                                         ; preds = %for.body
  %5 = load i32, i32* %tex_nr, align 4, !dbg !11623
  %idxprom3 = sext i32 %5 to i64, !dbg !11625
  %arrayidx4 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 70), i64 0, i64 %idxprom3, !dbg !11625
  %6 = load %struct.MTex*, %struct.MTex** %arrayidx4, align 8, !dbg !11625
  store %struct.MTex* %6, %struct.MTex** %mtex, align 8, !dbg !11626
  %7 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11627
  %tex5 = getelementptr inbounds %struct.MTex, %struct.MTex* %7, i32 0, i32 5, !dbg !11628
  %8 = load %struct.Tex*, %struct.Tex** %tex5, align 8, !dbg !11628
  store %struct.Tex* %8, %struct.Tex** %tex, align 8, !dbg !11629
  %9 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11630
  %cmp6 = icmp eq %struct.Tex* %9, null, !dbg !11632
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11633

if.then7:                                         ; preds = %if.then2
  br label %for.inc, !dbg !11634

if.end8:                                          ; preds = %if.then2
  %10 = load float*, float** %lo.addr, align 8, !dbg !11635
  store float* %10, float** %co, align 8, !dbg !11636
  %11 = load float*, float** %dxyview.addr, align 8, !dbg !11637
  %tobool9 = icmp ne float* %11, null, !dbg !11637
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !11639

if.then10:                                        ; preds = %if.end8
  %12 = load float*, float** %dxyview.addr, align 8, !dbg !11640
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0, !dbg !11640
  %13 = load float, float* %arrayidx11, align 4, !dbg !11640
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !11642
  store float %13, float* %arrayidx12, align 4, !dbg !11643
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !11644
  store float %13, float* %arrayidx13, align 4, !dbg !11645
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !11646
  store float %13, float* %arrayidx14, align 4, !dbg !11647
  %14 = load float*, float** %dxyview.addr, align 8, !dbg !11648
  %arrayidx15 = getelementptr inbounds float, float* %14, i64 1, !dbg !11648
  %15 = load float, float* %arrayidx15, align 4, !dbg !11648
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !11649
  store float %15, float* %arrayidx16, align 4, !dbg !11650
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !11651
  store float %15, float* %arrayidx17, align 4, !dbg !11652
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !11653
  store float %15, float* %arrayidx18, align 4, !dbg !11654
  br label %if.end25, !dbg !11655

if.else:                                          ; preds = %if.end8
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !11656
  store float 0.000000e+00, float* %arrayidx19, align 4, !dbg !11658
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !11659
  store float 0.000000e+00, float* %arrayidx20, align 4, !dbg !11660
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !11661
  store float 0.000000e+00, float* %arrayidx21, align 4, !dbg !11662
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !11663
  store float 0.000000e+00, float* %arrayidx22, align 4, !dbg !11664
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !11665
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !11666
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !11667
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !11668
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then10
  %16 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11669
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %16, i32 0, i32 0, !dbg !11670
  %17 = load i16, i16* %texco, align 8, !dbg !11670
  %conv = sext i16 %17 to i32, !dbg !11669
  switch i32 %conv, label %sw.epilog [
    i32 64, label %sw.bb
    i32 256, label %sw.bb51
    i32 1024, label %sw.bb51
    i32 2048, label %sw.bb91
    i32 32, label %sw.bb105
    i32 8, label %sw.bb114
  ], !dbg !11671

sw.bb:                                            ; preds = %if.end25
  %18 = load float*, float** %lo.addr, align 8, !dbg !11672
  %arrayidx26 = getelementptr inbounds float, float* %18, i64 0, !dbg !11672
  %19 = load float, float* %arrayidx26, align 4, !dbg !11672
  %tobool27 = fcmp une float %19, 0.000000e+00, !dbg !11672
  br i1 %tobool27, label %if.then30, label %lor.lhs.false, !dbg !11675

lor.lhs.false:                                    ; preds = %sw.bb
  %20 = load float*, float** %lo.addr, align 8, !dbg !11676
  %arrayidx28 = getelementptr inbounds float, float* %20, i64 1, !dbg !11676
  %21 = load float, float* %arrayidx28, align 4, !dbg !11676
  %tobool29 = fcmp une float %21, 0.000000e+00, !dbg !11676
  br i1 %tobool29, label %if.then30, label %if.else46, !dbg !11677

if.then30:                                        ; preds = %lor.lhs.false, %sw.bb
  %22 = load float*, float** %lo.addr, align 8, !dbg !11678
  %arrayidx31 = getelementptr inbounds float, float* %22, i64 2, !dbg !11678
  %23 = load float, float* %arrayidx31, align 4, !dbg !11678
  %call = call float @saacos(float %23), !dbg !11680
  %mul = fmul float 0x3FD45F3060000000, %call, !dbg !11681
  %24 = load float*, float** %lo.addr, align 8, !dbg !11682
  %arrayidx32 = getelementptr inbounds float, float* %24, i64 0, !dbg !11682
  %25 = load float, float* %arrayidx32, align 4, !dbg !11682
  %26 = load float*, float** %lo.addr, align 8, !dbg !11683
  %arrayidx33 = getelementptr inbounds float, float* %26, i64 0, !dbg !11683
  %27 = load float, float* %arrayidx33, align 4, !dbg !11683
  %mul34 = fmul float %25, %27, !dbg !11684
  %28 = load float*, float** %lo.addr, align 8, !dbg !11685
  %arrayidx35 = getelementptr inbounds float, float* %28, i64 1, !dbg !11685
  %29 = load float, float* %arrayidx35, align 4, !dbg !11685
  %30 = load float*, float** %lo.addr, align 8, !dbg !11686
  %arrayidx36 = getelementptr inbounds float, float* %30, i64 1, !dbg !11686
  %31 = load float, float* %arrayidx36, align 4, !dbg !11686
  %mul37 = fmul float %29, %31, !dbg !11687
  %add = fadd float %mul34, %mul37, !dbg !11688
  %call38 = call float @sqrtf(float %add) #7, !dbg !11689
  %div = fdiv float %mul, %call38, !dbg !11690
  store float %div, float* %fact, align 4, !dbg !11691
  %32 = load float*, float** %lo.addr, align 8, !dbg !11692
  %arrayidx39 = getelementptr inbounds float, float* %32, i64 0, !dbg !11692
  %33 = load float, float* %arrayidx39, align 4, !dbg !11692
  %34 = load float, float* %fact, align 4, !dbg !11693
  %mul40 = fmul float %33, %34, !dbg !11694
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11695
  store float %mul40, float* %arrayidx41, align 4, !dbg !11696
  %35 = load float*, float** %lo.addr, align 8, !dbg !11697
  %arrayidx42 = getelementptr inbounds float, float* %35, i64 1, !dbg !11697
  %36 = load float, float* %arrayidx42, align 4, !dbg !11697
  %37 = load float, float* %fact, align 4, !dbg !11698
  %mul43 = fmul float %36, %37, !dbg !11699
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11700
  store float %mul43, float* %arrayidx44, align 4, !dbg !11701
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !11702
  store float 0.000000e+00, float* %arrayidx45, align 4, !dbg !11703
  br label %if.end50, !dbg !11704

if.else46:                                        ; preds = %lor.lhs.false
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11705
  store float 1.000000e+00, float* %arrayidx47, align 4, !dbg !11707
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11708
  store float 0.000000e+00, float* %arrayidx48, align 4, !dbg !11709
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !11710
  store float 0.000000e+00, float* %arrayidx49, align 4, !dbg !11711
  br label %if.end50

if.end50:                                         ; preds = %if.else46, %if.then30
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11712
  store float* %arraydecay, float** %co, align 8, !dbg !11713
  br label %sw.epilog, !dbg !11714

sw.bb51:                                          ; preds = %if.end25, %if.end25
  %38 = load i32, i32* %skyflag.addr, align 4, !dbg !11715
  %and52 = and i32 %38, 16, !dbg !11717
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11717
  br i1 %tobool53, label %if.then54, label %if.else89, !dbg !11718

if.then54:                                        ; preds = %sw.bb51
  %39 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11719
  %texco55 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 0, !dbg !11722
  %40 = load i16, i16* %texco55, align 8, !dbg !11722
  %conv56 = sext i16 %40 to i32, !dbg !11719
  %cmp57 = icmp eq i32 %conv56, 1024, !dbg !11723
  br i1 %cmp57, label %if.then59, label %if.else65, !dbg !11724

if.then59:                                        ; preds = %if.then54
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11725
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11726
  %add.ptr = getelementptr inbounds float, float* %arraydecay61, i64 1, !dbg !11727
  %41 = load float*, float** %lo.addr, align 8, !dbg !11728
  %arrayidx62 = getelementptr inbounds float, float* %41, i64 0, !dbg !11728
  %42 = load float, float* %arrayidx62, align 4, !dbg !11728
  %43 = load float*, float** %lo.addr, align 8, !dbg !11729
  %arrayidx63 = getelementptr inbounds float, float* %43, i64 2, !dbg !11729
  %44 = load float, float* %arrayidx63, align 4, !dbg !11729
  %45 = load float*, float** %lo.addr, align 8, !dbg !11730
  %arrayidx64 = getelementptr inbounds float, float* %45, i64 1, !dbg !11730
  %46 = load float, float* %arrayidx64, align 4, !dbg !11730
  call void @map_to_tube(float* %arraydecay60, float* %add.ptr, float %42, float %44, float %46), !dbg !11731
  br label %if.end72, !dbg !11731

if.else65:                                        ; preds = %if.then54
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11732
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11733
  %add.ptr68 = getelementptr inbounds float, float* %arraydecay67, i64 1, !dbg !11734
  %47 = load float*, float** %lo.addr, align 8, !dbg !11735
  %arrayidx69 = getelementptr inbounds float, float* %47, i64 0, !dbg !11735
  %48 = load float, float* %arrayidx69, align 4, !dbg !11735
  %49 = load float*, float** %lo.addr, align 8, !dbg !11736
  %arrayidx70 = getelementptr inbounds float, float* %49, i64 2, !dbg !11736
  %50 = load float, float* %arrayidx70, align 4, !dbg !11736
  %51 = load float*, float** %lo.addr, align 8, !dbg !11737
  %arrayidx71 = getelementptr inbounds float, float* %51, i64 1, !dbg !11737
  %52 = load float, float* %arrayidx71, align 4, !dbg !11737
  call void @map_to_sphere(float* %arraydecay66, float* %add.ptr68, float %48, float %50, float %52), !dbg !11738
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then59
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11739
  %53 = load float, float* %arrayidx73, align 4, !dbg !11739
  %sub = fsub float 1.000000e+00, %53, !dbg !11740
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11741
  store float %sub, float* %arrayidx74, align 4, !dbg !11742
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11743
  %54 = load float, float* %arrayidx75, align 4, !dbg !11743
  %mul76 = fmul float 2.000000e+00, %54, !dbg !11744
  %sub77 = fsub float %mul76, 1.000000e+00, !dbg !11745
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11746
  store float %sub77, float* %arrayidx78, align 4, !dbg !11747
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !11748
  store float 0.000000e+00, float* %arrayidx79, align 4, !dbg !11749
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11750
  %55 = load float, float* %arrayidx80, align 4, !dbg !11750
  %mul81 = fmul float 2.000000e+00, %55, !dbg !11751
  %sub82 = fsub float %mul81, 1.000000e+00, !dbg !11752
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11753
  store float %sub82, float* %arrayidx83, align 4, !dbg !11754
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11755
  %56 = load float, float* %arrayidx84, align 4, !dbg !11755
  %mul85 = fmul float 2.000000e+00, %56, !dbg !11756
  %sub86 = fsub float %mul85, 1.000000e+00, !dbg !11757
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11758
  store float %sub86, float* %arrayidx87, align 4, !dbg !11759
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11760
  store float* %arraydecay88, float** %co, align 8, !dbg !11761
  br label %if.end90, !dbg !11762

if.else89:                                        ; preds = %sw.bb51
  br label %for.inc, !dbg !11763

if.end90:                                         ; preds = %if.end72
  br label %sw.epilog, !dbg !11765

sw.bb91:                                          ; preds = %if.end25
  %57 = load float*, float** %lo.addr, align 8, !dbg !11766
  %arrayidx92 = getelementptr inbounds float, float* %57, i64 0, !dbg !11766
  %58 = load float, float* %arrayidx92, align 4, !dbg !11766
  %59 = load float*, float** %lo.addr, align 8, !dbg !11767
  %arrayidx93 = getelementptr inbounds float, float* %59, i64 2, !dbg !11767
  %60 = load float, float* %arrayidx93, align 4, !dbg !11767
  %call94 = call float @atan2f(float %58, float %60) #7, !dbg !11768
  %div95 = fdiv float %call94, 0x400921FB60000000, !dbg !11769
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11770
  store float %div95, float* %arrayidx96, align 4, !dbg !11771
  %61 = load float*, float** %lo.addr, align 8, !dbg !11772
  %arrayidx97 = getelementptr inbounds float, float* %61, i64 1, !dbg !11772
  %62 = load float, float* %arrayidx97, align 4, !dbg !11772
  %call98 = call float @saacos(float %62), !dbg !11773
  %mul99 = fmul float 2.000000e+00, %call98, !dbg !11774
  %div100 = fdiv float %mul99, 0x400921FB60000000, !dbg !11775
  %sub101 = fsub float 1.000000e+00, %div100, !dbg !11776
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !11777
  store float %sub101, float* %arrayidx102, align 4, !dbg !11778
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !11779
  store float 0.000000e+00, float* %arrayidx103, align 4, !dbg !11780
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11781
  store float* %arraydecay104, float** %co, align 8, !dbg !11782
  br label %sw.epilog, !dbg !11783

sw.bb105:                                         ; preds = %if.end25
  %63 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11784
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %63, i32 0, i32 4, !dbg !11786
  %64 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !11786
  %tobool106 = icmp ne %struct.Object* %64, null, !dbg !11784
  br i1 %tobool106, label %if.then107, label %if.end113, !dbg !11787

if.then107:                                       ; preds = %sw.bb105
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11788
  %65 = load float*, float** %lo.addr, align 8, !dbg !11790
  call void @copy_v3_v3(float* %arraydecay108, float* %65), !dbg !11791
  %66 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11792
  %object109 = getelementptr inbounds %struct.MTex, %struct.MTex* %66, i32 0, i32 4, !dbg !11793
  %67 = load %struct.Object*, %struct.Object** %object109, align 8, !dbg !11793
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 51, !dbg !11794
  %arraydecay110 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !11792
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11795
  call void @mul_m4_v3([4 x float]* %arraydecay110, float* %arraydecay111), !dbg !11796
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11797
  store float* %arraydecay112, float** %co, align 8, !dbg !11798
  br label %if.end113, !dbg !11799

if.end113:                                        ; preds = %if.then107, %sw.bb105
  br label %sw.epilog, !dbg !11800

sw.bb114:                                         ; preds = %if.end25
  %68 = load float*, float** %rco.addr, align 8, !dbg !11801
  %tobool115 = icmp ne float* %68, null, !dbg !11801
  br i1 %tobool115, label %if.then116, label %if.else120, !dbg !11803

if.then116:                                       ; preds = %sw.bb114
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11804
  %69 = load float*, float** %rco.addr, align 8, !dbg !11806
  call void @copy_v3_v3(float* %arraydecay117, float* %69), !dbg !11807
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11808
  call void @mul_m4_v3([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0), float* %arraydecay118), !dbg !11809
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !11810
  store float* %arraydecay119, float** %co, align 8, !dbg !11811
  br label %if.end121, !dbg !11812

if.else120:                                       ; preds = %sw.bb114
  %70 = load float*, float** %lo.addr, align 8, !dbg !11813
  store float* %70, float** %co, align 8, !dbg !11814
  br label %if.end121

if.end121:                                        ; preds = %if.else120, %if.then116
  br label %sw.epilog, !dbg !11815

sw.epilog:                                        ; preds = %if.end25, %if.end121, %if.end113, %sw.bb91, %if.end90, %if.end50
  %71 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11816
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %71, i32 0, i32 7, !dbg !11818
  %72 = load i8, i8* %projx, align 8, !dbg !11818
  %tobool122 = icmp ne i8 %72, 0, !dbg !11816
  br i1 %tobool122, label %if.then123, label %if.else134, !dbg !11819

if.then123:                                       ; preds = %sw.epilog
  %73 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11820
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %73, i32 0, i32 12, !dbg !11821
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !11820
  %74 = load float, float* %arrayidx124, align 8, !dbg !11820
  %75 = load float*, float** %co, align 8, !dbg !11822
  %76 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11823
  %projx125 = getelementptr inbounds %struct.MTex, %struct.MTex* %76, i32 0, i32 7, !dbg !11824
  %77 = load i8, i8* %projx125, align 8, !dbg !11824
  %conv126 = zext i8 %77 to i32, !dbg !11823
  %sub127 = sub nsw i32 %conv126, 1, !dbg !11825
  %idxprom128 = sext i32 %sub127 to i64, !dbg !11822
  %arrayidx129 = getelementptr inbounds float, float* %75, i64 %idxprom128, !dbg !11822
  %78 = load float, float* %arrayidx129, align 4, !dbg !11822
  %79 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11826
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %79, i32 0, i32 11, !dbg !11827
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !11826
  %80 = load float, float* %arrayidx130, align 4, !dbg !11826
  %add131 = fadd float %78, %80, !dbg !11828
  %mul132 = fmul float %74, %add131, !dbg !11829
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !11830
  store float %mul132, float* %arrayidx133, align 4, !dbg !11831
  br label %if.end141, !dbg !11830

if.else134:                                       ; preds = %sw.epilog
  %81 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11832
  %size135 = getelementptr inbounds %struct.MTex, %struct.MTex* %81, i32 0, i32 12, !dbg !11833
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %size135, i64 0, i64 0, !dbg !11832
  %82 = load float, float* %arrayidx136, align 8, !dbg !11832
  %83 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11834
  %ofs137 = getelementptr inbounds %struct.MTex, %struct.MTex* %83, i32 0, i32 11, !dbg !11835
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %ofs137, i64 0, i64 0, !dbg !11834
  %84 = load float, float* %arrayidx138, align 4, !dbg !11834
  %mul139 = fmul float %82, %84, !dbg !11836
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !11837
  store float %mul139, float* %arrayidx140, align 4, !dbg !11838
  br label %if.end141

if.end141:                                        ; preds = %if.else134, %if.then123
  %85 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11839
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %85, i32 0, i32 8, !dbg !11841
  %86 = load i8, i8* %projy, align 1, !dbg !11841
  %tobool142 = icmp ne i8 %86, 0, !dbg !11839
  br i1 %tobool142, label %if.then143, label %if.else156, !dbg !11842

if.then143:                                       ; preds = %if.end141
  %87 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11843
  %size144 = getelementptr inbounds %struct.MTex, %struct.MTex* %87, i32 0, i32 12, !dbg !11844
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %size144, i64 0, i64 1, !dbg !11843
  %88 = load float, float* %arrayidx145, align 4, !dbg !11843
  %89 = load float*, float** %co, align 8, !dbg !11845
  %90 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11846
  %projy146 = getelementptr inbounds %struct.MTex, %struct.MTex* %90, i32 0, i32 8, !dbg !11847
  %91 = load i8, i8* %projy146, align 1, !dbg !11847
  %conv147 = zext i8 %91 to i32, !dbg !11846
  %sub148 = sub nsw i32 %conv147, 1, !dbg !11848
  %idxprom149 = sext i32 %sub148 to i64, !dbg !11845
  %arrayidx150 = getelementptr inbounds float, float* %89, i64 %idxprom149, !dbg !11845
  %92 = load float, float* %arrayidx150, align 4, !dbg !11845
  %93 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11849
  %ofs151 = getelementptr inbounds %struct.MTex, %struct.MTex* %93, i32 0, i32 11, !dbg !11850
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %ofs151, i64 0, i64 1, !dbg !11849
  %94 = load float, float* %arrayidx152, align 4, !dbg !11849
  %add153 = fadd float %92, %94, !dbg !11851
  %mul154 = fmul float %88, %add153, !dbg !11852
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !11853
  store float %mul154, float* %arrayidx155, align 4, !dbg !11854
  br label %if.end163, !dbg !11853

if.else156:                                       ; preds = %if.end141
  %95 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11855
  %size157 = getelementptr inbounds %struct.MTex, %struct.MTex* %95, i32 0, i32 12, !dbg !11856
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %size157, i64 0, i64 1, !dbg !11855
  %96 = load float, float* %arrayidx158, align 4, !dbg !11855
  %97 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11857
  %ofs159 = getelementptr inbounds %struct.MTex, %struct.MTex* %97, i32 0, i32 11, !dbg !11858
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %ofs159, i64 0, i64 1, !dbg !11857
  %98 = load float, float* %arrayidx160, align 4, !dbg !11857
  %mul161 = fmul float %96, %98, !dbg !11859
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !11860
  store float %mul161, float* %arrayidx162, align 4, !dbg !11861
  br label %if.end163

if.end163:                                        ; preds = %if.else156, %if.then143
  %99 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11862
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %99, i32 0, i32 9, !dbg !11864
  %100 = load i8, i8* %projz, align 2, !dbg !11864
  %tobool164 = icmp ne i8 %100, 0, !dbg !11862
  br i1 %tobool164, label %if.then165, label %if.else178, !dbg !11865

if.then165:                                       ; preds = %if.end163
  %101 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11866
  %size166 = getelementptr inbounds %struct.MTex, %struct.MTex* %101, i32 0, i32 12, !dbg !11867
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %size166, i64 0, i64 2, !dbg !11866
  %102 = load float, float* %arrayidx167, align 8, !dbg !11866
  %103 = load float*, float** %co, align 8, !dbg !11868
  %104 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11869
  %projz168 = getelementptr inbounds %struct.MTex, %struct.MTex* %104, i32 0, i32 9, !dbg !11870
  %105 = load i8, i8* %projz168, align 2, !dbg !11870
  %conv169 = zext i8 %105 to i32, !dbg !11869
  %sub170 = sub nsw i32 %conv169, 1, !dbg !11871
  %idxprom171 = sext i32 %sub170 to i64, !dbg !11868
  %arrayidx172 = getelementptr inbounds float, float* %103, i64 %idxprom171, !dbg !11868
  %106 = load float, float* %arrayidx172, align 4, !dbg !11868
  %107 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11872
  %ofs173 = getelementptr inbounds %struct.MTex, %struct.MTex* %107, i32 0, i32 11, !dbg !11873
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %ofs173, i64 0, i64 2, !dbg !11872
  %108 = load float, float* %arrayidx174, align 4, !dbg !11872
  %add175 = fadd float %106, %108, !dbg !11874
  %mul176 = fmul float %102, %add175, !dbg !11875
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !11876
  store float %mul176, float* %arrayidx177, align 4, !dbg !11877
  br label %if.end185, !dbg !11876

if.else178:                                       ; preds = %if.end163
  %109 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11878
  %size179 = getelementptr inbounds %struct.MTex, %struct.MTex* %109, i32 0, i32 12, !dbg !11879
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %size179, i64 0, i64 2, !dbg !11878
  %110 = load float, float* %arrayidx180, align 8, !dbg !11878
  %111 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11880
  %ofs181 = getelementptr inbounds %struct.MTex, %struct.MTex* %111, i32 0, i32 11, !dbg !11881
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %ofs181, i64 0, i64 2, !dbg !11880
  %112 = load float, float* %arrayidx182, align 4, !dbg !11880
  %mul183 = fmul float %110, %112, !dbg !11882
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !11883
  store float %mul183, float* %arrayidx184, align 4, !dbg !11884
  br label %if.end185

if.end185:                                        ; preds = %if.else178, %if.then165
  %113 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !11885
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %113, i32 0, i32 32, !dbg !11887
  %114 = load i16, i16* %type, align 8, !dbg !11887
  %conv186 = sext i16 %114 to i32, !dbg !11885
  %cmp187 = icmp eq i32 %conv186, 8, !dbg !11888
  br i1 %cmp187, label %if.then189, label %if.end193, !dbg !11889

if.then189:                                       ; preds = %if.end185
  %115 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11890
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !11891
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !11892
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !11893
  call void @do_2d_mapping(%struct.MTex* %115, float* %arraydecay190, %struct.VlakRen* null, float* null, float* %arraydecay191, float* %arraydecay192), !dbg !11894
  br label %if.end193, !dbg !11894

if.end193:                                        ; preds = %if.then189, %if.end185
  %116 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11895
  %tex194 = getelementptr inbounds %struct.MTex, %struct.MTex* %116, i32 0, i32 5, !dbg !11896
  %117 = load %struct.Tex*, %struct.Tex** %tex194, align 8, !dbg !11896
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !11897
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !11898
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !11899
  %118 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !11900
  %conv198 = sext i16 %118 to i32, !dbg !11901
  %119 = load i16, i16* %thread.addr, align 2, !dbg !11902
  %120 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11903
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %120, i32 0, i32 19, !dbg !11904
  %121 = load i16, i16* %which_output, align 2, !dbg !11904
  %122 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !11905
  %call199 = call i32 @multitex(%struct.Tex* %117, float* %arraydecay195, float* %arraydecay196, float* %arraydecay197, i32 %conv198, %struct.TexResult* %texres, i16 signext %119, i16 signext %121, %struct.ImagePool* %122), !dbg !11906
  store i32 %call199, i32* %rgb, align 4, !dbg !11907
  %123 = load i32, i32* %rgb, align 4, !dbg !11908
  %tobool200 = icmp ne i32 %123, 0, !dbg !11908
  br i1 %tobool200, label %land.lhs.true, label %if.end206, !dbg !11910

land.lhs.true:                                    ; preds = %if.end193
  %124 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11911
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %124, i32 0, i32 14, !dbg !11912
  %125 = load i16, i16* %texflag, align 8, !dbg !11912
  %conv201 = sext i16 %125 to i32, !dbg !11911
  %and202 = and i32 %conv201, 1, !dbg !11913
  %tobool203 = icmp ne i32 %and202, 0, !dbg !11913
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !11914

if.then204:                                       ; preds = %land.lhs.true
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !11915
  %call205 = call float @rgb_to_bw(float* %tr), !dbg !11917
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11918
  store float %call205, float* %tin, align 8, !dbg !11919
  store i32 0, i32* %rgb, align 4, !dbg !11920
  br label %if.end206, !dbg !11921

if.end206:                                        ; preds = %if.then204, %land.lhs.true, %if.end193
  %126 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11922
  %texflag207 = getelementptr inbounds %struct.MTex, %struct.MTex* %126, i32 0, i32 14, !dbg !11924
  %127 = load i16, i16* %texflag207, align 8, !dbg !11924
  %conv208 = sext i16 %127 to i32, !dbg !11922
  %and209 = and i32 %conv208, 4, !dbg !11925
  %tobool210 = icmp ne i32 %and209, 0, !dbg !11925
  br i1 %tobool210, label %if.then211, label %if.end226, !dbg !11926

if.then211:                                       ; preds = %if.end206
  %128 = load i32, i32* %rgb, align 4, !dbg !11927
  %tobool212 = icmp ne i32 %128, 0, !dbg !11927
  br i1 %tobool212, label %if.then213, label %if.else221, !dbg !11930

if.then213:                                       ; preds = %if.then211
  %tr214 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !11931
  %129 = load float, float* %tr214, align 4, !dbg !11931
  %sub215 = fsub float 1.000000e+00, %129, !dbg !11933
  %tr216 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !11934
  store float %sub215, float* %tr216, align 4, !dbg !11935
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !11936
  %130 = load float, float* %tg, align 8, !dbg !11936
  %sub217 = fsub float 1.000000e+00, %130, !dbg !11937
  %tg218 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !11938
  store float %sub217, float* %tg218, align 8, !dbg !11939
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !11940
  %131 = load float, float* %tb, align 4, !dbg !11940
  %sub219 = fsub float 1.000000e+00, %131, !dbg !11941
  %tb220 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !11942
  store float %sub219, float* %tb220, align 4, !dbg !11943
  br label %if.end225, !dbg !11944

if.else221:                                       ; preds = %if.then211
  %tin222 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11945
  %132 = load float, float* %tin222, align 8, !dbg !11945
  %sub223 = fsub float 1.000000e+00, %132, !dbg !11946
  %tin224 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11947
  store float %sub223, float* %tin224, align 8, !dbg !11948
  br label %if.end225

if.end225:                                        ; preds = %if.else221, %if.then213
  br label %if.end226, !dbg !11949

if.end226:                                        ; preds = %if.end225, %if.end206
  %133 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11950
  %texflag227 = getelementptr inbounds %struct.MTex, %struct.MTex* %133, i32 0, i32 14, !dbg !11952
  %134 = load i16, i16* %texflag227, align 8, !dbg !11952
  %conv228 = sext i16 %134 to i32, !dbg !11950
  %and229 = and i32 %conv228, 2, !dbg !11953
  %tobool230 = icmp ne i32 %and229, 0, !dbg !11953
  br i1 %tobool230, label %if.then231, label %if.else243, !dbg !11954

if.then231:                                       ; preds = %if.end226
  %135 = load i32, i32* %rgb, align 4, !dbg !11955
  %tobool232 = icmp ne i32 %135, 0, !dbg !11955
  br i1 %tobool232, label %if.then233, label %if.else237, !dbg !11958

if.then233:                                       ; preds = %if.then231
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !11959
  %136 = load float, float* %ta, align 8, !dbg !11959
  store float %136, float* %fact, align 4, !dbg !11961
  %137 = load float, float* %stencilTin, align 4, !dbg !11962
  %ta234 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !11963
  %138 = load float, float* %ta234, align 8, !dbg !11964
  %mul235 = fmul float %138, %137, !dbg !11964
  store float %mul235, float* %ta234, align 8, !dbg !11964
  %139 = load float, float* %fact, align 4, !dbg !11965
  %140 = load float, float* %stencilTin, align 4, !dbg !11966
  %mul236 = fmul float %140, %139, !dbg !11966
  store float %mul236, float* %stencilTin, align 4, !dbg !11966
  br label %if.end242, !dbg !11967

if.else237:                                       ; preds = %if.then231
  %tin238 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11968
  %141 = load float, float* %tin238, align 8, !dbg !11968
  store float %141, float* %fact, align 4, !dbg !11970
  %142 = load float, float* %stencilTin, align 4, !dbg !11971
  %tin239 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11972
  %143 = load float, float* %tin239, align 8, !dbg !11973
  %mul240 = fmul float %143, %142, !dbg !11973
  store float %mul240, float* %tin239, align 8, !dbg !11973
  %144 = load float, float* %fact, align 4, !dbg !11974
  %145 = load float, float* %stencilTin, align 4, !dbg !11975
  %mul241 = fmul float %145, %144, !dbg !11975
  store float %mul241, float* %stencilTin, align 4, !dbg !11975
  br label %if.end242

if.end242:                                        ; preds = %if.else237, %if.then233
  br label %if.end252, !dbg !11976

if.else243:                                       ; preds = %if.end226
  %146 = load i32, i32* %rgb, align 4, !dbg !11977
  %tobool244 = icmp ne i32 %146, 0, !dbg !11977
  br i1 %tobool244, label %if.then245, label %if.else248, !dbg !11980

if.then245:                                       ; preds = %if.else243
  %147 = load float, float* %stencilTin, align 4, !dbg !11981
  %ta246 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !11982
  %148 = load float, float* %ta246, align 8, !dbg !11983
  %mul247 = fmul float %148, %147, !dbg !11983
  store float %mul247, float* %ta246, align 8, !dbg !11983
  br label %if.end251, !dbg !11984

if.else248:                                       ; preds = %if.else243
  %149 = load float, float* %stencilTin, align 4, !dbg !11985
  %tin249 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !11986
  %150 = load float, float* %tin249, align 8, !dbg !11987
  %mul250 = fmul float %150, %149, !dbg !11987
  store float %mul250, float* %tin249, align 8, !dbg !11987
  br label %if.end251

if.end251:                                        ; preds = %if.else248, %if.then245
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.end242
  %151 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !11988
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %151, i32 0, i32 1, !dbg !11990
  %152 = load i16, i16* %mapto, align 2, !dbg !11990
  %conv253 = sext i16 %152 to i32, !dbg !11988
  %and254 = and i32 %conv253, 14, !dbg !11991
  %tobool255 = icmp ne i32 %and254, 0, !dbg !11991
  br i1 %tobool255, label %if.then256, label %if.end351, !dbg !11992

if.then256:                                       ; preds = %if.end252
  call void @llvm.dbg.declare(metadata [3 x float]* %tcol, metadata !11993, metadata !DIExpression()), !dbg !11995
  %153 = load i32, i32* %rgb, align 4, !dbg !11996
  %cmp257 = icmp eq i32 %153, 0, !dbg !11998
  br i1 %cmp257, label %if.then259, label %if.else263, !dbg !11999

if.then259:                                       ; preds = %if.then256
  %154 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12000
  %r = getelementptr inbounds %struct.MTex, %struct.MTex* %154, i32 0, i32 22, !dbg !12002
  %155 = load float, float* %r, align 4, !dbg !12002
  %tr260 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12003
  store float %155, float* %tr260, align 4, !dbg !12004
  %156 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12005
  %g = getelementptr inbounds %struct.MTex, %struct.MTex* %156, i32 0, i32 23, !dbg !12006
  %157 = load float, float* %g, align 8, !dbg !12006
  %tg261 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12007
  store float %157, float* %tg261, align 8, !dbg !12008
  %158 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12009
  %b = getelementptr inbounds %struct.MTex, %struct.MTex* %158, i32 0, i32 24, !dbg !12010
  %159 = load float, float* %b, align 4, !dbg !12010
  %tb262 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12011
  store float %159, float* %tb262, align 4, !dbg !12012
  br label %if.end266, !dbg !12013

if.else263:                                       ; preds = %if.then256
  %ta264 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !12014
  %160 = load float, float* %ta264, align 8, !dbg !12014
  %tin265 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12015
  store float %160, float* %tin265, align 8, !dbg !12016
  br label %if.end266

if.end266:                                        ; preds = %if.else263, %if.then259
  %tr267 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12017
  %161 = load float, float* %tr267, align 4, !dbg !12017
  %arrayidx268 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !12018
  store float %161, float* %arrayidx268, align 4, !dbg !12019
  %tg269 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12020
  %162 = load float, float* %tg269, align 8, !dbg !12020
  %arrayidx270 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 1, !dbg !12021
  store float %162, float* %arrayidx270, align 4, !dbg !12022
  %tb271 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12023
  %163 = load float, float* %tb271, align 4, !dbg !12023
  %arrayidx272 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 2, !dbg !12024
  store float %163, float* %arrayidx272, align 4, !dbg !12025
  %164 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12026
  %type273 = getelementptr inbounds %struct.Tex, %struct.Tex* %164, i32 0, i32 32, !dbg !12028
  %165 = load i16, i16* %type273, align 8, !dbg !12028
  %conv274 = sext i16 %165 to i32, !dbg !12026
  %cmp275 = icmp eq i32 %conv274, 8, !dbg !12029
  br i1 %cmp275, label %if.then277, label %if.end289, !dbg !12030

if.then277:                                       ; preds = %if.end266
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !12031, metadata !DIExpression()), !dbg !12033
  %166 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12034
  %ima278 = getelementptr inbounds %struct.Tex, %struct.Tex* %166, i32 0, i32 54, !dbg !12035
  %167 = load %struct.Image*, %struct.Image** %ima278, align 8, !dbg !12035
  store %struct.Image* %167, %struct.Image** %ima, align 8, !dbg !12033
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !12036, metadata !DIExpression()), !dbg !12037
  %168 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12038
  %169 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12039
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %169, i32 0, i32 51, !dbg !12040
  %170 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !12041
  %call279 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %168, %struct.ImageUser* %iuser, %struct.ImagePool* %170), !dbg !12042
  store %struct.ImBuf* %call279, %struct.ImBuf** %ibuf, align 8, !dbg !12037
  %171 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12043
  %tobool280 = icmp ne %struct.ImBuf* %171, null, !dbg !12043
  br i1 %tobool280, label %land.lhs.true281, label %if.end288, !dbg !12045

land.lhs.true281:                                 ; preds = %if.then277
  %172 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12046
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %172, i32 0, i32 9, !dbg !12047
  %173 = load float*, float** %rect_float, align 8, !dbg !12047
  %tobool282 = icmp ne float* %173, null, !dbg !12048
  br i1 %tobool282, label %if.end288, label %land.lhs.true283, !dbg !12049

land.lhs.true283:                                 ; preds = %land.lhs.true281
  %174 = load i8, i8* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 8), align 8, !dbg !12050
  %conv284 = zext i8 %174 to i32, !dbg !12051
  %tobool285 = icmp ne i32 %conv284, 0, !dbg !12051
  br i1 %tobool285, label %if.then286, label %if.end288, !dbg !12052

if.then286:                                       ; preds = %land.lhs.true283
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !12053
  %175 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12054
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %175, i32 0, i32 34, !dbg !12055
  %176 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !12055
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %arraydecay287, %struct.ColorSpace* %176), !dbg !12056
  br label %if.end288, !dbg !12056

if.end288:                                        ; preds = %if.then286, %land.lhs.true283, %land.lhs.true281, %if.then277
  %177 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12057
  %178 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12058
  %179 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !12059
  call void @BKE_image_pool_release_ibuf(%struct.Image* %177, %struct.ImBuf* %178, %struct.ImagePool* %179), !dbg !12060
  br label %if.end289, !dbg !12061

if.end289:                                        ; preds = %if.end288, %if.end266
  %180 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12062
  %mapto290 = getelementptr inbounds %struct.MTex, %struct.MTex* %180, i32 0, i32 1, !dbg !12064
  %181 = load i16, i16* %mapto290, align 2, !dbg !12064
  %conv291 = sext i16 %181 to i32, !dbg !12062
  %and292 = and i32 %conv291, 2, !dbg !12065
  %tobool293 = icmp ne i32 %and292, 0, !dbg !12065
  br i1 %tobool293, label %if.then294, label %if.end298, !dbg !12066

if.then294:                                       ; preds = %if.end289
  %182 = load float*, float** %hor.addr, align 8, !dbg !12067
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !12069
  %183 = load float*, float** %hor.addr, align 8, !dbg !12070
  %tin296 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12071
  %184 = load float, float* %tin296, align 8, !dbg !12071
  %185 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12072
  %colfac = getelementptr inbounds %struct.MTex, %struct.MTex* %185, i32 0, i32 28, !dbg !12073
  %186 = load float, float* %colfac, align 4, !dbg !12073
  %187 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12074
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %187, i32 0, i32 3, !dbg !12075
  %188 = load i16, i16* %blendtype, align 2, !dbg !12075
  %conv297 = sext i16 %188 to i32, !dbg !12074
  call void @texture_rgb_blend(float* %182, float* %arraydecay295, float* %183, float %184, float %186, i32 %conv297), !dbg !12076
  br label %if.end298, !dbg !12077

if.end298:                                        ; preds = %if.then294, %if.end289
  %189 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12078
  %mapto299 = getelementptr inbounds %struct.MTex, %struct.MTex* %189, i32 0, i32 1, !dbg !12080
  %190 = load i16, i16* %mapto299, align 2, !dbg !12080
  %conv300 = sext i16 %190 to i32, !dbg !12078
  %and301 = and i32 %conv300, 12, !dbg !12081
  %tobool302 = icmp ne i32 %and301, 0, !dbg !12081
  br i1 %tobool302, label %if.then303, label %if.end350, !dbg !12082

if.then303:                                       ; preds = %if.end298
  call void @llvm.dbg.declare(metadata float* %zenfac, metadata !12083, metadata !DIExpression()), !dbg !12085
  store float 0.000000e+00, float* %zenfac, align 4, !dbg !12085
  %191 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 46, i32 22), align 8, !dbg !12086
  %conv304 = sext i16 %191 to i32, !dbg !12088
  %and305 = and i32 %conv304, 2, !dbg !12089
  %tobool306 = icmp ne i32 %and305, 0, !dbg !12089
  br i1 %tobool306, label %if.then307, label %if.else325, !dbg !12090

if.then307:                                       ; preds = %if.then303
  %192 = load i32, i32* %skyflag.addr, align 4, !dbg !12091
  %and308 = and i32 %192, 16, !dbg !12094
  %tobool309 = icmp ne i32 %and308, 0, !dbg !12094
  br i1 %tobool309, label %if.then310, label %if.else317, !dbg !12095

if.then310:                                       ; preds = %if.then307
  %193 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12096
  %mapto311 = getelementptr inbounds %struct.MTex, %struct.MTex* %193, i32 0, i32 1, !dbg !12099
  %194 = load i16, i16* %mapto311, align 2, !dbg !12099
  %conv312 = sext i16 %194 to i32, !dbg !12096
  %and313 = and i32 %conv312, 4, !dbg !12100
  %tobool314 = icmp ne i32 %and313, 0, !dbg !12100
  br i1 %tobool314, label %if.then315, label %if.end316, !dbg !12101

if.then315:                                       ; preds = %if.then310
  %195 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12102
  %zenupfac = getelementptr inbounds %struct.MTex, %struct.MTex* %195, i32 0, i32 62, !dbg !12103
  %196 = load float, float* %zenupfac, align 4, !dbg !12103
  store float %196, float* %zenfac, align 4, !dbg !12104
  br label %if.end316, !dbg !12105

if.end316:                                        ; preds = %if.then315, %if.then310
  br label %if.end324, !dbg !12106

if.else317:                                       ; preds = %if.then307
  %197 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12107
  %mapto318 = getelementptr inbounds %struct.MTex, %struct.MTex* %197, i32 0, i32 1, !dbg !12109
  %198 = load i16, i16* %mapto318, align 2, !dbg !12109
  %conv319 = sext i16 %198 to i32, !dbg !12107
  %and320 = and i32 %conv319, 8, !dbg !12110
  %tobool321 = icmp ne i32 %and320, 0, !dbg !12110
  br i1 %tobool321, label %if.then322, label %if.end323, !dbg !12111

if.then322:                                       ; preds = %if.else317
  %199 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12112
  %zendownfac = getelementptr inbounds %struct.MTex, %struct.MTex* %199, i32 0, i32 63, !dbg !12113
  %200 = load float, float* %zendownfac, align 8, !dbg !12113
  store float %200, float* %zenfac, align 4, !dbg !12114
  br label %if.end323, !dbg !12115

if.end323:                                        ; preds = %if.then322, %if.else317
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end316
  br label %if.end341, !dbg !12116

if.else325:                                       ; preds = %if.then303
  %201 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12117
  %mapto326 = getelementptr inbounds %struct.MTex, %struct.MTex* %201, i32 0, i32 1, !dbg !12120
  %202 = load i16, i16* %mapto326, align 2, !dbg !12120
  %conv327 = sext i16 %202 to i32, !dbg !12117
  %and328 = and i32 %conv327, 4, !dbg !12121
  %tobool329 = icmp ne i32 %and328, 0, !dbg !12121
  br i1 %tobool329, label %if.then330, label %if.else332, !dbg !12122

if.then330:                                       ; preds = %if.else325
  %203 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12123
  %zenupfac331 = getelementptr inbounds %struct.MTex, %struct.MTex* %203, i32 0, i32 62, !dbg !12124
  %204 = load float, float* %zenupfac331, align 4, !dbg !12124
  store float %204, float* %zenfac, align 4, !dbg !12125
  br label %if.end340, !dbg !12126

if.else332:                                       ; preds = %if.else325
  %205 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12127
  %mapto333 = getelementptr inbounds %struct.MTex, %struct.MTex* %205, i32 0, i32 1, !dbg !12129
  %206 = load i16, i16* %mapto333, align 2, !dbg !12129
  %conv334 = sext i16 %206 to i32, !dbg !12127
  %and335 = and i32 %conv334, 8, !dbg !12130
  %tobool336 = icmp ne i32 %and335, 0, !dbg !12130
  br i1 %tobool336, label %if.then337, label %if.end339, !dbg !12131

if.then337:                                       ; preds = %if.else332
  %207 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12132
  %zendownfac338 = getelementptr inbounds %struct.MTex, %struct.MTex* %207, i32 0, i32 63, !dbg !12133
  %208 = load float, float* %zendownfac338, align 8, !dbg !12133
  store float %208, float* %zenfac, align 4, !dbg !12134
  br label %if.end339, !dbg !12135

if.end339:                                        ; preds = %if.then337, %if.else332
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %if.then330
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.end324
  %209 = load float, float* %zenfac, align 4, !dbg !12136
  %cmp342 = fcmp une float %209, 0.000000e+00, !dbg !12138
  br i1 %cmp342, label %if.then344, label %if.end349, !dbg !12139

if.then344:                                       ; preds = %if.end341
  %210 = load float*, float** %zen.addr, align 8, !dbg !12140
  %arraydecay345 = getelementptr inbounds [3 x float], [3 x float]* %tcol, i64 0, i64 0, !dbg !12141
  %211 = load float*, float** %zen.addr, align 8, !dbg !12142
  %tin346 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12143
  %212 = load float, float* %tin346, align 8, !dbg !12143
  %213 = load float, float* %zenfac, align 4, !dbg !12144
  %214 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12145
  %blendtype347 = getelementptr inbounds %struct.MTex, %struct.MTex* %214, i32 0, i32 3, !dbg !12146
  %215 = load i16, i16* %blendtype347, align 2, !dbg !12146
  %conv348 = sext i16 %215 to i32, !dbg !12145
  call void @texture_rgb_blend(float* %210, float* %arraydecay345, float* %211, float %212, float %213, i32 %conv348), !dbg !12147
  br label %if.end349, !dbg !12147

if.end349:                                        ; preds = %if.then344, %if.end341
  br label %if.end350, !dbg !12148

if.end350:                                        ; preds = %if.end349, %if.end298
  br label %if.end351, !dbg !12149

if.end351:                                        ; preds = %if.end350, %if.end252
  %216 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12150
  %mapto352 = getelementptr inbounds %struct.MTex, %struct.MTex* %216, i32 0, i32 1, !dbg !12152
  %217 = load i16, i16* %mapto352, align 2, !dbg !12152
  %conv353 = sext i16 %217 to i32, !dbg !12150
  %and354 = and i32 %conv353, 1, !dbg !12153
  %tobool355 = icmp ne i32 %and354, 0, !dbg !12153
  br i1 %tobool355, label %if.then356, label %if.end367, !dbg !12154

if.then356:                                       ; preds = %if.end351
  %218 = load i32, i32* %rgb, align 4, !dbg !12155
  %tobool357 = icmp ne i32 %218, 0, !dbg !12155
  br i1 %tobool357, label %if.then358, label %if.end362, !dbg !12158

if.then358:                                       ; preds = %if.then356
  %tr359 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12159
  %call360 = call float @rgb_to_bw(float* %tr359), !dbg !12160
  %tin361 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12161
  store float %call360, float* %tin361, align 8, !dbg !12162
  br label %if.end362, !dbg !12163

if.end362:                                        ; preds = %if.then358, %if.then356
  %219 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12164
  %def_var = getelementptr inbounds %struct.MTex, %struct.MTex* %219, i32 0, i32 26, !dbg !12165
  %220 = load float, float* %def_var, align 4, !dbg !12165
  %221 = load float*, float** %blend.addr, align 8, !dbg !12166
  %222 = load float, float* %221, align 4, !dbg !12167
  %tin363 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12168
  %223 = load float, float* %tin363, align 8, !dbg !12168
  %224 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12169
  %blendfac = getelementptr inbounds %struct.MTex, %struct.MTex* %224, i32 0, i32 64, !dbg !12170
  %225 = load float, float* %blendfac, align 4, !dbg !12170
  %226 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12171
  %blendtype364 = getelementptr inbounds %struct.MTex, %struct.MTex* %226, i32 0, i32 3, !dbg !12172
  %227 = load i16, i16* %blendtype364, align 2, !dbg !12172
  %conv365 = sext i16 %227 to i32, !dbg !12171
  %call366 = call float @texture_value_blend(float %220, float %222, float %223, float %225, i32 %conv365), !dbg !12173
  %228 = load float*, float** %blend.addr, align 8, !dbg !12174
  store float %call366, float* %228, align 4, !dbg !12175
  br label %if.end367, !dbg !12176

if.end367:                                        ; preds = %if.end362, %if.end351
  br label %if.end368, !dbg !12177

if.end368:                                        ; preds = %if.end367, %for.body
  br label %for.inc, !dbg !12178

for.inc:                                          ; preds = %if.end368, %if.else89, %if.then7
  %229 = load i32, i32* %tex_nr, align 4, !dbg !12179
  %inc = add nsw i32 %229, 1, !dbg !12179
  store i32 %inc, i32* %tex_nr, align 4, !dbg !12179
  br label %for.cond, !dbg !12180, !llvm.loop !12181

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12183
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !12184 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  %0 = load float, float* %fac.addr, align 4, !dbg !12189
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !12189
  br i1 %cmp, label %if.then, label %if.else, !dbg !12191

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !12192
  br label %return, !dbg !12192

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !12193
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !12193
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !12195

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !12196
  br label %return, !dbg !12196

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !12197
  %call = call float @acosf(float %2) #7, !dbg !12198
  store float %call, float* %retval, align 4, !dbg !12199
  br label %return, !dbg !12199

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !12200
  ret float %3, !dbg !12200
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

declare dso_local void @map_to_tube(float*, float*, float, float, float) #1

declare dso_local void @map_to_sphere(float*, float*, float, float, float) #1

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @do_lamp_tex(%struct.LampRen* %la, float* %lavec, %struct.ShadeInput* %shi, float* %col_r, i32 %effect) #0 !dbg !12201 {
entry:
  %la.addr = alloca %struct.LampRen*, align 8
  %lavec.addr = alloca float*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %col_r.addr = alloca float*, align 8
  %effect.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %tex = alloca %struct.Tex*, align 8
  %texres = alloca %struct.TexResult, align 8
  %co = alloca float*, align 8
  %dx = alloca float*, align 8
  %dy = alloca float*, align 8
  %fact = alloca float, align 4
  %stencilTin = alloca float, align 4
  %texvec = alloca [3 x float], align 4
  %dxt = alloca [3 x float], align 4
  %dyt = alloca [3 x float], align 4
  %tempvec = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %tex_nr = alloca i32, align 4
  %rgb = alloca i32, align 4
  %col = alloca [3 x float], align 4
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.LampRen* %la, %struct.LampRen** %la.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %la.addr, metadata !12356, metadata !DIExpression()), !dbg !12357
  store float* %lavec, float** %lavec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lavec.addr, metadata !12358, metadata !DIExpression()), !dbg !12359
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  store float* %col_r, float** %col_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col_r.addr, metadata !12362, metadata !DIExpression()), !dbg !12363
  store i32 %effect, i32* %effect.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %effect.addr, metadata !12364, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12366, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !12368, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !12370, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !12372, metadata !DIExpression()), !dbg !12373
  %0 = bitcast %struct.TexResult* %texres to i8*, !dbg !12373
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !12373
  call void @llvm.dbg.declare(metadata float** %co, metadata !12374, metadata !DIExpression()), !dbg !12375
  store float* null, float** %co, align 8, !dbg !12375
  call void @llvm.dbg.declare(metadata float** %dx, metadata !12376, metadata !DIExpression()), !dbg !12377
  store float* null, float** %dx, align 8, !dbg !12377
  call void @llvm.dbg.declare(metadata float** %dy, metadata !12378, metadata !DIExpression()), !dbg !12379
  store float* null, float** %dy, align 8, !dbg !12379
  call void @llvm.dbg.declare(metadata float* %fact, metadata !12380, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.declare(metadata float* %stencilTin, metadata !12382, metadata !DIExpression()), !dbg !12383
  store float 1.000000e+00, float* %stencilTin, align 4, !dbg !12383
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !12384, metadata !DIExpression()), !dbg !12385
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt, metadata !12386, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt, metadata !12388, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.declare(metadata [3 x float]* %tempvec, metadata !12390, metadata !DIExpression()), !dbg !12391
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12392, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !12394, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !12396, metadata !DIExpression()), !dbg !12397
  store i32 0, i32* %rgb, align 4, !dbg !12397
  %1 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !12398
  %and = and i32 %1, 8192, !dbg !12400
  %tobool = icmp ne i32 %and, 0, !dbg !12400
  br i1 %tobool, label %if.then, label %if.end, !dbg !12401

if.then:                                          ; preds = %entry
  br label %for.end413, !dbg !12402

if.end:                                           ; preds = %entry
  store i32 0, i32* %tex_nr, align 4, !dbg !12403
  br label %for.cond, !dbg !12404

for.cond:                                         ; preds = %for.inc411, %if.end
  %2 = load i32, i32* %tex_nr, align 4, !dbg !12405
  %cmp = icmp slt i32 %2, 18, !dbg !12408
  br i1 %cmp, label %for.body, label %for.end413, !dbg !12409

for.body:                                         ; preds = %for.cond
  %3 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12410
  %mtex1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %3, i32 0, i32 69, !dbg !12413
  %4 = load i32, i32* %tex_nr, align 4, !dbg !12414
  %idxprom = sext i32 %4 to i64, !dbg !12410
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex1, i64 0, i64 %idxprom, !dbg !12410
  %5 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !12410
  %tobool2 = icmp ne %struct.MTex* %5, null, !dbg !12410
  br i1 %tobool2, label %if.then3, label %if.end410, !dbg !12415

if.then3:                                         ; preds = %for.body
  %6 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12416
  %mtex4 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %6, i32 0, i32 69, !dbg !12418
  %7 = load i32, i32* %tex_nr, align 4, !dbg !12419
  %idxprom5 = sext i32 %7 to i64, !dbg !12416
  %arrayidx6 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex4, i64 0, i64 %idxprom5, !dbg !12416
  %8 = load %struct.MTex*, %struct.MTex** %arrayidx6, align 8, !dbg !12416
  store %struct.MTex* %8, %struct.MTex** %mtex, align 8, !dbg !12420
  %9 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12421
  %tex7 = getelementptr inbounds %struct.MTex, %struct.MTex* %9, i32 0, i32 5, !dbg !12422
  %10 = load %struct.Tex*, %struct.Tex** %tex7, align 8, !dbg !12422
  store %struct.Tex* %10, %struct.Tex** %tex, align 8, !dbg !12423
  %11 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12424
  %cmp8 = icmp eq %struct.Tex* %11, null, !dbg !12426
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !12427

if.then9:                                         ; preds = %if.then3
  br label %for.inc411, !dbg !12428

if.end10:                                         ; preds = %if.then3
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 6, !dbg !12429
  store float* null, float** %nor, align 8, !dbg !12430
  %12 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12431
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %12, i32 0, i32 0, !dbg !12433
  %13 = load i16, i16* %texco, align 8, !dbg !12433
  %conv = sext i16 %13 to i32, !dbg !12431
  %cmp11 = icmp eq i32 %conv, 32, !dbg !12434
  br i1 %cmp11, label %if.then13, label %if.else43, !dbg !12435

if.then13:                                        ; preds = %if.end10
  %14 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12436
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %14, i32 0, i32 4, !dbg !12438
  %15 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12438
  store %struct.Object* %15, %struct.Object** %ob, align 8, !dbg !12439
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12440
  %tobool14 = icmp ne %struct.Object* %16, null, !dbg !12440
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !12442

if.then15:                                        ; preds = %if.then13
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12443
  store float* %arraydecay, float** %co, align 8, !dbg !12445
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12446
  store float* %arraydecay16, float** %dx, align 8, !dbg !12447
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12448
  store float* %arraydecay17, float** %dy, align 8, !dbg !12449
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12450
  %17 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12451
  %co19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %17, i32 0, i32 29, !dbg !12452
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 0, !dbg !12451
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !12453
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12454
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 51, !dbg !12455
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !12454
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12456
  call void @mul_m4_v3([4 x float]* %arraydecay21, float* %arraydecay22), !dbg !12457
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12458
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 15, !dbg !12460
  %20 = load i16, i16* %osatex, align 8, !dbg !12460
  %tobool23 = icmp ne i16 %20, 0, !dbg !12458
  br i1 %tobool23, label %if.then24, label %if.end35, !dbg !12461

if.then24:                                        ; preds = %if.then15
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12462
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12464
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 78, !dbg !12465
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !12464
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay26), !dbg !12466
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12467
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12468
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %22, i32 0, i32 79, !dbg !12469
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !12468
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay28), !dbg !12470
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12471
  %imat_ren29 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 51, !dbg !12472
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren29, i64 0, i64 0, !dbg !12471
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12473
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay30, float* %arraydecay31), !dbg !12474
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12475
  %imat_ren32 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 51, !dbg !12476
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren32, i64 0, i64 0, !dbg !12475
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12477
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay33, float* %arraydecay34), !dbg !12478
  br label %if.end35, !dbg !12479

if.end35:                                         ; preds = %if.then24, %if.then15
  br label %if.end42, !dbg !12480

if.else:                                          ; preds = %if.then13
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12481
  %co36 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 29, !dbg !12483
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co36, i64 0, i64 0, !dbg !12481
  store float* %arraydecay37, float** %co, align 8, !dbg !12484
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12485
  %dxco38 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 78, !dbg !12486
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %dxco38, i64 0, i64 0, !dbg !12485
  store float* %arraydecay39, float** %dx, align 8, !dbg !12487
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12488
  %dyco40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 79, !dbg !12489
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %dyco40, i64 0, i64 0, !dbg !12488
  store float* %arraydecay41, float** %dy, align 8, !dbg !12490
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end35
  br label %if.end107, !dbg !12491

if.else43:                                        ; preds = %if.end10
  %28 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12492
  %texco44 = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 0, !dbg !12494
  %29 = load i16, i16* %texco44, align 8, !dbg !12494
  %conv45 = sext i16 %29 to i32, !dbg !12492
  %cmp46 = icmp eq i32 %conv45, 8, !dbg !12495
  br i1 %cmp46, label %if.then48, label %if.else60, !dbg !12496

if.then48:                                        ; preds = %if.else43
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12497
  %gl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 57, !dbg !12499
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %gl, i64 0, i64 0, !dbg !12497
  store float* %arraydecay49, float** %co, align 8, !dbg !12500
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12501
  %dxco50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 78, !dbg !12502
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %dxco50, i64 0, i64 0, !dbg !12501
  store float* %arraydecay51, float** %dx, align 8, !dbg !12503
  %32 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12504
  %dyco52 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %32, i32 0, i32 79, !dbg !12505
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %dyco52, i64 0, i64 0, !dbg !12504
  store float* %arraydecay53, float** %dy, align 8, !dbg !12506
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12507
  %gl54 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 57, !dbg !12508
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %gl54, i64 0, i64 0, !dbg !12507
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12509
  %co56 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 29, !dbg !12510
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 0, !dbg !12509
  call void @copy_v3_v3(float* %arraydecay55, float* %arraydecay57), !dbg !12511
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12512
  %gl58 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 57, !dbg !12513
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %gl58, i64 0, i64 0, !dbg !12512
  call void @mul_m4_v3([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0), float* %arraydecay59), !dbg !12514
  br label %if.end106, !dbg !12515

if.else60:                                        ; preds = %if.else43
  %36 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12516
  %texco61 = getelementptr inbounds %struct.MTex, %struct.MTex* %36, i32 0, i32 0, !dbg !12518
  %37 = load i16, i16* %texco61, align 8, !dbg !12518
  %conv62 = sext i16 %37 to i32, !dbg !12516
  %cmp63 = icmp eq i32 %conv62, 128, !dbg !12519
  br i1 %cmp63, label %if.then65, label %if.end105, !dbg !12520

if.then65:                                        ; preds = %if.else60
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12521
  %38 = load float*, float** %lavec.addr, align 8, !dbg !12523
  call void @copy_v3_v3(float* %arraydecay66, float* %38), !dbg !12524
  %39 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12525
  %imat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %39, i32 0, i32 59, !dbg !12526
  %arraydecay67 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !12525
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12527
  call void @mul_m3_v3([3 x float]* %arraydecay67, float* %arraydecay68), !dbg !12528
  %40 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12529
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %40, i32 0, i32 6, !dbg !12531
  %41 = load i16, i16* %type, align 8, !dbg !12531
  %conv69 = sext i16 %41 to i32, !dbg !12529
  %cmp70 = icmp eq i32 %conv69, 2, !dbg !12532
  br i1 %cmp70, label %if.then72, label %if.end83, !dbg !12533

if.then72:                                        ; preds = %if.then65
  %42 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12534
  %spottexfac = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 60, !dbg !12536
  %43 = load float, float* %spottexfac, align 4, !dbg !12536
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12537
  %44 = load float, float* %arrayidx73, align 4, !dbg !12538
  %mul = fmul float %44, %43, !dbg !12538
  store float %mul, float* %arrayidx73, align 4, !dbg !12538
  %45 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12539
  %spottexfac74 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %45, i32 0, i32 60, !dbg !12540
  %46 = load float, float* %spottexfac74, align 4, !dbg !12540
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !12541
  %47 = load float, float* %arrayidx75, align 4, !dbg !12542
  %mul76 = fmul float %47, %46, !dbg !12542
  store float %mul76, float* %arrayidx75, align 4, !dbg !12542
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !12543
  %48 = load float, float* %arrayidx77, align 4, !dbg !12543
  %fneg = fneg float %48, !dbg !12544
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12545
  %49 = load float, float* %arrayidx78, align 4, !dbg !12546
  %div = fdiv float %49, %fneg, !dbg !12546
  store float %div, float* %arrayidx78, align 4, !dbg !12546
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 2, !dbg !12547
  %50 = load float, float* %arrayidx79, align 4, !dbg !12547
  %fneg80 = fneg float %50, !dbg !12548
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 1, !dbg !12549
  %51 = load float, float* %arrayidx81, align 4, !dbg !12550
  %div82 = fdiv float %51, %fneg80, !dbg !12550
  store float %div82, float* %arrayidx81, align 4, !dbg !12550
  br label %if.end83, !dbg !12551

if.end83:                                         ; preds = %if.then72, %if.then65
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %tempvec, i64 0, i64 0, !dbg !12552
  store float* %arraydecay84, float** %co, align 8, !dbg !12553
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12554
  store float* %arraydecay85, float** %dx, align 8, !dbg !12555
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12556
  store float* %arraydecay86, float** %dy, align 8, !dbg !12557
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12558
  %osatex87 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 15, !dbg !12560
  %53 = load i16, i16* %osatex87, align 8, !dbg !12560
  %tobool88 = icmp ne i16 %53, 0, !dbg !12558
  br i1 %tobool88, label %if.then89, label %if.end104, !dbg !12561

if.then89:                                        ; preds = %if.end83
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12562
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12564
  %dxlv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 92, !dbg !12565
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %dxlv, i64 0, i64 0, !dbg !12564
  call void @copy_v3_v3(float* %arraydecay90, float* %arraydecay91), !dbg !12566
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12567
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12568
  %dylv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 93, !dbg !12569
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %dylv, i64 0, i64 0, !dbg !12568
  call void @copy_v3_v3(float* %arraydecay92, float* %arraydecay93), !dbg !12570
  %56 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12571
  %imat94 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %56, i32 0, i32 59, !dbg !12572
  %arraydecay95 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat94, i64 0, i64 0, !dbg !12571
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12573
  call void @mul_m3_v3([3 x float]* %arraydecay95, float* %arraydecay96), !dbg !12574
  %57 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12575
  %imat97 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 59, !dbg !12576
  %arraydecay98 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat97, i64 0, i64 0, !dbg !12575
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12577
  call void @mul_m3_v3([3 x float]* %arraydecay98, float* %arraydecay99), !dbg !12578
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12579
  %58 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12580
  %spottexfac101 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %58, i32 0, i32 60, !dbg !12581
  %59 = load float, float* %spottexfac101, align 4, !dbg !12581
  call void @mul_v3_fl(float* %arraydecay100, float %59), !dbg !12582
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12583
  %60 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12584
  %spottexfac103 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %60, i32 0, i32 60, !dbg !12585
  %61 = load float, float* %spottexfac103, align 4, !dbg !12585
  call void @mul_v3_fl(float* %arraydecay102, float %61), !dbg !12586
  br label %if.end104, !dbg !12587

if.end104:                                        ; preds = %if.then89, %if.end83
  br label %if.end105, !dbg !12588

if.end105:                                        ; preds = %if.end104, %if.else60
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then48
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end42
  %62 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12589
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %62, i32 0, i32 7, !dbg !12591
  %63 = load i8, i8* %projx, align 8, !dbg !12591
  %conv108 = zext i8 %63 to i32, !dbg !12589
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !12589
  br i1 %tobool109, label %land.lhs.true, label %if.else120, !dbg !12592

land.lhs.true:                                    ; preds = %if.end107
  %64 = load float*, float** %co, align 8, !dbg !12593
  %tobool110 = icmp ne float* %64, null, !dbg !12593
  br i1 %tobool110, label %if.then111, label %if.else120, !dbg !12594

if.then111:                                       ; preds = %land.lhs.true
  %65 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12595
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %65, i32 0, i32 12, !dbg !12596
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12595
  %66 = load float, float* %arrayidx112, align 8, !dbg !12595
  %67 = load float*, float** %co, align 8, !dbg !12597
  %68 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12598
  %projx113 = getelementptr inbounds %struct.MTex, %struct.MTex* %68, i32 0, i32 7, !dbg !12599
  %69 = load i8, i8* %projx113, align 8, !dbg !12599
  %conv114 = zext i8 %69 to i32, !dbg !12598
  %sub = sub nsw i32 %conv114, 1, !dbg !12600
  %idxprom115 = sext i32 %sub to i64, !dbg !12597
  %arrayidx116 = getelementptr inbounds float, float* %67, i64 %idxprom115, !dbg !12597
  %70 = load float, float* %arrayidx116, align 4, !dbg !12597
  %71 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12601
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %71, i32 0, i32 11, !dbg !12602
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !12601
  %72 = load float, float* %arrayidx117, align 4, !dbg !12601
  %add = fadd float %70, %72, !dbg !12603
  %mul118 = fmul float %66, %add, !dbg !12604
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !12605
  store float %mul118, float* %arrayidx119, align 4, !dbg !12606
  br label %if.end127, !dbg !12605

if.else120:                                       ; preds = %land.lhs.true, %if.end107
  %73 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12607
  %size121 = getelementptr inbounds %struct.MTex, %struct.MTex* %73, i32 0, i32 12, !dbg !12608
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %size121, i64 0, i64 0, !dbg !12607
  %74 = load float, float* %arrayidx122, align 8, !dbg !12607
  %75 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12609
  %ofs123 = getelementptr inbounds %struct.MTex, %struct.MTex* %75, i32 0, i32 11, !dbg !12610
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %ofs123, i64 0, i64 0, !dbg !12609
  %76 = load float, float* %arrayidx124, align 4, !dbg !12609
  %mul125 = fmul float %74, %76, !dbg !12611
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !12612
  store float %mul125, float* %arrayidx126, align 4, !dbg !12613
  br label %if.end127

if.end127:                                        ; preds = %if.else120, %if.then111
  %77 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12614
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %77, i32 0, i32 8, !dbg !12616
  %78 = load i8, i8* %projy, align 1, !dbg !12616
  %conv128 = zext i8 %78 to i32, !dbg !12614
  %tobool129 = icmp ne i32 %conv128, 0, !dbg !12614
  br i1 %tobool129, label %land.lhs.true130, label %if.else145, !dbg !12617

land.lhs.true130:                                 ; preds = %if.end127
  %79 = load float*, float** %co, align 8, !dbg !12618
  %tobool131 = icmp ne float* %79, null, !dbg !12618
  br i1 %tobool131, label %if.then132, label %if.else145, !dbg !12619

if.then132:                                       ; preds = %land.lhs.true130
  %80 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12620
  %size133 = getelementptr inbounds %struct.MTex, %struct.MTex* %80, i32 0, i32 12, !dbg !12621
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %size133, i64 0, i64 1, !dbg !12620
  %81 = load float, float* %arrayidx134, align 4, !dbg !12620
  %82 = load float*, float** %co, align 8, !dbg !12622
  %83 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12623
  %projy135 = getelementptr inbounds %struct.MTex, %struct.MTex* %83, i32 0, i32 8, !dbg !12624
  %84 = load i8, i8* %projy135, align 1, !dbg !12624
  %conv136 = zext i8 %84 to i32, !dbg !12623
  %sub137 = sub nsw i32 %conv136, 1, !dbg !12625
  %idxprom138 = sext i32 %sub137 to i64, !dbg !12622
  %arrayidx139 = getelementptr inbounds float, float* %82, i64 %idxprom138, !dbg !12622
  %85 = load float, float* %arrayidx139, align 4, !dbg !12622
  %86 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12626
  %ofs140 = getelementptr inbounds %struct.MTex, %struct.MTex* %86, i32 0, i32 11, !dbg !12627
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %ofs140, i64 0, i64 1, !dbg !12626
  %87 = load float, float* %arrayidx141, align 4, !dbg !12626
  %add142 = fadd float %85, %87, !dbg !12628
  %mul143 = fmul float %81, %add142, !dbg !12629
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !12630
  store float %mul143, float* %arrayidx144, align 4, !dbg !12631
  br label %if.end152, !dbg !12630

if.else145:                                       ; preds = %land.lhs.true130, %if.end127
  %88 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12632
  %size146 = getelementptr inbounds %struct.MTex, %struct.MTex* %88, i32 0, i32 12, !dbg !12633
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %size146, i64 0, i64 1, !dbg !12632
  %89 = load float, float* %arrayidx147, align 4, !dbg !12632
  %90 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12634
  %ofs148 = getelementptr inbounds %struct.MTex, %struct.MTex* %90, i32 0, i32 11, !dbg !12635
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %ofs148, i64 0, i64 1, !dbg !12634
  %91 = load float, float* %arrayidx149, align 4, !dbg !12634
  %mul150 = fmul float %89, %91, !dbg !12636
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !12637
  store float %mul150, float* %arrayidx151, align 4, !dbg !12638
  br label %if.end152

if.end152:                                        ; preds = %if.else145, %if.then132
  %92 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12639
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %92, i32 0, i32 9, !dbg !12641
  %93 = load i8, i8* %projz, align 2, !dbg !12641
  %conv153 = zext i8 %93 to i32, !dbg !12639
  %tobool154 = icmp ne i32 %conv153, 0, !dbg !12639
  br i1 %tobool154, label %land.lhs.true155, label %if.else170, !dbg !12642

land.lhs.true155:                                 ; preds = %if.end152
  %94 = load float*, float** %co, align 8, !dbg !12643
  %tobool156 = icmp ne float* %94, null, !dbg !12643
  br i1 %tobool156, label %if.then157, label %if.else170, !dbg !12644

if.then157:                                       ; preds = %land.lhs.true155
  %95 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12645
  %size158 = getelementptr inbounds %struct.MTex, %struct.MTex* %95, i32 0, i32 12, !dbg !12646
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %size158, i64 0, i64 2, !dbg !12645
  %96 = load float, float* %arrayidx159, align 8, !dbg !12645
  %97 = load float*, float** %co, align 8, !dbg !12647
  %98 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12648
  %projz160 = getelementptr inbounds %struct.MTex, %struct.MTex* %98, i32 0, i32 9, !dbg !12649
  %99 = load i8, i8* %projz160, align 2, !dbg !12649
  %conv161 = zext i8 %99 to i32, !dbg !12648
  %sub162 = sub nsw i32 %conv161, 1, !dbg !12650
  %idxprom163 = sext i32 %sub162 to i64, !dbg !12647
  %arrayidx164 = getelementptr inbounds float, float* %97, i64 %idxprom163, !dbg !12647
  %100 = load float, float* %arrayidx164, align 4, !dbg !12647
  %101 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12651
  %ofs165 = getelementptr inbounds %struct.MTex, %struct.MTex* %101, i32 0, i32 11, !dbg !12652
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %ofs165, i64 0, i64 2, !dbg !12651
  %102 = load float, float* %arrayidx166, align 4, !dbg !12651
  %add167 = fadd float %100, %102, !dbg !12653
  %mul168 = fmul float %96, %add167, !dbg !12654
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !12655
  store float %mul168, float* %arrayidx169, align 4, !dbg !12656
  br label %if.end177, !dbg !12655

if.else170:                                       ; preds = %land.lhs.true155, %if.end152
  %103 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12657
  %size171 = getelementptr inbounds %struct.MTex, %struct.MTex* %103, i32 0, i32 12, !dbg !12658
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %size171, i64 0, i64 2, !dbg !12657
  %104 = load float, float* %arrayidx172, align 8, !dbg !12657
  %105 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12659
  %ofs173 = getelementptr inbounds %struct.MTex, %struct.MTex* %105, i32 0, i32 11, !dbg !12660
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %ofs173, i64 0, i64 2, !dbg !12659
  %106 = load float, float* %arrayidx174, align 4, !dbg !12659
  %mul175 = fmul float %104, %106, !dbg !12661
  %arrayidx176 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !12662
  store float %mul175, float* %arrayidx176, align 4, !dbg !12663
  br label %if.end177

if.end177:                                        ; preds = %if.else170, %if.then157
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12664
  %osatex178 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 15, !dbg !12666
  %108 = load i16, i16* %osatex178, align 8, !dbg !12666
  %tobool179 = icmp ne i16 %108, 0, !dbg !12664
  br i1 %tobool179, label %if.then180, label %if.end268, !dbg !12667

if.then180:                                       ; preds = %if.end177
  %109 = load float*, float** %dx, align 8, !dbg !12668
  %tobool181 = icmp ne float* %109, null, !dbg !12668
  br i1 %tobool181, label %if.else191, label %if.then182, !dbg !12671

if.then182:                                       ; preds = %if.then180
  store i32 0, i32* %i, align 4, !dbg !12672
  br label %for.cond183, !dbg !12675

for.cond183:                                      ; preds = %for.inc, %if.then182
  %110 = load i32, i32* %i, align 4, !dbg !12676
  %cmp184 = icmp slt i32 %110, 2, !dbg !12678
  br i1 %cmp184, label %for.body186, label %for.end, !dbg !12679

for.body186:                                      ; preds = %for.cond183
  %111 = load i32, i32* %i, align 4, !dbg !12680
  %idxprom187 = sext i32 %111 to i64, !dbg !12682
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 %idxprom187, !dbg !12682
  store float 0.000000e+00, float* %arrayidx188, align 4, !dbg !12683
  %112 = load i32, i32* %i, align 4, !dbg !12684
  %idxprom189 = sext i32 %112 to i64, !dbg !12685
  %arrayidx190 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 %idxprom189, !dbg !12685
  store float 0.000000e+00, float* %arrayidx190, align 4, !dbg !12686
  br label %for.inc, !dbg !12687

for.inc:                                          ; preds = %for.body186
  %113 = load i32, i32* %i, align 4, !dbg !12688
  %inc = add nsw i32 %113, 1, !dbg !12688
  store i32 %inc, i32* %i, align 4, !dbg !12688
  br label %for.cond183, !dbg !12689, !llvm.loop !12690

for.end:                                          ; preds = %for.cond183
  br label %if.end267, !dbg !12692

if.else191:                                       ; preds = %if.then180
  %114 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12693
  %projx192 = getelementptr inbounds %struct.MTex, %struct.MTex* %114, i32 0, i32 7, !dbg !12696
  %115 = load i8, i8* %projx192, align 8, !dbg !12696
  %tobool193 = icmp ne i8 %115, 0, !dbg !12693
  br i1 %tobool193, label %if.then194, label %if.else213, !dbg !12697

if.then194:                                       ; preds = %if.else191
  %116 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12698
  %size195 = getelementptr inbounds %struct.MTex, %struct.MTex* %116, i32 0, i32 12, !dbg !12700
  %arrayidx196 = getelementptr inbounds [3 x float], [3 x float]* %size195, i64 0, i64 0, !dbg !12698
  %117 = load float, float* %arrayidx196, align 8, !dbg !12698
  %118 = load float*, float** %dx, align 8, !dbg !12701
  %119 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12702
  %projx197 = getelementptr inbounds %struct.MTex, %struct.MTex* %119, i32 0, i32 7, !dbg !12703
  %120 = load i8, i8* %projx197, align 8, !dbg !12703
  %conv198 = zext i8 %120 to i32, !dbg !12702
  %sub199 = sub nsw i32 %conv198, 1, !dbg !12704
  %idxprom200 = sext i32 %sub199 to i64, !dbg !12701
  %arrayidx201 = getelementptr inbounds float, float* %118, i64 %idxprom200, !dbg !12701
  %121 = load float, float* %arrayidx201, align 4, !dbg !12701
  %mul202 = fmul float %117, %121, !dbg !12705
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12706
  store float %mul202, float* %arrayidx203, align 4, !dbg !12707
  %122 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12708
  %size204 = getelementptr inbounds %struct.MTex, %struct.MTex* %122, i32 0, i32 12, !dbg !12709
  %arrayidx205 = getelementptr inbounds [3 x float], [3 x float]* %size204, i64 0, i64 0, !dbg !12708
  %123 = load float, float* %arrayidx205, align 8, !dbg !12708
  %124 = load float*, float** %dy, align 8, !dbg !12710
  %125 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12711
  %projx206 = getelementptr inbounds %struct.MTex, %struct.MTex* %125, i32 0, i32 7, !dbg !12712
  %126 = load i8, i8* %projx206, align 8, !dbg !12712
  %conv207 = zext i8 %126 to i32, !dbg !12711
  %sub208 = sub nsw i32 %conv207, 1, !dbg !12713
  %idxprom209 = sext i32 %sub208 to i64, !dbg !12710
  %arrayidx210 = getelementptr inbounds float, float* %124, i64 %idxprom209, !dbg !12710
  %127 = load float, float* %arrayidx210, align 4, !dbg !12710
  %mul211 = fmul float %123, %127, !dbg !12714
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12715
  store float %mul211, float* %arrayidx212, align 4, !dbg !12716
  br label %if.end216, !dbg !12717

if.else213:                                       ; preds = %if.else191
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12718
  store float 0.000000e+00, float* %arrayidx214, align 4, !dbg !12720
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12721
  store float 0.000000e+00, float* %arrayidx215, align 4, !dbg !12722
  br label %if.end216

if.end216:                                        ; preds = %if.else213, %if.then194
  %128 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12723
  %projy217 = getelementptr inbounds %struct.MTex, %struct.MTex* %128, i32 0, i32 8, !dbg !12725
  %129 = load i8, i8* %projy217, align 1, !dbg !12725
  %tobool218 = icmp ne i8 %129, 0, !dbg !12723
  br i1 %tobool218, label %if.then219, label %if.else238, !dbg !12726

if.then219:                                       ; preds = %if.end216
  %130 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12727
  %size220 = getelementptr inbounds %struct.MTex, %struct.MTex* %130, i32 0, i32 12, !dbg !12729
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %size220, i64 0, i64 1, !dbg !12727
  %131 = load float, float* %arrayidx221, align 4, !dbg !12727
  %132 = load float*, float** %dx, align 8, !dbg !12730
  %133 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12731
  %projy222 = getelementptr inbounds %struct.MTex, %struct.MTex* %133, i32 0, i32 8, !dbg !12732
  %134 = load i8, i8* %projy222, align 1, !dbg !12732
  %conv223 = zext i8 %134 to i32, !dbg !12731
  %sub224 = sub nsw i32 %conv223, 1, !dbg !12733
  %idxprom225 = sext i32 %sub224 to i64, !dbg !12730
  %arrayidx226 = getelementptr inbounds float, float* %132, i64 %idxprom225, !dbg !12730
  %135 = load float, float* %arrayidx226, align 4, !dbg !12730
  %mul227 = fmul float %131, %135, !dbg !12734
  %arrayidx228 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !12735
  store float %mul227, float* %arrayidx228, align 4, !dbg !12736
  %136 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12737
  %size229 = getelementptr inbounds %struct.MTex, %struct.MTex* %136, i32 0, i32 12, !dbg !12738
  %arrayidx230 = getelementptr inbounds [3 x float], [3 x float]* %size229, i64 0, i64 1, !dbg !12737
  %137 = load float, float* %arrayidx230, align 4, !dbg !12737
  %138 = load float*, float** %dy, align 8, !dbg !12739
  %139 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12740
  %projy231 = getelementptr inbounds %struct.MTex, %struct.MTex* %139, i32 0, i32 8, !dbg !12741
  %140 = load i8, i8* %projy231, align 1, !dbg !12741
  %conv232 = zext i8 %140 to i32, !dbg !12740
  %sub233 = sub nsw i32 %conv232, 1, !dbg !12742
  %idxprom234 = sext i32 %sub233 to i64, !dbg !12739
  %arrayidx235 = getelementptr inbounds float, float* %138, i64 %idxprom234, !dbg !12739
  %141 = load float, float* %arrayidx235, align 4, !dbg !12739
  %mul236 = fmul float %137, %141, !dbg !12743
  %arrayidx237 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !12744
  store float %mul236, float* %arrayidx237, align 4, !dbg !12745
  br label %if.end241, !dbg !12746

if.else238:                                       ; preds = %if.end216
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 1, !dbg !12747
  store float 0.000000e+00, float* %arrayidx239, align 4, !dbg !12749
  %arrayidx240 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 1, !dbg !12750
  store float 0.000000e+00, float* %arrayidx240, align 4, !dbg !12751
  br label %if.end241

if.end241:                                        ; preds = %if.else238, %if.then219
  %142 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12752
  %projz242 = getelementptr inbounds %struct.MTex, %struct.MTex* %142, i32 0, i32 9, !dbg !12754
  %143 = load i8, i8* %projz242, align 2, !dbg !12754
  %tobool243 = icmp ne i8 %143, 0, !dbg !12752
  br i1 %tobool243, label %if.then244, label %if.else263, !dbg !12755

if.then244:                                       ; preds = %if.end241
  %144 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12756
  %size245 = getelementptr inbounds %struct.MTex, %struct.MTex* %144, i32 0, i32 12, !dbg !12758
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %size245, i64 0, i64 2, !dbg !12756
  %145 = load float, float* %arrayidx246, align 8, !dbg !12756
  %146 = load float*, float** %dx, align 8, !dbg !12759
  %147 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12760
  %projz247 = getelementptr inbounds %struct.MTex, %struct.MTex* %147, i32 0, i32 9, !dbg !12761
  %148 = load i8, i8* %projz247, align 2, !dbg !12761
  %conv248 = zext i8 %148 to i32, !dbg !12760
  %sub249 = sub nsw i32 %conv248, 1, !dbg !12762
  %idxprom250 = sext i32 %sub249 to i64, !dbg !12759
  %arrayidx251 = getelementptr inbounds float, float* %146, i64 %idxprom250, !dbg !12759
  %149 = load float, float* %arrayidx251, align 4, !dbg !12759
  %mul252 = fmul float %145, %149, !dbg !12763
  %arrayidx253 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !12764
  store float %mul252, float* %arrayidx253, align 4, !dbg !12765
  %150 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12766
  %size254 = getelementptr inbounds %struct.MTex, %struct.MTex* %150, i32 0, i32 12, !dbg !12767
  %arrayidx255 = getelementptr inbounds [3 x float], [3 x float]* %size254, i64 0, i64 2, !dbg !12766
  %151 = load float, float* %arrayidx255, align 8, !dbg !12766
  %152 = load float*, float** %dy, align 8, !dbg !12768
  %153 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12769
  %projz256 = getelementptr inbounds %struct.MTex, %struct.MTex* %153, i32 0, i32 9, !dbg !12770
  %154 = load i8, i8* %projz256, align 2, !dbg !12770
  %conv257 = zext i8 %154 to i32, !dbg !12769
  %sub258 = sub nsw i32 %conv257, 1, !dbg !12771
  %idxprom259 = sext i32 %sub258 to i64, !dbg !12768
  %arrayidx260 = getelementptr inbounds float, float* %152, i64 %idxprom259, !dbg !12768
  %155 = load float, float* %arrayidx260, align 4, !dbg !12768
  %mul261 = fmul float %151, %155, !dbg !12772
  %arrayidx262 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !12773
  store float %mul261, float* %arrayidx262, align 4, !dbg !12774
  br label %if.end266, !dbg !12775

if.else263:                                       ; preds = %if.end241
  %arrayidx264 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 2, !dbg !12776
  store float 0.000000e+00, float* %arrayidx264, align 4, !dbg !12778
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 2, !dbg !12779
  store float 0.000000e+00, float* %arrayidx265, align 4, !dbg !12780
  br label %if.end266

if.end266:                                        ; preds = %if.else263, %if.then244
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %for.end
  br label %if.end268, !dbg !12781

if.end268:                                        ; preds = %if.end267, %if.end177
  %156 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12782
  %type269 = getelementptr inbounds %struct.Tex, %struct.Tex* %156, i32 0, i32 32, !dbg !12784
  %157 = load i16, i16* %type269, align 8, !dbg !12784
  %conv270 = sext i16 %157 to i32, !dbg !12782
  %cmp271 = icmp eq i32 %conv270, 8, !dbg !12785
  br i1 %cmp271, label %if.then273, label %if.end277, !dbg !12786

if.then273:                                       ; preds = %if.end268
  %158 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12787
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !12789
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12790
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12791
  call void @do_2d_mapping(%struct.MTex* %158, float* %arraydecay274, %struct.VlakRen* null, float* null, float* %arraydecay275, float* %arraydecay276), !dbg !12792
  br label %if.end277, !dbg !12793

if.end277:                                        ; preds = %if.then273, %if.end268
  %159 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12794
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !12795
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !12796
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !12797
  %160 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12798
  %osatex281 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %160, i32 0, i32 15, !dbg !12799
  %161 = load i16, i16* %osatex281, align 8, !dbg !12799
  %conv282 = sext i16 %161 to i32, !dbg !12798
  %162 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !12800
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %162, i32 0, i32 114, !dbg !12801
  %163 = load i16, i16* %thread, align 2, !dbg !12801
  %164 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12802
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %164, i32 0, i32 19, !dbg !12803
  %165 = load i16, i16* %which_output, align 2, !dbg !12803
  %166 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !12804
  %call = call i32 @multitex(%struct.Tex* %159, float* %arraydecay278, float* %arraydecay279, float* %arraydecay280, i32 %conv282, %struct.TexResult* %texres, i16 signext %163, i16 signext %165, %struct.ImagePool* %166), !dbg !12805
  store i32 %call, i32* %rgb, align 4, !dbg !12806
  %167 = load i32, i32* %rgb, align 4, !dbg !12807
  %tobool283 = icmp ne i32 %167, 0, !dbg !12807
  br i1 %tobool283, label %land.lhs.true284, label %if.end290, !dbg !12809

land.lhs.true284:                                 ; preds = %if.end277
  %168 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12810
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %168, i32 0, i32 14, !dbg !12811
  %169 = load i16, i16* %texflag, align 8, !dbg !12811
  %conv285 = sext i16 %169 to i32, !dbg !12810
  %and286 = and i32 %conv285, 1, !dbg !12812
  %tobool287 = icmp ne i32 %and286, 0, !dbg !12812
  br i1 %tobool287, label %if.then288, label %if.end290, !dbg !12813

if.then288:                                       ; preds = %land.lhs.true284
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12814
  %call289 = call float @rgb_to_bw(float* %tr), !dbg !12816
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12817
  store float %call289, float* %tin, align 8, !dbg !12818
  store i32 0, i32* %rgb, align 4, !dbg !12819
  br label %if.end290, !dbg !12820

if.end290:                                        ; preds = %if.then288, %land.lhs.true284, %if.end277
  %170 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12821
  %texflag291 = getelementptr inbounds %struct.MTex, %struct.MTex* %170, i32 0, i32 14, !dbg !12823
  %171 = load i16, i16* %texflag291, align 8, !dbg !12823
  %conv292 = sext i16 %171 to i32, !dbg !12821
  %and293 = and i32 %conv292, 4, !dbg !12824
  %tobool294 = icmp ne i32 %and293, 0, !dbg !12824
  br i1 %tobool294, label %if.then295, label %if.end310, !dbg !12825

if.then295:                                       ; preds = %if.end290
  %172 = load i32, i32* %rgb, align 4, !dbg !12826
  %tobool296 = icmp ne i32 %172, 0, !dbg !12826
  br i1 %tobool296, label %if.then297, label %if.else305, !dbg !12829

if.then297:                                       ; preds = %if.then295
  %tr298 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12830
  %173 = load float, float* %tr298, align 4, !dbg !12830
  %sub299 = fsub float 1.000000e+00, %173, !dbg !12832
  %tr300 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12833
  store float %sub299, float* %tr300, align 4, !dbg !12834
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12835
  %174 = load float, float* %tg, align 8, !dbg !12835
  %sub301 = fsub float 1.000000e+00, %174, !dbg !12836
  %tg302 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12837
  store float %sub301, float* %tg302, align 8, !dbg !12838
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12839
  %175 = load float, float* %tb, align 4, !dbg !12839
  %sub303 = fsub float 1.000000e+00, %175, !dbg !12840
  %tb304 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12841
  store float %sub303, float* %tb304, align 4, !dbg !12842
  br label %if.end309, !dbg !12843

if.else305:                                       ; preds = %if.then295
  %tin306 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12844
  %176 = load float, float* %tin306, align 8, !dbg !12844
  %sub307 = fsub float 1.000000e+00, %176, !dbg !12845
  %tin308 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12846
  store float %sub307, float* %tin308, align 8, !dbg !12847
  br label %if.end309

if.end309:                                        ; preds = %if.else305, %if.then297
  br label %if.end310, !dbg !12848

if.end310:                                        ; preds = %if.end309, %if.end290
  %177 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12849
  %texflag311 = getelementptr inbounds %struct.MTex, %struct.MTex* %177, i32 0, i32 14, !dbg !12851
  %178 = load i16, i16* %texflag311, align 8, !dbg !12851
  %conv312 = sext i16 %178 to i32, !dbg !12849
  %and313 = and i32 %conv312, 2, !dbg !12852
  %tobool314 = icmp ne i32 %and313, 0, !dbg !12852
  br i1 %tobool314, label %if.then315, label %if.else327, !dbg !12853

if.then315:                                       ; preds = %if.end310
  %179 = load i32, i32* %rgb, align 4, !dbg !12854
  %tobool316 = icmp ne i32 %179, 0, !dbg !12854
  br i1 %tobool316, label %if.then317, label %if.else321, !dbg !12857

if.then317:                                       ; preds = %if.then315
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !12858
  %180 = load float, float* %ta, align 8, !dbg !12858
  store float %180, float* %fact, align 4, !dbg !12860
  %181 = load float, float* %stencilTin, align 4, !dbg !12861
  %ta318 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !12862
  %182 = load float, float* %ta318, align 8, !dbg !12863
  %mul319 = fmul float %182, %181, !dbg !12863
  store float %mul319, float* %ta318, align 8, !dbg !12863
  %183 = load float, float* %fact, align 4, !dbg !12864
  %184 = load float, float* %stencilTin, align 4, !dbg !12865
  %mul320 = fmul float %184, %183, !dbg !12865
  store float %mul320, float* %stencilTin, align 4, !dbg !12865
  br label %if.end326, !dbg !12866

if.else321:                                       ; preds = %if.then315
  %tin322 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12867
  %185 = load float, float* %tin322, align 8, !dbg !12867
  store float %185, float* %fact, align 4, !dbg !12869
  %186 = load float, float* %stencilTin, align 4, !dbg !12870
  %tin323 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12871
  %187 = load float, float* %tin323, align 8, !dbg !12872
  %mul324 = fmul float %187, %186, !dbg !12872
  store float %mul324, float* %tin323, align 8, !dbg !12872
  %188 = load float, float* %fact, align 4, !dbg !12873
  %189 = load float, float* %stencilTin, align 4, !dbg !12874
  %mul325 = fmul float %189, %188, !dbg !12874
  store float %mul325, float* %stencilTin, align 4, !dbg !12874
  br label %if.end326

if.end326:                                        ; preds = %if.else321, %if.then317
  br label %if.end336, !dbg !12875

if.else327:                                       ; preds = %if.end310
  %190 = load i32, i32* %rgb, align 4, !dbg !12876
  %tobool328 = icmp ne i32 %190, 0, !dbg !12876
  br i1 %tobool328, label %if.then329, label %if.else332, !dbg !12879

if.then329:                                       ; preds = %if.else327
  %191 = load float, float* %stencilTin, align 4, !dbg !12880
  %ta330 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !12881
  %192 = load float, float* %ta330, align 8, !dbg !12882
  %mul331 = fmul float %192, %191, !dbg !12882
  store float %mul331, float* %ta330, align 8, !dbg !12882
  br label %if.end335, !dbg !12883

if.else332:                                       ; preds = %if.else327
  %193 = load float, float* %stencilTin, align 4, !dbg !12884
  %tin333 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12885
  %194 = load float, float* %tin333, align 8, !dbg !12886
  %mul334 = fmul float %194, %193, !dbg !12886
  store float %mul334, float* %tin333, align 8, !dbg !12886
  br label %if.end335

if.end335:                                        ; preds = %if.else332, %if.then329
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.end326
  %195 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12887
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %195, i32 0, i32 1, !dbg !12889
  %196 = load i16, i16* %mapto, align 2, !dbg !12889
  %conv337 = sext i16 %196 to i32, !dbg !12887
  %and338 = and i32 %conv337, 1, !dbg !12890
  %tobool339 = icmp ne i32 %and338, 0, !dbg !12890
  br i1 %tobool339, label %land.lhs.true340, label %lor.lhs.false, !dbg !12891

land.lhs.true340:                                 ; preds = %if.end336
  %197 = load i32, i32* %effect.addr, align 4, !dbg !12892
  %and341 = and i32 %197, 256, !dbg !12893
  %tobool342 = icmp ne i32 %and341, 0, !dbg !12893
  br i1 %tobool342, label %if.then350, label %lor.lhs.false, !dbg !12894

lor.lhs.false:                                    ; preds = %land.lhs.true340, %if.end336
  %198 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12895
  %mapto343 = getelementptr inbounds %struct.MTex, %struct.MTex* %198, i32 0, i32 1, !dbg !12896
  %199 = load i16, i16* %mapto343, align 2, !dbg !12896
  %conv344 = sext i16 %199 to i32, !dbg !12895
  %and345 = and i32 %conv344, 2, !dbg !12897
  %tobool346 = icmp ne i32 %and345, 0, !dbg !12897
  br i1 %tobool346, label %land.lhs.true347, label %if.end409, !dbg !12898

land.lhs.true347:                                 ; preds = %lor.lhs.false
  %200 = load i32, i32* %effect.addr, align 4, !dbg !12899
  %and348 = and i32 %200, 65536, !dbg !12900
  %tobool349 = icmp ne i32 %and348, 0, !dbg !12900
  br i1 %tobool349, label %if.then350, label %if.end409, !dbg !12901

if.then350:                                       ; preds = %land.lhs.true347, %land.lhs.true340
  call void @llvm.dbg.declare(metadata [3 x float]* %col, metadata !12902, metadata !DIExpression()), !dbg !12904
  %201 = load i32, i32* %rgb, align 4, !dbg !12905
  %cmp351 = icmp eq i32 %201, 0, !dbg !12907
  br i1 %cmp351, label %if.then353, label %if.else357, !dbg !12908

if.then353:                                       ; preds = %if.then350
  %202 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12909
  %r = getelementptr inbounds %struct.MTex, %struct.MTex* %202, i32 0, i32 22, !dbg !12911
  %203 = load float, float* %r, align 4, !dbg !12911
  %tr354 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12912
  store float %203, float* %tr354, align 4, !dbg !12913
  %204 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12914
  %g = getelementptr inbounds %struct.MTex, %struct.MTex* %204, i32 0, i32 23, !dbg !12915
  %205 = load float, float* %g, align 8, !dbg !12915
  %tg355 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12916
  store float %205, float* %tg355, align 8, !dbg !12917
  %206 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12918
  %b = getelementptr inbounds %struct.MTex, %struct.MTex* %206, i32 0, i32 24, !dbg !12919
  %207 = load float, float* %b, align 4, !dbg !12919
  %tb356 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12920
  store float %207, float* %tb356, align 4, !dbg !12921
  br label %if.end368, !dbg !12922

if.else357:                                       ; preds = %if.then350
  %208 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12923
  %mapto358 = getelementptr inbounds %struct.MTex, %struct.MTex* %208, i32 0, i32 1, !dbg !12925
  %209 = load i16, i16* %mapto358, align 2, !dbg !12925
  %conv359 = sext i16 %209 to i32, !dbg !12923
  %and360 = and i32 %conv359, 128, !dbg !12926
  %tobool361 = icmp ne i32 %and360, 0, !dbg !12926
  br i1 %tobool361, label %if.then362, label %if.else364, !dbg !12927

if.then362:                                       ; preds = %if.else357
  %210 = load float, float* %stencilTin, align 4, !dbg !12928
  %tin363 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12930
  store float %210, float* %tin363, align 8, !dbg !12931
  br label %if.end367, !dbg !12932

if.else364:                                       ; preds = %if.else357
  %ta365 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 4, !dbg !12933
  %211 = load float, float* %ta365, align 8, !dbg !12933
  %tin366 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12934
  store float %211, float* %tin366, align 8, !dbg !12935
  br label %if.end367

if.end367:                                        ; preds = %if.else364, %if.then362
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then353
  %212 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12936
  %type369 = getelementptr inbounds %struct.Tex, %struct.Tex* %212, i32 0, i32 32, !dbg !12938
  %213 = load i16, i16* %type369, align 8, !dbg !12938
  %conv370 = sext i16 %213 to i32, !dbg !12936
  %cmp371 = icmp eq i32 %conv370, 8, !dbg !12939
  br i1 %cmp371, label %if.then373, label %if.end385, !dbg !12940

if.then373:                                       ; preds = %if.end368
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !12941, metadata !DIExpression()), !dbg !12943
  %214 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12944
  %ima374 = getelementptr inbounds %struct.Tex, %struct.Tex* %214, i32 0, i32 54, !dbg !12945
  %215 = load %struct.Image*, %struct.Image** %ima374, align 8, !dbg !12945
  store %struct.Image* %215, %struct.Image** %ima, align 8, !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !12946, metadata !DIExpression()), !dbg !12947
  %216 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12948
  %217 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !12949
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %217, i32 0, i32 51, !dbg !12950
  %218 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !12951
  %call375 = call %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %216, %struct.ImageUser* %iuser, %struct.ImagePool* %218), !dbg !12952
  store %struct.ImBuf* %call375, %struct.ImBuf** %ibuf, align 8, !dbg !12947
  %219 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12953
  %tobool376 = icmp ne %struct.ImBuf* %219, null, !dbg !12953
  br i1 %tobool376, label %land.lhs.true377, label %if.end384, !dbg !12955

land.lhs.true377:                                 ; preds = %if.then373
  %220 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12956
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %220, i32 0, i32 9, !dbg !12957
  %221 = load float*, float** %rect_float, align 8, !dbg !12957
  %tobool378 = icmp ne float* %221, null, !dbg !12958
  br i1 %tobool378, label %if.end384, label %land.lhs.true379, !dbg !12959

land.lhs.true379:                                 ; preds = %land.lhs.true377
  %222 = load i8, i8* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 8), align 8, !dbg !12960
  %conv380 = zext i8 %222 to i32, !dbg !12961
  %tobool381 = icmp ne i32 %conv380, 0, !dbg !12961
  br i1 %tobool381, label %if.then382, label %if.end384, !dbg !12962

if.then382:                                       ; preds = %land.lhs.true379
  %tr383 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12963
  %223 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12964
  %rect_colorspace = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %223, i32 0, i32 34, !dbg !12965
  %224 = load %struct.ColorSpace*, %struct.ColorSpace** %rect_colorspace, align 8, !dbg !12965
  call void @IMB_colormanagement_colorspace_to_scene_linear_v3(float* %tr383, %struct.ColorSpace* %224), !dbg !12966
  br label %if.end384, !dbg !12966

if.end384:                                        ; preds = %if.then382, %land.lhs.true379, %land.lhs.true377, %if.then373
  %225 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !12967
  %226 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12968
  %227 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !12969
  call void @BKE_image_pool_release_ibuf(%struct.Image* %225, %struct.ImBuf* %226, %struct.ImagePool* %227), !dbg !12970
  br label %if.end385, !dbg !12971

if.end385:                                        ; preds = %if.end384, %if.end368
  %tr386 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !12972
  %228 = load float, float* %tr386, align 4, !dbg !12972
  %229 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12973
  %energy = getelementptr inbounds %struct.LampRen, %struct.LampRen* %229, i32 0, i32 15, !dbg !12974
  %230 = load float, float* %energy, align 4, !dbg !12974
  %mul387 = fmul float %228, %230, !dbg !12975
  %arrayidx388 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !12976
  store float %mul387, float* %arrayidx388, align 4, !dbg !12977
  %tg389 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 2, !dbg !12978
  %231 = load float, float* %tg389, align 8, !dbg !12978
  %232 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12979
  %energy390 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %232, i32 0, i32 15, !dbg !12980
  %233 = load float, float* %energy390, align 4, !dbg !12980
  %mul391 = fmul float %231, %233, !dbg !12981
  %arrayidx392 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 1, !dbg !12982
  store float %mul391, float* %arrayidx392, align 4, !dbg !12983
  %tb393 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 3, !dbg !12984
  %234 = load float, float* %tb393, align 4, !dbg !12984
  %235 = load %struct.LampRen*, %struct.LampRen** %la.addr, align 8, !dbg !12985
  %energy394 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %235, i32 0, i32 15, !dbg !12986
  %236 = load float, float* %energy394, align 4, !dbg !12986
  %mul395 = fmul float %234, %236, !dbg !12987
  %arrayidx396 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 2, !dbg !12988
  store float %mul395, float* %arrayidx396, align 4, !dbg !12989
  %237 = load i32, i32* %effect.addr, align 4, !dbg !12990
  %and397 = and i32 %237, 65536, !dbg !12992
  %tobool398 = icmp ne i32 %and397, 0, !dbg !12992
  br i1 %tobool398, label %if.then399, label %if.else403, !dbg !12993

if.then399:                                       ; preds = %if.end385
  %238 = load float*, float** %col_r.addr, align 8, !dbg !12994
  %arraydecay400 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !12995
  %239 = load float*, float** %col_r.addr, align 8, !dbg !12996
  %tin401 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !12997
  %240 = load float, float* %tin401, align 8, !dbg !12997
  %241 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !12998
  %shadowfac = getelementptr inbounds %struct.MTex, %struct.MTex* %241, i32 0, i32 61, !dbg !12999
  %242 = load float, float* %shadowfac, align 8, !dbg !12999
  %243 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !13000
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %243, i32 0, i32 3, !dbg !13001
  %244 = load i16, i16* %blendtype, align 2, !dbg !13001
  %conv402 = sext i16 %244 to i32, !dbg !13000
  call void @texture_rgb_blend(float* %238, float* %arraydecay400, float* %239, float %240, float %242, i32 %conv402), !dbg !13002
  br label %if.end408, !dbg !13002

if.else403:                                       ; preds = %if.end385
  %245 = load float*, float** %col_r.addr, align 8, !dbg !13003
  %arraydecay404 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !13004
  %246 = load float*, float** %col_r.addr, align 8, !dbg !13005
  %tin405 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !13006
  %247 = load float, float* %tin405, align 8, !dbg !13006
  %248 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !13007
  %colfac = getelementptr inbounds %struct.MTex, %struct.MTex* %248, i32 0, i32 28, !dbg !13008
  %249 = load float, float* %colfac, align 4, !dbg !13008
  %250 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !13009
  %blendtype406 = getelementptr inbounds %struct.MTex, %struct.MTex* %250, i32 0, i32 3, !dbg !13010
  %251 = load i16, i16* %blendtype406, align 2, !dbg !13010
  %conv407 = sext i16 %251 to i32, !dbg !13009
  call void @texture_rgb_blend(float* %245, float* %arraydecay404, float* %246, float %247, float %249, i32 %conv407), !dbg !13011
  br label %if.end408

if.end408:                                        ; preds = %if.else403, %if.then399
  br label %if.end409, !dbg !13012

if.end409:                                        ; preds = %if.end408, %land.lhs.true347, %lor.lhs.false
  br label %if.end410, !dbg !13013

if.end410:                                        ; preds = %if.end409, %for.body
  br label %for.inc411, !dbg !13014

for.inc411:                                       ; preds = %if.end410, %if.then9
  %252 = load i32, i32* %tex_nr, align 4, !dbg !13015
  %inc412 = add nsw i32 %252, 1, !dbg !13015
  store i32 %inc412, i32* %tex_nr, align 4, !dbg !13015
  br label %for.cond, !dbg !13016, !llvm.loop !13017

for.end413:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !13019
}

declare dso_local void @mul_m3_v3([3 x float]*, float*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @externtex(%struct.MTex* %mtex, float* %vec, float* %tin, float* %tr, float* %tg, float* %tb, float* %ta, i32 %thread, %struct.ImagePool* %pool) #0 !dbg !13020 {
entry:
  %retval = alloca i32, align 4
  %mtex.addr = alloca %struct.MTex*, align 8
  %vec.addr = alloca float*, align 8
  %tin.addr = alloca float*, align 8
  %tr.addr = alloca float*, align 8
  %tg.addr = alloca float*, align 8
  %tb.addr = alloca float*, align 8
  %ta.addr = alloca float*, align 8
  %thread.addr = alloca i32, align 4
  %pool.addr = alloca %struct.ImagePool*, align 8
  %tex = alloca %struct.Tex*, align 8
  %texr = alloca %struct.TexResult, align 8
  %dxt = alloca [3 x float], align 4
  %dyt = alloca [3 x float], align 4
  %texvec = alloca [3 x float], align 4
  %rgb = alloca i32, align 4
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !13023, metadata !DIExpression()), !dbg !13024
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  store float* %tin, float** %tin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tin.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  store float* %tr, float** %tr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tr.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  store float* %tg, float** %tg.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tg.addr, metadata !13031, metadata !DIExpression()), !dbg !13032
  store float* %tb, float** %tb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tb.addr, metadata !13033, metadata !DIExpression()), !dbg !13034
  store float* %ta, float** %ta.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ta.addr, metadata !13035, metadata !DIExpression()), !dbg !13036
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !13037, metadata !DIExpression()), !dbg !13038
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !13041, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texr, metadata !13043, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.declare(metadata [3 x float]* %dxt, metadata !13045, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.declare(metadata [3 x float]* %dyt, metadata !13047, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !13051, metadata !DIExpression()), !dbg !13052
  %0 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13053
  %tex1 = getelementptr inbounds %struct.MTex, %struct.MTex* %0, i32 0, i32 5, !dbg !13054
  %1 = load %struct.Tex*, %struct.Tex** %tex1, align 8, !dbg !13054
  store %struct.Tex* %1, %struct.Tex** %tex, align 8, !dbg !13055
  %2 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13056
  %cmp = icmp eq %struct.Tex* %2, null, !dbg !13058
  br i1 %cmp, label %if.then, label %if.end, !dbg !13059

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13060
  br label %return, !dbg !13060

if.end:                                           ; preds = %entry
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 6, !dbg !13061
  store float* null, float** %nor, align 8, !dbg !13062
  %3 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13063
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %3, i32 0, i32 7, !dbg !13065
  %4 = load i8, i8* %projx, align 8, !dbg !13065
  %tobool = icmp ne i8 %4, 0, !dbg !13063
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13066

if.then2:                                         ; preds = %if.end
  %5 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13067
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %5, i32 0, i32 12, !dbg !13068
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13067
  %6 = load float, float* %arrayidx, align 8, !dbg !13067
  %7 = load float*, float** %vec.addr, align 8, !dbg !13069
  %8 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13070
  %projx3 = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 7, !dbg !13071
  %9 = load i8, i8* %projx3, align 8, !dbg !13071
  %conv = zext i8 %9 to i32, !dbg !13070
  %sub = sub nsw i32 %conv, 1, !dbg !13072
  %idxprom = sext i32 %sub to i64, !dbg !13069
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !13069
  %10 = load float, float* %arrayidx4, align 4, !dbg !13069
  %11 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13073
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %11, i32 0, i32 11, !dbg !13074
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !13073
  %12 = load float, float* %arrayidx5, align 4, !dbg !13073
  %add = fadd float %10, %12, !dbg !13075
  %mul = fmul float %6, %add, !dbg !13076
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13077
  store float %mul, float* %arrayidx6, align 4, !dbg !13078
  br label %if.end13, !dbg !13077

if.else:                                          ; preds = %if.end
  %13 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13079
  %size7 = getelementptr inbounds %struct.MTex, %struct.MTex* %13, i32 0, i32 12, !dbg !13080
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %size7, i64 0, i64 0, !dbg !13079
  %14 = load float, float* %arrayidx8, align 8, !dbg !13079
  %15 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13081
  %ofs9 = getelementptr inbounds %struct.MTex, %struct.MTex* %15, i32 0, i32 11, !dbg !13082
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %ofs9, i64 0, i64 0, !dbg !13081
  %16 = load float, float* %arrayidx10, align 4, !dbg !13081
  %mul11 = fmul float %14, %16, !dbg !13083
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13084
  store float %mul11, float* %arrayidx12, align 4, !dbg !13085
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then2
  %17 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13086
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %17, i32 0, i32 8, !dbg !13088
  %18 = load i8, i8* %projy, align 1, !dbg !13088
  %tobool14 = icmp ne i8 %18, 0, !dbg !13086
  br i1 %tobool14, label %if.then15, label %if.else28, !dbg !13089

if.then15:                                        ; preds = %if.end13
  %19 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13090
  %size16 = getelementptr inbounds %struct.MTex, %struct.MTex* %19, i32 0, i32 12, !dbg !13091
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %size16, i64 0, i64 1, !dbg !13090
  %20 = load float, float* %arrayidx17, align 4, !dbg !13090
  %21 = load float*, float** %vec.addr, align 8, !dbg !13092
  %22 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13093
  %projy18 = getelementptr inbounds %struct.MTex, %struct.MTex* %22, i32 0, i32 8, !dbg !13094
  %23 = load i8, i8* %projy18, align 1, !dbg !13094
  %conv19 = zext i8 %23 to i32, !dbg !13093
  %sub20 = sub nsw i32 %conv19, 1, !dbg !13095
  %idxprom21 = sext i32 %sub20 to i64, !dbg !13092
  %arrayidx22 = getelementptr inbounds float, float* %21, i64 %idxprom21, !dbg !13092
  %24 = load float, float* %arrayidx22, align 4, !dbg !13092
  %25 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13096
  %ofs23 = getelementptr inbounds %struct.MTex, %struct.MTex* %25, i32 0, i32 11, !dbg !13097
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %ofs23, i64 0, i64 1, !dbg !13096
  %26 = load float, float* %arrayidx24, align 4, !dbg !13096
  %add25 = fadd float %24, %26, !dbg !13098
  %mul26 = fmul float %20, %add25, !dbg !13099
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !13100
  store float %mul26, float* %arrayidx27, align 4, !dbg !13101
  br label %if.end35, !dbg !13100

if.else28:                                        ; preds = %if.end13
  %27 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13102
  %size29 = getelementptr inbounds %struct.MTex, %struct.MTex* %27, i32 0, i32 12, !dbg !13103
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %size29, i64 0, i64 1, !dbg !13102
  %28 = load float, float* %arrayidx30, align 4, !dbg !13102
  %29 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13104
  %ofs31 = getelementptr inbounds %struct.MTex, %struct.MTex* %29, i32 0, i32 11, !dbg !13105
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %ofs31, i64 0, i64 1, !dbg !13104
  %30 = load float, float* %arrayidx32, align 4, !dbg !13104
  %mul33 = fmul float %28, %30, !dbg !13106
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !13107
  store float %mul33, float* %arrayidx34, align 4, !dbg !13108
  br label %if.end35

if.end35:                                         ; preds = %if.else28, %if.then15
  %31 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13109
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %31, i32 0, i32 9, !dbg !13111
  %32 = load i8, i8* %projz, align 2, !dbg !13111
  %tobool36 = icmp ne i8 %32, 0, !dbg !13109
  br i1 %tobool36, label %if.then37, label %if.else50, !dbg !13112

if.then37:                                        ; preds = %if.end35
  %33 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13113
  %size38 = getelementptr inbounds %struct.MTex, %struct.MTex* %33, i32 0, i32 12, !dbg !13114
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %size38, i64 0, i64 2, !dbg !13113
  %34 = load float, float* %arrayidx39, align 8, !dbg !13113
  %35 = load float*, float** %vec.addr, align 8, !dbg !13115
  %36 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13116
  %projz40 = getelementptr inbounds %struct.MTex, %struct.MTex* %36, i32 0, i32 9, !dbg !13117
  %37 = load i8, i8* %projz40, align 2, !dbg !13117
  %conv41 = zext i8 %37 to i32, !dbg !13116
  %sub42 = sub nsw i32 %conv41, 1, !dbg !13118
  %idxprom43 = sext i32 %sub42 to i64, !dbg !13115
  %arrayidx44 = getelementptr inbounds float, float* %35, i64 %idxprom43, !dbg !13115
  %38 = load float, float* %arrayidx44, align 4, !dbg !13115
  %39 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13119
  %ofs45 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 11, !dbg !13120
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %ofs45, i64 0, i64 2, !dbg !13119
  %40 = load float, float* %arrayidx46, align 4, !dbg !13119
  %add47 = fadd float %38, %40, !dbg !13121
  %mul48 = fmul float %34, %add47, !dbg !13122
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !13123
  store float %mul48, float* %arrayidx49, align 4, !dbg !13124
  br label %if.end57, !dbg !13123

if.else50:                                        ; preds = %if.end35
  %41 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13125
  %size51 = getelementptr inbounds %struct.MTex, %struct.MTex* %41, i32 0, i32 12, !dbg !13126
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %size51, i64 0, i64 2, !dbg !13125
  %42 = load float, float* %arrayidx52, align 8, !dbg !13125
  %43 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13127
  %ofs53 = getelementptr inbounds %struct.MTex, %struct.MTex* %43, i32 0, i32 11, !dbg !13128
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %ofs53, i64 0, i64 2, !dbg !13127
  %44 = load float, float* %arrayidx54, align 4, !dbg !13127
  %mul55 = fmul float %42, %44, !dbg !13129
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !13130
  store float %mul55, float* %arrayidx56, align 4, !dbg !13131
  br label %if.end57

if.end57:                                         ; preds = %if.else50, %if.then37
  %45 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13132
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 32, !dbg !13134
  %46 = load i16, i16* %type, align 8, !dbg !13134
  %conv58 = sext i16 %46 to i32, !dbg !13132
  %cmp59 = icmp eq i32 %conv58, 8, !dbg !13135
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !13136

if.then61:                                        ; preds = %if.end57
  %47 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13137
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13139
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !13140
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !13141
  call void @do_2d_mapping(%struct.MTex* %47, float* %arraydecay, %struct.VlakRen* null, float* null, float* %arraydecay62, float* %arraydecay63), !dbg !13142
  br label %if.end64, !dbg !13143

if.end64:                                         ; preds = %if.then61, %if.end57
  %48 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13144
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13145
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %dxt, i64 0, i64 0, !dbg !13146
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %dyt, i64 0, i64 0, !dbg !13147
  %49 = load i32, i32* %thread.addr, align 4, !dbg !13148
  %conv68 = trunc i32 %49 to i16, !dbg !13148
  %50 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13149
  %which_output = getelementptr inbounds %struct.MTex, %struct.MTex* %50, i32 0, i32 19, !dbg !13150
  %51 = load i16, i16* %which_output, align 2, !dbg !13150
  %52 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !13151
  %call = call i32 @multitex(%struct.Tex* %48, float* %arraydecay65, float* %arraydecay66, float* %arraydecay67, i32 0, %struct.TexResult* %texr, i16 signext %conv68, i16 signext %51, %struct.ImagePool* %52), !dbg !13152
  store i32 %call, i32* %rgb, align 4, !dbg !13153
  %53 = load i32, i32* %rgb, align 4, !dbg !13154
  %tobool69 = icmp ne i32 %53, 0, !dbg !13154
  br i1 %tobool69, label %if.then70, label %if.else74, !dbg !13156

if.then70:                                        ; preds = %if.end64
  %tr71 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !13157
  %call72 = call float @rgb_to_bw(float* %tr71), !dbg !13159
  %tin73 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 0, !dbg !13160
  store float %call72, float* %tin73, align 8, !dbg !13161
  br label %if.end78, !dbg !13162

if.else74:                                        ; preds = %if.end64
  %54 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13163
  %r = getelementptr inbounds %struct.MTex, %struct.MTex* %54, i32 0, i32 22, !dbg !13165
  %55 = load float, float* %r, align 4, !dbg !13165
  %tr75 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !13166
  store float %55, float* %tr75, align 4, !dbg !13167
  %56 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13168
  %g = getelementptr inbounds %struct.MTex, %struct.MTex* %56, i32 0, i32 23, !dbg !13169
  %57 = load float, float* %g, align 8, !dbg !13169
  %tg76 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !13170
  store float %57, float* %tg76, align 8, !dbg !13171
  %58 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !13172
  %b = getelementptr inbounds %struct.MTex, %struct.MTex* %58, i32 0, i32 24, !dbg !13173
  %59 = load float, float* %b, align 4, !dbg !13173
  %tb77 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !13174
  store float %59, float* %tb77, align 4, !dbg !13175
  br label %if.end78

if.end78:                                         ; preds = %if.else74, %if.then70
  %tin79 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 0, !dbg !13176
  %60 = load float, float* %tin79, align 8, !dbg !13176
  %61 = load float*, float** %tin.addr, align 8, !dbg !13177
  store float %60, float* %61, align 4, !dbg !13178
  %tr80 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !13179
  %62 = load float, float* %tr80, align 4, !dbg !13179
  %63 = load float*, float** %tr.addr, align 8, !dbg !13180
  store float %62, float* %63, align 4, !dbg !13181
  %tg81 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !13182
  %64 = load float, float* %tg81, align 8, !dbg !13182
  %65 = load float*, float** %tg.addr, align 8, !dbg !13183
  store float %64, float* %65, align 4, !dbg !13184
  %tb82 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !13185
  %66 = load float, float* %tb82, align 4, !dbg !13185
  %67 = load float*, float** %tb.addr, align 8, !dbg !13186
  store float %66, float* %67, align 4, !dbg !13187
  %ta83 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !13188
  %68 = load float, float* %ta83, align 8, !dbg !13188
  %69 = load float*, float** %ta.addr, align 8, !dbg !13189
  store float %68, float* %69, align 4, !dbg !13190
  %70 = load i32, i32* %rgb, align 4, !dbg !13191
  %cmp84 = icmp ne i32 %70, 0, !dbg !13192
  %conv85 = zext i1 %cmp84 to i32, !dbg !13192
  store i32 %conv85, i32* %retval, align 4, !dbg !13193
  br label %return, !dbg !13193

return:                                           ; preds = %if.end78, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !13194
  ret i32 %71, !dbg !13194
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @render_realtime_texture(%struct.ShadeInput* %shi, %struct.Image* %ima) #0 !dbg !2727 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %texr = alloca %struct.TexResult, align 8
  %tex = alloca %struct.Tex*, align 8
  %texvec = alloca [3 x float], align 4
  %dx = alloca [2 x float], align 4
  %dy = alloca [2 x float], align 4
  %suv = alloca %struct.ShadeInputUV*, align 8
  %a = alloca i32, align 4
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !13195, metadata !DIExpression()), !dbg !13196
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !13197, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texr, metadata !13199, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !13201, metadata !DIExpression()), !dbg !13202
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !13203, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.declare(metadata [2 x float]* %dx, metadata !13205, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.declare(metadata [2 x float]* %dy, metadata !13207, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.declare(metadata %struct.ShadeInputUV** %suv, metadata !13209, metadata !DIExpression()), !dbg !13210
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13211
  %uv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 72, !dbg !13212
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13213
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 76, !dbg !13214
  %2 = load i32, i32* %actuv, align 8, !dbg !13214
  %idxprom = sext i32 %2 to i64, !dbg !13211
  %arrayidx = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv, i64 0, i64 %idxprom, !dbg !13211
  store %struct.ShadeInputUV* %arrayidx, %struct.ShadeInputUV** %suv, align 8, !dbg !13210
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13215, metadata !DIExpression()), !dbg !13216
  %3 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !13217
  %and = and i32 %3, 8192, !dbg !13219
  %tobool = icmp ne i32 %and, 0, !dbg !13219
  br i1 %tobool, label %if.then, label %if.end, !dbg !13220

if.then:                                          ; preds = %entry
  br label %return, !dbg !13221

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @render_realtime_texture.firsttime, align 4, !dbg !13222
  %tobool1 = icmp ne i32 %4, 0, !dbg !13222
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !13224

if.then2:                                         ; preds = %if.end
  call void @BLI_lock_thread(i32 0), !dbg !13225
  %5 = load i32, i32* @render_realtime_texture.firsttime, align 4, !dbg !13227
  %tobool3 = icmp ne i32 %5, 0, !dbg !13227
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !13229

if.then4:                                         ; preds = %if.then2
  store i32 0, i32* %a, align 4, !dbg !13230
  br label %for.cond, !dbg !13233

for.cond:                                         ; preds = %for.inc, %if.then4
  %6 = load i32, i32* %a, align 4, !dbg !13234
  %cmp = icmp slt i32 %6, 1, !dbg !13236
  br i1 %cmp, label %for.body, label %for.end, !dbg !13237

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %a, align 4, !dbg !13238
  %idxprom5 = sext i32 %7 to i64, !dbg !13240
  %arrayidx6 = getelementptr inbounds [1 x %struct.Tex], [1 x %struct.Tex]* @render_realtime_texture.imatex, i64 0, i64 %idxprom5, !dbg !13240
  %8 = bitcast %struct.Tex* %arrayidx6 to i8*, !dbg !13241
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 416, i1 false), !dbg !13241
  %9 = load i32, i32* %a, align 4, !dbg !13242
  %idxprom7 = sext i32 %9 to i64, !dbg !13243
  %arrayidx8 = getelementptr inbounds [1 x %struct.Tex], [1 x %struct.Tex]* @render_realtime_texture.imatex, i64 0, i64 %idxprom7, !dbg !13243
  call void @default_tex(%struct.Tex* %arrayidx8), !dbg !13244
  %10 = load i32, i32* %a, align 4, !dbg !13245
  %idxprom9 = sext i32 %10 to i64, !dbg !13246
  %arrayidx10 = getelementptr inbounds [1 x %struct.Tex], [1 x %struct.Tex]* @render_realtime_texture.imatex, i64 0, i64 %idxprom9, !dbg !13246
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %arrayidx10, i32 0, i32 32, !dbg !13247
  store i16 8, i16* %type, align 8, !dbg !13248
  br label %for.inc, !dbg !13249

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %a, align 4, !dbg !13250
  %inc = add nsw i32 %11, 1, !dbg !13250
  store i32 %inc, i32* %a, align 4, !dbg !13250
  br label %for.cond, !dbg !13251, !llvm.loop !13252

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @render_realtime_texture.firsttime, align 4, !dbg !13254
  br label %if.end11, !dbg !13255

if.end11:                                         ; preds = %for.end, %if.then2
  call void @BLI_unlock_thread(i32 0), !dbg !13256
  br label %if.end12, !dbg !13257

if.end12:                                         ; preds = %if.end11, %if.end
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13258
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 114, !dbg !13259
  %13 = load i16, i16* %thread, align 2, !dbg !13259
  %idxprom13 = sext i16 %13 to i64, !dbg !13260
  %arrayidx14 = getelementptr inbounds [1 x %struct.Tex], [1 x %struct.Tex]* @render_realtime_texture.imatex, i64 0, i64 %idxprom13, !dbg !13260
  store %struct.Tex* %arrayidx14, %struct.Tex** %tex, align 8, !dbg !13261
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13262
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 9, !dbg !13263
  %15 = load i16, i16* %ok, align 4, !dbg !13263
  %conv = trunc i16 %15 to i8, !dbg !13262
  %16 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13264
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %16, i32 0, i32 51, !dbg !13265
  %ok15 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %iuser, i32 0, i32 7, !dbg !13266
  store i8 %conv, i8* %ok15, align 2, !dbg !13267
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13268
  %18 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13269
  %ima16 = getelementptr inbounds %struct.Tex, %struct.Tex* %18, i32 0, i32 54, !dbg !13270
  store %struct.Image* %17, %struct.Image** %ima16, align 8, !dbg !13271
  %19 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13272
  %uv17 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %19, i32 0, i32 2, !dbg !13273
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %uv17, i64 0, i64 0, !dbg !13272
  %20 = load float, float* %arrayidx18, align 8, !dbg !13272
  %mul = fmul float 5.000000e-01, %20, !dbg !13274
  %add = fadd float 5.000000e-01, %mul, !dbg !13275
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13276
  store float %add, float* %arrayidx19, align 4, !dbg !13277
  %21 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13278
  %uv20 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %21, i32 0, i32 2, !dbg !13279
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %uv20, i64 0, i64 1, !dbg !13278
  %22 = load float, float* %arrayidx21, align 4, !dbg !13278
  %mul22 = fmul float 5.000000e-01, %22, !dbg !13280
  %add23 = fadd float 5.000000e-01, %mul22, !dbg !13281
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !13282
  store float %add23, float* %arrayidx24, align 4, !dbg !13283
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !13284
  store float 0.000000e+00, float* %arrayidx25, align 4, !dbg !13285
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13286
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 0, i32 15, !dbg !13288
  %24 = load i16, i16* %osatex, align 8, !dbg !13288
  %tobool26 = icmp ne i16 %24, 0, !dbg !13286
  br i1 %tobool26, label %if.then27, label %if.end42, !dbg !13289

if.then27:                                        ; preds = %if.end12
  %25 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13290
  %dxuv = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %25, i32 0, i32 0, !dbg !13292
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %dxuv, i64 0, i64 0, !dbg !13290
  %26 = load float, float* %arrayidx28, align 8, !dbg !13290
  %mul29 = fmul float 5.000000e-01, %26, !dbg !13293
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %dx, i64 0, i64 0, !dbg !13294
  store float %mul29, float* %arrayidx30, align 4, !dbg !13295
  %27 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13296
  %dxuv31 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %27, i32 0, i32 0, !dbg !13297
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %dxuv31, i64 0, i64 1, !dbg !13296
  %28 = load float, float* %arrayidx32, align 4, !dbg !13296
  %mul33 = fmul float 5.000000e-01, %28, !dbg !13298
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %dx, i64 0, i64 1, !dbg !13299
  store float %mul33, float* %arrayidx34, align 4, !dbg !13300
  %29 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13301
  %dyuv = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %29, i32 0, i32 1, !dbg !13302
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %dyuv, i64 0, i64 0, !dbg !13301
  %30 = load float, float* %arrayidx35, align 4, !dbg !13301
  %mul36 = fmul float 5.000000e-01, %30, !dbg !13303
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %dy, i64 0, i64 0, !dbg !13304
  store float %mul36, float* %arrayidx37, align 4, !dbg !13305
  %31 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !13306
  %dyuv38 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %31, i32 0, i32 1, !dbg !13307
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %dyuv38, i64 0, i64 1, !dbg !13306
  %32 = load float, float* %arrayidx39, align 4, !dbg !13306
  %mul40 = fmul float 5.000000e-01, %32, !dbg !13308
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %dy, i64 0, i64 1, !dbg !13309
  store float %mul40, float* %arrayidx41, align 4, !dbg !13310
  br label %if.end42, !dbg !13311

if.end42:                                         ; preds = %if.then27, %if.end12
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 6, !dbg !13312
  store float* null, float** %nor, align 8, !dbg !13313
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13314
  %osatex43 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 15, !dbg !13316
  %34 = load i16, i16* %osatex43, align 8, !dbg !13316
  %tobool44 = icmp ne i16 %34, 0, !dbg !13314
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !13317

if.then45:                                        ; preds = %if.end42
  %35 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13318
  %36 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13319
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13320
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %dx, i64 0, i64 0, !dbg !13321
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %dy, i64 0, i64 0, !dbg !13322
  %37 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !13323
  %call = call i32 @imagewraposa(%struct.Tex* %35, %struct.Image* %36, %struct.ImBuf* null, float* %arraydecay, float* %arraydecay46, float* %arraydecay47, %struct.TexResult* %texr, %struct.ImagePool* %37), !dbg !13324
  br label %if.end50, !dbg !13324

if.else:                                          ; preds = %if.end42
  %38 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13325
  %39 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !13326
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !13327
  %40 = load %struct.ImagePool*, %struct.ImagePool** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 100), align 8, !dbg !13328
  %call49 = call i32 @imagewrap(%struct.Tex* %38, %struct.Image* %39, %struct.ImBuf* null, float* %arraydecay48, %struct.TexResult* %texr, %struct.ImagePool* %40), !dbg !13329
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then45
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 1, !dbg !13330
  %41 = load float, float* %tr, align 4, !dbg !13330
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13331
  %vcol = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 61, !dbg !13332
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %vcol, i64 0, i64 0, !dbg !13331
  %43 = load float, float* %arrayidx51, align 8, !dbg !13333
  %mul52 = fmul float %43, %41, !dbg !13333
  store float %mul52, float* %arrayidx51, align 8, !dbg !13333
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 2, !dbg !13334
  %44 = load float, float* %tg, align 8, !dbg !13334
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13335
  %vcol53 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 61, !dbg !13336
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %vcol53, i64 0, i64 1, !dbg !13335
  %46 = load float, float* %arrayidx54, align 4, !dbg !13337
  %mul55 = fmul float %46, %44, !dbg !13337
  store float %mul55, float* %arrayidx54, align 4, !dbg !13337
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 3, !dbg !13338
  %47 = load float, float* %tb, align 4, !dbg !13338
  %48 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13339
  %vcol56 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %48, i32 0, i32 61, !dbg !13340
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %vcol56, i64 0, i64 2, !dbg !13339
  %49 = load float, float* %arrayidx57, align 8, !dbg !13341
  %mul58 = fmul float %49, %47, !dbg !13341
  store float %mul58, float* %arrayidx57, align 8, !dbg !13341
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texr, i32 0, i32 4, !dbg !13342
  %50 = load float, float* %ta, align 8, !dbg !13342
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !13343
  %vcol59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 61, !dbg !13344
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %vcol59, i64 0, i64 3, !dbg !13343
  %52 = load float, float* %arrayidx60, align 4, !dbg !13345
  %mul61 = fmul float %52, %50, !dbg !13345
  store float %mul61, float* %arrayidx60, align 4, !dbg !13345
  br label %return, !dbg !13346

return:                                           ; preds = %if.end50, %if.then
  ret void, !dbg !13346
}

declare dso_local void @BLI_lock_thread(i32) #1

declare dso_local void @default_tex(%struct.Tex*) #1

declare dso_local void @BLI_unlock_thread(i32) #1

declare dso_local i32 @imagewraposa(%struct.Tex*, %struct.Image*, %struct.ImBuf*, float*, float*, float*, %struct.TexResult*, %struct.ImagePool*) #1

declare dso_local i32 @imagewrap(%struct.Tex*, %struct.Image*, %struct.ImBuf*, float*, %struct.TexResult*, %struct.ImagePool*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @RE_init_sample_material(%struct.Material* %orig_mat, %struct.Scene* %scene) #0 !dbg !13347 {
entry:
  %retval = alloca %struct.Material*, align 8
  %orig_mat.addr = alloca %struct.Material*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %tex = alloca %struct.Tex*, align 8
  %mat = alloca %struct.Material*, align 8
  %tex_nr = alloca i32, align 4
  %mtex4 = alloca %struct.MTex*, align 8
  %cur_tex = alloca %struct.Tex*, align 8
  %ob = alloca %struct.Object*, align 8
  %dummy_re = alloca %struct.Render, align 8
  store %struct.Material* %orig_mat, %struct.Material** %orig_mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %orig_mat.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !13356, metadata !DIExpression()), !dbg !13357
  store %struct.Tex* null, %struct.Tex** %tex, align 8, !dbg !13357
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !13358, metadata !DIExpression()), !dbg !13359
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !13360, metadata !DIExpression()), !dbg !13361
  %0 = load %struct.Material*, %struct.Material** %orig_mat.addr, align 8, !dbg !13362
  %tobool = icmp ne %struct.Material* %0, null, !dbg !13362
  br i1 %tobool, label %if.end, label %if.then, !dbg !13364

if.then:                                          ; preds = %entry
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !13365
  br label %return, !dbg !13365

if.end:                                           ; preds = %entry
  %1 = load %struct.Material*, %struct.Material** %orig_mat.addr, align 8, !dbg !13366
  %call = call %struct.Material* @localize_material(%struct.Material* %1), !dbg !13367
  store %struct.Material* %call, %struct.Material** %mat, align 8, !dbg !13368
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13369
  %3 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13370
  %id = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 0, !dbg !13371
  %4 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13372
  %adt = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 1, !dbg !13373
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !13373
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13374
  %call1 = call float @BKE_scene_frame_get(%struct.Scene* %6), !dbg !13375
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %2, %struct.ID* %id, %struct.AnimData* %5, float %call1, i16 signext 2), !dbg !13376
  store i32 0, i32* %tex_nr, align 4, !dbg !13377
  br label %for.cond, !dbg !13379

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %tex_nr, align 4, !dbg !13380
  %cmp = icmp slt i32 %7, 18, !dbg !13382
  br i1 %cmp, label %for.body, label %for.end, !dbg !13383

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13384
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 102, !dbg !13387
  %9 = load i32, i32* %tex_nr, align 4, !dbg !13388
  %idxprom = sext i32 %9 to i64, !dbg !13384
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !13384
  %10 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !13384
  %tobool2 = icmp ne %struct.MTex* %10, null, !dbg !13384
  br i1 %tobool2, label %if.then3, label %if.end121, !dbg !13389

if.then3:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex4, metadata !13390, metadata !DIExpression()), !dbg !13392
  %11 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13393
  %mtex5 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 102, !dbg !13394
  %12 = load i32, i32* %tex_nr, align 4, !dbg !13395
  %idxprom6 = sext i32 %12 to i64, !dbg !13393
  %arrayidx7 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex5, i64 0, i64 %idxprom6, !dbg !13393
  %13 = load %struct.MTex*, %struct.MTex** %arrayidx7, align 8, !dbg !13393
  store %struct.MTex* %13, %struct.MTex** %mtex4, align 8, !dbg !13392
  call void @llvm.dbg.declare(metadata %struct.Tex** %cur_tex, metadata !13396, metadata !DIExpression()), !dbg !13397
  %14 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13398
  %tex8 = getelementptr inbounds %struct.MTex, %struct.MTex* %14, i32 0, i32 5, !dbg !13399
  %15 = load %struct.Tex*, %struct.Tex** %tex8, align 8, !dbg !13399
  store %struct.Tex* %15, %struct.Tex** %cur_tex, align 8, !dbg !13397
  %16 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13400
  %tex9 = getelementptr inbounds %struct.MTex, %struct.MTex* %16, i32 0, i32 5, !dbg !13401
  store %struct.Tex* null, %struct.Tex** %tex9, align 8, !dbg !13402
  %17 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13403
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 73, !dbg !13405
  %18 = load i32, i32* %septex, align 8, !dbg !13405
  %19 = load i32, i32* %tex_nr, align 4, !dbg !13406
  %shl = shl i32 1, %19, !dbg !13407
  %and = and i32 %18, %shl, !dbg !13408
  %tobool10 = icmp ne i32 %and, 0, !dbg !13408
  br i1 %tobool10, label %if.then12, label %lor.lhs.false, !dbg !13409

lor.lhs.false:                                    ; preds = %if.then3
  %20 = load %struct.Tex*, %struct.Tex** %cur_tex, align 8, !dbg !13410
  %tobool11 = icmp ne %struct.Tex* %20, null, !dbg !13410
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !13411

if.then12:                                        ; preds = %lor.lhs.false, %if.then3
  br label %for.inc, !dbg !13412

if.end13:                                         ; preds = %lor.lhs.false
  %21 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13413
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %21, i32 0, i32 14, !dbg !13414
  %22 = load i16, i16* %texflag, align 8, !dbg !13414
  %conv = sext i16 %22 to i32, !dbg !13413
  %and14 = and i32 %conv, 15, !dbg !13415
  %conv15 = trunc i32 %and14 to i16, !dbg !13413
  %23 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13416
  %texflag16 = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 14, !dbg !13417
  store i16 %conv15, i16* %texflag16, align 8, !dbg !13418
  %24 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13419
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 2, !dbg !13421
  %25 = load i16, i16* %material_type, align 8, !dbg !13421
  %conv17 = sext i16 %25 to i32, !dbg !13419
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !13422
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !13423

if.then20:                                        ; preds = %if.end13
  %26 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13424
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %26, i32 0, i32 0, !dbg !13424
  %27 = load i16, i16* %texco, align 8, !dbg !13424
  %conv21 = sext i16 %27 to i32, !dbg !13424
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !13424
  br i1 %cmp22, label %if.end41, label %lor.lhs.false24, !dbg !13424

lor.lhs.false24:                                  ; preds = %if.then20
  %28 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13424
  %texco25 = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 0, !dbg !13424
  %29 = load i16, i16* %texco25, align 8, !dbg !13424
  %conv26 = sext i16 %29 to i32, !dbg !13424
  %cmp27 = icmp eq i32 %conv26, 32, !dbg !13424
  br i1 %cmp27, label %if.end41, label %lor.lhs.false29, !dbg !13424

lor.lhs.false29:                                  ; preds = %lor.lhs.false24
  %30 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13424
  %texco30 = getelementptr inbounds %struct.MTex, %struct.MTex* %30, i32 0, i32 0, !dbg !13424
  %31 = load i16, i16* %texco30, align 8, !dbg !13424
  %conv31 = sext i16 %31 to i32, !dbg !13424
  %cmp32 = icmp eq i32 %conv31, 8, !dbg !13424
  br i1 %cmp32, label %if.end41, label %lor.lhs.false34, !dbg !13424

lor.lhs.false34:                                  ; preds = %lor.lhs.false29
  %32 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13424
  %texco35 = getelementptr inbounds %struct.MTex, %struct.MTex* %32, i32 0, i32 0, !dbg !13424
  %33 = load i16, i16* %texco35, align 8, !dbg !13424
  %conv36 = sext i16 %33 to i32, !dbg !13424
  %cmp37 = icmp eq i32 %conv36, 16, !dbg !13424
  br i1 %cmp37, label %if.end41, label %if.then39, !dbg !13427

if.then39:                                        ; preds = %lor.lhs.false34
  %34 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13428
  %texco40 = getelementptr inbounds %struct.MTex, %struct.MTex* %34, i32 0, i32 0, !dbg !13430
  store i16 0, i16* %texco40, align 8, !dbg !13431
  br label %for.inc, !dbg !13432

if.end41:                                         ; preds = %lor.lhs.false34, %lor.lhs.false29, %lor.lhs.false24, %if.then20
  %35 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13433
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %35, i32 0, i32 1, !dbg !13434
  %36 = load i16, i16* %mapto, align 2, !dbg !13434
  %conv42 = sext i16 %36 to i32, !dbg !13433
  %and43 = and i32 %conv42, 1, !dbg !13435
  %37 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13436
  %mapto44 = getelementptr inbounds %struct.MTex, %struct.MTex* %37, i32 0, i32 1, !dbg !13437
  %38 = load i16, i16* %mapto44, align 2, !dbg !13437
  %conv45 = sext i16 %38 to i32, !dbg !13436
  %and46 = and i32 %conv45, 128, !dbg !13438
  %or = or i32 %and43, %and46, !dbg !13439
  %conv47 = trunc i32 %or to i16, !dbg !13440
  %39 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13441
  %mapto48 = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 1, !dbg !13442
  store i16 %conv47, i16* %mapto48, align 2, !dbg !13443
  br label %if.end77, !dbg !13444

if.else:                                          ; preds = %if.end13
  %40 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13445
  %material_type49 = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 2, !dbg !13447
  %41 = load i16, i16* %material_type49, align 8, !dbg !13447
  %conv50 = sext i16 %41 to i32, !dbg !13445
  %cmp51 = icmp eq i32 %conv50, 2, !dbg !13448
  br i1 %cmp51, label %if.then53, label %if.end76, !dbg !13449

if.then53:                                        ; preds = %if.else
  %42 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13450
  %texco54 = getelementptr inbounds %struct.MTex, %struct.MTex* %42, i32 0, i32 0, !dbg !13450
  %43 = load i16, i16* %texco54, align 8, !dbg !13450
  %conv55 = sext i16 %43 to i32, !dbg !13450
  %cmp56 = icmp eq i32 %conv55, 32, !dbg !13450
  br i1 %cmp56, label %if.end70, label %lor.lhs.false58, !dbg !13450

lor.lhs.false58:                                  ; preds = %if.then53
  %44 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13450
  %texco59 = getelementptr inbounds %struct.MTex, %struct.MTex* %44, i32 0, i32 0, !dbg !13450
  %45 = load i16, i16* %texco59, align 8, !dbg !13450
  %conv60 = sext i16 %45 to i32, !dbg !13450
  %cmp61 = icmp eq i32 %conv60, 1, !dbg !13450
  br i1 %cmp61, label %if.end70, label %lor.lhs.false63, !dbg !13450

lor.lhs.false63:                                  ; preds = %lor.lhs.false58
  %46 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13450
  %texco64 = getelementptr inbounds %struct.MTex, %struct.MTex* %46, i32 0, i32 0, !dbg !13450
  %47 = load i16, i16* %texco64, align 8, !dbg !13450
  %conv65 = sext i16 %47 to i32, !dbg !13450
  %cmp66 = icmp eq i32 %conv65, 8, !dbg !13450
  br i1 %cmp66, label %if.end70, label %if.then68, !dbg !13453

if.then68:                                        ; preds = %lor.lhs.false63
  %48 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13454
  %texco69 = getelementptr inbounds %struct.MTex, %struct.MTex* %48, i32 0, i32 0, !dbg !13456
  store i16 0, i16* %texco69, align 8, !dbg !13457
  br label %for.inc, !dbg !13458

if.end70:                                         ; preds = %lor.lhs.false63, %lor.lhs.false58, %if.then53
  %49 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13459
  %mapto71 = getelementptr inbounds %struct.MTex, %struct.MTex* %49, i32 0, i32 1, !dbg !13460
  %50 = load i16, i16* %mapto71, align 2, !dbg !13460
  %conv72 = sext i16 %50 to i32, !dbg !13459
  %and73 = and i32 %conv72, 140, !dbg !13461
  %conv74 = trunc i32 %and73 to i16, !dbg !13459
  %51 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13462
  %mapto75 = getelementptr inbounds %struct.MTex, %struct.MTex* %51, i32 0, i32 1, !dbg !13463
  store i16 %conv74, i16* %mapto75, align 2, !dbg !13464
  br label %if.end76, !dbg !13465

if.end76:                                         ; preds = %if.end70, %if.else
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end41
  %52 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13466
  %texco78 = getelementptr inbounds %struct.MTex, %struct.MTex* %52, i32 0, i32 0, !dbg !13468
  %53 = load i16, i16* %texco78, align 8, !dbg !13468
  %conv79 = sext i16 %53 to i32, !dbg !13466
  %cmp80 = icmp eq i32 %conv79, 32, !dbg !13469
  br i1 %cmp80, label %if.then82, label %if.end91, !dbg !13470

if.then82:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !13471, metadata !DIExpression()), !dbg !13473
  %54 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13474
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %54, i32 0, i32 4, !dbg !13475
  %55 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13475
  store %struct.Object* %55, %struct.Object** %ob, align 8, !dbg !13473
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13476
  %tobool83 = icmp ne %struct.Object* %56, null, !dbg !13476
  br i1 %tobool83, label %if.then84, label %if.end90, !dbg !13478

if.then84:                                        ; preds = %if.then82
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13479
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 50, !dbg !13481
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !13479
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13482
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 47, !dbg !13483
  %arraydecay85 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !13482
  %call86 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay85), !dbg !13484
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13485
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 51, !dbg !13486
  %arraydecay87 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !13485
  %60 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13487
  %imat88 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 50, !dbg !13488
  %arraydecay89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat88, i64 0, i64 0, !dbg !13487
  call void @copy_m4_m4([4 x float]* %arraydecay87, [4 x float]* %arraydecay89), !dbg !13489
  br label %if.end90, !dbg !13490

if.end90:                                         ; preds = %if.then84, %if.then82
  br label %if.end91, !dbg !13491

if.end91:                                         ; preds = %if.end90, %if.end77
  %61 = load %struct.Tex*, %struct.Tex** %cur_tex, align 8, !dbg !13492
  %call92 = call %struct.Tex* @localize_texture(%struct.Tex* %61), !dbg !13493
  %62 = load %struct.MTex*, %struct.MTex** %mtex4, align 8, !dbg !13494
  %tex93 = getelementptr inbounds %struct.MTex, %struct.MTex* %62, i32 0, i32 5, !dbg !13495
  store %struct.Tex* %call92, %struct.Tex** %tex93, align 8, !dbg !13496
  store %struct.Tex* %call92, %struct.Tex** %tex, align 8, !dbg !13497
  %63 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13498
  %64 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13499
  %id94 = getelementptr inbounds %struct.Tex, %struct.Tex* %64, i32 0, i32 0, !dbg !13500
  %65 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13501
  %adt95 = getelementptr inbounds %struct.Tex, %struct.Tex* %65, i32 0, i32 1, !dbg !13502
  %66 = load %struct.AnimData*, %struct.AnimData** %adt95, align 8, !dbg !13502
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13503
  %call96 = call float @BKE_scene_frame_get(%struct.Scene* %67), !dbg !13504
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %63, %struct.ID* %id94, %struct.AnimData* %66, float %call96, i16 signext 2), !dbg !13505
  %68 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13506
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %68, i32 0, i32 32, !dbg !13508
  %69 = load i16, i16* %type, align 8, !dbg !13508
  %conv97 = sext i16 %69 to i32, !dbg !13506
  %cmp98 = icmp eq i32 %conv97, 15, !dbg !13509
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !13510

if.then100:                                       ; preds = %if.end91
  %70 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13511
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13513
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 22, !dbg !13514
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !13515
  %72 = load i32, i32* %cfra, align 8, !dbg !13515
  call void @cache_voxeldata(%struct.Tex* %70, i32 %72), !dbg !13516
  br label %if.end101, !dbg !13517

if.end101:                                        ; preds = %if.then100, %if.end91
  %73 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13518
  %type102 = getelementptr inbounds %struct.Tex, %struct.Tex* %73, i32 0, i32 32, !dbg !13520
  %74 = load i16, i16* %type102, align 8, !dbg !13520
  %conv103 = sext i16 %74 to i32, !dbg !13518
  %cmp104 = icmp eq i32 %conv103, 14, !dbg !13521
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !13522

if.then106:                                       ; preds = %if.end101
  call void @llvm.dbg.declare(metadata %struct.Render* %dummy_re, metadata !13523, metadata !DIExpression()), !dbg !13525
  %75 = bitcast %struct.Render* %dummy_re to i8*, !dbg !13525
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 6240, i1 false), !dbg !13525
  %76 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13526
  %scene107 = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 44, !dbg !13527
  store %struct.Scene* %76, %struct.Scene** %scene107, align 8, !dbg !13528
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 33, !dbg !13529
  %arraydecay108 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !13530
  call void @unit_m4([4 x float]* %arraydecay108), !dbg !13531
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 32, !dbg !13532
  %arraydecay109 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !13533
  call void @unit_m4([4 x float]* %arraydecay109), !dbg !13534
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 35, !dbg !13535
  %arraydecay110 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !13536
  call void @unit_m4([4 x float]* %arraydecay110), !dbg !13537
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 14, !dbg !13538
  store i32 128, i32* %winy, align 8, !dbg !13539
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %dummy_re, i32 0, i32 13, !dbg !13540
  store i32 128, i32* %winx, align 4, !dbg !13541
  %77 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13542
  call void @cache_pointdensity(%struct.Render* %dummy_re, %struct.Tex* %77), !dbg !13543
  br label %if.end111, !dbg !13544

if.end111:                                        ; preds = %if.then106, %if.end101
  %78 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13545
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %78, i32 0, i32 54, !dbg !13547
  %79 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !13547
  %tobool112 = icmp ne %struct.Image* %79, null, !dbg !13545
  br i1 %tobool112, label %land.lhs.true, label %if.end120, !dbg !13548

land.lhs.true:                                    ; preds = %if.end111
  %80 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13549
  %ima113 = getelementptr inbounds %struct.Tex, %struct.Tex* %80, i32 0, i32 54, !dbg !13550
  %81 = load %struct.Image*, %struct.Image** %ima113, align 8, !dbg !13550
  %call114 = call zeroext i8 @BKE_image_is_animated(%struct.Image* %81), !dbg !13551
  %conv115 = zext i8 %call114 to i32, !dbg !13551
  %tobool116 = icmp ne i32 %conv115, 0, !dbg !13551
  br i1 %tobool116, label %if.then117, label %if.end120, !dbg !13552

if.then117:                                       ; preds = %land.lhs.true
  %82 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13553
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %82, i32 0, i32 51, !dbg !13555
  %83 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13556
  %r118 = getelementptr inbounds %struct.Scene, %struct.Scene* %83, i32 0, i32 22, !dbg !13557
  %cfra119 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r118, i32 0, i32 5, !dbg !13558
  %84 = load i32, i32* %cfra119, align 8, !dbg !13558
  call void @BKE_image_user_check_frame_calc(%struct.ImageUser* %iuser, i32 %84, i32 0), !dbg !13559
  br label %if.end120, !dbg !13560

if.end120:                                        ; preds = %if.then117, %land.lhs.true, %if.end111
  br label %if.end121, !dbg !13561

if.end121:                                        ; preds = %if.end120, %for.body
  br label %for.inc, !dbg !13562

for.inc:                                          ; preds = %if.end121, %if.then68, %if.then39, %if.then12
  %85 = load i32, i32* %tex_nr, align 4, !dbg !13563
  %inc = add nsw i32 %85, 1, !dbg !13563
  store i32 %inc, i32* %tex_nr, align 4, !dbg !13563
  br label %for.cond, !dbg !13564, !llvm.loop !13565

for.end:                                          ; preds = %for.cond
  %86 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !13567
  store %struct.Material* %86, %struct.Material** %retval, align 8, !dbg !13568
  br label %return, !dbg !13568

return:                                           ; preds = %for.end, %if.then
  %87 = load %struct.Material*, %struct.Material** %retval, align 8, !dbg !13569
  ret %struct.Material* %87, !dbg !13569
}

declare dso_local %struct.Material* @localize_material(%struct.Material*) #1

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #1

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #1

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #1

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #1

declare dso_local %struct.Tex* @localize_texture(%struct.Tex*) #1

declare dso_local void @cache_voxeldata(%struct.Tex*, i32) #1

declare dso_local void @unit_m4([4 x float]*) #1

declare dso_local void @cache_pointdensity(%struct.Render*, %struct.Tex*) #1

declare dso_local zeroext i8 @BKE_image_is_animated(%struct.Image*) #1

declare dso_local void @BKE_image_user_check_frame_calc(%struct.ImageUser*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_free_sample_material(%struct.Material* %mat) #0 !dbg !13570 {
entry:
  %mat.addr = alloca %struct.Material*, align 8
  %tex_nr = alloca i32, align 4
  %mtex3 = alloca %struct.MTex*, align 8
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !13573, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.declare(metadata i32* %tex_nr, metadata !13575, metadata !DIExpression()), !dbg !13576
  store i32 0, i32* %tex_nr, align 4, !dbg !13577
  br label %for.cond, !dbg !13579

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tex_nr, align 4, !dbg !13580
  %cmp = icmp slt i32 %0, 18, !dbg !13582
  br i1 %cmp, label %for.body, label %for.end, !dbg !13583

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13584
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 73, !dbg !13587
  %2 = load i32, i32* %septex, align 8, !dbg !13587
  %3 = load i32, i32* %tex_nr, align 4, !dbg !13588
  %shl = shl i32 1, %3, !dbg !13589
  %and = and i32 %2, %shl, !dbg !13590
  %tobool = icmp ne i32 %and, 0, !dbg !13590
  br i1 %tobool, label %if.then, label %if.end, !dbg !13591

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !13592

if.end:                                           ; preds = %for.body
  %4 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13593
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 102, !dbg !13595
  %5 = load i32, i32* %tex_nr, align 4, !dbg !13596
  %idxprom = sext i32 %5 to i64, !dbg !13593
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !13593
  %6 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !13593
  %tobool1 = icmp ne %struct.MTex* %6, null, !dbg !13593
  br i1 %tobool1, label %if.then2, label %if.end13, !dbg !13597

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex3, metadata !13598, metadata !DIExpression()), !dbg !13600
  %7 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13601
  %mtex4 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 102, !dbg !13602
  %8 = load i32, i32* %tex_nr, align 4, !dbg !13603
  %idxprom5 = sext i32 %8 to i64, !dbg !13601
  %arrayidx6 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex4, i64 0, i64 %idxprom5, !dbg !13601
  %9 = load %struct.MTex*, %struct.MTex** %arrayidx6, align 8, !dbg !13601
  store %struct.MTex* %9, %struct.MTex** %mtex3, align 8, !dbg !13600
  %10 = load %struct.MTex*, %struct.MTex** %mtex3, align 8, !dbg !13604
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %10, i32 0, i32 5, !dbg !13606
  %11 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !13606
  %tobool7 = icmp ne %struct.Tex* %11, null, !dbg !13604
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !13607

if.then8:                                         ; preds = %if.then2
  %12 = load %struct.MTex*, %struct.MTex** %mtex3, align 8, !dbg !13608
  %tex9 = getelementptr inbounds %struct.MTex, %struct.MTex* %12, i32 0, i32 5, !dbg !13610
  %13 = load %struct.Tex*, %struct.Tex** %tex9, align 8, !dbg !13610
  call void @BKE_texture_free(%struct.Tex* %13), !dbg !13611
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13612
  %15 = load %struct.MTex*, %struct.MTex** %mtex3, align 8, !dbg !13613
  %tex10 = getelementptr inbounds %struct.MTex, %struct.MTex* %15, i32 0, i32 5, !dbg !13614
  %16 = load %struct.Tex*, %struct.Tex** %tex10, align 8, !dbg !13614
  %17 = bitcast %struct.Tex* %16 to i8*, !dbg !13613
  call void %14(i8* %17), !dbg !13612
  %18 = load %struct.MTex*, %struct.MTex** %mtex3, align 8, !dbg !13615
  %tex11 = getelementptr inbounds %struct.MTex, %struct.MTex* %18, i32 0, i32 5, !dbg !13616
  store %struct.Tex* null, %struct.Tex** %tex11, align 8, !dbg !13617
  br label %if.end12, !dbg !13618

if.end12:                                         ; preds = %if.then8, %if.then2
  br label %if.end13, !dbg !13619

if.end13:                                         ; preds = %if.end12, %if.end
  br label %for.inc, !dbg !13620

for.inc:                                          ; preds = %if.end13, %if.then
  %19 = load i32, i32* %tex_nr, align 4, !dbg !13621
  %inc = add nsw i32 %19, 1, !dbg !13621
  store i32 %inc, i32* %tex_nr, align 4, !dbg !13621
  br label %for.cond, !dbg !13622, !llvm.loop !13623

for.end:                                          ; preds = %for.cond
  %20 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13625
  call void @BKE_material_free_ex(%struct.Material* %20, i8 zeroext 0), !dbg !13626
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13627
  %22 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13628
  %23 = bitcast %struct.Material* %22 to i8*, !dbg !13628
  call void %21(i8* %23), !dbg !13627
  ret void, !dbg !13629
}

declare dso_local void @BKE_texture_free(%struct.Tex*) #1

declare dso_local void @BKE_material_free_ex(%struct.Material*, i8 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_sample_material_color(%struct.Material* %mat, float* %color, float* %alpha, float* %volume_co, float* %surface_co, i32 %face_index, i16 signext %hit_quad, %struct.DerivedMesh* %orcoDm, %struct.Object* %ob) #0 !dbg !13630 {
entry:
  %mat.addr = alloca %struct.Material*, align 8
  %color.addr = alloca float*, align 8
  %alpha.addr = alloca float*, align 8
  %volume_co.addr = alloca float*, align 8
  %surface_co.addr = alloca float*, align 8
  %face_index.addr = alloca i32, align 4
  %hit_quad.addr = alloca i16, align 2
  %orcoDm.addr = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mface = alloca %struct.MFace*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %uv = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  %shi = alloca %struct.ShadeInput, align 8
  %re = alloca %struct.Render, align 8
  %l = alloca float, align 4
  %i = alloca i32, align 4
  %layers = alloca i32, align 4
  %layer_index = alloca i32, align 4
  %uv1 = alloca float*, align 8
  %uv2 = alloca float*, align 8
  %uv3 = alloca float*, align 8
  %l128 = alloca float, align 4
  %data = alloca %struct.CustomData*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %uv135 = alloca [3 x float], align 4
  %obi = alloca %struct.ObjectInstanceRen, align 8
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !13633, metadata !DIExpression()), !dbg !13634
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  store float* %alpha, float** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata float** %alpha.addr, metadata !13637, metadata !DIExpression()), !dbg !13638
  store float* %volume_co, float** %volume_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %volume_co.addr, metadata !13639, metadata !DIExpression()), !dbg !13640
  store float* %surface_co, float** %surface_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %surface_co.addr, metadata !13641, metadata !DIExpression()), !dbg !13642
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !13643, metadata !DIExpression()), !dbg !13644
  store i16 %hit_quad, i16* %hit_quad.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %hit_quad.addr, metadata !13645, metadata !DIExpression()), !dbg !13646
  store %struct.DerivedMesh* %orcoDm, %struct.DerivedMesh** %orcoDm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcoDm.addr, metadata !13647, metadata !DIExpression()), !dbg !13648
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !13651, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !13655, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !13657, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !13659, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !13661, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.declare(metadata [3 x float]* %uv, metadata !13665, metadata !DIExpression()), !dbg !13666
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata %struct.ShadeInput* %shi, metadata !13669, metadata !DIExpression()), !dbg !13670
  %0 = bitcast %struct.ShadeInput* %shi to i8*, !dbg !13670
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 1472, i1 false), !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.Render* %re, metadata !13671, metadata !DIExpression()), !dbg !13672
  %1 = bitcast %struct.Render* %re to i8*, !dbg !13672
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 6240, i1 false), !dbg !13672
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13673
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 31, !dbg !13674
  %3 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !13674
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13675
  %call = call %struct.MVert* %3(%struct.DerivedMesh* %4), !dbg !13673
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !13676
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13677
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 33, !dbg !13678
  %6 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !13678
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13679
  %call1 = call %struct.MFace* %6(%struct.DerivedMesh* %7), !dbg !13677
  store %struct.MFace* %call1, %struct.MFace** %mface, align 8, !dbg !13680
  %8 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13681
  %tobool = icmp ne %struct.MVert* %8, null, !dbg !13681
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13683

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13684
  %tobool2 = icmp ne %struct.MFace* %9, null, !dbg !13684
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !13685

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13686
  %tobool4 = icmp ne %struct.Material* %10, null, !dbg !13686
  br i1 %tobool4, label %if.end, label %if.then, !dbg !13687

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  br label %if.end263, !dbg !13688

if.end:                                           ; preds = %lor.lhs.false3
  %11 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13689
  %12 = load i32, i32* %face_index.addr, align 4, !dbg !13690
  %idxprom = sext i32 %12 to i64, !dbg !13689
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i64 %idxprom, !dbg !13689
  %v15 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 0, !dbg !13691
  %13 = load i32, i32* %v15, align 4, !dbg !13691
  store i32 %13, i32* %v1, align 4, !dbg !13692
  %14 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13693
  %15 = load i32, i32* %face_index.addr, align 4, !dbg !13694
  %idxprom6 = sext i32 %15 to i64, !dbg !13693
  %arrayidx7 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i64 %idxprom6, !dbg !13693
  %v28 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx7, i32 0, i32 1, !dbg !13695
  %16 = load i32, i32* %v28, align 4, !dbg !13695
  store i32 %16, i32* %v2, align 4, !dbg !13696
  %17 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13697
  %18 = load i32, i32* %face_index.addr, align 4, !dbg !13698
  %idxprom9 = sext i32 %18 to i64, !dbg !13697
  %arrayidx10 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i64 %idxprom9, !dbg !13697
  %v311 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx10, i32 0, i32 2, !dbg !13699
  %19 = load i32, i32* %v311, align 4, !dbg !13699
  store i32 %19, i32* %v3, align 4, !dbg !13700
  %20 = load i16, i16* %hit_quad.addr, align 2, !dbg !13701
  %tobool12 = icmp ne i16 %20, 0, !dbg !13701
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !13703

if.then13:                                        ; preds = %if.end
  %21 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13704
  %22 = load i32, i32* %face_index.addr, align 4, !dbg !13706
  %idxprom14 = sext i32 %22 to i64, !dbg !13704
  %arrayidx15 = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i64 %idxprom14, !dbg !13704
  %v316 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx15, i32 0, i32 2, !dbg !13707
  %23 = load i32, i32* %v316, align 4, !dbg !13707
  store i32 %23, i32* %v2, align 4, !dbg !13708
  %24 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !13709
  %25 = load i32, i32* %face_index.addr, align 4, !dbg !13710
  %idxprom17 = sext i32 %25 to i64, !dbg !13709
  %arrayidx18 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i64 %idxprom17, !dbg !13709
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx18, i32 0, i32 3, !dbg !13711
  %26 = load i32, i32* %v4, align 4, !dbg !13711
  store i32 %26, i32* %v3, align 4, !dbg !13712
  br label %if.end19, !dbg !13713

if.end19:                                         ; preds = %if.then13, %if.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !13714
  %27 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13715
  %28 = load i32, i32* %v1, align 4, !dbg !13716
  %idxprom20 = sext i32 %28 to i64, !dbg !13715
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom20, !dbg !13715
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 0, !dbg !13717
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13715
  %29 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13718
  %30 = load i32, i32* %v2, align 4, !dbg !13719
  %idxprom23 = sext i32 %30 to i64, !dbg !13718
  %arrayidx24 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom23, !dbg !13718
  %co25 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx24, i32 0, i32 0, !dbg !13720
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 0, !dbg !13718
  %31 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13721
  %32 = load i32, i32* %v3, align 4, !dbg !13722
  %idxprom27 = sext i32 %32 to i64, !dbg !13721
  %arrayidx28 = getelementptr inbounds %struct.MVert, %struct.MVert* %31, i64 %idxprom27, !dbg !13721
  %co29 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx28, i32 0, i32 0, !dbg !13723
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %co29, i64 0, i64 0, !dbg !13721
  %call31 = call float @normal_tri_v3(float* %arraydecay, float* %arraydecay22, float* %arraydecay26, float* %arraydecay30), !dbg !13724
  %33 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13725
  %mat32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !13726
  store %struct.Material* %33, %struct.Material** %mat32, align 8, !dbg !13727
  %34 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13728
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 2, !dbg !13730
  %35 = load i16, i16* %material_type, align 8, !dbg !13730
  %conv = sext i16 %35 to i32, !dbg !13728
  %cmp = icmp eq i32 %conv, 0, !dbg !13731
  br i1 %cmp, label %if.then34, label %if.else, !dbg !13732

if.then34:                                        ; preds = %if.end19
  %gl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 57, !dbg !13733
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %gl, i64 0, i64 0, !dbg !13735
  %36 = load float*, float** %surface_co.addr, align 8, !dbg !13736
  call void @copy_v3_v3(float* %arraydecay35, float* %36), !dbg !13737
  %co36 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !13738
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co36, i64 0, i64 0, !dbg !13739
  %37 = load float*, float** %surface_co.addr, align 8, !dbg !13740
  call void @copy_v3_v3(float* %arraydecay37, float* %37), !dbg !13741
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13742
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 50, !dbg !13743
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !13742
  %co39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !13744
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !13745
  call void @mul_m4_v3([4 x float]* %arraydecay38, float* %arraydecay40), !dbg !13746
  call void @llvm.dbg.declare(metadata float* %l, metadata !13747, metadata !DIExpression()), !dbg !13749
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !13750
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !13751
  %co43 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !13752
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !13753
  %39 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13754
  %40 = load i32, i32* %v1, align 4, !dbg !13755
  %idxprom45 = sext i32 %40 to i64, !dbg !13754
  %arrayidx46 = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i64 %idxprom45, !dbg !13754
  %co47 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx46, i32 0, i32 0, !dbg !13756
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co47, i64 0, i64 0, !dbg !13754
  %41 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13757
  %42 = load i32, i32* %v2, align 4, !dbg !13758
  %idxprom49 = sext i32 %42 to i64, !dbg !13757
  %arrayidx50 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i64 %idxprom49, !dbg !13757
  %co51 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx50, i32 0, i32 0, !dbg !13759
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !13757
  %43 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13760
  %44 = load i32, i32* %v3, align 4, !dbg !13761
  %idxprom53 = sext i32 %44 to i64, !dbg !13760
  %arrayidx54 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom53, !dbg !13760
  %co55 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx54, i32 0, i32 0, !dbg !13762
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !13760
  call void @textured_face_generate_uv(float* %arraydecay41, float* %arraydecay42, float* %arraydecay44, float* %arraydecay48, float* %arraydecay52, float* %arraydecay56), !dbg !13763
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !13764
  %45 = load float, float* %arrayidx57, align 4, !dbg !13764
  %add = fadd float 1.000000e+00, %45, !dbg !13765
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 1, !dbg !13766
  %46 = load float, float* %arrayidx58, align 4, !dbg !13766
  %add59 = fadd float %add, %46, !dbg !13767
  store float %add59, float* %l, align 4, !dbg !13768
  %47 = load float, float* %l, align 4, !dbg !13769
  %48 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13770
  %49 = load i32, i32* %v3, align 4, !dbg !13771
  %idxprom60 = sext i32 %49 to i64, !dbg !13770
  %arrayidx61 = getelementptr inbounds %struct.MVert, %struct.MVert* %48, i64 %idxprom60, !dbg !13770
  %co62 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx61, i32 0, i32 0, !dbg !13772
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !13770
  %50 = load float, float* %arrayidx63, align 4, !dbg !13770
  %mul = fmul float %47, %50, !dbg !13773
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !13774
  %51 = load float, float* %arrayidx64, align 4, !dbg !13774
  %52 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13775
  %53 = load i32, i32* %v1, align 4, !dbg !13776
  %idxprom65 = sext i32 %53 to i64, !dbg !13775
  %arrayidx66 = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i64 %idxprom65, !dbg !13775
  %co67 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx66, i32 0, i32 0, !dbg !13777
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !13775
  %54 = load float, float* %arrayidx68, align 4, !dbg !13775
  %mul69 = fmul float %51, %54, !dbg !13778
  %sub = fsub float %mul, %mul69, !dbg !13779
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 1, !dbg !13780
  %55 = load float, float* %arrayidx70, align 4, !dbg !13780
  %56 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13781
  %57 = load i32, i32* %v2, align 4, !dbg !13782
  %idxprom71 = sext i32 %57 to i64, !dbg !13781
  %arrayidx72 = getelementptr inbounds %struct.MVert, %struct.MVert* %56, i64 %idxprom71, !dbg !13781
  %co73 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx72, i32 0, i32 0, !dbg !13783
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !13781
  %58 = load float, float* %arrayidx74, align 4, !dbg !13781
  %mul75 = fmul float %55, %58, !dbg !13784
  %sub76 = fsub float %sub, %mul75, !dbg !13785
  %lo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 56, !dbg !13786
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %lo, i64 0, i64 0, !dbg !13787
  store float %sub76, float* %arrayidx77, align 4, !dbg !13788
  %59 = load float, float* %l, align 4, !dbg !13789
  %60 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13790
  %61 = load i32, i32* %v3, align 4, !dbg !13791
  %idxprom78 = sext i32 %61 to i64, !dbg !13790
  %arrayidx79 = getelementptr inbounds %struct.MVert, %struct.MVert* %60, i64 %idxprom78, !dbg !13790
  %co80 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx79, i32 0, i32 0, !dbg !13792
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 1, !dbg !13790
  %62 = load float, float* %arrayidx81, align 4, !dbg !13790
  %mul82 = fmul float %59, %62, !dbg !13793
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !13794
  %63 = load float, float* %arrayidx83, align 4, !dbg !13794
  %64 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13795
  %65 = load i32, i32* %v1, align 4, !dbg !13796
  %idxprom84 = sext i32 %65 to i64, !dbg !13795
  %arrayidx85 = getelementptr inbounds %struct.MVert, %struct.MVert* %64, i64 %idxprom84, !dbg !13795
  %co86 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx85, i32 0, i32 0, !dbg !13797
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %co86, i64 0, i64 1, !dbg !13795
  %66 = load float, float* %arrayidx87, align 4, !dbg !13795
  %mul88 = fmul float %63, %66, !dbg !13798
  %sub89 = fsub float %mul82, %mul88, !dbg !13799
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 1, !dbg !13800
  %67 = load float, float* %arrayidx90, align 4, !dbg !13800
  %68 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13801
  %69 = load i32, i32* %v2, align 4, !dbg !13802
  %idxprom91 = sext i32 %69 to i64, !dbg !13801
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %68, i64 %idxprom91, !dbg !13801
  %co93 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx92, i32 0, i32 0, !dbg !13803
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 1, !dbg !13801
  %70 = load float, float* %arrayidx94, align 4, !dbg !13801
  %mul95 = fmul float %67, %70, !dbg !13804
  %sub96 = fsub float %sub89, %mul95, !dbg !13805
  %lo97 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 56, !dbg !13806
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %lo97, i64 0, i64 1, !dbg !13807
  store float %sub96, float* %arrayidx98, align 4, !dbg !13808
  %71 = load float, float* %l, align 4, !dbg !13809
  %72 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13810
  %73 = load i32, i32* %v3, align 4, !dbg !13811
  %idxprom99 = sext i32 %73 to i64, !dbg !13810
  %arrayidx100 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom99, !dbg !13810
  %co101 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx100, i32 0, i32 0, !dbg !13812
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %co101, i64 0, i64 2, !dbg !13810
  %74 = load float, float* %arrayidx102, align 4, !dbg !13810
  %mul103 = fmul float %71, %74, !dbg !13813
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !13814
  %75 = load float, float* %arrayidx104, align 4, !dbg !13814
  %76 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13815
  %77 = load i32, i32* %v1, align 4, !dbg !13816
  %idxprom105 = sext i32 %77 to i64, !dbg !13815
  %arrayidx106 = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i64 %idxprom105, !dbg !13815
  %co107 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx106, i32 0, i32 0, !dbg !13817
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %co107, i64 0, i64 2, !dbg !13815
  %78 = load float, float* %arrayidx108, align 4, !dbg !13815
  %mul109 = fmul float %75, %78, !dbg !13818
  %sub110 = fsub float %mul103, %mul109, !dbg !13819
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 1, !dbg !13820
  %79 = load float, float* %arrayidx111, align 4, !dbg !13820
  %80 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13821
  %81 = load i32, i32* %v2, align 4, !dbg !13822
  %idxprom112 = sext i32 %81 to i64, !dbg !13821
  %arrayidx113 = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i64 %idxprom112, !dbg !13821
  %co114 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx113, i32 0, i32 0, !dbg !13823
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %co114, i64 0, i64 2, !dbg !13821
  %82 = load float, float* %arrayidx115, align 4, !dbg !13821
  %mul116 = fmul float %79, %82, !dbg !13824
  %sub117 = fsub float %sub110, %mul116, !dbg !13825
  %lo118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 56, !dbg !13826
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %lo118, i64 0, i64 2, !dbg !13827
  store float %sub117, float* %arrayidx119, align 4, !dbg !13828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13829, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.declare(metadata i32* %layers, metadata !13832, metadata !DIExpression()), !dbg !13833
  %83 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13834
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %83, i32 0, i32 2, !dbg !13835
  %call120 = call i32 @CustomData_number_of_layers(%struct.CustomData* %faceData, i32 5), !dbg !13836
  store i32 %call120, i32* %layers, align 4, !dbg !13833
  call void @llvm.dbg.declare(metadata i32* %layer_index, metadata !13837, metadata !DIExpression()), !dbg !13838
  %84 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13839
  %faceData121 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %84, i32 0, i32 2, !dbg !13840
  %call122 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData121, i32 5), !dbg !13841
  store i32 %call122, i32* %layer_index, align 4, !dbg !13838
  store i32 0, i32* %i, align 4, !dbg !13842
  br label %for.cond, !dbg !13844

for.cond:                                         ; preds = %for.inc, %if.then34
  %85 = load i32, i32* %i, align 4, !dbg !13845
  %86 = load i32, i32* %layers, align 4, !dbg !13847
  %cmp123 = icmp slt i32 %85, %86, !dbg !13848
  br i1 %cmp123, label %for.body, label %for.end, !dbg !13849

for.body:                                         ; preds = %for.cond
  %87 = load i32, i32* %layer_index, align 4, !dbg !13850
  %cmp125 = icmp sge i32 %87, 0, !dbg !13853
  br i1 %cmp125, label %if.then127, label %if.end236, !dbg !13854

if.then127:                                       ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %uv1, metadata !13855, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata float** %uv2, metadata !13858, metadata !DIExpression()), !dbg !13859
  call void @llvm.dbg.declare(metadata float** %uv3, metadata !13860, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.declare(metadata float* %l128, metadata !13862, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.declare(metadata %struct.CustomData** %data, metadata !13864, metadata !DIExpression()), !dbg !13865
  %88 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13866
  %faceData129 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %88, i32 0, i32 2, !dbg !13867
  store %struct.CustomData* %faceData129, %struct.CustomData** %data, align 8, !dbg !13865
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !13868, metadata !DIExpression()), !dbg !13869
  %89 = load %struct.CustomData*, %struct.CustomData** %data, align 8, !dbg !13870
  %layers130 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %89, i32 0, i32 0, !dbg !13871
  %90 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers130, align 8, !dbg !13871
  %91 = load i32, i32* %layer_index, align 4, !dbg !13872
  %92 = load i32, i32* %i, align 4, !dbg !13873
  %add131 = add nsw i32 %91, %92, !dbg !13874
  %idxprom132 = sext i32 %add131 to i64, !dbg !13870
  %arrayidx133 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %90, i64 %idxprom132, !dbg !13870
  %data134 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx133, i32 0, i32 9, !dbg !13875
  %93 = load i8*, i8** %data134, align 8, !dbg !13875
  %94 = bitcast i8* %93 to %struct.MTFace*, !dbg !13876
  store %struct.MTFace* %94, %struct.MTFace** %tface, align 8, !dbg !13869
  call void @llvm.dbg.declare(metadata [3 x float]* %uv135, metadata !13877, metadata !DIExpression()), !dbg !13878
  %95 = load %struct.CustomData*, %struct.CustomData** %data, align 8, !dbg !13879
  %layers136 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %95, i32 0, i32 0, !dbg !13880
  %96 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers136, align 8, !dbg !13880
  %97 = load i32, i32* %i, align 4, !dbg !13881
  %idxprom137 = sext i32 %97 to i64, !dbg !13879
  %arrayidx138 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %96, i64 %idxprom137, !dbg !13879
  %name = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx138, i32 0, i32 8, !dbg !13882
  %arraydecay139 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !13879
  %uv140 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 72, !dbg !13883
  %98 = load i32, i32* %i, align 4, !dbg !13884
  %idxprom141 = sext i32 %98 to i64, !dbg !13885
  %arrayidx142 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv140, i64 0, i64 %idxprom141, !dbg !13885
  %name143 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx142, i32 0, i32 3, !dbg !13886
  store i8* %arraydecay139, i8** %name143, align 8, !dbg !13887
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 0, !dbg !13888
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !13889
  %co146 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !13890
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %co146, i64 0, i64 0, !dbg !13891
  %99 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13892
  %100 = load i32, i32* %v1, align 4, !dbg !13893
  %idxprom148 = sext i32 %100 to i64, !dbg !13892
  %arrayidx149 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i64 %idxprom148, !dbg !13892
  %co150 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx149, i32 0, i32 0, !dbg !13894
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %co150, i64 0, i64 0, !dbg !13892
  %101 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13895
  %102 = load i32, i32* %v2, align 4, !dbg !13896
  %idxprom152 = sext i32 %102 to i64, !dbg !13895
  %arrayidx153 = getelementptr inbounds %struct.MVert, %struct.MVert* %101, i64 %idxprom152, !dbg !13895
  %co154 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx153, i32 0, i32 0, !dbg !13897
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co154, i64 0, i64 0, !dbg !13895
  %103 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13898
  %104 = load i32, i32* %v3, align 4, !dbg !13899
  %idxprom156 = sext i32 %104 to i64, !dbg !13898
  %arrayidx157 = getelementptr inbounds %struct.MVert, %struct.MVert* %103, i64 %idxprom156, !dbg !13898
  %co158 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx157, i32 0, i32 0, !dbg !13900
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %co158, i64 0, i64 0, !dbg !13898
  call void @textured_face_generate_uv(float* %arraydecay144, float* %arraydecay145, float* %arraydecay147, float* %arraydecay151, float* %arraydecay155, float* %arraydecay159), !dbg !13901
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 0, !dbg !13902
  %105 = load float, float* %arrayidx160, align 4, !dbg !13902
  %add161 = fadd float 1.000000e+00, %105, !dbg !13903
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 1, !dbg !13904
  %106 = load float, float* %arrayidx162, align 4, !dbg !13904
  %add163 = fadd float %add161, %106, !dbg !13905
  store float %add163, float* %l128, align 4, !dbg !13906
  %107 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13907
  %108 = load i32, i32* %face_index.addr, align 4, !dbg !13908
  %idxprom164 = sext i32 %108 to i64, !dbg !13907
  %arrayidx165 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %107, i64 %idxprom164, !dbg !13907
  %uv166 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx165, i32 0, i32 0, !dbg !13909
  %arrayidx167 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv166, i64 0, i64 0, !dbg !13907
  %arraydecay168 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx167, i64 0, i64 0, !dbg !13907
  store float* %arraydecay168, float** %uv1, align 8, !dbg !13910
  %109 = load i16, i16* %hit_quad.addr, align 2, !dbg !13911
  %conv169 = sext i16 %109 to i32, !dbg !13912
  %tobool170 = icmp ne i32 %conv169, 0, !dbg !13912
  br i1 %tobool170, label %cond.true, label %cond.false, !dbg !13912

cond.true:                                        ; preds = %if.then127
  %110 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13913
  %111 = load i32, i32* %face_index.addr, align 4, !dbg !13914
  %idxprom171 = sext i32 %111 to i64, !dbg !13913
  %arrayidx172 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %110, i64 %idxprom171, !dbg !13913
  %uv173 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx172, i32 0, i32 0, !dbg !13915
  %arrayidx174 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv173, i64 0, i64 2, !dbg !13913
  %arraydecay175 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx174, i64 0, i64 0, !dbg !13913
  br label %cond.end, !dbg !13912

cond.false:                                       ; preds = %if.then127
  %112 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13916
  %113 = load i32, i32* %face_index.addr, align 4, !dbg !13917
  %idxprom176 = sext i32 %113 to i64, !dbg !13916
  %arrayidx177 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %112, i64 %idxprom176, !dbg !13916
  %uv178 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx177, i32 0, i32 0, !dbg !13918
  %arrayidx179 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv178, i64 0, i64 1, !dbg !13916
  %arraydecay180 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx179, i64 0, i64 0, !dbg !13916
  br label %cond.end, !dbg !13912

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay175, %cond.true ], [ %arraydecay180, %cond.false ], !dbg !13912
  store float* %cond, float** %uv2, align 8, !dbg !13919
  %114 = load i16, i16* %hit_quad.addr, align 2, !dbg !13920
  %conv181 = sext i16 %114 to i32, !dbg !13921
  %tobool182 = icmp ne i32 %conv181, 0, !dbg !13921
  br i1 %tobool182, label %cond.true183, label %cond.false189, !dbg !13921

cond.true183:                                     ; preds = %cond.end
  %115 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13922
  %116 = load i32, i32* %face_index.addr, align 4, !dbg !13923
  %idxprom184 = sext i32 %116 to i64, !dbg !13922
  %arrayidx185 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %115, i64 %idxprom184, !dbg !13922
  %uv186 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx185, i32 0, i32 0, !dbg !13924
  %arrayidx187 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv186, i64 0, i64 3, !dbg !13922
  %arraydecay188 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx187, i64 0, i64 0, !dbg !13922
  br label %cond.end195, !dbg !13921

cond.false189:                                    ; preds = %cond.end
  %117 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13925
  %118 = load i32, i32* %face_index.addr, align 4, !dbg !13926
  %idxprom190 = sext i32 %118 to i64, !dbg !13925
  %arrayidx191 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %117, i64 %idxprom190, !dbg !13925
  %uv192 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx191, i32 0, i32 0, !dbg !13927
  %arrayidx193 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv192, i64 0, i64 2, !dbg !13925
  %arraydecay194 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx193, i64 0, i64 0, !dbg !13925
  br label %cond.end195, !dbg !13921

cond.end195:                                      ; preds = %cond.false189, %cond.true183
  %cond196 = phi float* [ %arraydecay188, %cond.true183 ], [ %arraydecay194, %cond.false189 ], !dbg !13921
  store float* %cond196, float** %uv3, align 8, !dbg !13928
  %119 = load float, float* %l128, align 4, !dbg !13929
  %120 = load float*, float** %uv3, align 8, !dbg !13930
  %arrayidx197 = getelementptr inbounds float, float* %120, i64 0, !dbg !13930
  %121 = load float, float* %arrayidx197, align 4, !dbg !13930
  %mul198 = fmul float %119, %121, !dbg !13931
  %arrayidx199 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 0, !dbg !13932
  %122 = load float, float* %arrayidx199, align 4, !dbg !13932
  %123 = load float*, float** %uv1, align 8, !dbg !13933
  %arrayidx200 = getelementptr inbounds float, float* %123, i64 0, !dbg !13933
  %124 = load float, float* %arrayidx200, align 4, !dbg !13933
  %mul201 = fmul float %122, %124, !dbg !13934
  %sub202 = fsub float %mul198, %mul201, !dbg !13935
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 1, !dbg !13936
  %125 = load float, float* %arrayidx203, align 4, !dbg !13936
  %126 = load float*, float** %uv2, align 8, !dbg !13937
  %arrayidx204 = getelementptr inbounds float, float* %126, i64 0, !dbg !13937
  %127 = load float, float* %arrayidx204, align 4, !dbg !13937
  %mul205 = fmul float %125, %127, !dbg !13938
  %sub206 = fsub float %sub202, %mul205, !dbg !13939
  %mul207 = fmul float 2.000000e+00, %sub206, !dbg !13940
  %add208 = fadd float -1.000000e+00, %mul207, !dbg !13941
  %uv209 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 72, !dbg !13942
  %128 = load i32, i32* %i, align 4, !dbg !13943
  %idxprom210 = sext i32 %128 to i64, !dbg !13944
  %arrayidx211 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv209, i64 0, i64 %idxprom210, !dbg !13944
  %uv212 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx211, i32 0, i32 2, !dbg !13945
  %arrayidx213 = getelementptr inbounds [3 x float], [3 x float]* %uv212, i64 0, i64 0, !dbg !13944
  store float %add208, float* %arrayidx213, align 8, !dbg !13946
  %129 = load float, float* %l128, align 4, !dbg !13947
  %130 = load float*, float** %uv3, align 8, !dbg !13948
  %arrayidx214 = getelementptr inbounds float, float* %130, i64 1, !dbg !13948
  %131 = load float, float* %arrayidx214, align 4, !dbg !13948
  %mul215 = fmul float %129, %131, !dbg !13949
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 0, !dbg !13950
  %132 = load float, float* %arrayidx216, align 4, !dbg !13950
  %133 = load float*, float** %uv1, align 8, !dbg !13951
  %arrayidx217 = getelementptr inbounds float, float* %133, i64 1, !dbg !13951
  %134 = load float, float* %arrayidx217, align 4, !dbg !13951
  %mul218 = fmul float %132, %134, !dbg !13952
  %sub219 = fsub float %mul215, %mul218, !dbg !13953
  %arrayidx220 = getelementptr inbounds [3 x float], [3 x float]* %uv135, i64 0, i64 1, !dbg !13954
  %135 = load float, float* %arrayidx220, align 4, !dbg !13954
  %136 = load float*, float** %uv2, align 8, !dbg !13955
  %arrayidx221 = getelementptr inbounds float, float* %136, i64 1, !dbg !13955
  %137 = load float, float* %arrayidx221, align 4, !dbg !13955
  %mul222 = fmul float %135, %137, !dbg !13956
  %sub223 = fsub float %sub219, %mul222, !dbg !13957
  %mul224 = fmul float 2.000000e+00, %sub223, !dbg !13958
  %add225 = fadd float -1.000000e+00, %mul224, !dbg !13959
  %uv226 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 72, !dbg !13960
  %138 = load i32, i32* %i, align 4, !dbg !13961
  %idxprom227 = sext i32 %138 to i64, !dbg !13962
  %arrayidx228 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv226, i64 0, i64 %idxprom227, !dbg !13962
  %uv229 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx228, i32 0, i32 2, !dbg !13963
  %arrayidx230 = getelementptr inbounds [3 x float], [3 x float]* %uv229, i64 0, i64 1, !dbg !13962
  store float %add225, float* %arrayidx230, align 4, !dbg !13964
  %uv231 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 72, !dbg !13965
  %139 = load i32, i32* %i, align 4, !dbg !13966
  %idxprom232 = sext i32 %139 to i64, !dbg !13967
  %arrayidx233 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv231, i64 0, i64 %idxprom232, !dbg !13967
  %uv234 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx233, i32 0, i32 2, !dbg !13968
  %arrayidx235 = getelementptr inbounds [3 x float], [3 x float]* %uv234, i64 0, i64 2, !dbg !13967
  store float 0.000000e+00, float* %arrayidx235, align 8, !dbg !13969
  br label %if.end236, !dbg !13970

if.end236:                                        ; preds = %cond.end195, %for.body
  br label %for.inc, !dbg !13971

for.inc:                                          ; preds = %if.end236
  %140 = load i32, i32* %i, align 4, !dbg !13972
  %inc = add nsw i32 %140, 1, !dbg !13972
  store i32 %inc, i32* %i, align 4, !dbg !13972
  br label %for.cond, !dbg !13973, !llvm.loop !13974

for.end:                                          ; preds = %for.cond
  %141 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !13976
  %faceData237 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %141, i32 0, i32 2, !dbg !13977
  %call238 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %faceData237, i32 5), !dbg !13978
  %142 = load i32, i32* %layer_index, align 4, !dbg !13979
  %sub239 = sub nsw i32 %call238, %142, !dbg !13980
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 76, !dbg !13981
  store i32 %sub239, i32* %actuv, align 8, !dbg !13982
  %143 = load i32, i32* %layers, align 4, !dbg !13983
  %totuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 74, !dbg !13984
  store i32 %143, i32* %totuv, align 8, !dbg !13985
  %144 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13986
  %r = getelementptr inbounds %struct.Material, %struct.Material* %144, i32 0, i32 4, !dbg !13987
  %145 = load float, float* %r, align 4, !dbg !13987
  %r240 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 32, !dbg !13988
  store float %145, float* %r240, align 4, !dbg !13989
  %146 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13990
  %g = getelementptr inbounds %struct.Material, %struct.Material* %146, i32 0, i32 5, !dbg !13991
  %147 = load float, float* %g, align 8, !dbg !13991
  %g241 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 33, !dbg !13992
  store float %147, float* %g241, align 8, !dbg !13993
  %148 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13994
  %b = getelementptr inbounds %struct.Material, %struct.Material* %148, i32 0, i32 6, !dbg !13995
  %149 = load float, float* %b, align 4, !dbg !13995
  %b242 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 34, !dbg !13996
  store float %149, float* %b242, align 4, !dbg !13997
  %150 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !13998
  %alpha243 = getelementptr inbounds %struct.Material, %struct.Material* %150, i32 0, i32 21, !dbg !13999
  %151 = load float, float* %alpha243, align 8, !dbg !13999
  %alpha244 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 49, !dbg !14000
  store float %151, float* %alpha244, align 8, !dbg !14001
  call void @do_material_tex(%struct.ShadeInput* %shi, %struct.Render* %re), !dbg !14002
  %r245 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 32, !dbg !14003
  %152 = load float, float* %r245, align 4, !dbg !14003
  %153 = load float*, float** %color.addr, align 8, !dbg !14004
  %arrayidx246 = getelementptr inbounds float, float* %153, i64 0, !dbg !14004
  store float %152, float* %arrayidx246, align 4, !dbg !14005
  %g247 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 33, !dbg !14006
  %154 = load float, float* %g247, align 8, !dbg !14006
  %155 = load float*, float** %color.addr, align 8, !dbg !14007
  %arrayidx248 = getelementptr inbounds float, float* %155, i64 1, !dbg !14007
  store float %154, float* %arrayidx248, align 4, !dbg !14008
  %b249 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 34, !dbg !14009
  %156 = load float, float* %b249, align 4, !dbg !14009
  %157 = load float*, float** %color.addr, align 8, !dbg !14010
  %arrayidx250 = getelementptr inbounds float, float* %157, i64 2, !dbg !14010
  store float %156, float* %arrayidx250, align 4, !dbg !14011
  %alpha251 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 49, !dbg !14012
  %158 = load float, float* %alpha251, align 8, !dbg !14012
  %159 = load float*, float** %alpha.addr, align 8, !dbg !14013
  store float %158, float* %159, align 4, !dbg !14014
  br label %if.end263, !dbg !14015

if.else:                                          ; preds = %if.end19
  %160 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !14016
  %material_type252 = getelementptr inbounds %struct.Material, %struct.Material* %160, i32 0, i32 2, !dbg !14018
  %161 = load i16, i16* %material_type252, align 8, !dbg !14018
  %conv253 = sext i16 %161 to i32, !dbg !14016
  %cmp254 = icmp eq i32 %conv253, 2, !dbg !14019
  br i1 %cmp254, label %if.then256, label %if.end262, !dbg !14020

if.then256:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen* %obi, metadata !14021, metadata !DIExpression()), !dbg !14024
  %162 = bitcast %struct.ObjectInstanceRen* %obi to i8*, !dbg !14024
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 288, i1 false), !dbg !14024
  %163 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14025
  %ob257 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %obi, i32 0, i32 3, !dbg !14026
  store %struct.Object* %163, %struct.Object** %ob257, align 8, !dbg !14027
  %obi258 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 3, !dbg !14028
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi258, align 8, !dbg !14029
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %re, i32 0, i32 33, !dbg !14030
  %arraydecay259 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !14031
  call void @unit_m4([4 x float]* %arraydecay259), !dbg !14032
  %164 = load float*, float** %color.addr, align 8, !dbg !14033
  %165 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !14034
  %vol = getelementptr inbounds %struct.Material, %struct.Material* %165, i32 0, i32 27, !dbg !14035
  %reflection_col = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol, i32 0, i32 6, !dbg !14036
  %arraydecay260 = getelementptr inbounds [3 x float], [3 x float]* %reflection_col, i64 0, i64 0, !dbg !14034
  call void @copy_v3_v3(float* %164, float* %arraydecay260), !dbg !14037
  %166 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !14038
  %vol261 = getelementptr inbounds %struct.Material, %struct.Material* %166, i32 0, i32 27, !dbg !14039
  %density = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol261, i32 0, i32 0, !dbg !14040
  %167 = load float, float* %density, align 8, !dbg !14040
  %168 = load float*, float** %alpha.addr, align 8, !dbg !14041
  store float %167, float* %168, align 4, !dbg !14042
  %169 = load float*, float** %volume_co.addr, align 8, !dbg !14043
  %170 = load float*, float** %color.addr, align 8, !dbg !14044
  %171 = load float*, float** %alpha.addr, align 8, !dbg !14045
  call void @do_volume_tex(%struct.ShadeInput* %shi, float* %169, i32 140, float* %170, float* %171, %struct.Render* %re), !dbg !14046
  br label %if.end262, !dbg !14047

if.end262:                                        ; preds = %if.then256, %if.else
  br label %if.end263

if.end263:                                        ; preds = %if.then, %if.end262, %for.end
  ret void, !dbg !14048
}

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @textured_face_generate_uv(float* %uv, float* %normal, float* %hit, float* %v1, float* %v2, float* %v3) #0 !dbg !14049 {
entry:
  %uv.addr = alloca float*, align 8
  %normal.addr = alloca float*, align 8
  %hit.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %detsh = alloca float, align 4
  %t00 = alloca float, align 4
  %t10 = alloca float, align 4
  %t01 = alloca float, align 4
  %t11 = alloca float, align 4
  %axis1 = alloca i32, align 4
  %axis2 = alloca i32, align 4
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  store float* %hit, float** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hit.addr, metadata !14056, metadata !DIExpression()), !dbg !14057
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !14058, metadata !DIExpression()), !dbg !14059
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.declare(metadata float* %detsh, metadata !14064, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.declare(metadata float* %t00, metadata !14066, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.declare(metadata float* %t10, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata float* %t01, metadata !14070, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.declare(metadata float* %t11, metadata !14072, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.declare(metadata i32* %axis1, metadata !14074, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.declare(metadata i32* %axis2, metadata !14076, metadata !DIExpression()), !dbg !14077
  %0 = load float*, float** %normal.addr, align 8, !dbg !14078
  call void @axis_dominant_v3(i32* %axis1, i32* %axis2, float* %0), !dbg !14079
  %1 = load float*, float** %v3.addr, align 8, !dbg !14080
  %2 = load i32, i32* %axis1, align 4, !dbg !14081
  %idxprom = sext i32 %2 to i64, !dbg !14080
  %arrayidx = getelementptr inbounds float, float* %1, i64 %idxprom, !dbg !14080
  %3 = load float, float* %arrayidx, align 4, !dbg !14080
  %4 = load float*, float** %v1.addr, align 8, !dbg !14082
  %5 = load i32, i32* %axis1, align 4, !dbg !14083
  %idxprom1 = sext i32 %5 to i64, !dbg !14082
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %idxprom1, !dbg !14082
  %6 = load float, float* %arrayidx2, align 4, !dbg !14082
  %sub = fsub float %3, %6, !dbg !14084
  store float %sub, float* %t00, align 4, !dbg !14085
  %7 = load float*, float** %v3.addr, align 8, !dbg !14086
  %8 = load i32, i32* %axis2, align 4, !dbg !14087
  %idxprom3 = sext i32 %8 to i64, !dbg !14086
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 %idxprom3, !dbg !14086
  %9 = load float, float* %arrayidx4, align 4, !dbg !14086
  %10 = load float*, float** %v1.addr, align 8, !dbg !14088
  %11 = load i32, i32* %axis2, align 4, !dbg !14089
  %idxprom5 = sext i32 %11 to i64, !dbg !14088
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 %idxprom5, !dbg !14088
  %12 = load float, float* %arrayidx6, align 4, !dbg !14088
  %sub7 = fsub float %9, %12, !dbg !14090
  store float %sub7, float* %t01, align 4, !dbg !14091
  %13 = load float*, float** %v3.addr, align 8, !dbg !14092
  %14 = load i32, i32* %axis1, align 4, !dbg !14093
  %idxprom8 = sext i32 %14 to i64, !dbg !14092
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 %idxprom8, !dbg !14092
  %15 = load float, float* %arrayidx9, align 4, !dbg !14092
  %16 = load float*, float** %v2.addr, align 8, !dbg !14094
  %17 = load i32, i32* %axis1, align 4, !dbg !14095
  %idxprom10 = sext i32 %17 to i64, !dbg !14094
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 %idxprom10, !dbg !14094
  %18 = load float, float* %arrayidx11, align 4, !dbg !14094
  %sub12 = fsub float %15, %18, !dbg !14096
  store float %sub12, float* %t10, align 4, !dbg !14097
  %19 = load float*, float** %v3.addr, align 8, !dbg !14098
  %20 = load i32, i32* %axis2, align 4, !dbg !14099
  %idxprom13 = sext i32 %20 to i64, !dbg !14098
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 %idxprom13, !dbg !14098
  %21 = load float, float* %arrayidx14, align 4, !dbg !14098
  %22 = load float*, float** %v2.addr, align 8, !dbg !14100
  %23 = load i32, i32* %axis2, align 4, !dbg !14101
  %idxprom15 = sext i32 %23 to i64, !dbg !14100
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15, !dbg !14100
  %24 = load float, float* %arrayidx16, align 4, !dbg !14100
  %sub17 = fsub float %21, %24, !dbg !14102
  store float %sub17, float* %t11, align 4, !dbg !14103
  %25 = load float, float* %t00, align 4, !dbg !14104
  %26 = load float, float* %t11, align 4, !dbg !14105
  %mul = fmul float %25, %26, !dbg !14106
  %27 = load float, float* %t10, align 4, !dbg !14107
  %28 = load float, float* %t01, align 4, !dbg !14108
  %mul18 = fmul float %27, %28, !dbg !14109
  %sub19 = fsub float %mul, %mul18, !dbg !14110
  %div = fdiv float 1.000000e+00, %sub19, !dbg !14111
  store float %div, float* %detsh, align 4, !dbg !14112
  %29 = load float, float* %detsh, align 4, !dbg !14113
  %30 = load float, float* %t00, align 4, !dbg !14114
  %mul20 = fmul float %30, %29, !dbg !14114
  store float %mul20, float* %t00, align 4, !dbg !14114
  %31 = load float, float* %detsh, align 4, !dbg !14115
  %32 = load float, float* %t01, align 4, !dbg !14116
  %mul21 = fmul float %32, %31, !dbg !14116
  store float %mul21, float* %t01, align 4, !dbg !14116
  %33 = load float, float* %detsh, align 4, !dbg !14117
  %34 = load float, float* %t10, align 4, !dbg !14118
  %mul22 = fmul float %34, %33, !dbg !14118
  store float %mul22, float* %t10, align 4, !dbg !14118
  %35 = load float, float* %detsh, align 4, !dbg !14119
  %36 = load float, float* %t11, align 4, !dbg !14120
  %mul23 = fmul float %36, %35, !dbg !14120
  store float %mul23, float* %t11, align 4, !dbg !14120
  %37 = load float*, float** %hit.addr, align 8, !dbg !14121
  %38 = load i32, i32* %axis1, align 4, !dbg !14122
  %idxprom24 = sext i32 %38 to i64, !dbg !14121
  %arrayidx25 = getelementptr inbounds float, float* %37, i64 %idxprom24, !dbg !14121
  %39 = load float, float* %arrayidx25, align 4, !dbg !14121
  %40 = load float*, float** %v3.addr, align 8, !dbg !14123
  %41 = load i32, i32* %axis1, align 4, !dbg !14124
  %idxprom26 = sext i32 %41 to i64, !dbg !14123
  %arrayidx27 = getelementptr inbounds float, float* %40, i64 %idxprom26, !dbg !14123
  %42 = load float, float* %arrayidx27, align 4, !dbg !14123
  %sub28 = fsub float %39, %42, !dbg !14125
  %43 = load float, float* %t11, align 4, !dbg !14126
  %mul29 = fmul float %sub28, %43, !dbg !14127
  %44 = load float*, float** %hit.addr, align 8, !dbg !14128
  %45 = load i32, i32* %axis2, align 4, !dbg !14129
  %idxprom30 = sext i32 %45 to i64, !dbg !14128
  %arrayidx31 = getelementptr inbounds float, float* %44, i64 %idxprom30, !dbg !14128
  %46 = load float, float* %arrayidx31, align 4, !dbg !14128
  %47 = load float*, float** %v3.addr, align 8, !dbg !14130
  %48 = load i32, i32* %axis2, align 4, !dbg !14131
  %idxprom32 = sext i32 %48 to i64, !dbg !14130
  %arrayidx33 = getelementptr inbounds float, float* %47, i64 %idxprom32, !dbg !14130
  %49 = load float, float* %arrayidx33, align 4, !dbg !14130
  %sub34 = fsub float %46, %49, !dbg !14132
  %50 = load float, float* %t10, align 4, !dbg !14133
  %mul35 = fmul float %sub34, %50, !dbg !14134
  %sub36 = fsub float %mul29, %mul35, !dbg !14135
  %51 = load float*, float** %uv.addr, align 8, !dbg !14136
  %arrayidx37 = getelementptr inbounds float, float* %51, i64 0, !dbg !14136
  store float %sub36, float* %arrayidx37, align 4, !dbg !14137
  %52 = load float*, float** %hit.addr, align 8, !dbg !14138
  %53 = load i32, i32* %axis2, align 4, !dbg !14139
  %idxprom38 = sext i32 %53 to i64, !dbg !14138
  %arrayidx39 = getelementptr inbounds float, float* %52, i64 %idxprom38, !dbg !14138
  %54 = load float, float* %arrayidx39, align 4, !dbg !14138
  %55 = load float*, float** %v3.addr, align 8, !dbg !14140
  %56 = load i32, i32* %axis2, align 4, !dbg !14141
  %idxprom40 = sext i32 %56 to i64, !dbg !14140
  %arrayidx41 = getelementptr inbounds float, float* %55, i64 %idxprom40, !dbg !14140
  %57 = load float, float* %arrayidx41, align 4, !dbg !14140
  %sub42 = fsub float %54, %57, !dbg !14142
  %58 = load float, float* %t00, align 4, !dbg !14143
  %mul43 = fmul float %sub42, %58, !dbg !14144
  %59 = load float*, float** %hit.addr, align 8, !dbg !14145
  %60 = load i32, i32* %axis1, align 4, !dbg !14146
  %idxprom44 = sext i32 %60 to i64, !dbg !14145
  %arrayidx45 = getelementptr inbounds float, float* %59, i64 %idxprom44, !dbg !14145
  %61 = load float, float* %arrayidx45, align 4, !dbg !14145
  %62 = load float*, float** %v3.addr, align 8, !dbg !14147
  %63 = load i32, i32* %axis1, align 4, !dbg !14148
  %idxprom46 = sext i32 %63 to i64, !dbg !14147
  %arrayidx47 = getelementptr inbounds float, float* %62, i64 %idxprom46, !dbg !14147
  %64 = load float, float* %arrayidx47, align 4, !dbg !14147
  %sub48 = fsub float %61, %64, !dbg !14149
  %65 = load float, float* %t01, align 4, !dbg !14150
  %mul49 = fmul float %sub48, %65, !dbg !14151
  %sub50 = fsub float %mul43, %mul49, !dbg !14152
  %66 = load float*, float** %uv.addr, align 8, !dbg !14153
  %arrayidx51 = getelementptr inbounds float, float* %66, i64 1, !dbg !14153
  store float %sub50, float* %arrayidx51, align 4, !dbg !14154
  %67 = load float*, float** %uv.addr, align 8, !dbg !14155
  %arrayidx52 = getelementptr inbounds float, float* %67, i64 0, !dbg !14155
  %68 = load float, float* %arrayidx52, align 4, !dbg !14155
  %cmp = fcmp olt float %68, -2.000000e+00, !dbg !14155
  br i1 %cmp, label %if.then, label %if.else, !dbg !14158

if.then:                                          ; preds = %entry
  %69 = load float*, float** %uv.addr, align 8, !dbg !14155
  %arrayidx53 = getelementptr inbounds float, float* %69, i64 0, !dbg !14155
  store float -2.000000e+00, float* %arrayidx53, align 4, !dbg !14155
  br label %if.end58, !dbg !14155

if.else:                                          ; preds = %entry
  %70 = load float*, float** %uv.addr, align 8, !dbg !14159
  %arrayidx54 = getelementptr inbounds float, float* %70, i64 0, !dbg !14159
  %71 = load float, float* %arrayidx54, align 4, !dbg !14159
  %cmp55 = fcmp ogt float %71, 1.000000e+00, !dbg !14159
  br i1 %cmp55, label %if.then56, label %if.end, !dbg !14155

if.then56:                                        ; preds = %if.else
  %72 = load float*, float** %uv.addr, align 8, !dbg !14159
  %arrayidx57 = getelementptr inbounds float, float* %72, i64 0, !dbg !14159
  store float 1.000000e+00, float* %arrayidx57, align 4, !dbg !14159
  br label %if.end, !dbg !14159

if.end:                                           ; preds = %if.then56, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end, %if.then
  %73 = load float*, float** %uv.addr, align 8, !dbg !14161
  %arrayidx59 = getelementptr inbounds float, float* %73, i64 1, !dbg !14161
  %74 = load float, float* %arrayidx59, align 4, !dbg !14161
  %cmp60 = fcmp olt float %74, -2.000000e+00, !dbg !14161
  br i1 %cmp60, label %if.then61, label %if.else63, !dbg !14164

if.then61:                                        ; preds = %if.end58
  %75 = load float*, float** %uv.addr, align 8, !dbg !14161
  %arrayidx62 = getelementptr inbounds float, float* %75, i64 1, !dbg !14161
  store float -2.000000e+00, float* %arrayidx62, align 4, !dbg !14161
  br label %if.end69, !dbg !14161

if.else63:                                        ; preds = %if.end58
  %76 = load float*, float** %uv.addr, align 8, !dbg !14165
  %arrayidx64 = getelementptr inbounds float, float* %76, i64 1, !dbg !14165
  %77 = load float, float* %arrayidx64, align 4, !dbg !14165
  %cmp65 = fcmp ogt float %77, 1.000000e+00, !dbg !14165
  br i1 %cmp65, label %if.then66, label %if.end68, !dbg !14161

if.then66:                                        ; preds = %if.else63
  %78 = load float*, float** %uv.addr, align 8, !dbg !14165
  %arrayidx67 = getelementptr inbounds float, float* %78, i64 1, !dbg !14165
  store float 1.000000e+00, float* %arrayidx67, align 4, !dbg !14165
  br label %if.end68, !dbg !14165

if.end68:                                         ; preds = %if.then66, %if.else63
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then61
  ret void, !dbg !14167
}

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #1

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #1

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #1

declare dso_local void @BKE_image_user_frame_calc(%struct.ImageUser*, i32, i32) #1

declare dso_local void @BKE_free_envmapdata(%struct.EnvMap*) #1

declare dso_local %struct.bNodeTreeExec* @ntreeTexBeginExecTree(%struct.bNodeTree*) #1

declare dso_local void @ntreeTexEndExecTree(%struct.bNodeTreeExec*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !14168 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14171, metadata !DIExpression()), !dbg !14172
  %0 = load float*, float** %r.addr, align 8, !dbg !14173
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14173
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !14174
  %1 = load float*, float** %r.addr, align 8, !dbg !14175
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !14175
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !14176
  %2 = load float*, float** %r.addr, align 8, !dbg !14177
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !14177
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !14178
  ret void, !dbg !14179
}

declare dso_local %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen*, %struct.VlakRen*, i32, i8**, i32) #1

declare dso_local void @vlr_set_uv_indices(%struct.VlakRen*, i32*, i32*, i32*) #1

declare dso_local void @ortho_basis_v3v3_v3(float*, float*, float*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !14180 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14181, metadata !DIExpression()), !dbg !14182
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14183, metadata !DIExpression()), !dbg !14184
  %0 = load float*, float** %a.addr, align 8, !dbg !14185
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14185
  %1 = load float, float* %arrayidx, align 4, !dbg !14185
  %fneg = fneg float %1, !dbg !14186
  %2 = load float*, float** %r.addr, align 8, !dbg !14187
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14187
  store float %fneg, float* %arrayidx1, align 4, !dbg !14188
  %3 = load float*, float** %a.addr, align 8, !dbg !14189
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !14189
  %4 = load float, float* %arrayidx2, align 4, !dbg !14189
  %fneg3 = fneg float %4, !dbg !14190
  %5 = load float*, float** %r.addr, align 8, !dbg !14191
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !14191
  store float %fneg3, float* %arrayidx4, align 4, !dbg !14192
  %6 = load float*, float** %a.addr, align 8, !dbg !14193
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !14193
  %7 = load float, float* %arrayidx5, align 4, !dbg !14193
  %fneg6 = fneg float %7, !dbg !14194
  %8 = load float*, float** %r.addr, align 8, !dbg !14195
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !14195
  store float %fneg6, float* %arrayidx7, align 4, !dbg !14196
  ret void, !dbg !14197
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !14198 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !14201, metadata !DIExpression()), !dbg !14202
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !14203, metadata !DIExpression()), !dbg !14204
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !14205, metadata !DIExpression()), !dbg !14206
  %0 = load float, float* %a.addr, align 4, !dbg !14207
  %1 = load float, float* %b.addr, align 4, !dbg !14208
  %call = call float @max_ff(float %0, float %1), !dbg !14209
  %2 = load float, float* %c.addr, align 4, !dbg !14210
  %call1 = call float @max_ff(float %call, float %2), !dbg !14211
  ret float %call1, !dbg !14212
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !14213 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !14214, metadata !DIExpression()), !dbg !14215
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !14216, metadata !DIExpression()), !dbg !14217
  %0 = load float, float* %a.addr, align 4, !dbg !14218
  %1 = load float, float* %b.addr, align 4, !dbg !14219
  %cmp = fcmp ogt float %0, %1, !dbg !14220
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14221

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !14222
  br label %cond.end, !dbg !14221

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !14223
  br label %cond.end, !dbg !14221

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !14221
  ret float %cond, !dbg !14224
}

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #1

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #1

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #1

declare dso_local void @mul_transposed_m3_v3([3 x float]*, float*) #1

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !14225 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  %0 = load float*, float** %a.addr, align 8, !dbg !14228
  %1 = load float*, float** %a.addr, align 8, !dbg !14229
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !14230
  %call1 = call float @sqrtf(float %call) #7, !dbg !14231
  ret float %call1, !dbg !14232
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !14233 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !14234, metadata !DIExpression()), !dbg !14235
  %0 = load float*, float** %v.addr, align 8, !dbg !14236
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14236
  %1 = load float, float* %arrayidx, align 4, !dbg !14236
  %2 = load float*, float** %v.addr, align 8, !dbg !14237
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14237
  %3 = load float, float* %arrayidx1, align 4, !dbg !14237
  %mul = fmul float %1, %3, !dbg !14238
  %4 = load float*, float** %v.addr, align 8, !dbg !14239
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14239
  %5 = load float, float* %arrayidx2, align 4, !dbg !14239
  %6 = load float*, float** %v.addr, align 8, !dbg !14240
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !14240
  %7 = load float, float* %arrayidx3, align 4, !dbg !14240
  %mul4 = fmul float %5, %7, !dbg !14241
  %add = fadd float %mul, %mul4, !dbg !14242
  %call = call float @sqrtf(float %add) #7, !dbg !14243
  ret float %call, !dbg !14244
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #2

declare dso_local i32 @ntreeTexExecTree(%struct.bNodeTree*, %struct.TexResult*, float*, float*, float*, i32, i16 signext, %struct.Tex*, i16 signext, i32, i32, %struct.ShadeInput*, %struct.MTex*) #1

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !14245 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14248, metadata !DIExpression()), !dbg !14249
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.declare(metadata float* %d, metadata !14252, metadata !DIExpression()), !dbg !14253
  %0 = load float*, float** %a.addr, align 8, !dbg !14254
  %1 = load float*, float** %a.addr, align 8, !dbg !14255
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !14256
  store float %call, float* %d, align 4, !dbg !14253
  %2 = load float, float* %d, align 4, !dbg !14257
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !14259
  br i1 %cmp, label %if.then, label %if.else, !dbg !14260

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !14261
  %call1 = call float @sqrtf(float %3) #7, !dbg !14263
  store float %call1, float* %d, align 4, !dbg !14264
  %4 = load float*, float** %r.addr, align 8, !dbg !14265
  %5 = load float*, float** %a.addr, align 8, !dbg !14266
  %6 = load float, float* %d, align 4, !dbg !14267
  %div = fdiv float 1.000000e+00, %6, !dbg !14268
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !14269
  br label %if.end, !dbg !14270

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !14271
  call void @zero_v3(float* %7), !dbg !14273
  store float 0.000000e+00, float* %d, align 4, !dbg !14274
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !14275
  ret float %8, !dbg !14276
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !14277 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14278, metadata !DIExpression()), !dbg !14279
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14280, metadata !DIExpression()), !dbg !14281
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !14282, metadata !DIExpression()), !dbg !14283
  %0 = load float*, float** %a.addr, align 8, !dbg !14284
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14284
  %1 = load float, float* %arrayidx, align 4, !dbg !14284
  %2 = load float, float* %f.addr, align 4, !dbg !14285
  %mul = fmul float %1, %2, !dbg !14286
  %3 = load float*, float** %r.addr, align 8, !dbg !14287
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !14287
  store float %mul, float* %arrayidx1, align 4, !dbg !14288
  %4 = load float*, float** %a.addr, align 8, !dbg !14289
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14289
  %5 = load float, float* %arrayidx2, align 4, !dbg !14289
  %6 = load float, float* %f.addr, align 4, !dbg !14290
  %mul3 = fmul float %5, %6, !dbg !14291
  %7 = load float*, float** %r.addr, align 8, !dbg !14292
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !14292
  store float %mul3, float* %arrayidx4, align 4, !dbg !14293
  %8 = load float*, float** %a.addr, align 8, !dbg !14294
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !14294
  %9 = load float, float* %arrayidx5, align 4, !dbg !14294
  %10 = load float, float* %f.addr, align 4, !dbg !14295
  %mul6 = fmul float %9, %10, !dbg !14296
  %11 = load float*, float** %r.addr, align 8, !dbg !14297
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !14297
  store float %mul6, float* %arrayidx7, align 4, !dbg !14298
  ret void, !dbg !14299
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @clouds(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !14300 {
entry:
  %retval = alloca i32, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !14303, metadata !DIExpression()), !dbg !14304
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !14305, metadata !DIExpression()), !dbg !14306
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !14307, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !14309, metadata !DIExpression()), !dbg !14310
  store i32 0, i32* %rv, align 4, !dbg !14310
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14311
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 2, !dbg !14312
  %1 = load float, float* %noisesize, align 8, !dbg !14312
  %2 = load float*, float** %texvec.addr, align 8, !dbg !14313
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !14313
  %3 = load float, float* %arrayidx, align 4, !dbg !14313
  %4 = load float*, float** %texvec.addr, align 8, !dbg !14314
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !14314
  %5 = load float, float* %arrayidx1, align 4, !dbg !14314
  %6 = load float*, float** %texvec.addr, align 8, !dbg !14315
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !14315
  %7 = load float, float* %arrayidx2, align 4, !dbg !14315
  %8 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14316
  %noisedepth = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 26, !dbg !14317
  %9 = load i16, i16* %noisedepth, align 4, !dbg !14317
  %conv = sext i16 %9 to i32, !dbg !14316
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14318
  %noisetype = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 27, !dbg !14319
  %11 = load i16, i16* %noisetype, align 2, !dbg !14319
  %conv3 = sext i16 %11 to i32, !dbg !14318
  %cmp = icmp ne i32 %conv3, 0, !dbg !14320
  %conv4 = zext i1 %cmp to i32, !dbg !14320
  %12 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14321
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 28, !dbg !14322
  %13 = load i16, i16* %noisebasis, align 8, !dbg !14322
  %conv5 = sext i16 %13 to i32, !dbg !14321
  %call = call float @BLI_gTurbulence(float %1, float %3, float %5, float %7, i32 %conv, i32 %conv4, i32 %conv5), !dbg !14323
  %14 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14324
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %14, i32 0, i32 0, !dbg !14325
  store float %call, float* %tin, align 8, !dbg !14326
  %15 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14327
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %15, i32 0, i32 6, !dbg !14329
  %16 = load float*, float** %nor, align 8, !dbg !14329
  %cmp6 = icmp ne float* %16, null, !dbg !14330
  br i1 %cmp6, label %if.then, label %if.end, !dbg !14331

if.then:                                          ; preds = %entry
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14332
  %noisesize8 = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 2, !dbg !14334
  %18 = load float, float* %noisesize8, align 8, !dbg !14334
  %19 = load float*, float** %texvec.addr, align 8, !dbg !14335
  %arrayidx9 = getelementptr inbounds float, float* %19, i64 0, !dbg !14335
  %20 = load float, float* %arrayidx9, align 4, !dbg !14335
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14336
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 49, !dbg !14337
  %22 = load float, float* %nabla, align 8, !dbg !14337
  %add = fadd float %20, %22, !dbg !14338
  %23 = load float*, float** %texvec.addr, align 8, !dbg !14339
  %arrayidx10 = getelementptr inbounds float, float* %23, i64 1, !dbg !14339
  %24 = load float, float* %arrayidx10, align 4, !dbg !14339
  %25 = load float*, float** %texvec.addr, align 8, !dbg !14340
  %arrayidx11 = getelementptr inbounds float, float* %25, i64 2, !dbg !14340
  %26 = load float, float* %arrayidx11, align 4, !dbg !14340
  %27 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14341
  %noisedepth12 = getelementptr inbounds %struct.Tex, %struct.Tex* %27, i32 0, i32 26, !dbg !14342
  %28 = load i16, i16* %noisedepth12, align 4, !dbg !14342
  %conv13 = sext i16 %28 to i32, !dbg !14341
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14343
  %noisetype14 = getelementptr inbounds %struct.Tex, %struct.Tex* %29, i32 0, i32 27, !dbg !14344
  %30 = load i16, i16* %noisetype14, align 2, !dbg !14344
  %conv15 = sext i16 %30 to i32, !dbg !14343
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !14345
  %conv17 = zext i1 %cmp16 to i32, !dbg !14345
  %31 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14346
  %noisebasis18 = getelementptr inbounds %struct.Tex, %struct.Tex* %31, i32 0, i32 28, !dbg !14347
  %32 = load i16, i16* %noisebasis18, align 8, !dbg !14347
  %conv19 = sext i16 %32 to i32, !dbg !14346
  %call20 = call float @BLI_gTurbulence(float %18, float %add, float %24, float %26, i32 %conv13, i32 %conv17, i32 %conv19), !dbg !14348
  %33 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14349
  %nor21 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %33, i32 0, i32 6, !dbg !14350
  %34 = load float*, float** %nor21, align 8, !dbg !14350
  %arrayidx22 = getelementptr inbounds float, float* %34, i64 0, !dbg !14349
  store float %call20, float* %arrayidx22, align 4, !dbg !14351
  %35 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14352
  %noisesize23 = getelementptr inbounds %struct.Tex, %struct.Tex* %35, i32 0, i32 2, !dbg !14353
  %36 = load float, float* %noisesize23, align 8, !dbg !14353
  %37 = load float*, float** %texvec.addr, align 8, !dbg !14354
  %arrayidx24 = getelementptr inbounds float, float* %37, i64 0, !dbg !14354
  %38 = load float, float* %arrayidx24, align 4, !dbg !14354
  %39 = load float*, float** %texvec.addr, align 8, !dbg !14355
  %arrayidx25 = getelementptr inbounds float, float* %39, i64 1, !dbg !14355
  %40 = load float, float* %arrayidx25, align 4, !dbg !14355
  %41 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14356
  %nabla26 = getelementptr inbounds %struct.Tex, %struct.Tex* %41, i32 0, i32 49, !dbg !14357
  %42 = load float, float* %nabla26, align 8, !dbg !14357
  %add27 = fadd float %40, %42, !dbg !14358
  %43 = load float*, float** %texvec.addr, align 8, !dbg !14359
  %arrayidx28 = getelementptr inbounds float, float* %43, i64 2, !dbg !14359
  %44 = load float, float* %arrayidx28, align 4, !dbg !14359
  %45 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14360
  %noisedepth29 = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 26, !dbg !14361
  %46 = load i16, i16* %noisedepth29, align 4, !dbg !14361
  %conv30 = sext i16 %46 to i32, !dbg !14360
  %47 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14362
  %noisetype31 = getelementptr inbounds %struct.Tex, %struct.Tex* %47, i32 0, i32 27, !dbg !14363
  %48 = load i16, i16* %noisetype31, align 2, !dbg !14363
  %conv32 = sext i16 %48 to i32, !dbg !14362
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !14364
  %conv34 = zext i1 %cmp33 to i32, !dbg !14364
  %49 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14365
  %noisebasis35 = getelementptr inbounds %struct.Tex, %struct.Tex* %49, i32 0, i32 28, !dbg !14366
  %50 = load i16, i16* %noisebasis35, align 8, !dbg !14366
  %conv36 = sext i16 %50 to i32, !dbg !14365
  %call37 = call float @BLI_gTurbulence(float %36, float %38, float %add27, float %44, i32 %conv30, i32 %conv34, i32 %conv36), !dbg !14367
  %51 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14368
  %nor38 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %51, i32 0, i32 6, !dbg !14369
  %52 = load float*, float** %nor38, align 8, !dbg !14369
  %arrayidx39 = getelementptr inbounds float, float* %52, i64 1, !dbg !14368
  store float %call37, float* %arrayidx39, align 4, !dbg !14370
  %53 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14371
  %noisesize40 = getelementptr inbounds %struct.Tex, %struct.Tex* %53, i32 0, i32 2, !dbg !14372
  %54 = load float, float* %noisesize40, align 8, !dbg !14372
  %55 = load float*, float** %texvec.addr, align 8, !dbg !14373
  %arrayidx41 = getelementptr inbounds float, float* %55, i64 0, !dbg !14373
  %56 = load float, float* %arrayidx41, align 4, !dbg !14373
  %57 = load float*, float** %texvec.addr, align 8, !dbg !14374
  %arrayidx42 = getelementptr inbounds float, float* %57, i64 1, !dbg !14374
  %58 = load float, float* %arrayidx42, align 4, !dbg !14374
  %59 = load float*, float** %texvec.addr, align 8, !dbg !14375
  %arrayidx43 = getelementptr inbounds float, float* %59, i64 2, !dbg !14375
  %60 = load float, float* %arrayidx43, align 4, !dbg !14375
  %61 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14376
  %nabla44 = getelementptr inbounds %struct.Tex, %struct.Tex* %61, i32 0, i32 49, !dbg !14377
  %62 = load float, float* %nabla44, align 8, !dbg !14377
  %add45 = fadd float %60, %62, !dbg !14378
  %63 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14379
  %noisedepth46 = getelementptr inbounds %struct.Tex, %struct.Tex* %63, i32 0, i32 26, !dbg !14380
  %64 = load i16, i16* %noisedepth46, align 4, !dbg !14380
  %conv47 = sext i16 %64 to i32, !dbg !14379
  %65 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14381
  %noisetype48 = getelementptr inbounds %struct.Tex, %struct.Tex* %65, i32 0, i32 27, !dbg !14382
  %66 = load i16, i16* %noisetype48, align 2, !dbg !14382
  %conv49 = sext i16 %66 to i32, !dbg !14381
  %cmp50 = icmp ne i32 %conv49, 0, !dbg !14383
  %conv51 = zext i1 %cmp50 to i32, !dbg !14383
  %67 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14384
  %noisebasis52 = getelementptr inbounds %struct.Tex, %struct.Tex* %67, i32 0, i32 28, !dbg !14385
  %68 = load i16, i16* %noisebasis52, align 8, !dbg !14385
  %conv53 = sext i16 %68 to i32, !dbg !14384
  %call54 = call float @BLI_gTurbulence(float %54, float %56, float %58, float %add45, i32 %conv47, i32 %conv51, i32 %conv53), !dbg !14386
  %69 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14387
  %nor55 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %69, i32 0, i32 6, !dbg !14388
  %70 = load float*, float** %nor55, align 8, !dbg !14388
  %arrayidx56 = getelementptr inbounds float, float* %70, i64 2, !dbg !14387
  store float %call54, float* %arrayidx56, align 4, !dbg !14389
  %71 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14390
  %72 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14391
  call void @tex_normal_derivate(%struct.Tex* %71, %struct.TexResult* %72), !dbg !14392
  %73 = load i32, i32* %rv, align 4, !dbg !14393
  %or = or i32 %73, 2, !dbg !14393
  store i32 %or, i32* %rv, align 4, !dbg !14393
  br label %if.end, !dbg !14394

if.end:                                           ; preds = %if.then, %entry
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14395
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %74, i32 0, i32 33, !dbg !14397
  %75 = load i16, i16* %stype, align 2, !dbg !14397
  %conv57 = sext i16 %75 to i32, !dbg !14395
  %cmp58 = icmp eq i32 %conv57, 1, !dbg !14398
  br i1 %cmp58, label %if.then60, label %if.end152, !dbg !14399

if.then60:                                        ; preds = %if.end
  %76 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14400
  %tin61 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %76, i32 0, i32 0, !dbg !14402
  %77 = load float, float* %tin61, align 8, !dbg !14402
  %78 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14403
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %78, i32 0, i32 1, !dbg !14404
  store float %77, float* %tr, align 4, !dbg !14405
  %79 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14406
  %noisesize62 = getelementptr inbounds %struct.Tex, %struct.Tex* %79, i32 0, i32 2, !dbg !14407
  %80 = load float, float* %noisesize62, align 8, !dbg !14407
  %81 = load float*, float** %texvec.addr, align 8, !dbg !14408
  %arrayidx63 = getelementptr inbounds float, float* %81, i64 1, !dbg !14408
  %82 = load float, float* %arrayidx63, align 4, !dbg !14408
  %83 = load float*, float** %texvec.addr, align 8, !dbg !14409
  %arrayidx64 = getelementptr inbounds float, float* %83, i64 0, !dbg !14409
  %84 = load float, float* %arrayidx64, align 4, !dbg !14409
  %85 = load float*, float** %texvec.addr, align 8, !dbg !14410
  %arrayidx65 = getelementptr inbounds float, float* %85, i64 2, !dbg !14410
  %86 = load float, float* %arrayidx65, align 4, !dbg !14410
  %87 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14411
  %noisedepth66 = getelementptr inbounds %struct.Tex, %struct.Tex* %87, i32 0, i32 26, !dbg !14412
  %88 = load i16, i16* %noisedepth66, align 4, !dbg !14412
  %conv67 = sext i16 %88 to i32, !dbg !14411
  %89 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14413
  %noisetype68 = getelementptr inbounds %struct.Tex, %struct.Tex* %89, i32 0, i32 27, !dbg !14414
  %90 = load i16, i16* %noisetype68, align 2, !dbg !14414
  %conv69 = sext i16 %90 to i32, !dbg !14413
  %cmp70 = icmp ne i32 %conv69, 0, !dbg !14415
  %conv71 = zext i1 %cmp70 to i32, !dbg !14415
  %91 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14416
  %noisebasis72 = getelementptr inbounds %struct.Tex, %struct.Tex* %91, i32 0, i32 28, !dbg !14417
  %92 = load i16, i16* %noisebasis72, align 8, !dbg !14417
  %conv73 = sext i16 %92 to i32, !dbg !14416
  %call74 = call float @BLI_gTurbulence(float %80, float %82, float %84, float %86, i32 %conv67, i32 %conv71, i32 %conv73), !dbg !14418
  %93 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14419
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %93, i32 0, i32 2, !dbg !14420
  store float %call74, float* %tg, align 8, !dbg !14421
  %94 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14422
  %noisesize75 = getelementptr inbounds %struct.Tex, %struct.Tex* %94, i32 0, i32 2, !dbg !14423
  %95 = load float, float* %noisesize75, align 8, !dbg !14423
  %96 = load float*, float** %texvec.addr, align 8, !dbg !14424
  %arrayidx76 = getelementptr inbounds float, float* %96, i64 1, !dbg !14424
  %97 = load float, float* %arrayidx76, align 4, !dbg !14424
  %98 = load float*, float** %texvec.addr, align 8, !dbg !14425
  %arrayidx77 = getelementptr inbounds float, float* %98, i64 2, !dbg !14425
  %99 = load float, float* %arrayidx77, align 4, !dbg !14425
  %100 = load float*, float** %texvec.addr, align 8, !dbg !14426
  %arrayidx78 = getelementptr inbounds float, float* %100, i64 0, !dbg !14426
  %101 = load float, float* %arrayidx78, align 4, !dbg !14426
  %102 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14427
  %noisedepth79 = getelementptr inbounds %struct.Tex, %struct.Tex* %102, i32 0, i32 26, !dbg !14428
  %103 = load i16, i16* %noisedepth79, align 4, !dbg !14428
  %conv80 = sext i16 %103 to i32, !dbg !14427
  %104 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14429
  %noisetype81 = getelementptr inbounds %struct.Tex, %struct.Tex* %104, i32 0, i32 27, !dbg !14430
  %105 = load i16, i16* %noisetype81, align 2, !dbg !14430
  %conv82 = sext i16 %105 to i32, !dbg !14429
  %cmp83 = icmp ne i32 %conv82, 0, !dbg !14431
  %conv84 = zext i1 %cmp83 to i32, !dbg !14431
  %106 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14432
  %noisebasis85 = getelementptr inbounds %struct.Tex, %struct.Tex* %106, i32 0, i32 28, !dbg !14433
  %107 = load i16, i16* %noisebasis85, align 8, !dbg !14433
  %conv86 = sext i16 %107 to i32, !dbg !14432
  %call87 = call float @BLI_gTurbulence(float %95, float %97, float %99, float %101, i32 %conv80, i32 %conv84, i32 %conv86), !dbg !14434
  %108 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14435
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %108, i32 0, i32 3, !dbg !14436
  store float %call87, float* %tb, align 4, !dbg !14437
  %109 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %109, i32 0, i32 7, !dbg !14438
  %110 = load float, float* %rfac, align 4, !dbg !14438
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tr88 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 1, !dbg !14438
  %112 = load float, float* %tr88, align 4, !dbg !14438
  %sub = fsub float %112, 5.000000e-01, !dbg !14438
  %113 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %113, i32 0, i32 5, !dbg !14438
  %114 = load float, float* %contrast, align 4, !dbg !14438
  %mul = fmul float %sub, %114, !dbg !14438
  %115 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %115, i32 0, i32 4, !dbg !14438
  %116 = load float, float* %bright, align 8, !dbg !14438
  %add89 = fadd float %mul, %116, !dbg !14438
  %sub90 = fsub float %add89, 5.000000e-01, !dbg !14438
  %mul91 = fmul float %110, %sub90, !dbg !14438
  %117 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tr92 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %117, i32 0, i32 1, !dbg !14438
  store float %mul91, float* %tr92, align 4, !dbg !14438
  %118 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %118, i32 0, i32 8, !dbg !14438
  %119 = load float, float* %gfac, align 8, !dbg !14438
  %120 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tg93 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %120, i32 0, i32 2, !dbg !14438
  %121 = load float, float* %tg93, align 8, !dbg !14438
  %sub94 = fsub float %121, 5.000000e-01, !dbg !14438
  %122 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %contrast95 = getelementptr inbounds %struct.Tex, %struct.Tex* %122, i32 0, i32 5, !dbg !14438
  %123 = load float, float* %contrast95, align 4, !dbg !14438
  %mul96 = fmul float %sub94, %123, !dbg !14438
  %124 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %bright97 = getelementptr inbounds %struct.Tex, %struct.Tex* %124, i32 0, i32 4, !dbg !14438
  %125 = load float, float* %bright97, align 8, !dbg !14438
  %add98 = fadd float %mul96, %125, !dbg !14438
  %sub99 = fsub float %add98, 5.000000e-01, !dbg !14438
  %mul100 = fmul float %119, %sub99, !dbg !14438
  %126 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tg101 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %126, i32 0, i32 2, !dbg !14438
  store float %mul100, float* %tg101, align 8, !dbg !14438
  %127 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %127, i32 0, i32 9, !dbg !14438
  %128 = load float, float* %bfac, align 4, !dbg !14438
  %129 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tb102 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %129, i32 0, i32 3, !dbg !14438
  %130 = load float, float* %tb102, align 4, !dbg !14438
  %sub103 = fsub float %130, 5.000000e-01, !dbg !14438
  %131 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %contrast104 = getelementptr inbounds %struct.Tex, %struct.Tex* %131, i32 0, i32 5, !dbg !14438
  %132 = load float, float* %contrast104, align 4, !dbg !14438
  %mul105 = fmul float %sub103, %132, !dbg !14438
  %133 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14438
  %bright106 = getelementptr inbounds %struct.Tex, %struct.Tex* %133, i32 0, i32 4, !dbg !14438
  %134 = load float, float* %bright106, align 8, !dbg !14438
  %add107 = fadd float %mul105, %134, !dbg !14438
  %sub108 = fsub float %add107, 5.000000e-01, !dbg !14438
  %mul109 = fmul float %128, %sub108, !dbg !14438
  %135 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14438
  %tb110 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %135, i32 0, i32 3, !dbg !14438
  store float %mul109, float* %tb110, align 4, !dbg !14438
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14439
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 31, !dbg !14439
  %137 = load i16, i16* %flag, align 2, !dbg !14439
  %conv111 = sext i16 %137 to i32, !dbg !14439
  %and = and i32 %conv111, 1024, !dbg !14439
  %tobool = icmp ne i32 %and, 0, !dbg !14439
  br i1 %tobool, label %if.end131, label %if.then112, !dbg !14438

if.then112:                                       ; preds = %if.then60
  %138 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14441
  %tr113 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %138, i32 0, i32 1, !dbg !14441
  %139 = load float, float* %tr113, align 4, !dbg !14441
  %cmp114 = fcmp olt float %139, 0.000000e+00, !dbg !14441
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !14444

if.then116:                                       ; preds = %if.then112
  %140 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14441
  %tr117 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %140, i32 0, i32 1, !dbg !14441
  store float 0.000000e+00, float* %tr117, align 4, !dbg !14441
  br label %if.end118, !dbg !14441

if.end118:                                        ; preds = %if.then116, %if.then112
  %141 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14445
  %tg119 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %141, i32 0, i32 2, !dbg !14445
  %142 = load float, float* %tg119, align 8, !dbg !14445
  %cmp120 = fcmp olt float %142, 0.000000e+00, !dbg !14445
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !14444

if.then122:                                       ; preds = %if.end118
  %143 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14445
  %tg123 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %143, i32 0, i32 2, !dbg !14445
  store float 0.000000e+00, float* %tg123, align 8, !dbg !14445
  br label %if.end124, !dbg !14445

if.end124:                                        ; preds = %if.then122, %if.end118
  %144 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14447
  %tb125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %144, i32 0, i32 3, !dbg !14447
  %145 = load float, float* %tb125, align 4, !dbg !14447
  %cmp126 = fcmp olt float %145, 0.000000e+00, !dbg !14447
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !14444

if.then128:                                       ; preds = %if.end124
  %146 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14447
  %tb129 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %146, i32 0, i32 3, !dbg !14447
  store float 0.000000e+00, float* %tb129, align 4, !dbg !14447
  br label %if.end130, !dbg !14447

if.end130:                                        ; preds = %if.then128, %if.end124
  br label %if.end131, !dbg !14444

if.end131:                                        ; preds = %if.end130, %if.then60
  %147 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14449
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %147, i32 0, i32 6, !dbg !14449
  %148 = load float, float* %saturation, align 8, !dbg !14449
  %cmp132 = fcmp une float %148, 1.000000e+00, !dbg !14449
  br i1 %cmp132, label %if.then134, label %if.end150, !dbg !14438

if.then134:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !14451, metadata !DIExpression()), !dbg !14453
  %149 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tr135 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %149, i32 0, i32 1, !dbg !14453
  %150 = load float, float* %tr135, align 4, !dbg !14453
  %151 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tg136 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %151, i32 0, i32 2, !dbg !14453
  %152 = load float, float* %tg136, align 8, !dbg !14453
  %153 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tb137 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %153, i32 0, i32 3, !dbg !14453
  %154 = load float, float* %tb137, align 4, !dbg !14453
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14453
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14453
  %add.ptr = getelementptr inbounds float, float* %arraydecay138, i64 1, !dbg !14453
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14453
  %add.ptr140 = getelementptr inbounds float, float* %arraydecay139, i64 2, !dbg !14453
  call void @rgb_to_hsv(float %150, float %152, float %154, float* %arraydecay, float* %add.ptr, float* %add.ptr140), !dbg !14453
  %155 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14453
  %saturation141 = getelementptr inbounds %struct.Tex, %struct.Tex* %155, i32 0, i32 6, !dbg !14453
  %156 = load float, float* %saturation141, align 8, !dbg !14453
  %arrayidx142 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !14453
  %157 = load float, float* %arrayidx142, align 4, !dbg !14453
  %mul143 = fmul float %157, %156, !dbg !14453
  store float %mul143, float* %arrayidx142, align 4, !dbg !14453
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14453
  %158 = load float, float* %arrayidx144, align 4, !dbg !14453
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !14453
  %159 = load float, float* %arrayidx145, align 4, !dbg !14453
  %arrayidx146 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !14453
  %160 = load float, float* %arrayidx146, align 4, !dbg !14453
  %161 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tr147 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %161, i32 0, i32 1, !dbg !14453
  %162 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tg148 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %162, i32 0, i32 2, !dbg !14453
  %163 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14453
  %tb149 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %163, i32 0, i32 3, !dbg !14453
  call void @hsv_to_rgb(float %158, float %159, float %160, float* %tr147, float* %tg148, float* %tb149), !dbg !14453
  br label %if.end150, !dbg !14453

if.end150:                                        ; preds = %if.then134, %if.end131
  %164 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14454
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %164, i32 0, i32 4, !dbg !14455
  store float 1.000000e+00, float* %ta, align 8, !dbg !14456
  %165 = load i32, i32* %rv, align 4, !dbg !14457
  %or151 = or i32 %165, 1, !dbg !14458
  store i32 %or151, i32* %retval, align 4, !dbg !14459
  br label %return, !dbg !14459

if.end152:                                        ; preds = %if.end
  %166 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14460
  %tin153 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %166, i32 0, i32 0, !dbg !14460
  %167 = load float, float* %tin153, align 8, !dbg !14460
  %sub154 = fsub float %167, 5.000000e-01, !dbg !14460
  %168 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14460
  %contrast155 = getelementptr inbounds %struct.Tex, %struct.Tex* %168, i32 0, i32 5, !dbg !14460
  %169 = load float, float* %contrast155, align 4, !dbg !14460
  %mul156 = fmul float %sub154, %169, !dbg !14460
  %170 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14460
  %bright157 = getelementptr inbounds %struct.Tex, %struct.Tex* %170, i32 0, i32 4, !dbg !14460
  %171 = load float, float* %bright157, align 8, !dbg !14460
  %add158 = fadd float %mul156, %171, !dbg !14460
  %sub159 = fsub float %add158, 5.000000e-01, !dbg !14460
  %172 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14460
  %tin160 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %172, i32 0, i32 0, !dbg !14460
  store float %sub159, float* %tin160, align 8, !dbg !14460
  %173 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14461
  %flag161 = getelementptr inbounds %struct.Tex, %struct.Tex* %173, i32 0, i32 31, !dbg !14461
  %174 = load i16, i16* %flag161, align 2, !dbg !14461
  %conv162 = sext i16 %174 to i32, !dbg !14461
  %and163 = and i32 %conv162, 1024, !dbg !14461
  %tobool164 = icmp ne i32 %and163, 0, !dbg !14461
  br i1 %tobool164, label %if.end178, label %if.then165, !dbg !14460

if.then165:                                       ; preds = %if.end152
  %175 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14463
  %tin166 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %175, i32 0, i32 0, !dbg !14463
  %176 = load float, float* %tin166, align 8, !dbg !14463
  %cmp167 = fcmp olt float %176, 0.000000e+00, !dbg !14463
  br i1 %cmp167, label %if.then169, label %if.else, !dbg !14466

if.then169:                                       ; preds = %if.then165
  %177 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14463
  %tin170 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %177, i32 0, i32 0, !dbg !14463
  store float 0.000000e+00, float* %tin170, align 8, !dbg !14463
  br label %if.end177, !dbg !14463

if.else:                                          ; preds = %if.then165
  %178 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14467
  %tin171 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %178, i32 0, i32 0, !dbg !14467
  %179 = load float, float* %tin171, align 8, !dbg !14467
  %cmp172 = fcmp ogt float %179, 1.000000e+00, !dbg !14467
  br i1 %cmp172, label %if.then174, label %if.end176, !dbg !14463

if.then174:                                       ; preds = %if.else
  %180 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14467
  %tin175 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %180, i32 0, i32 0, !dbg !14467
  store float 1.000000e+00, float* %tin175, align 8, !dbg !14467
  br label %if.end176, !dbg !14467

if.end176:                                        ; preds = %if.then174, %if.else
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then169
  br label %if.end178, !dbg !14466

if.end178:                                        ; preds = %if.end177, %if.end152
  %181 = load i32, i32* %rv, align 4, !dbg !14469
  store i32 %181, i32* %retval, align 4, !dbg !14470
  br label %return, !dbg !14470

return:                                           ; preds = %if.end178, %if.end150
  %182 = load i32, i32* %retval, align 4, !dbg !14471
  ret i32 %182, !dbg !14471
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wood(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !14472 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !14473, metadata !DIExpression()), !dbg !14474
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !14475, metadata !DIExpression()), !dbg !14476
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !14477, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !14479, metadata !DIExpression()), !dbg !14480
  store i32 0, i32* %rv, align 4, !dbg !14480
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14481
  %1 = load float*, float** %texvec.addr, align 8, !dbg !14482
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !14482
  %2 = load float, float* %arrayidx, align 4, !dbg !14482
  %3 = load float*, float** %texvec.addr, align 8, !dbg !14483
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !14483
  %4 = load float, float* %arrayidx1, align 4, !dbg !14483
  %5 = load float*, float** %texvec.addr, align 8, !dbg !14484
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !14484
  %6 = load float, float* %arrayidx2, align 4, !dbg !14484
  %call = call float @wood_int(%struct.Tex* %0, float %2, float %4, float %6), !dbg !14485
  %7 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14486
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %7, i32 0, i32 0, !dbg !14487
  store float %call, float* %tin, align 8, !dbg !14488
  %8 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14489
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %8, i32 0, i32 6, !dbg !14491
  %9 = load float*, float** %nor, align 8, !dbg !14491
  %cmp = icmp ne float* %9, null, !dbg !14492
  br i1 %cmp, label %if.then, label %if.end, !dbg !14493

if.then:                                          ; preds = %entry
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14494
  %11 = load float*, float** %texvec.addr, align 8, !dbg !14496
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 0, !dbg !14496
  %12 = load float, float* %arrayidx3, align 4, !dbg !14496
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14497
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 49, !dbg !14498
  %14 = load float, float* %nabla, align 8, !dbg !14498
  %add = fadd float %12, %14, !dbg !14499
  %15 = load float*, float** %texvec.addr, align 8, !dbg !14500
  %arrayidx4 = getelementptr inbounds float, float* %15, i64 1, !dbg !14500
  %16 = load float, float* %arrayidx4, align 4, !dbg !14500
  %17 = load float*, float** %texvec.addr, align 8, !dbg !14501
  %arrayidx5 = getelementptr inbounds float, float* %17, i64 2, !dbg !14501
  %18 = load float, float* %arrayidx5, align 4, !dbg !14501
  %call6 = call float @wood_int(%struct.Tex* %10, float %add, float %16, float %18), !dbg !14502
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14503
  %nor7 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 6, !dbg !14504
  %20 = load float*, float** %nor7, align 8, !dbg !14504
  %arrayidx8 = getelementptr inbounds float, float* %20, i64 0, !dbg !14503
  store float %call6, float* %arrayidx8, align 4, !dbg !14505
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14506
  %22 = load float*, float** %texvec.addr, align 8, !dbg !14507
  %arrayidx9 = getelementptr inbounds float, float* %22, i64 0, !dbg !14507
  %23 = load float, float* %arrayidx9, align 4, !dbg !14507
  %24 = load float*, float** %texvec.addr, align 8, !dbg !14508
  %arrayidx10 = getelementptr inbounds float, float* %24, i64 1, !dbg !14508
  %25 = load float, float* %arrayidx10, align 4, !dbg !14508
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14509
  %nabla11 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 49, !dbg !14510
  %27 = load float, float* %nabla11, align 8, !dbg !14510
  %add12 = fadd float %25, %27, !dbg !14511
  %28 = load float*, float** %texvec.addr, align 8, !dbg !14512
  %arrayidx13 = getelementptr inbounds float, float* %28, i64 2, !dbg !14512
  %29 = load float, float* %arrayidx13, align 4, !dbg !14512
  %call14 = call float @wood_int(%struct.Tex* %21, float %23, float %add12, float %29), !dbg !14513
  %30 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14514
  %nor15 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %30, i32 0, i32 6, !dbg !14515
  %31 = load float*, float** %nor15, align 8, !dbg !14515
  %arrayidx16 = getelementptr inbounds float, float* %31, i64 1, !dbg !14514
  store float %call14, float* %arrayidx16, align 4, !dbg !14516
  %32 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14517
  %33 = load float*, float** %texvec.addr, align 8, !dbg !14518
  %arrayidx17 = getelementptr inbounds float, float* %33, i64 0, !dbg !14518
  %34 = load float, float* %arrayidx17, align 4, !dbg !14518
  %35 = load float*, float** %texvec.addr, align 8, !dbg !14519
  %arrayidx18 = getelementptr inbounds float, float* %35, i64 1, !dbg !14519
  %36 = load float, float* %arrayidx18, align 4, !dbg !14519
  %37 = load float*, float** %texvec.addr, align 8, !dbg !14520
  %arrayidx19 = getelementptr inbounds float, float* %37, i64 2, !dbg !14520
  %38 = load float, float* %arrayidx19, align 4, !dbg !14520
  %39 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14521
  %nabla20 = getelementptr inbounds %struct.Tex, %struct.Tex* %39, i32 0, i32 49, !dbg !14522
  %40 = load float, float* %nabla20, align 8, !dbg !14522
  %add21 = fadd float %38, %40, !dbg !14523
  %call22 = call float @wood_int(%struct.Tex* %32, float %34, float %36, float %add21), !dbg !14524
  %41 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14525
  %nor23 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %41, i32 0, i32 6, !dbg !14526
  %42 = load float*, float** %nor23, align 8, !dbg !14526
  %arrayidx24 = getelementptr inbounds float, float* %42, i64 2, !dbg !14525
  store float %call22, float* %arrayidx24, align 4, !dbg !14527
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14528
  %44 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14529
  call void @tex_normal_derivate(%struct.Tex* %43, %struct.TexResult* %44), !dbg !14530
  %45 = load i32, i32* %rv, align 4, !dbg !14531
  %or = or i32 %45, 2, !dbg !14531
  store i32 %or, i32* %rv, align 4, !dbg !14531
  br label %if.end, !dbg !14532

if.end:                                           ; preds = %if.then, %entry
  %46 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14533
  %tin25 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %46, i32 0, i32 0, !dbg !14533
  %47 = load float, float* %tin25, align 8, !dbg !14533
  %sub = fsub float %47, 5.000000e-01, !dbg !14533
  %48 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14533
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %48, i32 0, i32 5, !dbg !14533
  %49 = load float, float* %contrast, align 4, !dbg !14533
  %mul = fmul float %sub, %49, !dbg !14533
  %50 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14533
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %50, i32 0, i32 4, !dbg !14533
  %51 = load float, float* %bright, align 8, !dbg !14533
  %add26 = fadd float %mul, %51, !dbg !14533
  %sub27 = fsub float %add26, 5.000000e-01, !dbg !14533
  %52 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14533
  %tin28 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %52, i32 0, i32 0, !dbg !14533
  store float %sub27, float* %tin28, align 8, !dbg !14533
  %53 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14534
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %53, i32 0, i32 31, !dbg !14534
  %54 = load i16, i16* %flag, align 2, !dbg !14534
  %conv = sext i16 %54 to i32, !dbg !14534
  %and = and i32 %conv, 1024, !dbg !14534
  %tobool = icmp ne i32 %and, 0, !dbg !14534
  br i1 %tobool, label %if.end42, label %if.then29, !dbg !14533

if.then29:                                        ; preds = %if.end
  %55 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14536
  %tin30 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %55, i32 0, i32 0, !dbg !14536
  %56 = load float, float* %tin30, align 8, !dbg !14536
  %cmp31 = fcmp olt float %56, 0.000000e+00, !dbg !14536
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !14539

if.then33:                                        ; preds = %if.then29
  %57 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14536
  %tin34 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %57, i32 0, i32 0, !dbg !14536
  store float 0.000000e+00, float* %tin34, align 8, !dbg !14536
  br label %if.end41, !dbg !14536

if.else:                                          ; preds = %if.then29
  %58 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14540
  %tin35 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %58, i32 0, i32 0, !dbg !14540
  %59 = load float, float* %tin35, align 8, !dbg !14540
  %cmp36 = fcmp ogt float %59, 1.000000e+00, !dbg !14540
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !14536

if.then38:                                        ; preds = %if.else
  %60 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14540
  %tin39 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %60, i32 0, i32 0, !dbg !14540
  store float 1.000000e+00, float* %tin39, align 8, !dbg !14540
  br label %if.end40, !dbg !14540

if.end40:                                         ; preds = %if.then38, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !14539

if.end42:                                         ; preds = %if.end41, %if.end
  %61 = load i32, i32* %rv, align 4, !dbg !14542
  ret i32 %61, !dbg !14543
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @marble(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !14544 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !14545, metadata !DIExpression()), !dbg !14546
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !14547, metadata !DIExpression()), !dbg !14548
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !14549, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !14551, metadata !DIExpression()), !dbg !14552
  store i32 0, i32* %rv, align 4, !dbg !14552
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14553
  %1 = load float*, float** %texvec.addr, align 8, !dbg !14554
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !14554
  %2 = load float, float* %arrayidx, align 4, !dbg !14554
  %3 = load float*, float** %texvec.addr, align 8, !dbg !14555
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !14555
  %4 = load float, float* %arrayidx1, align 4, !dbg !14555
  %5 = load float*, float** %texvec.addr, align 8, !dbg !14556
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !14556
  %6 = load float, float* %arrayidx2, align 4, !dbg !14556
  %call = call float @marble_int(%struct.Tex* %0, float %2, float %4, float %6), !dbg !14557
  %7 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14558
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %7, i32 0, i32 0, !dbg !14559
  store float %call, float* %tin, align 8, !dbg !14560
  %8 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14561
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %8, i32 0, i32 6, !dbg !14563
  %9 = load float*, float** %nor, align 8, !dbg !14563
  %cmp = icmp ne float* %9, null, !dbg !14564
  br i1 %cmp, label %if.then, label %if.end, !dbg !14565

if.then:                                          ; preds = %entry
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14566
  %11 = load float*, float** %texvec.addr, align 8, !dbg !14568
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 0, !dbg !14568
  %12 = load float, float* %arrayidx3, align 4, !dbg !14568
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14569
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 49, !dbg !14570
  %14 = load float, float* %nabla, align 8, !dbg !14570
  %add = fadd float %12, %14, !dbg !14571
  %15 = load float*, float** %texvec.addr, align 8, !dbg !14572
  %arrayidx4 = getelementptr inbounds float, float* %15, i64 1, !dbg !14572
  %16 = load float, float* %arrayidx4, align 4, !dbg !14572
  %17 = load float*, float** %texvec.addr, align 8, !dbg !14573
  %arrayidx5 = getelementptr inbounds float, float* %17, i64 2, !dbg !14573
  %18 = load float, float* %arrayidx5, align 4, !dbg !14573
  %call6 = call float @marble_int(%struct.Tex* %10, float %add, float %16, float %18), !dbg !14574
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14575
  %nor7 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 6, !dbg !14576
  %20 = load float*, float** %nor7, align 8, !dbg !14576
  %arrayidx8 = getelementptr inbounds float, float* %20, i64 0, !dbg !14575
  store float %call6, float* %arrayidx8, align 4, !dbg !14577
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14578
  %22 = load float*, float** %texvec.addr, align 8, !dbg !14579
  %arrayidx9 = getelementptr inbounds float, float* %22, i64 0, !dbg !14579
  %23 = load float, float* %arrayidx9, align 4, !dbg !14579
  %24 = load float*, float** %texvec.addr, align 8, !dbg !14580
  %arrayidx10 = getelementptr inbounds float, float* %24, i64 1, !dbg !14580
  %25 = load float, float* %arrayidx10, align 4, !dbg !14580
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14581
  %nabla11 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 49, !dbg !14582
  %27 = load float, float* %nabla11, align 8, !dbg !14582
  %add12 = fadd float %25, %27, !dbg !14583
  %28 = load float*, float** %texvec.addr, align 8, !dbg !14584
  %arrayidx13 = getelementptr inbounds float, float* %28, i64 2, !dbg !14584
  %29 = load float, float* %arrayidx13, align 4, !dbg !14584
  %call14 = call float @marble_int(%struct.Tex* %21, float %23, float %add12, float %29), !dbg !14585
  %30 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14586
  %nor15 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %30, i32 0, i32 6, !dbg !14587
  %31 = load float*, float** %nor15, align 8, !dbg !14587
  %arrayidx16 = getelementptr inbounds float, float* %31, i64 1, !dbg !14586
  store float %call14, float* %arrayidx16, align 4, !dbg !14588
  %32 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14589
  %33 = load float*, float** %texvec.addr, align 8, !dbg !14590
  %arrayidx17 = getelementptr inbounds float, float* %33, i64 0, !dbg !14590
  %34 = load float, float* %arrayidx17, align 4, !dbg !14590
  %35 = load float*, float** %texvec.addr, align 8, !dbg !14591
  %arrayidx18 = getelementptr inbounds float, float* %35, i64 1, !dbg !14591
  %36 = load float, float* %arrayidx18, align 4, !dbg !14591
  %37 = load float*, float** %texvec.addr, align 8, !dbg !14592
  %arrayidx19 = getelementptr inbounds float, float* %37, i64 2, !dbg !14592
  %38 = load float, float* %arrayidx19, align 4, !dbg !14592
  %39 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14593
  %nabla20 = getelementptr inbounds %struct.Tex, %struct.Tex* %39, i32 0, i32 49, !dbg !14594
  %40 = load float, float* %nabla20, align 8, !dbg !14594
  %add21 = fadd float %38, %40, !dbg !14595
  %call22 = call float @marble_int(%struct.Tex* %32, float %34, float %36, float %add21), !dbg !14596
  %41 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14597
  %nor23 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %41, i32 0, i32 6, !dbg !14598
  %42 = load float*, float** %nor23, align 8, !dbg !14598
  %arrayidx24 = getelementptr inbounds float, float* %42, i64 2, !dbg !14597
  store float %call22, float* %arrayidx24, align 4, !dbg !14599
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14600
  %44 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14601
  call void @tex_normal_derivate(%struct.Tex* %43, %struct.TexResult* %44), !dbg !14602
  %45 = load i32, i32* %rv, align 4, !dbg !14603
  %or = or i32 %45, 2, !dbg !14603
  store i32 %or, i32* %rv, align 4, !dbg !14603
  br label %if.end, !dbg !14604

if.end:                                           ; preds = %if.then, %entry
  %46 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14605
  %tin25 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %46, i32 0, i32 0, !dbg !14605
  %47 = load float, float* %tin25, align 8, !dbg !14605
  %sub = fsub float %47, 5.000000e-01, !dbg !14605
  %48 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14605
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %48, i32 0, i32 5, !dbg !14605
  %49 = load float, float* %contrast, align 4, !dbg !14605
  %mul = fmul float %sub, %49, !dbg !14605
  %50 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14605
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %50, i32 0, i32 4, !dbg !14605
  %51 = load float, float* %bright, align 8, !dbg !14605
  %add26 = fadd float %mul, %51, !dbg !14605
  %sub27 = fsub float %add26, 5.000000e-01, !dbg !14605
  %52 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14605
  %tin28 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %52, i32 0, i32 0, !dbg !14605
  store float %sub27, float* %tin28, align 8, !dbg !14605
  %53 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14606
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %53, i32 0, i32 31, !dbg !14606
  %54 = load i16, i16* %flag, align 2, !dbg !14606
  %conv = sext i16 %54 to i32, !dbg !14606
  %and = and i32 %conv, 1024, !dbg !14606
  %tobool = icmp ne i32 %and, 0, !dbg !14606
  br i1 %tobool, label %if.end42, label %if.then29, !dbg !14605

if.then29:                                        ; preds = %if.end
  %55 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14608
  %tin30 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %55, i32 0, i32 0, !dbg !14608
  %56 = load float, float* %tin30, align 8, !dbg !14608
  %cmp31 = fcmp olt float %56, 0.000000e+00, !dbg !14608
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !14611

if.then33:                                        ; preds = %if.then29
  %57 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14608
  %tin34 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %57, i32 0, i32 0, !dbg !14608
  store float 0.000000e+00, float* %tin34, align 8, !dbg !14608
  br label %if.end41, !dbg !14608

if.else:                                          ; preds = %if.then29
  %58 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14612
  %tin35 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %58, i32 0, i32 0, !dbg !14612
  %59 = load float, float* %tin35, align 8, !dbg !14612
  %cmp36 = fcmp ogt float %59, 1.000000e+00, !dbg !14612
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !14608

if.then38:                                        ; preds = %if.else
  %60 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14612
  %tin39 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %60, i32 0, i32 0, !dbg !14612
  store float 1.000000e+00, float* %tin39, align 8, !dbg !14612
  br label %if.end40, !dbg !14612

if.end40:                                         ; preds = %if.then38, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !14611

if.end42:                                         ; preds = %if.end41, %if.end
  %61 = load i32, i32* %rv, align 4, !dbg !14614
  ret i32 %61, !dbg !14615
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @magic(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !14616 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  %turb = alloca float, align 4
  %n = alloca i32, align 4
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !14617, metadata !DIExpression()), !dbg !14618
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !14621, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.declare(metadata float* %x, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.declare(metadata float* %y, metadata !14625, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.declare(metadata float* %z, metadata !14627, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.declare(metadata float* %turb, metadata !14629, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14631, metadata !DIExpression()), !dbg !14632
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14633
  %noisedepth = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 26, !dbg !14634
  %1 = load i16, i16* %noisedepth, align 4, !dbg !14634
  %conv = sext i16 %1 to i32, !dbg !14633
  store i32 %conv, i32* %n, align 4, !dbg !14635
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14636
  %turbul = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 3, !dbg !14637
  %3 = load float, float* %turbul, align 4, !dbg !14637
  %div = fdiv float %3, 5.000000e+00, !dbg !14638
  store float %div, float* %turb, align 4, !dbg !14639
  %4 = load float*, float** %texvec.addr, align 8, !dbg !14640
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !14640
  %5 = load float, float* %arrayidx, align 4, !dbg !14640
  %6 = load float*, float** %texvec.addr, align 8, !dbg !14641
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 1, !dbg !14641
  %7 = load float, float* %arrayidx1, align 4, !dbg !14641
  %add = fadd float %5, %7, !dbg !14642
  %8 = load float*, float** %texvec.addr, align 8, !dbg !14643
  %arrayidx2 = getelementptr inbounds float, float* %8, i64 2, !dbg !14643
  %9 = load float, float* %arrayidx2, align 4, !dbg !14643
  %add3 = fadd float %add, %9, !dbg !14644
  %mul = fmul float %add3, 5.000000e+00, !dbg !14645
  %call = call float @sinf(float %mul) #7, !dbg !14646
  store float %call, float* %x, align 4, !dbg !14647
  %10 = load float*, float** %texvec.addr, align 8, !dbg !14648
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !14648
  %11 = load float, float* %arrayidx4, align 4, !dbg !14648
  %fneg = fneg float %11, !dbg !14649
  %12 = load float*, float** %texvec.addr, align 8, !dbg !14650
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !14650
  %13 = load float, float* %arrayidx5, align 4, !dbg !14650
  %add6 = fadd float %fneg, %13, !dbg !14651
  %14 = load float*, float** %texvec.addr, align 8, !dbg !14652
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 2, !dbg !14652
  %15 = load float, float* %arrayidx7, align 4, !dbg !14652
  %sub = fsub float %add6, %15, !dbg !14653
  %mul8 = fmul float %sub, 5.000000e+00, !dbg !14654
  %call9 = call float @cosf(float %mul8) #7, !dbg !14655
  store float %call9, float* %y, align 4, !dbg !14656
  %16 = load float*, float** %texvec.addr, align 8, !dbg !14657
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 0, !dbg !14657
  %17 = load float, float* %arrayidx10, align 4, !dbg !14657
  %fneg11 = fneg float %17, !dbg !14658
  %18 = load float*, float** %texvec.addr, align 8, !dbg !14659
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !14659
  %19 = load float, float* %arrayidx12, align 4, !dbg !14659
  %sub13 = fsub float %fneg11, %19, !dbg !14660
  %20 = load float*, float** %texvec.addr, align 8, !dbg !14661
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 2, !dbg !14661
  %21 = load float, float* %arrayidx14, align 4, !dbg !14661
  %add15 = fadd float %sub13, %21, !dbg !14662
  %mul16 = fmul float %add15, 5.000000e+00, !dbg !14663
  %call17 = call float @cosf(float %mul16) #7, !dbg !14664
  %fneg18 = fneg float %call17, !dbg !14665
  store float %fneg18, float* %z, align 4, !dbg !14666
  %22 = load i32, i32* %n, align 4, !dbg !14667
  %cmp = icmp sgt i32 %22, 0, !dbg !14669
  br i1 %cmp, label %if.then, label %if.end109, !dbg !14670

if.then:                                          ; preds = %entry
  %23 = load float, float* %turb, align 4, !dbg !14671
  %24 = load float, float* %x, align 4, !dbg !14673
  %mul20 = fmul float %24, %23, !dbg !14673
  store float %mul20, float* %x, align 4, !dbg !14673
  %25 = load float, float* %turb, align 4, !dbg !14674
  %26 = load float, float* %y, align 4, !dbg !14675
  %mul21 = fmul float %26, %25, !dbg !14675
  store float %mul21, float* %y, align 4, !dbg !14675
  %27 = load float, float* %turb, align 4, !dbg !14676
  %28 = load float, float* %z, align 4, !dbg !14677
  %mul22 = fmul float %28, %27, !dbg !14677
  store float %mul22, float* %z, align 4, !dbg !14677
  %29 = load float, float* %x, align 4, !dbg !14678
  %30 = load float, float* %y, align 4, !dbg !14679
  %sub23 = fsub float %29, %30, !dbg !14680
  %31 = load float, float* %z, align 4, !dbg !14681
  %add24 = fadd float %sub23, %31, !dbg !14682
  %call25 = call float @cosf(float %add24) #7, !dbg !14683
  %fneg26 = fneg float %call25, !dbg !14684
  store float %fneg26, float* %y, align 4, !dbg !14685
  %32 = load float, float* %turb, align 4, !dbg !14686
  %33 = load float, float* %y, align 4, !dbg !14687
  %mul27 = fmul float %33, %32, !dbg !14687
  store float %mul27, float* %y, align 4, !dbg !14687
  %34 = load i32, i32* %n, align 4, !dbg !14688
  %cmp28 = icmp sgt i32 %34, 1, !dbg !14690
  br i1 %cmp28, label %if.then30, label %if.end108, !dbg !14691

if.then30:                                        ; preds = %if.then
  %35 = load float, float* %x, align 4, !dbg !14692
  %36 = load float, float* %y, align 4, !dbg !14694
  %sub31 = fsub float %35, %36, !dbg !14695
  %37 = load float, float* %z, align 4, !dbg !14696
  %sub32 = fsub float %sub31, %37, !dbg !14697
  %call33 = call float @cosf(float %sub32) #7, !dbg !14698
  store float %call33, float* %x, align 4, !dbg !14699
  %38 = load float, float* %turb, align 4, !dbg !14700
  %39 = load float, float* %x, align 4, !dbg !14701
  %mul34 = fmul float %39, %38, !dbg !14701
  store float %mul34, float* %x, align 4, !dbg !14701
  %40 = load i32, i32* %n, align 4, !dbg !14702
  %cmp35 = icmp sgt i32 %40, 2, !dbg !14704
  br i1 %cmp35, label %if.then37, label %if.end107, !dbg !14705

if.then37:                                        ; preds = %if.then30
  %41 = load float, float* %x, align 4, !dbg !14706
  %fneg38 = fneg float %41, !dbg !14708
  %42 = load float, float* %y, align 4, !dbg !14709
  %sub39 = fsub float %fneg38, %42, !dbg !14710
  %43 = load float, float* %z, align 4, !dbg !14711
  %sub40 = fsub float %sub39, %43, !dbg !14712
  %call41 = call float @sinf(float %sub40) #7, !dbg !14713
  store float %call41, float* %z, align 4, !dbg !14714
  %44 = load float, float* %turb, align 4, !dbg !14715
  %45 = load float, float* %z, align 4, !dbg !14716
  %mul42 = fmul float %45, %44, !dbg !14716
  store float %mul42, float* %z, align 4, !dbg !14716
  %46 = load i32, i32* %n, align 4, !dbg !14717
  %cmp43 = icmp sgt i32 %46, 3, !dbg !14719
  br i1 %cmp43, label %if.then45, label %if.end106, !dbg !14720

if.then45:                                        ; preds = %if.then37
  %47 = load float, float* %x, align 4, !dbg !14721
  %fneg46 = fneg float %47, !dbg !14723
  %48 = load float, float* %y, align 4, !dbg !14724
  %add47 = fadd float %fneg46, %48, !dbg !14725
  %49 = load float, float* %z, align 4, !dbg !14726
  %sub48 = fsub float %add47, %49, !dbg !14727
  %call49 = call float @cosf(float %sub48) #7, !dbg !14728
  %fneg50 = fneg float %call49, !dbg !14729
  store float %fneg50, float* %x, align 4, !dbg !14730
  %50 = load float, float* %turb, align 4, !dbg !14731
  %51 = load float, float* %x, align 4, !dbg !14732
  %mul51 = fmul float %51, %50, !dbg !14732
  store float %mul51, float* %x, align 4, !dbg !14732
  %52 = load i32, i32* %n, align 4, !dbg !14733
  %cmp52 = icmp sgt i32 %52, 4, !dbg !14735
  br i1 %cmp52, label %if.then54, label %if.end105, !dbg !14736

if.then54:                                        ; preds = %if.then45
  %53 = load float, float* %x, align 4, !dbg !14737
  %fneg55 = fneg float %53, !dbg !14739
  %54 = load float, float* %y, align 4, !dbg !14740
  %add56 = fadd float %fneg55, %54, !dbg !14741
  %55 = load float, float* %z, align 4, !dbg !14742
  %add57 = fadd float %add56, %55, !dbg !14743
  %call58 = call float @sinf(float %add57) #7, !dbg !14744
  %fneg59 = fneg float %call58, !dbg !14745
  store float %fneg59, float* %y, align 4, !dbg !14746
  %56 = load float, float* %turb, align 4, !dbg !14747
  %57 = load float, float* %y, align 4, !dbg !14748
  %mul60 = fmul float %57, %56, !dbg !14748
  store float %mul60, float* %y, align 4, !dbg !14748
  %58 = load i32, i32* %n, align 4, !dbg !14749
  %cmp61 = icmp sgt i32 %58, 5, !dbg !14751
  br i1 %cmp61, label %if.then63, label %if.end104, !dbg !14752

if.then63:                                        ; preds = %if.then54
  %59 = load float, float* %x, align 4, !dbg !14753
  %fneg64 = fneg float %59, !dbg !14755
  %60 = load float, float* %y, align 4, !dbg !14756
  %add65 = fadd float %fneg64, %60, !dbg !14757
  %61 = load float, float* %z, align 4, !dbg !14758
  %add66 = fadd float %add65, %61, !dbg !14759
  %call67 = call float @cosf(float %add66) #7, !dbg !14760
  %fneg68 = fneg float %call67, !dbg !14761
  store float %fneg68, float* %y, align 4, !dbg !14762
  %62 = load float, float* %turb, align 4, !dbg !14763
  %63 = load float, float* %y, align 4, !dbg !14764
  %mul69 = fmul float %63, %62, !dbg !14764
  store float %mul69, float* %y, align 4, !dbg !14764
  %64 = load i32, i32* %n, align 4, !dbg !14765
  %cmp70 = icmp sgt i32 %64, 6, !dbg !14767
  br i1 %cmp70, label %if.then72, label %if.end103, !dbg !14768

if.then72:                                        ; preds = %if.then63
  %65 = load float, float* %x, align 4, !dbg !14769
  %66 = load float, float* %y, align 4, !dbg !14771
  %add73 = fadd float %65, %66, !dbg !14772
  %67 = load float, float* %z, align 4, !dbg !14773
  %add74 = fadd float %add73, %67, !dbg !14774
  %call75 = call float @cosf(float %add74) #7, !dbg !14775
  store float %call75, float* %x, align 4, !dbg !14776
  %68 = load float, float* %turb, align 4, !dbg !14777
  %69 = load float, float* %x, align 4, !dbg !14778
  %mul76 = fmul float %69, %68, !dbg !14778
  store float %mul76, float* %x, align 4, !dbg !14778
  %70 = load i32, i32* %n, align 4, !dbg !14779
  %cmp77 = icmp sgt i32 %70, 7, !dbg !14781
  br i1 %cmp77, label %if.then79, label %if.end102, !dbg !14782

if.then79:                                        ; preds = %if.then72
  %71 = load float, float* %x, align 4, !dbg !14783
  %72 = load float, float* %y, align 4, !dbg !14785
  %add80 = fadd float %71, %72, !dbg !14786
  %73 = load float, float* %z, align 4, !dbg !14787
  %sub81 = fsub float %add80, %73, !dbg !14788
  %call82 = call float @sinf(float %sub81) #7, !dbg !14789
  store float %call82, float* %z, align 4, !dbg !14790
  %74 = load float, float* %turb, align 4, !dbg !14791
  %75 = load float, float* %z, align 4, !dbg !14792
  %mul83 = fmul float %75, %74, !dbg !14792
  store float %mul83, float* %z, align 4, !dbg !14792
  %76 = load i32, i32* %n, align 4, !dbg !14793
  %cmp84 = icmp sgt i32 %76, 8, !dbg !14795
  br i1 %cmp84, label %if.then86, label %if.end101, !dbg !14796

if.then86:                                        ; preds = %if.then79
  %77 = load float, float* %x, align 4, !dbg !14797
  %fneg87 = fneg float %77, !dbg !14799
  %78 = load float, float* %y, align 4, !dbg !14800
  %sub88 = fsub float %fneg87, %78, !dbg !14801
  %79 = load float, float* %z, align 4, !dbg !14802
  %add89 = fadd float %sub88, %79, !dbg !14803
  %call90 = call float @cosf(float %add89) #7, !dbg !14804
  %fneg91 = fneg float %call90, !dbg !14805
  store float %fneg91, float* %x, align 4, !dbg !14806
  %80 = load float, float* %turb, align 4, !dbg !14807
  %81 = load float, float* %x, align 4, !dbg !14808
  %mul92 = fmul float %81, %80, !dbg !14808
  store float %mul92, float* %x, align 4, !dbg !14808
  %82 = load i32, i32* %n, align 4, !dbg !14809
  %cmp93 = icmp sgt i32 %82, 9, !dbg !14811
  br i1 %cmp93, label %if.then95, label %if.end, !dbg !14812

if.then95:                                        ; preds = %if.then86
  %83 = load float, float* %x, align 4, !dbg !14813
  %84 = load float, float* %y, align 4, !dbg !14815
  %sub96 = fsub float %83, %84, !dbg !14816
  %85 = load float, float* %z, align 4, !dbg !14817
  %add97 = fadd float %sub96, %85, !dbg !14818
  %call98 = call float @sinf(float %add97) #7, !dbg !14819
  %fneg99 = fneg float %call98, !dbg !14820
  store float %fneg99, float* %y, align 4, !dbg !14821
  %86 = load float, float* %turb, align 4, !dbg !14822
  %87 = load float, float* %y, align 4, !dbg !14823
  %mul100 = fmul float %87, %86, !dbg !14823
  store float %mul100, float* %y, align 4, !dbg !14823
  br label %if.end, !dbg !14824

if.end:                                           ; preds = %if.then95, %if.then86
  br label %if.end101, !dbg !14825

if.end101:                                        ; preds = %if.end, %if.then79
  br label %if.end102, !dbg !14826

if.end102:                                        ; preds = %if.end101, %if.then72
  br label %if.end103, !dbg !14827

if.end103:                                        ; preds = %if.end102, %if.then63
  br label %if.end104, !dbg !14828

if.end104:                                        ; preds = %if.end103, %if.then54
  br label %if.end105, !dbg !14829

if.end105:                                        ; preds = %if.end104, %if.then45
  br label %if.end106, !dbg !14830

if.end106:                                        ; preds = %if.end105, %if.then37
  br label %if.end107, !dbg !14831

if.end107:                                        ; preds = %if.end106, %if.then30
  br label %if.end108, !dbg !14832

if.end108:                                        ; preds = %if.end107, %if.then
  br label %if.end109, !dbg !14833

if.end109:                                        ; preds = %if.end108, %entry
  %88 = load float, float* %turb, align 4, !dbg !14834
  %cmp110 = fcmp une float %88, 0.000000e+00, !dbg !14836
  br i1 %cmp110, label %if.then112, label %if.end117, !dbg !14837

if.then112:                                       ; preds = %if.end109
  %89 = load float, float* %turb, align 4, !dbg !14838
  %mul113 = fmul float %89, 2.000000e+00, !dbg !14838
  store float %mul113, float* %turb, align 4, !dbg !14838
  %90 = load float, float* %turb, align 4, !dbg !14840
  %91 = load float, float* %x, align 4, !dbg !14841
  %div114 = fdiv float %91, %90, !dbg !14841
  store float %div114, float* %x, align 4, !dbg !14841
  %92 = load float, float* %turb, align 4, !dbg !14842
  %93 = load float, float* %y, align 4, !dbg !14843
  %div115 = fdiv float %93, %92, !dbg !14843
  store float %div115, float* %y, align 4, !dbg !14843
  %94 = load float, float* %turb, align 4, !dbg !14844
  %95 = load float, float* %z, align 4, !dbg !14845
  %div116 = fdiv float %95, %94, !dbg !14845
  store float %div116, float* %z, align 4, !dbg !14845
  br label %if.end117, !dbg !14846

if.end117:                                        ; preds = %if.then112, %if.end109
  %96 = load float, float* %x, align 4, !dbg !14847
  %sub118 = fsub float 5.000000e-01, %96, !dbg !14848
  %97 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14849
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %97, i32 0, i32 1, !dbg !14850
  store float %sub118, float* %tr, align 4, !dbg !14851
  %98 = load float, float* %y, align 4, !dbg !14852
  %sub119 = fsub float 5.000000e-01, %98, !dbg !14853
  %99 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14854
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %99, i32 0, i32 2, !dbg !14855
  store float %sub119, float* %tg, align 8, !dbg !14856
  %100 = load float, float* %z, align 4, !dbg !14857
  %sub120 = fsub float 5.000000e-01, %100, !dbg !14858
  %101 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14859
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %101, i32 0, i32 3, !dbg !14860
  store float %sub120, float* %tb, align 4, !dbg !14861
  %102 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14862
  %tr121 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %102, i32 0, i32 1, !dbg !14863
  %103 = load float, float* %tr121, align 4, !dbg !14863
  %104 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14864
  %tg122 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %104, i32 0, i32 2, !dbg !14865
  %105 = load float, float* %tg122, align 8, !dbg !14865
  %add123 = fadd float %103, %105, !dbg !14866
  %106 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14867
  %tb124 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %106, i32 0, i32 3, !dbg !14868
  %107 = load float, float* %tb124, align 4, !dbg !14868
  %add125 = fadd float %add123, %107, !dbg !14869
  %mul126 = fmul float 0x3FD5555560000000, %add125, !dbg !14870
  %108 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14871
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %108, i32 0, i32 0, !dbg !14872
  store float %mul126, float* %tin, align 8, !dbg !14873
  %109 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %109, i32 0, i32 7, !dbg !14874
  %110 = load float, float* %rfac, align 4, !dbg !14874
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tr127 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 1, !dbg !14874
  %112 = load float, float* %tr127, align 4, !dbg !14874
  %sub128 = fsub float %112, 5.000000e-01, !dbg !14874
  %113 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %113, i32 0, i32 5, !dbg !14874
  %114 = load float, float* %contrast, align 4, !dbg !14874
  %mul129 = fmul float %sub128, %114, !dbg !14874
  %115 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %115, i32 0, i32 4, !dbg !14874
  %116 = load float, float* %bright, align 8, !dbg !14874
  %add130 = fadd float %mul129, %116, !dbg !14874
  %sub131 = fsub float %add130, 5.000000e-01, !dbg !14874
  %mul132 = fmul float %110, %sub131, !dbg !14874
  %117 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tr133 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %117, i32 0, i32 1, !dbg !14874
  store float %mul132, float* %tr133, align 4, !dbg !14874
  %118 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %118, i32 0, i32 8, !dbg !14874
  %119 = load float, float* %gfac, align 8, !dbg !14874
  %120 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tg134 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %120, i32 0, i32 2, !dbg !14874
  %121 = load float, float* %tg134, align 8, !dbg !14874
  %sub135 = fsub float %121, 5.000000e-01, !dbg !14874
  %122 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %contrast136 = getelementptr inbounds %struct.Tex, %struct.Tex* %122, i32 0, i32 5, !dbg !14874
  %123 = load float, float* %contrast136, align 4, !dbg !14874
  %mul137 = fmul float %sub135, %123, !dbg !14874
  %124 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %bright138 = getelementptr inbounds %struct.Tex, %struct.Tex* %124, i32 0, i32 4, !dbg !14874
  %125 = load float, float* %bright138, align 8, !dbg !14874
  %add139 = fadd float %mul137, %125, !dbg !14874
  %sub140 = fsub float %add139, 5.000000e-01, !dbg !14874
  %mul141 = fmul float %119, %sub140, !dbg !14874
  %126 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tg142 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %126, i32 0, i32 2, !dbg !14874
  store float %mul141, float* %tg142, align 8, !dbg !14874
  %127 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %127, i32 0, i32 9, !dbg !14874
  %128 = load float, float* %bfac, align 4, !dbg !14874
  %129 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tb143 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %129, i32 0, i32 3, !dbg !14874
  %130 = load float, float* %tb143, align 4, !dbg !14874
  %sub144 = fsub float %130, 5.000000e-01, !dbg !14874
  %131 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %contrast145 = getelementptr inbounds %struct.Tex, %struct.Tex* %131, i32 0, i32 5, !dbg !14874
  %132 = load float, float* %contrast145, align 4, !dbg !14874
  %mul146 = fmul float %sub144, %132, !dbg !14874
  %133 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14874
  %bright147 = getelementptr inbounds %struct.Tex, %struct.Tex* %133, i32 0, i32 4, !dbg !14874
  %134 = load float, float* %bright147, align 8, !dbg !14874
  %add148 = fadd float %mul146, %134, !dbg !14874
  %sub149 = fsub float %add148, 5.000000e-01, !dbg !14874
  %mul150 = fmul float %128, %sub149, !dbg !14874
  %135 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14874
  %tb151 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %135, i32 0, i32 3, !dbg !14874
  store float %mul150, float* %tb151, align 4, !dbg !14874
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14875
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 31, !dbg !14875
  %137 = load i16, i16* %flag, align 2, !dbg !14875
  %conv152 = sext i16 %137 to i32, !dbg !14875
  %and = and i32 %conv152, 1024, !dbg !14875
  %tobool = icmp ne i32 %and, 0, !dbg !14875
  br i1 %tobool, label %if.end172, label %if.then153, !dbg !14874

if.then153:                                       ; preds = %if.end117
  %138 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14877
  %tr154 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %138, i32 0, i32 1, !dbg !14877
  %139 = load float, float* %tr154, align 4, !dbg !14877
  %cmp155 = fcmp olt float %139, 0.000000e+00, !dbg !14877
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !14880

if.then157:                                       ; preds = %if.then153
  %140 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14877
  %tr158 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %140, i32 0, i32 1, !dbg !14877
  store float 0.000000e+00, float* %tr158, align 4, !dbg !14877
  br label %if.end159, !dbg !14877

if.end159:                                        ; preds = %if.then157, %if.then153
  %141 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14881
  %tg160 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %141, i32 0, i32 2, !dbg !14881
  %142 = load float, float* %tg160, align 8, !dbg !14881
  %cmp161 = fcmp olt float %142, 0.000000e+00, !dbg !14881
  br i1 %cmp161, label %if.then163, label %if.end165, !dbg !14880

if.then163:                                       ; preds = %if.end159
  %143 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14881
  %tg164 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %143, i32 0, i32 2, !dbg !14881
  store float 0.000000e+00, float* %tg164, align 8, !dbg !14881
  br label %if.end165, !dbg !14881

if.end165:                                        ; preds = %if.then163, %if.end159
  %144 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14883
  %tb166 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %144, i32 0, i32 3, !dbg !14883
  %145 = load float, float* %tb166, align 4, !dbg !14883
  %cmp167 = fcmp olt float %145, 0.000000e+00, !dbg !14883
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !14880

if.then169:                                       ; preds = %if.end165
  %146 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14883
  %tb170 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %146, i32 0, i32 3, !dbg !14883
  store float 0.000000e+00, float* %tb170, align 4, !dbg !14883
  br label %if.end171, !dbg !14883

if.end171:                                        ; preds = %if.then169, %if.end165
  br label %if.end172, !dbg !14880

if.end172:                                        ; preds = %if.end171, %if.end117
  %147 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14885
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %147, i32 0, i32 6, !dbg !14885
  %148 = load float, float* %saturation, align 8, !dbg !14885
  %cmp173 = fcmp une float %148, 1.000000e+00, !dbg !14885
  br i1 %cmp173, label %if.then175, label %if.end191, !dbg !14874

if.then175:                                       ; preds = %if.end172
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !14887, metadata !DIExpression()), !dbg !14889
  %149 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tr176 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %149, i32 0, i32 1, !dbg !14889
  %150 = load float, float* %tr176, align 4, !dbg !14889
  %151 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tg177 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %151, i32 0, i32 2, !dbg !14889
  %152 = load float, float* %tg177, align 8, !dbg !14889
  %153 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tb178 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %153, i32 0, i32 3, !dbg !14889
  %154 = load float, float* %tb178, align 4, !dbg !14889
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14889
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14889
  %add.ptr = getelementptr inbounds float, float* %arraydecay179, i64 1, !dbg !14889
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14889
  %add.ptr181 = getelementptr inbounds float, float* %arraydecay180, i64 2, !dbg !14889
  call void @rgb_to_hsv(float %150, float %152, float %154, float* %arraydecay, float* %add.ptr, float* %add.ptr181), !dbg !14889
  %155 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14889
  %saturation182 = getelementptr inbounds %struct.Tex, %struct.Tex* %155, i32 0, i32 6, !dbg !14889
  %156 = load float, float* %saturation182, align 8, !dbg !14889
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !14889
  %157 = load float, float* %arrayidx183, align 4, !dbg !14889
  %mul184 = fmul float %157, %156, !dbg !14889
  store float %mul184, float* %arrayidx183, align 4, !dbg !14889
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !14889
  %158 = load float, float* %arrayidx185, align 4, !dbg !14889
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !14889
  %159 = load float, float* %arrayidx186, align 4, !dbg !14889
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !14889
  %160 = load float, float* %arrayidx187, align 4, !dbg !14889
  %161 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tr188 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %161, i32 0, i32 1, !dbg !14889
  %162 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tg189 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %162, i32 0, i32 2, !dbg !14889
  %163 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14889
  %tb190 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %163, i32 0, i32 3, !dbg !14889
  call void @hsv_to_rgb(float %158, float %159, float %160, float* %tr188, float* %tg189, float* %tb190), !dbg !14889
  br label %if.end191, !dbg !14889

if.end191:                                        ; preds = %if.then175, %if.end172
  %164 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14890
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %164, i32 0, i32 4, !dbg !14891
  store float 1.000000e+00, float* %ta, align 8, !dbg !14892
  ret i32 1, !dbg !14893
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @blend(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !14894 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %t = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !14895, metadata !DIExpression()), !dbg !14896
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !14897, metadata !DIExpression()), !dbg !14898
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !14899, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.declare(metadata float* %x, metadata !14901, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.declare(metadata float* %y, metadata !14903, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.declare(metadata float* %t, metadata !14905, metadata !DIExpression()), !dbg !14906
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14907
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 31, !dbg !14909
  %1 = load i16, i16* %flag, align 2, !dbg !14909
  %conv = sext i16 %1 to i32, !dbg !14907
  %and = and i32 %conv, 2, !dbg !14910
  %tobool = icmp ne i32 %and, 0, !dbg !14910
  br i1 %tobool, label %if.then, label %if.else, !dbg !14911

if.then:                                          ; preds = %entry
  %2 = load float*, float** %texvec.addr, align 8, !dbg !14912
  %arrayidx = getelementptr inbounds float, float* %2, i64 1, !dbg !14912
  %3 = load float, float* %arrayidx, align 4, !dbg !14912
  store float %3, float* %x, align 4, !dbg !14914
  %4 = load float*, float** %texvec.addr, align 8, !dbg !14915
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 0, !dbg !14915
  %5 = load float, float* %arrayidx1, align 4, !dbg !14915
  store float %5, float* %y, align 4, !dbg !14916
  br label %if.end, !dbg !14917

if.else:                                          ; preds = %entry
  %6 = load float*, float** %texvec.addr, align 8, !dbg !14918
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !14918
  %7 = load float, float* %arrayidx2, align 4, !dbg !14918
  store float %7, float* %x, align 4, !dbg !14920
  %8 = load float*, float** %texvec.addr, align 8, !dbg !14921
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 1, !dbg !14921
  %9 = load float, float* %arrayidx3, align 4, !dbg !14921
  store float %9, float* %y, align 4, !dbg !14922
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14923
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 33, !dbg !14925
  %11 = load i16, i16* %stype, align 2, !dbg !14925
  %conv4 = sext i16 %11 to i32, !dbg !14923
  %cmp = icmp eq i32 %conv4, 0, !dbg !14926
  br i1 %cmp, label %if.then6, label %if.else7, !dbg !14927

if.then6:                                         ; preds = %if.end
  %12 = load float, float* %x, align 4, !dbg !14928
  %add = fadd float 1.000000e+00, %12, !dbg !14930
  %div = fdiv float %add, 2.000000e+00, !dbg !14931
  %13 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14932
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %13, i32 0, i32 0, !dbg !14933
  store float %div, float* %tin, align 8, !dbg !14934
  br label %if.end109, !dbg !14935

if.else7:                                         ; preds = %if.end
  %14 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14936
  %stype8 = getelementptr inbounds %struct.Tex, %struct.Tex* %14, i32 0, i32 33, !dbg !14938
  %15 = load i16, i16* %stype8, align 2, !dbg !14938
  %conv9 = sext i16 %15 to i32, !dbg !14936
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !14939
  br i1 %cmp10, label %if.then12, label %if.else25, !dbg !14940

if.then12:                                        ; preds = %if.else7
  %16 = load float, float* %x, align 4, !dbg !14941
  %add13 = fadd float 1.000000e+00, %16, !dbg !14943
  %div14 = fdiv float %add13, 2.000000e+00, !dbg !14944
  %17 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14945
  %tin15 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %17, i32 0, i32 0, !dbg !14946
  store float %div14, float* %tin15, align 8, !dbg !14947
  %18 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14948
  %tin16 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %18, i32 0, i32 0, !dbg !14950
  %19 = load float, float* %tin16, align 8, !dbg !14950
  %cmp17 = fcmp olt float %19, 0.000000e+00, !dbg !14951
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !14952

if.then19:                                        ; preds = %if.then12
  %20 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14953
  %tin20 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %20, i32 0, i32 0, !dbg !14954
  store float 0.000000e+00, float* %tin20, align 8, !dbg !14955
  br label %if.end24, !dbg !14953

if.else21:                                        ; preds = %if.then12
  %21 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14956
  %tin22 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %21, i32 0, i32 0, !dbg !14957
  %22 = load float, float* %tin22, align 8, !dbg !14957
  %23 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14958
  %tin23 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %23, i32 0, i32 0, !dbg !14959
  %24 = load float, float* %tin23, align 8, !dbg !14960
  %mul = fmul float %24, %22, !dbg !14960
  store float %mul, float* %tin23, align 8, !dbg !14960
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then19
  br label %if.end108, !dbg !14961

if.else25:                                        ; preds = %if.else7
  %25 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !14962
  %stype26 = getelementptr inbounds %struct.Tex, %struct.Tex* %25, i32 0, i32 33, !dbg !14964
  %26 = load i16, i16* %stype26, align 2, !dbg !14964
  %conv27 = sext i16 %26 to i32, !dbg !14962
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !14965
  br i1 %cmp28, label %if.then30, label %if.else56, !dbg !14966

if.then30:                                        ; preds = %if.else25
  %27 = load float, float* %x, align 4, !dbg !14967
  %add31 = fadd float 1.000000e+00, %27, !dbg !14969
  %div32 = fdiv float %add31, 2.000000e+00, !dbg !14970
  %28 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14971
  %tin33 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %28, i32 0, i32 0, !dbg !14972
  store float %div32, float* %tin33, align 8, !dbg !14973
  %29 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14974
  %tin34 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %29, i32 0, i32 0, !dbg !14976
  %30 = load float, float* %tin34, align 8, !dbg !14976
  %cmp35 = fcmp ole float %30, 0.000000e+00, !dbg !14977
  br i1 %cmp35, label %if.then37, label %if.else39, !dbg !14978

if.then37:                                        ; preds = %if.then30
  %31 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14979
  %tin38 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %31, i32 0, i32 0, !dbg !14980
  store float 0.000000e+00, float* %tin38, align 8, !dbg !14981
  br label %if.end55, !dbg !14979

if.else39:                                        ; preds = %if.then30
  %32 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14982
  %tin40 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %32, i32 0, i32 0, !dbg !14984
  %33 = load float, float* %tin40, align 8, !dbg !14984
  %cmp41 = fcmp oge float %33, 1.000000e+00, !dbg !14985
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !14986

if.then43:                                        ; preds = %if.else39
  %34 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14987
  %tin44 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %34, i32 0, i32 0, !dbg !14988
  store float 1.000000e+00, float* %tin44, align 8, !dbg !14989
  br label %if.end54, !dbg !14987

if.else45:                                        ; preds = %if.else39
  %35 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14990
  %tin46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %35, i32 0, i32 0, !dbg !14992
  %36 = load float, float* %tin46, align 8, !dbg !14992
  %37 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !14993
  %tin47 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %37, i32 0, i32 0, !dbg !14994
  %38 = load float, float* %tin47, align 8, !dbg !14994
  %mul48 = fmul float %36, %38, !dbg !14995
  store float %mul48, float* %t, align 4, !dbg !14996
  %39 = load float, float* %t, align 4, !dbg !14997
  %mul49 = fmul float 3.000000e+00, %39, !dbg !14998
  %40 = load float, float* %t, align 4, !dbg !14999
  %mul50 = fmul float 2.000000e+00, %40, !dbg !15000
  %41 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15001
  %tin51 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %41, i32 0, i32 0, !dbg !15002
  %42 = load float, float* %tin51, align 8, !dbg !15002
  %mul52 = fmul float %mul50, %42, !dbg !15003
  %sub = fsub float %mul49, %mul52, !dbg !15004
  %43 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15005
  %tin53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %43, i32 0, i32 0, !dbg !15006
  store float %sub, float* %tin53, align 8, !dbg !15007
  br label %if.end54

if.end54:                                         ; preds = %if.else45, %if.then43
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then37
  br label %if.end107, !dbg !15008

if.else56:                                        ; preds = %if.else25
  %44 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15009
  %stype57 = getelementptr inbounds %struct.Tex, %struct.Tex* %44, i32 0, i32 33, !dbg !15011
  %45 = load i16, i16* %stype57, align 2, !dbg !15011
  %conv58 = sext i16 %45 to i32, !dbg !15009
  %cmp59 = icmp eq i32 %conv58, 3, !dbg !15012
  br i1 %cmp59, label %if.then61, label %if.else66, !dbg !15013

if.then61:                                        ; preds = %if.else56
  %46 = load float, float* %x, align 4, !dbg !15014
  %add62 = fadd float 2.000000e+00, %46, !dbg !15016
  %47 = load float, float* %y, align 4, !dbg !15017
  %add63 = fadd float %add62, %47, !dbg !15018
  %div64 = fdiv float %add63, 4.000000e+00, !dbg !15019
  %48 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15020
  %tin65 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %48, i32 0, i32 0, !dbg !15021
  store float %div64, float* %tin65, align 8, !dbg !15022
  br label %if.end106, !dbg !15023

if.else66:                                        ; preds = %if.else56
  %49 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15024
  %stype67 = getelementptr inbounds %struct.Tex, %struct.Tex* %49, i32 0, i32 33, !dbg !15026
  %50 = load i16, i16* %stype67, align 2, !dbg !15026
  %conv68 = sext i16 %50 to i32, !dbg !15024
  %cmp69 = icmp eq i32 %conv68, 6, !dbg !15027
  br i1 %cmp69, label %if.then71, label %if.else77, !dbg !15028

if.then71:                                        ; preds = %if.else66
  %51 = load float, float* %y, align 4, !dbg !15029
  %52 = load float, float* %x, align 4, !dbg !15031
  %call = call float @atan2f(float %51, float %52) #7, !dbg !15032
  %conv72 = fpext float %call to double, !dbg !15032
  %div73 = fdiv double %conv72, 0x401921FB54442D18, !dbg !15033
  %add74 = fadd double %div73, 5.000000e-01, !dbg !15034
  %conv75 = fptrunc double %add74 to float, !dbg !15035
  %53 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15036
  %tin76 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %53, i32 0, i32 0, !dbg !15037
  store float %conv75, float* %tin76, align 8, !dbg !15038
  br label %if.end105, !dbg !15039

if.else77:                                        ; preds = %if.else66
  %54 = load float, float* %x, align 4, !dbg !15040
  %55 = load float, float* %x, align 4, !dbg !15042
  %mul78 = fmul float %54, %55, !dbg !15043
  %56 = load float, float* %y, align 4, !dbg !15044
  %57 = load float, float* %y, align 4, !dbg !15045
  %mul79 = fmul float %56, %57, !dbg !15046
  %add80 = fadd float %mul78, %mul79, !dbg !15047
  %58 = load float*, float** %texvec.addr, align 8, !dbg !15048
  %arrayidx81 = getelementptr inbounds float, float* %58, i64 2, !dbg !15048
  %59 = load float, float* %arrayidx81, align 4, !dbg !15048
  %60 = load float*, float** %texvec.addr, align 8, !dbg !15049
  %arrayidx82 = getelementptr inbounds float, float* %60, i64 2, !dbg !15049
  %61 = load float, float* %arrayidx82, align 4, !dbg !15049
  %mul83 = fmul float %59, %61, !dbg !15050
  %add84 = fadd float %add80, %mul83, !dbg !15051
  %call85 = call float @sqrtf(float %add84) #7, !dbg !15052
  %conv86 = fpext float %call85 to double, !dbg !15052
  %sub87 = fsub double 1.000000e+00, %conv86, !dbg !15053
  %conv88 = fptrunc double %sub87 to float, !dbg !15054
  %62 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15055
  %tin89 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %62, i32 0, i32 0, !dbg !15056
  store float %conv88, float* %tin89, align 8, !dbg !15057
  %63 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15058
  %tin90 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %63, i32 0, i32 0, !dbg !15060
  %64 = load float, float* %tin90, align 8, !dbg !15060
  %cmp91 = fcmp olt float %64, 0.000000e+00, !dbg !15061
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !15062

if.then93:                                        ; preds = %if.else77
  %65 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15063
  %tin94 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %65, i32 0, i32 0, !dbg !15064
  store float 0.000000e+00, float* %tin94, align 8, !dbg !15065
  br label %if.end95, !dbg !15063

if.end95:                                         ; preds = %if.then93, %if.else77
  %66 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15066
  %stype96 = getelementptr inbounds %struct.Tex, %struct.Tex* %66, i32 0, i32 33, !dbg !15068
  %67 = load i16, i16* %stype96, align 2, !dbg !15068
  %conv97 = sext i16 %67 to i32, !dbg !15066
  %cmp98 = icmp eq i32 %conv97, 5, !dbg !15069
  br i1 %cmp98, label %if.then100, label %if.end104, !dbg !15070

if.then100:                                       ; preds = %if.end95
  %68 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15071
  %tin101 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %68, i32 0, i32 0, !dbg !15072
  %69 = load float, float* %tin101, align 8, !dbg !15072
  %70 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15073
  %tin102 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %70, i32 0, i32 0, !dbg !15074
  %71 = load float, float* %tin102, align 8, !dbg !15075
  %mul103 = fmul float %71, %69, !dbg !15075
  store float %mul103, float* %tin102, align 8, !dbg !15075
  br label %if.end104, !dbg !15073

if.end104:                                        ; preds = %if.then100, %if.end95
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then71
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then61
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end55
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end24
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then6
  %72 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15076
  %tin110 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %72, i32 0, i32 0, !dbg !15076
  %73 = load float, float* %tin110, align 8, !dbg !15076
  %sub111 = fsub float %73, 5.000000e-01, !dbg !15076
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15076
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %74, i32 0, i32 5, !dbg !15076
  %75 = load float, float* %contrast, align 4, !dbg !15076
  %mul112 = fmul float %sub111, %75, !dbg !15076
  %76 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15076
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %76, i32 0, i32 4, !dbg !15076
  %77 = load float, float* %bright, align 8, !dbg !15076
  %add113 = fadd float %mul112, %77, !dbg !15076
  %sub114 = fsub float %add113, 5.000000e-01, !dbg !15076
  %78 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15076
  %tin115 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %78, i32 0, i32 0, !dbg !15076
  store float %sub114, float* %tin115, align 8, !dbg !15076
  %79 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15077
  %flag116 = getelementptr inbounds %struct.Tex, %struct.Tex* %79, i32 0, i32 31, !dbg !15077
  %80 = load i16, i16* %flag116, align 2, !dbg !15077
  %conv117 = sext i16 %80 to i32, !dbg !15077
  %and118 = and i32 %conv117, 1024, !dbg !15077
  %tobool119 = icmp ne i32 %and118, 0, !dbg !15077
  br i1 %tobool119, label %if.end134, label %if.then120, !dbg !15076

if.then120:                                       ; preds = %if.end109
  %81 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15079
  %tin121 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %81, i32 0, i32 0, !dbg !15079
  %82 = load float, float* %tin121, align 8, !dbg !15079
  %cmp122 = fcmp olt float %82, 0.000000e+00, !dbg !15079
  br i1 %cmp122, label %if.then124, label %if.else126, !dbg !15082

if.then124:                                       ; preds = %if.then120
  %83 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15079
  %tin125 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %83, i32 0, i32 0, !dbg !15079
  store float 0.000000e+00, float* %tin125, align 8, !dbg !15079
  br label %if.end133, !dbg !15079

if.else126:                                       ; preds = %if.then120
  %84 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15083
  %tin127 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %84, i32 0, i32 0, !dbg !15083
  %85 = load float, float* %tin127, align 8, !dbg !15083
  %cmp128 = fcmp ogt float %85, 1.000000e+00, !dbg !15083
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !15079

if.then130:                                       ; preds = %if.else126
  %86 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15083
  %tin131 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %86, i32 0, i32 0, !dbg !15083
  store float 1.000000e+00, float* %tin131, align 8, !dbg !15083
  br label %if.end132, !dbg !15083

if.end132:                                        ; preds = %if.then130, %if.else126
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then124
  br label %if.end134, !dbg !15082

if.end134:                                        ; preds = %if.end133, %if.end109
  ret i32 0, !dbg !15085
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stucci(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !15086 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %nor = alloca [3 x float], align 4
  %b2 = alloca float, align 4
  %ofs = alloca float, align 4
  %retval1 = alloca i32, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15087, metadata !DIExpression()), !dbg !15088
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !15089, metadata !DIExpression()), !dbg !15090
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15091, metadata !DIExpression()), !dbg !15092
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !15093, metadata !DIExpression()), !dbg !15094
  call void @llvm.dbg.declare(metadata float* %b2, metadata !15095, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.declare(metadata float* %ofs, metadata !15097, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !15099, metadata !DIExpression()), !dbg !15100
  store i32 0, i32* %retval1, align 4, !dbg !15100
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15101
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 2, !dbg !15102
  %1 = load float, float* %noisesize, align 8, !dbg !15102
  %2 = load float*, float** %texvec.addr, align 8, !dbg !15103
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !15103
  %3 = load float, float* %arrayidx, align 4, !dbg !15103
  %4 = load float*, float** %texvec.addr, align 8, !dbg !15104
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15104
  %5 = load float, float* %arrayidx2, align 4, !dbg !15104
  %6 = load float*, float** %texvec.addr, align 8, !dbg !15105
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 2, !dbg !15105
  %7 = load float, float* %arrayidx3, align 4, !dbg !15105
  %8 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15106
  %noisetype = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 27, !dbg !15107
  %9 = load i16, i16* %noisetype, align 2, !dbg !15107
  %conv = sext i16 %9 to i32, !dbg !15106
  %cmp = icmp ne i32 %conv, 0, !dbg !15108
  %conv4 = zext i1 %cmp to i32, !dbg !15108
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15109
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 28, !dbg !15110
  %11 = load i16, i16* %noisebasis, align 8, !dbg !15110
  %conv5 = sext i16 %11 to i32, !dbg !15109
  %call = call float @BLI_gNoise(float %1, float %3, float %5, float %7, i32 %conv4, i32 %conv5), !dbg !15111
  store float %call, float* %b2, align 4, !dbg !15112
  %12 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15113
  %turbul = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 3, !dbg !15114
  %13 = load float, float* %turbul, align 4, !dbg !15114
  %div = fdiv float %13, 2.000000e+02, !dbg !15115
  store float %div, float* %ofs, align 4, !dbg !15116
  %14 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15117
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %14, i32 0, i32 33, !dbg !15119
  %15 = load i16, i16* %stype, align 2, !dbg !15119
  %tobool = icmp ne i16 %15, 0, !dbg !15117
  br i1 %tobool, label %if.then, label %if.end, !dbg !15120

if.then:                                          ; preds = %entry
  %16 = load float, float* %b2, align 4, !dbg !15121
  %17 = load float, float* %b2, align 4, !dbg !15122
  %mul = fmul float %16, %17, !dbg !15123
  %18 = load float, float* %ofs, align 4, !dbg !15124
  %mul6 = fmul float %18, %mul, !dbg !15124
  store float %mul6, float* %ofs, align 4, !dbg !15124
  br label %if.end, !dbg !15125

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15126
  %noisesize7 = getelementptr inbounds %struct.Tex, %struct.Tex* %19, i32 0, i32 2, !dbg !15127
  %20 = load float, float* %noisesize7, align 8, !dbg !15127
  %21 = load float*, float** %texvec.addr, align 8, !dbg !15128
  %arrayidx8 = getelementptr inbounds float, float* %21, i64 0, !dbg !15128
  %22 = load float, float* %arrayidx8, align 4, !dbg !15128
  %23 = load float, float* %ofs, align 4, !dbg !15129
  %add = fadd float %22, %23, !dbg !15130
  %24 = load float*, float** %texvec.addr, align 8, !dbg !15131
  %arrayidx9 = getelementptr inbounds float, float* %24, i64 1, !dbg !15131
  %25 = load float, float* %arrayidx9, align 4, !dbg !15131
  %26 = load float*, float** %texvec.addr, align 8, !dbg !15132
  %arrayidx10 = getelementptr inbounds float, float* %26, i64 2, !dbg !15132
  %27 = load float, float* %arrayidx10, align 4, !dbg !15132
  %28 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15133
  %noisetype11 = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 27, !dbg !15134
  %29 = load i16, i16* %noisetype11, align 2, !dbg !15134
  %conv12 = sext i16 %29 to i32, !dbg !15133
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !15135
  %conv14 = zext i1 %cmp13 to i32, !dbg !15135
  %30 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15136
  %noisebasis15 = getelementptr inbounds %struct.Tex, %struct.Tex* %30, i32 0, i32 28, !dbg !15137
  %31 = load i16, i16* %noisebasis15, align 8, !dbg !15137
  %conv16 = sext i16 %31 to i32, !dbg !15136
  %call17 = call float @BLI_gNoise(float %20, float %add, float %25, float %27, i32 %conv14, i32 %conv16), !dbg !15138
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !15139
  store float %call17, float* %arrayidx18, align 4, !dbg !15140
  %32 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15141
  %noisesize19 = getelementptr inbounds %struct.Tex, %struct.Tex* %32, i32 0, i32 2, !dbg !15142
  %33 = load float, float* %noisesize19, align 8, !dbg !15142
  %34 = load float*, float** %texvec.addr, align 8, !dbg !15143
  %arrayidx20 = getelementptr inbounds float, float* %34, i64 0, !dbg !15143
  %35 = load float, float* %arrayidx20, align 4, !dbg !15143
  %36 = load float*, float** %texvec.addr, align 8, !dbg !15144
  %arrayidx21 = getelementptr inbounds float, float* %36, i64 1, !dbg !15144
  %37 = load float, float* %arrayidx21, align 4, !dbg !15144
  %38 = load float, float* %ofs, align 4, !dbg !15145
  %add22 = fadd float %37, %38, !dbg !15146
  %39 = load float*, float** %texvec.addr, align 8, !dbg !15147
  %arrayidx23 = getelementptr inbounds float, float* %39, i64 2, !dbg !15147
  %40 = load float, float* %arrayidx23, align 4, !dbg !15147
  %41 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15148
  %noisetype24 = getelementptr inbounds %struct.Tex, %struct.Tex* %41, i32 0, i32 27, !dbg !15149
  %42 = load i16, i16* %noisetype24, align 2, !dbg !15149
  %conv25 = sext i16 %42 to i32, !dbg !15148
  %cmp26 = icmp ne i32 %conv25, 0, !dbg !15150
  %conv27 = zext i1 %cmp26 to i32, !dbg !15150
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15151
  %noisebasis28 = getelementptr inbounds %struct.Tex, %struct.Tex* %43, i32 0, i32 28, !dbg !15152
  %44 = load i16, i16* %noisebasis28, align 8, !dbg !15152
  %conv29 = sext i16 %44 to i32, !dbg !15151
  %call30 = call float @BLI_gNoise(float %33, float %35, float %add22, float %40, i32 %conv27, i32 %conv29), !dbg !15153
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !15154
  store float %call30, float* %arrayidx31, align 4, !dbg !15155
  %45 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15156
  %noisesize32 = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 2, !dbg !15157
  %46 = load float, float* %noisesize32, align 8, !dbg !15157
  %47 = load float*, float** %texvec.addr, align 8, !dbg !15158
  %arrayidx33 = getelementptr inbounds float, float* %47, i64 0, !dbg !15158
  %48 = load float, float* %arrayidx33, align 4, !dbg !15158
  %49 = load float*, float** %texvec.addr, align 8, !dbg !15159
  %arrayidx34 = getelementptr inbounds float, float* %49, i64 1, !dbg !15159
  %50 = load float, float* %arrayidx34, align 4, !dbg !15159
  %51 = load float*, float** %texvec.addr, align 8, !dbg !15160
  %arrayidx35 = getelementptr inbounds float, float* %51, i64 2, !dbg !15160
  %52 = load float, float* %arrayidx35, align 4, !dbg !15160
  %53 = load float, float* %ofs, align 4, !dbg !15161
  %add36 = fadd float %52, %53, !dbg !15162
  %54 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15163
  %noisetype37 = getelementptr inbounds %struct.Tex, %struct.Tex* %54, i32 0, i32 27, !dbg !15164
  %55 = load i16, i16* %noisetype37, align 2, !dbg !15164
  %conv38 = sext i16 %55 to i32, !dbg !15163
  %cmp39 = icmp ne i32 %conv38, 0, !dbg !15165
  %conv40 = zext i1 %cmp39 to i32, !dbg !15165
  %56 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15166
  %noisebasis41 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 28, !dbg !15167
  %57 = load i16, i16* %noisebasis41, align 8, !dbg !15167
  %conv42 = sext i16 %57 to i32, !dbg !15166
  %call43 = call float @BLI_gNoise(float %46, float %48, float %50, float %add36, i32 %conv40, i32 %conv42), !dbg !15168
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !15169
  store float %call43, float* %arrayidx44, align 4, !dbg !15170
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !15171
  %58 = load float, float* %arrayidx45, align 4, !dbg !15171
  %59 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15172
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %59, i32 0, i32 0, !dbg !15173
  store float %58, float* %tin, align 8, !dbg !15174
  %60 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15175
  %nor46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %60, i32 0, i32 6, !dbg !15177
  %61 = load float*, float** %nor46, align 8, !dbg !15177
  %tobool47 = icmp ne float* %61, null, !dbg !15175
  br i1 %tobool47, label %if.then48, label %if.end70, !dbg !15178

if.then48:                                        ; preds = %if.end
  %62 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15179
  %nor49 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %62, i32 0, i32 6, !dbg !15181
  %63 = load float*, float** %nor49, align 8, !dbg !15181
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !15182
  call void @copy_v3_v3(float* %63, float* %arraydecay), !dbg !15183
  %64 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15184
  %65 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15185
  call void @tex_normal_derivate(%struct.Tex* %64, %struct.TexResult* %65), !dbg !15186
  %66 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15187
  %stype50 = getelementptr inbounds %struct.Tex, %struct.Tex* %66, i32 0, i32 33, !dbg !15189
  %67 = load i16, i16* %stype50, align 2, !dbg !15189
  %conv51 = sext i16 %67 to i32, !dbg !15187
  %cmp52 = icmp eq i32 %conv51, 2, !dbg !15190
  br i1 %cmp52, label %if.then54, label %if.end69, !dbg !15191

if.then54:                                        ; preds = %if.then48
  %68 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15192
  %nor55 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %68, i32 0, i32 6, !dbg !15194
  %69 = load float*, float** %nor55, align 8, !dbg !15194
  %arrayidx56 = getelementptr inbounds float, float* %69, i64 0, !dbg !15192
  %70 = load float, float* %arrayidx56, align 4, !dbg !15192
  %fneg = fneg float %70, !dbg !15195
  %71 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15196
  %nor57 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %71, i32 0, i32 6, !dbg !15197
  %72 = load float*, float** %nor57, align 8, !dbg !15197
  %arrayidx58 = getelementptr inbounds float, float* %72, i64 0, !dbg !15196
  store float %fneg, float* %arrayidx58, align 4, !dbg !15198
  %73 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15199
  %nor59 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %73, i32 0, i32 6, !dbg !15200
  %74 = load float*, float** %nor59, align 8, !dbg !15200
  %arrayidx60 = getelementptr inbounds float, float* %74, i64 1, !dbg !15199
  %75 = load float, float* %arrayidx60, align 4, !dbg !15199
  %fneg61 = fneg float %75, !dbg !15201
  %76 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15202
  %nor62 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %76, i32 0, i32 6, !dbg !15203
  %77 = load float*, float** %nor62, align 8, !dbg !15203
  %arrayidx63 = getelementptr inbounds float, float* %77, i64 1, !dbg !15202
  store float %fneg61, float* %arrayidx63, align 4, !dbg !15204
  %78 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15205
  %nor64 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %78, i32 0, i32 6, !dbg !15206
  %79 = load float*, float** %nor64, align 8, !dbg !15206
  %arrayidx65 = getelementptr inbounds float, float* %79, i64 2, !dbg !15205
  %80 = load float, float* %arrayidx65, align 4, !dbg !15205
  %fneg66 = fneg float %80, !dbg !15207
  %81 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15208
  %nor67 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %81, i32 0, i32 6, !dbg !15209
  %82 = load float*, float** %nor67, align 8, !dbg !15209
  %arrayidx68 = getelementptr inbounds float, float* %82, i64 2, !dbg !15208
  store float %fneg66, float* %arrayidx68, align 4, !dbg !15210
  br label %if.end69, !dbg !15211

if.end69:                                         ; preds = %if.then54, %if.then48
  %83 = load i32, i32* %retval1, align 4, !dbg !15212
  %or = or i32 %83, 2, !dbg !15212
  store i32 %or, i32* %retval1, align 4, !dbg !15212
  br label %if.end70, !dbg !15213

if.end70:                                         ; preds = %if.end69, %if.end
  %84 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15214
  %stype71 = getelementptr inbounds %struct.Tex, %struct.Tex* %84, i32 0, i32 33, !dbg !15216
  %85 = load i16, i16* %stype71, align 2, !dbg !15216
  %conv72 = sext i16 %85 to i32, !dbg !15214
  %cmp73 = icmp eq i32 %conv72, 2, !dbg !15217
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !15218

if.then75:                                        ; preds = %if.end70
  %86 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15219
  %tin76 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %86, i32 0, i32 0, !dbg !15220
  %87 = load float, float* %tin76, align 8, !dbg !15220
  %sub = fsub float 1.000000e+00, %87, !dbg !15221
  %88 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15222
  %tin77 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %88, i32 0, i32 0, !dbg !15223
  store float %sub, float* %tin77, align 8, !dbg !15224
  br label %if.end78, !dbg !15222

if.end78:                                         ; preds = %if.then75, %if.end70
  %89 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15225
  %tin79 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %89, i32 0, i32 0, !dbg !15227
  %90 = load float, float* %tin79, align 8, !dbg !15227
  %cmp80 = fcmp olt float %90, 0.000000e+00, !dbg !15228
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !15229

if.then82:                                        ; preds = %if.end78
  %91 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15230
  %tin83 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %91, i32 0, i32 0, !dbg !15231
  store float 0.000000e+00, float* %tin83, align 8, !dbg !15232
  br label %if.end84, !dbg !15230

if.end84:                                         ; preds = %if.then82, %if.end78
  %92 = load i32, i32* %retval1, align 4, !dbg !15233
  ret i32 %92, !dbg !15234
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @texnoise(%struct.Tex* %tex, %struct.TexResult* %texres, i32 %thread) #0 !dbg !15235 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %thread.addr = alloca i32, align 4
  %div = alloca float, align 4
  %val = alloca i32, align 4
  %ran = alloca i32, align 4
  %loop = alloca i32, align 4
  %shift = alloca i32, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15238, metadata !DIExpression()), !dbg !15239
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !15242, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.declare(metadata float* %div, metadata !15244, metadata !DIExpression()), !dbg !15245
  store float 3.000000e+00, float* %div, align 4, !dbg !15245
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15246, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.declare(metadata i32* %ran, metadata !15248, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !15250, metadata !DIExpression()), !dbg !15251
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !15252, metadata !DIExpression()), !dbg !15253
  store i32 29, i32* %shift, align 4, !dbg !15253
  %0 = load %struct.RNG_THREAD_ARRAY*, %struct.RNG_THREAD_ARRAY** @random_tex_array, align 8, !dbg !15254
  %1 = load i32, i32* %thread.addr, align 4, !dbg !15255
  %call = call i32 @BLI_rng_thread_rand(%struct.RNG_THREAD_ARRAY* %0, i32 %1), !dbg !15256
  store i32 %call, i32* %ran, align 4, !dbg !15257
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15258
  %noisedepth = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 26, !dbg !15259
  %3 = load i16, i16* %noisedepth, align 4, !dbg !15259
  %conv = sext i16 %3 to i32, !dbg !15258
  store i32 %conv, i32* %loop, align 4, !dbg !15260
  %4 = load i32, i32* %ran, align 4, !dbg !15261
  %5 = load i32, i32* %shift, align 4, !dbg !15262
  %shr = ashr i32 %4, %5, !dbg !15263
  %and = and i32 %shr, 3, !dbg !15264
  store i32 %and, i32* %val, align 4, !dbg !15265
  br label %while.cond, !dbg !15266

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i32, i32* %loop, align 4, !dbg !15267
  %dec = add nsw i32 %6, -1, !dbg !15267
  store i32 %dec, i32* %loop, align 4, !dbg !15267
  %tobool = icmp ne i32 %6, 0, !dbg !15266
  br i1 %tobool, label %while.body, label %while.end, !dbg !15266

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %shift, align 4, !dbg !15268
  %sub = sub nsw i32 %7, 2, !dbg !15268
  store i32 %sub, i32* %shift, align 4, !dbg !15268
  %8 = load i32, i32* %ran, align 4, !dbg !15270
  %9 = load i32, i32* %shift, align 4, !dbg !15271
  %shr1 = ashr i32 %8, %9, !dbg !15272
  %and2 = and i32 %shr1, 3, !dbg !15273
  %10 = load i32, i32* %val, align 4, !dbg !15274
  %mul = mul nsw i32 %10, %and2, !dbg !15274
  store i32 %mul, i32* %val, align 4, !dbg !15274
  %11 = load float, float* %div, align 4, !dbg !15275
  %mul3 = fmul float %11, 3.000000e+00, !dbg !15275
  store float %mul3, float* %div, align 4, !dbg !15275
  br label %while.cond, !dbg !15266, !llvm.loop !15276

while.end:                                        ; preds = %while.cond
  %12 = load i32, i32* %val, align 4, !dbg !15278
  %conv4 = sitofp i32 %12 to float, !dbg !15279
  %13 = load float, float* %div, align 4, !dbg !15280
  %div5 = fdiv float %conv4, %13, !dbg !15281
  %14 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15282
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %14, i32 0, i32 0, !dbg !15283
  store float %div5, float* %tin, align 8, !dbg !15284
  %15 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15285
  %tin6 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %15, i32 0, i32 0, !dbg !15285
  %16 = load float, float* %tin6, align 8, !dbg !15285
  %sub7 = fsub float %16, 5.000000e-01, !dbg !15285
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15285
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 5, !dbg !15285
  %18 = load float, float* %contrast, align 4, !dbg !15285
  %mul8 = fmul float %sub7, %18, !dbg !15285
  %19 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15285
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %19, i32 0, i32 4, !dbg !15285
  %20 = load float, float* %bright, align 8, !dbg !15285
  %add = fadd float %mul8, %20, !dbg !15285
  %sub9 = fsub float %add, 5.000000e-01, !dbg !15285
  %21 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15285
  %tin10 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %21, i32 0, i32 0, !dbg !15285
  store float %sub9, float* %tin10, align 8, !dbg !15285
  %22 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15286
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 31, !dbg !15286
  %23 = load i16, i16* %flag, align 2, !dbg !15286
  %conv11 = sext i16 %23 to i32, !dbg !15286
  %and12 = and i32 %conv11, 1024, !dbg !15286
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15286
  br i1 %tobool13, label %if.end24, label %if.then, !dbg !15285

if.then:                                          ; preds = %while.end
  %24 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15288
  %tin14 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %24, i32 0, i32 0, !dbg !15288
  %25 = load float, float* %tin14, align 8, !dbg !15288
  %cmp = fcmp olt float %25, 0.000000e+00, !dbg !15288
  br i1 %cmp, label %if.then16, label %if.else, !dbg !15291

if.then16:                                        ; preds = %if.then
  %26 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15288
  %tin17 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %26, i32 0, i32 0, !dbg !15288
  store float 0.000000e+00, float* %tin17, align 8, !dbg !15288
  br label %if.end23, !dbg !15288

if.else:                                          ; preds = %if.then
  %27 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15292
  %tin18 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %27, i32 0, i32 0, !dbg !15292
  %28 = load float, float* %tin18, align 8, !dbg !15292
  %cmp19 = fcmp ogt float %28, 1.000000e+00, !dbg !15292
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !15288

if.then21:                                        ; preds = %if.else
  %29 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15292
  %tin22 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %29, i32 0, i32 0, !dbg !15292
  store float 1.000000e+00, float* %tin22, align 8, !dbg !15292
  br label %if.end, !dbg !15292

if.end:                                           ; preds = %if.then21, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then16
  br label %if.end24, !dbg !15291

if.end24:                                         ; preds = %if.end23, %while.end
  ret i32 0, !dbg !15294
}

declare dso_local void @BKE_image_tag_time(%struct.Image*) #1

declare dso_local i32 @envmaptex(%struct.Tex*, float*, float*, float*, i32, %struct.TexResult*, %struct.ImagePool*) #1

; Function Attrs: noinline nounwind uwtable
define internal float @mg_mFractalOrfBmTex(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !15295 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %mgravefunc = alloca float (float, float, float, float, float, float, i32)*, align 8
  %offs = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !15300, metadata !DIExpression()), !dbg !15301
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15302, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15304, metadata !DIExpression()), !dbg !15305
  store i32 0, i32* %rv, align 4, !dbg !15305
  call void @llvm.dbg.declare(metadata float (float, float, float, float, float, float, i32)** %mgravefunc, metadata !15306, metadata !DIExpression()), !dbg !15310
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15311
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 33, !dbg !15313
  %1 = load i16, i16* %stype, align 2, !dbg !15313
  %conv = sext i16 %1 to i32, !dbg !15311
  %cmp = icmp eq i32 %conv, 0, !dbg !15314
  br i1 %cmp, label %if.then, label %if.else, !dbg !15315

if.then:                                          ; preds = %entry
  store float (float, float, float, float, float, float, i32)* @mg_MultiFractal, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15316
  br label %if.end, !dbg !15317

if.else:                                          ; preds = %entry
  store float (float, float, float, float, float, float, i32)* @mg_fBm, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15318
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15319
  %ns_outscale = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 18, !dbg !15320
  %3 = load float, float* %ns_outscale, align 8, !dbg !15320
  %4 = load float (float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15321
  %5 = load float*, float** %texvec.addr, align 8, !dbg !15322
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !15322
  %6 = load float, float* %arrayidx, align 4, !dbg !15322
  %7 = load float*, float** %texvec.addr, align 8, !dbg !15323
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !15323
  %8 = load float, float* %arrayidx2, align 4, !dbg !15323
  %9 = load float*, float** %texvec.addr, align 8, !dbg !15324
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 2, !dbg !15324
  %10 = load float, float* %arrayidx3, align 4, !dbg !15324
  %11 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15325
  %mg_H = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 12, !dbg !15326
  %12 = load float, float* %mg_H, align 8, !dbg !15326
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15327
  %mg_lacunarity = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 13, !dbg !15328
  %14 = load float, float* %mg_lacunarity, align 4, !dbg !15328
  %15 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15329
  %mg_octaves = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 14, !dbg !15330
  %16 = load float, float* %mg_octaves, align 8, !dbg !15330
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15331
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 28, !dbg !15332
  %18 = load i16, i16* %noisebasis, align 8, !dbg !15332
  %conv4 = sext i16 %18 to i32, !dbg !15331
  %call = call float %4(float %6, float %8, float %10, float %12, float %14, float %16, i32 %conv4), !dbg !15321
  %mul = fmul float %3, %call, !dbg !15333
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15334
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 0, !dbg !15335
  store float %mul, float* %tin, align 8, !dbg !15336
  %20 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15337
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %20, i32 0, i32 6, !dbg !15339
  %21 = load float*, float** %nor, align 8, !dbg !15339
  %cmp5 = icmp ne float* %21, null, !dbg !15340
  br i1 %cmp5, label %if.then7, label %if.end49, !dbg !15341

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %offs, metadata !15342, metadata !DIExpression()), !dbg !15344
  %22 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15345
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 49, !dbg !15346
  %23 = load float, float* %nabla, align 8, !dbg !15346
  %24 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15347
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 2, !dbg !15348
  %25 = load float, float* %noisesize, align 8, !dbg !15348
  %div = fdiv float %23, %25, !dbg !15349
  store float %div, float* %offs, align 4, !dbg !15344
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15350
  %ns_outscale8 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 18, !dbg !15351
  %27 = load float, float* %ns_outscale8, align 8, !dbg !15351
  %28 = load float (float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15352
  %29 = load float*, float** %texvec.addr, align 8, !dbg !15353
  %arrayidx9 = getelementptr inbounds float, float* %29, i64 0, !dbg !15353
  %30 = load float, float* %arrayidx9, align 4, !dbg !15353
  %31 = load float, float* %offs, align 4, !dbg !15354
  %add = fadd float %30, %31, !dbg !15355
  %32 = load float*, float** %texvec.addr, align 8, !dbg !15356
  %arrayidx10 = getelementptr inbounds float, float* %32, i64 1, !dbg !15356
  %33 = load float, float* %arrayidx10, align 4, !dbg !15356
  %34 = load float*, float** %texvec.addr, align 8, !dbg !15357
  %arrayidx11 = getelementptr inbounds float, float* %34, i64 2, !dbg !15357
  %35 = load float, float* %arrayidx11, align 4, !dbg !15357
  %36 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15358
  %mg_H12 = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 12, !dbg !15359
  %37 = load float, float* %mg_H12, align 8, !dbg !15359
  %38 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15360
  %mg_lacunarity13 = getelementptr inbounds %struct.Tex, %struct.Tex* %38, i32 0, i32 13, !dbg !15361
  %39 = load float, float* %mg_lacunarity13, align 4, !dbg !15361
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15362
  %mg_octaves14 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 14, !dbg !15363
  %41 = load float, float* %mg_octaves14, align 8, !dbg !15363
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15364
  %noisebasis15 = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 28, !dbg !15365
  %43 = load i16, i16* %noisebasis15, align 8, !dbg !15365
  %conv16 = sext i16 %43 to i32, !dbg !15364
  %call17 = call float %28(float %add, float %33, float %35, float %37, float %39, float %41, i32 %conv16), !dbg !15352
  %mul18 = fmul float %27, %call17, !dbg !15366
  %44 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15367
  %nor19 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %44, i32 0, i32 6, !dbg !15368
  %45 = load float*, float** %nor19, align 8, !dbg !15368
  %arrayidx20 = getelementptr inbounds float, float* %45, i64 0, !dbg !15367
  store float %mul18, float* %arrayidx20, align 4, !dbg !15369
  %46 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15370
  %ns_outscale21 = getelementptr inbounds %struct.Tex, %struct.Tex* %46, i32 0, i32 18, !dbg !15371
  %47 = load float, float* %ns_outscale21, align 8, !dbg !15371
  %48 = load float (float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15372
  %49 = load float*, float** %texvec.addr, align 8, !dbg !15373
  %arrayidx22 = getelementptr inbounds float, float* %49, i64 0, !dbg !15373
  %50 = load float, float* %arrayidx22, align 4, !dbg !15373
  %51 = load float*, float** %texvec.addr, align 8, !dbg !15374
  %arrayidx23 = getelementptr inbounds float, float* %51, i64 1, !dbg !15374
  %52 = load float, float* %arrayidx23, align 4, !dbg !15374
  %53 = load float, float* %offs, align 4, !dbg !15375
  %add24 = fadd float %52, %53, !dbg !15376
  %54 = load float*, float** %texvec.addr, align 8, !dbg !15377
  %arrayidx25 = getelementptr inbounds float, float* %54, i64 2, !dbg !15377
  %55 = load float, float* %arrayidx25, align 4, !dbg !15377
  %56 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15378
  %mg_H26 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 12, !dbg !15379
  %57 = load float, float* %mg_H26, align 8, !dbg !15379
  %58 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15380
  %mg_lacunarity27 = getelementptr inbounds %struct.Tex, %struct.Tex* %58, i32 0, i32 13, !dbg !15381
  %59 = load float, float* %mg_lacunarity27, align 4, !dbg !15381
  %60 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15382
  %mg_octaves28 = getelementptr inbounds %struct.Tex, %struct.Tex* %60, i32 0, i32 14, !dbg !15383
  %61 = load float, float* %mg_octaves28, align 8, !dbg !15383
  %62 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15384
  %noisebasis29 = getelementptr inbounds %struct.Tex, %struct.Tex* %62, i32 0, i32 28, !dbg !15385
  %63 = load i16, i16* %noisebasis29, align 8, !dbg !15385
  %conv30 = sext i16 %63 to i32, !dbg !15384
  %call31 = call float %48(float %50, float %add24, float %55, float %57, float %59, float %61, i32 %conv30), !dbg !15372
  %mul32 = fmul float %47, %call31, !dbg !15386
  %64 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15387
  %nor33 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %64, i32 0, i32 6, !dbg !15388
  %65 = load float*, float** %nor33, align 8, !dbg !15388
  %arrayidx34 = getelementptr inbounds float, float* %65, i64 1, !dbg !15387
  store float %mul32, float* %arrayidx34, align 4, !dbg !15389
  %66 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15390
  %ns_outscale35 = getelementptr inbounds %struct.Tex, %struct.Tex* %66, i32 0, i32 18, !dbg !15391
  %67 = load float, float* %ns_outscale35, align 8, !dbg !15391
  %68 = load float (float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15392
  %69 = load float*, float** %texvec.addr, align 8, !dbg !15393
  %arrayidx36 = getelementptr inbounds float, float* %69, i64 0, !dbg !15393
  %70 = load float, float* %arrayidx36, align 4, !dbg !15393
  %71 = load float*, float** %texvec.addr, align 8, !dbg !15394
  %arrayidx37 = getelementptr inbounds float, float* %71, i64 1, !dbg !15394
  %72 = load float, float* %arrayidx37, align 4, !dbg !15394
  %73 = load float*, float** %texvec.addr, align 8, !dbg !15395
  %arrayidx38 = getelementptr inbounds float, float* %73, i64 2, !dbg !15395
  %74 = load float, float* %arrayidx38, align 4, !dbg !15395
  %75 = load float, float* %offs, align 4, !dbg !15396
  %add39 = fadd float %74, %75, !dbg !15397
  %76 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15398
  %mg_H40 = getelementptr inbounds %struct.Tex, %struct.Tex* %76, i32 0, i32 12, !dbg !15399
  %77 = load float, float* %mg_H40, align 8, !dbg !15399
  %78 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15400
  %mg_lacunarity41 = getelementptr inbounds %struct.Tex, %struct.Tex* %78, i32 0, i32 13, !dbg !15401
  %79 = load float, float* %mg_lacunarity41, align 4, !dbg !15401
  %80 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15402
  %mg_octaves42 = getelementptr inbounds %struct.Tex, %struct.Tex* %80, i32 0, i32 14, !dbg !15403
  %81 = load float, float* %mg_octaves42, align 8, !dbg !15403
  %82 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15404
  %noisebasis43 = getelementptr inbounds %struct.Tex, %struct.Tex* %82, i32 0, i32 28, !dbg !15405
  %83 = load i16, i16* %noisebasis43, align 8, !dbg !15405
  %conv44 = sext i16 %83 to i32, !dbg !15404
  %call45 = call float %68(float %70, float %72, float %add39, float %77, float %79, float %81, i32 %conv44), !dbg !15392
  %mul46 = fmul float %67, %call45, !dbg !15406
  %84 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15407
  %nor47 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %84, i32 0, i32 6, !dbg !15408
  %85 = load float*, float** %nor47, align 8, !dbg !15408
  %arrayidx48 = getelementptr inbounds float, float* %85, i64 2, !dbg !15407
  store float %mul46, float* %arrayidx48, align 4, !dbg !15409
  %86 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15410
  %87 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15411
  call void @tex_normal_derivate(%struct.Tex* %86, %struct.TexResult* %87), !dbg !15412
  %88 = load i32, i32* %rv, align 4, !dbg !15413
  %or = or i32 %88, 2, !dbg !15413
  store i32 %or, i32* %rv, align 4, !dbg !15413
  br label %if.end49, !dbg !15414

if.end49:                                         ; preds = %if.then7, %if.end
  %89 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15415
  %tin50 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %89, i32 0, i32 0, !dbg !15415
  %90 = load float, float* %tin50, align 8, !dbg !15415
  %sub = fsub float %90, 5.000000e-01, !dbg !15415
  %91 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15415
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %91, i32 0, i32 5, !dbg !15415
  %92 = load float, float* %contrast, align 4, !dbg !15415
  %mul51 = fmul float %sub, %92, !dbg !15415
  %93 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15415
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %93, i32 0, i32 4, !dbg !15415
  %94 = load float, float* %bright, align 8, !dbg !15415
  %add52 = fadd float %mul51, %94, !dbg !15415
  %sub53 = fsub float %add52, 5.000000e-01, !dbg !15415
  %95 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15415
  %tin54 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %95, i32 0, i32 0, !dbg !15415
  store float %sub53, float* %tin54, align 8, !dbg !15415
  %96 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15416
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %96, i32 0, i32 31, !dbg !15416
  %97 = load i16, i16* %flag, align 2, !dbg !15416
  %conv55 = sext i16 %97 to i32, !dbg !15416
  %and = and i32 %conv55, 1024, !dbg !15416
  %tobool = icmp ne i32 %and, 0, !dbg !15416
  br i1 %tobool, label %if.end70, label %if.then56, !dbg !15415

if.then56:                                        ; preds = %if.end49
  %98 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15418
  %tin57 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %98, i32 0, i32 0, !dbg !15418
  %99 = load float, float* %tin57, align 8, !dbg !15418
  %cmp58 = fcmp olt float %99, 0.000000e+00, !dbg !15418
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !15421

if.then60:                                        ; preds = %if.then56
  %100 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15418
  %tin61 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %100, i32 0, i32 0, !dbg !15418
  store float 0.000000e+00, float* %tin61, align 8, !dbg !15418
  br label %if.end69, !dbg !15418

if.else62:                                        ; preds = %if.then56
  %101 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15422
  %tin63 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %101, i32 0, i32 0, !dbg !15422
  %102 = load float, float* %tin63, align 8, !dbg !15422
  %cmp64 = fcmp ogt float %102, 1.000000e+00, !dbg !15422
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !15418

if.then66:                                        ; preds = %if.else62
  %103 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15422
  %tin67 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %103, i32 0, i32 0, !dbg !15422
  store float 1.000000e+00, float* %tin67, align 8, !dbg !15422
  br label %if.end68, !dbg !15422

if.end68:                                         ; preds = %if.then66, %if.else62
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then60
  br label %if.end70, !dbg !15421

if.end70:                                         ; preds = %if.end69, %if.end49
  %104 = load i32, i32* %rv, align 4, !dbg !15424
  %conv71 = sitofp i32 %104 to float, !dbg !15424
  ret float %conv71, !dbg !15425
}

; Function Attrs: noinline nounwind uwtable
define internal float @mg_ridgedOrHybridMFTex(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !15426 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %mgravefunc = alloca float (float, float, float, float, float, float, float, float, i32)*, align 8
  %offs = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15427, metadata !DIExpression()), !dbg !15428
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !15429, metadata !DIExpression()), !dbg !15430
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15431, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15433, metadata !DIExpression()), !dbg !15434
  store i32 0, i32* %rv, align 4, !dbg !15434
  call void @llvm.dbg.declare(metadata float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, metadata !15435, metadata !DIExpression()), !dbg !15439
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15440
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 33, !dbg !15442
  %1 = load i16, i16* %stype, align 2, !dbg !15442
  %conv = sext i16 %1 to i32, !dbg !15440
  %cmp = icmp eq i32 %conv, 1, !dbg !15443
  br i1 %cmp, label %if.then, label %if.else, !dbg !15444

if.then:                                          ; preds = %entry
  store float (float, float, float, float, float, float, float, float, i32)* @mg_RidgedMultiFractal, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15445
  br label %if.end, !dbg !15446

if.else:                                          ; preds = %entry
  store float (float, float, float, float, float, float, float, float, i32)* @mg_HybridMultiFractal, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15447
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15448
  %ns_outscale = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 18, !dbg !15449
  %3 = load float, float* %ns_outscale, align 8, !dbg !15449
  %4 = load float (float, float, float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15450
  %5 = load float*, float** %texvec.addr, align 8, !dbg !15451
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !15451
  %6 = load float, float* %arrayidx, align 4, !dbg !15451
  %7 = load float*, float** %texvec.addr, align 8, !dbg !15452
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !15452
  %8 = load float, float* %arrayidx2, align 4, !dbg !15452
  %9 = load float*, float** %texvec.addr, align 8, !dbg !15453
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 2, !dbg !15453
  %10 = load float, float* %arrayidx3, align 4, !dbg !15453
  %11 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15454
  %mg_H = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 12, !dbg !15455
  %12 = load float, float* %mg_H, align 8, !dbg !15455
  %13 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15456
  %mg_lacunarity = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 13, !dbg !15457
  %14 = load float, float* %mg_lacunarity, align 4, !dbg !15457
  %15 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15458
  %mg_octaves = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 14, !dbg !15459
  %16 = load float, float* %mg_octaves, align 8, !dbg !15459
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15460
  %mg_offset = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 15, !dbg !15461
  %18 = load float, float* %mg_offset, align 4, !dbg !15461
  %19 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15462
  %mg_gain = getelementptr inbounds %struct.Tex, %struct.Tex* %19, i32 0, i32 16, !dbg !15463
  %20 = load float, float* %mg_gain, align 8, !dbg !15463
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15464
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 28, !dbg !15465
  %22 = load i16, i16* %noisebasis, align 8, !dbg !15465
  %conv4 = sext i16 %22 to i32, !dbg !15464
  %call = call float %4(float %6, float %8, float %10, float %12, float %14, float %16, float %18, float %20, i32 %conv4), !dbg !15450
  %mul = fmul float %3, %call, !dbg !15466
  %23 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15467
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %23, i32 0, i32 0, !dbg !15468
  store float %mul, float* %tin, align 8, !dbg !15469
  %24 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15470
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %24, i32 0, i32 6, !dbg !15472
  %25 = load float*, float** %nor, align 8, !dbg !15472
  %cmp5 = icmp ne float* %25, null, !dbg !15473
  br i1 %cmp5, label %if.then7, label %if.end55, !dbg !15474

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %offs, metadata !15475, metadata !DIExpression()), !dbg !15477
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15478
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 49, !dbg !15479
  %27 = load float, float* %nabla, align 8, !dbg !15479
  %28 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15480
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 2, !dbg !15481
  %29 = load float, float* %noisesize, align 8, !dbg !15481
  %div = fdiv float %27, %29, !dbg !15482
  store float %div, float* %offs, align 4, !dbg !15477
  %30 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15483
  %ns_outscale8 = getelementptr inbounds %struct.Tex, %struct.Tex* %30, i32 0, i32 18, !dbg !15484
  %31 = load float, float* %ns_outscale8, align 8, !dbg !15484
  %32 = load float (float, float, float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15485
  %33 = load float*, float** %texvec.addr, align 8, !dbg !15486
  %arrayidx9 = getelementptr inbounds float, float* %33, i64 0, !dbg !15486
  %34 = load float, float* %arrayidx9, align 4, !dbg !15486
  %35 = load float, float* %offs, align 4, !dbg !15487
  %add = fadd float %34, %35, !dbg !15488
  %36 = load float*, float** %texvec.addr, align 8, !dbg !15489
  %arrayidx10 = getelementptr inbounds float, float* %36, i64 1, !dbg !15489
  %37 = load float, float* %arrayidx10, align 4, !dbg !15489
  %38 = load float*, float** %texvec.addr, align 8, !dbg !15490
  %arrayidx11 = getelementptr inbounds float, float* %38, i64 2, !dbg !15490
  %39 = load float, float* %arrayidx11, align 4, !dbg !15490
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15491
  %mg_H12 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 12, !dbg !15492
  %41 = load float, float* %mg_H12, align 8, !dbg !15492
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15493
  %mg_lacunarity13 = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 13, !dbg !15494
  %43 = load float, float* %mg_lacunarity13, align 4, !dbg !15494
  %44 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15495
  %mg_octaves14 = getelementptr inbounds %struct.Tex, %struct.Tex* %44, i32 0, i32 14, !dbg !15496
  %45 = load float, float* %mg_octaves14, align 8, !dbg !15496
  %46 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15497
  %mg_offset15 = getelementptr inbounds %struct.Tex, %struct.Tex* %46, i32 0, i32 15, !dbg !15498
  %47 = load float, float* %mg_offset15, align 4, !dbg !15498
  %48 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15499
  %mg_gain16 = getelementptr inbounds %struct.Tex, %struct.Tex* %48, i32 0, i32 16, !dbg !15500
  %49 = load float, float* %mg_gain16, align 8, !dbg !15500
  %50 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15501
  %noisebasis17 = getelementptr inbounds %struct.Tex, %struct.Tex* %50, i32 0, i32 28, !dbg !15502
  %51 = load i16, i16* %noisebasis17, align 8, !dbg !15502
  %conv18 = sext i16 %51 to i32, !dbg !15501
  %call19 = call float %32(float %add, float %37, float %39, float %41, float %43, float %45, float %47, float %49, i32 %conv18), !dbg !15485
  %mul20 = fmul float %31, %call19, !dbg !15503
  %52 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15504
  %nor21 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %52, i32 0, i32 6, !dbg !15505
  %53 = load float*, float** %nor21, align 8, !dbg !15505
  %arrayidx22 = getelementptr inbounds float, float* %53, i64 0, !dbg !15504
  store float %mul20, float* %arrayidx22, align 4, !dbg !15506
  %54 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15507
  %ns_outscale23 = getelementptr inbounds %struct.Tex, %struct.Tex* %54, i32 0, i32 18, !dbg !15508
  %55 = load float, float* %ns_outscale23, align 8, !dbg !15508
  %56 = load float (float, float, float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15509
  %57 = load float*, float** %texvec.addr, align 8, !dbg !15510
  %arrayidx24 = getelementptr inbounds float, float* %57, i64 0, !dbg !15510
  %58 = load float, float* %arrayidx24, align 4, !dbg !15510
  %59 = load float*, float** %texvec.addr, align 8, !dbg !15511
  %arrayidx25 = getelementptr inbounds float, float* %59, i64 1, !dbg !15511
  %60 = load float, float* %arrayidx25, align 4, !dbg !15511
  %61 = load float, float* %offs, align 4, !dbg !15512
  %add26 = fadd float %60, %61, !dbg !15513
  %62 = load float*, float** %texvec.addr, align 8, !dbg !15514
  %arrayidx27 = getelementptr inbounds float, float* %62, i64 2, !dbg !15514
  %63 = load float, float* %arrayidx27, align 4, !dbg !15514
  %64 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15515
  %mg_H28 = getelementptr inbounds %struct.Tex, %struct.Tex* %64, i32 0, i32 12, !dbg !15516
  %65 = load float, float* %mg_H28, align 8, !dbg !15516
  %66 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15517
  %mg_lacunarity29 = getelementptr inbounds %struct.Tex, %struct.Tex* %66, i32 0, i32 13, !dbg !15518
  %67 = load float, float* %mg_lacunarity29, align 4, !dbg !15518
  %68 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15519
  %mg_octaves30 = getelementptr inbounds %struct.Tex, %struct.Tex* %68, i32 0, i32 14, !dbg !15520
  %69 = load float, float* %mg_octaves30, align 8, !dbg !15520
  %70 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15521
  %mg_offset31 = getelementptr inbounds %struct.Tex, %struct.Tex* %70, i32 0, i32 15, !dbg !15522
  %71 = load float, float* %mg_offset31, align 4, !dbg !15522
  %72 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15523
  %mg_gain32 = getelementptr inbounds %struct.Tex, %struct.Tex* %72, i32 0, i32 16, !dbg !15524
  %73 = load float, float* %mg_gain32, align 8, !dbg !15524
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15525
  %noisebasis33 = getelementptr inbounds %struct.Tex, %struct.Tex* %74, i32 0, i32 28, !dbg !15526
  %75 = load i16, i16* %noisebasis33, align 8, !dbg !15526
  %conv34 = sext i16 %75 to i32, !dbg !15525
  %call35 = call float %56(float %58, float %add26, float %63, float %65, float %67, float %69, float %71, float %73, i32 %conv34), !dbg !15509
  %mul36 = fmul float %55, %call35, !dbg !15527
  %76 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15528
  %nor37 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %76, i32 0, i32 6, !dbg !15529
  %77 = load float*, float** %nor37, align 8, !dbg !15529
  %arrayidx38 = getelementptr inbounds float, float* %77, i64 1, !dbg !15528
  store float %mul36, float* %arrayidx38, align 4, !dbg !15530
  %78 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15531
  %ns_outscale39 = getelementptr inbounds %struct.Tex, %struct.Tex* %78, i32 0, i32 18, !dbg !15532
  %79 = load float, float* %ns_outscale39, align 8, !dbg !15532
  %80 = load float (float, float, float, float, float, float, float, float, i32)*, float (float, float, float, float, float, float, float, float, i32)** %mgravefunc, align 8, !dbg !15533
  %81 = load float*, float** %texvec.addr, align 8, !dbg !15534
  %arrayidx40 = getelementptr inbounds float, float* %81, i64 0, !dbg !15534
  %82 = load float, float* %arrayidx40, align 4, !dbg !15534
  %83 = load float*, float** %texvec.addr, align 8, !dbg !15535
  %arrayidx41 = getelementptr inbounds float, float* %83, i64 1, !dbg !15535
  %84 = load float, float* %arrayidx41, align 4, !dbg !15535
  %85 = load float*, float** %texvec.addr, align 8, !dbg !15536
  %arrayidx42 = getelementptr inbounds float, float* %85, i64 2, !dbg !15536
  %86 = load float, float* %arrayidx42, align 4, !dbg !15536
  %87 = load float, float* %offs, align 4, !dbg !15537
  %add43 = fadd float %86, %87, !dbg !15538
  %88 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15539
  %mg_H44 = getelementptr inbounds %struct.Tex, %struct.Tex* %88, i32 0, i32 12, !dbg !15540
  %89 = load float, float* %mg_H44, align 8, !dbg !15540
  %90 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15541
  %mg_lacunarity45 = getelementptr inbounds %struct.Tex, %struct.Tex* %90, i32 0, i32 13, !dbg !15542
  %91 = load float, float* %mg_lacunarity45, align 4, !dbg !15542
  %92 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15543
  %mg_octaves46 = getelementptr inbounds %struct.Tex, %struct.Tex* %92, i32 0, i32 14, !dbg !15544
  %93 = load float, float* %mg_octaves46, align 8, !dbg !15544
  %94 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15545
  %mg_offset47 = getelementptr inbounds %struct.Tex, %struct.Tex* %94, i32 0, i32 15, !dbg !15546
  %95 = load float, float* %mg_offset47, align 4, !dbg !15546
  %96 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15547
  %mg_gain48 = getelementptr inbounds %struct.Tex, %struct.Tex* %96, i32 0, i32 16, !dbg !15548
  %97 = load float, float* %mg_gain48, align 8, !dbg !15548
  %98 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15549
  %noisebasis49 = getelementptr inbounds %struct.Tex, %struct.Tex* %98, i32 0, i32 28, !dbg !15550
  %99 = load i16, i16* %noisebasis49, align 8, !dbg !15550
  %conv50 = sext i16 %99 to i32, !dbg !15549
  %call51 = call float %80(float %82, float %84, float %add43, float %89, float %91, float %93, float %95, float %97, i32 %conv50), !dbg !15533
  %mul52 = fmul float %79, %call51, !dbg !15551
  %100 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15552
  %nor53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %100, i32 0, i32 6, !dbg !15553
  %101 = load float*, float** %nor53, align 8, !dbg !15553
  %arrayidx54 = getelementptr inbounds float, float* %101, i64 2, !dbg !15552
  store float %mul52, float* %arrayidx54, align 4, !dbg !15554
  %102 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15555
  %103 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15556
  call void @tex_normal_derivate(%struct.Tex* %102, %struct.TexResult* %103), !dbg !15557
  %104 = load i32, i32* %rv, align 4, !dbg !15558
  %or = or i32 %104, 2, !dbg !15558
  store i32 %or, i32* %rv, align 4, !dbg !15558
  br label %if.end55, !dbg !15559

if.end55:                                         ; preds = %if.then7, %if.end
  %105 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15560
  %tin56 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %105, i32 0, i32 0, !dbg !15560
  %106 = load float, float* %tin56, align 8, !dbg !15560
  %sub = fsub float %106, 5.000000e-01, !dbg !15560
  %107 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15560
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %107, i32 0, i32 5, !dbg !15560
  %108 = load float, float* %contrast, align 4, !dbg !15560
  %mul57 = fmul float %sub, %108, !dbg !15560
  %109 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15560
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %109, i32 0, i32 4, !dbg !15560
  %110 = load float, float* %bright, align 8, !dbg !15560
  %add58 = fadd float %mul57, %110, !dbg !15560
  %sub59 = fsub float %add58, 5.000000e-01, !dbg !15560
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15560
  %tin60 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 0, !dbg !15560
  store float %sub59, float* %tin60, align 8, !dbg !15560
  %112 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15561
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %112, i32 0, i32 31, !dbg !15561
  %113 = load i16, i16* %flag, align 2, !dbg !15561
  %conv61 = sext i16 %113 to i32, !dbg !15561
  %and = and i32 %conv61, 1024, !dbg !15561
  %tobool = icmp ne i32 %and, 0, !dbg !15561
  br i1 %tobool, label %if.end76, label %if.then62, !dbg !15560

if.then62:                                        ; preds = %if.end55
  %114 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15563
  %tin63 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %114, i32 0, i32 0, !dbg !15563
  %115 = load float, float* %tin63, align 8, !dbg !15563
  %cmp64 = fcmp olt float %115, 0.000000e+00, !dbg !15563
  br i1 %cmp64, label %if.then66, label %if.else68, !dbg !15566

if.then66:                                        ; preds = %if.then62
  %116 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15563
  %tin67 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %116, i32 0, i32 0, !dbg !15563
  store float 0.000000e+00, float* %tin67, align 8, !dbg !15563
  br label %if.end75, !dbg !15563

if.else68:                                        ; preds = %if.then62
  %117 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15567
  %tin69 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %117, i32 0, i32 0, !dbg !15567
  %118 = load float, float* %tin69, align 8, !dbg !15567
  %cmp70 = fcmp ogt float %118, 1.000000e+00, !dbg !15567
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !15563

if.then72:                                        ; preds = %if.else68
  %119 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15567
  %tin73 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %119, i32 0, i32 0, !dbg !15567
  store float 1.000000e+00, float* %tin73, align 8, !dbg !15567
  br label %if.end74, !dbg !15567

if.end74:                                         ; preds = %if.then72, %if.else68
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then66
  br label %if.end76, !dbg !15566

if.end76:                                         ; preds = %if.end75, %if.end55
  %120 = load i32, i32* %rv, align 4, !dbg !15569
  %conv77 = sitofp i32 %120 to float, !dbg !15569
  ret float %conv77, !dbg !15570
}

; Function Attrs: noinline nounwind uwtable
define internal float @mg_HTerrainTex(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !15571 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %offs = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15572, metadata !DIExpression()), !dbg !15573
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !15574, metadata !DIExpression()), !dbg !15575
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15576, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15578, metadata !DIExpression()), !dbg !15579
  store i32 0, i32* %rv, align 4, !dbg !15579
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15580
  %ns_outscale = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 18, !dbg !15581
  %1 = load float, float* %ns_outscale, align 8, !dbg !15581
  %2 = load float*, float** %texvec.addr, align 8, !dbg !15582
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !15582
  %3 = load float, float* %arrayidx, align 4, !dbg !15582
  %4 = load float*, float** %texvec.addr, align 8, !dbg !15583
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !15583
  %5 = load float, float* %arrayidx1, align 4, !dbg !15583
  %6 = load float*, float** %texvec.addr, align 8, !dbg !15584
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !15584
  %7 = load float, float* %arrayidx2, align 4, !dbg !15584
  %8 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15585
  %mg_H = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 12, !dbg !15586
  %9 = load float, float* %mg_H, align 8, !dbg !15586
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15587
  %mg_lacunarity = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 13, !dbg !15588
  %11 = load float, float* %mg_lacunarity, align 4, !dbg !15588
  %12 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15589
  %mg_octaves = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 14, !dbg !15590
  %13 = load float, float* %mg_octaves, align 8, !dbg !15590
  %14 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15591
  %mg_offset = getelementptr inbounds %struct.Tex, %struct.Tex* %14, i32 0, i32 15, !dbg !15592
  %15 = load float, float* %mg_offset, align 4, !dbg !15592
  %16 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15593
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %16, i32 0, i32 28, !dbg !15594
  %17 = load i16, i16* %noisebasis, align 8, !dbg !15594
  %conv = sext i16 %17 to i32, !dbg !15593
  %call = call float @mg_HeteroTerrain(float %3, float %5, float %7, float %9, float %11, float %13, float %15, i32 %conv), !dbg !15595
  %mul = fmul float %1, %call, !dbg !15596
  %18 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15597
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %18, i32 0, i32 0, !dbg !15598
  store float %mul, float* %tin, align 8, !dbg !15599
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15600
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 6, !dbg !15602
  %20 = load float*, float** %nor, align 8, !dbg !15602
  %cmp = icmp ne float* %20, null, !dbg !15603
  br i1 %cmp, label %if.then, label %if.end, !dbg !15604

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %offs, metadata !15605, metadata !DIExpression()), !dbg !15607
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15608
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 49, !dbg !15609
  %22 = load float, float* %nabla, align 8, !dbg !15609
  %23 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15610
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %23, i32 0, i32 2, !dbg !15611
  %24 = load float, float* %noisesize, align 8, !dbg !15611
  %div = fdiv float %22, %24, !dbg !15612
  store float %div, float* %offs, align 4, !dbg !15607
  %25 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15613
  %ns_outscale4 = getelementptr inbounds %struct.Tex, %struct.Tex* %25, i32 0, i32 18, !dbg !15614
  %26 = load float, float* %ns_outscale4, align 8, !dbg !15614
  %27 = load float*, float** %texvec.addr, align 8, !dbg !15615
  %arrayidx5 = getelementptr inbounds float, float* %27, i64 0, !dbg !15615
  %28 = load float, float* %arrayidx5, align 4, !dbg !15615
  %29 = load float, float* %offs, align 4, !dbg !15616
  %add = fadd float %28, %29, !dbg !15617
  %30 = load float*, float** %texvec.addr, align 8, !dbg !15618
  %arrayidx6 = getelementptr inbounds float, float* %30, i64 1, !dbg !15618
  %31 = load float, float* %arrayidx6, align 4, !dbg !15618
  %32 = load float*, float** %texvec.addr, align 8, !dbg !15619
  %arrayidx7 = getelementptr inbounds float, float* %32, i64 2, !dbg !15619
  %33 = load float, float* %arrayidx7, align 4, !dbg !15619
  %34 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15620
  %mg_H8 = getelementptr inbounds %struct.Tex, %struct.Tex* %34, i32 0, i32 12, !dbg !15621
  %35 = load float, float* %mg_H8, align 8, !dbg !15621
  %36 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15622
  %mg_lacunarity9 = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 13, !dbg !15623
  %37 = load float, float* %mg_lacunarity9, align 4, !dbg !15623
  %38 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15624
  %mg_octaves10 = getelementptr inbounds %struct.Tex, %struct.Tex* %38, i32 0, i32 14, !dbg !15625
  %39 = load float, float* %mg_octaves10, align 8, !dbg !15625
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15626
  %mg_offset11 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 15, !dbg !15627
  %41 = load float, float* %mg_offset11, align 4, !dbg !15627
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15628
  %noisebasis12 = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 28, !dbg !15629
  %43 = load i16, i16* %noisebasis12, align 8, !dbg !15629
  %conv13 = sext i16 %43 to i32, !dbg !15628
  %call14 = call float @mg_HeteroTerrain(float %add, float %31, float %33, float %35, float %37, float %39, float %41, i32 %conv13), !dbg !15630
  %mul15 = fmul float %26, %call14, !dbg !15631
  %44 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15632
  %nor16 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %44, i32 0, i32 6, !dbg !15633
  %45 = load float*, float** %nor16, align 8, !dbg !15633
  %arrayidx17 = getelementptr inbounds float, float* %45, i64 0, !dbg !15632
  store float %mul15, float* %arrayidx17, align 4, !dbg !15634
  %46 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15635
  %ns_outscale18 = getelementptr inbounds %struct.Tex, %struct.Tex* %46, i32 0, i32 18, !dbg !15636
  %47 = load float, float* %ns_outscale18, align 8, !dbg !15636
  %48 = load float*, float** %texvec.addr, align 8, !dbg !15637
  %arrayidx19 = getelementptr inbounds float, float* %48, i64 0, !dbg !15637
  %49 = load float, float* %arrayidx19, align 4, !dbg !15637
  %50 = load float*, float** %texvec.addr, align 8, !dbg !15638
  %arrayidx20 = getelementptr inbounds float, float* %50, i64 1, !dbg !15638
  %51 = load float, float* %arrayidx20, align 4, !dbg !15638
  %52 = load float, float* %offs, align 4, !dbg !15639
  %add21 = fadd float %51, %52, !dbg !15640
  %53 = load float*, float** %texvec.addr, align 8, !dbg !15641
  %arrayidx22 = getelementptr inbounds float, float* %53, i64 2, !dbg !15641
  %54 = load float, float* %arrayidx22, align 4, !dbg !15641
  %55 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15642
  %mg_H23 = getelementptr inbounds %struct.Tex, %struct.Tex* %55, i32 0, i32 12, !dbg !15643
  %56 = load float, float* %mg_H23, align 8, !dbg !15643
  %57 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15644
  %mg_lacunarity24 = getelementptr inbounds %struct.Tex, %struct.Tex* %57, i32 0, i32 13, !dbg !15645
  %58 = load float, float* %mg_lacunarity24, align 4, !dbg !15645
  %59 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15646
  %mg_octaves25 = getelementptr inbounds %struct.Tex, %struct.Tex* %59, i32 0, i32 14, !dbg !15647
  %60 = load float, float* %mg_octaves25, align 8, !dbg !15647
  %61 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15648
  %mg_offset26 = getelementptr inbounds %struct.Tex, %struct.Tex* %61, i32 0, i32 15, !dbg !15649
  %62 = load float, float* %mg_offset26, align 4, !dbg !15649
  %63 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15650
  %noisebasis27 = getelementptr inbounds %struct.Tex, %struct.Tex* %63, i32 0, i32 28, !dbg !15651
  %64 = load i16, i16* %noisebasis27, align 8, !dbg !15651
  %conv28 = sext i16 %64 to i32, !dbg !15650
  %call29 = call float @mg_HeteroTerrain(float %49, float %add21, float %54, float %56, float %58, float %60, float %62, i32 %conv28), !dbg !15652
  %mul30 = fmul float %47, %call29, !dbg !15653
  %65 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15654
  %nor31 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %65, i32 0, i32 6, !dbg !15655
  %66 = load float*, float** %nor31, align 8, !dbg !15655
  %arrayidx32 = getelementptr inbounds float, float* %66, i64 1, !dbg !15654
  store float %mul30, float* %arrayidx32, align 4, !dbg !15656
  %67 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15657
  %ns_outscale33 = getelementptr inbounds %struct.Tex, %struct.Tex* %67, i32 0, i32 18, !dbg !15658
  %68 = load float, float* %ns_outscale33, align 8, !dbg !15658
  %69 = load float*, float** %texvec.addr, align 8, !dbg !15659
  %arrayidx34 = getelementptr inbounds float, float* %69, i64 0, !dbg !15659
  %70 = load float, float* %arrayidx34, align 4, !dbg !15659
  %71 = load float*, float** %texvec.addr, align 8, !dbg !15660
  %arrayidx35 = getelementptr inbounds float, float* %71, i64 1, !dbg !15660
  %72 = load float, float* %arrayidx35, align 4, !dbg !15660
  %73 = load float*, float** %texvec.addr, align 8, !dbg !15661
  %arrayidx36 = getelementptr inbounds float, float* %73, i64 2, !dbg !15661
  %74 = load float, float* %arrayidx36, align 4, !dbg !15661
  %75 = load float, float* %offs, align 4, !dbg !15662
  %add37 = fadd float %74, %75, !dbg !15663
  %76 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15664
  %mg_H38 = getelementptr inbounds %struct.Tex, %struct.Tex* %76, i32 0, i32 12, !dbg !15665
  %77 = load float, float* %mg_H38, align 8, !dbg !15665
  %78 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15666
  %mg_lacunarity39 = getelementptr inbounds %struct.Tex, %struct.Tex* %78, i32 0, i32 13, !dbg !15667
  %79 = load float, float* %mg_lacunarity39, align 4, !dbg !15667
  %80 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15668
  %mg_octaves40 = getelementptr inbounds %struct.Tex, %struct.Tex* %80, i32 0, i32 14, !dbg !15669
  %81 = load float, float* %mg_octaves40, align 8, !dbg !15669
  %82 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15670
  %mg_offset41 = getelementptr inbounds %struct.Tex, %struct.Tex* %82, i32 0, i32 15, !dbg !15671
  %83 = load float, float* %mg_offset41, align 4, !dbg !15671
  %84 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15672
  %noisebasis42 = getelementptr inbounds %struct.Tex, %struct.Tex* %84, i32 0, i32 28, !dbg !15673
  %85 = load i16, i16* %noisebasis42, align 8, !dbg !15673
  %conv43 = sext i16 %85 to i32, !dbg !15672
  %call44 = call float @mg_HeteroTerrain(float %70, float %72, float %add37, float %77, float %79, float %81, float %83, i32 %conv43), !dbg !15674
  %mul45 = fmul float %68, %call44, !dbg !15675
  %86 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15676
  %nor46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %86, i32 0, i32 6, !dbg !15677
  %87 = load float*, float** %nor46, align 8, !dbg !15677
  %arrayidx47 = getelementptr inbounds float, float* %87, i64 2, !dbg !15676
  store float %mul45, float* %arrayidx47, align 4, !dbg !15678
  %88 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15679
  %89 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15680
  call void @tex_normal_derivate(%struct.Tex* %88, %struct.TexResult* %89), !dbg !15681
  %90 = load i32, i32* %rv, align 4, !dbg !15682
  %or = or i32 %90, 2, !dbg !15682
  store i32 %or, i32* %rv, align 4, !dbg !15682
  br label %if.end, !dbg !15683

if.end:                                           ; preds = %if.then, %entry
  %91 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15684
  %tin48 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %91, i32 0, i32 0, !dbg !15684
  %92 = load float, float* %tin48, align 8, !dbg !15684
  %sub = fsub float %92, 5.000000e-01, !dbg !15684
  %93 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15684
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %93, i32 0, i32 5, !dbg !15684
  %94 = load float, float* %contrast, align 4, !dbg !15684
  %mul49 = fmul float %sub, %94, !dbg !15684
  %95 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15684
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %95, i32 0, i32 4, !dbg !15684
  %96 = load float, float* %bright, align 8, !dbg !15684
  %add50 = fadd float %mul49, %96, !dbg !15684
  %sub51 = fsub float %add50, 5.000000e-01, !dbg !15684
  %97 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15684
  %tin52 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %97, i32 0, i32 0, !dbg !15684
  store float %sub51, float* %tin52, align 8, !dbg !15684
  %98 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15685
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %98, i32 0, i32 31, !dbg !15685
  %99 = load i16, i16* %flag, align 2, !dbg !15685
  %conv53 = sext i16 %99 to i32, !dbg !15685
  %and = and i32 %conv53, 1024, !dbg !15685
  %tobool = icmp ne i32 %and, 0, !dbg !15685
  br i1 %tobool, label %if.end67, label %if.then54, !dbg !15684

if.then54:                                        ; preds = %if.end
  %100 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15687
  %tin55 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %100, i32 0, i32 0, !dbg !15687
  %101 = load float, float* %tin55, align 8, !dbg !15687
  %cmp56 = fcmp olt float %101, 0.000000e+00, !dbg !15687
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !15690

if.then58:                                        ; preds = %if.then54
  %102 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15687
  %tin59 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %102, i32 0, i32 0, !dbg !15687
  store float 0.000000e+00, float* %tin59, align 8, !dbg !15687
  br label %if.end66, !dbg !15687

if.else:                                          ; preds = %if.then54
  %103 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15691
  %tin60 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %103, i32 0, i32 0, !dbg !15691
  %104 = load float, float* %tin60, align 8, !dbg !15691
  %cmp61 = fcmp ogt float %104, 1.000000e+00, !dbg !15691
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !15687

if.then63:                                        ; preds = %if.else
  %105 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15691
  %tin64 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %105, i32 0, i32 0, !dbg !15691
  store float 1.000000e+00, float* %tin64, align 8, !dbg !15691
  br label %if.end65, !dbg !15691

if.end65:                                         ; preds = %if.then63, %if.else
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then58
  br label %if.end67, !dbg !15690

if.end67:                                         ; preds = %if.end66, %if.end
  %106 = load i32, i32* %rv, align 4, !dbg !15693
  %conv68 = sitofp i32 %106 to float, !dbg !15693
  ret float %conv68, !dbg !15694
}

; Function Attrs: noinline nounwind uwtable
define internal float @voronoiTex(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !15695 {
entry:
  %retval = alloca float, align 4
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %da = alloca [4 x float], align 16
  %pa = alloca [12 x float], align 16
  %aw1 = alloca float, align 4
  %aw2 = alloca float, align 4
  %aw3 = alloca float, align 4
  %aw4 = alloca float, align 4
  %sc = alloca float, align 4
  %ca = alloca [3 x float], align 4
  %t1 = alloca float, align 4
  %offs = alloca float, align 4
  %_hsv = alloca [3 x float], align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !15696, metadata !DIExpression()), !dbg !15697
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !15698, metadata !DIExpression()), !dbg !15699
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !15700, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15702, metadata !DIExpression()), !dbg !15703
  store i32 0, i32* %rv, align 4, !dbg !15703
  call void @llvm.dbg.declare(metadata [4 x float]* %da, metadata !15704, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.declare(metadata [12 x float]* %pa, metadata !15706, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.declare(metadata float* %aw1, metadata !15711, metadata !DIExpression()), !dbg !15712
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15713
  %vn_w1 = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 19, !dbg !15714
  %1 = load float, float* %vn_w1, align 4, !dbg !15714
  %2 = call float @llvm.fabs.f32(float %1), !dbg !15715
  store float %2, float* %aw1, align 4, !dbg !15712
  call void @llvm.dbg.declare(metadata float* %aw2, metadata !15716, metadata !DIExpression()), !dbg !15717
  %3 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15718
  %vn_w2 = getelementptr inbounds %struct.Tex, %struct.Tex* %3, i32 0, i32 20, !dbg !15719
  %4 = load float, float* %vn_w2, align 8, !dbg !15719
  %5 = call float @llvm.fabs.f32(float %4), !dbg !15720
  store float %5, float* %aw2, align 4, !dbg !15717
  call void @llvm.dbg.declare(metadata float* %aw3, metadata !15721, metadata !DIExpression()), !dbg !15722
  %6 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15723
  %vn_w3 = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 21, !dbg !15724
  %7 = load float, float* %vn_w3, align 4, !dbg !15724
  %8 = call float @llvm.fabs.f32(float %7), !dbg !15725
  store float %8, float* %aw3, align 4, !dbg !15722
  call void @llvm.dbg.declare(metadata float* %aw4, metadata !15726, metadata !DIExpression()), !dbg !15727
  %9 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15728
  %vn_w4 = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 22, !dbg !15729
  %10 = load float, float* %vn_w4, align 8, !dbg !15729
  %11 = call float @llvm.fabs.f32(float %10), !dbg !15730
  store float %11, float* %aw4, align 4, !dbg !15727
  call void @llvm.dbg.declare(metadata float* %sc, metadata !15731, metadata !DIExpression()), !dbg !15732
  %12 = load float, float* %aw1, align 4, !dbg !15733
  %13 = load float, float* %aw2, align 4, !dbg !15734
  %add = fadd float %12, %13, !dbg !15735
  %14 = load float, float* %aw3, align 4, !dbg !15736
  %add1 = fadd float %add, %14, !dbg !15737
  %15 = load float, float* %aw4, align 4, !dbg !15738
  %add2 = fadd float %add1, %15, !dbg !15739
  store float %add2, float* %sc, align 4, !dbg !15732
  %16 = load float, float* %sc, align 4, !dbg !15740
  %cmp = fcmp une float %16, 0.000000e+00, !dbg !15742
  br i1 %cmp, label %if.then, label %if.end, !dbg !15743

if.then:                                          ; preds = %entry
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15744
  %ns_outscale = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 18, !dbg !15745
  %18 = load float, float* %ns_outscale, align 8, !dbg !15745
  %19 = load float, float* %sc, align 4, !dbg !15746
  %div = fdiv float %18, %19, !dbg !15747
  store float %div, float* %sc, align 4, !dbg !15748
  br label %if.end, !dbg !15749

if.end:                                           ; preds = %if.then, %entry
  %20 = load float*, float** %texvec.addr, align 8, !dbg !15750
  %arrayidx = getelementptr inbounds float, float* %20, i64 0, !dbg !15750
  %21 = load float, float* %arrayidx, align 4, !dbg !15750
  %22 = load float*, float** %texvec.addr, align 8, !dbg !15751
  %arrayidx3 = getelementptr inbounds float, float* %22, i64 1, !dbg !15751
  %23 = load float, float* %arrayidx3, align 4, !dbg !15751
  %24 = load float*, float** %texvec.addr, align 8, !dbg !15752
  %arrayidx4 = getelementptr inbounds float, float* %24, i64 2, !dbg !15752
  %25 = load float, float* %arrayidx4, align 4, !dbg !15752
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15753
  %arraydecay5 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 0, !dbg !15754
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15755
  %vn_mexp = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 23, !dbg !15756
  %27 = load float, float* %vn_mexp, align 4, !dbg !15756
  %28 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15757
  %vn_distm = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 24, !dbg !15758
  %29 = load i16, i16* %vn_distm, align 8, !dbg !15758
  %conv = sext i16 %29 to i32, !dbg !15757
  call void @voronoi(float %21, float %23, float %25, float* %arraydecay, float* %arraydecay5, float %27, i32 %conv), !dbg !15759
  %30 = load float, float* %sc, align 4, !dbg !15760
  %31 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15761
  %vn_w16 = getelementptr inbounds %struct.Tex, %struct.Tex* %31, i32 0, i32 19, !dbg !15762
  %32 = load float, float* %vn_w16, align 4, !dbg !15762
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15763
  %33 = load float, float* %arrayidx7, align 16, !dbg !15763
  %mul = fmul float %32, %33, !dbg !15764
  %34 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15765
  %vn_w28 = getelementptr inbounds %struct.Tex, %struct.Tex* %34, i32 0, i32 20, !dbg !15766
  %35 = load float, float* %vn_w28, align 8, !dbg !15766
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 1, !dbg !15767
  %36 = load float, float* %arrayidx9, align 4, !dbg !15767
  %mul10 = fmul float %35, %36, !dbg !15768
  %add11 = fadd float %mul, %mul10, !dbg !15769
  %37 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15770
  %vn_w312 = getelementptr inbounds %struct.Tex, %struct.Tex* %37, i32 0, i32 21, !dbg !15771
  %38 = load float, float* %vn_w312, align 4, !dbg !15771
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 2, !dbg !15772
  %39 = load float, float* %arrayidx13, align 8, !dbg !15772
  %mul14 = fmul float %38, %39, !dbg !15773
  %add15 = fadd float %add11, %mul14, !dbg !15774
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15775
  %vn_w416 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 22, !dbg !15776
  %41 = load float, float* %vn_w416, align 8, !dbg !15776
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 3, !dbg !15777
  %42 = load float, float* %arrayidx17, align 4, !dbg !15777
  %mul18 = fmul float %41, %42, !dbg !15778
  %add19 = fadd float %add15, %mul18, !dbg !15779
  %43 = call float @llvm.fabs.f32(float %add19), !dbg !15780
  %mul20 = fmul float %30, %43, !dbg !15781
  %44 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15782
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %44, i32 0, i32 0, !dbg !15783
  store float %mul20, float* %tin, align 8, !dbg !15784
  %45 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15785
  %vn_coltype = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 25, !dbg !15787
  %46 = load i16, i16* %vn_coltype, align 2, !dbg !15787
  %tobool = icmp ne i16 %46, 0, !dbg !15785
  br i1 %tobool, label %if.then21, label %if.end115, !dbg !15788

if.then21:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %ca, metadata !15789, metadata !DIExpression()), !dbg !15791
  %arrayidx22 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 0, !dbg !15792
  %47 = load float, float* %arrayidx22, align 16, !dbg !15792
  %arrayidx23 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 1, !dbg !15793
  %48 = load float, float* %arrayidx23, align 4, !dbg !15793
  %arrayidx24 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 2, !dbg !15794
  %49 = load float, float* %arrayidx24, align 8, !dbg !15794
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15795
  call void @cellNoiseV(float %47, float %48, float %49, float* %arraydecay25), !dbg !15796
  %50 = load float, float* %aw1, align 4, !dbg !15797
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15798
  %51 = load float, float* %arrayidx26, align 4, !dbg !15798
  %mul27 = fmul float %50, %51, !dbg !15799
  %52 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15800
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %52, i32 0, i32 1, !dbg !15801
  store float %mul27, float* %tr, align 4, !dbg !15802
  %53 = load float, float* %aw1, align 4, !dbg !15803
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 1, !dbg !15804
  %54 = load float, float* %arrayidx28, align 4, !dbg !15804
  %mul29 = fmul float %53, %54, !dbg !15805
  %55 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15806
  %tg = getelementptr inbounds %struct.TexResult, %struct.TexResult* %55, i32 0, i32 2, !dbg !15807
  store float %mul29, float* %tg, align 8, !dbg !15808
  %56 = load float, float* %aw1, align 4, !dbg !15809
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 2, !dbg !15810
  %57 = load float, float* %arrayidx30, align 4, !dbg !15810
  %mul31 = fmul float %56, %57, !dbg !15811
  %58 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15812
  %tb = getelementptr inbounds %struct.TexResult, %struct.TexResult* %58, i32 0, i32 3, !dbg !15813
  store float %mul31, float* %tb, align 4, !dbg !15814
  %arrayidx32 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 3, !dbg !15815
  %59 = load float, float* %arrayidx32, align 4, !dbg !15815
  %arrayidx33 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 4, !dbg !15816
  %60 = load float, float* %arrayidx33, align 16, !dbg !15816
  %arrayidx34 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 5, !dbg !15817
  %61 = load float, float* %arrayidx34, align 4, !dbg !15817
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15818
  call void @cellNoiseV(float %59, float %60, float %61, float* %arraydecay35), !dbg !15819
  %62 = load float, float* %aw2, align 4, !dbg !15820
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15821
  %63 = load float, float* %arrayidx36, align 4, !dbg !15821
  %mul37 = fmul float %62, %63, !dbg !15822
  %64 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15823
  %tr38 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %64, i32 0, i32 1, !dbg !15824
  %65 = load float, float* %tr38, align 4, !dbg !15825
  %add39 = fadd float %65, %mul37, !dbg !15825
  store float %add39, float* %tr38, align 4, !dbg !15825
  %66 = load float, float* %aw2, align 4, !dbg !15826
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 1, !dbg !15827
  %67 = load float, float* %arrayidx40, align 4, !dbg !15827
  %mul41 = fmul float %66, %67, !dbg !15828
  %68 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15829
  %tg42 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %68, i32 0, i32 2, !dbg !15830
  %69 = load float, float* %tg42, align 8, !dbg !15831
  %add43 = fadd float %69, %mul41, !dbg !15831
  store float %add43, float* %tg42, align 8, !dbg !15831
  %70 = load float, float* %aw2, align 4, !dbg !15832
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 2, !dbg !15833
  %71 = load float, float* %arrayidx44, align 4, !dbg !15833
  %mul45 = fmul float %70, %71, !dbg !15834
  %72 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15835
  %tb46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %72, i32 0, i32 3, !dbg !15836
  %73 = load float, float* %tb46, align 4, !dbg !15837
  %add47 = fadd float %73, %mul45, !dbg !15837
  store float %add47, float* %tb46, align 4, !dbg !15837
  %arrayidx48 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 6, !dbg !15838
  %74 = load float, float* %arrayidx48, align 8, !dbg !15838
  %arrayidx49 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 7, !dbg !15839
  %75 = load float, float* %arrayidx49, align 4, !dbg !15839
  %arrayidx50 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 8, !dbg !15840
  %76 = load float, float* %arrayidx50, align 16, !dbg !15840
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15841
  call void @cellNoiseV(float %74, float %75, float %76, float* %arraydecay51), !dbg !15842
  %77 = load float, float* %aw3, align 4, !dbg !15843
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15844
  %78 = load float, float* %arrayidx52, align 4, !dbg !15844
  %mul53 = fmul float %77, %78, !dbg !15845
  %79 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15846
  %tr54 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %79, i32 0, i32 1, !dbg !15847
  %80 = load float, float* %tr54, align 4, !dbg !15848
  %add55 = fadd float %80, %mul53, !dbg !15848
  store float %add55, float* %tr54, align 4, !dbg !15848
  %81 = load float, float* %aw3, align 4, !dbg !15849
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 1, !dbg !15850
  %82 = load float, float* %arrayidx56, align 4, !dbg !15850
  %mul57 = fmul float %81, %82, !dbg !15851
  %83 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15852
  %tg58 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %83, i32 0, i32 2, !dbg !15853
  %84 = load float, float* %tg58, align 8, !dbg !15854
  %add59 = fadd float %84, %mul57, !dbg !15854
  store float %add59, float* %tg58, align 8, !dbg !15854
  %85 = load float, float* %aw3, align 4, !dbg !15855
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 2, !dbg !15856
  %86 = load float, float* %arrayidx60, align 4, !dbg !15856
  %mul61 = fmul float %85, %86, !dbg !15857
  %87 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15858
  %tb62 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %87, i32 0, i32 3, !dbg !15859
  %88 = load float, float* %tb62, align 4, !dbg !15860
  %add63 = fadd float %88, %mul61, !dbg !15860
  store float %add63, float* %tb62, align 4, !dbg !15860
  %arrayidx64 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 9, !dbg !15861
  %89 = load float, float* %arrayidx64, align 4, !dbg !15861
  %arrayidx65 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 10, !dbg !15862
  %90 = load float, float* %arrayidx65, align 8, !dbg !15862
  %arrayidx66 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 11, !dbg !15863
  %91 = load float, float* %arrayidx66, align 4, !dbg !15863
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15864
  call void @cellNoiseV(float %89, float %90, float %91, float* %arraydecay67), !dbg !15865
  %92 = load float, float* %aw4, align 4, !dbg !15866
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 0, !dbg !15867
  %93 = load float, float* %arrayidx68, align 4, !dbg !15867
  %mul69 = fmul float %92, %93, !dbg !15868
  %94 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15869
  %tr70 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %94, i32 0, i32 1, !dbg !15870
  %95 = load float, float* %tr70, align 4, !dbg !15871
  %add71 = fadd float %95, %mul69, !dbg !15871
  store float %add71, float* %tr70, align 4, !dbg !15871
  %96 = load float, float* %aw4, align 4, !dbg !15872
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 1, !dbg !15873
  %97 = load float, float* %arrayidx72, align 4, !dbg !15873
  %mul73 = fmul float %96, %97, !dbg !15874
  %98 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15875
  %tg74 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %98, i32 0, i32 2, !dbg !15876
  %99 = load float, float* %tg74, align 8, !dbg !15877
  %add75 = fadd float %99, %mul73, !dbg !15877
  store float %add75, float* %tg74, align 8, !dbg !15877
  %100 = load float, float* %aw4, align 4, !dbg !15878
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %ca, i64 0, i64 2, !dbg !15879
  %101 = load float, float* %arrayidx76, align 4, !dbg !15879
  %mul77 = fmul float %100, %101, !dbg !15880
  %102 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15881
  %tb78 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %102, i32 0, i32 3, !dbg !15882
  %103 = load float, float* %tb78, align 4, !dbg !15883
  %add79 = fadd float %103, %mul77, !dbg !15883
  store float %add79, float* %tb78, align 4, !dbg !15883
  %104 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15884
  %vn_coltype80 = getelementptr inbounds %struct.Tex, %struct.Tex* %104, i32 0, i32 25, !dbg !15886
  %105 = load i16, i16* %vn_coltype80, align 2, !dbg !15886
  %conv81 = sext i16 %105 to i32, !dbg !15884
  %cmp82 = icmp sge i32 %conv81, 2, !dbg !15887
  br i1 %cmp82, label %if.then84, label %if.else107, !dbg !15888

if.then84:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata float* %t1, metadata !15889, metadata !DIExpression()), !dbg !15891
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 1, !dbg !15892
  %106 = load float, float* %arrayidx85, align 4, !dbg !15892
  %arrayidx86 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15893
  %107 = load float, float* %arrayidx86, align 16, !dbg !15893
  %sub = fsub float %106, %107, !dbg !15894
  %mul87 = fmul float %sub, 1.000000e+01, !dbg !15895
  store float %mul87, float* %t1, align 4, !dbg !15891
  %108 = load float, float* %t1, align 4, !dbg !15896
  %cmp88 = fcmp ogt float %108, 1.000000e+00, !dbg !15898
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !15899

if.then90:                                        ; preds = %if.then84
  store float 1.000000e+00, float* %t1, align 4, !dbg !15900
  br label %if.end91, !dbg !15901

if.end91:                                         ; preds = %if.then90, %if.then84
  %109 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15902
  %vn_coltype92 = getelementptr inbounds %struct.Tex, %struct.Tex* %109, i32 0, i32 25, !dbg !15904
  %110 = load i16, i16* %vn_coltype92, align 2, !dbg !15904
  %conv93 = sext i16 %110 to i32, !dbg !15902
  %cmp94 = icmp eq i32 %conv93, 3, !dbg !15905
  br i1 %cmp94, label %if.then96, label %if.else, !dbg !15906

if.then96:                                        ; preds = %if.end91
  %111 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15907
  %tin97 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %111, i32 0, i32 0, !dbg !15908
  %112 = load float, float* %tin97, align 8, !dbg !15908
  %113 = load float, float* %t1, align 4, !dbg !15909
  %mul98 = fmul float %113, %112, !dbg !15909
  store float %mul98, float* %t1, align 4, !dbg !15909
  br label %if.end100, !dbg !15910

if.else:                                          ; preds = %if.end91
  %114 = load float, float* %sc, align 4, !dbg !15911
  %115 = load float, float* %t1, align 4, !dbg !15912
  %mul99 = fmul float %115, %114, !dbg !15912
  store float %mul99, float* %t1, align 4, !dbg !15912
  br label %if.end100

if.end100:                                        ; preds = %if.else, %if.then96
  %116 = load float, float* %t1, align 4, !dbg !15913
  %117 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15914
  %tr101 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %117, i32 0, i32 1, !dbg !15915
  %118 = load float, float* %tr101, align 4, !dbg !15916
  %mul102 = fmul float %118, %116, !dbg !15916
  store float %mul102, float* %tr101, align 4, !dbg !15916
  %119 = load float, float* %t1, align 4, !dbg !15917
  %120 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15918
  %tg103 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %120, i32 0, i32 2, !dbg !15919
  %121 = load float, float* %tg103, align 8, !dbg !15920
  %mul104 = fmul float %121, %119, !dbg !15920
  store float %mul104, float* %tg103, align 8, !dbg !15920
  %122 = load float, float* %t1, align 4, !dbg !15921
  %123 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15922
  %tb105 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %123, i32 0, i32 3, !dbg !15923
  %124 = load float, float* %tb105, align 4, !dbg !15924
  %mul106 = fmul float %124, %122, !dbg !15924
  store float %mul106, float* %tb105, align 4, !dbg !15924
  br label %if.end114, !dbg !15925

if.else107:                                       ; preds = %if.then21
  %125 = load float, float* %sc, align 4, !dbg !15926
  %126 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15928
  %tr108 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %126, i32 0, i32 1, !dbg !15929
  %127 = load float, float* %tr108, align 4, !dbg !15930
  %mul109 = fmul float %127, %125, !dbg !15930
  store float %mul109, float* %tr108, align 4, !dbg !15930
  %128 = load float, float* %sc, align 4, !dbg !15931
  %129 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15932
  %tg110 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %129, i32 0, i32 2, !dbg !15933
  %130 = load float, float* %tg110, align 8, !dbg !15934
  %mul111 = fmul float %130, %128, !dbg !15934
  store float %mul111, float* %tg110, align 8, !dbg !15934
  %131 = load float, float* %sc, align 4, !dbg !15935
  %132 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15936
  %tb112 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %132, i32 0, i32 3, !dbg !15937
  %133 = load float, float* %tb112, align 4, !dbg !15938
  %mul113 = fmul float %133, %131, !dbg !15938
  store float %mul113, float* %tb112, align 4, !dbg !15938
  br label %if.end114

if.end114:                                        ; preds = %if.else107, %if.end100
  br label %if.end115, !dbg !15939

if.end115:                                        ; preds = %if.end114, %if.end
  %134 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15940
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %134, i32 0, i32 6, !dbg !15942
  %135 = load float*, float** %nor, align 8, !dbg !15942
  %cmp116 = icmp ne float* %135, null, !dbg !15943
  br i1 %cmp116, label %if.then118, label %if.end201, !dbg !15944

if.then118:                                       ; preds = %if.end115
  call void @llvm.dbg.declare(metadata float* %offs, metadata !15945, metadata !DIExpression()), !dbg !15947
  %136 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15948
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %136, i32 0, i32 49, !dbg !15949
  %137 = load float, float* %nabla, align 8, !dbg !15949
  %138 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15950
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %138, i32 0, i32 2, !dbg !15951
  %139 = load float, float* %noisesize, align 8, !dbg !15951
  %div119 = fdiv float %137, %139, !dbg !15952
  store float %div119, float* %offs, align 4, !dbg !15947
  %140 = load float*, float** %texvec.addr, align 8, !dbg !15953
  %arrayidx120 = getelementptr inbounds float, float* %140, i64 0, !dbg !15953
  %141 = load float, float* %arrayidx120, align 4, !dbg !15953
  %142 = load float, float* %offs, align 4, !dbg !15954
  %add121 = fadd float %141, %142, !dbg !15955
  %143 = load float*, float** %texvec.addr, align 8, !dbg !15956
  %arrayidx122 = getelementptr inbounds float, float* %143, i64 1, !dbg !15956
  %144 = load float, float* %arrayidx122, align 4, !dbg !15956
  %145 = load float*, float** %texvec.addr, align 8, !dbg !15957
  %arrayidx123 = getelementptr inbounds float, float* %145, i64 2, !dbg !15957
  %146 = load float, float* %arrayidx123, align 4, !dbg !15957
  %arraydecay124 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15958
  %arraydecay125 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 0, !dbg !15959
  %147 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15960
  %vn_mexp126 = getelementptr inbounds %struct.Tex, %struct.Tex* %147, i32 0, i32 23, !dbg !15961
  %148 = load float, float* %vn_mexp126, align 4, !dbg !15961
  %149 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15962
  %vn_distm127 = getelementptr inbounds %struct.Tex, %struct.Tex* %149, i32 0, i32 24, !dbg !15963
  %150 = load i16, i16* %vn_distm127, align 8, !dbg !15963
  %conv128 = sext i16 %150 to i32, !dbg !15962
  call void @voronoi(float %add121, float %144, float %146, float* %arraydecay124, float* %arraydecay125, float %148, i32 %conv128), !dbg !15964
  %151 = load float, float* %sc, align 4, !dbg !15965
  %152 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15966
  %vn_w1129 = getelementptr inbounds %struct.Tex, %struct.Tex* %152, i32 0, i32 19, !dbg !15967
  %153 = load float, float* %vn_w1129, align 4, !dbg !15967
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15968
  %154 = load float, float* %arrayidx130, align 16, !dbg !15968
  %mul131 = fmul float %153, %154, !dbg !15969
  %155 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15970
  %vn_w2132 = getelementptr inbounds %struct.Tex, %struct.Tex* %155, i32 0, i32 20, !dbg !15971
  %156 = load float, float* %vn_w2132, align 8, !dbg !15971
  %arrayidx133 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 1, !dbg !15972
  %157 = load float, float* %arrayidx133, align 4, !dbg !15972
  %mul134 = fmul float %156, %157, !dbg !15973
  %add135 = fadd float %mul131, %mul134, !dbg !15974
  %158 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15975
  %vn_w3136 = getelementptr inbounds %struct.Tex, %struct.Tex* %158, i32 0, i32 21, !dbg !15976
  %159 = load float, float* %vn_w3136, align 4, !dbg !15976
  %arrayidx137 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 2, !dbg !15977
  %160 = load float, float* %arrayidx137, align 8, !dbg !15977
  %mul138 = fmul float %159, %160, !dbg !15978
  %add139 = fadd float %add135, %mul138, !dbg !15979
  %161 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15980
  %vn_w4140 = getelementptr inbounds %struct.Tex, %struct.Tex* %161, i32 0, i32 22, !dbg !15981
  %162 = load float, float* %vn_w4140, align 8, !dbg !15981
  %arrayidx141 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 3, !dbg !15982
  %163 = load float, float* %arrayidx141, align 4, !dbg !15982
  %mul142 = fmul float %162, %163, !dbg !15983
  %add143 = fadd float %add139, %mul142, !dbg !15984
  %164 = call float @llvm.fabs.f32(float %add143), !dbg !15985
  %mul144 = fmul float %151, %164, !dbg !15986
  %165 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !15987
  %nor145 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %165, i32 0, i32 6, !dbg !15988
  %166 = load float*, float** %nor145, align 8, !dbg !15988
  %arrayidx146 = getelementptr inbounds float, float* %166, i64 0, !dbg !15987
  store float %mul144, float* %arrayidx146, align 4, !dbg !15989
  %167 = load float*, float** %texvec.addr, align 8, !dbg !15990
  %arrayidx147 = getelementptr inbounds float, float* %167, i64 0, !dbg !15990
  %168 = load float, float* %arrayidx147, align 4, !dbg !15990
  %169 = load float*, float** %texvec.addr, align 8, !dbg !15991
  %arrayidx148 = getelementptr inbounds float, float* %169, i64 1, !dbg !15991
  %170 = load float, float* %arrayidx148, align 4, !dbg !15991
  %171 = load float, float* %offs, align 4, !dbg !15992
  %add149 = fadd float %170, %171, !dbg !15993
  %172 = load float*, float** %texvec.addr, align 8, !dbg !15994
  %arrayidx150 = getelementptr inbounds float, float* %172, i64 2, !dbg !15994
  %173 = load float, float* %arrayidx150, align 4, !dbg !15994
  %arraydecay151 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !15995
  %arraydecay152 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 0, !dbg !15996
  %174 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15997
  %vn_mexp153 = getelementptr inbounds %struct.Tex, %struct.Tex* %174, i32 0, i32 23, !dbg !15998
  %175 = load float, float* %vn_mexp153, align 4, !dbg !15998
  %176 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !15999
  %vn_distm154 = getelementptr inbounds %struct.Tex, %struct.Tex* %176, i32 0, i32 24, !dbg !16000
  %177 = load i16, i16* %vn_distm154, align 8, !dbg !16000
  %conv155 = sext i16 %177 to i32, !dbg !15999
  call void @voronoi(float %168, float %add149, float %173, float* %arraydecay151, float* %arraydecay152, float %175, i32 %conv155), !dbg !16001
  %178 = load float, float* %sc, align 4, !dbg !16002
  %179 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16003
  %vn_w1156 = getelementptr inbounds %struct.Tex, %struct.Tex* %179, i32 0, i32 19, !dbg !16004
  %180 = load float, float* %vn_w1156, align 4, !dbg !16004
  %arrayidx157 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !16005
  %181 = load float, float* %arrayidx157, align 16, !dbg !16005
  %mul158 = fmul float %180, %181, !dbg !16006
  %182 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16007
  %vn_w2159 = getelementptr inbounds %struct.Tex, %struct.Tex* %182, i32 0, i32 20, !dbg !16008
  %183 = load float, float* %vn_w2159, align 8, !dbg !16008
  %arrayidx160 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 1, !dbg !16009
  %184 = load float, float* %arrayidx160, align 4, !dbg !16009
  %mul161 = fmul float %183, %184, !dbg !16010
  %add162 = fadd float %mul158, %mul161, !dbg !16011
  %185 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16012
  %vn_w3163 = getelementptr inbounds %struct.Tex, %struct.Tex* %185, i32 0, i32 21, !dbg !16013
  %186 = load float, float* %vn_w3163, align 4, !dbg !16013
  %arrayidx164 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 2, !dbg !16014
  %187 = load float, float* %arrayidx164, align 8, !dbg !16014
  %mul165 = fmul float %186, %187, !dbg !16015
  %add166 = fadd float %add162, %mul165, !dbg !16016
  %188 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16017
  %vn_w4167 = getelementptr inbounds %struct.Tex, %struct.Tex* %188, i32 0, i32 22, !dbg !16018
  %189 = load float, float* %vn_w4167, align 8, !dbg !16018
  %arrayidx168 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 3, !dbg !16019
  %190 = load float, float* %arrayidx168, align 4, !dbg !16019
  %mul169 = fmul float %189, %190, !dbg !16020
  %add170 = fadd float %add166, %mul169, !dbg !16021
  %191 = call float @llvm.fabs.f32(float %add170), !dbg !16022
  %mul171 = fmul float %178, %191, !dbg !16023
  %192 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16024
  %nor172 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %192, i32 0, i32 6, !dbg !16025
  %193 = load float*, float** %nor172, align 8, !dbg !16025
  %arrayidx173 = getelementptr inbounds float, float* %193, i64 1, !dbg !16024
  store float %mul171, float* %arrayidx173, align 4, !dbg !16026
  %194 = load float*, float** %texvec.addr, align 8, !dbg !16027
  %arrayidx174 = getelementptr inbounds float, float* %194, i64 0, !dbg !16027
  %195 = load float, float* %arrayidx174, align 4, !dbg !16027
  %196 = load float*, float** %texvec.addr, align 8, !dbg !16028
  %arrayidx175 = getelementptr inbounds float, float* %196, i64 1, !dbg !16028
  %197 = load float, float* %arrayidx175, align 4, !dbg !16028
  %198 = load float*, float** %texvec.addr, align 8, !dbg !16029
  %arrayidx176 = getelementptr inbounds float, float* %198, i64 2, !dbg !16029
  %199 = load float, float* %arrayidx176, align 4, !dbg !16029
  %200 = load float, float* %offs, align 4, !dbg !16030
  %add177 = fadd float %199, %200, !dbg !16031
  %arraydecay178 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !16032
  %arraydecay179 = getelementptr inbounds [12 x float], [12 x float]* %pa, i64 0, i64 0, !dbg !16033
  %201 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16034
  %vn_mexp180 = getelementptr inbounds %struct.Tex, %struct.Tex* %201, i32 0, i32 23, !dbg !16035
  %202 = load float, float* %vn_mexp180, align 4, !dbg !16035
  %203 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16036
  %vn_distm181 = getelementptr inbounds %struct.Tex, %struct.Tex* %203, i32 0, i32 24, !dbg !16037
  %204 = load i16, i16* %vn_distm181, align 8, !dbg !16037
  %conv182 = sext i16 %204 to i32, !dbg !16036
  call void @voronoi(float %195, float %197, float %add177, float* %arraydecay178, float* %arraydecay179, float %202, i32 %conv182), !dbg !16038
  %205 = load float, float* %sc, align 4, !dbg !16039
  %206 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16040
  %vn_w1183 = getelementptr inbounds %struct.Tex, %struct.Tex* %206, i32 0, i32 19, !dbg !16041
  %207 = load float, float* %vn_w1183, align 4, !dbg !16041
  %arrayidx184 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 0, !dbg !16042
  %208 = load float, float* %arrayidx184, align 16, !dbg !16042
  %mul185 = fmul float %207, %208, !dbg !16043
  %209 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16044
  %vn_w2186 = getelementptr inbounds %struct.Tex, %struct.Tex* %209, i32 0, i32 20, !dbg !16045
  %210 = load float, float* %vn_w2186, align 8, !dbg !16045
  %arrayidx187 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 1, !dbg !16046
  %211 = load float, float* %arrayidx187, align 4, !dbg !16046
  %mul188 = fmul float %210, %211, !dbg !16047
  %add189 = fadd float %mul185, %mul188, !dbg !16048
  %212 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16049
  %vn_w3190 = getelementptr inbounds %struct.Tex, %struct.Tex* %212, i32 0, i32 21, !dbg !16050
  %213 = load float, float* %vn_w3190, align 4, !dbg !16050
  %arrayidx191 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 2, !dbg !16051
  %214 = load float, float* %arrayidx191, align 8, !dbg !16051
  %mul192 = fmul float %213, %214, !dbg !16052
  %add193 = fadd float %add189, %mul192, !dbg !16053
  %215 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16054
  %vn_w4194 = getelementptr inbounds %struct.Tex, %struct.Tex* %215, i32 0, i32 22, !dbg !16055
  %216 = load float, float* %vn_w4194, align 8, !dbg !16055
  %arrayidx195 = getelementptr inbounds [4 x float], [4 x float]* %da, i64 0, i64 3, !dbg !16056
  %217 = load float, float* %arrayidx195, align 4, !dbg !16056
  %mul196 = fmul float %216, %217, !dbg !16057
  %add197 = fadd float %add193, %mul196, !dbg !16058
  %218 = call float @llvm.fabs.f32(float %add197), !dbg !16059
  %mul198 = fmul float %205, %218, !dbg !16060
  %219 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16061
  %nor199 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %219, i32 0, i32 6, !dbg !16062
  %220 = load float*, float** %nor199, align 8, !dbg !16062
  %arrayidx200 = getelementptr inbounds float, float* %220, i64 2, !dbg !16061
  store float %mul198, float* %arrayidx200, align 4, !dbg !16063
  %221 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16064
  %222 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16065
  call void @tex_normal_derivate(%struct.Tex* %221, %struct.TexResult* %222), !dbg !16066
  %223 = load i32, i32* %rv, align 4, !dbg !16067
  %or = or i32 %223, 2, !dbg !16067
  store i32 %or, i32* %rv, align 4, !dbg !16067
  br label %if.end201, !dbg !16068

if.end201:                                        ; preds = %if.then118, %if.end115
  %224 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16069
  %vn_coltype202 = getelementptr inbounds %struct.Tex, %struct.Tex* %224, i32 0, i32 25, !dbg !16071
  %225 = load i16, i16* %vn_coltype202, align 2, !dbg !16071
  %tobool203 = icmp ne i16 %225, 0, !dbg !16069
  br i1 %tobool203, label %if.then204, label %if.end274, !dbg !16072

if.then204:                                       ; preds = %if.end201
  %226 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %rfac = getelementptr inbounds %struct.Tex, %struct.Tex* %226, i32 0, i32 7, !dbg !16073
  %227 = load float, float* %rfac, align 4, !dbg !16073
  %228 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tr205 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %228, i32 0, i32 1, !dbg !16073
  %229 = load float, float* %tr205, align 4, !dbg !16073
  %sub206 = fsub float %229, 5.000000e-01, !dbg !16073
  %230 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %230, i32 0, i32 5, !dbg !16073
  %231 = load float, float* %contrast, align 4, !dbg !16073
  %mul207 = fmul float %sub206, %231, !dbg !16073
  %232 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %232, i32 0, i32 4, !dbg !16073
  %233 = load float, float* %bright, align 8, !dbg !16073
  %add208 = fadd float %mul207, %233, !dbg !16073
  %sub209 = fsub float %add208, 5.000000e-01, !dbg !16073
  %mul210 = fmul float %227, %sub209, !dbg !16073
  %234 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tr211 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %234, i32 0, i32 1, !dbg !16073
  store float %mul210, float* %tr211, align 4, !dbg !16073
  %235 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %gfac = getelementptr inbounds %struct.Tex, %struct.Tex* %235, i32 0, i32 8, !dbg !16073
  %236 = load float, float* %gfac, align 8, !dbg !16073
  %237 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tg212 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %237, i32 0, i32 2, !dbg !16073
  %238 = load float, float* %tg212, align 8, !dbg !16073
  %sub213 = fsub float %238, 5.000000e-01, !dbg !16073
  %239 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %contrast214 = getelementptr inbounds %struct.Tex, %struct.Tex* %239, i32 0, i32 5, !dbg !16073
  %240 = load float, float* %contrast214, align 4, !dbg !16073
  %mul215 = fmul float %sub213, %240, !dbg !16073
  %241 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %bright216 = getelementptr inbounds %struct.Tex, %struct.Tex* %241, i32 0, i32 4, !dbg !16073
  %242 = load float, float* %bright216, align 8, !dbg !16073
  %add217 = fadd float %mul215, %242, !dbg !16073
  %sub218 = fsub float %add217, 5.000000e-01, !dbg !16073
  %mul219 = fmul float %236, %sub218, !dbg !16073
  %243 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tg220 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %243, i32 0, i32 2, !dbg !16073
  store float %mul219, float* %tg220, align 8, !dbg !16073
  %244 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %bfac = getelementptr inbounds %struct.Tex, %struct.Tex* %244, i32 0, i32 9, !dbg !16073
  %245 = load float, float* %bfac, align 4, !dbg !16073
  %246 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tb221 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %246, i32 0, i32 3, !dbg !16073
  %247 = load float, float* %tb221, align 4, !dbg !16073
  %sub222 = fsub float %247, 5.000000e-01, !dbg !16073
  %248 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %contrast223 = getelementptr inbounds %struct.Tex, %struct.Tex* %248, i32 0, i32 5, !dbg !16073
  %249 = load float, float* %contrast223, align 4, !dbg !16073
  %mul224 = fmul float %sub222, %249, !dbg !16073
  %250 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16073
  %bright225 = getelementptr inbounds %struct.Tex, %struct.Tex* %250, i32 0, i32 4, !dbg !16073
  %251 = load float, float* %bright225, align 8, !dbg !16073
  %add226 = fadd float %mul224, %251, !dbg !16073
  %sub227 = fsub float %add226, 5.000000e-01, !dbg !16073
  %mul228 = fmul float %245, %sub227, !dbg !16073
  %252 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16073
  %tb229 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %252, i32 0, i32 3, !dbg !16073
  store float %mul228, float* %tb229, align 4, !dbg !16073
  %253 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16075
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %253, i32 0, i32 31, !dbg !16075
  %254 = load i16, i16* %flag, align 2, !dbg !16075
  %conv230 = sext i16 %254 to i32, !dbg !16075
  %and = and i32 %conv230, 1024, !dbg !16075
  %tobool231 = icmp ne i32 %and, 0, !dbg !16075
  br i1 %tobool231, label %if.end251, label %if.then232, !dbg !16073

if.then232:                                       ; preds = %if.then204
  %255 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16077
  %tr233 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %255, i32 0, i32 1, !dbg !16077
  %256 = load float, float* %tr233, align 4, !dbg !16077
  %cmp234 = fcmp olt float %256, 0.000000e+00, !dbg !16077
  br i1 %cmp234, label %if.then236, label %if.end238, !dbg !16080

if.then236:                                       ; preds = %if.then232
  %257 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16077
  %tr237 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %257, i32 0, i32 1, !dbg !16077
  store float 0.000000e+00, float* %tr237, align 4, !dbg !16077
  br label %if.end238, !dbg !16077

if.end238:                                        ; preds = %if.then236, %if.then232
  %258 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16081
  %tg239 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %258, i32 0, i32 2, !dbg !16081
  %259 = load float, float* %tg239, align 8, !dbg !16081
  %cmp240 = fcmp olt float %259, 0.000000e+00, !dbg !16081
  br i1 %cmp240, label %if.then242, label %if.end244, !dbg !16080

if.then242:                                       ; preds = %if.end238
  %260 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16081
  %tg243 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %260, i32 0, i32 2, !dbg !16081
  store float 0.000000e+00, float* %tg243, align 8, !dbg !16081
  br label %if.end244, !dbg !16081

if.end244:                                        ; preds = %if.then242, %if.end238
  %261 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16083
  %tb245 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %261, i32 0, i32 3, !dbg !16083
  %262 = load float, float* %tb245, align 4, !dbg !16083
  %cmp246 = fcmp olt float %262, 0.000000e+00, !dbg !16083
  br i1 %cmp246, label %if.then248, label %if.end250, !dbg !16080

if.then248:                                       ; preds = %if.end244
  %263 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16083
  %tb249 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %263, i32 0, i32 3, !dbg !16083
  store float 0.000000e+00, float* %tb249, align 4, !dbg !16083
  br label %if.end250, !dbg !16083

if.end250:                                        ; preds = %if.then248, %if.end244
  br label %if.end251, !dbg !16080

if.end251:                                        ; preds = %if.end250, %if.then204
  %264 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16085
  %saturation = getelementptr inbounds %struct.Tex, %struct.Tex* %264, i32 0, i32 6, !dbg !16085
  %265 = load float, float* %saturation, align 8, !dbg !16085
  %cmp252 = fcmp une float %265, 1.000000e+00, !dbg !16085
  br i1 %cmp252, label %if.then254, label %if.end271, !dbg !16073

if.then254:                                       ; preds = %if.end251
  call void @llvm.dbg.declare(metadata [3 x float]* %_hsv, metadata !16087, metadata !DIExpression()), !dbg !16089
  %266 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tr255 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %266, i32 0, i32 1, !dbg !16089
  %267 = load float, float* %tr255, align 4, !dbg !16089
  %268 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tg256 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %268, i32 0, i32 2, !dbg !16089
  %269 = load float, float* %tg256, align 8, !dbg !16089
  %270 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tb257 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %270, i32 0, i32 3, !dbg !16089
  %271 = load float, float* %tb257, align 4, !dbg !16089
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !16089
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !16089
  %add.ptr = getelementptr inbounds float, float* %arraydecay259, i64 1, !dbg !16089
  %arraydecay260 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !16089
  %add.ptr261 = getelementptr inbounds float, float* %arraydecay260, i64 2, !dbg !16089
  call void @rgb_to_hsv(float %267, float %269, float %271, float* %arraydecay258, float* %add.ptr, float* %add.ptr261), !dbg !16089
  %272 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16089
  %saturation262 = getelementptr inbounds %struct.Tex, %struct.Tex* %272, i32 0, i32 6, !dbg !16089
  %273 = load float, float* %saturation262, align 8, !dbg !16089
  %arrayidx263 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !16089
  %274 = load float, float* %arrayidx263, align 4, !dbg !16089
  %mul264 = fmul float %274, %273, !dbg !16089
  store float %mul264, float* %arrayidx263, align 4, !dbg !16089
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 0, !dbg !16089
  %275 = load float, float* %arrayidx265, align 4, !dbg !16089
  %arrayidx266 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 1, !dbg !16089
  %276 = load float, float* %arrayidx266, align 4, !dbg !16089
  %arrayidx267 = getelementptr inbounds [3 x float], [3 x float]* %_hsv, i64 0, i64 2, !dbg !16089
  %277 = load float, float* %arrayidx267, align 4, !dbg !16089
  %278 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tr268 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %278, i32 0, i32 1, !dbg !16089
  %279 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tg269 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %279, i32 0, i32 2, !dbg !16089
  %280 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16089
  %tb270 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %280, i32 0, i32 3, !dbg !16089
  call void @hsv_to_rgb(float %275, float %276, float %277, float* %tr268, float* %tg269, float* %tb270), !dbg !16089
  br label %if.end271, !dbg !16089

if.end271:                                        ; preds = %if.then254, %if.end251
  %281 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16090
  %ta = getelementptr inbounds %struct.TexResult, %struct.TexResult* %281, i32 0, i32 4, !dbg !16091
  store float 1.000000e+00, float* %ta, align 8, !dbg !16092
  %282 = load i32, i32* %rv, align 4, !dbg !16093
  %or272 = or i32 %282, 1, !dbg !16094
  %conv273 = sitofp i32 %or272 to float, !dbg !16095
  store float %conv273, float* %retval, align 4, !dbg !16096
  br label %return, !dbg !16096

if.end274:                                        ; preds = %if.end201
  %283 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16097
  %tin275 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %283, i32 0, i32 0, !dbg !16097
  %284 = load float, float* %tin275, align 8, !dbg !16097
  %sub276 = fsub float %284, 5.000000e-01, !dbg !16097
  %285 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16097
  %contrast277 = getelementptr inbounds %struct.Tex, %struct.Tex* %285, i32 0, i32 5, !dbg !16097
  %286 = load float, float* %contrast277, align 4, !dbg !16097
  %mul278 = fmul float %sub276, %286, !dbg !16097
  %287 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16097
  %bright279 = getelementptr inbounds %struct.Tex, %struct.Tex* %287, i32 0, i32 4, !dbg !16097
  %288 = load float, float* %bright279, align 8, !dbg !16097
  %add280 = fadd float %mul278, %288, !dbg !16097
  %sub281 = fsub float %add280, 5.000000e-01, !dbg !16097
  %289 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16097
  %tin282 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %289, i32 0, i32 0, !dbg !16097
  store float %sub281, float* %tin282, align 8, !dbg !16097
  %290 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16098
  %flag283 = getelementptr inbounds %struct.Tex, %struct.Tex* %290, i32 0, i32 31, !dbg !16098
  %291 = load i16, i16* %flag283, align 2, !dbg !16098
  %conv284 = sext i16 %291 to i32, !dbg !16098
  %and285 = and i32 %conv284, 1024, !dbg !16098
  %tobool286 = icmp ne i32 %and285, 0, !dbg !16098
  br i1 %tobool286, label %if.end301, label %if.then287, !dbg !16097

if.then287:                                       ; preds = %if.end274
  %292 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16100
  %tin288 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %292, i32 0, i32 0, !dbg !16100
  %293 = load float, float* %tin288, align 8, !dbg !16100
  %cmp289 = fcmp olt float %293, 0.000000e+00, !dbg !16100
  br i1 %cmp289, label %if.then291, label %if.else293, !dbg !16103

if.then291:                                       ; preds = %if.then287
  %294 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16100
  %tin292 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %294, i32 0, i32 0, !dbg !16100
  store float 0.000000e+00, float* %tin292, align 8, !dbg !16100
  br label %if.end300, !dbg !16100

if.else293:                                       ; preds = %if.then287
  %295 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16104
  %tin294 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %295, i32 0, i32 0, !dbg !16104
  %296 = load float, float* %tin294, align 8, !dbg !16104
  %cmp295 = fcmp ogt float %296, 1.000000e+00, !dbg !16104
  br i1 %cmp295, label %if.then297, label %if.end299, !dbg !16100

if.then297:                                       ; preds = %if.else293
  %297 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16104
  %tin298 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %297, i32 0, i32 0, !dbg !16104
  store float 1.000000e+00, float* %tin298, align 8, !dbg !16104
  br label %if.end299, !dbg !16104

if.end299:                                        ; preds = %if.then297, %if.else293
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then291
  br label %if.end301, !dbg !16103

if.end301:                                        ; preds = %if.end300, %if.end274
  %298 = load i32, i32* %rv, align 4, !dbg !16106
  %conv302 = sitofp i32 %298 to float, !dbg !16106
  store float %conv302, float* %retval, align 4, !dbg !16107
  br label %return, !dbg !16107

return:                                           ; preds = %if.end301, %if.end271
  %299 = load float, float* %retval, align 4, !dbg !16108
  ret float %299, !dbg !16108
}

; Function Attrs: noinline nounwind uwtable
define internal float @mg_distNoiseTex(%struct.Tex* %tex, float* %texvec, %struct.TexResult* %texres) #0 !dbg !16109 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texvec.addr = alloca float*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %rv = alloca i32, align 4
  %offs = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !16110, metadata !DIExpression()), !dbg !16111
  store float* %texvec, float** %texvec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texvec.addr, metadata !16112, metadata !DIExpression()), !dbg !16113
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !16114, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !16116, metadata !DIExpression()), !dbg !16117
  store i32 0, i32* %rv, align 4, !dbg !16117
  %0 = load float*, float** %texvec.addr, align 8, !dbg !16118
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16118
  %1 = load float, float* %arrayidx, align 4, !dbg !16118
  %2 = load float*, float** %texvec.addr, align 8, !dbg !16119
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !16119
  %3 = load float, float* %arrayidx1, align 4, !dbg !16119
  %4 = load float*, float** %texvec.addr, align 8, !dbg !16120
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !16120
  %5 = load float, float* %arrayidx2, align 4, !dbg !16120
  %6 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16121
  %dist_amount = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 17, !dbg !16122
  %7 = load float, float* %dist_amount, align 4, !dbg !16122
  %8 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16123
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 28, !dbg !16124
  %9 = load i16, i16* %noisebasis, align 8, !dbg !16124
  %conv = sext i16 %9 to i32, !dbg !16123
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16125
  %noisebasis2 = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 29, !dbg !16126
  %11 = load i16, i16* %noisebasis2, align 2, !dbg !16126
  %conv3 = sext i16 %11 to i32, !dbg !16125
  %call = call float @mg_VLNoise(float %1, float %3, float %5, float %7, i32 %conv, i32 %conv3), !dbg !16127
  %12 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16128
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %12, i32 0, i32 0, !dbg !16129
  store float %call, float* %tin, align 8, !dbg !16130
  %13 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16131
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %13, i32 0, i32 6, !dbg !16133
  %14 = load float*, float** %nor, align 8, !dbg !16133
  %cmp = icmp ne float* %14, null, !dbg !16134
  br i1 %cmp, label %if.then, label %if.end, !dbg !16135

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %offs, metadata !16136, metadata !DIExpression()), !dbg !16138
  %15 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16139
  %nabla = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 49, !dbg !16140
  %16 = load float, float* %nabla, align 8, !dbg !16140
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16141
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 2, !dbg !16142
  %18 = load float, float* %noisesize, align 8, !dbg !16142
  %div = fdiv float %16, %18, !dbg !16143
  store float %div, float* %offs, align 4, !dbg !16138
  %19 = load float*, float** %texvec.addr, align 8, !dbg !16144
  %arrayidx5 = getelementptr inbounds float, float* %19, i64 0, !dbg !16144
  %20 = load float, float* %arrayidx5, align 4, !dbg !16144
  %21 = load float, float* %offs, align 4, !dbg !16145
  %add = fadd float %20, %21, !dbg !16146
  %22 = load float*, float** %texvec.addr, align 8, !dbg !16147
  %arrayidx6 = getelementptr inbounds float, float* %22, i64 1, !dbg !16147
  %23 = load float, float* %arrayidx6, align 4, !dbg !16147
  %24 = load float*, float** %texvec.addr, align 8, !dbg !16148
  %arrayidx7 = getelementptr inbounds float, float* %24, i64 2, !dbg !16148
  %25 = load float, float* %arrayidx7, align 4, !dbg !16148
  %26 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16149
  %dist_amount8 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 17, !dbg !16150
  %27 = load float, float* %dist_amount8, align 4, !dbg !16150
  %28 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16151
  %noisebasis9 = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 28, !dbg !16152
  %29 = load i16, i16* %noisebasis9, align 8, !dbg !16152
  %conv10 = sext i16 %29 to i32, !dbg !16151
  %30 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16153
  %noisebasis211 = getelementptr inbounds %struct.Tex, %struct.Tex* %30, i32 0, i32 29, !dbg !16154
  %31 = load i16, i16* %noisebasis211, align 2, !dbg !16154
  %conv12 = sext i16 %31 to i32, !dbg !16153
  %call13 = call float @mg_VLNoise(float %add, float %23, float %25, float %27, i32 %conv10, i32 %conv12), !dbg !16155
  %32 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16156
  %nor14 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %32, i32 0, i32 6, !dbg !16157
  %33 = load float*, float** %nor14, align 8, !dbg !16157
  %arrayidx15 = getelementptr inbounds float, float* %33, i64 0, !dbg !16156
  store float %call13, float* %arrayidx15, align 4, !dbg !16158
  %34 = load float*, float** %texvec.addr, align 8, !dbg !16159
  %arrayidx16 = getelementptr inbounds float, float* %34, i64 0, !dbg !16159
  %35 = load float, float* %arrayidx16, align 4, !dbg !16159
  %36 = load float*, float** %texvec.addr, align 8, !dbg !16160
  %arrayidx17 = getelementptr inbounds float, float* %36, i64 1, !dbg !16160
  %37 = load float, float* %arrayidx17, align 4, !dbg !16160
  %38 = load float, float* %offs, align 4, !dbg !16161
  %add18 = fadd float %37, %38, !dbg !16162
  %39 = load float*, float** %texvec.addr, align 8, !dbg !16163
  %arrayidx19 = getelementptr inbounds float, float* %39, i64 2, !dbg !16163
  %40 = load float, float* %arrayidx19, align 4, !dbg !16163
  %41 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16164
  %dist_amount20 = getelementptr inbounds %struct.Tex, %struct.Tex* %41, i32 0, i32 17, !dbg !16165
  %42 = load float, float* %dist_amount20, align 4, !dbg !16165
  %43 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16166
  %noisebasis21 = getelementptr inbounds %struct.Tex, %struct.Tex* %43, i32 0, i32 28, !dbg !16167
  %44 = load i16, i16* %noisebasis21, align 8, !dbg !16167
  %conv22 = sext i16 %44 to i32, !dbg !16166
  %45 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16168
  %noisebasis223 = getelementptr inbounds %struct.Tex, %struct.Tex* %45, i32 0, i32 29, !dbg !16169
  %46 = load i16, i16* %noisebasis223, align 2, !dbg !16169
  %conv24 = sext i16 %46 to i32, !dbg !16168
  %call25 = call float @mg_VLNoise(float %35, float %add18, float %40, float %42, i32 %conv22, i32 %conv24), !dbg !16170
  %47 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16171
  %nor26 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %47, i32 0, i32 6, !dbg !16172
  %48 = load float*, float** %nor26, align 8, !dbg !16172
  %arrayidx27 = getelementptr inbounds float, float* %48, i64 1, !dbg !16171
  store float %call25, float* %arrayidx27, align 4, !dbg !16173
  %49 = load float*, float** %texvec.addr, align 8, !dbg !16174
  %arrayidx28 = getelementptr inbounds float, float* %49, i64 0, !dbg !16174
  %50 = load float, float* %arrayidx28, align 4, !dbg !16174
  %51 = load float*, float** %texvec.addr, align 8, !dbg !16175
  %arrayidx29 = getelementptr inbounds float, float* %51, i64 1, !dbg !16175
  %52 = load float, float* %arrayidx29, align 4, !dbg !16175
  %53 = load float*, float** %texvec.addr, align 8, !dbg !16176
  %arrayidx30 = getelementptr inbounds float, float* %53, i64 2, !dbg !16176
  %54 = load float, float* %arrayidx30, align 4, !dbg !16176
  %55 = load float, float* %offs, align 4, !dbg !16177
  %add31 = fadd float %54, %55, !dbg !16178
  %56 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16179
  %dist_amount32 = getelementptr inbounds %struct.Tex, %struct.Tex* %56, i32 0, i32 17, !dbg !16180
  %57 = load float, float* %dist_amount32, align 4, !dbg !16180
  %58 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16181
  %noisebasis33 = getelementptr inbounds %struct.Tex, %struct.Tex* %58, i32 0, i32 28, !dbg !16182
  %59 = load i16, i16* %noisebasis33, align 8, !dbg !16182
  %conv34 = sext i16 %59 to i32, !dbg !16181
  %60 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16183
  %noisebasis235 = getelementptr inbounds %struct.Tex, %struct.Tex* %60, i32 0, i32 29, !dbg !16184
  %61 = load i16, i16* %noisebasis235, align 2, !dbg !16184
  %conv36 = sext i16 %61 to i32, !dbg !16183
  %call37 = call float @mg_VLNoise(float %50, float %52, float %add31, float %57, i32 %conv34, i32 %conv36), !dbg !16185
  %62 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16186
  %nor38 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %62, i32 0, i32 6, !dbg !16187
  %63 = load float*, float** %nor38, align 8, !dbg !16187
  %arrayidx39 = getelementptr inbounds float, float* %63, i64 2, !dbg !16186
  store float %call37, float* %arrayidx39, align 4, !dbg !16188
  %64 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16189
  %65 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16190
  call void @tex_normal_derivate(%struct.Tex* %64, %struct.TexResult* %65), !dbg !16191
  %66 = load i32, i32* %rv, align 4, !dbg !16192
  %or = or i32 %66, 2, !dbg !16192
  store i32 %or, i32* %rv, align 4, !dbg !16192
  br label %if.end, !dbg !16193

if.end:                                           ; preds = %if.then, %entry
  %67 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16194
  %tin40 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %67, i32 0, i32 0, !dbg !16194
  %68 = load float, float* %tin40, align 8, !dbg !16194
  %sub = fsub float %68, 5.000000e-01, !dbg !16194
  %69 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16194
  %contrast = getelementptr inbounds %struct.Tex, %struct.Tex* %69, i32 0, i32 5, !dbg !16194
  %70 = load float, float* %contrast, align 4, !dbg !16194
  %mul = fmul float %sub, %70, !dbg !16194
  %71 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16194
  %bright = getelementptr inbounds %struct.Tex, %struct.Tex* %71, i32 0, i32 4, !dbg !16194
  %72 = load float, float* %bright, align 8, !dbg !16194
  %add41 = fadd float %mul, %72, !dbg !16194
  %sub42 = fsub float %add41, 5.000000e-01, !dbg !16194
  %73 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16194
  %tin43 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %73, i32 0, i32 0, !dbg !16194
  store float %sub42, float* %tin43, align 8, !dbg !16194
  %74 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16195
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %74, i32 0, i32 31, !dbg !16195
  %75 = load i16, i16* %flag, align 2, !dbg !16195
  %conv44 = sext i16 %75 to i32, !dbg !16195
  %and = and i32 %conv44, 1024, !dbg !16195
  %tobool = icmp ne i32 %and, 0, !dbg !16195
  br i1 %tobool, label %if.end58, label %if.then45, !dbg !16194

if.then45:                                        ; preds = %if.end
  %76 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16197
  %tin46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %76, i32 0, i32 0, !dbg !16197
  %77 = load float, float* %tin46, align 8, !dbg !16197
  %cmp47 = fcmp olt float %77, 0.000000e+00, !dbg !16197
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !16200

if.then49:                                        ; preds = %if.then45
  %78 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16197
  %tin50 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %78, i32 0, i32 0, !dbg !16197
  store float 0.000000e+00, float* %tin50, align 8, !dbg !16197
  br label %if.end57, !dbg !16197

if.else:                                          ; preds = %if.then45
  %79 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16201
  %tin51 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %79, i32 0, i32 0, !dbg !16201
  %80 = load float, float* %tin51, align 8, !dbg !16201
  %cmp52 = fcmp ogt float %80, 1.000000e+00, !dbg !16201
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !16197

if.then54:                                        ; preds = %if.else
  %81 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16201
  %tin55 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %81, i32 0, i32 0, !dbg !16201
  store float 1.000000e+00, float* %tin55, align 8, !dbg !16201
  br label %if.end56, !dbg !16201

if.end56:                                         ; preds = %if.then54, %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then49
  br label %if.end58, !dbg !16200

if.end58:                                         ; preds = %if.end57, %if.end
  %82 = load i32, i32* %rv, align 4, !dbg !16203
  %conv59 = sitofp i32 %82 to float, !dbg !16203
  ret float %conv59, !dbg !16204
}

declare dso_local i32 @pointdensitytex(%struct.Tex*, float*, %struct.TexResult*) #1

declare dso_local i32 @voxeldatatex(%struct.Tex*, float*, %struct.TexResult*) #1

declare dso_local i32 @ocean_texture(%struct.Tex*, float*, %struct.TexResult*) #1

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #1

declare dso_local float @BLI_gTurbulence(float, float, float, float, i32, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @tex_normal_derivate(%struct.Tex* %tex, %struct.TexResult* %texres) #0 !dbg !16205 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %texres.addr = alloca %struct.TexResult*, align 8
  %col = alloca [4 x float], align 16
  %fac0 = alloca float, align 4
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %fac3 = alloca float, align 4
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !16208, metadata !DIExpression()), !dbg !16209
  store %struct.TexResult* %texres, %struct.TexResult** %texres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TexResult** %texres.addr, metadata !16210, metadata !DIExpression()), !dbg !16211
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16212
  %flag = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 31, !dbg !16214
  %1 = load i16, i16* %flag, align 2, !dbg !16214
  %conv = sext i16 %1 to i32, !dbg !16212
  %and = and i32 %conv, 1, !dbg !16215
  %tobool = icmp ne i32 %and, 0, !dbg !16215
  br i1 %tobool, label %if.then, label %if.end45, !dbg !16216

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !16217, metadata !DIExpression()), !dbg !16219
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16220
  %coba = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 55, !dbg !16222
  %3 = load %struct.ColorBand*, %struct.ColorBand** %coba, align 8, !dbg !16222
  %4 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16223
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %4, i32 0, i32 0, !dbg !16224
  %5 = load float, float* %tin, align 8, !dbg !16224
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16225
  %call = call zeroext i8 @do_colorband(%struct.ColorBand* %3, float %5, float* %arraydecay), !dbg !16226
  %tobool1 = icmp ne i8 %call, 0, !dbg !16226
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !16227

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %fac0, metadata !16228, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !16231, metadata !DIExpression()), !dbg !16232
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !16233, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.declare(metadata float* %fac3, metadata !16235, metadata !DIExpression()), !dbg !16236
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16237
  %6 = load float, float* %arrayidx, align 16, !dbg !16237
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !16238
  %7 = load float, float* %arrayidx3, align 4, !dbg !16238
  %add = fadd float %6, %7, !dbg !16239
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !16240
  %8 = load float, float* %arrayidx4, align 8, !dbg !16240
  %add5 = fadd float %add, %8, !dbg !16241
  store float %add5, float* %fac0, align 4, !dbg !16242
  %9 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16243
  %coba6 = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 55, !dbg !16244
  %10 = load %struct.ColorBand*, %struct.ColorBand** %coba6, align 8, !dbg !16244
  %11 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16245
  %nor = getelementptr inbounds %struct.TexResult, %struct.TexResult* %11, i32 0, i32 6, !dbg !16246
  %12 = load float*, float** %nor, align 8, !dbg !16246
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 0, !dbg !16245
  %13 = load float, float* %arrayidx7, align 4, !dbg !16245
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16247
  %call9 = call zeroext i8 @do_colorband(%struct.ColorBand* %10, float %13, float* %arraydecay8), !dbg !16248
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16249
  %14 = load float, float* %arrayidx10, align 16, !dbg !16249
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !16250
  %15 = load float, float* %arrayidx11, align 4, !dbg !16250
  %add12 = fadd float %14, %15, !dbg !16251
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !16252
  %16 = load float, float* %arrayidx13, align 8, !dbg !16252
  %add14 = fadd float %add12, %16, !dbg !16253
  store float %add14, float* %fac1, align 4, !dbg !16254
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16255
  %coba15 = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 55, !dbg !16256
  %18 = load %struct.ColorBand*, %struct.ColorBand** %coba15, align 8, !dbg !16256
  %19 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16257
  %nor16 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %19, i32 0, i32 6, !dbg !16258
  %20 = load float*, float** %nor16, align 8, !dbg !16258
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 1, !dbg !16257
  %21 = load float, float* %arrayidx17, align 4, !dbg !16257
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16259
  %call19 = call zeroext i8 @do_colorband(%struct.ColorBand* %18, float %21, float* %arraydecay18), !dbg !16260
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16261
  %22 = load float, float* %arrayidx20, align 16, !dbg !16261
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !16262
  %23 = load float, float* %arrayidx21, align 4, !dbg !16262
  %add22 = fadd float %22, %23, !dbg !16263
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !16264
  %24 = load float, float* %arrayidx23, align 8, !dbg !16264
  %add24 = fadd float %add22, %24, !dbg !16265
  store float %add24, float* %fac2, align 4, !dbg !16266
  %25 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16267
  %coba25 = getelementptr inbounds %struct.Tex, %struct.Tex* %25, i32 0, i32 55, !dbg !16268
  %26 = load %struct.ColorBand*, %struct.ColorBand** %coba25, align 8, !dbg !16268
  %27 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16269
  %nor26 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %27, i32 0, i32 6, !dbg !16270
  %28 = load float*, float** %nor26, align 8, !dbg !16270
  %arrayidx27 = getelementptr inbounds float, float* %28, i64 2, !dbg !16269
  %29 = load float, float* %arrayidx27, align 4, !dbg !16269
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16271
  %call29 = call zeroext i8 @do_colorband(%struct.ColorBand* %26, float %29, float* %arraydecay28), !dbg !16272
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !16273
  %30 = load float, float* %arrayidx30, align 16, !dbg !16273
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !16274
  %31 = load float, float* %arrayidx31, align 4, !dbg !16274
  %add32 = fadd float %30, %31, !dbg !16275
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !16276
  %32 = load float, float* %arrayidx33, align 8, !dbg !16276
  %add34 = fadd float %add32, %32, !dbg !16277
  store float %add34, float* %fac3, align 4, !dbg !16278
  %33 = load float, float* %fac0, align 4, !dbg !16279
  %34 = load float, float* %fac1, align 4, !dbg !16280
  %sub = fsub float %33, %34, !dbg !16281
  %div = fdiv float %sub, 3.000000e+00, !dbg !16282
  %35 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16283
  %nor35 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %35, i32 0, i32 6, !dbg !16284
  %36 = load float*, float** %nor35, align 8, !dbg !16284
  %arrayidx36 = getelementptr inbounds float, float* %36, i64 0, !dbg !16283
  store float %div, float* %arrayidx36, align 4, !dbg !16285
  %37 = load float, float* %fac0, align 4, !dbg !16286
  %38 = load float, float* %fac2, align 4, !dbg !16287
  %sub37 = fsub float %37, %38, !dbg !16288
  %div38 = fdiv float %sub37, 3.000000e+00, !dbg !16289
  %39 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16290
  %nor39 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %39, i32 0, i32 6, !dbg !16291
  %40 = load float*, float** %nor39, align 8, !dbg !16291
  %arrayidx40 = getelementptr inbounds float, float* %40, i64 1, !dbg !16290
  store float %div38, float* %arrayidx40, align 4, !dbg !16292
  %41 = load float, float* %fac0, align 4, !dbg !16293
  %42 = load float, float* %fac3, align 4, !dbg !16294
  %sub41 = fsub float %41, %42, !dbg !16295
  %div42 = fdiv float %sub41, 3.000000e+00, !dbg !16296
  %43 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16297
  %nor43 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %43, i32 0, i32 6, !dbg !16298
  %44 = load float*, float** %nor43, align 8, !dbg !16298
  %arrayidx44 = getelementptr inbounds float, float* %44, i64 2, !dbg !16297
  store float %div42, float* %arrayidx44, align 4, !dbg !16299
  br label %return, !dbg !16300

if.end:                                           ; preds = %if.then
  br label %if.end45, !dbg !16301

if.end45:                                         ; preds = %if.end, %entry
  %45 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16302
  %tin46 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %45, i32 0, i32 0, !dbg !16303
  %46 = load float, float* %tin46, align 8, !dbg !16303
  %47 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16304
  %nor47 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %47, i32 0, i32 6, !dbg !16305
  %48 = load float*, float** %nor47, align 8, !dbg !16305
  %arrayidx48 = getelementptr inbounds float, float* %48, i64 0, !dbg !16304
  %49 = load float, float* %arrayidx48, align 4, !dbg !16304
  %sub49 = fsub float %46, %49, !dbg !16306
  %50 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16307
  %nor50 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %50, i32 0, i32 6, !dbg !16308
  %51 = load float*, float** %nor50, align 8, !dbg !16308
  %arrayidx51 = getelementptr inbounds float, float* %51, i64 0, !dbg !16307
  store float %sub49, float* %arrayidx51, align 4, !dbg !16309
  %52 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16310
  %tin52 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %52, i32 0, i32 0, !dbg !16311
  %53 = load float, float* %tin52, align 8, !dbg !16311
  %54 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16312
  %nor53 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %54, i32 0, i32 6, !dbg !16313
  %55 = load float*, float** %nor53, align 8, !dbg !16313
  %arrayidx54 = getelementptr inbounds float, float* %55, i64 1, !dbg !16312
  %56 = load float, float* %arrayidx54, align 4, !dbg !16312
  %sub55 = fsub float %53, %56, !dbg !16314
  %57 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16315
  %nor56 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %57, i32 0, i32 6, !dbg !16316
  %58 = load float*, float** %nor56, align 8, !dbg !16316
  %arrayidx57 = getelementptr inbounds float, float* %58, i64 1, !dbg !16315
  store float %sub55, float* %arrayidx57, align 4, !dbg !16317
  %59 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16318
  %tin58 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %59, i32 0, i32 0, !dbg !16319
  %60 = load float, float* %tin58, align 8, !dbg !16319
  %61 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16320
  %nor59 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %61, i32 0, i32 6, !dbg !16321
  %62 = load float*, float** %nor59, align 8, !dbg !16321
  %arrayidx60 = getelementptr inbounds float, float* %62, i64 2, !dbg !16320
  %63 = load float, float* %arrayidx60, align 4, !dbg !16320
  %sub61 = fsub float %60, %63, !dbg !16322
  %64 = load %struct.TexResult*, %struct.TexResult** %texres.addr, align 8, !dbg !16323
  %nor62 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %64, i32 0, i32 6, !dbg !16324
  %65 = load float*, float** %nor62, align 8, !dbg !16324
  %arrayidx63 = getelementptr inbounds float, float* %65, i64 2, !dbg !16323
  store float %sub61, float* %arrayidx63, align 4, !dbg !16325
  br label %return, !dbg !16326

return:                                           ; preds = %if.end45, %if.then2
  ret void, !dbg !16326
}

declare dso_local void @rgb_to_hsv(float, float, float, float*, float*, float*) #1

declare dso_local void @hsv_to_rgb(float, float, float, float*, float*, float*) #1

; Function Attrs: noinline nounwind uwtable
define internal float @wood_int(%struct.Tex* %tex, float %x, float %y, float %z) #0 !dbg !16327 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %wi = alloca float, align 4
  %wf = alloca i16, align 2
  %wt = alloca i16, align 2
  %waveform = alloca [3 x float (float)*], align 16
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !16330, metadata !DIExpression()), !dbg !16331
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !16332, metadata !DIExpression()), !dbg !16333
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !16334, metadata !DIExpression()), !dbg !16335
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !16336, metadata !DIExpression()), !dbg !16337
  call void @llvm.dbg.declare(metadata float* %wi, metadata !16338, metadata !DIExpression()), !dbg !16339
  store float 0.000000e+00, float* %wi, align 4, !dbg !16339
  call void @llvm.dbg.declare(metadata i16* %wf, metadata !16340, metadata !DIExpression()), !dbg !16341
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16342
  %noisebasis2 = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 29, !dbg !16343
  %1 = load i16, i16* %noisebasis2, align 2, !dbg !16343
  store i16 %1, i16* %wf, align 2, !dbg !16341
  call void @llvm.dbg.declare(metadata i16* %wt, metadata !16344, metadata !DIExpression()), !dbg !16345
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16346
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 33, !dbg !16347
  %3 = load i16, i16* %stype, align 2, !dbg !16347
  store i16 %3, i16* %wt, align 2, !dbg !16345
  call void @llvm.dbg.declare(metadata [3 x float (float)*]* %waveform, metadata !16348, metadata !DIExpression()), !dbg !16351
  %arrayidx = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 0, !dbg !16352
  store float (float)* @tex_sin, float (float)** %arrayidx, align 16, !dbg !16353
  %arrayidx1 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 1, !dbg !16354
  store float (float)* @tex_saw, float (float)** %arrayidx1, align 8, !dbg !16355
  %arrayidx2 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 2, !dbg !16356
  store float (float)* @tex_tri, float (float)** %arrayidx2, align 16, !dbg !16357
  %4 = load i16, i16* %wf, align 2, !dbg !16358
  %conv = sext i16 %4 to i32, !dbg !16358
  %cmp = icmp sgt i32 %conv, 2, !dbg !16360
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16361

lor.lhs.false:                                    ; preds = %entry
  %5 = load i16, i16* %wf, align 2, !dbg !16362
  %conv4 = sext i16 %5 to i32, !dbg !16362
  %cmp5 = icmp slt i32 %conv4, 0, !dbg !16363
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16364

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i16 0, i16* %wf, align 2, !dbg !16365
  br label %if.end, !dbg !16366

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load i16, i16* %wt, align 2, !dbg !16367
  %conv7 = sext i16 %6 to i32, !dbg !16367
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !16369
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !16370

if.then10:                                        ; preds = %if.end
  %7 = load i16, i16* %wf, align 2, !dbg !16371
  %idxprom = sext i16 %7 to i64, !dbg !16373
  %arrayidx11 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 %idxprom, !dbg !16373
  %8 = load float (float)*, float (float)** %arrayidx11, align 8, !dbg !16373
  %9 = load float, float* %x.addr, align 4, !dbg !16374
  %10 = load float, float* %y.addr, align 4, !dbg !16375
  %add = fadd float %9, %10, !dbg !16376
  %11 = load float, float* %z.addr, align 4, !dbg !16377
  %add12 = fadd float %add, %11, !dbg !16378
  %mul = fmul float %add12, 1.000000e+01, !dbg !16379
  %call = call float %8(float %mul), !dbg !16373
  store float %call, float* %wi, align 4, !dbg !16380
  br label %if.end74, !dbg !16381

if.else:                                          ; preds = %if.end
  %12 = load i16, i16* %wt, align 2, !dbg !16382
  %conv13 = sext i16 %12 to i32, !dbg !16382
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !16384
  br i1 %cmp14, label %if.then16, label %if.else27, !dbg !16385

if.then16:                                        ; preds = %if.else
  %13 = load i16, i16* %wf, align 2, !dbg !16386
  %idxprom17 = sext i16 %13 to i64, !dbg !16388
  %arrayidx18 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 %idxprom17, !dbg !16388
  %14 = load float (float)*, float (float)** %arrayidx18, align 8, !dbg !16388
  %15 = load float, float* %x.addr, align 4, !dbg !16389
  %16 = load float, float* %x.addr, align 4, !dbg !16390
  %mul19 = fmul float %15, %16, !dbg !16391
  %17 = load float, float* %y.addr, align 4, !dbg !16392
  %18 = load float, float* %y.addr, align 4, !dbg !16393
  %mul20 = fmul float %17, %18, !dbg !16394
  %add21 = fadd float %mul19, %mul20, !dbg !16395
  %19 = load float, float* %z.addr, align 4, !dbg !16396
  %20 = load float, float* %z.addr, align 4, !dbg !16397
  %mul22 = fmul float %19, %20, !dbg !16398
  %add23 = fadd float %add21, %mul22, !dbg !16399
  %call24 = call float @sqrtf(float %add23) #7, !dbg !16400
  %mul25 = fmul float %call24, 2.000000e+01, !dbg !16401
  %call26 = call float %14(float %mul25), !dbg !16388
  store float %call26, float* %wi, align 4, !dbg !16402
  br label %if.end73, !dbg !16403

if.else27:                                        ; preds = %if.else
  %21 = load i16, i16* %wt, align 2, !dbg !16404
  %conv28 = sext i16 %21 to i32, !dbg !16404
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !16406
  br i1 %cmp29, label %if.then31, label %if.else45, !dbg !16407

if.then31:                                        ; preds = %if.else27
  %22 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16408
  %turbul = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 3, !dbg !16410
  %23 = load float, float* %turbul, align 4, !dbg !16410
  %24 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16411
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 2, !dbg !16412
  %25 = load float, float* %noisesize, align 8, !dbg !16412
  %26 = load float, float* %x.addr, align 4, !dbg !16413
  %27 = load float, float* %y.addr, align 4, !dbg !16414
  %28 = load float, float* %z.addr, align 4, !dbg !16415
  %29 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16416
  %noisetype = getelementptr inbounds %struct.Tex, %struct.Tex* %29, i32 0, i32 27, !dbg !16417
  %30 = load i16, i16* %noisetype, align 2, !dbg !16417
  %conv32 = sext i16 %30 to i32, !dbg !16416
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !16418
  %conv34 = zext i1 %cmp33 to i32, !dbg !16418
  %31 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16419
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %31, i32 0, i32 28, !dbg !16420
  %32 = load i16, i16* %noisebasis, align 8, !dbg !16420
  %conv35 = sext i16 %32 to i32, !dbg !16419
  %call36 = call float @BLI_gNoise(float %25, float %26, float %27, float %28, i32 %conv34, i32 %conv35), !dbg !16421
  %mul37 = fmul float %23, %call36, !dbg !16422
  store float %mul37, float* %wi, align 4, !dbg !16423
  %33 = load i16, i16* %wf, align 2, !dbg !16424
  %idxprom38 = sext i16 %33 to i64, !dbg !16425
  %arrayidx39 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 %idxprom38, !dbg !16425
  %34 = load float (float)*, float (float)** %arrayidx39, align 8, !dbg !16425
  %35 = load float, float* %x.addr, align 4, !dbg !16426
  %36 = load float, float* %y.addr, align 4, !dbg !16427
  %add40 = fadd float %35, %36, !dbg !16428
  %37 = load float, float* %z.addr, align 4, !dbg !16429
  %add41 = fadd float %add40, %37, !dbg !16430
  %mul42 = fmul float %add41, 1.000000e+01, !dbg !16431
  %38 = load float, float* %wi, align 4, !dbg !16432
  %add43 = fadd float %mul42, %38, !dbg !16433
  %call44 = call float %34(float %add43), !dbg !16425
  store float %call44, float* %wi, align 4, !dbg !16434
  br label %if.end72, !dbg !16435

if.else45:                                        ; preds = %if.else27
  %39 = load i16, i16* %wt, align 2, !dbg !16436
  %conv46 = sext i16 %39 to i32, !dbg !16436
  %cmp47 = icmp eq i32 %conv46, 3, !dbg !16438
  br i1 %cmp47, label %if.then49, label %if.end71, !dbg !16439

if.then49:                                        ; preds = %if.else45
  %40 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16440
  %turbul50 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 3, !dbg !16442
  %41 = load float, float* %turbul50, align 4, !dbg !16442
  %42 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16443
  %noisesize51 = getelementptr inbounds %struct.Tex, %struct.Tex* %42, i32 0, i32 2, !dbg !16444
  %43 = load float, float* %noisesize51, align 8, !dbg !16444
  %44 = load float, float* %x.addr, align 4, !dbg !16445
  %45 = load float, float* %y.addr, align 4, !dbg !16446
  %46 = load float, float* %z.addr, align 4, !dbg !16447
  %47 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16448
  %noisetype52 = getelementptr inbounds %struct.Tex, %struct.Tex* %47, i32 0, i32 27, !dbg !16449
  %48 = load i16, i16* %noisetype52, align 2, !dbg !16449
  %conv53 = sext i16 %48 to i32, !dbg !16448
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !16450
  %conv55 = zext i1 %cmp54 to i32, !dbg !16450
  %49 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16451
  %noisebasis56 = getelementptr inbounds %struct.Tex, %struct.Tex* %49, i32 0, i32 28, !dbg !16452
  %50 = load i16, i16* %noisebasis56, align 8, !dbg !16452
  %conv57 = sext i16 %50 to i32, !dbg !16451
  %call58 = call float @BLI_gNoise(float %43, float %44, float %45, float %46, i32 %conv55, i32 %conv57), !dbg !16453
  %mul59 = fmul float %41, %call58, !dbg !16454
  store float %mul59, float* %wi, align 4, !dbg !16455
  %51 = load i16, i16* %wf, align 2, !dbg !16456
  %idxprom60 = sext i16 %51 to i64, !dbg !16457
  %arrayidx61 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 %idxprom60, !dbg !16457
  %52 = load float (float)*, float (float)** %arrayidx61, align 8, !dbg !16457
  %53 = load float, float* %x.addr, align 4, !dbg !16458
  %54 = load float, float* %x.addr, align 4, !dbg !16459
  %mul62 = fmul float %53, %54, !dbg !16460
  %55 = load float, float* %y.addr, align 4, !dbg !16461
  %56 = load float, float* %y.addr, align 4, !dbg !16462
  %mul63 = fmul float %55, %56, !dbg !16463
  %add64 = fadd float %mul62, %mul63, !dbg !16464
  %57 = load float, float* %z.addr, align 4, !dbg !16465
  %58 = load float, float* %z.addr, align 4, !dbg !16466
  %mul65 = fmul float %57, %58, !dbg !16467
  %add66 = fadd float %add64, %mul65, !dbg !16468
  %call67 = call float @sqrtf(float %add66) #7, !dbg !16469
  %mul68 = fmul float %call67, 2.000000e+01, !dbg !16470
  %59 = load float, float* %wi, align 4, !dbg !16471
  %add69 = fadd float %mul68, %59, !dbg !16472
  %call70 = call float %52(float %add69), !dbg !16457
  store float %call70, float* %wi, align 4, !dbg !16473
  br label %if.end71, !dbg !16474

if.end71:                                         ; preds = %if.then49, %if.else45
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then31
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then16
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then10
  %60 = load float, float* %wi, align 4, !dbg !16475
  ret float %60, !dbg !16476
}

; Function Attrs: noinline nounwind uwtable
define internal float @tex_sin(float %a) #0 !dbg !16477 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16478, metadata !DIExpression()), !dbg !16479
  %0 = load float, float* %a.addr, align 4, !dbg !16480
  %call = call float @sinf(float %0) #7, !dbg !16481
  %conv = fpext float %call to double, !dbg !16481
  %mul = fmul double 5.000000e-01, %conv, !dbg !16482
  %add = fadd double 5.000000e-01, %mul, !dbg !16483
  %conv1 = fptrunc double %add to float, !dbg !16484
  store float %conv1, float* %a.addr, align 4, !dbg !16485
  %1 = load float, float* %a.addr, align 4, !dbg !16486
  ret float %1, !dbg !16487
}

; Function Attrs: noinline nounwind uwtable
define internal float @tex_saw(float %a) #0 !dbg !16488 {
entry:
  %a.addr = alloca float, align 4
  %b = alloca float, align 4
  %n = alloca i32, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16489, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.declare(metadata float* %b, metadata !16491, metadata !DIExpression()), !dbg !16492
  store float 0x401921FB60000000, float* %b, align 4, !dbg !16492
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16493, metadata !DIExpression()), !dbg !16494
  %0 = load float, float* %a.addr, align 4, !dbg !16495
  %div = fdiv float %0, 0x401921FB60000000, !dbg !16496
  %conv = fptosi float %div to i32, !dbg !16497
  store i32 %conv, i32* %n, align 4, !dbg !16494
  %1 = load i32, i32* %n, align 4, !dbg !16498
  %conv1 = sitofp i32 %1 to float, !dbg !16498
  %mul = fmul float %conv1, 0x401921FB60000000, !dbg !16499
  %2 = load float, float* %a.addr, align 4, !dbg !16500
  %sub = fsub float %2, %mul, !dbg !16500
  store float %sub, float* %a.addr, align 4, !dbg !16500
  %3 = load float, float* %a.addr, align 4, !dbg !16501
  %cmp = fcmp olt float %3, 0.000000e+00, !dbg !16503
  br i1 %cmp, label %if.then, label %if.end, !dbg !16504

if.then:                                          ; preds = %entry
  %4 = load float, float* %a.addr, align 4, !dbg !16505
  %add = fadd float %4, 0x401921FB60000000, !dbg !16505
  store float %add, float* %a.addr, align 4, !dbg !16505
  br label %if.end, !dbg !16506

if.end:                                           ; preds = %if.then, %entry
  %5 = load float, float* %a.addr, align 4, !dbg !16507
  %div3 = fdiv float %5, 0x401921FB60000000, !dbg !16508
  ret float %div3, !dbg !16509
}

; Function Attrs: noinline nounwind uwtable
define internal float @tex_tri(float %a) #0 !dbg !16510 {
entry:
  %a.addr = alloca float, align 4
  %b = alloca float, align 4
  %rmax = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16511, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.declare(metadata float* %b, metadata !16513, metadata !DIExpression()), !dbg !16514
  store float 0x401921FB60000000, float* %b, align 4, !dbg !16514
  call void @llvm.dbg.declare(metadata float* %rmax, metadata !16515, metadata !DIExpression()), !dbg !16516
  store float 1.000000e+00, float* %rmax, align 4, !dbg !16516
  %0 = load float, float* %a.addr, align 4, !dbg !16517
  %mul = fmul float %0, 0x3FC45F3060000000, !dbg !16518
  %add = fadd float %mul, 5.000000e-01, !dbg !16519
  %1 = call float @llvm.floor.f32(float %add), !dbg !16520
  %2 = load float, float* %a.addr, align 4, !dbg !16521
  %mul1 = fmul float %2, 0x3FC45F3060000000, !dbg !16522
  %sub = fsub float %1, %mul1, !dbg !16523
  %3 = call float @llvm.fabs.f32(float %sub), !dbg !16524
  %mul2 = fmul float 2.000000e+00, %3, !dbg !16525
  %sub3 = fsub float 1.000000e+00, %mul2, !dbg !16526
  store float %sub3, float* %a.addr, align 4, !dbg !16527
  %4 = load float, float* %a.addr, align 4, !dbg !16528
  ret float %4, !dbg !16529
}

declare dso_local float @BLI_gNoise(float, float, float, float, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal float @marble_int(%struct.Tex* %tex, float %x, float %y, float %z) #0 !dbg !16530 {
entry:
  %tex.addr = alloca %struct.Tex*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %n = alloca float, align 4
  %mi = alloca float, align 4
  %wf = alloca i16, align 2
  %mt = alloca i16, align 2
  %waveform = alloca [3 x float (float)*], align 16
  store %struct.Tex* %tex, %struct.Tex** %tex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex.addr, metadata !16531, metadata !DIExpression()), !dbg !16532
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !16533, metadata !DIExpression()), !dbg !16534
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !16535, metadata !DIExpression()), !dbg !16536
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !16537, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.declare(metadata float* %n, metadata !16539, metadata !DIExpression()), !dbg !16540
  call void @llvm.dbg.declare(metadata float* %mi, metadata !16541, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.declare(metadata i16* %wf, metadata !16543, metadata !DIExpression()), !dbg !16544
  %0 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16545
  %noisebasis2 = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 29, !dbg !16546
  %1 = load i16, i16* %noisebasis2, align 2, !dbg !16546
  store i16 %1, i16* %wf, align 2, !dbg !16544
  call void @llvm.dbg.declare(metadata i16* %mt, metadata !16547, metadata !DIExpression()), !dbg !16548
  %2 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16549
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %2, i32 0, i32 33, !dbg !16550
  %3 = load i16, i16* %stype, align 2, !dbg !16550
  store i16 %3, i16* %mt, align 2, !dbg !16548
  call void @llvm.dbg.declare(metadata [3 x float (float)*]* %waveform, metadata !16551, metadata !DIExpression()), !dbg !16552
  %arrayidx = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 0, !dbg !16553
  store float (float)* @tex_sin, float (float)** %arrayidx, align 16, !dbg !16554
  %arrayidx1 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 1, !dbg !16555
  store float (float)* @tex_saw, float (float)** %arrayidx1, align 8, !dbg !16556
  %arrayidx2 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 2, !dbg !16557
  store float (float)* @tex_tri, float (float)** %arrayidx2, align 16, !dbg !16558
  %4 = load i16, i16* %wf, align 2, !dbg !16559
  %conv = sext i16 %4 to i32, !dbg !16559
  %cmp = icmp sgt i32 %conv, 2, !dbg !16561
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16562

lor.lhs.false:                                    ; preds = %entry
  %5 = load i16, i16* %wf, align 2, !dbg !16563
  %conv4 = sext i16 %5 to i32, !dbg !16563
  %cmp5 = icmp slt i32 %conv4, 0, !dbg !16564
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16565

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i16 0, i16* %wf, align 2, !dbg !16566
  br label %if.end, !dbg !16567

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load float, float* %x.addr, align 4, !dbg !16568
  %7 = load float, float* %y.addr, align 4, !dbg !16569
  %add = fadd float %6, %7, !dbg !16570
  %8 = load float, float* %z.addr, align 4, !dbg !16571
  %add7 = fadd float %add, %8, !dbg !16572
  %mul = fmul float 5.000000e+00, %add7, !dbg !16573
  store float %mul, float* %n, align 4, !dbg !16574
  %9 = load float, float* %n, align 4, !dbg !16575
  %10 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16576
  %turbul = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 3, !dbg !16577
  %11 = load float, float* %turbul, align 4, !dbg !16577
  %12 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16578
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 2, !dbg !16579
  %13 = load float, float* %noisesize, align 8, !dbg !16579
  %14 = load float, float* %x.addr, align 4, !dbg !16580
  %15 = load float, float* %y.addr, align 4, !dbg !16581
  %16 = load float, float* %z.addr, align 4, !dbg !16582
  %17 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16583
  %noisedepth = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 26, !dbg !16584
  %18 = load i16, i16* %noisedepth, align 4, !dbg !16584
  %conv8 = sext i16 %18 to i32, !dbg !16583
  %19 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16585
  %noisetype = getelementptr inbounds %struct.Tex, %struct.Tex* %19, i32 0, i32 27, !dbg !16586
  %20 = load i16, i16* %noisetype, align 2, !dbg !16586
  %conv9 = sext i16 %20 to i32, !dbg !16585
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !16587
  %conv11 = zext i1 %cmp10 to i32, !dbg !16587
  %21 = load %struct.Tex*, %struct.Tex** %tex.addr, align 8, !dbg !16588
  %noisebasis = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 28, !dbg !16589
  %22 = load i16, i16* %noisebasis, align 8, !dbg !16589
  %conv12 = sext i16 %22 to i32, !dbg !16588
  %call = call float @BLI_gTurbulence(float %13, float %14, float %15, float %16, i32 %conv8, i32 %conv11, i32 %conv12), !dbg !16590
  %mul13 = fmul float %11, %call, !dbg !16591
  %add14 = fadd float %9, %mul13, !dbg !16592
  store float %add14, float* %mi, align 4, !dbg !16593
  %23 = load i16, i16* %mt, align 2, !dbg !16594
  %conv15 = sext i16 %23 to i32, !dbg !16594
  %cmp16 = icmp sge i32 %conv15, 0, !dbg !16596
  br i1 %cmp16, label %if.then18, label %if.end34, !dbg !16597

if.then18:                                        ; preds = %if.end
  %24 = load i16, i16* %wf, align 2, !dbg !16598
  %idxprom = sext i16 %24 to i64, !dbg !16600
  %arrayidx19 = getelementptr inbounds [3 x float (float)*], [3 x float (float)*]* %waveform, i64 0, i64 %idxprom, !dbg !16600
  %25 = load float (float)*, float (float)** %arrayidx19, align 8, !dbg !16600
  %26 = load float, float* %mi, align 4, !dbg !16601
  %call20 = call float %25(float %26), !dbg !16600
  store float %call20, float* %mi, align 4, !dbg !16602
  %27 = load i16, i16* %mt, align 2, !dbg !16603
  %conv21 = sext i16 %27 to i32, !dbg !16603
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !16605
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !16606

if.then24:                                        ; preds = %if.then18
  %28 = load float, float* %mi, align 4, !dbg !16607
  %call25 = call float @sqrtf(float %28) #7, !dbg !16609
  store float %call25, float* %mi, align 4, !dbg !16610
  br label %if.end33, !dbg !16611

if.else:                                          ; preds = %if.then18
  %29 = load i16, i16* %mt, align 2, !dbg !16612
  %conv26 = sext i16 %29 to i32, !dbg !16612
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !16614
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !16615

if.then29:                                        ; preds = %if.else
  %30 = load float, float* %mi, align 4, !dbg !16616
  %call30 = call float @sqrtf(float %30) #7, !dbg !16618
  %call31 = call float @sqrtf(float %call30) #7, !dbg !16619
  store float %call31, float* %mi, align 4, !dbg !16620
  br label %if.end32, !dbg !16621

if.end32:                                         ; preds = %if.then29, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then24
  br label %if.end34, !dbg !16622

if.end34:                                         ; preds = %if.end33, %if.end
  %31 = load float, float* %mi, align 4, !dbg !16623
  ret float %31, !dbg !16624
}

declare dso_local i32 @BLI_rng_thread_rand(%struct.RNG_THREAD_ARRAY*, i32) #1

declare dso_local float @mg_MultiFractal(float, float, float, float, float, float, i32) #1

declare dso_local float @mg_fBm(float, float, float, float, float, float, i32) #1

declare dso_local float @mg_RidgedMultiFractal(float, float, float, float, float, float, float, float, i32) #1

declare dso_local float @mg_HybridMultiFractal(float, float, float, float, float, float, float, float, i32) #1

declare dso_local float @mg_HeteroTerrain(float, float, float, float, float, float, float, i32) #1

declare dso_local void @voronoi(float, float, float, float*, float*, float, i32) #1

declare dso_local void @cellNoiseV(float, float, float, float*) #1

declare dso_local float @mg_VLNoise(float, float, float, float, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @cubemap_ob(%struct.Object* %ob, float* %n, float %x, float %y, float %z, float* %adr1, float* %adr2) #0 !dbg !16625 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %n.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %adr1.addr = alloca float*, align 8
  %adr2.addr = alloca float*, align 8
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %ret = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16628, metadata !DIExpression()), !dbg !16629
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !16630, metadata !DIExpression()), !dbg !16631
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !16632, metadata !DIExpression()), !dbg !16633
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !16634, metadata !DIExpression()), !dbg !16635
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !16636, metadata !DIExpression()), !dbg !16637
  store float* %adr1, float** %adr1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr1.addr, metadata !16638, metadata !DIExpression()), !dbg !16639
  store float* %adr2, float** %adr2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr2.addr, metadata !16640, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.declare(metadata float* %x1, metadata !16642, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.declare(metadata float* %y1, metadata !16644, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.declare(metadata float* %z1, metadata !16646, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !16648, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16650, metadata !DIExpression()), !dbg !16651
  %0 = load float*, float** %n.addr, align 8, !dbg !16652
  %cmp = icmp eq float* %0, null, !dbg !16654
  br i1 %cmp, label %if.then, label %if.end, !dbg !16655

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16656
  br label %return, !dbg !16656

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16657
  %1 = load float*, float** %n.addr, align 8, !dbg !16658
  call void @copy_v3_v3(float* %arraydecay, float* %1), !dbg !16659
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16660
  %tobool = icmp ne %struct.Object* %2, null, !dbg !16660
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !16662

if.then1:                                         ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16663
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 50, !dbg !16664
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !16663
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16665
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay2, float* %arraydecay3), !dbg !16666
  br label %if.end4, !dbg !16666

if.end4:                                          ; preds = %if.then1, %if.end
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16667
  %4 = load float, float* %arrayidx, align 4, !dbg !16667
  %5 = call float @llvm.fabs.f32(float %4), !dbg !16668
  store float %5, float* %x1, align 4, !dbg !16669
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16670
  %6 = load float, float* %arrayidx5, align 4, !dbg !16670
  %7 = call float @llvm.fabs.f32(float %6), !dbg !16671
  store float %7, float* %y1, align 4, !dbg !16672
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16673
  %8 = load float, float* %arrayidx6, align 4, !dbg !16673
  %9 = call float @llvm.fabs.f32(float %8), !dbg !16674
  store float %9, float* %z1, align 4, !dbg !16675
  %10 = load float, float* %z1, align 4, !dbg !16676
  %11 = load float, float* %x1, align 4, !dbg !16678
  %cmp7 = fcmp oge float %10, %11, !dbg !16679
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !16680

land.lhs.true:                                    ; preds = %if.end4
  %12 = load float, float* %z1, align 4, !dbg !16681
  %13 = load float, float* %y1, align 4, !dbg !16682
  %cmp8 = fcmp oge float %12, %13, !dbg !16683
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !16684

if.then9:                                         ; preds = %land.lhs.true
  %14 = load float, float* %x.addr, align 4, !dbg !16685
  %add = fadd float %14, 1.000000e+00, !dbg !16687
  %div = fdiv float %add, 2.000000e+00, !dbg !16688
  %15 = load float*, float** %adr1.addr, align 8, !dbg !16689
  store float %div, float* %15, align 4, !dbg !16690
  %16 = load float, float* %y.addr, align 4, !dbg !16691
  %add10 = fadd float %16, 1.000000e+00, !dbg !16692
  %div11 = fdiv float %add10, 2.000000e+00, !dbg !16693
  %17 = load float*, float** %adr2.addr, align 8, !dbg !16694
  store float %div11, float* %17, align 4, !dbg !16695
  store i32 0, i32* %ret, align 4, !dbg !16696
  br label %if.end26, !dbg !16697

if.else:                                          ; preds = %land.lhs.true, %if.end4
  %18 = load float, float* %y1, align 4, !dbg !16698
  %19 = load float, float* %x1, align 4, !dbg !16700
  %cmp12 = fcmp oge float %18, %19, !dbg !16701
  br i1 %cmp12, label %land.lhs.true13, label %if.else20, !dbg !16702

land.lhs.true13:                                  ; preds = %if.else
  %20 = load float, float* %y1, align 4, !dbg !16703
  %21 = load float, float* %z1, align 4, !dbg !16704
  %cmp14 = fcmp oge float %20, %21, !dbg !16705
  br i1 %cmp14, label %if.then15, label %if.else20, !dbg !16706

if.then15:                                        ; preds = %land.lhs.true13
  %22 = load float, float* %x.addr, align 4, !dbg !16707
  %add16 = fadd float %22, 1.000000e+00, !dbg !16709
  %div17 = fdiv float %add16, 2.000000e+00, !dbg !16710
  %23 = load float*, float** %adr1.addr, align 8, !dbg !16711
  store float %div17, float* %23, align 4, !dbg !16712
  %24 = load float, float* %z.addr, align 4, !dbg !16713
  %add18 = fadd float %24, 1.000000e+00, !dbg !16714
  %div19 = fdiv float %add18, 2.000000e+00, !dbg !16715
  %25 = load float*, float** %adr2.addr, align 8, !dbg !16716
  store float %div19, float* %25, align 4, !dbg !16717
  store i32 1, i32* %ret, align 4, !dbg !16718
  br label %if.end25, !dbg !16719

if.else20:                                        ; preds = %land.lhs.true13, %if.else
  %26 = load float, float* %y.addr, align 4, !dbg !16720
  %add21 = fadd float %26, 1.000000e+00, !dbg !16722
  %div22 = fdiv float %add21, 2.000000e+00, !dbg !16723
  %27 = load float*, float** %adr1.addr, align 8, !dbg !16724
  store float %div22, float* %27, align 4, !dbg !16725
  %28 = load float, float* %z.addr, align 4, !dbg !16726
  %add23 = fadd float %28, 1.000000e+00, !dbg !16727
  %div24 = fdiv float %add23, 2.000000e+00, !dbg !16728
  %29 = load float*, float** %adr2.addr, align 8, !dbg !16729
  store float %div24, float* %29, align 4, !dbg !16730
  store i32 2, i32* %ret, align 4, !dbg !16731
  br label %if.end25

if.end25:                                         ; preds = %if.else20, %if.then15
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then9
  %30 = load i32, i32* %ret, align 4, !dbg !16732
  store i32 %30, i32* %retval, align 4, !dbg !16733
  br label %return, !dbg !16733

return:                                           ; preds = %if.end26, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !16734
  ret i32 %31, !dbg !16734
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cubemap_glob(float* %n, float %x, float %y, float %z, float* %adr1, float* %adr2) #0 !dbg !16735 {
entry:
  %n.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %adr1.addr = alloca float*, align 8
  %adr2.addr = alloca float*, align 8
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %ret = alloca i32, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !16738, metadata !DIExpression()), !dbg !16739
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !16740, metadata !DIExpression()), !dbg !16741
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !16742, metadata !DIExpression()), !dbg !16743
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !16744, metadata !DIExpression()), !dbg !16745
  store float* %adr1, float** %adr1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr1.addr, metadata !16746, metadata !DIExpression()), !dbg !16747
  store float* %adr2, float** %adr2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr2.addr, metadata !16748, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.declare(metadata float* %x1, metadata !16750, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.declare(metadata float* %y1, metadata !16752, metadata !DIExpression()), !dbg !16753
  call void @llvm.dbg.declare(metadata float* %z1, metadata !16754, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !16756, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16758, metadata !DIExpression()), !dbg !16759
  %0 = load float*, float** %n.addr, align 8, !dbg !16760
  %cmp = icmp eq float* %0, null, !dbg !16762
  br i1 %cmp, label %if.then, label %if.else, !dbg !16763

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !16764
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16766
  store float %1, float* %arrayidx, align 4, !dbg !16767
  %2 = load float, float* %y.addr, align 4, !dbg !16768
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16769
  store float %2, float* %arrayidx1, align 4, !dbg !16770
  %3 = load float, float* %z.addr, align 4, !dbg !16771
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16772
  store float %3, float* %arrayidx2, align 4, !dbg !16773
  br label %if.end, !dbg !16774

if.else:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16775
  %4 = load float*, float** %n.addr, align 8, !dbg !16777
  call void @copy_v3_v3(float* %arraydecay, float* %4), !dbg !16778
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16779
  call void @mul_mat3_m4_v3([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 33, i64 0), float* %arraydecay3), !dbg !16780
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16781
  %5 = load float, float* %arrayidx4, align 4, !dbg !16781
  %6 = call float @llvm.fabs.f32(float %5), !dbg !16782
  store float %6, float* %x1, align 4, !dbg !16783
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16784
  %7 = load float, float* %arrayidx5, align 4, !dbg !16784
  %8 = call float @llvm.fabs.f32(float %7), !dbg !16785
  store float %8, float* %y1, align 4, !dbg !16786
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16787
  %9 = load float, float* %arrayidx6, align 4, !dbg !16787
  %10 = call float @llvm.fabs.f32(float %9), !dbg !16788
  store float %10, float* %z1, align 4, !dbg !16789
  %11 = load float, float* %z1, align 4, !dbg !16790
  %12 = load float, float* %x1, align 4, !dbg !16792
  %cmp7 = fcmp oge float %11, %12, !dbg !16793
  br i1 %cmp7, label %land.lhs.true, label %if.else12, !dbg !16794

land.lhs.true:                                    ; preds = %if.end
  %13 = load float, float* %z1, align 4, !dbg !16795
  %14 = load float, float* %y1, align 4, !dbg !16796
  %cmp8 = fcmp oge float %13, %14, !dbg !16797
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !16798

if.then9:                                         ; preds = %land.lhs.true
  %15 = load float, float* %x.addr, align 4, !dbg !16799
  %add = fadd float %15, 1.000000e+00, !dbg !16801
  %div = fdiv float %add, 2.000000e+00, !dbg !16802
  %16 = load float*, float** %adr1.addr, align 8, !dbg !16803
  store float %div, float* %16, align 4, !dbg !16804
  %17 = load float, float* %y.addr, align 4, !dbg !16805
  %add10 = fadd float %17, 1.000000e+00, !dbg !16806
  %div11 = fdiv float %add10, 2.000000e+00, !dbg !16807
  %18 = load float*, float** %adr2.addr, align 8, !dbg !16808
  store float %div11, float* %18, align 4, !dbg !16809
  store i32 0, i32* %ret, align 4, !dbg !16810
  br label %if.end27, !dbg !16811

if.else12:                                        ; preds = %land.lhs.true, %if.end
  %19 = load float, float* %y1, align 4, !dbg !16812
  %20 = load float, float* %x1, align 4, !dbg !16814
  %cmp13 = fcmp oge float %19, %20, !dbg !16815
  br i1 %cmp13, label %land.lhs.true14, label %if.else21, !dbg !16816

land.lhs.true14:                                  ; preds = %if.else12
  %21 = load float, float* %y1, align 4, !dbg !16817
  %22 = load float, float* %z1, align 4, !dbg !16818
  %cmp15 = fcmp oge float %21, %22, !dbg !16819
  br i1 %cmp15, label %if.then16, label %if.else21, !dbg !16820

if.then16:                                        ; preds = %land.lhs.true14
  %23 = load float, float* %x.addr, align 4, !dbg !16821
  %add17 = fadd float %23, 1.000000e+00, !dbg !16823
  %div18 = fdiv float %add17, 2.000000e+00, !dbg !16824
  %24 = load float*, float** %adr1.addr, align 8, !dbg !16825
  store float %div18, float* %24, align 4, !dbg !16826
  %25 = load float, float* %z.addr, align 4, !dbg !16827
  %add19 = fadd float %25, 1.000000e+00, !dbg !16828
  %div20 = fdiv float %add19, 2.000000e+00, !dbg !16829
  %26 = load float*, float** %adr2.addr, align 8, !dbg !16830
  store float %div20, float* %26, align 4, !dbg !16831
  store i32 1, i32* %ret, align 4, !dbg !16832
  br label %if.end26, !dbg !16833

if.else21:                                        ; preds = %land.lhs.true14, %if.else12
  %27 = load float, float* %y.addr, align 4, !dbg !16834
  %add22 = fadd float %27, 1.000000e+00, !dbg !16836
  %div23 = fdiv float %add22, 2.000000e+00, !dbg !16837
  %28 = load float*, float** %adr1.addr, align 8, !dbg !16838
  store float %div23, float* %28, align 4, !dbg !16839
  %29 = load float, float* %z.addr, align 4, !dbg !16840
  %add24 = fadd float %29, 1.000000e+00, !dbg !16841
  %div25 = fdiv float %add24, 2.000000e+00, !dbg !16842
  %30 = load float*, float** %adr2.addr, align 8, !dbg !16843
  store float %div25, float* %30, align 4, !dbg !16844
  store i32 2, i32* %ret, align 4, !dbg !16845
  br label %if.end26

if.end26:                                         ; preds = %if.else21, %if.then16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then9
  %31 = load i32, i32* %ret, align 4, !dbg !16846
  ret i32 %31, !dbg !16847
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @cubemap(%struct.MTex* %mtex, %struct.VlakRen* %vlr, float* %n, float %x, float %y, float %z, float* %adr1, float* %adr2) #0 !dbg !16848 {
entry:
  %retval = alloca i32, align 4
  %mtex.addr = alloca %struct.MTex*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %n.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %adr1.addr = alloca float*, align 8
  %adr2.addr = alloca float*, align 8
  %proj = alloca [4 x i32], align 16
  %ret = alloca i32, align 4
  %index = alloca i32, align 4
  %nor = alloca [3 x float], align 4
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !16851, metadata !DIExpression()), !dbg !16852
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !16855, metadata !DIExpression()), !dbg !16856
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !16857, metadata !DIExpression()), !dbg !16858
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !16859, metadata !DIExpression()), !dbg !16860
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !16861, metadata !DIExpression()), !dbg !16862
  store float* %adr1, float** %adr1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr1.addr, metadata !16863, metadata !DIExpression()), !dbg !16864
  store float* %adr2, float** %adr2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr2.addr, metadata !16865, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.declare(metadata [4 x i32]* %proj, metadata !16867, metadata !DIExpression()), !dbg !16868
  %0 = bitcast [4 x i32]* %proj to i8*, !dbg !16868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x i32]* @__const.cubemap.proj to i8*), i64 16, i1 false), !dbg !16868
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16869, metadata !DIExpression()), !dbg !16870
  store i32 0, i32* %ret, align 4, !dbg !16870
  %1 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16871
  %tobool = icmp ne %struct.VlakRen* %1, null, !dbg !16871
  br i1 %tobool, label %if.then, label %if.else84, !dbg !16873

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16874, metadata !DIExpression()), !dbg !16876
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16877
  %puno = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 6, !dbg !16879
  %3 = load i8, i8* %puno, align 8, !dbg !16879
  %conv = zext i8 %3 to i32, !dbg !16877
  %and = and i32 %conv, 112, !dbg !16880
  %cmp = icmp eq i32 %and, 0, !dbg !16881
  br i1 %cmp, label %if.then2, label %if.end46, !dbg !16882

if.then2:                                         ; preds = %if.then
  %4 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16883
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %4, i32 0, i32 0, !dbg !16886
  %5 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !16886
  %tobool3 = icmp ne %struct.VertRen* %5, null, !dbg !16883
  br i1 %tobool3, label %land.lhs.true, label %if.else43, !dbg !16887

land.lhs.true:                                    ; preds = %if.then2
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16888
  %v14 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %6, i32 0, i32 0, !dbg !16889
  %7 = load %struct.VertRen*, %struct.VertRen** %v14, align 8, !dbg !16889
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %7, i32 0, i32 2, !dbg !16890
  %8 = load float*, float** %orco, align 8, !dbg !16890
  %tobool5 = icmp ne float* %8, null, !dbg !16888
  br i1 %tobool5, label %if.then6, label %if.else43, !dbg !16891

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !16892, metadata !DIExpression()), !dbg !16894
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16895
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16896
  %v17 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 0, !dbg !16897
  %10 = load %struct.VertRen*, %struct.VertRen** %v17, align 8, !dbg !16897
  %orco8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %10, i32 0, i32 2, !dbg !16898
  %11 = load float*, float** %orco8, align 8, !dbg !16898
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16899
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i32 0, i32 1, !dbg !16900
  %13 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !16900
  %orco9 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %13, i32 0, i32 2, !dbg !16901
  %14 = load float*, float** %orco9, align 8, !dbg !16901
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16902
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %15, i32 0, i32 2, !dbg !16903
  %16 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !16903
  %orco10 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %16, i32 0, i32 2, !dbg !16904
  %17 = load float*, float** %orco10, align 8, !dbg !16904
  %call = call float @normal_tri_v3(float* %arraydecay, float* %11, float* %14, float* %17), !dbg !16905
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16906
  %18 = load float, float* %arrayidx, align 4, !dbg !16906
  %19 = call float @llvm.fabs.f32(float %18), !dbg !16908
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16909
  %20 = load float, float* %arrayidx11, align 4, !dbg !16909
  %21 = call float @llvm.fabs.f32(float %20), !dbg !16910
  %cmp12 = fcmp olt float %19, %21, !dbg !16911
  br i1 %cmp12, label %land.lhs.true14, label %if.else, !dbg !16912

land.lhs.true14:                                  ; preds = %if.then6
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16913
  %22 = load float, float* %arrayidx15, align 4, !dbg !16913
  %23 = call float @llvm.fabs.f32(float %22), !dbg !16914
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16915
  %24 = load float, float* %arrayidx16, align 4, !dbg !16915
  %25 = call float @llvm.fabs.f32(float %24), !dbg !16916
  %cmp17 = fcmp olt float %23, %25, !dbg !16917
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !16918

if.then19:                                        ; preds = %land.lhs.true14
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16919
  %puno20 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 6, !dbg !16920
  %27 = load i8, i8* %puno20, align 8, !dbg !16921
  %conv21 = zext i8 %27 to i32, !dbg !16921
  %or = or i32 %conv21, 16, !dbg !16921
  %conv22 = trunc i32 %or to i8, !dbg !16921
  store i8 %conv22, i8* %puno20, align 8, !dbg !16921
  br label %if.end42, !dbg !16919

if.else:                                          ; preds = %land.lhs.true14, %if.then6
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16922
  %28 = load float, float* %arrayidx23, align 4, !dbg !16922
  %29 = call float @llvm.fabs.f32(float %28), !dbg !16924
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16925
  %30 = load float, float* %arrayidx24, align 4, !dbg !16925
  %31 = call float @llvm.fabs.f32(float %30), !dbg !16926
  %cmp25 = fcmp olt float %29, %31, !dbg !16927
  br i1 %cmp25, label %land.lhs.true27, label %if.else37, !dbg !16928

land.lhs.true27:                                  ; preds = %if.else
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !16929
  %32 = load float, float* %arrayidx28, align 4, !dbg !16929
  %33 = call float @llvm.fabs.f32(float %32), !dbg !16930
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !16931
  %34 = load float, float* %arrayidx29, align 4, !dbg !16931
  %35 = call float @llvm.fabs.f32(float %34), !dbg !16932
  %cmp30 = fcmp olt float %33, %35, !dbg !16933
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !16934

if.then32:                                        ; preds = %land.lhs.true27
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16935
  %puno33 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 6, !dbg !16936
  %37 = load i8, i8* %puno33, align 8, !dbg !16937
  %conv34 = zext i8 %37 to i32, !dbg !16937
  %or35 = or i32 %conv34, 32, !dbg !16937
  %conv36 = trunc i32 %or35 to i8, !dbg !16937
  store i8 %conv36, i8* %puno33, align 8, !dbg !16937
  br label %if.end, !dbg !16935

if.else37:                                        ; preds = %land.lhs.true27, %if.else
  %38 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16938
  %puno38 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %38, i32 0, i32 6, !dbg !16939
  %39 = load i8, i8* %puno38, align 8, !dbg !16940
  %conv39 = zext i8 %39 to i32, !dbg !16940
  %or40 = or i32 %conv39, 64, !dbg !16940
  %conv41 = trunc i32 %or40 to i8, !dbg !16940
  store i8 %conv41, i8* %puno38, align 8, !dbg !16940
  br label %if.end

if.end:                                           ; preds = %if.else37, %if.then32
  br label %if.end42

if.end42:                                         ; preds = %if.end, %if.then19
  br label %if.end45, !dbg !16941

if.else43:                                        ; preds = %land.lhs.true, %if.then2
  %40 = load float*, float** %n.addr, align 8, !dbg !16942
  %41 = load float, float* %x.addr, align 4, !dbg !16943
  %42 = load float, float* %y.addr, align 4, !dbg !16944
  %43 = load float, float* %z.addr, align 4, !dbg !16945
  %44 = load float*, float** %adr1.addr, align 8, !dbg !16946
  %45 = load float*, float** %adr2.addr, align 8, !dbg !16947
  %call44 = call i32 @cubemap_glob(float* %40, float %41, float %42, float %43, float* %44, float* %45), !dbg !16948
  store i32 %call44, i32* %retval, align 4, !dbg !16949
  br label %return, !dbg !16949

if.end45:                                         ; preds = %if.end42
  br label %if.end46, !dbg !16950

if.end46:                                         ; preds = %if.end45, %if.then
  %46 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !16951
  %tobool47 = icmp ne %struct.MTex* %46, null, !dbg !16951
  br i1 %tobool47, label %if.then48, label %if.end57, !dbg !16953

if.then48:                                        ; preds = %if.end46
  %47 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !16954
  %projx = getelementptr inbounds %struct.MTex, %struct.MTex* %47, i32 0, i32 7, !dbg !16956
  %48 = load i8, i8* %projx, align 8, !dbg !16956
  %conv49 = zext i8 %48 to i32, !dbg !16957
  store i32 %conv49, i32* %index, align 4, !dbg !16958
  %49 = load i32, i32* %index, align 4, !dbg !16959
  %idxprom = sext i32 %49 to i64, !dbg !16960
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %proj, i64 0, i64 %idxprom, !dbg !16960
  store i32 16, i32* %arrayidx50, align 4, !dbg !16961
  %50 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !16962
  %projy = getelementptr inbounds %struct.MTex, %struct.MTex* %50, i32 0, i32 8, !dbg !16963
  %51 = load i8, i8* %projy, align 1, !dbg !16963
  %conv51 = zext i8 %51 to i32, !dbg !16964
  store i32 %conv51, i32* %index, align 4, !dbg !16965
  %52 = load i32, i32* %index, align 4, !dbg !16966
  %idxprom52 = sext i32 %52 to i64, !dbg !16967
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %proj, i64 0, i64 %idxprom52, !dbg !16967
  store i32 32, i32* %arrayidx53, align 4, !dbg !16968
  %53 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !16969
  %projz = getelementptr inbounds %struct.MTex, %struct.MTex* %53, i32 0, i32 9, !dbg !16970
  %54 = load i8, i8* %projz, align 2, !dbg !16970
  %conv54 = zext i8 %54 to i32, !dbg !16971
  store i32 %conv54, i32* %index, align 4, !dbg !16972
  %55 = load i32, i32* %index, align 4, !dbg !16973
  %idxprom55 = sext i32 %55 to i64, !dbg !16974
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %proj, i64 0, i64 %idxprom55, !dbg !16974
  store i32 64, i32* %arrayidx56, align 4, !dbg !16975
  br label %if.end57, !dbg !16976

if.end57:                                         ; preds = %if.then48, %if.end46
  %56 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16977
  %puno58 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %56, i32 0, i32 6, !dbg !16979
  %57 = load i8, i8* %puno58, align 8, !dbg !16979
  %conv59 = zext i8 %57 to i32, !dbg !16977
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %proj, i64 0, i64 1, !dbg !16980
  %58 = load i32, i32* %arrayidx60, align 4, !dbg !16980
  %and61 = and i32 %conv59, %58, !dbg !16981
  %tobool62 = icmp ne i32 %and61, 0, !dbg !16981
  br i1 %tobool62, label %if.then63, label %if.else66, !dbg !16982

if.then63:                                        ; preds = %if.end57
  %59 = load float, float* %x.addr, align 4, !dbg !16983
  %add = fadd float %59, 1.000000e+00, !dbg !16985
  %div = fdiv float %add, 2.000000e+00, !dbg !16986
  %60 = load float*, float** %adr1.addr, align 8, !dbg !16987
  store float %div, float* %60, align 4, !dbg !16988
  %61 = load float, float* %y.addr, align 4, !dbg !16989
  %add64 = fadd float %61, 1.000000e+00, !dbg !16990
  %div65 = fdiv float %add64, 2.000000e+00, !dbg !16991
  %62 = load float*, float** %adr2.addr, align 8, !dbg !16992
  store float %div65, float* %62, align 4, !dbg !16993
  br label %if.end83, !dbg !16994

if.else66:                                        ; preds = %if.end57
  %63 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !16995
  %puno67 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %63, i32 0, i32 6, !dbg !16997
  %64 = load i8, i8* %puno67, align 8, !dbg !16997
  %conv68 = zext i8 %64 to i32, !dbg !16995
  %arrayidx69 = getelementptr inbounds [4 x i32], [4 x i32]* %proj, i64 0, i64 2, !dbg !16998
  %65 = load i32, i32* %arrayidx69, align 8, !dbg !16998
  %and70 = and i32 %conv68, %65, !dbg !16999
  %tobool71 = icmp ne i32 %and70, 0, !dbg !16999
  br i1 %tobool71, label %if.then72, label %if.else77, !dbg !17000

if.then72:                                        ; preds = %if.else66
  %66 = load float, float* %x.addr, align 4, !dbg !17001
  %add73 = fadd float %66, 1.000000e+00, !dbg !17003
  %div74 = fdiv float %add73, 2.000000e+00, !dbg !17004
  %67 = load float*, float** %adr1.addr, align 8, !dbg !17005
  store float %div74, float* %67, align 4, !dbg !17006
  %68 = load float, float* %z.addr, align 4, !dbg !17007
  %add75 = fadd float %68, 1.000000e+00, !dbg !17008
  %div76 = fdiv float %add75, 2.000000e+00, !dbg !17009
  %69 = load float*, float** %adr2.addr, align 8, !dbg !17010
  store float %div76, float* %69, align 4, !dbg !17011
  store i32 1, i32* %ret, align 4, !dbg !17012
  br label %if.end82, !dbg !17013

if.else77:                                        ; preds = %if.else66
  %70 = load float, float* %y.addr, align 4, !dbg !17014
  %add78 = fadd float %70, 1.000000e+00, !dbg !17016
  %div79 = fdiv float %add78, 2.000000e+00, !dbg !17017
  %71 = load float*, float** %adr1.addr, align 8, !dbg !17018
  store float %div79, float* %71, align 4, !dbg !17019
  %72 = load float, float* %z.addr, align 4, !dbg !17020
  %add80 = fadd float %72, 1.000000e+00, !dbg !17021
  %div81 = fdiv float %add80, 2.000000e+00, !dbg !17022
  %73 = load float*, float** %adr2.addr, align 8, !dbg !17023
  store float %div81, float* %73, align 4, !dbg !17024
  store i32 2, i32* %ret, align 4, !dbg !17025
  br label %if.end82

if.end82:                                         ; preds = %if.else77, %if.then72
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then63
  br label %if.end86, !dbg !17026

if.else84:                                        ; preds = %entry
  %74 = load float*, float** %n.addr, align 8, !dbg !17027
  %75 = load float, float* %x.addr, align 4, !dbg !17029
  %76 = load float, float* %y.addr, align 4, !dbg !17030
  %77 = load float, float* %z.addr, align 4, !dbg !17031
  %78 = load float*, float** %adr1.addr, align 8, !dbg !17032
  %79 = load float*, float** %adr2.addr, align 8, !dbg !17033
  %call85 = call i32 @cubemap_glob(float* %74, float %75, float %76, float %77, float* %78, float* %79), !dbg !17034
  store i32 %call85, i32* %retval, align 4, !dbg !17035
  br label %return, !dbg !17035

if.end86:                                         ; preds = %if.end83
  %80 = load i32, i32* %ret, align 4, !dbg !17036
  store i32 %80, i32* %retval, align 4, !dbg !17037
  br label %return, !dbg !17037

return:                                           ; preds = %if.end86, %if.else84, %if.else43
  %81 = load i32, i32* %retval, align 4, !dbg !17038
  ret i32 %81, !dbg !17038
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare dso_local float @acosf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal void @axis_dominant_v3(i32* %r_axis_a, i32* %r_axis_b, float* %axis) #0 !dbg !17039 {
entry:
  %r_axis_a.addr = alloca i32*, align 8
  %r_axis_b.addr = alloca i32*, align 8
  %axis.addr = alloca float*, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  store i32* %r_axis_a, i32** %r_axis_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_a.addr, metadata !17043, metadata !DIExpression()), !dbg !17044
  store i32* %r_axis_b, i32** %r_axis_b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_b.addr, metadata !17045, metadata !DIExpression()), !dbg !17046
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !17047, metadata !DIExpression()), !dbg !17048
  call void @llvm.dbg.declare(metadata float* %xn, metadata !17049, metadata !DIExpression()), !dbg !17050
  %0 = load float*, float** %axis.addr, align 8, !dbg !17051
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17051
  %1 = load float, float* %arrayidx, align 4, !dbg !17051
  %2 = call float @llvm.fabs.f32(float %1), !dbg !17052
  store float %2, float* %xn, align 4, !dbg !17050
  call void @llvm.dbg.declare(metadata float* %yn, metadata !17053, metadata !DIExpression()), !dbg !17054
  %3 = load float*, float** %axis.addr, align 8, !dbg !17055
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !17055
  %4 = load float, float* %arrayidx1, align 4, !dbg !17055
  %5 = call float @llvm.fabs.f32(float %4), !dbg !17056
  store float %5, float* %yn, align 4, !dbg !17054
  call void @llvm.dbg.declare(metadata float* %zn, metadata !17057, metadata !DIExpression()), !dbg !17058
  %6 = load float*, float** %axis.addr, align 8, !dbg !17059
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !17059
  %7 = load float, float* %arrayidx2, align 4, !dbg !17059
  %8 = call float @llvm.fabs.f32(float %7), !dbg !17060
  store float %8, float* %zn, align 4, !dbg !17058
  %9 = load float, float* %zn, align 4, !dbg !17061
  %10 = load float, float* %xn, align 4, !dbg !17063
  %cmp = fcmp oge float %9, %10, !dbg !17064
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !17065

land.lhs.true:                                    ; preds = %entry
  %11 = load float, float* %zn, align 4, !dbg !17066
  %12 = load float, float* %yn, align 4, !dbg !17067
  %cmp3 = fcmp oge float %11, %12, !dbg !17068
  br i1 %cmp3, label %if.then, label %if.else, !dbg !17069

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !17070
  store i32 0, i32* %13, align 4, !dbg !17072
  %14 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !17073
  store i32 1, i32* %14, align 4, !dbg !17074
  br label %if.end9, !dbg !17075

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load float, float* %yn, align 4, !dbg !17076
  %16 = load float, float* %xn, align 4, !dbg !17078
  %cmp4 = fcmp oge float %15, %16, !dbg !17079
  br i1 %cmp4, label %land.lhs.true5, label %if.else8, !dbg !17080

land.lhs.true5:                                   ; preds = %if.else
  %17 = load float, float* %yn, align 4, !dbg !17081
  %18 = load float, float* %zn, align 4, !dbg !17082
  %cmp6 = fcmp oge float %17, %18, !dbg !17083
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !17084

if.then7:                                         ; preds = %land.lhs.true5
  %19 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !17085
  store i32 0, i32* %19, align 4, !dbg !17087
  %20 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !17088
  store i32 2, i32* %20, align 4, !dbg !17089
  br label %if.end, !dbg !17090

if.else8:                                         ; preds = %land.lhs.true5, %if.else
  %21 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !17091
  store i32 1, i32* %21, align 4, !dbg !17093
  %22 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !17094
  store i32 2, i32* %22, align 4, !dbg !17095
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !17096
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3141, !3142, !3143}
!llvm.ident = !{!3144}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "random_tex_array", scope: !2, file: !3, line: 88, type: !3137, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !89, globals: !2724, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/render_texture.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !39, !83}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !34, line: 899, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38}
!36 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 76, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82}
!42 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !84, line: 325, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!85 = !{!86, !87, !88}
!86 = !DIEnumerator(name: "ME_PROJXY", value: 16, isUnsigned: true)
!87 = !DIEnumerator(name: "ME_PROJXZ", value: 32, isUnsigned: true)
!88 = !DIEnumerator(name: "ME_PROJYZ", value: 64, isUnsigned: true)
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!91 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!92 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !84, line: 165, baseType: !95)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !84, line: 160, size: 384, elements: !96)
!96 = !{!97, !102, !2719, !2720, !2721, !2722, !2723}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !95, file: !84, line: 161, baseType: !98, size: 256)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 256, elements: !99)
!99 = !{!100, !101}
!100 = !DISubrange(count: 4)
!101 = !DISubrange(count: 2)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !95, file: !84, line: 162, baseType: !103, size: 64, offset: 256)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !105, line: 77, size: 15424, elements: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !{!107, !177, !178, !181, !184, !187, !2679, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !104, file: !105, line: 78, baseType: !108, size: 960)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !109, line: 130, baseType: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !109, line: 117, size: 960, elements: !111)
!111 = !{!112, !113, !114, !116, !136, !140, !142, !143, !144, !145}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !110, file: !109, line: 118, baseType: !90, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !110, file: !109, line: 118, baseType: !90, size: 64, offset: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !110, file: !109, line: 119, baseType: !115, size: 64, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !110, file: !109, line: 120, baseType: !117, size: 64, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !109, line: 136, size: 17600, elements: !119)
!119 = !{!120, !121, !123, !126, !131, !132, !133}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !118, file: !109, line: 137, baseType: !108, size: 960)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !118, file: !109, line: 138, baseType: !122, size: 64, offset: 960)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !118, file: !109, line: 139, baseType: !124, size: 64, offset: 1024)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !109, line: 43, flags: DIFlagFwdDecl)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !118, file: !109, line: 140, baseType: !127, size: 8192, offset: 1088)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 8192, elements: !129)
!128 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!129 = !{!130}
!130 = !DISubrange(count: 1024)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !118, file: !109, line: 141, baseType: !127, size: 8192, offset: 9280)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !118, file: !109, line: 148, baseType: !117, size: 64, offset: 17472)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !118, file: !109, line: 150, baseType: !134, size: 64, offset: 17536)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !109, line: 45, flags: DIFlagFwdDecl)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !110, file: !109, line: 121, baseType: !137, size: 528, offset: 256)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 528, elements: !138)
!138 = !{!139}
!139 = !DISubrange(count: 66)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !110, file: !109, line: 126, baseType: !141, size: 16, offset: 784)
!141 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !110, file: !109, line: 127, baseType: !92, size: 32, offset: 800)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !110, file: !109, line: 128, baseType: !92, size: 32, offset: 832)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !110, file: !109, line: 128, baseType: !92, size: 32, offset: 864)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !110, file: !109, line: 129, baseType: !146, size: 64, offset: 896)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !109, line: 75, baseType: !148)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !109, line: 62, size: 1024, elements: !149)
!149 = !{!150, !152, !153, !154, !155, !156, !160, !161, !175, !176}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !148, file: !109, line: 63, baseType: !151, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !148, file: !109, line: 63, baseType: !151, size: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !148, file: !109, line: 64, baseType: !128, size: 8, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !148, file: !109, line: 64, baseType: !128, size: 8, offset: 136)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !148, file: !109, line: 65, baseType: !141, size: 16, offset: 144)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !148, file: !109, line: 66, baseType: !157, size: 512, offset: 160)
!157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 512, elements: !158)
!158 = !{!159}
!159 = !DISubrange(count: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !148, file: !109, line: 67, baseType: !92, size: 32, offset: 672)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !148, file: !109, line: 69, baseType: !162, size: 256, offset: 704)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !109, line: 60, baseType: !163)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !109, line: 48, size: 256, elements: !164)
!164 = !{!165, !166, !173, !174}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !163, file: !109, line: 49, baseType: !90, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !163, file: !109, line: 58, baseType: !167, size: 128, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !168, line: 71, baseType: !169)
!168 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !168, line: 69, size: 128, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !169, file: !168, line: 70, baseType: !90, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !169, file: !168, line: 70, baseType: !90, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !163, file: !109, line: 59, baseType: !92, size: 32, offset: 192)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !163, file: !109, line: 59, baseType: !92, size: 32, offset: 224)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !148, file: !109, line: 70, baseType: !92, size: 32, offset: 960)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !148, file: !109, line: 74, baseType: !92, size: 32, offset: 992)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !104, file: !105, line: 80, baseType: !127, size: 8192, offset: 960)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !104, file: !105, line: 82, baseType: !179, size: 64, offset: 9152)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !105, line: 43, flags: DIFlagFwdDecl)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !104, file: !105, line: 83, baseType: !182, size: 64, offset: 9216)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !109, line: 46, flags: DIFlagFwdDecl)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !104, file: !105, line: 86, baseType: !185, size: 64, offset: 9280)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !105, line: 41, flags: DIFlagFwdDecl)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !104, file: !105, line: 87, baseType: !188, size: 64, offset: 9344)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !190, line: 110, size: 1152, elements: !191)
!190 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !200, !202, !203, !212, !213, !214, !215, !217, !2675, !2676, !2677, !2678}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !189, file: !190, line: 111, baseType: !188, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !189, file: !190, line: 111, baseType: !188, size: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !189, file: !190, line: 114, baseType: !92, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !189, file: !190, line: 114, baseType: !92, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !189, file: !190, line: 115, baseType: !141, size: 16, offset: 192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !189, file: !190, line: 115, baseType: !141, size: 16, offset: 208)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !189, file: !190, line: 118, baseType: !199, size: 64, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !189, file: !190, line: 120, baseType: !201, size: 64, offset: 320)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !189, file: !190, line: 122, baseType: !201, size: 64, offset: 384)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !189, file: !190, line: 125, baseType: !204, size: 128, offset: 448)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !205, line: 89, baseType: !206)
!205 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !205, line: 86, size: 128, elements: !207)
!207 = !{!208, !209, !210, !211}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !206, file: !205, line: 87, baseType: !92, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !206, file: !205, line: 87, baseType: !92, size: 32, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !206, file: !205, line: 88, baseType: !92, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !206, file: !205, line: 88, baseType: !92, size: 32, offset: 96)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !189, file: !190, line: 127, baseType: !92, size: 32, offset: 576)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !189, file: !190, line: 127, baseType: !92, size: 32, offset: 608)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !189, file: !190, line: 130, baseType: !167, size: 128, offset: 640)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !189, file: !190, line: 133, baseType: !216, size: 128, offset: 768)
!216 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !204)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !189, file: !190, line: 134, baseType: !218, size: 64, offset: 896)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !220)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !190, line: 108, baseType: !221)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !190, line: 85, size: 1600, elements: !222)
!222 = !{!223, !225, !226, !230, !231, !232, !233, !234, !235, !236, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !221, file: !190, line: 86, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !221, file: !190, line: 86, baseType: !224, size: 64, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !221, file: !190, line: 89, baseType: !227, size: 592, offset: 128)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 592, elements: !228)
!228 = !{!229}
!229 = !DISubrange(count: 74)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !221, file: !190, line: 90, baseType: !7, size: 32, offset: 736)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !221, file: !190, line: 90, baseType: !7, size: 32, offset: 768)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !221, file: !190, line: 90, baseType: !7, size: 32, offset: 800)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !221, file: !190, line: 91, baseType: !92, size: 32, offset: 832)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !221, file: !190, line: 91, baseType: !92, size: 32, offset: 864)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !221, file: !190, line: 91, baseType: !92, size: 32, offset: 896)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !221, file: !190, line: 93, baseType: !237, size: 64, offset: 960)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !239, line: 93, size: 7552, elements: !240)
!239 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !360, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !428, !429, !430, !431, !432, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2665}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !238, file: !239, line: 94, baseType: !108, size: 960)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !238, file: !239, line: 95, baseType: !243, size: 64, offset: 960)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !34, line: 838, size: 768, elements: !245)
!245 = !{!246, !261, !262, !272, !273, !304, !305, !306, !307, !308, !309, !310}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !244, file: !34, line: 840, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !249, line: 499, baseType: !250)
!249 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !249, line: 486, size: 1600, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !260}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !250, file: !249, line: 487, baseType: !108, size: 960)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !250, file: !249, line: 489, baseType: !167, size: 128, offset: 960)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !250, file: !249, line: 490, baseType: !167, size: 128, offset: 1088)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !250, file: !249, line: 491, baseType: !167, size: 128, offset: 1216)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !250, file: !249, line: 492, baseType: !167, size: 128, offset: 1344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !250, file: !249, line: 494, baseType: !92, size: 32, offset: 1472)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !250, file: !249, line: 495, baseType: !92, size: 32, offset: 1504)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !250, file: !249, line: 497, baseType: !92, size: 32, offset: 1536)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !250, file: !249, line: 498, baseType: !92, size: 32, offset: 1568)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !244, file: !34, line: 844, baseType: !247, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !244, file: !34, line: 848, baseType: !263, size: 64, offset: 128)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !34, line: 549, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !34, line: 544, size: 320, elements: !266)
!266 = !{!267, !269, !270, !271}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !265, file: !34, line: 545, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !265, file: !34, line: 545, baseType: !268, size: 64, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !265, file: !34, line: 547, baseType: !247, size: 64, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !265, file: !34, line: 548, baseType: !167, size: 128, offset: 192)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !244, file: !34, line: 851, baseType: !167, size: 128, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !244, file: !34, line: 853, baseType: !274, size: 64, offset: 320)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !34, line: 594, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !34, line: 561, size: 1664, elements: !277)
!277 = !{!278, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !34, line: 562, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !276, file: !34, line: 562, baseType: !279, size: 64, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !276, file: !34, line: 564, baseType: !167, size: 128, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !276, file: !34, line: 565, baseType: !247, size: 64, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !276, file: !34, line: 566, baseType: !263, size: 64, offset: 320)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !276, file: !34, line: 568, baseType: !167, size: 128, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !276, file: !34, line: 569, baseType: !167, size: 128, offset: 512)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !34, line: 571, baseType: !157, size: 512, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !276, file: !34, line: 573, baseType: !91, size: 32, offset: 1152)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !276, file: !34, line: 574, baseType: !91, size: 32, offset: 1184)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !276, file: !34, line: 576, baseType: !91, size: 32, offset: 1216)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !276, file: !34, line: 576, baseType: !91, size: 32, offset: 1248)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !276, file: !34, line: 577, baseType: !91, size: 32, offset: 1280)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !276, file: !34, line: 577, baseType: !91, size: 32, offset: 1312)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !276, file: !34, line: 579, baseType: !91, size: 32, offset: 1344)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !276, file: !34, line: 580, baseType: !91, size: 32, offset: 1376)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !276, file: !34, line: 582, baseType: !91, size: 32, offset: 1408)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !276, file: !34, line: 582, baseType: !91, size: 32, offset: 1440)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !276, file: !34, line: 583, baseType: !141, size: 16, offset: 1472)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !276, file: !34, line: 585, baseType: !141, size: 16, offset: 1488)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !276, file: !34, line: 586, baseType: !141, size: 16, offset: 1504)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !34, line: 588, baseType: !141, size: 16, offset: 1520)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !276, file: !34, line: 590, baseType: !90, size: 64, offset: 1536)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !276, file: !34, line: 592, baseType: !92, size: 32, offset: 1600)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !276, file: !34, line: 593, baseType: !92, size: 32, offset: 1632)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !244, file: !34, line: 858, baseType: !167, size: 128, offset: 384)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !244, file: !34, line: 859, baseType: !167, size: 128, offset: 512)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !244, file: !34, line: 862, baseType: !92, size: 32, offset: 640)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !244, file: !34, line: 863, baseType: !92, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !244, file: !34, line: 866, baseType: !141, size: 16, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !244, file: !34, line: 867, baseType: !141, size: 16, offset: 720)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !244, file: !34, line: 868, baseType: !91, size: 32, offset: 736)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !238, file: !239, line: 97, baseType: !141, size: 16, offset: 1024)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !238, file: !239, line: 97, baseType: !141, size: 16, offset: 1040)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !238, file: !239, line: 99, baseType: !91, size: 32, offset: 1056)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !238, file: !239, line: 99, baseType: !91, size: 32, offset: 1088)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !238, file: !239, line: 99, baseType: !91, size: 32, offset: 1120)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !238, file: !239, line: 100, baseType: !91, size: 32, offset: 1152)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !238, file: !239, line: 100, baseType: !91, size: 32, offset: 1184)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !238, file: !239, line: 100, baseType: !91, size: 32, offset: 1216)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !238, file: !239, line: 101, baseType: !91, size: 32, offset: 1248)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !238, file: !239, line: 101, baseType: !91, size: 32, offset: 1280)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !238, file: !239, line: 101, baseType: !91, size: 32, offset: 1312)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !238, file: !239, line: 102, baseType: !91, size: 32, offset: 1344)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !238, file: !239, line: 102, baseType: !91, size: 32, offset: 1376)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !238, file: !239, line: 102, baseType: !91, size: 32, offset: 1408)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !238, file: !239, line: 103, baseType: !91, size: 32, offset: 1440)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !238, file: !239, line: 103, baseType: !91, size: 32, offset: 1472)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !238, file: !239, line: 103, baseType: !91, size: 32, offset: 1504)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !238, file: !239, line: 103, baseType: !91, size: 32, offset: 1536)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !238, file: !239, line: 103, baseType: !91, size: 32, offset: 1568)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !238, file: !239, line: 104, baseType: !91, size: 32, offset: 1600)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !238, file: !239, line: 104, baseType: !91, size: 32, offset: 1632)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !238, file: !239, line: 104, baseType: !91, size: 32, offset: 1664)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !238, file: !239, line: 104, baseType: !91, size: 32, offset: 1696)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !238, file: !239, line: 104, baseType: !91, size: 32, offset: 1728)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !238, file: !239, line: 105, baseType: !91, size: 32, offset: 1760)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !238, file: !239, line: 108, baseType: !337, size: 704, offset: 1792)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !239, line: 53, size: 704, elements: !338)
!338 = !{!339, !340, !341, !342, !343, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !337, file: !239, line: 54, baseType: !91, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !337, file: !239, line: 55, baseType: !91, size: 32, offset: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !337, file: !239, line: 56, baseType: !91, size: 32, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !337, file: !239, line: 57, baseType: !91, size: 32, offset: 96)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !337, file: !239, line: 59, baseType: !344, size: 96, offset: 128)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 96, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 3)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !337, file: !239, line: 60, baseType: !344, size: 96, offset: 224)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !337, file: !239, line: 61, baseType: !344, size: 96, offset: 320)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !337, file: !239, line: 63, baseType: !91, size: 32, offset: 416)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !337, file: !239, line: 64, baseType: !91, size: 32, offset: 448)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !337, file: !239, line: 65, baseType: !91, size: 32, offset: 480)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !337, file: !239, line: 67, baseType: !141, size: 16, offset: 512)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !337, file: !239, line: 68, baseType: !141, size: 16, offset: 528)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !337, file: !239, line: 69, baseType: !141, size: 16, offset: 544)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !337, file: !239, line: 70, baseType: !141, size: 16, offset: 560)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !337, file: !239, line: 72, baseType: !91, size: 32, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !337, file: !239, line: 73, baseType: !91, size: 32, offset: 608)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !337, file: !239, line: 74, baseType: !91, size: 32, offset: 640)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !337, file: !239, line: 75, baseType: !91, size: 32, offset: 672)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !238, file: !239, line: 109, baseType: !361, size: 128, offset: 2496)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !239, line: 79, size: 128, elements: !362)
!362 = !{!363, !364, !365, !366}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !361, file: !239, line: 80, baseType: !92, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !361, file: !239, line: 81, baseType: !92, size: 32, offset: 32)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !361, file: !239, line: 82, baseType: !92, size: 32, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !361, file: !239, line: 83, baseType: !92, size: 32, offset: 96)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !238, file: !239, line: 111, baseType: !91, size: 32, offset: 2624)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !238, file: !239, line: 111, baseType: !91, size: 32, offset: 2656)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !238, file: !239, line: 112, baseType: !91, size: 32, offset: 2688)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !238, file: !239, line: 112, baseType: !91, size: 32, offset: 2720)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !238, file: !239, line: 113, baseType: !91, size: 32, offset: 2752)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !238, file: !239, line: 114, baseType: !91, size: 32, offset: 2784)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !238, file: !239, line: 114, baseType: !91, size: 32, offset: 2816)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !238, file: !239, line: 115, baseType: !141, size: 16, offset: 2848)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !238, file: !239, line: 115, baseType: !141, size: 16, offset: 2864)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !238, file: !239, line: 116, baseType: !141, size: 16, offset: 2880)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !238, file: !239, line: 117, baseType: !128, size: 8, offset: 2896)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !238, file: !239, line: 117, baseType: !128, size: 8, offset: 2904)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !238, file: !239, line: 119, baseType: !91, size: 32, offset: 2912)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !238, file: !239, line: 119, baseType: !91, size: 32, offset: 2944)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !238, file: !239, line: 120, baseType: !141, size: 16, offset: 2976)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !238, file: !239, line: 120, baseType: !141, size: 16, offset: 2992)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !238, file: !239, line: 121, baseType: !91, size: 32, offset: 3008)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !238, file: !239, line: 121, baseType: !91, size: 32, offset: 3040)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !238, file: !239, line: 122, baseType: !91, size: 32, offset: 3072)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !238, file: !239, line: 123, baseType: !91, size: 32, offset: 3104)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !238, file: !239, line: 124, baseType: !141, size: 16, offset: 3136)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !238, file: !239, line: 125, baseType: !141, size: 16, offset: 3152)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !238, file: !239, line: 127, baseType: !92, size: 32, offset: 3168)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !238, file: !239, line: 127, baseType: !92, size: 32, offset: 3200)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !238, file: !239, line: 128, baseType: !92, size: 32, offset: 3232)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !238, file: !239, line: 128, baseType: !92, size: 32, offset: 3264)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !238, file: !239, line: 129, baseType: !141, size: 16, offset: 3296)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !238, file: !239, line: 129, baseType: !141, size: 16, offset: 3312)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !238, file: !239, line: 129, baseType: !141, size: 16, offset: 3328)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !238, file: !239, line: 129, baseType: !141, size: 16, offset: 3344)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !238, file: !239, line: 130, baseType: !91, size: 32, offset: 3360)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !238, file: !239, line: 130, baseType: !91, size: 32, offset: 3392)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !238, file: !239, line: 130, baseType: !91, size: 32, offset: 3424)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !238, file: !239, line: 130, baseType: !91, size: 32, offset: 3456)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !238, file: !239, line: 131, baseType: !91, size: 32, offset: 3488)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !238, file: !239, line: 131, baseType: !91, size: 32, offset: 3520)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !238, file: !239, line: 131, baseType: !91, size: 32, offset: 3552)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !238, file: !239, line: 131, baseType: !91, size: 32, offset: 3584)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !238, file: !239, line: 132, baseType: !91, size: 32, offset: 3616)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !238, file: !239, line: 132, baseType: !91, size: 32, offset: 3648)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !238, file: !239, line: 133, baseType: !157, size: 512, offset: 3680)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !238, file: !239, line: 135, baseType: !91, size: 32, offset: 4192)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !238, file: !239, line: 136, baseType: !91, size: 32, offset: 4224)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !238, file: !239, line: 137, baseType: !91, size: 32, offset: 4256)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !238, file: !239, line: 138, baseType: !92, size: 32, offset: 4288)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !238, file: !239, line: 141, baseType: !128, size: 8, offset: 4320)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !238, file: !239, line: 141, baseType: !128, size: 8, offset: 4328)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !238, file: !239, line: 141, baseType: !128, size: 8, offset: 4336)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !238, file: !239, line: 141, baseType: !128, size: 8, offset: 4344)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !238, file: !239, line: 142, baseType: !141, size: 16, offset: 4352)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !238, file: !239, line: 142, baseType: !141, size: 16, offset: 4368)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !238, file: !239, line: 142, baseType: !141, size: 16, offset: 4384)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !238, file: !239, line: 145, baseType: !128, size: 8, offset: 4400)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !238, file: !239, line: 145, baseType: !128, size: 8, offset: 4408)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !238, file: !239, line: 148, baseType: !141, size: 16, offset: 4416)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !238, file: !239, line: 148, baseType: !141, size: 16, offset: 4432)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !238, file: !239, line: 149, baseType: !91, size: 32, offset: 4448)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !238, file: !239, line: 149, baseType: !91, size: 32, offset: 4480)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !238, file: !239, line: 152, baseType: !426, size: 128, offset: 4512)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 128, elements: !427)
!427 = !{!100}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !238, file: !239, line: 153, baseType: !91, size: 32, offset: 4640)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !238, file: !239, line: 154, baseType: !91, size: 32, offset: 4672)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !238, file: !239, line: 157, baseType: !141, size: 16, offset: 4704)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !238, file: !239, line: 157, baseType: !141, size: 16, offset: 4720)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !238, file: !239, line: 160, baseType: !433, size: 64, offset: 4736)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !435, line: 113, size: 6208, elements: !436)
!435 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!436 = !{!437, !438, !439, !440, !441, !442, !446}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !434, file: !435, line: 114, baseType: !141, size: 16)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !434, file: !435, line: 114, baseType: !141, size: 16, offset: 16)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !434, file: !435, line: 115, baseType: !128, size: 8, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !434, file: !435, line: 115, baseType: !128, size: 8, offset: 40)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !434, file: !435, line: 116, baseType: !128, size: 8, offset: 48)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !434, file: !435, line: 117, baseType: !443, size: 8, offset: 56)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 8, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 1)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !434, file: !435, line: 119, baseType: !447, size: 6144, offset: 64)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 6144, elements: !457)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !435, line: 109, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !435, line: 106, size: 192, elements: !450)
!450 = !{!451, !452, !453, !454, !455, !456}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !449, file: !435, line: 107, baseType: !91, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !449, file: !435, line: 107, baseType: !91, size: 32, offset: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !449, file: !435, line: 107, baseType: !91, size: 32, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !449, file: !435, line: 107, baseType: !91, size: 32, offset: 96)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !449, file: !435, line: 107, baseType: !91, size: 32, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !449, file: !435, line: 108, baseType: !92, size: 32, offset: 160)
!457 = !{!458}
!458 = !DISubrange(count: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !238, file: !239, line: 161, baseType: !433, size: 64, offset: 4800)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !238, file: !239, line: 162, baseType: !128, size: 8, offset: 4864)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !238, file: !239, line: 162, baseType: !128, size: 8, offset: 4872)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !238, file: !239, line: 163, baseType: !128, size: 8, offset: 4880)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !238, file: !239, line: 163, baseType: !128, size: 8, offset: 4888)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !238, file: !239, line: 164, baseType: !141, size: 16, offset: 4896)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !238, file: !239, line: 164, baseType: !141, size: 16, offset: 4912)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !238, file: !239, line: 165, baseType: !91, size: 32, offset: 4928)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !238, file: !239, line: 165, baseType: !91, size: 32, offset: 4960)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !238, file: !239, line: 167, baseType: !469, size: 1152, offset: 4992)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 1152, elements: !2623)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !435, line: 57, size: 2496, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !2420, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !471, file: !435, line: 59, baseType: !141, size: 16)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !471, file: !435, line: 59, baseType: !141, size: 16, offset: 16)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !471, file: !435, line: 59, baseType: !141, size: 16, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !471, file: !435, line: 59, baseType: !141, size: 16, offset: 48)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !471, file: !435, line: 60, baseType: !478, size: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !480, line: 115, size: 11392, elements: !481)
!480 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!481 = !{!482, !483, !484, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !501, !511, !513, !514, !555, !556, !559, !560, !576, !577, !578, !579, !580, !581, !582, !584, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !662, !663, !664, !665, !666, !667, !668, !669, !670, !673, !676, !679, !680, !681, !682, !683, !686, !689, !1080, !1081, !1087, !1088, !1089, !1090, !1091, !1092, !1094, !1097, !1100, !1103, !2408, !2409}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !479, file: !480, line: 116, baseType: !108, size: 960)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !479, file: !480, line: 117, baseType: !243, size: 64, offset: 960)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !479, file: !480, line: 119, baseType: !485, size: 64, offset: 1024)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !480, line: 57, flags: DIFlagFwdDecl)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !479, file: !480, line: 121, baseType: !141, size: 16, offset: 1088)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !479, file: !480, line: 121, baseType: !141, size: 16, offset: 1104)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !479, file: !480, line: 122, baseType: !92, size: 32, offset: 1120)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !479, file: !480, line: 122, baseType: !92, size: 32, offset: 1152)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !479, file: !480, line: 122, baseType: !92, size: 32, offset: 1184)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !479, file: !480, line: 123, baseType: !157, size: 512, offset: 1216)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !479, file: !480, line: 124, baseType: !478, size: 64, offset: 1728)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !479, file: !480, line: 124, baseType: !478, size: 64, offset: 1792)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !479, file: !480, line: 127, baseType: !478, size: 64, offset: 1856)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !479, file: !480, line: 127, baseType: !478, size: 64, offset: 1920)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !479, file: !480, line: 127, baseType: !478, size: 64, offset: 1984)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !479, file: !480, line: 128, baseType: !499, size: 64, offset: 2048)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !435, line: 46, flags: DIFlagFwdDecl)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !479, file: !480, line: 130, baseType: !502, size: 64, offset: 2112)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !480, line: 97, size: 832, elements: !504)
!504 = !{!505, !509, !510}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !503, file: !480, line: 98, baseType: !506, size: 768)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 768, elements: !507)
!507 = !{!508, !346}
!508 = !DISubrange(count: 8)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !503, file: !480, line: 99, baseType: !92, size: 32, offset: 768)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !503, file: !480, line: 99, baseType: !92, size: 32, offset: 800)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !479, file: !480, line: 131, baseType: !512, size: 64, offset: 2176)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !479, file: !480, line: 132, baseType: !512, size: 64, offset: 2240)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !479, file: !480, line: 133, baseType: !515, size: 64, offset: 2304)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !249, line: 334, size: 1728, elements: !517)
!517 = !{!518, !519, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !554}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !516, file: !249, line: 335, baseType: !167, size: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !516, file: !249, line: 336, baseType: !520, size: 64, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !249, line: 47, flags: DIFlagFwdDecl)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !516, file: !249, line: 338, baseType: !141, size: 16, offset: 192)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !516, file: !249, line: 338, baseType: !141, size: 16, offset: 208)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !516, file: !249, line: 339, baseType: !7, size: 32, offset: 224)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !516, file: !249, line: 340, baseType: !92, size: 32, offset: 256)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !516, file: !249, line: 342, baseType: !91, size: 32, offset: 288)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !516, file: !249, line: 343, baseType: !344, size: 96, offset: 320)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !516, file: !249, line: 344, baseType: !344, size: 96, offset: 416)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !516, file: !249, line: 347, baseType: !167, size: 128, offset: 512)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !516, file: !249, line: 349, baseType: !92, size: 32, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !516, file: !249, line: 350, baseType: !92, size: 32, offset: 672)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !516, file: !249, line: 351, baseType: !90, size: 64, offset: 704)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !516, file: !249, line: 352, baseType: !90, size: 64, offset: 768)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !516, file: !249, line: 354, baseType: !535, size: 384, offset: 832)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !249, line: 116, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !249, line: 94, size: 384, elements: !537)
!537 = !{!538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !536, file: !249, line: 96, baseType: !92, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !536, file: !249, line: 96, baseType: !92, size: 32, offset: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !536, file: !249, line: 97, baseType: !92, size: 32, offset: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !536, file: !249, line: 97, baseType: !92, size: 32, offset: 96)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !536, file: !249, line: 99, baseType: !141, size: 16, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !536, file: !249, line: 100, baseType: !141, size: 16, offset: 144)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !536, file: !249, line: 102, baseType: !141, size: 16, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !536, file: !249, line: 105, baseType: !141, size: 16, offset: 176)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !536, file: !249, line: 108, baseType: !141, size: 16, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !536, file: !249, line: 109, baseType: !141, size: 16, offset: 208)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !536, file: !249, line: 111, baseType: !141, size: 16, offset: 224)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !536, file: !249, line: 112, baseType: !141, size: 16, offset: 240)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !536, file: !249, line: 114, baseType: !92, size: 32, offset: 256)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !536, file: !249, line: 114, baseType: !92, size: 32, offset: 288)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !536, file: !249, line: 115, baseType: !92, size: 32, offset: 320)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !536, file: !249, line: 115, baseType: !92, size: 32, offset: 352)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !516, file: !249, line: 355, baseType: !157, size: 512, offset: 1216)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !479, file: !480, line: 134, baseType: !90, size: 64, offset: 2368)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !479, file: !480, line: 136, baseType: !557, size: 64, offset: 2432)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !480, line: 58, flags: DIFlagFwdDecl)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !479, file: !480, line: 138, baseType: !535, size: 384, offset: 2496)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !479, file: !480, line: 139, baseType: !561, size: 64, offset: 2880)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !249, line: 80, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !249, line: 72, size: 192, elements: !564)
!564 = !{!565, !572, !573, !574, !575}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !563, file: !249, line: 73, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !249, line: 59, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !249, line: 56, size: 128, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !568, file: !249, line: 57, baseType: !344, size: 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !568, file: !249, line: 58, baseType: !92, size: 32, offset: 96)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !563, file: !249, line: 74, baseType: !92, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !563, file: !249, line: 76, baseType: !92, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !563, file: !249, line: 77, baseType: !92, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !563, file: !249, line: 79, baseType: !92, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !479, file: !480, line: 141, baseType: !167, size: 128, offset: 2944)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !479, file: !480, line: 142, baseType: !167, size: 128, offset: 3072)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !479, file: !480, line: 143, baseType: !167, size: 128, offset: 3200)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !479, file: !480, line: 144, baseType: !167, size: 128, offset: 3328)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !479, file: !480, line: 146, baseType: !92, size: 32, offset: 3456)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !479, file: !480, line: 147, baseType: !92, size: 32, offset: 3488)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !479, file: !480, line: 150, baseType: !583, size: 64, offset: 3520)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !479, file: !480, line: 151, baseType: !585, size: 64, offset: 3584)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !479, file: !480, line: 152, baseType: !92, size: 32, offset: 3648)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !479, file: !480, line: 153, baseType: !92, size: 32, offset: 3680)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !479, file: !480, line: 156, baseType: !344, size: 96, offset: 3712)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !479, file: !480, line: 156, baseType: !344, size: 96, offset: 3808)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !479, file: !480, line: 156, baseType: !344, size: 96, offset: 3904)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !479, file: !480, line: 157, baseType: !344, size: 96, offset: 4000)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !479, file: !480, line: 158, baseType: !344, size: 96, offset: 4096)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !479, file: !480, line: 159, baseType: !344, size: 96, offset: 4192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !479, file: !480, line: 160, baseType: !344, size: 96, offset: 4288)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !479, file: !480, line: 160, baseType: !344, size: 96, offset: 4384)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !479, file: !480, line: 161, baseType: !426, size: 128, offset: 4480)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !479, file: !480, line: 161, baseType: !426, size: 128, offset: 4608)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !479, file: !480, line: 162, baseType: !344, size: 96, offset: 4736)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !479, file: !480, line: 162, baseType: !344, size: 96, offset: 4832)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !479, file: !480, line: 163, baseType: !91, size: 32, offset: 4928)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !479, file: !480, line: 163, baseType: !91, size: 32, offset: 4960)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !479, file: !480, line: 164, baseType: !603, size: 512, offset: 4992)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 512, elements: !604)
!604 = !{!100, !100}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !479, file: !480, line: 165, baseType: !603, size: 512, offset: 5504)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !479, file: !480, line: 166, baseType: !603, size: 512, offset: 6016)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !479, file: !480, line: 167, baseType: !603, size: 512, offset: 6528)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !479, file: !480, line: 176, baseType: !603, size: 512, offset: 7040)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !479, file: !480, line: 178, baseType: !7, size: 32, offset: 7552)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !479, file: !480, line: 180, baseType: !141, size: 16, offset: 7584)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !479, file: !480, line: 181, baseType: !141, size: 16, offset: 7600)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !479, file: !480, line: 183, baseType: !141, size: 16, offset: 7616)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !479, file: !480, line: 183, baseType: !141, size: 16, offset: 7632)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !479, file: !480, line: 184, baseType: !141, size: 16, offset: 7648)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !479, file: !480, line: 184, baseType: !141, size: 16, offset: 7664)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !479, file: !480, line: 185, baseType: !141, size: 16, offset: 7680)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !479, file: !480, line: 186, baseType: !141, size: 16, offset: 7696)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !479, file: !480, line: 187, baseType: !141, size: 16, offset: 7712)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !479, file: !480, line: 188, baseType: !128, size: 8, offset: 7728)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !479, file: !480, line: 189, baseType: !128, size: 8, offset: 7736)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !479, file: !480, line: 192, baseType: !92, size: 32, offset: 7744)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !479, file: !480, line: 192, baseType: !92, size: 32, offset: 7776)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !479, file: !480, line: 192, baseType: !92, size: 32, offset: 7808)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !479, file: !480, line: 192, baseType: !92, size: 32, offset: 7840)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !479, file: !480, line: 194, baseType: !92, size: 32, offset: 7872)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !479, file: !480, line: 202, baseType: !91, size: 32, offset: 7904)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !479, file: !480, line: 202, baseType: !91, size: 32, offset: 7936)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !479, file: !480, line: 202, baseType: !91, size: 32, offset: 7968)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !479, file: !480, line: 211, baseType: !91, size: 32, offset: 8000)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !479, file: !480, line: 212, baseType: !91, size: 32, offset: 8032)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !479, file: !480, line: 213, baseType: !91, size: 32, offset: 8064)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !479, file: !480, line: 214, baseType: !91, size: 32, offset: 8096)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !479, file: !480, line: 215, baseType: !91, size: 32, offset: 8128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !479, file: !480, line: 216, baseType: !91, size: 32, offset: 8160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !479, file: !480, line: 219, baseType: !91, size: 32, offset: 8192)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !479, file: !480, line: 220, baseType: !91, size: 32, offset: 8224)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !479, file: !480, line: 221, baseType: !91, size: 32, offset: 8256)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !479, file: !480, line: 224, baseType: !639, size: 16, offset: 8288)
!639 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !479, file: !480, line: 224, baseType: !639, size: 16, offset: 8304)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !479, file: !480, line: 226, baseType: !141, size: 16, offset: 8320)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !479, file: !480, line: 228, baseType: !128, size: 8, offset: 8336)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !479, file: !480, line: 229, baseType: !128, size: 8, offset: 8344)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !479, file: !480, line: 231, baseType: !141, size: 16, offset: 8352)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !479, file: !480, line: 232, baseType: !128, size: 8, offset: 8368)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !479, file: !480, line: 233, baseType: !128, size: 8, offset: 8376)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !479, file: !480, line: 234, baseType: !91, size: 32, offset: 8384)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !479, file: !480, line: 235, baseType: !91, size: 32, offset: 8416)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !479, file: !480, line: 237, baseType: !167, size: 128, offset: 8448)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !479, file: !480, line: 238, baseType: !167, size: 128, offset: 8576)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !479, file: !480, line: 239, baseType: !167, size: 128, offset: 8704)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !479, file: !480, line: 240, baseType: !167, size: 128, offset: 8832)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !479, file: !480, line: 242, baseType: !91, size: 32, offset: 8960)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !479, file: !480, line: 244, baseType: !141, size: 16, offset: 8992)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !479, file: !480, line: 245, baseType: !639, size: 16, offset: 9008)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !479, file: !480, line: 246, baseType: !426, size: 128, offset: 9024)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !479, file: !480, line: 248, baseType: !92, size: 32, offset: 9152)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !479, file: !480, line: 249, baseType: !92, size: 32, offset: 9184)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !479, file: !480, line: 251, baseType: !660, size: 64, offset: 9216)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !480, line: 251, flags: DIFlagFwdDecl)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !479, file: !480, line: 253, baseType: !128, size: 8, offset: 9280)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !479, file: !480, line: 254, baseType: !128, size: 8, offset: 9288)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !479, file: !480, line: 255, baseType: !141, size: 16, offset: 9296)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !479, file: !480, line: 256, baseType: !344, size: 96, offset: 9312)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !479, file: !480, line: 258, baseType: !167, size: 128, offset: 9408)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !479, file: !480, line: 259, baseType: !167, size: 128, offset: 9536)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !479, file: !480, line: 260, baseType: !167, size: 128, offset: 9664)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !479, file: !480, line: 261, baseType: !167, size: 128, offset: 9792)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !479, file: !480, line: 263, baseType: !671, size: 64, offset: 9920)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !480, line: 52, flags: DIFlagFwdDecl)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !479, file: !480, line: 264, baseType: !674, size: 64, offset: 9984)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !480, line: 53, flags: DIFlagFwdDecl)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !479, file: !480, line: 265, baseType: !677, size: 64, offset: 10048)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !249, line: 46, flags: DIFlagFwdDecl)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !479, file: !480, line: 267, baseType: !128, size: 8, offset: 10112)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !479, file: !480, line: 268, baseType: !128, size: 8, offset: 10120)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !479, file: !480, line: 269, baseType: !141, size: 16, offset: 10128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !479, file: !480, line: 270, baseType: !91, size: 32, offset: 10144)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !479, file: !480, line: 272, baseType: !684, size: 64, offset: 10176)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !480, line: 54, flags: DIFlagFwdDecl)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !479, file: !480, line: 275, baseType: !687, size: 64, offset: 10240)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !480, line: 275, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !479, file: !480, line: 277, baseType: !690, size: 64, offset: 10304)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !692)
!692 = !{!693, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !744, !747, !749, !750, !752, !753, !754, !755, !761, !766, !767, !771, !772, !773, !774, !775, !787, !799, !813, !817, !821, !825, !834, !846, !850, !854, !858, !862, !866, !867, !868, !869, !870, !871, !875, !876, !877, !878, !882, !883, !884, !885, !886, !891, !892, !893, !894, !895, !899, !900, !901, !902, !903, !910, !921, !925, !931, !941, !947, !958, !965, !972, !976, !980, !984, !989, !990, !991, !998, !1004, !1005, !1006, !1011, !1012, !1021, !1037, !1041, !1049, !1053, !1057, !1061, !1069, !1079}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !691, file: !6, line: 180, baseType: !694, size: 1600)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !40, line: 73, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !40, line: 64, size: 1600, elements: !696)
!696 = !{!697, !712, !716, !717, !718, !719, !722}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !695, file: !40, line: 65, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !40, line: 53, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !40, line: 42, size: 832, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !700, file: !40, line: 43, baseType: !92, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !700, file: !40, line: 44, baseType: !92, size: 32, offset: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !700, file: !40, line: 45, baseType: !92, size: 32, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !700, file: !40, line: 46, baseType: !92, size: 32, offset: 96)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !700, file: !40, line: 47, baseType: !92, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !700, file: !40, line: 48, baseType: !92, size: 32, offset: 160)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !700, file: !40, line: 49, baseType: !92, size: 32, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !700, file: !40, line: 50, baseType: !92, size: 32, offset: 224)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !700, file: !40, line: 51, baseType: !157, size: 512, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !700, file: !40, line: 52, baseType: !90, size: 64, offset: 768)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !695, file: !40, line: 66, baseType: !713, size: 1312, offset: 64)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 1312, elements: !714)
!714 = !{!715}
!715 = !DISubrange(count: 41)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !695, file: !40, line: 69, baseType: !92, size: 32, offset: 1376)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !695, file: !40, line: 69, baseType: !92, size: 32, offset: 1408)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !695, file: !40, line: 70, baseType: !92, size: 32, offset: 1440)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !695, file: !40, line: 71, baseType: !720, size: 64, offset: 1472)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !40, line: 71, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !695, file: !40, line: 72, baseType: !723, size: 64, offset: 1536)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !40, line: 59, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !40, line: 57, size: 8192, elements: !726)
!726 = !{!727}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !725, file: !40, line: 58, baseType: !127, size: 8192)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !691, file: !6, line: 180, baseType: !694, size: 1600, offset: 1600)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !691, file: !6, line: 180, baseType: !694, size: 1600, offset: 3200)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !691, file: !6, line: 180, baseType: !694, size: 1600, offset: 4800)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !691, file: !6, line: 180, baseType: !694, size: 1600, offset: 6400)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !691, file: !6, line: 181, baseType: !92, size: 32, offset: 8000)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !691, file: !6, line: 181, baseType: !92, size: 32, offset: 8032)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !691, file: !6, line: 181, baseType: !92, size: 32, offset: 8064)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !691, file: !6, line: 181, baseType: !92, size: 32, offset: 8096)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !691, file: !6, line: 181, baseType: !92, size: 32, offset: 8128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !691, file: !6, line: 182, baseType: !92, size: 32, offset: 8160)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !691, file: !6, line: 183, baseType: !92, size: 32, offset: 8192)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !691, file: !6, line: 184, baseType: !740, size: 64, offset: 8256)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !741, line: 124, baseType: !742)
!741 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !741, line: 124, flags: DIFlagFwdDecl)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !691, file: !6, line: 185, baseType: !745, size: 64, offset: 8320)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !691, file: !6, line: 186, baseType: !748, size: 32, offset: 8384)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !691, file: !6, line: 187, baseType: !91, size: 32, offset: 8416)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !691, file: !6, line: 188, baseType: !751, size: 32, offset: 8448)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !691, file: !6, line: 189, baseType: !92, size: 32, offset: 8480)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !691, file: !6, line: 190, baseType: !583, size: 64, offset: 8512)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !691, file: !6, line: 193, baseType: !128, size: 8, offset: 8576)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !691, file: !6, line: 196, baseType: !756, size: 64, offset: 8640)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !759}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !691)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !691, file: !6, line: 199, baseType: !762, size: 64, offset: 8704)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !759, !765}
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !691, file: !6, line: 202, baseType: !756, size: 64, offset: 8768)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !691, file: !6, line: 207, baseType: !768, size: 64, offset: 8832)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!92, !759}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !691, file: !6, line: 208, baseType: !768, size: 64, offset: 8896)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !691, file: !6, line: 209, baseType: !768, size: 64, offset: 8960)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !691, file: !6, line: 210, baseType: !768, size: 64, offset: 9024)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !691, file: !6, line: 211, baseType: !768, size: 64, offset: 9088)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !691, file: !6, line: 218, baseType: !776, size: 64, offset: 9152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !759, !92, !779}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !84, line: 65, size: 160, elements: !781)
!781 = !{!782, !783, !785, !786}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !780, file: !84, line: 66, baseType: !344, size: 96)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !780, file: !84, line: 67, baseType: !784, size: 48, offset: 96)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 48, elements: !345)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !780, file: !84, line: 68, baseType: !128, size: 8, offset: 144)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !780, file: !84, line: 68, baseType: !128, size: 8, offset: 152)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !691, file: !6, line: 219, baseType: !788, size: 64, offset: 9216)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !759, !92, !791}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !84, line: 48, size: 96, elements: !793)
!793 = !{!794, !795, !796, !797, !798}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !792, file: !84, line: 49, baseType: !7, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !792, file: !84, line: 49, baseType: !7, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !792, file: !84, line: 50, baseType: !128, size: 8, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !792, file: !84, line: 50, baseType: !128, size: 8, offset: 72)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !792, file: !84, line: 51, baseType: !141, size: 16, offset: 80)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !691, file: !6, line: 220, baseType: !800, size: 64, offset: 9280)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{null, !759, !92, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !84, line: 42, size: 160, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811, !812}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !804, file: !84, line: 43, baseType: !7, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !804, file: !84, line: 43, baseType: !7, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !804, file: !84, line: 43, baseType: !7, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !804, file: !84, line: 43, baseType: !7, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !804, file: !84, line: 44, baseType: !141, size: 16, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !804, file: !84, line: 45, baseType: !128, size: 8, offset: 144)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !804, file: !84, line: 45, baseType: !128, size: 8, offset: 152)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !691, file: !6, line: 227, baseType: !814, size: 64, offset: 9344)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!779, !759}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !691, file: !6, line: 228, baseType: !818, size: 64, offset: 9408)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!791, !759}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !691, file: !6, line: 229, baseType: !822, size: 64, offset: 9472)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!803, !759}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !691, file: !6, line: 230, baseType: !826, size: 64, offset: 9536)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!829, !759}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !84, line: 88, size: 64, elements: !831)
!831 = !{!832, !833}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !830, file: !84, line: 89, baseType: !7, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !830, file: !84, line: 90, baseType: !7, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !691, file: !6, line: 231, baseType: !835, size: 64, offset: 9600)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!838, !759}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !84, line: 79, size: 96, elements: !840)
!840 = !{!841, !842, !843, !844, !845}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !839, file: !84, line: 81, baseType: !92, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !839, file: !84, line: 82, baseType: !92, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !839, file: !84, line: 83, baseType: !141, size: 16, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !839, file: !84, line: 84, baseType: !128, size: 8, offset: 80)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !839, file: !84, line: 84, baseType: !128, size: 8, offset: 88)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !691, file: !6, line: 236, baseType: !847, size: 64, offset: 9664)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !759, !779}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !691, file: !6, line: 237, baseType: !851, size: 64, offset: 9728)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{null, !759, !791}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !691, file: !6, line: 238, baseType: !855, size: 64, offset: 9792)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{null, !759, !803}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !691, file: !6, line: 239, baseType: !859, size: 64, offset: 9856)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !759, !829}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !691, file: !6, line: 240, baseType: !863, size: 64, offset: 9920)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !759, !838}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !691, file: !6, line: 245, baseType: !814, size: 64, offset: 9984)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !691, file: !6, line: 246, baseType: !818, size: 64, offset: 10048)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !691, file: !6, line: 247, baseType: !822, size: 64, offset: 10112)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !691, file: !6, line: 248, baseType: !826, size: 64, offset: 10176)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !691, file: !6, line: 249, baseType: !835, size: 64, offset: 10240)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !691, file: !6, line: 255, baseType: !872, size: 64, offset: 10304)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!90, !759, !92, !92}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !691, file: !6, line: 256, baseType: !872, size: 64, offset: 10368)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !691, file: !6, line: 257, baseType: !872, size: 64, offset: 10432)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !691, file: !6, line: 258, baseType: !872, size: 64, offset: 10496)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !691, file: !6, line: 264, baseType: !879, size: 64, offset: 10560)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!90, !759, !92}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !691, file: !6, line: 265, baseType: !879, size: 64, offset: 10624)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !691, file: !6, line: 266, baseType: !879, size: 64, offset: 10688)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !691, file: !6, line: 267, baseType: !879, size: 64, offset: 10752)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !691, file: !6, line: 268, baseType: !879, size: 64, offset: 10816)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !691, file: !6, line: 272, baseType: !887, size: 64, offset: 10880)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!890, !759}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !691, file: !6, line: 273, baseType: !887, size: 64, offset: 10944)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !691, file: !6, line: 274, baseType: !887, size: 64, offset: 11008)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !691, file: !6, line: 275, baseType: !887, size: 64, offset: 11072)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !691, file: !6, line: 276, baseType: !887, size: 64, offset: 11136)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !691, file: !6, line: 279, baseType: !896, size: 64, offset: 11200)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !759, !92, !890, !92}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !691, file: !6, line: 280, baseType: !896, size: 64, offset: 11264)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !691, file: !6, line: 281, baseType: !896, size: 64, offset: 11328)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !691, file: !6, line: 284, baseType: !768, size: 64, offset: 11392)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !691, file: !6, line: 285, baseType: !768, size: 64, offset: 11456)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !691, file: !6, line: 286, baseType: !904, size: 64, offset: 11520)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!907, !759}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !691, file: !6, line: 287, baseType: !911, size: 64, offset: 11584)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!914, !759}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !917)
!917 = !{!918, !920}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !916, file: !6, line: 118, baseType: !919, size: 128)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 128, elements: !427)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !916, file: !6, line: 119, baseType: !919, size: 128, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !691, file: !6, line: 288, baseType: !922, size: 64, offset: 11648)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!199, !759}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !691, file: !6, line: 289, baseType: !926, size: 64, offset: 11712)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !759, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !691, file: !6, line: 290, baseType: !932, size: 64, offset: 11776)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!935, !759}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !937, file: !6, line: 124, baseType: !141, size: 16)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !937, file: !6, line: 125, baseType: !128, size: 8, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !691, file: !6, line: 291, baseType: !942, size: 64, offset: 11840)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!945, !759}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !691, file: !6, line: 299, baseType: !948, size: 64, offset: 11904)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !759, !951, !90, !957}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !90, !92, !954, !954, !955}
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !691, file: !6, line: 309, baseType: !959, size: 64, offset: 11968)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !759, !962, !90}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !90, !92, !954, !954}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !691, file: !6, line: 317, baseType: !966, size: 64, offset: 12032)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !759, !969, !90, !957}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !90, !92, !92, !954, !954}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !691, file: !6, line: 327, baseType: !973, size: 64, offset: 12096)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !759, !962, !90, !957}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !691, file: !6, line: 337, baseType: !977, size: 64, offset: 12160)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !759, !201, !201}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !691, file: !6, line: 344, baseType: !981, size: 64, offset: 12224)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !759, !92, !201}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !691, file: !6, line: 347, baseType: !985, size: 64, offset: 12288)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !759, !988}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !691, file: !6, line: 350, baseType: !981, size: 64, offset: 12352)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !691, file: !6, line: 351, baseType: !981, size: 64, offset: 12416)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !691, file: !6, line: 355, baseType: !992, size: 64, offset: 12480)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!995, !478, !759}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !691, file: !6, line: 359, baseType: !999, size: 64, offset: 12544)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!1002, !478, !759}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !691, file: !6, line: 364, baseType: !756, size: 64, offset: 12608)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !691, file: !6, line: 367, baseType: !756, size: 64, offset: 12672)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !691, file: !6, line: 373, baseType: !1007, size: 64, offset: 12736)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !759, !1010, !1010}
!1010 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !691, file: !6, line: 376, baseType: !756, size: 64, offset: 12800)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !691, file: !6, line: 385, baseType: !1013, size: 64, offset: 12864)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !759, !1016, !1010, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!92, !92, !90}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !691, file: !6, line: 391, baseType: !1022, size: 64, offset: 12928)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !759, !1025, !1032, !90, !1036}
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!1029, !1030, !1031, !92}
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!92, !90, !92, !92}
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !691, file: !6, line: 400, baseType: !1038, size: 64, offset: 12992)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !759, !1017}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !691, file: !6, line: 415, baseType: !1042, size: 64, offset: 13056)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{null, !759, !1045, !1017, !1032, !90, !1036}
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!1029, !90, !92}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !691, file: !6, line: 425, baseType: !1050, size: 64, offset: 13120)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !759, !1045, !1032, !90, !1036}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !691, file: !6, line: 435, baseType: !1054, size: 64, offset: 13184)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !759, !1017, !1045, !90}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !691, file: !6, line: 444, baseType: !1058, size: 64, offset: 13248)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !759, !1045, !90}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !691, file: !6, line: 455, baseType: !1062, size: 64, offset: 13312)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{null, !759, !1045, !1065, !90}
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !90, !92, !91}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !691, file: !6, line: 464, baseType: !1070, size: 64, offset: 13376)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !759, !1073, !1076, !90}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !90, !92, !90}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!1010, !90, !92}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !691, file: !6, line: 470, baseType: !756, size: 64, offset: 13440)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !479, file: !480, line: 277, baseType: !690, size: 64, offset: 10368)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !479, file: !480, line: 278, baseType: !1082, size: 64, offset: 10432)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1083, line: 27, baseType: !1084)
!1083 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1085, line: 45, baseType: !1086)
!1085 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1086 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !479, file: !480, line: 279, baseType: !1082, size: 64, offset: 10496)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !479, file: !480, line: 280, baseType: !7, size: 32, offset: 10560)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !479, file: !480, line: 281, baseType: !7, size: 32, offset: 10592)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !479, file: !480, line: 283, baseType: !167, size: 128, offset: 10624)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !479, file: !480, line: 284, baseType: !167, size: 128, offset: 10752)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !479, file: !480, line: 285, baseType: !1093, size: 64, offset: 10880)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !479, file: !480, line: 287, baseType: !1095, size: 64, offset: 10944)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !480, line: 59, flags: DIFlagFwdDecl)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !479, file: !480, line: 288, baseType: !1098, size: 64, offset: 11008)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !480, line: 288, flags: DIFlagFwdDecl)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !479, file: !480, line: 290, baseType: !1101, size: 64, offset: 11072)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 64, elements: !1102)
!1102 = !{!101}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !479, file: !480, line: 291, baseType: !1104, size: 64, offset: 11136)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !105, line: 65, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !105, line: 50, size: 320, elements: !1107)
!1107 = !{!1108, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1106, file: !105, line: 51, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1111, line: 1216, size: 39680, elements: !1112)
!1111 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1112 = !{!1113, !1114, !1115, !1116, !1724, !1725, !1726, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1753, !1979, !1982, !2265, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2287, !2288, !2289, !2290, !2291, !2299, !2365, !2372, !2373, !2380, !2383, !2384, !2385, !2386, !2387, !2392}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1110, file: !1111, line: 1217, baseType: !108, size: 960)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1110, file: !1111, line: 1218, baseType: !243, size: 64, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1110, file: !1111, line: 1220, baseType: !478, size: 64, offset: 1024)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1110, file: !1111, line: 1221, baseType: !1117, size: 64, offset: 1088)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1119, line: 52, size: 4224, elements: !1120)
!1119 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1196, !1209}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1118, file: !1119, line: 53, baseType: !108, size: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1118, file: !1119, line: 54, baseType: !243, size: 64, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1118, file: !1119, line: 56, baseType: !141, size: 16, offset: 1024)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1118, file: !1119, line: 56, baseType: !141, size: 16, offset: 1040)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1118, file: !1119, line: 57, baseType: !141, size: 16, offset: 1056)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !1118, file: !1119, line: 57, baseType: !141, size: 16, offset: 1072)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !1118, file: !1119, line: 59, baseType: !91, size: 32, offset: 1088)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !1118, file: !1119, line: 59, baseType: !91, size: 32, offset: 1120)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !1118, file: !1119, line: 59, baseType: !91, size: 32, offset: 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !1118, file: !1119, line: 60, baseType: !91, size: 32, offset: 1184)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !1118, file: !1119, line: 60, baseType: !91, size: 32, offset: 1216)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !1118, file: !1119, line: 60, baseType: !91, size: 32, offset: 1248)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1118, file: !1119, line: 61, baseType: !91, size: 32, offset: 1280)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1118, file: !1119, line: 61, baseType: !91, size: 32, offset: 1312)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1118, file: !1119, line: 61, baseType: !91, size: 32, offset: 1344)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1118, file: !1119, line: 68, baseType: !91, size: 32, offset: 1376)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1118, file: !1119, line: 68, baseType: !91, size: 32, offset: 1408)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1118, file: !1119, line: 68, baseType: !91, size: 32, offset: 1440)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !1118, file: !1119, line: 69, baseType: !91, size: 32, offset: 1472)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !1118, file: !1119, line: 69, baseType: !91, size: 32, offset: 1504)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1118, file: !1119, line: 74, baseType: !91, size: 32, offset: 1536)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1118, file: !1119, line: 79, baseType: !91, size: 32, offset: 1568)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !1118, file: !1119, line: 81, baseType: !141, size: 16, offset: 1600)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1118, file: !1119, line: 91, baseType: !141, size: 16, offset: 1616)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1118, file: !1119, line: 92, baseType: !141, size: 16, offset: 1632)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1118, file: !1119, line: 93, baseType: !141, size: 16, offset: 1648)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1118, file: !1119, line: 94, baseType: !141, size: 16, offset: 1664)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1118, file: !1119, line: 94, baseType: !141, size: 16, offset: 1680)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1118, file: !1119, line: 94, baseType: !141, size: 16, offset: 1696)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1118, file: !1119, line: 94, baseType: !141, size: 16, offset: 1712)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !1118, file: !1119, line: 96, baseType: !91, size: 32, offset: 1728)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !1118, file: !1119, line: 96, baseType: !91, size: 32, offset: 1760)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !1118, file: !1119, line: 96, baseType: !91, size: 32, offset: 1792)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !1118, file: !1119, line: 96, baseType: !91, size: 32, offset: 1824)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !1118, file: !1119, line: 98, baseType: !91, size: 32, offset: 1856)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !1118, file: !1119, line: 98, baseType: !91, size: 32, offset: 1888)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !1118, file: !1119, line: 98, baseType: !91, size: 32, offset: 1920)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !1118, file: !1119, line: 98, baseType: !91, size: 32, offset: 1952)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !1118, file: !1119, line: 99, baseType: !91, size: 32, offset: 1984)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !1118, file: !1119, line: 99, baseType: !91, size: 32, offset: 2016)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !1118, file: !1119, line: 100, baseType: !91, size: 32, offset: 2048)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !1118, file: !1119, line: 100, baseType: !91, size: 32, offset: 2080)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !1118, file: !1119, line: 103, baseType: !141, size: 16, offset: 2112)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !1118, file: !1119, line: 103, baseType: !141, size: 16, offset: 2128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !1118, file: !1119, line: 103, baseType: !141, size: 16, offset: 2144)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !1118, file: !1119, line: 103, baseType: !141, size: 16, offset: 2160)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !1118, file: !1119, line: 106, baseType: !91, size: 32, offset: 2176)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !1118, file: !1119, line: 106, baseType: !91, size: 32, offset: 2208)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !1118, file: !1119, line: 106, baseType: !91, size: 32, offset: 2240)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !1118, file: !1119, line: 106, baseType: !91, size: 32, offset: 2272)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !1118, file: !1119, line: 107, baseType: !141, size: 16, offset: 2304)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !1118, file: !1119, line: 107, baseType: !141, size: 16, offset: 2320)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !1118, file: !1119, line: 107, baseType: !141, size: 16, offset: 2336)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !1118, file: !1119, line: 107, baseType: !141, size: 16, offset: 2352)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !1118, file: !1119, line: 108, baseType: !91, size: 32, offset: 2368)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !1118, file: !1119, line: 108, baseType: !91, size: 32, offset: 2400)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !1118, file: !1119, line: 109, baseType: !91, size: 32, offset: 2432)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !1118, file: !1119, line: 109, baseType: !91, size: 32, offset: 2464)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !1118, file: !1119, line: 110, baseType: !91, size: 32, offset: 2496)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !1118, file: !1119, line: 110, baseType: !91, size: 32, offset: 2528)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !1118, file: !1119, line: 110, baseType: !91, size: 32, offset: 2560)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !1118, file: !1119, line: 111, baseType: !141, size: 16, offset: 2592)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !1118, file: !1119, line: 111, baseType: !141, size: 16, offset: 2608)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !1118, file: !1119, line: 112, baseType: !141, size: 16, offset: 2624)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !1118, file: !1119, line: 112, baseType: !141, size: 16, offset: 2640)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !1118, file: !1119, line: 112, baseType: !141, size: 16, offset: 2656)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1118, file: !1119, line: 115, baseType: !141, size: 16, offset: 2672)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !1118, file: !1119, line: 118, baseType: !201, size: 64, offset: 2688)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !1118, file: !1119, line: 118, baseType: !201, size: 64, offset: 2752)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1118, file: !1119, line: 121, baseType: !499, size: 64, offset: 2816)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1118, file: !1119, line: 122, baseType: !469, size: 1152, offset: 2880)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1118, file: !1119, line: 123, baseType: !141, size: 16, offset: 4032)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1118, file: !1119, line: 123, baseType: !141, size: 16, offset: 4048)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1118, file: !1119, line: 123, baseType: !1195, size: 32, offset: 4064)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 32, elements: !1102)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1118, file: !1119, line: 126, baseType: !1197, size: 64, offset: 4096)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !109, line: 159, size: 448, elements: !1199)
!1199 = !{!1200, !1202, !1203, !1204, !1205, !1207}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1198, file: !109, line: 161, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1102)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1198, file: !109, line: 162, baseType: !1201, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1198, file: !109, line: 163, baseType: !1195, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1198, file: !109, line: 164, baseType: !1195, size: 32, offset: 160)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1198, file: !109, line: 165, baseType: !1206, size: 128, offset: 192)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, size: 128, elements: !1102)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1198, file: !109, line: 166, baseType: !1208, size: 128, offset: 320)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 128, elements: !1102)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1118, file: !1119, line: 129, baseType: !1210, size: 64, offset: 4160)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1212, line: 328, size: 3456, elements: !1213)
!1212 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1213 = !{!1214, !1215, !1216, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1702, !1703, !1704, !1707, !1711, !1715, !1719, !1720, !1721, !1722, !1723}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1211, file: !1212, line: 329, baseType: !108, size: 960)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1211, file: !1212, line: 330, baseType: !243, size: 64, offset: 960)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1211, file: !1212, line: 332, baseType: !1217, size: 64, offset: 1024)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1219, line: 283, size: 4096, elements: !1220)
!1219 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1220 = !{!1221, !1222, !1223, !1224, !1228, !1229, !1233, !1642, !1650, !1654, !1660, !1664, !1665, !1666, !1667, !1671, !1672}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1218, file: !1219, line: 284, baseType: !92, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1218, file: !1219, line: 285, baseType: !157, size: 512, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1218, file: !1219, line: 287, baseType: !157, size: 512, offset: 544)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1218, file: !1219, line: 288, baseType: !1225, size: 2048, offset: 1056)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 2048, elements: !1226)
!1226 = !{!1227}
!1227 = !DISubrange(count: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1218, file: !1219, line: 289, baseType: !92, size: 32, offset: 3104)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !1218, file: !1219, line: 292, baseType: !1230, size: 64, offset: 3136)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !1210}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !1218, file: !1219, line: 293, baseType: !1234, size: 64, offset: 3200)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{null, !1210, !1237}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !1212, line: 167, size: 3712, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1634, !1635, !1636, !1637, !1638, !1639}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1238, file: !1212, line: 168, baseType: !1237, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1238, file: !1212, line: 168, baseType: !1237, size: 64, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !1238, file: !1212, line: 168, baseType: !1237, size: 64, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1238, file: !1212, line: 170, baseType: !146, size: 64, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1238, file: !1212, line: 172, baseType: !1245, size: 64, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !1219, line: 144, size: 6016, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1424, !1425, !1426, !1440, !1444, !1448, !1449, !1518, !1522, !1526, !1527, !1528, !1529, !1533, !1534, !1538, !1542, !1546, !1550, !1554, !1558, !1562, !1563, !1570, !1572, !1581, !1590}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !1219, line: 145, baseType: !90, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1246, file: !1219, line: 145, baseType: !90, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !1246, file: !1219, line: 146, baseType: !141, size: 16, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1246, file: !1219, line: 148, baseType: !157, size: 512, offset: 144)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1246, file: !1219, line: 149, baseType: !92, size: 32, offset: 672)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !1246, file: !1219, line: 151, baseType: !157, size: 512, offset: 704)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !1246, file: !1219, line: 152, baseType: !1225, size: 2048, offset: 1216)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !1246, file: !1219, line: 153, baseType: !92, size: 32, offset: 3264)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1246, file: !1219, line: 155, baseType: !91, size: 32, offset: 3296)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !1246, file: !1219, line: 155, baseType: !91, size: 32, offset: 3328)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !1246, file: !1219, line: 155, baseType: !91, size: 32, offset: 3360)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1246, file: !1219, line: 156, baseType: !91, size: 32, offset: 3392)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !1246, file: !1219, line: 156, baseType: !91, size: 32, offset: 3424)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !1246, file: !1219, line: 156, baseType: !91, size: 32, offset: 3456)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !1246, file: !1219, line: 157, baseType: !141, size: 16, offset: 3488)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1246, file: !1219, line: 157, baseType: !141, size: 16, offset: 3504)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !1246, file: !1219, line: 157, baseType: !141, size: 16, offset: 3520)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1246, file: !1219, line: 160, baseType: !1266, size: 64, offset: 3584)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !1219, line: 109, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !1219, line: 98, size: 1408, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1423}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1268, file: !1219, line: 99, baseType: !92, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1268, file: !1219, line: 99, baseType: !92, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1268, file: !1219, line: 100, baseType: !157, size: 512, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !1268, file: !1219, line: 101, baseType: !91, size: 32, offset: 576)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1268, file: !1219, line: 101, baseType: !91, size: 32, offset: 608)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !1268, file: !1219, line: 101, baseType: !91, size: 32, offset: 640)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !1268, file: !1219, line: 101, baseType: !91, size: 32, offset: 672)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1268, file: !1219, line: 102, baseType: !91, size: 32, offset: 704)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1268, file: !1219, line: 102, baseType: !91, size: 32, offset: 736)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1268, file: !1219, line: 103, baseType: !92, size: 32, offset: 768)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1268, file: !1219, line: 104, baseType: !92, size: 32, offset: 800)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1268, file: !1219, line: 107, baseType: !1282, size: 64, offset: 832)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !1212, line: 87, size: 2816, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1408}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1283, file: !1212, line: 88, baseType: !1282, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1283, file: !1212, line: 88, baseType: !1282, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !1283, file: !1212, line: 88, baseType: !1282, size: 64, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1283, file: !1212, line: 90, baseType: !146, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1283, file: !1212, line: 92, baseType: !157, size: 512, offset: 256)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1283, file: !1212, line: 94, baseType: !157, size: 512, offset: 768)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1283, file: !1212, line: 99, baseType: !90, size: 64, offset: 1280)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1283, file: !1212, line: 101, baseType: !141, size: 16, offset: 1344)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1283, file: !1212, line: 101, baseType: !141, size: 16, offset: 1360)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1283, file: !1212, line: 102, baseType: !141, size: 16, offset: 1376)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !1283, file: !1212, line: 103, baseType: !141, size: 16, offset: 1392)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1283, file: !1212, line: 104, baseType: !1297, size: 64, offset: 1408)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !1219, line: 114, size: 1600, elements: !1299)
!1299 = !{!1300, !1301, !1324, !1328, !1332, !1336, !1340, !1344, !1345, !1349, !1378, !1379, !1380}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1298, file: !1219, line: 115, baseType: !157, size: 512)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1298, file: !1219, line: 117, baseType: !1302, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{null, !1305, !1308, !1310, !1310, !1322}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1307, line: 42, flags: DIFlagFwdDecl)
!1307 = !DIFile(filename: "blender/source/blender/imbuf/IMB_colormanagement.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1219, line: 73, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1312, line: 55, size: 192, elements: !1313)
!1312 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1313 = !{!1314, !1318, !1321}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1311, file: !1312, line: 58, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1311, file: !1312, line: 56, size: 64, elements: !1316)
!1316 = !{!1317}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1315, file: !1312, line: 57, baseType: !90, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1311, file: !1312, line: 60, baseType: !1319, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1212, line: 335, flags: DIFlagFwdDecl)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1311, file: !1312, line: 61, baseType: !90, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !1298, file: !1219, line: 118, baseType: !1325, size: 64, offset: 576)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{null, !1305, !1310, !1310, !201}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !1298, file: !1219, line: 120, baseType: !1329, size: 64, offset: 640)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !1305, !1308, !1310}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !1298, file: !1219, line: 121, baseType: !1333, size: 64, offset: 704)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !1305, !1310, !201}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !1298, file: !1219, line: 122, baseType: !1337, size: 64, offset: 768)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !1210, !1282, !1319}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !1298, file: !1219, line: 123, baseType: !1341, size: 64, offset: 832)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !1210, !1282, !1237, !1282, !1322}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !1298, file: !1219, line: 124, baseType: !1341, size: 64, offset: 896)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !1298, file: !1219, line: 125, baseType: !1346, size: 64, offset: 960)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1210, !1282, !1237, !1282}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !1298, file: !1219, line: 128, baseType: !1350, size: 256, offset: 1024)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1312, line: 436, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1312, line: 430, size: 256, elements: !1352)
!1352 = !{!1353, !1354, !1357, !1373}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1351, file: !1312, line: 431, baseType: !90, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1351, file: !1312, line: 432, baseType: !1355, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1312, line: 417, baseType: !1320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1351, file: !1312, line: 433, baseType: !1358, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1312, line: 408, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!92, !1305, !1310, !1362, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1312, line: 38, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1312, line: 348, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1312, line: 337, size: 256, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1366, file: !1312, line: 339, baseType: !90, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1366, file: !1312, line: 342, baseType: !1362, size: 64, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1366, file: !1312, line: 345, baseType: !92, size: 32, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1366, file: !1312, line: 347, baseType: !92, size: 32, offset: 160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1366, file: !1312, line: 347, baseType: !92, size: 32, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1351, file: !1312, line: 434, baseType: !1374, size: 64, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1312, line: 409, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{null, !90}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !1298, file: !1219, line: 129, baseType: !1350, size: 256, offset: 1280)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1298, file: !1219, line: 132, baseType: !92, size: 32, offset: 1536)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1298, file: !1219, line: 132, baseType: !92, size: 32, offset: 1568)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1283, file: !1212, line: 105, baseType: !157, size: 512, offset: 1472)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1283, file: !1212, line: 107, baseType: !91, size: 32, offset: 1984)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1283, file: !1212, line: 107, baseType: !91, size: 32, offset: 2016)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !1283, file: !1212, line: 109, baseType: !90, size: 64, offset: 2048)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1283, file: !1212, line: 112, baseType: !141, size: 16, offset: 2112)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !1283, file: !1212, line: 114, baseType: !141, size: 16, offset: 2128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1283, file: !1212, line: 115, baseType: !92, size: 32, offset: 2144)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1283, file: !1212, line: 117, baseType: !90, size: 64, offset: 2176)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !1283, file: !1212, line: 122, baseType: !92, size: 32, offset: 2240)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !1283, file: !1212, line: 124, baseType: !92, size: 32, offset: 2272)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !1283, file: !1212, line: 126, baseType: !1282, size: 64, offset: 2304)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1283, file: !1212, line: 128, baseType: !1393, size: 64, offset: 2368)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !1212, line: 298, size: 448, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1401, !1402, !1405, !1406, !1407}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1394, file: !1212, line: 299, baseType: !1393, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1394, file: !1212, line: 299, baseType: !1393, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1394, file: !1212, line: 301, baseType: !1399, size: 64, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !1212, line: 218, baseType: !1238)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1394, file: !1212, line: 301, baseType: !1399, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1394, file: !1212, line: 302, baseType: !1403, size: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !1212, line: 132, baseType: !1283)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1394, file: !1212, line: 302, baseType: !1403, size: 64, offset: 320)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1394, file: !1212, line: 304, baseType: !92, size: 32, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1394, file: !1212, line: 305, baseType: !92, size: 32, offset: 416)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1283, file: !1212, line: 131, baseType: !1409, size: 384, offset: 2432)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !1212, line: 73, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !1212, line: 62, size: 384, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1410, file: !1212, line: 63, baseType: !426, size: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1410, file: !1212, line: 64, baseType: !91, size: 32, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1410, file: !1212, line: 64, baseType: !91, size: 32, offset: 160)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1410, file: !1212, line: 65, baseType: !90, size: 64, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1410, file: !1212, line: 66, baseType: !141, size: 16, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1410, file: !1212, line: 67, baseType: !141, size: 16, offset: 272)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1410, file: !1212, line: 68, baseType: !141, size: 16, offset: 288)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1410, file: !1212, line: 69, baseType: !141, size: 16, offset: 304)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1410, file: !1212, line: 70, baseType: !141, size: 16, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1410, file: !1212, line: 71, baseType: !141, size: 16, offset: 336)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1410, file: !1212, line: 72, baseType: !1195, size: 32, offset: 352)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1268, file: !1219, line: 108, baseType: !157, size: 512, offset: 896)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1246, file: !1219, line: 160, baseType: !1266, size: 64, offset: 3648)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !1246, file: !1219, line: 162, baseType: !157, size: 512, offset: 3712)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !1246, file: !1219, line: 165, baseType: !1427, size: 64, offset: 4224)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{null, !1430, !1432, !1434, !1210, !1237, !1436}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1219, line: 81, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !1212, line: 43, flags: DIFlagFwdDecl)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1212, line: 274, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1212, line: 271, size: 32, elements: !1438)
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1437, file: !1212, line: 273, baseType: !7, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !1246, file: !1219, line: 168, baseType: !1441, size: 64, offset: 4288)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1430, !1210, !1237}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !1246, file: !1219, line: 171, baseType: !1445, size: 64, offset: 4352)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{null, !1308, !1305, !1310}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !1246, file: !1219, line: 173, baseType: !1445, size: 64, offset: 4416)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !1246, file: !1219, line: 176, baseType: !1450, size: 64, offset: 4480)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{null, !1434, !1453, !1237, !92, !92}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1455, line: 70, size: 19840, elements: !1456)
!1455 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1456 = !{!1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1482, !1483, !1484, !1485, !1486, !1489, !1490, !1491, !1492, !1493, !1496, !1497, !1499, !1500, !1501, !1504, !1505, !1506, !1509, !1510, !1511}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1454, file: !1455, line: 71, baseType: !1453, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1454, file: !1455, line: 71, baseType: !1453, size: 64, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1454, file: !1455, line: 74, baseType: !92, size: 32, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1454, file: !1455, line: 74, baseType: !92, size: 32, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1454, file: !1455, line: 79, baseType: !1010, size: 8, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1454, file: !1455, line: 80, baseType: !92, size: 32, offset: 224)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1454, file: !1455, line: 83, baseType: !92, size: 32, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1454, file: !1455, line: 84, baseType: !92, size: 32, offset: 288)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1454, file: !1455, line: 87, baseType: !946, size: 64, offset: 320)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1454, file: !1455, line: 88, baseType: !201, size: 64, offset: 384)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1454, file: !1455, line: 93, baseType: !1468, size: 128, offset: 448)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1469, size: 128, elements: !1102)
!1469 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1454, file: !1455, line: 96, baseType: !92, size: 32, offset: 576)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1454, file: !1455, line: 96, baseType: !92, size: 32, offset: 608)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1454, file: !1455, line: 97, baseType: !92, size: 32, offset: 640)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1454, file: !1455, line: 97, baseType: !92, size: 32, offset: 672)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1454, file: !1455, line: 98, baseType: !945, size: 64, offset: 704)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1454, file: !1455, line: 101, baseType: !199, size: 64, offset: 768)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1454, file: !1455, line: 102, baseType: !201, size: 64, offset: 832)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1454, file: !1455, line: 105, baseType: !91, size: 32, offset: 896)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1454, file: !1455, line: 108, baseType: !1479, size: 1280, offset: 960)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 1280, elements: !1480)
!1480 = !{!1481}
!1481 = !DISubrange(count: 20)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1454, file: !1455, line: 109, baseType: !92, size: 32, offset: 2240)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1454, file: !1455, line: 109, baseType: !92, size: 32, offset: 2272)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1454, file: !1455, line: 112, baseType: !92, size: 32, offset: 2304)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1454, file: !1455, line: 113, baseType: !92, size: 32, offset: 2336)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1454, file: !1455, line: 114, baseType: !1487, size: 64, offset: 2368)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1455, line: 50, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1454, file: !1455, line: 115, baseType: !90, size: 64, offset: 2432)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1454, file: !1455, line: 118, baseType: !92, size: 32, offset: 2496)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1454, file: !1455, line: 119, baseType: !127, size: 8192, offset: 2528)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1454, file: !1455, line: 120, baseType: !127, size: 8192, offset: 10720)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1454, file: !1455, line: 123, baseType: !1494, size: 64, offset: 18944)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1455, line: 123, flags: DIFlagFwdDecl)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1454, file: !1455, line: 124, baseType: !92, size: 32, offset: 19008)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1454, file: !1455, line: 127, baseType: !1498, size: 64, offset: 19072)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1454, file: !1455, line: 128, baseType: !7, size: 32, offset: 19136)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1454, file: !1455, line: 129, baseType: !7, size: 32, offset: 19168)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1454, file: !1455, line: 132, baseType: !1502, size: 64, offset: 19200)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1111, line: 63, flags: DIFlagFwdDecl)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1454, file: !1455, line: 133, baseType: !1502, size: 64, offset: 19264)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1454, file: !1455, line: 134, baseType: !946, size: 64, offset: 19328)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1454, file: !1455, line: 135, baseType: !1507, size: 64, offset: 19392)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1455, line: 135, flags: DIFlagFwdDecl)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1454, file: !1455, line: 136, baseType: !92, size: 32, offset: 19456)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1454, file: !1455, line: 137, baseType: !204, size: 128, offset: 19488)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1454, file: !1455, line: 140, baseType: !1512, size: 192, offset: 19648)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1455, line: 55, size: 192, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1512, file: !1455, line: 56, baseType: !7, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1512, file: !1455, line: 57, baseType: !7, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1512, file: !1455, line: 58, baseType: !1498, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1512, file: !1455, line: 59, baseType: !7, size: 32, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !1246, file: !1219, line: 179, baseType: !1519, size: 64, offset: 4544)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{null, !1210, !1237, !585, !92}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !1246, file: !1219, line: 181, baseType: !1523, size: 64, offset: 4608)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!92, !1237, !92, !92}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !1246, file: !1219, line: 183, baseType: !1523, size: 64, offset: 4672)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !1246, file: !1219, line: 185, baseType: !1523, size: 64, offset: 4736)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !1246, file: !1219, line: 188, baseType: !1234, size: 64, offset: 4800)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !1246, file: !1219, line: 190, baseType: !1530, size: 64, offset: 4864)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{null, !1210, !1237, !115}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !1246, file: !1219, line: 193, baseType: !1234, size: 64, offset: 4928)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !1246, file: !1219, line: 195, baseType: !1535, size: 64, offset: 4992)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !1237}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !1246, file: !1219, line: 197, baseType: !1539, size: 64, offset: 5056)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1210, !1237, !1237}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !1246, file: !1219, line: 200, baseType: !1543, size: 64, offset: 5120)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{null, !1430, !1310}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !1246, file: !1219, line: 201, baseType: !1547, size: 64, offset: 5184)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1310}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !1246, file: !1219, line: 202, baseType: !1551, size: 64, offset: 5248)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1310, !1237}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1246, file: !1219, line: 205, baseType: !1555, size: 64, offset: 5312)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!92, !1245, !1210}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !1246, file: !1219, line: 207, baseType: !1559, size: 64, offset: 5376)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!92, !1237, !1210}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !1246, file: !1219, line: 210, baseType: !1234, size: 64, offset: 5440)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !1246, file: !1219, line: 213, baseType: !1564, size: 64, offset: 5504)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !1219, line: 135, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!90, !1568, !1237, !1436}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !1219, line: 62, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !1246, file: !1219, line: 214, baseType: !1571, size: 64, offset: 5568)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !1219, line: 136, baseType: !1375)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !1246, file: !1219, line: 215, baseType: !1573, size: 64, offset: 5632)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !1219, line: 137, baseType: !1574)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{null, !90, !92, !1237, !1577, !1579, !1579}
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !1219, line: 63, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !1246, file: !1219, line: 217, baseType: !1582, size: 64, offset: 5696)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !1219, line: 138, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!92, !1586, !1237, !1577, !1588, !1588}
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !1219, line: 64, flags: DIFlagFwdDecl)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !1219, line: 66, flags: DIFlagFwdDecl)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1246, file: !1219, line: 220, baseType: !1350, size: 256, offset: 5760)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1238, file: !1212, line: 173, baseType: !157, size: 512, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1238, file: !1212, line: 175, baseType: !157, size: 512, offset: 832)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1238, file: !1212, line: 176, baseType: !92, size: 32, offset: 1344)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1238, file: !1212, line: 177, baseType: !141, size: 16, offset: 1376)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1238, file: !1212, line: 177, baseType: !141, size: 16, offset: 1392)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1238, file: !1212, line: 178, baseType: !141, size: 16, offset: 1408)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1238, file: !1212, line: 178, baseType: !141, size: 16, offset: 1424)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !1238, file: !1212, line: 179, baseType: !141, size: 16, offset: 1440)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !1238, file: !1212, line: 179, baseType: !141, size: 16, offset: 1456)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1238, file: !1212, line: 180, baseType: !141, size: 16, offset: 1472)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1238, file: !1212, line: 181, baseType: !141, size: 16, offset: 1488)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1238, file: !1212, line: 182, baseType: !344, size: 96, offset: 1504)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1238, file: !1212, line: 184, baseType: !167, size: 128, offset: 1600)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1238, file: !1212, line: 184, baseType: !167, size: 128, offset: 1728)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1238, file: !1212, line: 185, baseType: !1237, size: 64, offset: 1856)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1238, file: !1212, line: 186, baseType: !115, size: 64, offset: 1920)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !1238, file: !1212, line: 187, baseType: !90, size: 64, offset: 1984)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !1238, file: !1212, line: 188, baseType: !1237, size: 64, offset: 2048)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !1238, file: !1212, line: 189, baseType: !167, size: 128, offset: 2112)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !1238, file: !1212, line: 191, baseType: !91, size: 32, offset: 2240)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !1238, file: !1212, line: 191, baseType: !91, size: 32, offset: 2272)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1238, file: !1212, line: 192, baseType: !91, size: 32, offset: 2304)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1238, file: !1212, line: 192, baseType: !91, size: 32, offset: 2336)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !1238, file: !1212, line: 193, baseType: !91, size: 32, offset: 2368)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !1238, file: !1212, line: 194, baseType: !91, size: 32, offset: 2400)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !1238, file: !1212, line: 194, baseType: !91, size: 32, offset: 2432)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1238, file: !1212, line: 196, baseType: !92, size: 32, offset: 2464)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1238, file: !1212, line: 198, baseType: !157, size: 512, offset: 2496)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !1238, file: !1212, line: 199, baseType: !141, size: 16, offset: 3008)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !1238, file: !1212, line: 199, baseType: !141, size: 16, offset: 3024)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !1238, file: !1212, line: 200, baseType: !91, size: 32, offset: 3040)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !1238, file: !1212, line: 200, baseType: !91, size: 32, offset: 3072)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !1238, file: !1212, line: 202, baseType: !141, size: 16, offset: 3104)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1238, file: !1212, line: 202, baseType: !141, size: 16, offset: 3120)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !1238, file: !1212, line: 203, baseType: !90, size: 64, offset: 3136)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !1238, file: !1212, line: 204, baseType: !1627, size: 128, offset: 3200)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !205, line: 95, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !205, line: 92, size: 128, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1628, file: !205, line: 93, baseType: !91, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1628, file: !205, line: 93, baseType: !91, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1628, file: !205, line: 94, baseType: !91, size: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1628, file: !205, line: 94, baseType: !91, size: 32, offset: 96)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !1238, file: !1212, line: 205, baseType: !1627, size: 128, offset: 3328)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !1238, file: !1212, line: 206, baseType: !1627, size: 128, offset: 3456)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !1238, file: !1212, line: 215, baseType: !141, size: 16, offset: 3584)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !1238, file: !1212, line: 215, baseType: !141, size: 16, offset: 3600)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1238, file: !1212, line: 216, baseType: !92, size: 32, offset: 3616)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1238, file: !1212, line: 217, baseType: !1640, size: 64, offset: 3648)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !1212, line: 51, flags: DIFlagFwdDecl)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !1218, file: !1219, line: 294, baseType: !1643, size: 64, offset: 3264)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{null, !1109, !90, !1646}
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !1219, line: 282, baseType: !1647)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{null, !90, !92, !1322}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1218, file: !1219, line: 296, baseType: !1651, size: 64, offset: 3328)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!92, !1430, !1217}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !1218, file: !1219, line: 298, baseType: !1655, size: 64, offset: 3392)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !1430, !1217, !1658, !1659, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !1218, file: !1219, line: 302, baseType: !1661, size: 64, offset: 3456)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1210, !1210}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !1218, file: !1219, line: 303, baseType: !1661, size: 64, offset: 3520)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !1218, file: !1219, line: 304, baseType: !1661, size: 64, offset: 3584)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1218, file: !1219, line: 307, baseType: !1230, size: 64, offset: 3648)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !1218, file: !1219, line: 309, baseType: !1668, size: 64, offset: 3712)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!92, !1210, !1393}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !1218, file: !1219, line: 311, baseType: !1234, size: 64, offset: 3776)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1218, file: !1219, line: 314, baseType: !1350, size: 256, offset: 3840)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1211, file: !1212, line: 333, baseType: !157, size: 512, offset: 1088)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1211, file: !1212, line: 335, baseType: !1319, size: 64, offset: 1600)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1211, file: !1212, line: 337, baseType: !557, size: 64, offset: 1664)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1211, file: !1212, line: 338, baseType: !1101, size: 64, offset: 1728)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1211, file: !1212, line: 340, baseType: !167, size: 128, offset: 1792)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1211, file: !1212, line: 340, baseType: !167, size: 128, offset: 1920)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1211, file: !1212, line: 342, baseType: !92, size: 32, offset: 2048)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1211, file: !1212, line: 342, baseType: !92, size: 32, offset: 2080)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1211, file: !1212, line: 343, baseType: !92, size: 32, offset: 2112)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1211, file: !1212, line: 345, baseType: !92, size: 32, offset: 2144)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1211, file: !1212, line: 346, baseType: !92, size: 32, offset: 2176)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1211, file: !1212, line: 347, baseType: !141, size: 16, offset: 2208)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1211, file: !1212, line: 348, baseType: !141, size: 16, offset: 2224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1211, file: !1212, line: 349, baseType: !92, size: 32, offset: 2240)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1211, file: !1212, line: 351, baseType: !92, size: 32, offset: 2272)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1211, file: !1212, line: 353, baseType: !141, size: 16, offset: 2304)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1211, file: !1212, line: 354, baseType: !141, size: 16, offset: 2320)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1211, file: !1212, line: 355, baseType: !92, size: 32, offset: 2336)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1211, file: !1212, line: 357, baseType: !1627, size: 128, offset: 2368)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1211, file: !1212, line: 363, baseType: !167, size: 128, offset: 2496)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1211, file: !1212, line: 363, baseType: !167, size: 128, offset: 2624)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1211, file: !1212, line: 368, baseType: !1695, size: 64, offset: 2752)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1219, line: 500, size: 64, elements: !1697)
!1697 = !{!1698}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1696, file: !1219, line: 502, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1701, line: 48, baseType: !521)
!1701 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1211, file: !1212, line: 372, baseType: !1436, size: 32, offset: 2816)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1211, file: !1212, line: 373, baseType: !92, size: 32, offset: 2848)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1211, file: !1212, line: 382, baseType: !1705, size: 64, offset: 2880)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1212, line: 46, flags: DIFlagFwdDecl)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1211, file: !1212, line: 385, baseType: !1708, size: 64, offset: 2944)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !90, !91}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1211, file: !1212, line: 386, baseType: !1712, size: 64, offset: 3008)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{null, !90, !585}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1211, file: !1212, line: 387, baseType: !1716, size: 64, offset: 3072)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!92, !90}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1211, file: !1212, line: 388, baseType: !1375, size: 64, offset: 3136)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1211, file: !1212, line: 389, baseType: !90, size: 64, offset: 3200)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1211, file: !1212, line: 389, baseType: !90, size: 64, offset: 3264)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1211, file: !1212, line: 389, baseType: !90, size: 64, offset: 3328)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1211, file: !1212, line: 389, baseType: !90, size: 64, offset: 3392)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1110, file: !1111, line: 1223, baseType: !1109, size: 64, offset: 1152)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1110, file: !1111, line: 1225, baseType: !167, size: 128, offset: 1216)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1110, file: !1111, line: 1226, baseType: !1727, size: 64, offset: 1344)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1111, line: 69, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1728, file: !1111, line: 70, baseType: !1727, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1728, file: !1111, line: 70, baseType: !1727, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1728, file: !1111, line: 71, baseType: !7, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1728, file: !1111, line: 71, baseType: !7, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1728, file: !1111, line: 72, baseType: !92, size: 32, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1728, file: !1111, line: 73, baseType: !141, size: 16, offset: 224)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1728, file: !1111, line: 73, baseType: !141, size: 16, offset: 240)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1728, file: !1111, line: 74, baseType: !478, size: 64, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1110, file: !1111, line: 1227, baseType: !478, size: 64, offset: 1408)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1110, file: !1111, line: 1229, baseType: !344, size: 96, offset: 1472)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1110, file: !1111, line: 1230, baseType: !344, size: 96, offset: 1568)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1110, file: !1111, line: 1231, baseType: !344, size: 96, offset: 1664)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1110, file: !1111, line: 1231, baseType: !344, size: 96, offset: 1760)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1110, file: !1111, line: 1233, baseType: !7, size: 32, offset: 1856)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1110, file: !1111, line: 1234, baseType: !92, size: 32, offset: 1888)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1110, file: !1111, line: 1235, baseType: !7, size: 32, offset: 1920)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1110, file: !1111, line: 1237, baseType: !141, size: 16, offset: 1952)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1110, file: !1111, line: 1239, baseType: !128, size: 8, offset: 1968)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1110, file: !1111, line: 1240, baseType: !443, size: 8, offset: 1976)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1110, file: !1111, line: 1242, baseType: !1210, size: 64, offset: 1984)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1110, file: !1111, line: 1244, baseType: !1751, size: 64, offset: 2048)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1111, line: 59, flags: DIFlagFwdDecl)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1110, file: !1111, line: 1246, baseType: !1754, size: 64, offset: 2112)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1111, line: 1067, size: 5184, elements: !1756)
!1756 = !{!1757, !1795, !1796, !1811, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1833, !1849, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1962}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1755, file: !1111, line: 1068, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1111, line: 934, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1111, line: 925, size: 576, elements: !1761)
!1761 = !{!1762, !1778, !1779, !1780, !1781, !1782, !1794}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1760, file: !1111, line: 926, baseType: !1763, size: 320)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1111, line: 830, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1111, line: 813, size: 320, elements: !1765)
!1765 = !{!1766, !1769, !1772, !1773, !1775, !1776, !1777}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1764, file: !1111, line: 814, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1111, line: 51, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1764, file: !1111, line: 815, baseType: !1770, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1111, line: 815, flags: DIFlagFwdDecl)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1764, file: !1111, line: 818, baseType: !90, size: 64, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1764, file: !1111, line: 819, baseType: !1774, size: 32, offset: 192)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 32, elements: !427)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1764, file: !1111, line: 822, baseType: !92, size: 32, offset: 224)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1764, file: !1111, line: 826, baseType: !92, size: 32, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1764, file: !1111, line: 829, baseType: !92, size: 32, offset: 288)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1760, file: !1111, line: 928, baseType: !141, size: 16, offset: 320)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1760, file: !1111, line: 928, baseType: !141, size: 16, offset: 336)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1760, file: !1111, line: 929, baseType: !92, size: 32, offset: 352)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1760, file: !1111, line: 930, baseType: !946, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1760, file: !1111, line: 931, baseType: !1783, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !84, line: 59, size: 128, elements: !1785)
!1785 = !{!1786, !1792, !1793}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1784, file: !84, line: 60, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !84, line: 54, size: 64, elements: !1789)
!1789 = !{!1790, !1791}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1788, file: !84, line: 55, baseType: !92, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1788, file: !84, line: 56, baseType: !91, size: 32, offset: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1784, file: !84, line: 61, baseType: !92, size: 32, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1784, file: !84, line: 62, baseType: !92, size: 32, offset: 96)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1760, file: !1111, line: 933, baseType: !90, size: 64, offset: 512)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1755, file: !1111, line: 1069, baseType: !1758, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1755, file: !1111, line: 1070, baseType: !1797, size: 64, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1111, line: 916, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1111, line: 891, size: 704, elements: !1800)
!1800 = !{!1801, !1802, !1803, !1805, !1806, !1807, !1808, !1809, !1810}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1799, file: !1111, line: 892, baseType: !1763, size: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1799, file: !1111, line: 896, baseType: !92, size: 32, offset: 320)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1799, file: !1111, line: 900, baseType: !1804, size: 96, offset: 352)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 96, elements: !345)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1799, file: !1111, line: 903, baseType: !91, size: 32, offset: 448)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1799, file: !1111, line: 906, baseType: !92, size: 32, offset: 480)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1799, file: !1111, line: 909, baseType: !91, size: 32, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1799, file: !1111, line: 912, baseType: !91, size: 32, offset: 544)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1799, file: !1111, line: 914, baseType: !478, size: 64, offset: 576)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1799, file: !1111, line: 915, baseType: !90, size: 64, offset: 640)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1755, file: !1111, line: 1071, baseType: !1812, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1111, line: 920, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1111, line: 918, size: 320, elements: !1815)
!1815 = !{!1816}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1814, file: !1111, line: 919, baseType: !1763, size: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1755, file: !1111, line: 1075, baseType: !91, size: 32, offset: 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1755, file: !1111, line: 1077, baseType: !91, size: 32, offset: 288)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1755, file: !1111, line: 1078, baseType: !91, size: 32, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1755, file: !1111, line: 1079, baseType: !141, size: 16, offset: 352)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1755, file: !1111, line: 1082, baseType: !141, size: 16, offset: 368)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1755, file: !1111, line: 1085, baseType: !128, size: 8, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1755, file: !1111, line: 1086, baseType: !128, size: 8, offset: 392)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1755, file: !1111, line: 1087, baseType: !128, size: 8, offset: 400)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1755, file: !1111, line: 1088, baseType: !128, size: 8, offset: 408)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1755, file: !1111, line: 1090, baseType: !91, size: 32, offset: 416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1755, file: !1111, line: 1093, baseType: !141, size: 16, offset: 448)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1755, file: !1111, line: 1096, baseType: !128, size: 8, offset: 464)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1755, file: !1111, line: 1098, baseType: !1830, size: 40, offset: 472)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 40, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 5)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1755, file: !1111, line: 1101, baseType: !1834, size: 832, offset: 512)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1111, line: 836, size: 832, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1834, file: !1111, line: 837, baseType: !1763, size: 320)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1834, file: !1111, line: 839, baseType: !141, size: 16, offset: 320)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1834, file: !1111, line: 839, baseType: !141, size: 16, offset: 336)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1834, file: !1111, line: 842, baseType: !141, size: 16, offset: 352)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1834, file: !1111, line: 842, baseType: !141, size: 16, offset: 368)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1834, file: !1111, line: 843, baseType: !1195, size: 32, offset: 384)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1834, file: !1111, line: 845, baseType: !92, size: 32, offset: 416)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1834, file: !1111, line: 847, baseType: !90, size: 64, offset: 448)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1834, file: !1111, line: 848, baseType: !103, size: 64, offset: 512)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1834, file: !1111, line: 849, baseType: !103, size: 64, offset: 576)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1834, file: !1111, line: 850, baseType: !103, size: 64, offset: 640)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1834, file: !1111, line: 851, baseType: !344, size: 96, offset: 704)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1834, file: !1111, line: 852, baseType: !91, size: 32, offset: 800)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1755, file: !1111, line: 1104, baseType: !1850, size: 1344, offset: 1344)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1111, line: 867, size: 1344, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1856, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1850, file: !1111, line: 868, baseType: !141, size: 16)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1850, file: !1111, line: 869, baseType: !141, size: 16, offset: 16)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1850, file: !1111, line: 870, baseType: !141, size: 16, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1850, file: !1111, line: 871, baseType: !141, size: 16, offset: 48)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1850, file: !1111, line: 873, baseType: !1857, size: 896, offset: 64)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1858, size: 896, elements: !1867)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1111, line: 864, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1111, line: 859, size: 128, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864, !1865, !1866}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1859, file: !1111, line: 860, baseType: !141, size: 16)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1859, file: !1111, line: 861, baseType: !141, size: 16, offset: 16)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1859, file: !1111, line: 861, baseType: !141, size: 16, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1859, file: !1111, line: 861, baseType: !141, size: 16, offset: 48)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1859, file: !1111, line: 862, baseType: !92, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1859, file: !1111, line: 863, baseType: !91, size: 32, offset: 96)
!1867 = !{!1868}
!1868 = !DISubrange(count: 7)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1850, file: !1111, line: 874, baseType: !90, size: 64, offset: 960)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1850, file: !1111, line: 876, baseType: !91, size: 32, offset: 1024)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1850, file: !1111, line: 876, baseType: !91, size: 32, offset: 1056)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1850, file: !1111, line: 878, baseType: !92, size: 32, offset: 1088)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1850, file: !1111, line: 879, baseType: !92, size: 32, offset: 1120)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1850, file: !1111, line: 881, baseType: !92, size: 32, offset: 1152)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1850, file: !1111, line: 881, baseType: !92, size: 32, offset: 1184)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1850, file: !1111, line: 883, baseType: !1109, size: 64, offset: 1216)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1850, file: !1111, line: 884, baseType: !478, size: 64, offset: 1280)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1755, file: !1111, line: 1107, baseType: !91, size: 32, offset: 2688)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1755, file: !1111, line: 1110, baseType: !91, size: 32, offset: 2720)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1755, file: !1111, line: 1113, baseType: !141, size: 16, offset: 2752)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1755, file: !1111, line: 1113, baseType: !141, size: 16, offset: 2768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1755, file: !1111, line: 1116, baseType: !128, size: 8, offset: 2784)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1755, file: !1111, line: 1117, baseType: !443, size: 8, offset: 2792)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1755, file: !1111, line: 1120, baseType: !141, size: 16, offset: 2800)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1755, file: !1111, line: 1121, baseType: !91, size: 32, offset: 2816)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1755, file: !1111, line: 1122, baseType: !91, size: 32, offset: 2848)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1755, file: !1111, line: 1123, baseType: !91, size: 32, offset: 2880)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1755, file: !1111, line: 1124, baseType: !91, size: 32, offset: 2912)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1755, file: !1111, line: 1125, baseType: !91, size: 32, offset: 2944)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1755, file: !1111, line: 1126, baseType: !91, size: 32, offset: 2976)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1755, file: !1111, line: 1127, baseType: !91, size: 32, offset: 3008)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1755, file: !1111, line: 1128, baseType: !91, size: 32, offset: 3040)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1755, file: !1111, line: 1129, baseType: !91, size: 32, offset: 3072)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1755, file: !1111, line: 1130, baseType: !91, size: 32, offset: 3104)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1755, file: !1111, line: 1131, baseType: !141, size: 16, offset: 3136)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1755, file: !1111, line: 1132, baseType: !128, size: 8, offset: 3152)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1755, file: !1111, line: 1133, baseType: !128, size: 8, offset: 3160)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1755, file: !1111, line: 1134, baseType: !1899, size: 24, offset: 3168)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 24, elements: !345)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1755, file: !1111, line: 1135, baseType: !128, size: 8, offset: 3192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1755, file: !1111, line: 1138, baseType: !478, size: 64, offset: 3200)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1755, file: !1111, line: 1139, baseType: !128, size: 8, offset: 3264)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1755, file: !1111, line: 1140, baseType: !128, size: 8, offset: 3272)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1755, file: !1111, line: 1141, baseType: !128, size: 8, offset: 3280)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1755, file: !1111, line: 1142, baseType: !128, size: 8, offset: 3288)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1755, file: !1111, line: 1143, baseType: !128, size: 8, offset: 3296)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1755, file: !1111, line: 1144, baseType: !1908, size: 64, offset: 3304)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 64, elements: !1909)
!1909 = !{!508}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1755, file: !1111, line: 1145, baseType: !1908, size: 64, offset: 3368)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1755, file: !1111, line: 1148, baseType: !128, size: 8, offset: 3432)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1755, file: !1111, line: 1149, baseType: !128, size: 8, offset: 3440)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1755, file: !1111, line: 1152, baseType: !128, size: 8, offset: 3448)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1755, file: !1111, line: 1152, baseType: !128, size: 8, offset: 3456)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1755, file: !1111, line: 1153, baseType: !128, size: 8, offset: 3464)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1755, file: !1111, line: 1154, baseType: !141, size: 16, offset: 3472)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1755, file: !1111, line: 1154, baseType: !141, size: 16, offset: 3488)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1755, file: !1111, line: 1155, baseType: !141, size: 16, offset: 3504)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1755, file: !1111, line: 1155, baseType: !141, size: 16, offset: 3520)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1755, file: !1111, line: 1156, baseType: !128, size: 8, offset: 3536)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1755, file: !1111, line: 1157, baseType: !128, size: 8, offset: 3544)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1755, file: !1111, line: 1159, baseType: !128, size: 8, offset: 3552)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1755, file: !1111, line: 1160, baseType: !128, size: 8, offset: 3560)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1755, file: !1111, line: 1161, baseType: !128, size: 8, offset: 3568)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1755, file: !1111, line: 1162, baseType: !128, size: 8, offset: 3576)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1755, file: !1111, line: 1165, baseType: !92, size: 32, offset: 3584)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1755, file: !1111, line: 1166, baseType: !92, size: 32, offset: 3616)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1755, file: !1111, line: 1167, baseType: !92, size: 32, offset: 3648)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1755, file: !1111, line: 1168, baseType: !92, size: 32, offset: 3680)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1755, file: !1111, line: 1171, baseType: !141, size: 16, offset: 3712)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1755, file: !1111, line: 1171, baseType: !141, size: 16, offset: 3728)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1755, file: !1111, line: 1172, baseType: !92, size: 32, offset: 3744)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1755, file: !1111, line: 1173, baseType: !91, size: 32, offset: 3776)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1755, file: !1111, line: 1174, baseType: !91, size: 32, offset: 3808)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1755, file: !1111, line: 1177, baseType: !1936, size: 1024, offset: 3840)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1111, line: 963, size: 1024, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1936, file: !1111, line: 965, baseType: !92, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1936, file: !1111, line: 968, baseType: !91, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1936, file: !1111, line: 971, baseType: !91, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1936, file: !1111, line: 974, baseType: !91, size: 32, offset: 96)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1936, file: !1111, line: 977, baseType: !344, size: 96, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1936, file: !1111, line: 979, baseType: !344, size: 96, offset: 224)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1936, file: !1111, line: 982, baseType: !92, size: 32, offset: 320)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1936, file: !1111, line: 987, baseType: !1101, size: 64, offset: 352)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1936, file: !1111, line: 989, baseType: !91, size: 32, offset: 416)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1936, file: !1111, line: 994, baseType: !92, size: 32, offset: 448)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1936, file: !1111, line: 995, baseType: !92, size: 32, offset: 480)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1936, file: !1111, line: 997, baseType: !128, size: 8, offset: 512)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1936, file: !1111, line: 998, baseType: !1951, size: 56, offset: 520)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 56, elements: !1867)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1936, file: !1111, line: 1000, baseType: !91, size: 32, offset: 576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1936, file: !1111, line: 1003, baseType: !1101, size: 64, offset: 608)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1936, file: !1111, line: 1006, baseType: !92, size: 32, offset: 672)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1936, file: !1111, line: 1009, baseType: !91, size: 32, offset: 704)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1936, file: !1111, line: 1012, baseType: !1101, size: 64, offset: 736)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1936, file: !1111, line: 1015, baseType: !1101, size: 64, offset: 800)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1936, file: !1111, line: 1018, baseType: !92, size: 32, offset: 864)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1936, file: !1111, line: 1019, baseType: !1502, size: 64, offset: 896)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1936, file: !1111, line: 1023, baseType: !91, size: 32, offset: 960)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1936, file: !1111, line: 1024, baseType: !92, size: 32, offset: 992)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1755, file: !1111, line: 1179, baseType: !1963, size: 320, offset: 4864)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1111, line: 1043, size: 320, elements: !1964)
!1964 = !{!1965, !1966, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1963, file: !1111, line: 1044, baseType: !128, size: 8)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1963, file: !1111, line: 1045, baseType: !1967, size: 16, offset: 8)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 16, elements: !1102)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1963, file: !1111, line: 1048, baseType: !128, size: 8, offset: 24)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1963, file: !1111, line: 1049, baseType: !91, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1963, file: !1111, line: 1049, baseType: !91, size: 32, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1963, file: !1111, line: 1052, baseType: !91, size: 32, offset: 96)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1963, file: !1111, line: 1052, baseType: !91, size: 32, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1963, file: !1111, line: 1053, baseType: !128, size: 8, offset: 160)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1963, file: !1111, line: 1054, baseType: !1899, size: 24, offset: 168)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1963, file: !1111, line: 1057, baseType: !91, size: 32, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1963, file: !1111, line: 1057, baseType: !91, size: 32, offset: 224)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1963, file: !1111, line: 1060, baseType: !91, size: 32, offset: 256)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1963, file: !1111, line: 1060, baseType: !91, size: 32, offset: 288)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1110, file: !1111, line: 1247, baseType: !1980, size: 64, offset: 2176)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1111, line: 60, flags: DIFlagFwdDecl)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1110, file: !1111, line: 1251, baseType: !1983, size: 31872, offset: 2240)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1111, line: 403, size: 31872, elements: !1984)
!1984 = !{!1985, !2061, !2081, !2090, !2110, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2243, !2244, !2245, !2247, !2263, !2264}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1983, file: !1111, line: 404, baseType: !1986, size: 1984)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1111, line: 259, size: 1984, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2005, !2056}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1986, file: !1111, line: 260, baseType: !128, size: 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1986, file: !1111, line: 263, baseType: !128, size: 8, offset: 8)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1986, file: !1111, line: 266, baseType: !128, size: 8, offset: 16)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1986, file: !1111, line: 267, baseType: !128, size: 8, offset: 24)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1986, file: !1111, line: 269, baseType: !128, size: 8, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1986, file: !1111, line: 270, baseType: !128, size: 8, offset: 40)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1986, file: !1111, line: 276, baseType: !128, size: 8, offset: 48)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1986, file: !1111, line: 279, baseType: !128, size: 8, offset: 56)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1986, file: !1111, line: 280, baseType: !141, size: 16, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1986, file: !1111, line: 280, baseType: !141, size: 16, offset: 80)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1986, file: !1111, line: 281, baseType: !91, size: 32, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1986, file: !1111, line: 284, baseType: !128, size: 8, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1986, file: !1111, line: 285, baseType: !128, size: 8, offset: 136)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1986, file: !1111, line: 287, baseType: !2002, size: 48, offset: 144)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 48, elements: !2003)
!2003 = !{!2004}
!2004 = !DISubrange(count: 6)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1986, file: !1111, line: 290, baseType: !2006, size: 1280, offset: 192)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2007, line: 174, baseType: !2008)
!2007 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2007, line: 166, size: 1280, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2055}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2008, file: !2007, line: 167, baseType: !92, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2008, file: !2007, line: 167, baseType: !92, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2008, file: !2007, line: 168, baseType: !157, size: 512, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2008, file: !2007, line: 169, baseType: !157, size: 512, offset: 576)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2008, file: !2007, line: 170, baseType: !91, size: 32, offset: 1088)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2008, file: !2007, line: 171, baseType: !91, size: 32, offset: 1120)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2008, file: !2007, line: 172, baseType: !2017, size: 64, offset: 1152)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2007, line: 72, size: 3072, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2026, !2051, !2052, !2053, !2054}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2018, file: !2007, line: 73, baseType: !92, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2018, file: !2007, line: 73, baseType: !92, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2018, file: !2007, line: 74, baseType: !92, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2018, file: !2007, line: 75, baseType: !92, size: 32, offset: 96)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2018, file: !2007, line: 77, baseType: !1627, size: 128, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2018, file: !2007, line: 77, baseType: !1627, size: 128, offset: 256)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2018, file: !2007, line: 79, baseType: !2027, size: 2304, offset: 384)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2028, size: 2304, elements: !427)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2007, line: 67, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2007, line: 55, size: 576, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2047, !2048, !2049, !2050}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2029, file: !2007, line: 56, baseType: !141, size: 16)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2029, file: !2007, line: 56, baseType: !141, size: 16, offset: 16)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2029, file: !2007, line: 58, baseType: !91, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2029, file: !2007, line: 59, baseType: !91, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2029, file: !2007, line: 59, baseType: !91, size: 32, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2029, file: !2007, line: 60, baseType: !1101, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2029, file: !2007, line: 60, baseType: !1101, size: 64, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2029, file: !2007, line: 61, baseType: !2039, size: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2007, line: 47, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2007, line: 44, size: 96, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2041, file: !2007, line: 45, baseType: !91, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2041, file: !2007, line: 45, baseType: !91, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2041, file: !2007, line: 46, baseType: !141, size: 16, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2041, file: !2007, line: 46, baseType: !141, size: 16, offset: 80)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2029, file: !2007, line: 62, baseType: !2039, size: 64, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2029, file: !2007, line: 64, baseType: !2039, size: 64, offset: 384)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2029, file: !2007, line: 65, baseType: !1101, size: 64, offset: 448)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2029, file: !2007, line: 66, baseType: !1101, size: 64, offset: 512)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2018, file: !2007, line: 80, baseType: !344, size: 96, offset: 2688)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2018, file: !2007, line: 80, baseType: !344, size: 96, offset: 2784)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2018, file: !2007, line: 81, baseType: !344, size: 96, offset: 2880)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2018, file: !2007, line: 83, baseType: !344, size: 96, offset: 2976)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2008, file: !2007, line: 173, baseType: !90, size: 64, offset: 1216)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1986, file: !1111, line: 291, baseType: !2057, size: 512, offset: 1472)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2007, line: 178, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2007, line: 176, size: 512, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2058, file: !2007, line: 177, baseType: !157, size: 512)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1983, file: !1111, line: 406, baseType: !2062, size: 64, offset: 1984)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1111, line: 80, size: 1472, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2063, file: !1111, line: 81, baseType: !90, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2063, file: !1111, line: 82, baseType: !90, size: 64, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2063, file: !1111, line: 83, baseType: !7, size: 32, offset: 128)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2063, file: !1111, line: 84, baseType: !7, size: 32, offset: 160)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2063, file: !1111, line: 86, baseType: !7, size: 32, offset: 192)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2063, file: !1111, line: 87, baseType: !7, size: 32, offset: 224)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2063, file: !1111, line: 88, baseType: !7, size: 32, offset: 256)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2063, file: !1111, line: 89, baseType: !7, size: 32, offset: 288)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2063, file: !1111, line: 90, baseType: !7, size: 32, offset: 320)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2063, file: !1111, line: 91, baseType: !7, size: 32, offset: 352)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2063, file: !1111, line: 92, baseType: !7, size: 32, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2063, file: !1111, line: 93, baseType: !7, size: 32, offset: 416)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2063, file: !1111, line: 95, baseType: !2078, size: 1024, offset: 448)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 1024, elements: !2079)
!2079 = !{!2080}
!2080 = !DISubrange(count: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1983, file: !1111, line: 407, baseType: !2082, size: 64, offset: 2048)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1111, line: 98, size: 1216, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088, !2089}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2083, file: !1111, line: 100, baseType: !90, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2083, file: !1111, line: 101, baseType: !90, size: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2083, file: !1111, line: 103, baseType: !7, size: 32, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2083, file: !1111, line: 104, baseType: !7, size: 32, offset: 160)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2083, file: !1111, line: 106, baseType: !2078, size: 1024, offset: 192)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1983, file: !1111, line: 408, baseType: !2091, size: 512, offset: 2112)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1111, line: 109, size: 512, elements: !2092)
!2092 = !{!2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2091, file: !1111, line: 111, baseType: !92, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2091, file: !1111, line: 112, baseType: !92, size: 32, offset: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2091, file: !1111, line: 115, baseType: !92, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2091, file: !1111, line: 116, baseType: !92, size: 32, offset: 96)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2091, file: !1111, line: 117, baseType: !92, size: 32, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2091, file: !1111, line: 118, baseType: !92, size: 32, offset: 160)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2091, file: !1111, line: 119, baseType: !92, size: 32, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2091, file: !1111, line: 120, baseType: !92, size: 32, offset: 224)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2091, file: !1111, line: 121, baseType: !92, size: 32, offset: 256)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2091, file: !1111, line: 122, baseType: !92, size: 32, offset: 288)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2091, file: !1111, line: 125, baseType: !92, size: 32, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2091, file: !1111, line: 126, baseType: !92, size: 32, offset: 352)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2091, file: !1111, line: 127, baseType: !141, size: 16, offset: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2091, file: !1111, line: 128, baseType: !141, size: 16, offset: 400)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2091, file: !1111, line: 129, baseType: !92, size: 32, offset: 416)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2091, file: !1111, line: 130, baseType: !92, size: 32, offset: 448)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2091, file: !1111, line: 131, baseType: !92, size: 32, offset: 480)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1983, file: !1111, line: 409, baseType: !2111, size: 576, offset: 2624)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1111, line: 134, size: 576, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2111, file: !1111, line: 135, baseType: !92, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2111, file: !1111, line: 136, baseType: !92, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2111, file: !1111, line: 137, baseType: !92, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2111, file: !1111, line: 138, baseType: !92, size: 32, offset: 96)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2111, file: !1111, line: 139, baseType: !92, size: 32, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2111, file: !1111, line: 140, baseType: !92, size: 32, offset: 160)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2111, file: !1111, line: 141, baseType: !92, size: 32, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2111, file: !1111, line: 142, baseType: !92, size: 32, offset: 224)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2111, file: !1111, line: 143, baseType: !91, size: 32, offset: 256)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2111, file: !1111, line: 144, baseType: !92, size: 32, offset: 288)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2111, file: !1111, line: 145, baseType: !92, size: 32, offset: 320)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2111, file: !1111, line: 147, baseType: !92, size: 32, offset: 352)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2111, file: !1111, line: 148, baseType: !92, size: 32, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2111, file: !1111, line: 149, baseType: !92, size: 32, offset: 416)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2111, file: !1111, line: 150, baseType: !92, size: 32, offset: 448)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2111, file: !1111, line: 151, baseType: !92, size: 32, offset: 480)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2111, file: !1111, line: 152, baseType: !146, size: 64, offset: 512)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1983, file: !1111, line: 411, baseType: !92, size: 32, offset: 3200)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1983, file: !1111, line: 411, baseType: !92, size: 32, offset: 3232)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1983, file: !1111, line: 411, baseType: !92, size: 32, offset: 3264)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1983, file: !1111, line: 412, baseType: !91, size: 32, offset: 3296)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1983, file: !1111, line: 413, baseType: !92, size: 32, offset: 3328)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1983, file: !1111, line: 413, baseType: !92, size: 32, offset: 3360)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1983, file: !1111, line: 415, baseType: !92, size: 32, offset: 3392)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1983, file: !1111, line: 415, baseType: !92, size: 32, offset: 3424)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1983, file: !1111, line: 416, baseType: !141, size: 16, offset: 3456)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1983, file: !1111, line: 416, baseType: !141, size: 16, offset: 3472)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1983, file: !1111, line: 418, baseType: !91, size: 32, offset: 3488)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1983, file: !1111, line: 418, baseType: !91, size: 32, offset: 3520)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1983, file: !1111, line: 421, baseType: !91, size: 32, offset: 3552)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1983, file: !1111, line: 421, baseType: !91, size: 32, offset: 3584)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1983, file: !1111, line: 421, baseType: !91, size: 32, offset: 3616)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1983, file: !1111, line: 425, baseType: !141, size: 16, offset: 3648)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1983, file: !1111, line: 425, baseType: !141, size: 16, offset: 3664)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1983, file: !1111, line: 425, baseType: !141, size: 16, offset: 3680)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1983, file: !1111, line: 426, baseType: !141, size: 16, offset: 3696)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1983, file: !1111, line: 428, baseType: !141, size: 16, offset: 3712)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1983, file: !1111, line: 428, baseType: !141, size: 16, offset: 3728)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1983, file: !1111, line: 431, baseType: !92, size: 32, offset: 3744)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1983, file: !1111, line: 433, baseType: !141, size: 16, offset: 3776)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1983, file: !1111, line: 435, baseType: !141, size: 16, offset: 3792)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1983, file: !1111, line: 437, baseType: !141, size: 16, offset: 3808)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1983, file: !1111, line: 439, baseType: !141, size: 16, offset: 3824)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1983, file: !1111, line: 441, baseType: !141, size: 16, offset: 3840)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1983, file: !1111, line: 443, baseType: !141, size: 16, offset: 3856)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1983, file: !1111, line: 449, baseType: !92, size: 32, offset: 3872)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1983, file: !1111, line: 453, baseType: !92, size: 32, offset: 3904)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1983, file: !1111, line: 458, baseType: !141, size: 16, offset: 3936)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1983, file: !1111, line: 462, baseType: !141, size: 16, offset: 3952)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1983, file: !1111, line: 467, baseType: !92, size: 32, offset: 3968)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1983, file: !1111, line: 467, baseType: !92, size: 32, offset: 4000)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1983, file: !1111, line: 469, baseType: !141, size: 16, offset: 4032)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1983, file: !1111, line: 469, baseType: !141, size: 16, offset: 4048)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1983, file: !1111, line: 469, baseType: !141, size: 16, offset: 4064)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1983, file: !1111, line: 469, baseType: !141, size: 16, offset: 4080)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1983, file: !1111, line: 474, baseType: !141, size: 16, offset: 4096)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1983, file: !1111, line: 475, baseType: !128, size: 8, offset: 4112)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1983, file: !1111, line: 476, baseType: !128, size: 8, offset: 4120)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1983, file: !1111, line: 481, baseType: !92, size: 32, offset: 4128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1983, file: !1111, line: 486, baseType: !92, size: 32, offset: 4160)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1983, file: !1111, line: 491, baseType: !92, size: 32, offset: 4192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1983, file: !1111, line: 496, baseType: !141, size: 16, offset: 4224)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1983, file: !1111, line: 498, baseType: !141, size: 16, offset: 4240)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1983, file: !1111, line: 501, baseType: !141, size: 16, offset: 4256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1983, file: !1111, line: 502, baseType: !141, size: 16, offset: 4272)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1983, file: !1111, line: 508, baseType: !141, size: 16, offset: 4288)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1983, file: !1111, line: 513, baseType: !141, size: 16, offset: 4304)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1983, file: !1111, line: 515, baseType: !141, size: 16, offset: 4320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1983, file: !1111, line: 515, baseType: !141, size: 16, offset: 4336)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1983, file: !1111, line: 519, baseType: !1627, size: 128, offset: 4352)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1983, file: !1111, line: 519, baseType: !1627, size: 128, offset: 4480)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1983, file: !1111, line: 520, baseType: !204, size: 128, offset: 4608)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1983, file: !1111, line: 523, baseType: !167, size: 128, offset: 4736)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1983, file: !1111, line: 524, baseType: !141, size: 16, offset: 4864)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1983, file: !1111, line: 527, baseType: !141, size: 16, offset: 4880)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1983, file: !1111, line: 532, baseType: !91, size: 32, offset: 4896)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1983, file: !1111, line: 532, baseType: !91, size: 32, offset: 4928)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1983, file: !1111, line: 534, baseType: !91, size: 32, offset: 4960)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1983, file: !1111, line: 538, baseType: !91, size: 32, offset: 4992)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1983, file: !1111, line: 542, baseType: !92, size: 32, offset: 5024)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1983, file: !1111, line: 545, baseType: !91, size: 32, offset: 5056)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1983, file: !1111, line: 545, baseType: !91, size: 32, offset: 5088)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1983, file: !1111, line: 545, baseType: !91, size: 32, offset: 5120)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1983, file: !1111, line: 548, baseType: !91, size: 32, offset: 5152)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1983, file: !1111, line: 551, baseType: !141, size: 16, offset: 5184)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1983, file: !1111, line: 551, baseType: !141, size: 16, offset: 5200)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1983, file: !1111, line: 551, baseType: !141, size: 16, offset: 5216)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1983, file: !1111, line: 551, baseType: !141, size: 16, offset: 5232)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1983, file: !1111, line: 552, baseType: !141, size: 16, offset: 5248)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1983, file: !1111, line: 552, baseType: !141, size: 16, offset: 5264)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1983, file: !1111, line: 553, baseType: !91, size: 32, offset: 5280)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1983, file: !1111, line: 553, baseType: !91, size: 32, offset: 5312)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1983, file: !1111, line: 554, baseType: !141, size: 16, offset: 5344)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1983, file: !1111, line: 554, baseType: !141, size: 16, offset: 5360)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1983, file: !1111, line: 555, baseType: !91, size: 32, offset: 5376)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1983, file: !1111, line: 555, baseType: !91, size: 32, offset: 5408)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1983, file: !1111, line: 558, baseType: !127, size: 8192, offset: 5440)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1983, file: !1111, line: 561, baseType: !92, size: 32, offset: 13632)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1983, file: !1111, line: 562, baseType: !141, size: 16, offset: 13664)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1983, file: !1111, line: 562, baseType: !141, size: 16, offset: 13680)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1983, file: !1111, line: 565, baseType: !2214, size: 6144, offset: 13696)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 6144, elements: !2215)
!2215 = !{!2216}
!2216 = !DISubrange(count: 768)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1983, file: !1111, line: 568, baseType: !426, size: 128, offset: 19840)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1983, file: !1111, line: 569, baseType: !426, size: 128, offset: 19968)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1983, file: !1111, line: 572, baseType: !128, size: 8, offset: 20096)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1983, file: !1111, line: 573, baseType: !128, size: 8, offset: 20104)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1983, file: !1111, line: 574, baseType: !128, size: 8, offset: 20112)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1983, file: !1111, line: 575, baseType: !1830, size: 40, offset: 20120)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1983, file: !1111, line: 578, baseType: !92, size: 32, offset: 20160)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1983, file: !1111, line: 579, baseType: !141, size: 16, offset: 20192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1983, file: !1111, line: 580, baseType: !141, size: 16, offset: 20208)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1983, file: !1111, line: 581, baseType: !91, size: 32, offset: 20224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1983, file: !1111, line: 582, baseType: !91, size: 32, offset: 20256)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1983, file: !1111, line: 585, baseType: !141, size: 16, offset: 20288)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1983, file: !1111, line: 585, baseType: !141, size: 16, offset: 20304)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1983, file: !1111, line: 586, baseType: !91, size: 32, offset: 20320)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1983, file: !1111, line: 589, baseType: !141, size: 16, offset: 20352)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1983, file: !1111, line: 589, baseType: !141, size: 16, offset: 20368)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1983, file: !1111, line: 590, baseType: !92, size: 32, offset: 20384)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1983, file: !1111, line: 593, baseType: !141, size: 16, offset: 20416)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1983, file: !1111, line: 593, baseType: !141, size: 16, offset: 20432)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1983, file: !1111, line: 594, baseType: !141, size: 16, offset: 20448)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1983, file: !1111, line: 594, baseType: !141, size: 16, offset: 20464)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1983, file: !1111, line: 595, baseType: !91, size: 32, offset: 20480)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1983, file: !1111, line: 596, baseType: !91, size: 32, offset: 20512)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1983, file: !1111, line: 597, baseType: !2241, size: 64, offset: 20544)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !34, line: 205, flags: DIFlagFwdDecl)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1983, file: !1111, line: 600, baseType: !92, size: 32, offset: 20608)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1983, file: !1111, line: 601, baseType: !91, size: 32, offset: 20640)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1983, file: !1111, line: 604, baseType: !2246, size: 256, offset: 20672)
!2246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 256, elements: !457)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1983, file: !1111, line: 607, baseType: !2248, size: 10880, offset: 20928)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1111, line: 364, size: 10880, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2248, file: !1111, line: 365, baseType: !1986, size: 1984)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2248, file: !1111, line: 367, baseType: !127, size: 8192, offset: 1984)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2248, file: !1111, line: 369, baseType: !141, size: 16, offset: 10176)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2248, file: !1111, line: 369, baseType: !141, size: 16, offset: 10192)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2248, file: !1111, line: 370, baseType: !141, size: 16, offset: 10208)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2248, file: !1111, line: 370, baseType: !141, size: 16, offset: 10224)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2248, file: !1111, line: 372, baseType: !91, size: 32, offset: 10240)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2248, file: !1111, line: 373, baseType: !91, size: 32, offset: 10272)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2248, file: !1111, line: 375, baseType: !1899, size: 24, offset: 10304)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2248, file: !1111, line: 376, baseType: !128, size: 8, offset: 10328)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2248, file: !1111, line: 378, baseType: !128, size: 8, offset: 10336)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2248, file: !1111, line: 379, baseType: !1899, size: 24, offset: 10344)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2248, file: !1111, line: 381, baseType: !157, size: 512, offset: 10368)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1983, file: !1111, line: 609, baseType: !92, size: 32, offset: 31808)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1983, file: !1111, line: 610, baseType: !92, size: 32, offset: 31840)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1110, file: !1111, line: 1252, baseType: !2266, size: 256, offset: 34112)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1111, line: 158, size: 256, elements: !2267)
!2267 = !{!2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2266, file: !1111, line: 159, baseType: !92, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2266, file: !1111, line: 160, baseType: !91, size: 32, offset: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2266, file: !1111, line: 161, baseType: !91, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2266, file: !1111, line: 162, baseType: !91, size: 32, offset: 96)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2266, file: !1111, line: 163, baseType: !92, size: 32, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2266, file: !1111, line: 164, baseType: !141, size: 16, offset: 160)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2266, file: !1111, line: 165, baseType: !141, size: 16, offset: 176)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2266, file: !1111, line: 166, baseType: !91, size: 32, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2266, file: !1111, line: 167, baseType: !91, size: 32, offset: 224)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1110, file: !1111, line: 1254, baseType: !167, size: 128, offset: 34368)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1110, file: !1111, line: 1255, baseType: !167, size: 128, offset: 34496)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1110, file: !1111, line: 1257, baseType: !90, size: 64, offset: 34624)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1110, file: !1111, line: 1258, baseType: !90, size: 64, offset: 34688)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1110, file: !1111, line: 1259, baseType: !90, size: 64, offset: 34752)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1110, file: !1111, line: 1260, baseType: !90, size: 64, offset: 34816)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1110, file: !1111, line: 1262, baseType: !90, size: 64, offset: 34880)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1110, file: !1111, line: 1265, baseType: !2285, size: 64, offset: 34944)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1111, line: 1265, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1110, file: !1111, line: 1266, baseType: !141, size: 16, offset: 35008)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1110, file: !1111, line: 1267, baseType: !141, size: 16, offset: 35024)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1110, file: !1111, line: 1270, baseType: !92, size: 32, offset: 35040)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1110, file: !1111, line: 1271, baseType: !167, size: 128, offset: 35072)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1110, file: !1111, line: 1274, baseType: !2292, size: 128, offset: 35200)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1111, line: 650, size: 128, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2292, file: !1111, line: 651, baseType: !344, size: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2292, file: !1111, line: 652, baseType: !128, size: 8, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2292, file: !1111, line: 652, baseType: !128, size: 8, offset: 104)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2292, file: !1111, line: 652, baseType: !128, size: 8, offset: 112)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2292, file: !1111, line: 652, baseType: !128, size: 8, offset: 120)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1110, file: !1111, line: 1275, baseType: !2300, size: 1472, offset: 35328)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1111, line: 676, size: 1472, elements: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2323, !2324, !2325, !2326, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2300, file: !1111, line: 679, baseType: !2292, size: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2300, file: !1111, line: 680, baseType: !141, size: 16, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2300, file: !1111, line: 680, baseType: !141, size: 16, offset: 144)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2300, file: !1111, line: 680, baseType: !141, size: 16, offset: 160)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2300, file: !1111, line: 680, baseType: !141, size: 16, offset: 176)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2300, file: !1111, line: 681, baseType: !141, size: 16, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2300, file: !1111, line: 681, baseType: !141, size: 16, offset: 208)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2300, file: !1111, line: 681, baseType: !141, size: 16, offset: 224)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2300, file: !1111, line: 681, baseType: !141, size: 16, offset: 240)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2300, file: !1111, line: 682, baseType: !141, size: 16, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2300, file: !1111, line: 682, baseType: !784, size: 48, offset: 272)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2300, file: !1111, line: 685, baseType: !2314, size: 192, offset: 320)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1111, line: 633, size: 192, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2314, file: !1111, line: 634, baseType: !141, size: 16)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2314, file: !1111, line: 634, baseType: !141, size: 16, offset: 16)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2314, file: !1111, line: 635, baseType: !141, size: 16, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2314, file: !1111, line: 635, baseType: !141, size: 16, offset: 48)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2314, file: !1111, line: 636, baseType: !91, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2314, file: !1111, line: 636, baseType: !91, size: 32, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2314, file: !1111, line: 637, baseType: !2241, size: 64, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2300, file: !1111, line: 686, baseType: !141, size: 16, offset: 512)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2300, file: !1111, line: 686, baseType: !141, size: 16, offset: 528)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2300, file: !1111, line: 687, baseType: !91, size: 32, offset: 544)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2300, file: !1111, line: 688, baseType: !2327, size: 448, offset: 576)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1111, line: 674, baseType: !2328)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1111, line: 659, size: 448, elements: !2329)
!2329 = !{!2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2328, file: !1111, line: 660, baseType: !91, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2328, file: !1111, line: 661, baseType: !91, size: 32, offset: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2328, file: !1111, line: 662, baseType: !91, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2328, file: !1111, line: 663, baseType: !91, size: 32, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2328, file: !1111, line: 664, baseType: !91, size: 32, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2328, file: !1111, line: 665, baseType: !91, size: 32, offset: 160)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2328, file: !1111, line: 666, baseType: !91, size: 32, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2328, file: !1111, line: 667, baseType: !91, size: 32, offset: 224)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2328, file: !1111, line: 668, baseType: !91, size: 32, offset: 256)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2328, file: !1111, line: 669, baseType: !91, size: 32, offset: 288)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2328, file: !1111, line: 670, baseType: !92, size: 32, offset: 320)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2328, file: !1111, line: 671, baseType: !91, size: 32, offset: 352)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2328, file: !1111, line: 672, baseType: !91, size: 32, offset: 384)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2328, file: !1111, line: 673, baseType: !141, size: 16, offset: 416)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2328, file: !1111, line: 673, baseType: !141, size: 16, offset: 432)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2300, file: !1111, line: 692, baseType: !91, size: 32, offset: 1024)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2300, file: !1111, line: 697, baseType: !91, size: 32, offset: 1056)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2300, file: !1111, line: 703, baseType: !92, size: 32, offset: 1088)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2300, file: !1111, line: 704, baseType: !141, size: 16, offset: 1120)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2300, file: !1111, line: 704, baseType: !141, size: 16, offset: 1136)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2300, file: !1111, line: 705, baseType: !141, size: 16, offset: 1152)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2300, file: !1111, line: 706, baseType: !141, size: 16, offset: 1168)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2300, file: !1111, line: 707, baseType: !141, size: 16, offset: 1184)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2300, file: !1111, line: 708, baseType: !141, size: 16, offset: 1200)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2300, file: !1111, line: 709, baseType: !141, size: 16, offset: 1216)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2300, file: !1111, line: 709, baseType: !141, size: 16, offset: 1232)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2300, file: !1111, line: 709, baseType: !141, size: 16, offset: 1248)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2300, file: !1111, line: 709, baseType: !141, size: 16, offset: 1264)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2300, file: !1111, line: 710, baseType: !141, size: 16, offset: 1280)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2300, file: !1111, line: 711, baseType: !141, size: 16, offset: 1296)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2300, file: !1111, line: 712, baseType: !91, size: 32, offset: 1312)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2300, file: !1111, line: 713, baseType: !91, size: 32, offset: 1344)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2300, file: !1111, line: 713, baseType: !91, size: 32, offset: 1376)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2300, file: !1111, line: 713, baseType: !91, size: 32, offset: 1408)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2300, file: !1111, line: 713, baseType: !91, size: 32, offset: 1440)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1110, file: !1111, line: 1278, baseType: !2366, size: 64, offset: 36800)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1111, line: 1197, size: 64, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2366, file: !1111, line: 1199, baseType: !91, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2366, file: !1111, line: 1200, baseType: !128, size: 8, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2366, file: !1111, line: 1201, baseType: !128, size: 8, offset: 40)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2366, file: !1111, line: 1202, baseType: !141, size: 16, offset: 48)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1110, file: !1111, line: 1281, baseType: !557, size: 64, offset: 36864)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1110, file: !1111, line: 1284, baseType: !2374, size: 192, offset: 36928)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1111, line: 1208, size: 192, elements: !2375)
!2375 = !{!2376, !2377, !2378, !2379}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2374, file: !1111, line: 1209, baseType: !344, size: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2374, file: !1111, line: 1210, baseType: !92, size: 32, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2374, file: !1111, line: 1210, baseType: !92, size: 32, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2374, file: !1111, line: 1210, baseType: !92, size: 32, offset: 160)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1110, file: !1111, line: 1287, baseType: !2381, size: 64, offset: 37120)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1111, line: 62, flags: DIFlagFwdDecl)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1110, file: !1111, line: 1289, baseType: !1082, size: 64, offset: 37184)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1110, file: !1111, line: 1290, baseType: !1082, size: 64, offset: 37248)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1110, file: !1111, line: 1293, baseType: !2006, size: 1280, offset: 37312)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1110, file: !1111, line: 1294, baseType: !2057, size: 512, offset: 38592)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1110, file: !1111, line: 1295, baseType: !2388, size: 512, offset: 39104)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2007, line: 182, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2007, line: 180, size: 512, elements: !2390)
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2389, file: !2007, line: 181, baseType: !157, size: 512)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1110, file: !1111, line: 1298, baseType: !2393, size: 64, offset: 39616)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1111, line: 1298, flags: DIFlagFwdDecl)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1106, file: !105, line: 53, baseType: !92, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1106, file: !105, line: 54, baseType: !92, size: 32, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1106, file: !105, line: 55, baseType: !92, size: 32, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1106, file: !105, line: 55, baseType: !92, size: 32, offset: 160)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1106, file: !105, line: 56, baseType: !128, size: 8, offset: 192)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1106, file: !105, line: 56, baseType: !128, size: 8, offset: 200)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1106, file: !105, line: 57, baseType: !128, size: 8, offset: 208)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1106, file: !105, line: 57, baseType: !128, size: 8, offset: 216)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1106, file: !105, line: 59, baseType: !141, size: 16, offset: 224)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1106, file: !105, line: 59, baseType: !141, size: 16, offset: 240)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1106, file: !105, line: 59, baseType: !141, size: 16, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1106, file: !105, line: 61, baseType: !141, size: 16, offset: 272)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1106, file: !105, line: 63, baseType: !92, size: 32, offset: 288)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !479, file: !480, line: 293, baseType: !167, size: 128, offset: 11200)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !479, file: !480, line: 294, baseType: !2410, size: 64, offset: 11328)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !480, line: 113, baseType: !2412)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !480, line: 108, size: 256, elements: !2413)
!2413 = !{!2414, !2416, !2417, !2418, !2419}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2412, file: !480, line: 109, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2412, file: !480, line: 109, baseType: !2415, size: 64, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2412, file: !480, line: 110, baseType: !478, size: 64, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2412, file: !480, line: 111, baseType: !92, size: 32, offset: 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2412, file: !480, line: 112, baseType: !91, size: 32, offset: 224)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !471, file: !435, line: 61, baseType: !2421, size: 64, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !435, line: 202, size: 3328, elements: !2423)
!2423 = !{!2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2504, !2505, !2534, !2554, !2562, !2563}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2422, file: !435, line: 203, baseType: !108, size: 960)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2422, file: !435, line: 204, baseType: !243, size: 64, offset: 960)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2422, file: !435, line: 206, baseType: !91, size: 32, offset: 1024)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2422, file: !435, line: 206, baseType: !91, size: 32, offset: 1056)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1088)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1120)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1152)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1184)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1216)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2422, file: !435, line: 207, baseType: !91, size: 32, offset: 1248)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2422, file: !435, line: 208, baseType: !91, size: 32, offset: 1280)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2422, file: !435, line: 208, baseType: !91, size: 32, offset: 1312)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2422, file: !435, line: 211, baseType: !91, size: 32, offset: 1344)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2422, file: !435, line: 211, baseType: !91, size: 32, offset: 1376)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2422, file: !435, line: 211, baseType: !91, size: 32, offset: 1408)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2422, file: !435, line: 211, baseType: !91, size: 32, offset: 1440)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2422, file: !435, line: 211, baseType: !91, size: 32, offset: 1472)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2422, file: !435, line: 214, baseType: !91, size: 32, offset: 1504)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2422, file: !435, line: 214, baseType: !91, size: 32, offset: 1536)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2422, file: !435, line: 217, baseType: !91, size: 32, offset: 1568)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2422, file: !435, line: 218, baseType: !91, size: 32, offset: 1600)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2422, file: !435, line: 219, baseType: !91, size: 32, offset: 1632)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2422, file: !435, line: 220, baseType: !91, size: 32, offset: 1664)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2422, file: !435, line: 221, baseType: !91, size: 32, offset: 1696)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2422, file: !435, line: 222, baseType: !141, size: 16, offset: 1728)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2422, file: !435, line: 222, baseType: !141, size: 16, offset: 1744)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2422, file: !435, line: 224, baseType: !141, size: 16, offset: 1760)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2422, file: !435, line: 224, baseType: !141, size: 16, offset: 1776)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2422, file: !435, line: 227, baseType: !141, size: 16, offset: 1792)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2422, file: !435, line: 227, baseType: !141, size: 16, offset: 1808)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2422, file: !435, line: 229, baseType: !141, size: 16, offset: 1824)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2422, file: !435, line: 229, baseType: !141, size: 16, offset: 1840)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2422, file: !435, line: 230, baseType: !141, size: 16, offset: 1856)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2422, file: !435, line: 230, baseType: !141, size: 16, offset: 1872)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2422, file: !435, line: 232, baseType: !91, size: 32, offset: 1888)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2422, file: !435, line: 232, baseType: !91, size: 32, offset: 1920)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2422, file: !435, line: 232, baseType: !91, size: 32, offset: 1952)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2422, file: !435, line: 232, baseType: !91, size: 32, offset: 1984)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2422, file: !435, line: 233, baseType: !92, size: 32, offset: 2016)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2422, file: !435, line: 234, baseType: !92, size: 32, offset: 2048)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2422, file: !435, line: 235, baseType: !141, size: 16, offset: 2080)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2422, file: !435, line: 235, baseType: !141, size: 16, offset: 2096)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2422, file: !435, line: 236, baseType: !141, size: 16, offset: 2112)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2422, file: !435, line: 239, baseType: !141, size: 16, offset: 2128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2422, file: !435, line: 240, baseType: !92, size: 32, offset: 2144)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2422, file: !435, line: 241, baseType: !92, size: 32, offset: 2176)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2422, file: !435, line: 241, baseType: !92, size: 32, offset: 2208)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2422, file: !435, line: 241, baseType: !92, size: 32, offset: 2240)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2422, file: !435, line: 243, baseType: !91, size: 32, offset: 2272)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2422, file: !435, line: 243, baseType: !91, size: 32, offset: 2304)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2422, file: !435, line: 244, baseType: !91, size: 32, offset: 2336)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2422, file: !435, line: 246, baseType: !1106, size: 320, offset: 2368)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2422, file: !435, line: 248, baseType: !1210, size: 64, offset: 2688)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2422, file: !435, line: 249, baseType: !499, size: 64, offset: 2752)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2422, file: !435, line: 250, baseType: !103, size: 64, offset: 2816)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2422, file: !435, line: 251, baseType: !433, size: 64, offset: 2880)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2422, file: !435, line: 252, baseType: !2481, size: 64, offset: 2944)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !435, line: 122, size: 1600, elements: !2483)
!2483 = !{!2484, !2485, !2486, !2488, !2489, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2482, file: !435, line: 123, baseType: !478, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2482, file: !435, line: 124, baseType: !103, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2482, file: !435, line: 125, baseType: !2487, size: 384, offset: 128)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 384, elements: !2003)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2482, file: !435, line: 126, baseType: !603, size: 512, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2482, file: !435, line: 127, baseType: !2490, size: 288, offset: 1024)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 288, elements: !2491)
!2491 = !{!346, !346}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2482, file: !435, line: 128, baseType: !141, size: 16, offset: 1312)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2482, file: !435, line: 128, baseType: !141, size: 16, offset: 1328)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2482, file: !435, line: 129, baseType: !91, size: 32, offset: 1344)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2482, file: !435, line: 129, baseType: !91, size: 32, offset: 1376)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2482, file: !435, line: 130, baseType: !91, size: 32, offset: 1408)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2482, file: !435, line: 131, baseType: !7, size: 32, offset: 1440)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2482, file: !435, line: 132, baseType: !141, size: 16, offset: 1472)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2482, file: !435, line: 132, baseType: !141, size: 16, offset: 1488)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2482, file: !435, line: 133, baseType: !92, size: 32, offset: 1504)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2482, file: !435, line: 133, baseType: !92, size: 32, offset: 1536)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2482, file: !435, line: 134, baseType: !141, size: 16, offset: 1568)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2482, file: !435, line: 134, baseType: !141, size: 16, offset: 1584)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2422, file: !435, line: 253, baseType: !1197, size: 64, offset: 3008)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2422, file: !435, line: 254, baseType: !2506, size: 64, offset: 3072)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !435, line: 137, size: 832, elements: !2508)
!2508 = !{!2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2507, file: !435, line: 138, baseType: !141, size: 16)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2507, file: !435, line: 140, baseType: !141, size: 16, offset: 16)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2507, file: !435, line: 141, baseType: !91, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2507, file: !435, line: 142, baseType: !91, size: 32, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2507, file: !435, line: 143, baseType: !141, size: 16, offset: 96)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2507, file: !435, line: 144, baseType: !141, size: 16, offset: 112)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2507, file: !435, line: 145, baseType: !92, size: 32, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2507, file: !435, line: 147, baseType: !92, size: 32, offset: 160)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2507, file: !435, line: 149, baseType: !478, size: 64, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2507, file: !435, line: 150, baseType: !92, size: 32, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2507, file: !435, line: 151, baseType: !141, size: 16, offset: 288)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2507, file: !435, line: 152, baseType: !141, size: 16, offset: 304)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2507, file: !435, line: 154, baseType: !90, size: 64, offset: 320)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2507, file: !435, line: 155, baseType: !201, size: 64, offset: 384)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2507, file: !435, line: 157, baseType: !91, size: 32, offset: 448)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2507, file: !435, line: 158, baseType: !141, size: 16, offset: 480)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2507, file: !435, line: 159, baseType: !141, size: 16, offset: 496)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2507, file: !435, line: 160, baseType: !141, size: 16, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2507, file: !435, line: 161, baseType: !784, size: 48, offset: 528)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2507, file: !435, line: 162, baseType: !91, size: 32, offset: 576)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2507, file: !435, line: 164, baseType: !91, size: 32, offset: 608)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2507, file: !435, line: 164, baseType: !91, size: 32, offset: 640)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2507, file: !435, line: 164, baseType: !91, size: 32, offset: 672)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2507, file: !435, line: 165, baseType: !433, size: 64, offset: 704)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2507, file: !435, line: 167, baseType: !2017, size: 64, offset: 768)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2422, file: !435, line: 255, baseType: !2535, size: 64, offset: 3136)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !435, line: 170, size: 8704, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2536, file: !435, line: 171, baseType: !1804, size: 96)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2536, file: !435, line: 172, baseType: !92, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2536, file: !435, line: 173, baseType: !141, size: 16, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2536, file: !435, line: 174, baseType: !141, size: 16, offset: 144)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2536, file: !435, line: 175, baseType: !141, size: 16, offset: 160)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2536, file: !435, line: 176, baseType: !141, size: 16, offset: 176)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2536, file: !435, line: 177, baseType: !141, size: 16, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2536, file: !435, line: 178, baseType: !141, size: 16, offset: 208)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2536, file: !435, line: 179, baseType: !92, size: 32, offset: 224)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2536, file: !435, line: 181, baseType: !478, size: 64, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2536, file: !435, line: 182, baseType: !91, size: 32, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2536, file: !435, line: 183, baseType: !92, size: 32, offset: 352)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2536, file: !435, line: 184, baseType: !127, size: 8192, offset: 384)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2536, file: !435, line: 187, baseType: !201, size: 64, offset: 8576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2536, file: !435, line: 188, baseType: !92, size: 32, offset: 8640)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2536, file: !435, line: 189, baseType: !92, size: 32, offset: 8672)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2422, file: !435, line: 256, baseType: !2555, size: 64, offset: 3200)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !435, line: 193, size: 640, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2561}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2556, file: !435, line: 194, baseType: !478, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2556, file: !435, line: 195, baseType: !157, size: 512, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2556, file: !435, line: 197, baseType: !92, size: 32, offset: 576)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2556, file: !435, line: 198, baseType: !92, size: 32, offset: 608)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2422, file: !435, line: 258, baseType: !128, size: 8, offset: 3264)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2422, file: !435, line: 259, baseType: !1951, size: 56, offset: 3272)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !471, file: !435, line: 62, baseType: !157, size: 512, offset: 192)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !471, file: !435, line: 64, baseType: !128, size: 8, offset: 704)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !471, file: !435, line: 64, baseType: !128, size: 8, offset: 712)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !471, file: !435, line: 64, baseType: !128, size: 8, offset: 720)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !471, file: !435, line: 64, baseType: !128, size: 8, offset: 728)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !471, file: !435, line: 65, baseType: !344, size: 96, offset: 736)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !471, file: !435, line: 65, baseType: !344, size: 96, offset: 832)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !471, file: !435, line: 65, baseType: !91, size: 32, offset: 928)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !471, file: !435, line: 67, baseType: !141, size: 16, offset: 960)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !471, file: !435, line: 67, baseType: !141, size: 16, offset: 976)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !471, file: !435, line: 67, baseType: !141, size: 16, offset: 992)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !471, file: !435, line: 67, baseType: !141, size: 16, offset: 1008)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !471, file: !435, line: 68, baseType: !141, size: 16, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !471, file: !435, line: 68, baseType: !141, size: 16, offset: 1040)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !471, file: !435, line: 69, baseType: !128, size: 8, offset: 1056)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !471, file: !435, line: 69, baseType: !1951, size: 56, offset: 1064)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !471, file: !435, line: 70, baseType: !91, size: 32, offset: 1120)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !471, file: !435, line: 70, baseType: !91, size: 32, offset: 1152)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !471, file: !435, line: 70, baseType: !91, size: 32, offset: 1184)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !471, file: !435, line: 70, baseType: !91, size: 32, offset: 1216)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !471, file: !435, line: 71, baseType: !91, size: 32, offset: 1248)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !471, file: !435, line: 71, baseType: !91, size: 32, offset: 1280)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !471, file: !435, line: 74, baseType: !91, size: 32, offset: 1312)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !471, file: !435, line: 74, baseType: !91, size: 32, offset: 1344)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !471, file: !435, line: 77, baseType: !91, size: 32, offset: 1376)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !471, file: !435, line: 77, baseType: !91, size: 32, offset: 1408)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !471, file: !435, line: 77, baseType: !91, size: 32, offset: 1440)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !471, file: !435, line: 78, baseType: !91, size: 32, offset: 1472)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !471, file: !435, line: 78, baseType: !91, size: 32, offset: 1504)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !471, file: !435, line: 78, baseType: !91, size: 32, offset: 1536)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !471, file: !435, line: 79, baseType: !91, size: 32, offset: 1568)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !471, file: !435, line: 79, baseType: !91, size: 32, offset: 1600)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !471, file: !435, line: 79, baseType: !91, size: 32, offset: 1632)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !471, file: !435, line: 79, baseType: !91, size: 32, offset: 1664)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !471, file: !435, line: 80, baseType: !91, size: 32, offset: 1696)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !471, file: !435, line: 80, baseType: !91, size: 32, offset: 1728)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !471, file: !435, line: 80, baseType: !91, size: 32, offset: 1760)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !471, file: !435, line: 81, baseType: !91, size: 32, offset: 1792)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !471, file: !435, line: 81, baseType: !91, size: 32, offset: 1824)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !471, file: !435, line: 81, baseType: !91, size: 32, offset: 1856)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !471, file: !435, line: 82, baseType: !91, size: 32, offset: 1888)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !471, file: !435, line: 82, baseType: !91, size: 32, offset: 1920)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !471, file: !435, line: 82, baseType: !91, size: 32, offset: 1952)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !471, file: !435, line: 85, baseType: !91, size: 32, offset: 1984)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !471, file: !435, line: 85, baseType: !91, size: 32, offset: 2016)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !471, file: !435, line: 85, baseType: !91, size: 32, offset: 2048)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !471, file: !435, line: 85, baseType: !91, size: 32, offset: 2080)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !471, file: !435, line: 86, baseType: !91, size: 32, offset: 2112)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !471, file: !435, line: 86, baseType: !91, size: 32, offset: 2144)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !471, file: !435, line: 86, baseType: !91, size: 32, offset: 2176)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !471, file: !435, line: 86, baseType: !91, size: 32, offset: 2208)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !471, file: !435, line: 87, baseType: !91, size: 32, offset: 2240)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !471, file: !435, line: 87, baseType: !91, size: 32, offset: 2272)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !471, file: !435, line: 87, baseType: !91, size: 32, offset: 2304)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !471, file: !435, line: 87, baseType: !91, size: 32, offset: 2336)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !471, file: !435, line: 90, baseType: !91, size: 32, offset: 2368)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !471, file: !435, line: 93, baseType: !91, size: 32, offset: 2400)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !471, file: !435, line: 93, baseType: !91, size: 32, offset: 2432)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !471, file: !435, line: 93, baseType: !91, size: 32, offset: 2464)
!2623 = !{!2624}
!2624 = !DISubrange(count: 18)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !238, file: !239, line: 168, baseType: !1210, size: 64, offset: 6144)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !238, file: !239, line: 169, baseType: !499, size: 64, offset: 6208)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !238, file: !239, line: 170, baseType: !677, size: 64, offset: 6272)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !238, file: !239, line: 171, baseType: !1197, size: 64, offset: 6336)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !238, file: !239, line: 174, baseType: !91, size: 32, offset: 6400)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !238, file: !239, line: 174, baseType: !91, size: 32, offset: 6432)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !238, file: !239, line: 174, baseType: !91, size: 32, offset: 6464)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !238, file: !239, line: 175, baseType: !91, size: 32, offset: 6496)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !238, file: !239, line: 175, baseType: !91, size: 32, offset: 6528)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !238, file: !239, line: 176, baseType: !141, size: 16, offset: 6560)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !238, file: !239, line: 176, baseType: !141, size: 16, offset: 6576)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !238, file: !239, line: 179, baseType: !344, size: 96, offset: 6592)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !238, file: !239, line: 179, baseType: !344, size: 96, offset: 6688)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !238, file: !239, line: 180, baseType: !91, size: 32, offset: 6784)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !238, file: !239, line: 180, baseType: !91, size: 32, offset: 6816)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !238, file: !239, line: 180, baseType: !91, size: 32, offset: 6848)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !238, file: !239, line: 181, baseType: !91, size: 32, offset: 6880)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !238, file: !239, line: 181, baseType: !91, size: 32, offset: 6912)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !238, file: !239, line: 182, baseType: !91, size: 32, offset: 6944)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !238, file: !239, line: 182, baseType: !91, size: 32, offset: 6976)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !238, file: !239, line: 183, baseType: !141, size: 16, offset: 7008)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !238, file: !239, line: 183, baseType: !141, size: 16, offset: 7024)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !238, file: !239, line: 185, baseType: !92, size: 32, offset: 7040)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !238, file: !239, line: 186, baseType: !141, size: 16, offset: 7072)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !238, file: !239, line: 187, baseType: !141, size: 16, offset: 7088)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !238, file: !239, line: 190, baseType: !426, size: 128, offset: 7104)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !238, file: !239, line: 191, baseType: !141, size: 16, offset: 7232)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !238, file: !239, line: 192, baseType: !141, size: 16, offset: 7248)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !238, file: !239, line: 195, baseType: !141, size: 16, offset: 7264)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !238, file: !239, line: 196, baseType: !141, size: 16, offset: 7280)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !238, file: !239, line: 197, baseType: !141, size: 16, offset: 7296)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !238, file: !239, line: 198, baseType: !784, size: 48, offset: 7312)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !238, file: !239, line: 200, baseType: !2658, size: 64, offset: 7360)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !239, line: 86, size: 192, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2664}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2659, file: !239, line: 87, baseType: !103, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2659, file: !239, line: 88, baseType: !585, size: 64, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2659, file: !239, line: 89, baseType: !92, size: 32, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2659, file: !239, line: 90, baseType: !92, size: 32, offset: 160)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !238, file: !239, line: 202, baseType: !167, size: 128, offset: 7424)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !221, file: !190, line: 94, baseType: !677, size: 64, offset: 1024)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !221, file: !190, line: 96, baseType: !201, size: 64, offset: 1088)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !221, file: !190, line: 97, baseType: !201, size: 64, offset: 1152)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !221, file: !190, line: 98, baseType: !201, size: 64, offset: 1216)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !221, file: !190, line: 99, baseType: !199, size: 64, offset: 1280)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !221, file: !190, line: 101, baseType: !92, size: 32, offset: 1344)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !221, file: !190, line: 101, baseType: !92, size: 32, offset: 1376)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !221, file: !190, line: 104, baseType: !90, size: 64, offset: 1408)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !221, file: !190, line: 106, baseType: !167, size: 128, offset: 1472)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !189, file: !190, line: 137, baseType: !92, size: 32, offset: 960)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !189, file: !190, line: 140, baseType: !92, size: 32, offset: 992)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !189, file: !190, line: 143, baseType: !92, size: 32, offset: 1024)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !189, file: !190, line: 146, baseType: !585, size: 64, offset: 1088)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !104, file: !105, line: 89, baseType: !2680, size: 512, offset: 9408)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 512, elements: !1909)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !104, file: !105, line: 90, baseType: !141, size: 16, offset: 9920)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !104, file: !105, line: 90, baseType: !141, size: 16, offset: 9936)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !104, file: !105, line: 92, baseType: !141, size: 16, offset: 9952)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !104, file: !105, line: 92, baseType: !141, size: 16, offset: 9968)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !104, file: !105, line: 93, baseType: !141, size: 16, offset: 9984)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !104, file: !105, line: 93, baseType: !141, size: 16, offset: 10000)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !104, file: !105, line: 94, baseType: !92, size: 32, offset: 10016)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !104, file: !105, line: 97, baseType: !141, size: 16, offset: 10048)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !104, file: !105, line: 97, baseType: !141, size: 16, offset: 10064)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !104, file: !105, line: 98, baseType: !141, size: 16, offset: 10080)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !104, file: !105, line: 98, baseType: !141, size: 16, offset: 10096)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !104, file: !105, line: 99, baseType: !141, size: 16, offset: 10112)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !104, file: !105, line: 99, baseType: !141, size: 16, offset: 10128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !104, file: !105, line: 100, baseType: !7, size: 32, offset: 10144)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !104, file: !105, line: 101, baseType: !946, size: 64, offset: 10176)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !104, file: !105, line: 103, baseType: !134, size: 64, offset: 10240)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !104, file: !105, line: 104, baseType: !1197, size: 64, offset: 10304)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !104, file: !105, line: 107, baseType: !91, size: 32, offset: 10368)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !104, file: !105, line: 108, baseType: !92, size: 32, offset: 10400)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !104, file: !105, line: 109, baseType: !141, size: 16, offset: 10432)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !104, file: !105, line: 110, baseType: !141, size: 16, offset: 10448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !104, file: !105, line: 113, baseType: !92, size: 32, offset: 10464)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !104, file: !105, line: 113, baseType: !92, size: 32, offset: 10496)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !104, file: !105, line: 114, baseType: !128, size: 8, offset: 10528)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !104, file: !105, line: 114, baseType: !128, size: 8, offset: 10536)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !104, file: !105, line: 115, baseType: !141, size: 16, offset: 10544)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !104, file: !105, line: 116, baseType: !426, size: 128, offset: 10560)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !104, file: !105, line: 119, baseType: !91, size: 32, offset: 10688)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !104, file: !105, line: 119, baseType: !91, size: 32, offset: 10720)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !104, file: !105, line: 122, baseType: !2388, size: 512, offset: 10752)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !104, file: !105, line: 123, baseType: !128, size: 8, offset: 11264)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !104, file: !105, line: 125, baseType: !1951, size: 56, offset: 11272)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !104, file: !105, line: 126, baseType: !2714, size: 4096, offset: 11328)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2715, size: 4096, elements: !1909)
!2715 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !105, line: 69, baseType: !2716)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !105, line: 67, size: 512, elements: !2717)
!2717 = !{!2718}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2716, file: !105, line: 68, baseType: !157, size: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !95, file: !84, line: 163, baseType: !128, size: 8, offset: 320)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !95, file: !84, line: 163, baseType: !128, size: 8, offset: 328)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !95, file: !84, line: 164, baseType: !141, size: 16, offset: 336)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !95, file: !84, line: 164, baseType: !141, size: 16, offset: 352)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !95, file: !84, line: 164, baseType: !141, size: 16, offset: 368)
!2724 = !{!2725, !3135, !0}
!2725 = !DIGlobalVariableExpression(var: !2726, expr: !DIExpression())
!2726 = distinct !DIGlobalVariable(name: "imatex", scope: !2727, file: !3, line: 3477, type: !3133, isLocal: true, isDefinition: true)
!2727 = distinct !DISubprogram(name: "render_realtime_texture", scope: !3, file: !3, line: 3474, type: !2728, scopeLine: 3475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{null, !2730, !3130}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !2732, line: 186, baseType: !2733)
!2732 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !2732, line: 98, size: 11776, elements: !2734)
!2734 = !{!2735, !2736, !2760, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3074, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2733, file: !2732, line: 102, baseType: !237, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !2733, file: !2732, line: 103, baseType: !2737, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !2739, line: 400, size: 512, elements: !2740)
!2739 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2740 = !{!2741, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2738, file: !2739, line: 401, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !2739, line: 372, size: 384, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2743, file: !2739, line: 373, baseType: !344, size: 96)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2743, file: !2739, line: 374, baseType: !344, size: 96, offset: 96)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2743, file: !2739, line: 375, baseType: !201, size: 64, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2743, file: !2739, line: 376, baseType: !7, size: 32, offset: 256)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !2743, file: !2739, line: 378, baseType: !91, size: 32, offset: 288)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2743, file: !2739, line: 379, baseType: !92, size: 32, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2738, file: !2739, line: 401, baseType: !2742, size: 64, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2738, file: !2739, line: 401, baseType: !2742, size: 64, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2738, file: !2739, line: 401, baseType: !2742, size: 64, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2738, file: !2739, line: 402, baseType: !344, size: 96, offset: 256)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2738, file: !2739, line: 403, baseType: !237, size: 64, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2738, file: !2739, line: 404, baseType: !128, size: 8, offset: 448)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2738, file: !2739, line: 405, baseType: !128, size: 8, offset: 456)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !2738, file: !2739, line: 405, baseType: !128, size: 8, offset: 464)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2738, file: !2739, line: 410, baseType: !92, size: 32, offset: 480)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2733, file: !2732, line: 104, baseType: !2761, size: 64, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !2739, line: 475, size: 384, elements: !2763)
!2763 = !{!2764, !2771, !2991, !2992, !2993, !2994, !2995}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2762, file: !2739, line: 476, baseType: !2765, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !2739, line: 434, baseType: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !2739, line: 431, size: 128, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2767, file: !2739, line: 432, baseType: !344, size: 96)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2767, file: !2739, line: 433, baseType: !91, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2762, file: !2739, line: 477, baseType: !2772, size: 64, offset: 64)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !2739, line: 473, baseType: !2774)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !2739, line: 455, size: 1344, elements: !2775)
!2775 = !{!2776, !2778, !2779, !2781, !2790, !2791, !2792, !2962, !2963, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2774, file: !2739, line: 456, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2774, file: !2739, line: 456, baseType: !2777, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2774, file: !2739, line: 457, baseType: !2780, size: 64, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2774, file: !2739, line: 458, baseType: !2782, size: 64, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !2739, line: 450, size: 256, elements: !2784)
!2784 = !{!2785, !2786, !2787}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2783, file: !2739, line: 451, baseType: !92, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2783, file: !2739, line: 451, baseType: !92, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2783, file: !2739, line: 452, baseType: !2788, size: 192, offset: 64)
!2788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 192, elements: !2789)
!2789 = !{!101, !346}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2774, file: !2739, line: 459, baseType: !92, size: 32, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2774, file: !2739, line: 459, baseType: !92, size: 32, offset: 288)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2774, file: !2739, line: 461, baseType: !2793, size: 64, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !2739, line: 315, size: 2240, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2826, !2856, !2869, !2908, !2909, !2911, !2912, !2913, !2914, !2915, !2916, !2919, !2922, !2925}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2794, file: !2739, line: 316, baseType: !2793, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2794, file: !2739, line: 316, baseType: !2793, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2794, file: !2739, line: 317, baseType: !478, size: 64, offset: 128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2794, file: !2739, line: 317, baseType: !478, size: 64, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !2794, file: !2739, line: 318, baseType: !1109, size: 64, offset: 256)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2794, file: !2739, line: 319, baseType: !92, size: 32, offset: 320)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2794, file: !2739, line: 319, baseType: !92, size: 32, offset: 352)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2794, file: !2739, line: 319, baseType: !92, size: 32, offset: 384)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2794, file: !2739, line: 319, baseType: !92, size: 32, offset: 416)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2794, file: !2739, line: 321, baseType: !2788, size: 192, offset: 448)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2794, file: !2739, line: 323, baseType: !92, size: 32, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2794, file: !2739, line: 323, baseType: !92, size: 32, offset: 672)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2794, file: !2739, line: 323, baseType: !92, size: 32, offset: 704)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2794, file: !2739, line: 323, baseType: !92, size: 32, offset: 736)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !2794, file: !2739, line: 324, baseType: !92, size: 32, offset: 768)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !2794, file: !2739, line: 324, baseType: !92, size: 32, offset: 800)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !2794, file: !2739, line: 324, baseType: !92, size: 32, offset: 832)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !2794, file: !2739, line: 324, baseType: !92, size: 32, offset: 864)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !2794, file: !2739, line: 325, baseType: !2815, size: 64, offset: 896)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !2817, line: 60, size: 448, elements: !2818)
!2817 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2818 = !{!2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2816, file: !2817, line: 61, baseType: !2742, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2816, file: !2817, line: 62, baseType: !201, size: 64, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2816, file: !2817, line: 63, baseType: !201, size: 64, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2816, file: !2817, line: 64, baseType: !201, size: 64, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2816, file: !2817, line: 65, baseType: !201, size: 64, offset: 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2816, file: !2817, line: 66, baseType: !201, size: 64, offset: 320)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2816, file: !2817, line: 68, baseType: !199, size: 64, offset: 384)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !2794, file: !2739, line: 326, baseType: !2827, size: 64, offset: 960)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !2817, line: 71, size: 512, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2840, !2841, !2842, !2843, !2844, !2845}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !2828, file: !2817, line: 72, baseType: !2737, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2828, file: !2817, line: 73, baseType: !1030, size: 64, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2828, file: !2817, line: 74, baseType: !2833, size: 64, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !84, line: 74, size: 32, elements: !2835)
!2835 = !{!2836, !2837, !2838, !2839}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2834, file: !84, line: 75, baseType: !128, size: 8)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2834, file: !84, line: 75, baseType: !128, size: 8, offset: 8)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2834, file: !84, line: 75, baseType: !128, size: 8, offset: 16)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2834, file: !84, line: 75, baseType: !128, size: 8, offset: 24)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2828, file: !2817, line: 76, baseType: !199, size: 64, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !2828, file: !2817, line: 77, baseType: !92, size: 32, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2828, file: !2817, line: 77, baseType: !92, size: 32, offset: 288)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2828, file: !2817, line: 78, baseType: !201, size: 64, offset: 320)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2828, file: !2817, line: 79, baseType: !201, size: 64, offset: 384)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !2828, file: !2817, line: 80, baseType: !2846, size: 64, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !2739, line: 394, size: 448, elements: !2849)
!2849 = !{!2850, !2851, !2852, !2853, !2854, !2855}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !2848, file: !2739, line: 395, baseType: !344, size: 96)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !2848, file: !2739, line: 395, baseType: !344, size: 96, offset: 96)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !2848, file: !2739, line: 396, baseType: !344, size: 96, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !2848, file: !2739, line: 396, baseType: !344, size: 96, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2848, file: !2739, line: 396, baseType: !91, size: 32, offset: 384)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2848, file: !2739, line: 397, baseType: !92, size: 32, offset: 416)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !2794, file: !2739, line: 327, baseType: !2857, size: 64, offset: 1024)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !2817, line: 83, size: 512, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2858, file: !2817, line: 84, baseType: !2761, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2858, file: !2817, line: 85, baseType: !201, size: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2858, file: !2817, line: 86, baseType: !201, size: 64, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !2858, file: !2817, line: 87, baseType: !201, size: 64, offset: 192)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2858, file: !2817, line: 88, baseType: !199, size: 64, offset: 256)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2858, file: !2817, line: 89, baseType: !2833, size: 64, offset: 320)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2858, file: !2817, line: 90, baseType: !201, size: 64, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2858, file: !2817, line: 91, baseType: !92, size: 32, offset: 448)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2858, file: !2817, line: 91, baseType: !92, size: 32, offset: 480)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !2794, file: !2739, line: 328, baseType: !2870, size: 64, offset: 1088)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !2739, line: 413, size: 1024, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2872, file: !2739, line: 414, baseType: !141, size: 16)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !2872, file: !2739, line: 414, baseType: !141, size: 16, offset: 16)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 128)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 160)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !2872, file: !2739, line: 415, baseType: !91, size: 32, offset: 224)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2872, file: !2739, line: 415, baseType: !344, size: 96, offset: 256)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2872, file: !2739, line: 415, baseType: !344, size: 96, offset: 352)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !2872, file: !2739, line: 416, baseType: !91, size: 32, offset: 448)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2872, file: !2739, line: 416, baseType: !91, size: 32, offset: 480)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2872, file: !2739, line: 416, baseType: !91, size: 32, offset: 512)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2872, file: !2739, line: 416, baseType: !91, size: 32, offset: 544)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !2872, file: !2739, line: 417, baseType: !92, size: 32, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !2872, file: !2739, line: 417, baseType: !92, size: 32, offset: 608)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !2872, file: !2739, line: 418, baseType: !92, size: 32, offset: 640)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !2872, file: !2739, line: 419, baseType: !128, size: 8, offset: 672)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2872, file: !2739, line: 419, baseType: !128, size: 8, offset: 680)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2872, file: !2739, line: 419, baseType: !128, size: 8, offset: 688)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2872, file: !2739, line: 419, baseType: !128, size: 8, offset: 696)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2872, file: !2739, line: 420, baseType: !128, size: 8, offset: 704)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2872, file: !2739, line: 420, baseType: !128, size: 8, offset: 712)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2872, file: !2739, line: 420, baseType: !128, size: 8, offset: 720)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2872, file: !2739, line: 421, baseType: !141, size: 16, offset: 736)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2872, file: !2739, line: 422, baseType: !91, size: 32, offset: 768)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !2872, file: !2739, line: 423, baseType: !92, size: 32, offset: 800)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2872, file: !2739, line: 424, baseType: !7, size: 32, offset: 832)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2872, file: !2739, line: 425, baseType: !237, size: 64, offset: 896)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2872, file: !2739, line: 426, baseType: !2905, size: 64, offset: 960)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2907, line: 47, flags: DIFlagFwdDecl)
!2907 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !2794, file: !2739, line: 329, baseType: !2777, size: 64, offset: 1152)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2794, file: !2739, line: 331, baseType: !2910, size: 64, offset: 1216)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2794, file: !2739, line: 332, baseType: !2910, size: 64, offset: 1280)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !2794, file: !2739, line: 333, baseType: !92, size: 32, offset: 1344)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !2794, file: !2739, line: 333, baseType: !92, size: 32, offset: 1376)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !2794, file: !2739, line: 333, baseType: !92, size: 32, offset: 1408)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2794, file: !2739, line: 335, baseType: !603, size: 512, offset: 1440)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2794, file: !2739, line: 338, baseType: !2917, size: 64, offset: 1984)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !2739, line: 63, flags: DIFlagFwdDecl)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2794, file: !2739, line: 339, baseType: !2920, size: 64, offset: 2048)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !2739, line: 64, flags: DIFlagFwdDecl)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2794, file: !2739, line: 340, baseType: !2923, size: 64, offset: 2112)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !2739, line: 205, flags: DIFlagFwdDecl)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !2794, file: !2739, line: 341, baseType: !2926, size: 64, offset: 2176)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !2739, line: 345, size: 2304, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2934, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2958, !2959, !2960, !2961}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2927, file: !2739, line: 346, baseType: !2926, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2927, file: !2739, line: 346, baseType: !2926, size: 64, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2927, file: !2739, line: 348, baseType: !2932, size: 64, offset: 128)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !2739, line: 343, baseType: !2794)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2927, file: !2739, line: 349, baseType: !2935, size: 64, offset: 192)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !480, line: 295, baseType: !479)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2927, file: !2739, line: 349, baseType: !2935, size: 64, offset: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2927, file: !2739, line: 350, baseType: !92, size: 32, offset: 320)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2927, file: !2739, line: 350, baseType: !92, size: 32, offset: 352)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2927, file: !2739, line: 350, baseType: !92, size: 32, offset: 384)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2927, file: !2739, line: 352, baseType: !603, size: 512, offset: 416)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2927, file: !2739, line: 352, baseType: !603, size: 512, offset: 928)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !2927, file: !2739, line: 353, baseType: !2490, size: 288, offset: 1440)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2927, file: !2739, line: 354, baseType: !141, size: 16, offset: 1728)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !2927, file: !2739, line: 356, baseType: !344, size: 96, offset: 1760)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !2927, file: !2739, line: 356, baseType: !1101, size: 64, offset: 1856)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !2927, file: !2739, line: 357, baseType: !1016, size: 64, offset: 1920)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !2927, file: !2739, line: 359, baseType: !2949, size: 64, offset: 1984)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !2739, line: 513, size: 448, elements: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2950, file: !2739, line: 514, baseType: !1804, size: 96)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2950, file: !2739, line: 515, baseType: !201, size: 64, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2950, file: !2739, line: 515, baseType: !201, size: 64, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2950, file: !2739, line: 516, baseType: !201, size: 64, offset: 256)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2950, file: !2739, line: 517, baseType: !201, size: 64, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2950, file: !2739, line: 518, baseType: !201, size: 64, offset: 384)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !2927, file: !2739, line: 361, baseType: !201, size: 64, offset: 2048)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !2927, file: !2739, line: 362, baseType: !92, size: 32, offset: 2112)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2927, file: !2739, line: 365, baseType: !2917, size: 64, offset: 2176)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !2927, file: !2739, line: 366, baseType: !92, size: 32, offset: 2240)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2774, file: !2739, line: 462, baseType: !237, size: 64, offset: 384)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2774, file: !2739, line: 463, baseType: !2964, size: 64, offset: 448)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !2739, line: 436, size: 2880, elements: !2966)
!2966 = !{!2967, !2968, !2969, !2970, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2965, file: !2739, line: 437, baseType: !2964, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2965, file: !2739, line: 437, baseType: !2964, size: 64, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2965, file: !2739, line: 438, baseType: !2933, size: 2240, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2965, file: !2739, line: 439, baseType: !2971, size: 64, offset: 2368)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2965, file: !2739, line: 440, baseType: !988, size: 64, offset: 2432)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2965, file: !2739, line: 442, baseType: !988, size: 64, offset: 2496)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2965, file: !2739, line: 443, baseType: !988, size: 64, offset: 2560)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2965, file: !2739, line: 444, baseType: !988, size: 64, offset: 2624)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2965, file: !2739, line: 446, baseType: !988, size: 64, offset: 2688)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2965, file: !2739, line: 446, baseType: !988, size: 64, offset: 2752)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2965, file: !2739, line: 447, baseType: !92, size: 32, offset: 2816)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2965, file: !2739, line: 447, baseType: !92, size: 32, offset: 2848)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2774, file: !2739, line: 464, baseType: !7, size: 32, offset: 512)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2774, file: !2739, line: 465, baseType: !92, size: 32, offset: 544)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2774, file: !2739, line: 466, baseType: !92, size: 32, offset: 576)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2774, file: !2739, line: 466, baseType: !92, size: 32, offset: 608)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2774, file: !2739, line: 467, baseType: !91, size: 32, offset: 640)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2774, file: !2739, line: 467, baseType: !91, size: 32, offset: 672)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2774, file: !2739, line: 467, baseType: !91, size: 32, offset: 704)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2774, file: !2739, line: 469, baseType: !91, size: 32, offset: 736)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2774, file: !2739, line: 471, baseType: !603, size: 512, offset: 768)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2774, file: !2739, line: 472, baseType: !92, size: 32, offset: 1280)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2774, file: !2739, line: 472, baseType: !92, size: 32, offset: 1312)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2762, file: !2739, line: 478, baseType: !92, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2762, file: !2739, line: 478, baseType: !92, size: 32, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2762, file: !2739, line: 479, baseType: !92, size: 32, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2762, file: !2739, line: 479, baseType: !92, size: 32, offset: 224)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2762, file: !2739, line: 480, baseType: !344, size: 96, offset: 256)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2733, file: !2732, line: 105, baseType: !2926, size: 64, offset: 192)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2733, file: !2732, line: 106, baseType: !2793, size: 64, offset: 256)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2733, file: !2732, line: 107, baseType: !92, size: 32, offset: 320)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !2733, file: !2732, line: 108, baseType: !344, size: 96, offset: 352)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !2733, file: !2732, line: 109, baseType: !141, size: 16, offset: 448)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2733, file: !2732, line: 110, baseType: !2742, size: 64, offset: 512)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2733, file: !2732, line: 110, baseType: !2742, size: 64, offset: 576)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2733, file: !2732, line: 110, baseType: !2742, size: 64, offset: 640)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !2733, file: !2732, line: 111, baseType: !141, size: 16, offset: 704)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !2733, file: !2732, line: 111, baseType: !141, size: 16, offset: 720)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !2733, file: !2732, line: 111, baseType: !141, size: 16, offset: 736)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2733, file: !2732, line: 112, baseType: !141, size: 16, offset: 752)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !2733, file: !2732, line: 113, baseType: !141, size: 16, offset: 768)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !2733, file: !2732, line: 114, baseType: !344, size: 96, offset: 800)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !2733, file: !2732, line: 114, baseType: !344, size: 96, offset: 896)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !2733, file: !2732, line: 115, baseType: !344, size: 96, offset: 992)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !2733, file: !2732, line: 115, baseType: !344, size: 96, offset: 1088)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !2733, file: !2732, line: 115, baseType: !344, size: 96, offset: 1184)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2733, file: !2732, line: 116, baseType: !92, size: 32, offset: 1280)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2733, file: !2732, line: 116, baseType: !92, size: 32, offset: 1312)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1344)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1376)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1408)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1440)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1472)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !2733, file: !2732, line: 119, baseType: !91, size: 32, offset: 1504)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2733, file: !2732, line: 120, baseType: !344, size: 96, offset: 1536)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2733, file: !2732, line: 120, baseType: !344, size: 96, offset: 1632)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !2733, file: !2732, line: 120, baseType: !344, size: 96, offset: 1728)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2733, file: !2732, line: 124, baseType: !91, size: 32, offset: 1824)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2733, file: !2732, line: 124, baseType: !91, size: 32, offset: 1856)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2733, file: !2732, line: 124, baseType: !91, size: 32, offset: 1888)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2733, file: !2732, line: 125, baseType: !91, size: 32, offset: 1920)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2733, file: !2732, line: 125, baseType: !91, size: 32, offset: 1952)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2733, file: !2732, line: 125, baseType: !91, size: 32, offset: 1984)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2733, file: !2732, line: 126, baseType: !91, size: 32, offset: 2016)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2733, file: !2732, line: 126, baseType: !91, size: 32, offset: 2048)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2733, file: !2732, line: 126, baseType: !91, size: 32, offset: 2080)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2733, file: !2732, line: 127, baseType: !91, size: 32, offset: 2112)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2733, file: !2732, line: 127, baseType: !91, size: 32, offset: 2144)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2733, file: !2732, line: 127, baseType: !91, size: 32, offset: 2176)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2733, file: !2732, line: 129, baseType: !91, size: 32, offset: 2208)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2733, file: !2732, line: 129, baseType: !91, size: 32, offset: 2240)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2733, file: !2732, line: 129, baseType: !91, size: 32, offset: 2272)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2733, file: !2732, line: 129, baseType: !91, size: 32, offset: 2304)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2733, file: !2732, line: 129, baseType: !91, size: 32, offset: 2336)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2733, file: !2732, line: 130, baseType: !91, size: 32, offset: 2368)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !2733, file: !2732, line: 130, baseType: !91, size: 32, offset: 2400)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2733, file: !2732, line: 130, baseType: !91, size: 32, offset: 2432)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2733, file: !2732, line: 130, baseType: !91, size: 32, offset: 2464)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2733, file: !2732, line: 130, baseType: !91, size: 32, offset: 2496)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2733, file: !2732, line: 131, baseType: !91, size: 32, offset: 2528)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2733, file: !2732, line: 135, baseType: !92, size: 32, offset: 2560)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !2733, file: !2732, line: 138, baseType: !344, size: 96, offset: 2592)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !2733, file: !2732, line: 138, baseType: !344, size: 96, offset: 2688)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2733, file: !2732, line: 138, baseType: !344, size: 96, offset: 2784)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !2733, file: !2732, line: 138, baseType: !344, size: 96, offset: 2880)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !2733, file: !2732, line: 138, baseType: !344, size: 96, offset: 2976)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !2733, file: !2732, line: 138, baseType: !426, size: 128, offset: 3072)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !2733, file: !2732, line: 139, baseType: !426, size: 128, offset: 3200)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !2733, file: !2732, line: 139, baseType: !344, size: 96, offset: 3328)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2733, file: !2732, line: 140, baseType: !91, size: 32, offset: 3424)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !2733, file: !2732, line: 140, baseType: !344, size: 96, offset: 3456)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !2733, file: !2732, line: 140, baseType: !344, size: 96, offset: 3552)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !2733, file: !2732, line: 140, baseType: !426, size: 128, offset: 3648)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2733, file: !2732, line: 140, baseType: !91, size: 32, offset: 3776)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2733, file: !2732, line: 140, baseType: !426, size: 128, offset: 3808)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !2733, file: !2732, line: 141, baseType: !344, size: 96, offset: 3936)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !2733, file: !2732, line: 141, baseType: !344, size: 96, offset: 4032)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2733, file: !2732, line: 143, baseType: !3066, size: 3072, offset: 4160)
!3066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3067, size: 3072, elements: !1909)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !2732, line: 90, baseType: !3068)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !2732, line: 87, size: 384, elements: !3069)
!3069 = !{!3070, !3071, !3072, !3073}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !3068, file: !2732, line: 88, baseType: !344, size: 96)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !3068, file: !2732, line: 88, baseType: !344, size: 96, offset: 96)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3068, file: !2732, line: 88, baseType: !344, size: 96, offset: 192)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3068, file: !2732, line: 89, baseType: !585, size: 64, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2733, file: !2732, line: 144, baseType: !3075, size: 1536, offset: 7232)
!3075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3076, size: 1536, elements: !1909)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !2732, line: 95, baseType: !3077)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !2732, line: 92, size: 192, elements: !3078)
!3078 = !{!3079, !3080}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3077, file: !2732, line: 93, baseType: !426, size: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3077, file: !2732, line: 94, baseType: !585, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2733, file: !2732, line: 145, baseType: !92, size: 32, offset: 8768)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2733, file: !2732, line: 145, baseType: !92, size: 32, offset: 8800)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !2733, file: !2732, line: 145, baseType: !92, size: 32, offset: 8832)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !2733, file: !2732, line: 145, baseType: !92, size: 32, offset: 8864)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !2733, file: !2732, line: 148, baseType: !344, size: 96, offset: 8896)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !2733, file: !2732, line: 148, baseType: !344, size: 96, offset: 8992)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !2733, file: !2732, line: 149, baseType: !344, size: 96, offset: 9088)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !2733, file: !2732, line: 149, baseType: !344, size: 96, offset: 9184)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !2733, file: !2732, line: 149, baseType: !344, size: 96, offset: 9280)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !2733, file: !2732, line: 149, baseType: !344, size: 96, offset: 9376)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !2733, file: !2732, line: 150, baseType: !344, size: 96, offset: 9472)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !2733, file: !2732, line: 150, baseType: !344, size: 96, offset: 9568)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !2733, file: !2732, line: 150, baseType: !344, size: 96, offset: 9664)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !2733, file: !2732, line: 150, baseType: !344, size: 96, offset: 9760)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !2733, file: !2732, line: 151, baseType: !344, size: 96, offset: 9856)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !2733, file: !2732, line: 151, baseType: !344, size: 96, offset: 9952)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !2733, file: !2732, line: 151, baseType: !91, size: 32, offset: 10048)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !2733, file: !2732, line: 151, baseType: !91, size: 32, offset: 10080)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !2733, file: !2732, line: 152, baseType: !344, size: 96, offset: 10112)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !2733, file: !2732, line: 152, baseType: !344, size: 96, offset: 10208)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !2733, file: !2732, line: 153, baseType: !344, size: 96, offset: 10304)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !2733, file: !2732, line: 153, baseType: !344, size: 96, offset: 10400)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !2733, file: !2732, line: 154, baseType: !344, size: 96, offset: 10496)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !2733, file: !2732, line: 154, baseType: !344, size: 96, offset: 10592)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !2733, file: !2732, line: 155, baseType: !91, size: 32, offset: 10688)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !2733, file: !2732, line: 155, baseType: !91, size: 32, offset: 10720)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2733, file: !2732, line: 158, baseType: !344, size: 96, offset: 10752)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2733, file: !2732, line: 158, baseType: !344, size: 96, offset: 10848)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2733, file: !2732, line: 158, baseType: !344, size: 96, offset: 10944)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2733, file: !2732, line: 160, baseType: !92, size: 32, offset: 11040)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2733, file: !2732, line: 160, baseType: !92, size: 32, offset: 11072)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2733, file: !2732, line: 161, baseType: !92, size: 32, offset: 11104)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !2733, file: !2732, line: 162, baseType: !344, size: 96, offset: 11136)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !2733, file: !2732, line: 164, baseType: !92, size: 32, offset: 11232)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2733, file: !2732, line: 165, baseType: !92, size: 32, offset: 11264)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !2733, file: !2732, line: 166, baseType: !92, size: 32, offset: 11296)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2733, file: !2732, line: 169, baseType: !344, size: 96, offset: 11328)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !2733, file: !2732, line: 169, baseType: !91, size: 32, offset: 11424)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !2733, file: !2732, line: 172, baseType: !1010, size: 8, offset: 11456)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !2733, file: !2732, line: 173, baseType: !1010, size: 8, offset: 11464)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2733, file: !2732, line: 174, baseType: !141, size: 16, offset: 11472)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2733, file: !2732, line: 174, baseType: !141, size: 16, offset: 11488)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2733, file: !2732, line: 175, baseType: !141, size: 16, offset: 11504)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2733, file: !2732, line: 177, baseType: !7, size: 32, offset: 11520)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !2733, file: !2732, line: 178, baseType: !92, size: 32, offset: 11552)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !2733, file: !2732, line: 178, baseType: !92, size: 32, offset: 11584)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !2733, file: !2732, line: 178, baseType: !92, size: 32, offset: 11616)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !2733, file: !2732, line: 179, baseType: !677, size: 64, offset: 11648)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !2733, file: !2732, line: 180, baseType: !237, size: 64, offset: 11712)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !105, line: 127, baseType: !104)
!3132 = !{}
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3134, size: 3328, elements: !444)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !435, line: 261, baseType: !2422)
!3135 = !DIGlobalVariableExpression(var: !3136, expr: !DIExpression())
!3136 = distinct !DIGlobalVariable(name: "firsttime", scope: !2727, file: !3, line: 3478, type: !92, isLocal: true, isDefinition: true)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG_THREAD_ARRAY", file: !3139, line: 44, baseType: !3140)
!3139 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3140 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG_THREAD_ARRAY", file: !3139, line: 43, flags: DIFlagFwdDecl)
!3141 = !{i32 7, !"Dwarf Version", i32 4}
!3142 = !{i32 2, !"Debug Info Version", i32 3}
!3143 = !{i32 1, !"wchar_size", i32 4}
!3144 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3145 = distinct !DISubprogram(name: "RE_init_texture_rng", scope: !3, file: !3, line: 91, type: !3146, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null}
!3148 = !DILocation(line: 93, column: 21, scope: !3145)
!3149 = !DILocation(line: 93, column: 19, scope: !3145)
!3150 = !DILocation(line: 94, column: 1, scope: !3145)
!3151 = distinct !DISubprogram(name: "RE_exit_texture_rng", scope: !3, file: !3, line: 96, type: !3146, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3152 = !DILocation(line: 98, column: 24, scope: !3151)
!3153 = !DILocation(line: 98, column: 2, scope: !3151)
!3154 = !DILocation(line: 99, column: 1, scope: !3151)
!3155 = distinct !DISubprogram(name: "init_render_textures", scope: !3, file: !3, line: 134, type: !3156, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{null, !3158}
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !190, line: 58, baseType: !3160)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !2739, line: 126, size: 49920, elements: !3161)
!3161 = !{!3162, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3175, !3176, !3177, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3225, !3228, !3229, !3230, !3232, !3290, !3293, !3295, !3297, !3298, !3299, !3300, !3301, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3336, !3340, !3341, !3342, !3343, !3348, !3349, !3353, !3354, !3383, !3384, !3385, !3386, !3390, !3391, !3392, !3393, !3394, !3397, !3398}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3160, file: !2739, line: 128, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3160, file: !2739, line: 128, baseType: !3163, size: 64, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3160, file: !2739, line: 129, baseType: !227, size: 592, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3160, file: !2739, line: 130, baseType: !92, size: 32, offset: 736)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3160, file: !2739, line: 133, baseType: !141, size: 16, offset: 768)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !3160, file: !2739, line: 133, baseType: !141, size: 16, offset: 784)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3160, file: !2739, line: 133, baseType: !141, size: 16, offset: 800)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !3160, file: !2739, line: 133, baseType: !141, size: 16, offset: 816)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !3160, file: !2739, line: 136, baseType: !1010, size: 8, offset: 832)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3160, file: !2739, line: 139, baseType: !3173, size: 64, offset: 896)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !190, line: 148, baseType: !189)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !3160, file: !2739, line: 141, baseType: !3173, size: 64, offset: 960)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !3160, file: !2739, line: 143, baseType: !167, size: 128, offset: 1024)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !3160, file: !2739, line: 147, baseType: !3178, size: 32, offset: 1152)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !3179, line: 148, baseType: !3180)
!3179 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !3181, line: 10, baseType: !3182)
!3181 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1083, line: 26, baseType: !3183)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1085, line: 42, baseType: !7)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3160, file: !2739, line: 150, baseType: !92, size: 32, offset: 1184)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3160, file: !2739, line: 150, baseType: !92, size: 32, offset: 1216)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !3160, file: !2739, line: 152, baseType: !204, size: 128, offset: 1248)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !3160, file: !2739, line: 153, baseType: !1627, size: 128, offset: 1376)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !3160, file: !2739, line: 154, baseType: !91, size: 32, offset: 1504)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !3160, file: !2739, line: 154, baseType: !91, size: 32, offset: 1536)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !3160, file: !2739, line: 155, baseType: !91, size: 32, offset: 1568)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !3160, file: !2739, line: 158, baseType: !92, size: 32, offset: 1600)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !3160, file: !2739, line: 158, baseType: !92, size: 32, offset: 1632)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !3160, file: !2739, line: 162, baseType: !92, size: 32, offset: 1664)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !3160, file: !2739, line: 162, baseType: !92, size: 32, offset: 1696)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !3160, file: !2739, line: 165, baseType: !91, size: 32, offset: 1728)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !3160, file: !2739, line: 167, baseType: !91, size: 32, offset: 1760)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !3160, file: !2739, line: 167, baseType: !91, size: 32, offset: 1792)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !3160, file: !2739, line: 167, baseType: !91, size: 32, offset: 1824)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !3160, file: !2739, line: 167, baseType: !91, size: 32, offset: 1856)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !3160, file: !2739, line: 167, baseType: !91, size: 32, offset: 1888)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !3160, file: !2739, line: 170, baseType: !344, size: 96, offset: 1920)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3160, file: !2739, line: 171, baseType: !2490, size: 288, offset: 2016)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !3160, file: !2739, line: 172, baseType: !603, size: 512, offset: 2304)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !3160, file: !2739, line: 172, baseType: !603, size: 512, offset: 2816)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !3160, file: !2739, line: 173, baseType: !603, size: 512, offset: 3328)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3160, file: !2739, line: 174, baseType: !603, size: 512, offset: 3840)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3160, file: !2739, line: 177, baseType: !91, size: 32, offset: 4352)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3160, file: !2739, line: 178, baseType: !91, size: 32, offset: 4384)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !3160, file: !2739, line: 181, baseType: !3210, size: 64, offset: 4416)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !2739, line: 77, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !2739, line: 72, size: 3776, elements: !3213)
!3213 = !{!3214, !3218, !3222, !3223, !3224}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !3212, file: !2739, line: 73, baseType: !3215, size: 512)
!3215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 512, elements: !3216)
!3216 = !{!3217}
!3217 = !DISubrange(count: 16)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !3212, file: !2739, line: 74, baseType: !3219, size: 576, offset: 512)
!3219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 576, elements: !3220)
!3220 = !{!3221}
!3221 = !DISubrange(count: 9)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !3212, file: !2739, line: 74, baseType: !3219, size: 576, offset: 1088)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !3212, file: !2739, line: 75, baseType: !1225, size: 2048, offset: 1664)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !3212, file: !2739, line: 75, baseType: !585, size: 64, offset: 3712)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !3160, file: !2739, line: 182, baseType: !3226, size: 2048, offset: 4480)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 2048, elements: !3227)
!3227 = !{!458, !101}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !3160, file: !2739, line: 183, baseType: !3226, size: 2048, offset: 6528)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !3160, file: !2739, line: 184, baseType: !1093, size: 64, offset: 8576)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !3160, file: !2739, line: 187, baseType: !3231, size: 32, offset: 8640)
!3231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 32, elements: !444)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3160, file: !2739, line: 190, baseType: !3233, size: 64, offset: 8704)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3235, line: 53, size: 15232, elements: !3236)
!3235 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3236 = !{!3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3287}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3234, file: !3235, line: 54, baseType: !3233, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3234, file: !3235, line: 54, baseType: !3233, size: 64, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3234, file: !3235, line: 55, baseType: !127, size: 8192, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3234, file: !3235, line: 56, baseType: !141, size: 16, offset: 8320)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3234, file: !3235, line: 56, baseType: !141, size: 16, offset: 8336)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3234, file: !3235, line: 57, baseType: !141, size: 16, offset: 8352)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3234, file: !3235, line: 57, baseType: !141, size: 16, offset: 8368)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3234, file: !3235, line: 58, baseType: !1082, size: 64, offset: 8384)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3234, file: !3235, line: 59, baseType: !3246, size: 128, offset: 8448)
!3246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 128, elements: !3216)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3234, file: !3235, line: 60, baseType: !141, size: 16, offset: 8576)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3234, file: !3235, line: 62, baseType: !117, size: 64, offset: 8640)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3234, file: !3235, line: 63, baseType: !167, size: 128, offset: 8704)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3234, file: !3235, line: 64, baseType: !167, size: 128, offset: 8832)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3234, file: !3235, line: 65, baseType: !167, size: 128, offset: 8960)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3234, file: !3235, line: 66, baseType: !167, size: 128, offset: 9088)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3234, file: !3235, line: 67, baseType: !167, size: 128, offset: 9216)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3234, file: !3235, line: 68, baseType: !167, size: 128, offset: 9344)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3234, file: !3235, line: 69, baseType: !167, size: 128, offset: 9472)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3234, file: !3235, line: 70, baseType: !167, size: 128, offset: 9600)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3234, file: !3235, line: 71, baseType: !167, size: 128, offset: 9728)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3234, file: !3235, line: 72, baseType: !167, size: 128, offset: 9856)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3234, file: !3235, line: 73, baseType: !167, size: 128, offset: 9984)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3234, file: !3235, line: 74, baseType: !167, size: 128, offset: 10112)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3234, file: !3235, line: 75, baseType: !167, size: 128, offset: 10240)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3234, file: !3235, line: 76, baseType: !167, size: 128, offset: 10368)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3234, file: !3235, line: 77, baseType: !167, size: 128, offset: 10496)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3234, file: !3235, line: 78, baseType: !167, size: 128, offset: 10624)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3234, file: !3235, line: 79, baseType: !167, size: 128, offset: 10752)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3234, file: !3235, line: 80, baseType: !167, size: 128, offset: 10880)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3234, file: !3235, line: 81, baseType: !167, size: 128, offset: 11008)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3234, file: !3235, line: 82, baseType: !167, size: 128, offset: 11136)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3234, file: !3235, line: 83, baseType: !167, size: 128, offset: 11264)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3234, file: !3235, line: 84, baseType: !167, size: 128, offset: 11392)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3234, file: !3235, line: 85, baseType: !167, size: 128, offset: 11520)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3234, file: !3235, line: 86, baseType: !167, size: 128, offset: 11648)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3234, file: !3235, line: 87, baseType: !167, size: 128, offset: 11776)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3234, file: !3235, line: 88, baseType: !167, size: 128, offset: 11904)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3234, file: !3235, line: 89, baseType: !167, size: 128, offset: 12032)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3234, file: !3235, line: 90, baseType: !167, size: 128, offset: 12160)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3234, file: !3235, line: 91, baseType: !167, size: 128, offset: 12288)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3234, file: !3235, line: 92, baseType: !167, size: 128, offset: 12416)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3234, file: !3235, line: 93, baseType: !167, size: 128, offset: 12544)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3234, file: !3235, line: 94, baseType: !167, size: 128, offset: 12672)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3234, file: !3235, line: 95, baseType: !167, size: 128, offset: 12800)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3234, file: !3235, line: 96, baseType: !167, size: 128, offset: 12928)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3234, file: !3235, line: 98, baseType: !1225, size: 2048, offset: 13056)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3234, file: !3235, line: 101, baseType: !3285, size: 64, offset: 15104)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3235, line: 49, flags: DIFlagFwdDecl)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3234, file: !3235, line: 103, baseType: !3288, size: 64, offset: 15168)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3235, line: 51, flags: DIFlagFwdDecl)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3160, file: !2739, line: 191, baseType: !3291, size: 64, offset: 8768)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1111, line: 1299, baseType: !1110)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3160, file: !2739, line: 192, baseType: !3294, size: 31872, offset: 8832)
!3294 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !1111, line: 611, baseType: !1983)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !3160, file: !2739, line: 193, baseType: !3296, size: 4224, offset: 40704)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !1119, line: 131, baseType: !1118)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !3160, file: !2739, line: 194, baseType: !478, size: 64, offset: 44928)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3160, file: !2739, line: 195, baseType: !7, size: 32, offset: 44992)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !3160, file: !2739, line: 195, baseType: !7, size: 32, offset: 45024)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !3160, file: !2739, line: 197, baseType: !167, size: 128, offset: 45056)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !3160, file: !2739, line: 200, baseType: !3302, size: 64, offset: 45184)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2739, line: 65, flags: DIFlagFwdDecl)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3160, file: !2739, line: 203, baseType: !2917, size: 64, offset: 45248)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !3160, file: !2739, line: 204, baseType: !2920, size: 64, offset: 45312)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !3160, file: !2739, line: 205, baseType: !2923, size: 64, offset: 45376)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !3160, file: !2739, line: 206, baseType: !91, size: 32, offset: 45440)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !3160, file: !2739, line: 209, baseType: !90, size: 64, offset: 45504)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !3160, file: !2739, line: 210, baseType: !167, size: 128, offset: 45568)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !3160, file: !2739, line: 213, baseType: !91, size: 32, offset: 45696)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !3160, file: !2739, line: 213, baseType: !91, size: 32, offset: 45728)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !3160, file: !2739, line: 216, baseType: !92, size: 32, offset: 45760)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3160, file: !2739, line: 216, baseType: !92, size: 32, offset: 45792)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3160, file: !2739, line: 216, baseType: !92, size: 32, offset: 45824)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3160, file: !2739, line: 216, baseType: !92, size: 32, offset: 45856)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3160, file: !2739, line: 216, baseType: !92, size: 32, offset: 45888)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !3160, file: !2739, line: 217, baseType: !2870, size: 64, offset: 45952)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !3160, file: !2739, line: 219, baseType: !167, size: 128, offset: 46016)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !3160, file: !2739, line: 220, baseType: !167, size: 128, offset: 46144)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !3160, file: !2739, line: 222, baseType: !167, size: 128, offset: 46272)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !3160, file: !2739, line: 224, baseType: !2926, size: 64, offset: 46400)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !3160, file: !2739, line: 225, baseType: !167, size: 128, offset: 46464)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !3160, file: !2739, line: 226, baseType: !92, size: 32, offset: 46592)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !3160, file: !2739, line: 228, baseType: !103, size: 64, offset: 46656)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !3160, file: !2739, line: 230, baseType: !520, size: 64, offset: 46720)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !3160, file: !2739, line: 232, baseType: !520, size: 64, offset: 46784)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !3160, file: !2739, line: 233, baseType: !1093, size: 64, offset: 46848)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !3160, file: !2739, line: 234, baseType: !237, size: 64, offset: 46912)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !3160, file: !2739, line: 236, baseType: !167, size: 128, offset: 46976)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !3160, file: !2739, line: 238, baseType: !478, size: 64, offset: 47104)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !3160, file: !2739, line: 239, baseType: !167, size: 128, offset: 47168)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !3160, file: !2739, line: 240, baseType: !167, size: 128, offset: 47296)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !3160, file: !2739, line: 250, baseType: !3334, size: 64, offset: 47424)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2739, line: 57, flags: DIFlagFwdDecl)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !3160, file: !2739, line: 253, baseType: !3337, size: 64, offset: 47488)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{null, !90, !3173}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !3160, file: !2739, line: 254, baseType: !90, size: 64, offset: 47552)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !3160, file: !2739, line: 255, baseType: !3337, size: 64, offset: 47616)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !3160, file: !2739, line: 256, baseType: !90, size: 64, offset: 47680)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !3160, file: !2739, line: 257, baseType: !3344, size: 64, offset: 47744)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{null, !90, !3173, !3347}
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !3160, file: !2739, line: 258, baseType: !90, size: 64, offset: 47808)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !3160, file: !2739, line: 259, baseType: !3350, size: 64, offset: 47872)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{null, !90, !1109}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !3160, file: !2739, line: 260, baseType: !90, size: 64, offset: 47936)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !3160, file: !2739, line: 262, baseType: !3355, size: 64, offset: 48000)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !90, !3358}
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !190, line: 160, baseType: !3360)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !190, line: 151, size: 1216, elements: !3361)
!3361 = !{!3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3360, file: !190, line: 152, baseType: !92, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 96)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 160)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3360, file: !190, line: 153, baseType: !92, size: 32, offset: 192)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 224)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 240)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 272)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 288)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !3360, file: !190, line: 154, baseType: !141, size: 16, offset: 304)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !3360, file: !190, line: 155, baseType: !1010, size: 8, offset: 320)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !3360, file: !190, line: 156, baseType: !1469, size: 64, offset: 384)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !3360, file: !190, line: 156, baseType: !1469, size: 64, offset: 448)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !3360, file: !190, line: 157, baseType: !1322, size: 64, offset: 512)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !3360, file: !190, line: 157, baseType: !1322, size: 64, offset: 576)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !3360, file: !190, line: 158, baseType: !157, size: 512, offset: 640)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !3360, file: !190, line: 159, baseType: !91, size: 32, offset: 1152)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !3360, file: !190, line: 159, baseType: !91, size: 32, offset: 1184)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !3160, file: !2739, line: 263, baseType: !90, size: 64, offset: 48064)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !3160, file: !2739, line: 264, baseType: !1708, size: 64, offset: 48128)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !3160, file: !2739, line: 265, baseType: !90, size: 64, offset: 48192)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !3160, file: !2739, line: 267, baseType: !3387, size: 64, offset: 48256)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{null, !90, !92}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !3160, file: !2739, line: 268, baseType: !90, size: 64, offset: 48320)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !3160, file: !2739, line: 269, baseType: !1716, size: 64, offset: 48384)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !3160, file: !2739, line: 270, baseType: !90, size: 64, offset: 48448)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3160, file: !2739, line: 272, baseType: !3359, size: 1216, offset: 48512)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3160, file: !2739, line: 274, baseType: !3395, size: 64, offset: 49728)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !1312, line: 46, flags: DIFlagFwdDecl)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3160, file: !2739, line: 276, baseType: !2905, size: 64, offset: 49792)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3160, file: !2739, line: 277, baseType: !3285, size: 64, offset: 49856)
!3399 = !DILocalVariable(name: "re", arg: 1, scope: !3155, file: !3, line: 134, type: !3158)
!3400 = !DILocation(line: 134, column: 35, scope: !3155)
!3401 = !DILocalVariable(name: "tex", scope: !3155, file: !3, line: 136, type: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3403 = !DILocation(line: 136, column: 7, scope: !3155)
!3404 = !DILocation(line: 138, column: 7, scope: !3155)
!3405 = !DILocation(line: 138, column: 11, scope: !3155)
!3406 = !DILocation(line: 138, column: 17, scope: !3155)
!3407 = !DILocation(line: 138, column: 21, scope: !3155)
!3408 = !DILocation(line: 138, column: 5, scope: !3155)
!3409 = !DILocation(line: 139, column: 2, scope: !3155)
!3410 = !DILocation(line: 139, column: 9, scope: !3155)
!3411 = !DILocation(line: 140, column: 7, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 140, column: 7)
!3413 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 139, column: 14)
!3414 = !DILocation(line: 140, column: 12, scope: !3412)
!3415 = !DILocation(line: 140, column: 15, scope: !3412)
!3416 = !DILocation(line: 140, column: 7, scope: !3413)
!3417 = !DILocation(line: 140, column: 39, scope: !3412)
!3418 = !DILocation(line: 140, column: 43, scope: !3412)
!3419 = !DILocation(line: 140, column: 19, scope: !3412)
!3420 = !DILocation(line: 141, column: 8, scope: !3413)
!3421 = !DILocation(line: 141, column: 13, scope: !3413)
!3422 = !DILocation(line: 141, column: 16, scope: !3413)
!3423 = !DILocation(line: 141, column: 6, scope: !3413)
!3424 = distinct !{!3424, !3409, !3425}
!3425 = !DILocation(line: 142, column: 2, scope: !3155)
!3426 = !DILocation(line: 143, column: 1, scope: !3155)
!3427 = distinct !DISubprogram(name: "init_render_texture", scope: !3, file: !3, line: 102, type: !3428, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !3158, !3402}
!3430 = !DILocalVariable(name: "re", arg: 1, scope: !3427, file: !3, line: 102, type: !3158)
!3431 = !DILocation(line: 102, column: 41, scope: !3427)
!3432 = !DILocalVariable(name: "tex", arg: 2, scope: !3427, file: !3, line: 102, type: !3402)
!3433 = !DILocation(line: 102, column: 50, scope: !3427)
!3434 = !DILocation(line: 105, column: 6, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 105, column: 6)
!3436 = !DILocation(line: 105, column: 11, scope: !3435)
!3437 = !DILocation(line: 105, column: 15, scope: !3435)
!3438 = !DILocation(line: 105, column: 40, scope: !3435)
!3439 = !DILocation(line: 105, column: 45, scope: !3435)
!3440 = !DILocation(line: 105, column: 18, scope: !3435)
!3441 = !DILocation(line: 105, column: 6, scope: !3427)
!3442 = !DILocation(line: 106, column: 30, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 105, column: 51)
!3444 = !DILocation(line: 106, column: 35, scope: !3443)
!3445 = !DILocation(line: 106, column: 42, scope: !3443)
!3446 = !DILocation(line: 106, column: 47, scope: !3443)
!3447 = !DILocation(line: 106, column: 51, scope: !3443)
!3448 = !DILocation(line: 106, column: 53, scope: !3443)
!3449 = !DILocation(line: 106, column: 63, scope: !3443)
!3450 = !DILocation(line: 106, column: 68, scope: !3443)
!3451 = !DILocation(line: 106, column: 72, scope: !3443)
!3452 = !DILocation(line: 106, column: 77, scope: !3443)
!3453 = !DILocation(line: 106, column: 3, scope: !3443)
!3454 = !DILocation(line: 107, column: 2, scope: !3443)
!3455 = !DILocation(line: 109, column: 11, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 109, column: 11)
!3457 = !DILocation(line: 109, column: 16, scope: !3456)
!3458 = !DILocation(line: 109, column: 20, scope: !3456)
!3459 = !DILocation(line: 109, column: 11, scope: !3435)
!3460 = !DILocation(line: 111, column: 3, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 109, column: 34)
!3462 = !DILocation(line: 111, column: 8, scope: !3461)
!3463 = !DILocation(line: 111, column: 16, scope: !3461)
!3464 = !DILocation(line: 112, column: 3, scope: !3461)
!3465 = !DILocation(line: 112, column: 8, scope: !3461)
!3466 = !DILocation(line: 112, column: 14, scope: !3461)
!3467 = !DILocation(line: 114, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 114, column: 7)
!3469 = !DILocation(line: 114, column: 12, scope: !3468)
!3470 = !DILocation(line: 114, column: 7, scope: !3461)
!3471 = !DILocation(line: 115, column: 8, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 115, column: 8)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 114, column: 17)
!3474 = !DILocation(line: 115, column: 13, scope: !3472)
!3475 = !DILocation(line: 115, column: 18, scope: !3472)
!3476 = !DILocation(line: 115, column: 22, scope: !3472)
!3477 = !DILocation(line: 115, column: 8, scope: !3473)
!3478 = !DILocation(line: 116, column: 5, scope: !3472)
!3479 = !DILocation(line: 116, column: 10, scope: !3472)
!3480 = !DILocation(line: 116, column: 16, scope: !3472)
!3481 = !DILocation(line: 119, column: 10, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 119, column: 8)
!3483 = !DILocation(line: 119, column: 8, scope: !3482)
!3484 = !DILocation(line: 119, column: 23, scope: !3482)
!3485 = !DILocation(line: 119, column: 26, scope: !3482)
!3486 = !DILocation(line: 119, column: 8, scope: !3473)
!3487 = !DILocation(line: 120, column: 9, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 120, column: 9)
!3489 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 119, column: 30)
!3490 = !DILocation(line: 120, column: 13, scope: !3488)
!3491 = !DILocation(line: 120, column: 15, scope: !3488)
!3492 = !DILocation(line: 120, column: 20, scope: !3488)
!3493 = !DILocation(line: 120, column: 9, scope: !3489)
!3494 = !DILocation(line: 121, column: 10, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 121, column: 10)
!3496 = !DILocation(line: 121, column: 15, scope: !3495)
!3497 = !DILocation(line: 121, column: 20, scope: !3495)
!3498 = !DILocation(line: 121, column: 25, scope: !3495)
!3499 = !DILocation(line: 121, column: 10, scope: !3488)
!3500 = !DILocation(line: 122, column: 27, scope: !3495)
!3501 = !DILocation(line: 122, column: 32, scope: !3495)
!3502 = !DILocation(line: 122, column: 7, scope: !3495)
!3503 = !DILocation(line: 121, column: 27, scope: !3495)
!3504 = !DILocation(line: 123, column: 4, scope: !3489)
!3505 = !DILocation(line: 124, column: 3, scope: !3473)
!3506 = !DILocation(line: 125, column: 2, scope: !3461)
!3507 = !DILocation(line: 127, column: 6, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 127, column: 6)
!3509 = !DILocation(line: 127, column: 11, scope: !3508)
!3510 = !DILocation(line: 127, column: 20, scope: !3508)
!3511 = !DILocation(line: 127, column: 23, scope: !3508)
!3512 = !DILocation(line: 127, column: 28, scope: !3508)
!3513 = !DILocation(line: 127, column: 6, scope: !3427)
!3514 = !DILocation(line: 128, column: 25, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 127, column: 39)
!3516 = !DILocation(line: 128, column: 30, scope: !3515)
!3517 = !DILocation(line: 128, column: 3, scope: !3515)
!3518 = !DILocation(line: 129, column: 2, scope: !3515)
!3519 = !DILocation(line: 130, column: 1, scope: !3427)
!3520 = distinct !DISubprogram(name: "end_render_textures", scope: !3, file: !3, line: 151, type: !3156, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3521 = !DILocalVariable(name: "re", arg: 1, scope: !3520, file: !3, line: 151, type: !3158)
!3522 = !DILocation(line: 151, column: 34, scope: !3520)
!3523 = !DILocalVariable(name: "tex", scope: !3520, file: !3, line: 153, type: !3402)
!3524 = !DILocation(line: 153, column: 7, scope: !3520)
!3525 = !DILocation(line: 154, column: 12, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 154, column: 2)
!3527 = !DILocation(line: 154, column: 16, scope: !3526)
!3528 = !DILocation(line: 154, column: 22, scope: !3526)
!3529 = !DILocation(line: 154, column: 26, scope: !3526)
!3530 = !DILocation(line: 154, column: 10, scope: !3526)
!3531 = !DILocation(line: 154, column: 7, scope: !3526)
!3532 = !DILocation(line: 154, column: 33, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 154, column: 2)
!3534 = !DILocation(line: 154, column: 2, scope: !3526)
!3535 = !DILocation(line: 155, column: 7, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 155, column: 7)
!3537 = !DILocation(line: 155, column: 12, scope: !3536)
!3538 = !DILocation(line: 155, column: 15, scope: !3536)
!3539 = !DILocation(line: 155, column: 7, scope: !3533)
!3540 = !DILocation(line: 156, column: 23, scope: !3536)
!3541 = !DILocation(line: 156, column: 4, scope: !3536)
!3542 = !DILocation(line: 154, column: 43, scope: !3533)
!3543 = !DILocation(line: 154, column: 48, scope: !3533)
!3544 = !DILocation(line: 154, column: 51, scope: !3533)
!3545 = !DILocation(line: 154, column: 41, scope: !3533)
!3546 = !DILocation(line: 154, column: 2, scope: !3533)
!3547 = distinct !{!3547, !3534, !3548}
!3548 = !DILocation(line: 156, column: 26, scope: !3526)
!3549 = !DILocation(line: 157, column: 1, scope: !3520)
!3550 = distinct !DISubprogram(name: "end_render_texture", scope: !3, file: !3, line: 145, type: !3551, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3402}
!3553 = !DILocalVariable(name: "tex", arg: 1, scope: !3550, file: !3, line: 145, type: !3402)
!3554 = !DILocation(line: 145, column: 37, scope: !3550)
!3555 = !DILocation(line: 147, column: 6, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 147, column: 6)
!3557 = !DILocation(line: 147, column: 10, scope: !3556)
!3558 = !DILocation(line: 147, column: 13, scope: !3556)
!3559 = !DILocation(line: 147, column: 18, scope: !3556)
!3560 = !DILocation(line: 147, column: 28, scope: !3556)
!3561 = !DILocation(line: 147, column: 31, scope: !3556)
!3562 = !DILocation(line: 147, column: 36, scope: !3556)
!3563 = !DILocation(line: 147, column: 45, scope: !3556)
!3564 = !DILocation(line: 147, column: 48, scope: !3556)
!3565 = !DILocation(line: 147, column: 53, scope: !3556)
!3566 = !DILocation(line: 147, column: 63, scope: !3556)
!3567 = !DILocation(line: 147, column: 6, scope: !3550)
!3568 = !DILocation(line: 148, column: 23, scope: !3556)
!3569 = !DILocation(line: 148, column: 28, scope: !3556)
!3570 = !DILocation(line: 148, column: 38, scope: !3556)
!3571 = !DILocation(line: 148, column: 3, scope: !3556)
!3572 = !DILocation(line: 149, column: 1, scope: !3550)
!3573 = distinct !DISubprogram(name: "multitex_nodes", scope: !3, file: !3, line: 1298, type: !3574, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!92, !3402, !201, !201, !201, !92, !3576, !956, !141, !2730, !3587, !2905}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexResult", file: !2732, line: 45, baseType: !3578)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexResult", file: !2732, line: 41, size: 256, elements: !3579)
!3579 = !{!3580, !3581, !3582, !3583, !3584, !3585, !3586}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "tin", scope: !3578, file: !2732, line: 42, baseType: !91, size: 32)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "tr", scope: !3578, file: !2732, line: 42, baseType: !91, size: 32, offset: 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "tg", scope: !3578, file: !2732, line: 42, baseType: !91, size: 32, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !3578, file: !2732, line: 42, baseType: !91, size: 32, offset: 96)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "ta", scope: !3578, file: !2732, line: 42, baseType: !91, size: 32, offset: 128)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "talpha", scope: !3578, file: !2732, line: 43, baseType: !92, size: 32, offset: 160)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3578, file: !2732, line: 44, baseType: !201, size: 64, offset: 192)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !435, line: 94, baseType: !471)
!3589 = !DILocalVariable(name: "tex", arg: 1, scope: !3573, file: !3, line: 1298, type: !3402)
!3590 = !DILocation(line: 1298, column: 25, scope: !3573)
!3591 = !DILocalVariable(name: "texvec", arg: 2, scope: !3573, file: !3, line: 1298, type: !201)
!3592 = !DILocation(line: 1298, column: 36, scope: !3573)
!3593 = !DILocalVariable(name: "dxt", arg: 3, scope: !3573, file: !3, line: 1298, type: !201)
!3594 = !DILocation(line: 1298, column: 53, scope: !3573)
!3595 = !DILocalVariable(name: "dyt", arg: 4, scope: !3573, file: !3, line: 1298, type: !201)
!3596 = !DILocation(line: 1298, column: 67, scope: !3573)
!3597 = !DILocalVariable(name: "osatex", arg: 5, scope: !3573, file: !3, line: 1298, type: !92)
!3598 = !DILocation(line: 1298, column: 79, scope: !3573)
!3599 = !DILocalVariable(name: "texres", arg: 6, scope: !3573, file: !3, line: 1298, type: !3576)
!3600 = !DILocation(line: 1298, column: 98, scope: !3573)
!3601 = !DILocalVariable(name: "thread", arg: 7, scope: !3573, file: !3, line: 1299, type: !956)
!3602 = !DILocation(line: 1299, column: 32, scope: !3573)
!3603 = !DILocalVariable(name: "which_output", arg: 8, scope: !3573, file: !3, line: 1299, type: !141)
!3604 = !DILocation(line: 1299, column: 46, scope: !3573)
!3605 = !DILocalVariable(name: "shi", arg: 9, scope: !3573, file: !3, line: 1299, type: !2730)
!3606 = !DILocation(line: 1299, column: 72, scope: !3573)
!3607 = !DILocalVariable(name: "mtex", arg: 10, scope: !3573, file: !3, line: 1299, type: !3587)
!3608 = !DILocation(line: 1299, column: 83, scope: !3573)
!3609 = !DILocalVariable(name: "pool", arg: 11, scope: !3573, file: !3, line: 1299, type: !2905)
!3610 = !DILocation(line: 1299, column: 107, scope: !3573)
!3611 = !DILocation(line: 1301, column: 31, scope: !3573)
!3612 = !DILocation(line: 1301, column: 36, scope: !3573)
!3613 = !DILocation(line: 1301, column: 44, scope: !3573)
!3614 = !DILocation(line: 1301, column: 49, scope: !3573)
!3615 = !DILocation(line: 1301, column: 54, scope: !3573)
!3616 = !DILocation(line: 1301, column: 62, scope: !3573)
!3617 = !DILocation(line: 1302, column: 31, scope: !3573)
!3618 = !DILocation(line: 1302, column: 39, scope: !3573)
!3619 = !DILocation(line: 1302, column: 53, scope: !3573)
!3620 = !DILocation(line: 1302, column: 58, scope: !3573)
!3621 = !DILocation(line: 1302, column: 64, scope: !3573)
!3622 = !DILocation(line: 1302, column: 72, scope: !3573)
!3623 = !DILocation(line: 1301, column: 9, scope: !3573)
!3624 = !DILocation(line: 1301, column: 2, scope: !3573)
!3625 = distinct !DISubprogram(name: "multitex_nodes_intern", scope: !3, file: !3, line: 1224, type: !3626, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!92, !3402, !201, !201, !201, !92, !3576, !956, !141, !2730, !3587, !2905, !1010}
!3628 = !DILocalVariable(name: "tex", arg: 1, scope: !3625, file: !3, line: 1224, type: !3402)
!3629 = !DILocation(line: 1224, column: 39, scope: !3625)
!3630 = !DILocalVariable(name: "texvec", arg: 2, scope: !3625, file: !3, line: 1224, type: !201)
!3631 = !DILocation(line: 1224, column: 50, scope: !3625)
!3632 = !DILocalVariable(name: "dxt", arg: 3, scope: !3625, file: !3, line: 1224, type: !201)
!3633 = !DILocation(line: 1224, column: 67, scope: !3625)
!3634 = !DILocalVariable(name: "dyt", arg: 4, scope: !3625, file: !3, line: 1224, type: !201)
!3635 = !DILocation(line: 1224, column: 81, scope: !3625)
!3636 = !DILocalVariable(name: "osatex", arg: 5, scope: !3625, file: !3, line: 1224, type: !92)
!3637 = !DILocation(line: 1224, column: 93, scope: !3625)
!3638 = !DILocalVariable(name: "texres", arg: 6, scope: !3625, file: !3, line: 1224, type: !3576)
!3639 = !DILocation(line: 1224, column: 112, scope: !3625)
!3640 = !DILocalVariable(name: "thread", arg: 7, scope: !3625, file: !3, line: 1225, type: !956)
!3641 = !DILocation(line: 1225, column: 46, scope: !3625)
!3642 = !DILocalVariable(name: "which_output", arg: 8, scope: !3625, file: !3, line: 1225, type: !141)
!3643 = !DILocation(line: 1225, column: 60, scope: !3625)
!3644 = !DILocalVariable(name: "shi", arg: 9, scope: !3625, file: !3, line: 1225, type: !2730)
!3645 = !DILocation(line: 1225, column: 86, scope: !3625)
!3646 = !DILocalVariable(name: "mtex", arg: 10, scope: !3625, file: !3, line: 1225, type: !3587)
!3647 = !DILocation(line: 1225, column: 97, scope: !3625)
!3648 = !DILocalVariable(name: "pool", arg: 11, scope: !3625, file: !3, line: 1225, type: !2905)
!3649 = !DILocation(line: 1225, column: 121, scope: !3625)
!3650 = !DILocalVariable(name: "scene_color_manage", arg: 12, scope: !3625, file: !3, line: 1226, type: !1010)
!3651 = !DILocation(line: 1226, column: 39, scope: !3625)
!3652 = !DILocation(line: 1228, column: 6, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1228, column: 6)
!3654 = !DILocation(line: 1228, column: 9, scope: !3653)
!3655 = !DILocation(line: 1228, column: 6, scope: !3625)
!3656 = !DILocation(line: 1229, column: 10, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1228, column: 17)
!3658 = !DILocation(line: 1229, column: 3, scope: !3657)
!3659 = !DILocation(line: 1230, column: 3, scope: !3657)
!3660 = !DILocation(line: 1233, column: 6, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1233, column: 6)
!3662 = !DILocation(line: 1233, column: 6, scope: !3625)
!3663 = !DILocation(line: 1234, column: 17, scope: !3661)
!3664 = !DILocation(line: 1234, column: 23, scope: !3661)
!3665 = !DILocation(line: 1234, column: 15, scope: !3661)
!3666 = !DILocation(line: 1234, column: 3, scope: !3661)
!3667 = !DILocation(line: 1236, column: 6, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1236, column: 6)
!3669 = !DILocation(line: 1236, column: 11, scope: !3668)
!3670 = !DILocation(line: 1236, column: 15, scope: !3668)
!3671 = !DILocation(line: 1236, column: 6, scope: !3625)
!3672 = !DILocalVariable(name: "rgbnor", scope: !3673, file: !3, line: 1237, type: !92)
!3673 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1236, column: 28)
!3674 = !DILocation(line: 1237, column: 7, scope: !3673)
!3675 = !DILocation(line: 1239, column: 7, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1239, column: 7)
!3677 = !DILocation(line: 1239, column: 7, scope: !3673)
!3678 = !DILocation(line: 1241, column: 18, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1239, column: 13)
!3680 = !DILocation(line: 1241, column: 24, scope: !3679)
!3681 = !DILocation(line: 1241, column: 32, scope: !3679)
!3682 = !DILocation(line: 1241, column: 37, scope: !3679)
!3683 = !DILocation(line: 1241, column: 42, scope: !3679)
!3684 = !DILocation(line: 1241, column: 47, scope: !3679)
!3685 = !DILocation(line: 1241, column: 56, scope: !3679)
!3686 = !DILocation(line: 1241, column: 61, scope: !3679)
!3687 = !DILocation(line: 1241, column: 4, scope: !3679)
!3688 = !DILocation(line: 1242, column: 22, scope: !3679)
!3689 = !DILocation(line: 1242, column: 27, scope: !3679)
!3690 = !DILocation(line: 1242, column: 35, scope: !3679)
!3691 = !DILocation(line: 1242, column: 40, scope: !3679)
!3692 = !DILocation(line: 1242, column: 45, scope: !3679)
!3693 = !DILocation(line: 1242, column: 53, scope: !3679)
!3694 = !DILocation(line: 1242, column: 61, scope: !3679)
!3695 = !DILocation(line: 1242, column: 69, scope: !3679)
!3696 = !DILocation(line: 1242, column: 83, scope: !3679)
!3697 = !DILocation(line: 1242, column: 13, scope: !3679)
!3698 = !DILocation(line: 1242, column: 11, scope: !3679)
!3699 = !DILocation(line: 1244, column: 8, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1244, column: 8)
!3701 = !DILocation(line: 1244, column: 14, scope: !3700)
!3702 = !DILocation(line: 1244, column: 20, scope: !3700)
!3703 = !DILocation(line: 1244, column: 8, scope: !3679)
!3704 = !DILocalVariable(name: "ibuf", scope: !3705, file: !3, line: 1245, type: !3706)
!3705 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1244, column: 56)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !1455, line: 141, baseType: !1454)
!3708 = !DILocation(line: 1245, column: 12, scope: !3705)
!3709 = !DILocation(line: 1245, column: 47, scope: !3705)
!3710 = !DILocation(line: 1245, column: 52, scope: !3705)
!3711 = !DILocation(line: 1245, column: 58, scope: !3705)
!3712 = !DILocation(line: 1245, column: 63, scope: !3705)
!3713 = !DILocation(line: 1245, column: 70, scope: !3705)
!3714 = !DILocation(line: 1245, column: 19, scope: !3705)
!3715 = !DILocation(line: 1248, column: 9, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 1248, column: 9)
!3717 = !DILocation(line: 1248, column: 14, scope: !3716)
!3718 = !DILocation(line: 1248, column: 19, scope: !3716)
!3719 = !DILocation(line: 1248, column: 25, scope: !3716)
!3720 = !DILocation(line: 1248, column: 18, scope: !3716)
!3721 = !DILocation(line: 1248, column: 37, scope: !3716)
!3722 = !DILocation(line: 1248, column: 40, scope: !3716)
!3723 = !DILocation(line: 1248, column: 9, scope: !3705)
!3724 = !DILocation(line: 1249, column: 57, scope: !3716)
!3725 = !DILocation(line: 1249, column: 65, scope: !3716)
!3726 = !DILocation(line: 1249, column: 69, scope: !3716)
!3727 = !DILocation(line: 1249, column: 75, scope: !3716)
!3728 = !DILocation(line: 1249, column: 6, scope: !3716)
!3729 = !DILocation(line: 1251, column: 33, scope: !3705)
!3730 = !DILocation(line: 1251, column: 38, scope: !3705)
!3731 = !DILocation(line: 1251, column: 43, scope: !3705)
!3732 = !DILocation(line: 1251, column: 49, scope: !3705)
!3733 = !DILocation(line: 1251, column: 5, scope: !3705)
!3734 = !DILocation(line: 1252, column: 4, scope: !3705)
!3735 = !DILocation(line: 1253, column: 3, scope: !3679)
!3736 = !DILocalVariable(name: "localmtex", scope: !3737, file: !3, line: 1256, type: !3588)
!3737 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1254, column: 8)
!3738 = !DILocation(line: 1256, column: 9, scope: !3737)
!3739 = !DILocalVariable(name: "texvec_l", scope: !3737, file: !3, line: 1257, type: !344)
!3740 = !DILocation(line: 1257, column: 10, scope: !3737)
!3741 = !DILocalVariable(name: "dxt_l", scope: !3737, file: !3, line: 1257, type: !344)
!3742 = !DILocation(line: 1257, column: 23, scope: !3737)
!3743 = !DILocalVariable(name: "dyt_l", scope: !3737, file: !3, line: 1257, type: !344)
!3744 = !DILocation(line: 1257, column: 33, scope: !3737)
!3745 = !DILocation(line: 1259, column: 14, scope: !3737)
!3746 = !DILocation(line: 1259, column: 21, scope: !3737)
!3747 = !DILocation(line: 1260, column: 19, scope: !3737)
!3748 = !DILocation(line: 1260, column: 14, scope: !3737)
!3749 = !DILocation(line: 1260, column: 17, scope: !3737)
!3750 = !DILocation(line: 1261, column: 14, scope: !3737)
!3751 = !DILocation(line: 1261, column: 20, scope: !3737)
!3752 = !DILocation(line: 1262, column: 14, scope: !3737)
!3753 = !DILocation(line: 1262, column: 19, scope: !3737)
!3754 = !DILocation(line: 1264, column: 15, scope: !3737)
!3755 = !DILocation(line: 1264, column: 25, scope: !3737)
!3756 = !DILocation(line: 1264, column: 4, scope: !3737)
!3757 = !DILocation(line: 1265, column: 8, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1265, column: 8)
!3759 = !DILocation(line: 1265, column: 12, scope: !3758)
!3760 = !DILocation(line: 1265, column: 15, scope: !3758)
!3761 = !DILocation(line: 1265, column: 8, scope: !3737)
!3762 = !DILocation(line: 1266, column: 16, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1265, column: 20)
!3764 = !DILocation(line: 1266, column: 23, scope: !3763)
!3765 = !DILocation(line: 1266, column: 5, scope: !3763)
!3766 = !DILocation(line: 1267, column: 16, scope: !3763)
!3767 = !DILocation(line: 1267, column: 23, scope: !3763)
!3768 = !DILocation(line: 1267, column: 5, scope: !3763)
!3769 = !DILocation(line: 1268, column: 4, scope: !3763)
!3770 = !DILocation(line: 1270, column: 13, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1269, column: 9)
!3772 = !DILocation(line: 1270, column: 5, scope: !3771)
!3773 = !DILocation(line: 1271, column: 13, scope: !3771)
!3774 = !DILocation(line: 1271, column: 5, scope: !3771)
!3775 = !DILocation(line: 1274, column: 30, scope: !3737)
!3776 = !DILocation(line: 1274, column: 52, scope: !3737)
!3777 = !DILocation(line: 1274, column: 59, scope: !3737)
!3778 = !DILocation(line: 1274, column: 4, scope: !3737)
!3779 = !DILocation(line: 1275, column: 22, scope: !3737)
!3780 = !DILocation(line: 1275, column: 27, scope: !3737)
!3781 = !DILocation(line: 1275, column: 37, scope: !3737)
!3782 = !DILocation(line: 1275, column: 44, scope: !3737)
!3783 = !DILocation(line: 1275, column: 51, scope: !3737)
!3784 = !DILocation(line: 1275, column: 59, scope: !3737)
!3785 = !DILocation(line: 1275, column: 67, scope: !3737)
!3786 = !DILocation(line: 1275, column: 75, scope: !3737)
!3787 = !DILocation(line: 1275, column: 89, scope: !3737)
!3788 = !DILocation(line: 1275, column: 13, scope: !3737)
!3789 = !DILocation(line: 1275, column: 11, scope: !3737)
!3790 = !DILocalVariable(name: "ibuf", scope: !3791, file: !3, line: 1278, type: !3706)
!3791 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1277, column: 4)
!3792 = !DILocation(line: 1278, column: 12, scope: !3791)
!3793 = !DILocation(line: 1278, column: 47, scope: !3791)
!3794 = !DILocation(line: 1278, column: 52, scope: !3791)
!3795 = !DILocation(line: 1278, column: 58, scope: !3791)
!3796 = !DILocation(line: 1278, column: 63, scope: !3791)
!3797 = !DILocation(line: 1278, column: 70, scope: !3791)
!3798 = !DILocation(line: 1278, column: 19, scope: !3791)
!3799 = !DILocation(line: 1281, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1281, column: 9)
!3801 = !DILocation(line: 1281, column: 14, scope: !3800)
!3802 = !DILocation(line: 1281, column: 19, scope: !3800)
!3803 = !DILocation(line: 1281, column: 25, scope: !3800)
!3804 = !DILocation(line: 1281, column: 18, scope: !3800)
!3805 = !DILocation(line: 1281, column: 37, scope: !3800)
!3806 = !DILocation(line: 1281, column: 40, scope: !3800)
!3807 = !DILocation(line: 1281, column: 9, scope: !3791)
!3808 = !DILocation(line: 1282, column: 57, scope: !3800)
!3809 = !DILocation(line: 1282, column: 65, scope: !3800)
!3810 = !DILocation(line: 1282, column: 69, scope: !3800)
!3811 = !DILocation(line: 1282, column: 75, scope: !3800)
!3812 = !DILocation(line: 1282, column: 6, scope: !3800)
!3813 = !DILocation(line: 1284, column: 33, scope: !3791)
!3814 = !DILocation(line: 1284, column: 38, scope: !3791)
!3815 = !DILocation(line: 1284, column: 43, scope: !3791)
!3816 = !DILocation(line: 1284, column: 49, scope: !3791)
!3817 = !DILocation(line: 1284, column: 5, scope: !3791)
!3818 = !DILocation(line: 1288, column: 10, scope: !3673)
!3819 = !DILocation(line: 1288, column: 3, scope: !3673)
!3820 = !DILocation(line: 1291, column: 19, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1290, column: 7)
!3822 = !DILocation(line: 1291, column: 24, scope: !3821)
!3823 = !DILocation(line: 1291, column: 32, scope: !3821)
!3824 = !DILocation(line: 1291, column: 37, scope: !3821)
!3825 = !DILocation(line: 1291, column: 42, scope: !3821)
!3826 = !DILocation(line: 1291, column: 50, scope: !3821)
!3827 = !DILocation(line: 1291, column: 58, scope: !3821)
!3828 = !DILocation(line: 1291, column: 66, scope: !3821)
!3829 = !DILocation(line: 1291, column: 80, scope: !3821)
!3830 = !DILocation(line: 1291, column: 10, scope: !3821)
!3831 = !DILocation(line: 1291, column: 3, scope: !3821)
!3832 = !DILocation(line: 1293, column: 1, scope: !3625)
!3833 = distinct !DISubprogram(name: "multitex_ext", scope: !3, file: !3, line: 1326, type: !3834, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!92, !3402, !201, !201, !201, !92, !3576, !2905, !1010}
!3836 = !DILocalVariable(name: "tex", arg: 1, scope: !3833, file: !3, line: 1326, type: !3402)
!3837 = !DILocation(line: 1326, column: 23, scope: !3833)
!3838 = !DILocalVariable(name: "texvec", arg: 2, scope: !3833, file: !3, line: 1326, type: !201)
!3839 = !DILocation(line: 1326, column: 34, scope: !3833)
!3840 = !DILocalVariable(name: "dxt", arg: 3, scope: !3833, file: !3, line: 1326, type: !201)
!3841 = !DILocation(line: 1326, column: 51, scope: !3833)
!3842 = !DILocalVariable(name: "dyt", arg: 4, scope: !3833, file: !3, line: 1326, type: !201)
!3843 = !DILocation(line: 1326, column: 65, scope: !3833)
!3844 = !DILocalVariable(name: "osatex", arg: 5, scope: !3833, file: !3, line: 1326, type: !92)
!3845 = !DILocation(line: 1326, column: 77, scope: !3833)
!3846 = !DILocalVariable(name: "texres", arg: 6, scope: !3833, file: !3, line: 1326, type: !3576)
!3847 = !DILocation(line: 1326, column: 96, scope: !3833)
!3848 = !DILocalVariable(name: "pool", arg: 7, scope: !3833, file: !3, line: 1326, type: !2905)
!3849 = !DILocation(line: 1326, column: 122, scope: !3833)
!3850 = !DILocalVariable(name: "scene_color_manage", arg: 8, scope: !3833, file: !3, line: 1326, type: !1010)
!3851 = !DILocation(line: 1326, column: 133, scope: !3833)
!3852 = !DILocation(line: 1328, column: 31, scope: !3833)
!3853 = !DILocation(line: 1328, column: 36, scope: !3833)
!3854 = !DILocation(line: 1328, column: 44, scope: !3833)
!3855 = !DILocation(line: 1328, column: 49, scope: !3833)
!3856 = !DILocation(line: 1328, column: 54, scope: !3833)
!3857 = !DILocation(line: 1328, column: 62, scope: !3833)
!3858 = !DILocation(line: 1328, column: 88, scope: !3833)
!3859 = !DILocation(line: 1328, column: 94, scope: !3833)
!3860 = !DILocation(line: 1328, column: 9, scope: !3833)
!3861 = !DILocation(line: 1328, column: 2, scope: !3833)
!3862 = distinct !DISubprogram(name: "multitex_ext_safe", scope: !3, file: !3, line: 1335, type: !3863, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!92, !3402, !201, !3576, !2905, !1010}
!3865 = !DILocalVariable(name: "tex", arg: 1, scope: !3862, file: !3, line: 1335, type: !3402)
!3866 = !DILocation(line: 1335, column: 28, scope: !3862)
!3867 = !DILocalVariable(name: "texvec", arg: 2, scope: !3862, file: !3, line: 1335, type: !201)
!3868 = !DILocation(line: 1335, column: 39, scope: !3862)
!3869 = !DILocalVariable(name: "texres", arg: 3, scope: !3862, file: !3, line: 1335, type: !3576)
!3870 = !DILocation(line: 1335, column: 61, scope: !3862)
!3871 = !DILocalVariable(name: "pool", arg: 4, scope: !3862, file: !3, line: 1335, type: !2905)
!3872 = !DILocation(line: 1335, column: 87, scope: !3862)
!3873 = !DILocalVariable(name: "scene_color_manage", arg: 5, scope: !3862, file: !3, line: 1335, type: !1010)
!3874 = !DILocation(line: 1335, column: 98, scope: !3862)
!3875 = !DILocalVariable(name: "use_nodes", scope: !3862, file: !3, line: 1337, type: !92)
!3876 = !DILocation(line: 1337, column: 6, scope: !3862)
!3877 = !DILocation(line: 1337, column: 17, scope: !3862)
!3878 = !DILocation(line: 1337, column: 22, scope: !3862)
!3879 = !DILocalVariable(name: "retval", scope: !3862, file: !3, line: 1337, type: !92)
!3880 = !DILocation(line: 1337, column: 33, scope: !3862)
!3881 = !DILocation(line: 1339, column: 2, scope: !3862)
!3882 = !DILocation(line: 1339, column: 7, scope: !3862)
!3883 = !DILocation(line: 1339, column: 17, scope: !3862)
!3884 = !DILocation(line: 1340, column: 32, scope: !3862)
!3885 = !DILocation(line: 1340, column: 37, scope: !3862)
!3886 = !DILocation(line: 1340, column: 60, scope: !3862)
!3887 = !DILocation(line: 1340, column: 86, scope: !3862)
!3888 = !DILocation(line: 1340, column: 92, scope: !3862)
!3889 = !DILocation(line: 1340, column: 10, scope: !3862)
!3890 = !DILocation(line: 1340, column: 8, scope: !3862)
!3891 = !DILocation(line: 1341, column: 18, scope: !3862)
!3892 = !DILocation(line: 1341, column: 2, scope: !3862)
!3893 = !DILocation(line: 1341, column: 7, scope: !3862)
!3894 = !DILocation(line: 1341, column: 16, scope: !3862)
!3895 = !DILocation(line: 1343, column: 9, scope: !3862)
!3896 = !DILocation(line: 1343, column: 2, scope: !3862)
!3897 = distinct !DISubprogram(name: "texture_rgb_blend", scope: !3, file: !3, line: 1351, type: !3898, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{null, !201, !954, !954, !91, !91, !92}
!3900 = !DILocalVariable(name: "in", arg: 1, scope: !3897, file: !3, line: 1351, type: !201)
!3901 = !DILocation(line: 1351, column: 30, scope: !3897)
!3902 = !DILocalVariable(name: "tex", arg: 2, scope: !3897, file: !3, line: 1351, type: !954)
!3903 = !DILocation(line: 1351, column: 49, scope: !3897)
!3904 = !DILocalVariable(name: "out", arg: 3, scope: !3897, file: !3, line: 1351, type: !954)
!3905 = !DILocation(line: 1351, column: 69, scope: !3897)
!3906 = !DILocalVariable(name: "fact", arg: 4, scope: !3897, file: !3, line: 1351, type: !91)
!3907 = !DILocation(line: 1351, column: 83, scope: !3897)
!3908 = !DILocalVariable(name: "facg", arg: 5, scope: !3897, file: !3, line: 1351, type: !91)
!3909 = !DILocation(line: 1351, column: 95, scope: !3897)
!3910 = !DILocalVariable(name: "blendtype", arg: 6, scope: !3897, file: !3, line: 1351, type: !92)
!3911 = !DILocation(line: 1351, column: 105, scope: !3897)
!3912 = !DILocalVariable(name: "facm", scope: !3897, file: !3, line: 1353, type: !91)
!3913 = !DILocation(line: 1353, column: 8, scope: !3897)
!3914 = !DILocalVariable(name: "col", scope: !3897, file: !3, line: 1353, type: !91)
!3915 = !DILocation(line: 1353, column: 14, scope: !3897)
!3916 = !DILocation(line: 1355, column: 10, scope: !3897)
!3917 = !DILocation(line: 1355, column: 2, scope: !3897)
!3918 = !DILocation(line: 1357, column: 10, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1355, column: 21)
!3920 = !DILocation(line: 1357, column: 7, scope: !3919)
!3921 = !DILocation(line: 1358, column: 14, scope: !3919)
!3922 = !DILocation(line: 1358, column: 13, scope: !3919)
!3923 = !DILocation(line: 1358, column: 7, scope: !3919)
!3924 = !DILocation(line: 1360, column: 11, scope: !3919)
!3925 = !DILocation(line: 1360, column: 16, scope: !3919)
!3926 = !DILocation(line: 1360, column: 15, scope: !3919)
!3927 = !DILocation(line: 1360, column: 25, scope: !3919)
!3928 = !DILocation(line: 1360, column: 30, scope: !3919)
!3929 = !DILocation(line: 1360, column: 29, scope: !3919)
!3930 = !DILocation(line: 1360, column: 23, scope: !3919)
!3931 = !DILocation(line: 1360, column: 3, scope: !3919)
!3932 = !DILocation(line: 1360, column: 8, scope: !3919)
!3933 = !DILocation(line: 1361, column: 11, scope: !3919)
!3934 = !DILocation(line: 1361, column: 16, scope: !3919)
!3935 = !DILocation(line: 1361, column: 15, scope: !3919)
!3936 = !DILocation(line: 1361, column: 25, scope: !3919)
!3937 = !DILocation(line: 1361, column: 30, scope: !3919)
!3938 = !DILocation(line: 1361, column: 29, scope: !3919)
!3939 = !DILocation(line: 1361, column: 23, scope: !3919)
!3940 = !DILocation(line: 1361, column: 3, scope: !3919)
!3941 = !DILocation(line: 1361, column: 8, scope: !3919)
!3942 = !DILocation(line: 1362, column: 11, scope: !3919)
!3943 = !DILocation(line: 1362, column: 16, scope: !3919)
!3944 = !DILocation(line: 1362, column: 15, scope: !3919)
!3945 = !DILocation(line: 1362, column: 25, scope: !3919)
!3946 = !DILocation(line: 1362, column: 30, scope: !3919)
!3947 = !DILocation(line: 1362, column: 29, scope: !3919)
!3948 = !DILocation(line: 1362, column: 23, scope: !3919)
!3949 = !DILocation(line: 1362, column: 3, scope: !3919)
!3950 = !DILocation(line: 1362, column: 8, scope: !3919)
!3951 = !DILocation(line: 1363, column: 3, scope: !3919)
!3952 = !DILocation(line: 1366, column: 10, scope: !3919)
!3953 = !DILocation(line: 1366, column: 7, scope: !3919)
!3954 = !DILocation(line: 1367, column: 14, scope: !3919)
!3955 = !DILocation(line: 1367, column: 13, scope: !3919)
!3956 = !DILocation(line: 1367, column: 7, scope: !3919)
!3957 = !DILocation(line: 1368, column: 11, scope: !3919)
!3958 = !DILocation(line: 1368, column: 16, scope: !3919)
!3959 = !DILocation(line: 1368, column: 21, scope: !3919)
!3960 = !DILocation(line: 1368, column: 20, scope: !3919)
!3961 = !DILocation(line: 1368, column: 15, scope: !3919)
!3962 = !DILocation(line: 1368, column: 29, scope: !3919)
!3963 = !DILocation(line: 1368, column: 28, scope: !3919)
!3964 = !DILocation(line: 1368, column: 3, scope: !3919)
!3965 = !DILocation(line: 1368, column: 8, scope: !3919)
!3966 = !DILocation(line: 1369, column: 11, scope: !3919)
!3967 = !DILocation(line: 1369, column: 16, scope: !3919)
!3968 = !DILocation(line: 1369, column: 21, scope: !3919)
!3969 = !DILocation(line: 1369, column: 20, scope: !3919)
!3970 = !DILocation(line: 1369, column: 15, scope: !3919)
!3971 = !DILocation(line: 1369, column: 29, scope: !3919)
!3972 = !DILocation(line: 1369, column: 28, scope: !3919)
!3973 = !DILocation(line: 1369, column: 3, scope: !3919)
!3974 = !DILocation(line: 1369, column: 8, scope: !3919)
!3975 = !DILocation(line: 1370, column: 11, scope: !3919)
!3976 = !DILocation(line: 1370, column: 16, scope: !3919)
!3977 = !DILocation(line: 1370, column: 21, scope: !3919)
!3978 = !DILocation(line: 1370, column: 20, scope: !3919)
!3979 = !DILocation(line: 1370, column: 15, scope: !3919)
!3980 = !DILocation(line: 1370, column: 29, scope: !3919)
!3981 = !DILocation(line: 1370, column: 28, scope: !3919)
!3982 = !DILocation(line: 1370, column: 3, scope: !3919)
!3983 = !DILocation(line: 1370, column: 8, scope: !3919)
!3984 = !DILocation(line: 1371, column: 3, scope: !3919)
!3985 = !DILocation(line: 1374, column: 10, scope: !3919)
!3986 = !DILocation(line: 1374, column: 7, scope: !3919)
!3987 = !DILocation(line: 1375, column: 14, scope: !3919)
!3988 = !DILocation(line: 1375, column: 13, scope: !3919)
!3989 = !DILocation(line: 1375, column: 7, scope: !3919)
!3990 = !DILocation(line: 1376, column: 18, scope: !3919)
!3991 = !DILocation(line: 1376, column: 23, scope: !3919)
!3992 = !DILocation(line: 1376, column: 34, scope: !3919)
!3993 = !DILocation(line: 1376, column: 33, scope: !3919)
!3994 = !DILocation(line: 1376, column: 27, scope: !3919)
!3995 = !DILocation(line: 1376, column: 22, scope: !3919)
!3996 = !DILocation(line: 1376, column: 51, scope: !3919)
!3997 = !DILocation(line: 1376, column: 50, scope: !3919)
!3998 = !DILocation(line: 1376, column: 43, scope: !3919)
!3999 = !DILocation(line: 1376, column: 15, scope: !3919)
!4000 = !DILocation(line: 1376, column: 3, scope: !3919)
!4001 = !DILocation(line: 1376, column: 8, scope: !3919)
!4002 = !DILocation(line: 1377, column: 18, scope: !3919)
!4003 = !DILocation(line: 1377, column: 23, scope: !3919)
!4004 = !DILocation(line: 1377, column: 34, scope: !3919)
!4005 = !DILocation(line: 1377, column: 33, scope: !3919)
!4006 = !DILocation(line: 1377, column: 27, scope: !3919)
!4007 = !DILocation(line: 1377, column: 22, scope: !3919)
!4008 = !DILocation(line: 1377, column: 51, scope: !3919)
!4009 = !DILocation(line: 1377, column: 50, scope: !3919)
!4010 = !DILocation(line: 1377, column: 43, scope: !3919)
!4011 = !DILocation(line: 1377, column: 15, scope: !3919)
!4012 = !DILocation(line: 1377, column: 3, scope: !3919)
!4013 = !DILocation(line: 1377, column: 8, scope: !3919)
!4014 = !DILocation(line: 1378, column: 18, scope: !3919)
!4015 = !DILocation(line: 1378, column: 23, scope: !3919)
!4016 = !DILocation(line: 1378, column: 34, scope: !3919)
!4017 = !DILocation(line: 1378, column: 33, scope: !3919)
!4018 = !DILocation(line: 1378, column: 27, scope: !3919)
!4019 = !DILocation(line: 1378, column: 22, scope: !3919)
!4020 = !DILocation(line: 1378, column: 51, scope: !3919)
!4021 = !DILocation(line: 1378, column: 50, scope: !3919)
!4022 = !DILocation(line: 1378, column: 43, scope: !3919)
!4023 = !DILocation(line: 1378, column: 15, scope: !3919)
!4024 = !DILocation(line: 1378, column: 3, scope: !3919)
!4025 = !DILocation(line: 1378, column: 8, scope: !3919)
!4026 = !DILocation(line: 1379, column: 3, scope: !3919)
!4027 = !DILocation(line: 1382, column: 10, scope: !3919)
!4028 = !DILocation(line: 1382, column: 7, scope: !3919)
!4029 = !DILocation(line: 1383, column: 14, scope: !3919)
!4030 = !DILocation(line: 1383, column: 13, scope: !3919)
!4031 = !DILocation(line: 1383, column: 7, scope: !3919)
!4032 = !DILocation(line: 1385, column: 7, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1385, column: 7)
!4034 = !DILocation(line: 1385, column: 14, scope: !4033)
!4035 = !DILocation(line: 1385, column: 7, scope: !3919)
!4036 = !DILocation(line: 1386, column: 12, scope: !4033)
!4037 = !DILocation(line: 1386, column: 22, scope: !4033)
!4038 = !DILocation(line: 1386, column: 34, scope: !4033)
!4039 = !DILocation(line: 1386, column: 33, scope: !4033)
!4040 = !DILocation(line: 1386, column: 39, scope: !4033)
!4041 = !DILocation(line: 1386, column: 38, scope: !4033)
!4042 = !DILocation(line: 1386, column: 27, scope: !4033)
!4043 = !DILocation(line: 1386, column: 19, scope: !4033)
!4044 = !DILocation(line: 1386, column: 4, scope: !4033)
!4045 = !DILocation(line: 1386, column: 10, scope: !4033)
!4046 = !DILocation(line: 1388, column: 20, scope: !4033)
!4047 = !DILocation(line: 1388, column: 32, scope: !4033)
!4048 = !DILocation(line: 1388, column: 31, scope: !4033)
!4049 = !DILocation(line: 1388, column: 45, scope: !4033)
!4050 = !DILocation(line: 1388, column: 43, scope: !4033)
!4051 = !DILocation(line: 1388, column: 36, scope: !4033)
!4052 = !DILocation(line: 1388, column: 25, scope: !4033)
!4053 = !DILocation(line: 1388, column: 64, scope: !4033)
!4054 = !DILocation(line: 1388, column: 62, scope: !4033)
!4055 = !DILocation(line: 1388, column: 54, scope: !4033)
!4056 = !DILocation(line: 1388, column: 17, scope: !4033)
!4057 = !DILocation(line: 1388, column: 4, scope: !4033)
!4058 = !DILocation(line: 1388, column: 10, scope: !4033)
!4059 = !DILocation(line: 1389, column: 7, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1389, column: 7)
!4061 = !DILocation(line: 1389, column: 14, scope: !4060)
!4062 = !DILocation(line: 1389, column: 7, scope: !3919)
!4063 = !DILocation(line: 1390, column: 12, scope: !4060)
!4064 = !DILocation(line: 1390, column: 22, scope: !4060)
!4065 = !DILocation(line: 1390, column: 34, scope: !4060)
!4066 = !DILocation(line: 1390, column: 33, scope: !4060)
!4067 = !DILocation(line: 1390, column: 39, scope: !4060)
!4068 = !DILocation(line: 1390, column: 38, scope: !4060)
!4069 = !DILocation(line: 1390, column: 27, scope: !4060)
!4070 = !DILocation(line: 1390, column: 19, scope: !4060)
!4071 = !DILocation(line: 1390, column: 4, scope: !4060)
!4072 = !DILocation(line: 1390, column: 10, scope: !4060)
!4073 = !DILocation(line: 1392, column: 20, scope: !4060)
!4074 = !DILocation(line: 1392, column: 32, scope: !4060)
!4075 = !DILocation(line: 1392, column: 31, scope: !4060)
!4076 = !DILocation(line: 1392, column: 45, scope: !4060)
!4077 = !DILocation(line: 1392, column: 43, scope: !4060)
!4078 = !DILocation(line: 1392, column: 36, scope: !4060)
!4079 = !DILocation(line: 1392, column: 25, scope: !4060)
!4080 = !DILocation(line: 1392, column: 64, scope: !4060)
!4081 = !DILocation(line: 1392, column: 62, scope: !4060)
!4082 = !DILocation(line: 1392, column: 54, scope: !4060)
!4083 = !DILocation(line: 1392, column: 17, scope: !4060)
!4084 = !DILocation(line: 1392, column: 4, scope: !4060)
!4085 = !DILocation(line: 1392, column: 10, scope: !4060)
!4086 = !DILocation(line: 1393, column: 7, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1393, column: 7)
!4088 = !DILocation(line: 1393, column: 14, scope: !4087)
!4089 = !DILocation(line: 1393, column: 7, scope: !3919)
!4090 = !DILocation(line: 1394, column: 12, scope: !4087)
!4091 = !DILocation(line: 1394, column: 22, scope: !4087)
!4092 = !DILocation(line: 1394, column: 34, scope: !4087)
!4093 = !DILocation(line: 1394, column: 33, scope: !4087)
!4094 = !DILocation(line: 1394, column: 39, scope: !4087)
!4095 = !DILocation(line: 1394, column: 38, scope: !4087)
!4096 = !DILocation(line: 1394, column: 27, scope: !4087)
!4097 = !DILocation(line: 1394, column: 19, scope: !4087)
!4098 = !DILocation(line: 1394, column: 4, scope: !4087)
!4099 = !DILocation(line: 1394, column: 10, scope: !4087)
!4100 = !DILocation(line: 1396, column: 20, scope: !4087)
!4101 = !DILocation(line: 1396, column: 32, scope: !4087)
!4102 = !DILocation(line: 1396, column: 31, scope: !4087)
!4103 = !DILocation(line: 1396, column: 45, scope: !4087)
!4104 = !DILocation(line: 1396, column: 43, scope: !4087)
!4105 = !DILocation(line: 1396, column: 36, scope: !4087)
!4106 = !DILocation(line: 1396, column: 25, scope: !4087)
!4107 = !DILocation(line: 1396, column: 64, scope: !4087)
!4108 = !DILocation(line: 1396, column: 62, scope: !4087)
!4109 = !DILocation(line: 1396, column: 54, scope: !4087)
!4110 = !DILocation(line: 1396, column: 17, scope: !4087)
!4111 = !DILocation(line: 1396, column: 4, scope: !4087)
!4112 = !DILocation(line: 1396, column: 10, scope: !4087)
!4113 = !DILocation(line: 1397, column: 3, scope: !3919)
!4114 = !DILocation(line: 1400, column: 10, scope: !3919)
!4115 = !DILocation(line: 1400, column: 9, scope: !3919)
!4116 = !DILocation(line: 1400, column: 7, scope: !3919)
!4117 = !DILocation(line: 1400, column: 3, scope: !3919)
!4118 = !DILocation(line: 1402, column: 10, scope: !3919)
!4119 = !DILocation(line: 1402, column: 7, scope: !3919)
!4120 = !DILocation(line: 1403, column: 11, scope: !3919)
!4121 = !DILocation(line: 1403, column: 16, scope: !3919)
!4122 = !DILocation(line: 1403, column: 15, scope: !3919)
!4123 = !DILocation(line: 1403, column: 25, scope: !3919)
!4124 = !DILocation(line: 1403, column: 23, scope: !3919)
!4125 = !DILocation(line: 1403, column: 3, scope: !3919)
!4126 = !DILocation(line: 1403, column: 8, scope: !3919)
!4127 = !DILocation(line: 1404, column: 11, scope: !3919)
!4128 = !DILocation(line: 1404, column: 16, scope: !3919)
!4129 = !DILocation(line: 1404, column: 15, scope: !3919)
!4130 = !DILocation(line: 1404, column: 25, scope: !3919)
!4131 = !DILocation(line: 1404, column: 23, scope: !3919)
!4132 = !DILocation(line: 1404, column: 3, scope: !3919)
!4133 = !DILocation(line: 1404, column: 8, scope: !3919)
!4134 = !DILocation(line: 1405, column: 11, scope: !3919)
!4135 = !DILocation(line: 1405, column: 16, scope: !3919)
!4136 = !DILocation(line: 1405, column: 15, scope: !3919)
!4137 = !DILocation(line: 1405, column: 25, scope: !3919)
!4138 = !DILocation(line: 1405, column: 23, scope: !3919)
!4139 = !DILocation(line: 1405, column: 3, scope: !3919)
!4140 = !DILocation(line: 1405, column: 8, scope: !3919)
!4141 = !DILocation(line: 1406, column: 3, scope: !3919)
!4142 = !DILocation(line: 1409, column: 10, scope: !3919)
!4143 = !DILocation(line: 1409, column: 7, scope: !3919)
!4144 = !DILocation(line: 1410, column: 14, scope: !3919)
!4145 = !DILocation(line: 1410, column: 13, scope: !3919)
!4146 = !DILocation(line: 1410, column: 7, scope: !3919)
!4147 = !DILocation(line: 1412, column: 7, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1412, column: 7)
!4149 = !DILocation(line: 1412, column: 13, scope: !4148)
!4150 = !DILocation(line: 1412, column: 7, scope: !3919)
!4151 = !DILocation(line: 1413, column: 11, scope: !4148)
!4152 = !DILocation(line: 1413, column: 16, scope: !4148)
!4153 = !DILocation(line: 1413, column: 15, scope: !4148)
!4154 = !DILocation(line: 1413, column: 25, scope: !4148)
!4155 = !DILocation(line: 1413, column: 30, scope: !4148)
!4156 = !DILocation(line: 1413, column: 29, scope: !4148)
!4157 = !DILocation(line: 1413, column: 37, scope: !4148)
!4158 = !DILocation(line: 1413, column: 36, scope: !4148)
!4159 = !DILocation(line: 1413, column: 23, scope: !4148)
!4160 = !DILocation(line: 1413, column: 4, scope: !4148)
!4161 = !DILocation(line: 1413, column: 9, scope: !4148)
!4162 = !DILocation(line: 1414, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1414, column: 7)
!4164 = !DILocation(line: 1414, column: 13, scope: !4163)
!4165 = !DILocation(line: 1414, column: 7, scope: !3919)
!4166 = !DILocation(line: 1415, column: 11, scope: !4163)
!4167 = !DILocation(line: 1415, column: 16, scope: !4163)
!4168 = !DILocation(line: 1415, column: 15, scope: !4163)
!4169 = !DILocation(line: 1415, column: 25, scope: !4163)
!4170 = !DILocation(line: 1415, column: 30, scope: !4163)
!4171 = !DILocation(line: 1415, column: 29, scope: !4163)
!4172 = !DILocation(line: 1415, column: 37, scope: !4163)
!4173 = !DILocation(line: 1415, column: 36, scope: !4163)
!4174 = !DILocation(line: 1415, column: 23, scope: !4163)
!4175 = !DILocation(line: 1415, column: 4, scope: !4163)
!4176 = !DILocation(line: 1415, column: 9, scope: !4163)
!4177 = !DILocation(line: 1416, column: 7, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1416, column: 7)
!4179 = !DILocation(line: 1416, column: 13, scope: !4178)
!4180 = !DILocation(line: 1416, column: 7, scope: !3919)
!4181 = !DILocation(line: 1417, column: 11, scope: !4178)
!4182 = !DILocation(line: 1417, column: 16, scope: !4178)
!4183 = !DILocation(line: 1417, column: 15, scope: !4178)
!4184 = !DILocation(line: 1417, column: 25, scope: !4178)
!4185 = !DILocation(line: 1417, column: 30, scope: !4178)
!4186 = !DILocation(line: 1417, column: 29, scope: !4178)
!4187 = !DILocation(line: 1417, column: 37, scope: !4178)
!4188 = !DILocation(line: 1417, column: 36, scope: !4178)
!4189 = !DILocation(line: 1417, column: 23, scope: !4178)
!4190 = !DILocation(line: 1417, column: 4, scope: !4178)
!4191 = !DILocation(line: 1417, column: 9, scope: !4178)
!4192 = !DILocation(line: 1419, column: 3, scope: !3919)
!4193 = !DILocation(line: 1422, column: 10, scope: !3919)
!4194 = !DILocation(line: 1422, column: 7, scope: !3919)
!4195 = !DILocation(line: 1423, column: 14, scope: !3919)
!4196 = !DILocation(line: 1423, column: 13, scope: !3919)
!4197 = !DILocation(line: 1423, column: 7, scope: !3919)
!4198 = !DILocation(line: 1424, column: 10, scope: !3919)
!4199 = !DILocation(line: 1424, column: 15, scope: !3919)
!4200 = !DILocation(line: 1424, column: 14, scope: !3919)
!4201 = !DILocation(line: 1424, column: 24, scope: !3919)
!4202 = !DILocation(line: 1424, column: 35, scope: !3919)
!4203 = !DILocation(line: 1424, column: 42, scope: !3919)
!4204 = !DILocation(line: 1424, column: 41, scope: !3919)
!4205 = !DILocation(line: 1424, column: 29, scope: !3919)
!4206 = !DILocation(line: 1424, column: 28, scope: !3919)
!4207 = !DILocation(line: 1424, column: 22, scope: !3919)
!4208 = !DILocation(line: 1424, column: 3, scope: !3919)
!4209 = !DILocation(line: 1424, column: 8, scope: !3919)
!4210 = !DILocation(line: 1425, column: 10, scope: !3919)
!4211 = !DILocation(line: 1425, column: 15, scope: !3919)
!4212 = !DILocation(line: 1425, column: 14, scope: !3919)
!4213 = !DILocation(line: 1425, column: 24, scope: !3919)
!4214 = !DILocation(line: 1425, column: 35, scope: !3919)
!4215 = !DILocation(line: 1425, column: 42, scope: !3919)
!4216 = !DILocation(line: 1425, column: 41, scope: !3919)
!4217 = !DILocation(line: 1425, column: 29, scope: !3919)
!4218 = !DILocation(line: 1425, column: 28, scope: !3919)
!4219 = !DILocation(line: 1425, column: 22, scope: !3919)
!4220 = !DILocation(line: 1425, column: 3, scope: !3919)
!4221 = !DILocation(line: 1425, column: 8, scope: !3919)
!4222 = !DILocation(line: 1426, column: 10, scope: !3919)
!4223 = !DILocation(line: 1426, column: 15, scope: !3919)
!4224 = !DILocation(line: 1426, column: 14, scope: !3919)
!4225 = !DILocation(line: 1426, column: 24, scope: !3919)
!4226 = !DILocation(line: 1426, column: 35, scope: !3919)
!4227 = !DILocation(line: 1426, column: 42, scope: !3919)
!4228 = !DILocation(line: 1426, column: 41, scope: !3919)
!4229 = !DILocation(line: 1426, column: 29, scope: !3919)
!4230 = !DILocation(line: 1426, column: 28, scope: !3919)
!4231 = !DILocation(line: 1426, column: 22, scope: !3919)
!4232 = !DILocation(line: 1426, column: 3, scope: !3919)
!4233 = !DILocation(line: 1426, column: 8, scope: !3919)
!4234 = !DILocation(line: 1427, column: 3, scope: !3919)
!4235 = !DILocation(line: 1430, column: 10, scope: !3919)
!4236 = !DILocation(line: 1430, column: 7, scope: !3919)
!4237 = !DILocation(line: 1431, column: 14, scope: !3919)
!4238 = !DILocation(line: 1431, column: 13, scope: !3919)
!4239 = !DILocation(line: 1431, column: 7, scope: !3919)
!4240 = !DILocation(line: 1433, column: 18, scope: !3919)
!4241 = !DILocation(line: 1433, column: 26, scope: !3919)
!4242 = !DILocation(line: 1433, column: 11, scope: !3919)
!4243 = !DILocation(line: 1433, column: 34, scope: !3919)
!4244 = !DILocation(line: 1433, column: 33, scope: !3919)
!4245 = !DILocation(line: 1433, column: 41, scope: !3919)
!4246 = !DILocation(line: 1433, column: 48, scope: !3919)
!4247 = !DILocation(line: 1433, column: 47, scope: !3919)
!4248 = !DILocation(line: 1433, column: 39, scope: !3919)
!4249 = !DILocation(line: 1433, column: 3, scope: !3919)
!4250 = !DILocation(line: 1433, column: 9, scope: !3919)
!4251 = !DILocation(line: 1434, column: 18, scope: !3919)
!4252 = !DILocation(line: 1434, column: 26, scope: !3919)
!4253 = !DILocation(line: 1434, column: 11, scope: !3919)
!4254 = !DILocation(line: 1434, column: 34, scope: !3919)
!4255 = !DILocation(line: 1434, column: 33, scope: !3919)
!4256 = !DILocation(line: 1434, column: 41, scope: !3919)
!4257 = !DILocation(line: 1434, column: 48, scope: !3919)
!4258 = !DILocation(line: 1434, column: 47, scope: !3919)
!4259 = !DILocation(line: 1434, column: 39, scope: !3919)
!4260 = !DILocation(line: 1434, column: 3, scope: !3919)
!4261 = !DILocation(line: 1434, column: 9, scope: !3919)
!4262 = !DILocation(line: 1435, column: 18, scope: !3919)
!4263 = !DILocation(line: 1435, column: 26, scope: !3919)
!4264 = !DILocation(line: 1435, column: 11, scope: !3919)
!4265 = !DILocation(line: 1435, column: 34, scope: !3919)
!4266 = !DILocation(line: 1435, column: 33, scope: !3919)
!4267 = !DILocation(line: 1435, column: 41, scope: !3919)
!4268 = !DILocation(line: 1435, column: 48, scope: !3919)
!4269 = !DILocation(line: 1435, column: 47, scope: !3919)
!4270 = !DILocation(line: 1435, column: 39, scope: !3919)
!4271 = !DILocation(line: 1435, column: 3, scope: !3919)
!4272 = !DILocation(line: 1435, column: 9, scope: !3919)
!4273 = !DILocation(line: 1436, column: 3, scope: !3919)
!4274 = !DILocation(line: 1439, column: 10, scope: !3919)
!4275 = !DILocation(line: 1439, column: 7, scope: !3919)
!4276 = !DILocation(line: 1441, column: 8, scope: !3919)
!4277 = !DILocation(line: 1441, column: 13, scope: !3919)
!4278 = !DILocation(line: 1441, column: 12, scope: !3919)
!4279 = !DILocation(line: 1441, column: 6, scope: !3919)
!4280 = !DILocation(line: 1442, column: 7, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1442, column: 7)
!4282 = !DILocation(line: 1442, column: 13, scope: !4281)
!4283 = !DILocation(line: 1442, column: 11, scope: !4281)
!4284 = !DILocation(line: 1442, column: 7, scope: !3919)
!4285 = !DILocation(line: 1442, column: 28, scope: !4281)
!4286 = !DILocation(line: 1442, column: 21, scope: !4281)
!4287 = !DILocation(line: 1442, column: 26, scope: !4281)
!4288 = !DILocation(line: 1442, column: 45, scope: !4281)
!4289 = !DILocation(line: 1442, column: 38, scope: !4281)
!4290 = !DILocation(line: 1442, column: 43, scope: !4281)
!4291 = !DILocation(line: 1443, column: 8, scope: !3919)
!4292 = !DILocation(line: 1443, column: 13, scope: !3919)
!4293 = !DILocation(line: 1443, column: 12, scope: !3919)
!4294 = !DILocation(line: 1443, column: 6, scope: !3919)
!4295 = !DILocation(line: 1444, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1444, column: 7)
!4297 = !DILocation(line: 1444, column: 13, scope: !4296)
!4298 = !DILocation(line: 1444, column: 11, scope: !4296)
!4299 = !DILocation(line: 1444, column: 7, scope: !3919)
!4300 = !DILocation(line: 1444, column: 28, scope: !4296)
!4301 = !DILocation(line: 1444, column: 21, scope: !4296)
!4302 = !DILocation(line: 1444, column: 26, scope: !4296)
!4303 = !DILocation(line: 1444, column: 45, scope: !4296)
!4304 = !DILocation(line: 1444, column: 38, scope: !4296)
!4305 = !DILocation(line: 1444, column: 43, scope: !4296)
!4306 = !DILocation(line: 1445, column: 8, scope: !3919)
!4307 = !DILocation(line: 1445, column: 13, scope: !3919)
!4308 = !DILocation(line: 1445, column: 12, scope: !3919)
!4309 = !DILocation(line: 1445, column: 6, scope: !3919)
!4310 = !DILocation(line: 1446, column: 7, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1446, column: 7)
!4312 = !DILocation(line: 1446, column: 13, scope: !4311)
!4313 = !DILocation(line: 1446, column: 11, scope: !4311)
!4314 = !DILocation(line: 1446, column: 7, scope: !3919)
!4315 = !DILocation(line: 1446, column: 28, scope: !4311)
!4316 = !DILocation(line: 1446, column: 21, scope: !4311)
!4317 = !DILocation(line: 1446, column: 26, scope: !4311)
!4318 = !DILocation(line: 1446, column: 45, scope: !4311)
!4319 = !DILocation(line: 1446, column: 38, scope: !4311)
!4320 = !DILocation(line: 1446, column: 43, scope: !4311)
!4321 = !DILocation(line: 1447, column: 3, scope: !3919)
!4322 = !DILocation(line: 1450, column: 10, scope: !3919)
!4323 = !DILocation(line: 1450, column: 7, scope: !3919)
!4324 = !DILocation(line: 1451, column: 14, scope: !3919)
!4325 = !DILocation(line: 1451, column: 18, scope: !3919)
!4326 = !DILocation(line: 1451, column: 3, scope: !3919)
!4327 = !DILocation(line: 1452, column: 27, scope: !3919)
!4328 = !DILocation(line: 1452, column: 31, scope: !3919)
!4329 = !DILocation(line: 1452, column: 37, scope: !3919)
!4330 = !DILocation(line: 1452, column: 3, scope: !3919)
!4331 = !DILocation(line: 1453, column: 3, scope: !3919)
!4332 = !DILocation(line: 1455, column: 10, scope: !3919)
!4333 = !DILocation(line: 1455, column: 7, scope: !3919)
!4334 = !DILocation(line: 1456, column: 14, scope: !3919)
!4335 = !DILocation(line: 1456, column: 18, scope: !3919)
!4336 = !DILocation(line: 1456, column: 3, scope: !3919)
!4337 = !DILocation(line: 1457, column: 27, scope: !3919)
!4338 = !DILocation(line: 1457, column: 31, scope: !3919)
!4339 = !DILocation(line: 1457, column: 37, scope: !3919)
!4340 = !DILocation(line: 1457, column: 3, scope: !3919)
!4341 = !DILocation(line: 1458, column: 3, scope: !3919)
!4342 = !DILocation(line: 1460, column: 10, scope: !3919)
!4343 = !DILocation(line: 1460, column: 7, scope: !3919)
!4344 = !DILocation(line: 1461, column: 14, scope: !3919)
!4345 = !DILocation(line: 1461, column: 18, scope: !3919)
!4346 = !DILocation(line: 1461, column: 3, scope: !3919)
!4347 = !DILocation(line: 1462, column: 27, scope: !3919)
!4348 = !DILocation(line: 1462, column: 31, scope: !3919)
!4349 = !DILocation(line: 1462, column: 37, scope: !3919)
!4350 = !DILocation(line: 1462, column: 3, scope: !3919)
!4351 = !DILocation(line: 1463, column: 3, scope: !3919)
!4352 = !DILocation(line: 1465, column: 10, scope: !3919)
!4353 = !DILocation(line: 1465, column: 7, scope: !3919)
!4354 = !DILocation(line: 1466, column: 14, scope: !3919)
!4355 = !DILocation(line: 1466, column: 18, scope: !3919)
!4356 = !DILocation(line: 1466, column: 3, scope: !3919)
!4357 = !DILocation(line: 1467, column: 29, scope: !3919)
!4358 = !DILocation(line: 1467, column: 33, scope: !3919)
!4359 = !DILocation(line: 1467, column: 39, scope: !3919)
!4360 = !DILocation(line: 1467, column: 3, scope: !3919)
!4361 = !DILocation(line: 1468, column: 3, scope: !3919)
!4362 = !DILocation(line: 1470, column: 10, scope: !3919)
!4363 = !DILocation(line: 1470, column: 7, scope: !3919)
!4364 = !DILocation(line: 1471, column: 14, scope: !3919)
!4365 = !DILocation(line: 1471, column: 18, scope: !3919)
!4366 = !DILocation(line: 1471, column: 3, scope: !3919)
!4367 = !DILocation(line: 1472, column: 28, scope: !3919)
!4368 = !DILocation(line: 1472, column: 32, scope: !3919)
!4369 = !DILocation(line: 1472, column: 38, scope: !3919)
!4370 = !DILocation(line: 1472, column: 3, scope: !3919)
!4371 = !DILocation(line: 1473, column: 3, scope: !3919)
!4372 = !DILocation(line: 1475, column: 10, scope: !3919)
!4373 = !DILocation(line: 1475, column: 7, scope: !3919)
!4374 = !DILocation(line: 1476, column: 14, scope: !3919)
!4375 = !DILocation(line: 1476, column: 18, scope: !3919)
!4376 = !DILocation(line: 1476, column: 3, scope: !3919)
!4377 = !DILocation(line: 1477, column: 30, scope: !3919)
!4378 = !DILocation(line: 1477, column: 34, scope: !3919)
!4379 = !DILocation(line: 1477, column: 40, scope: !3919)
!4380 = !DILocation(line: 1477, column: 3, scope: !3919)
!4381 = !DILocation(line: 1478, column: 3, scope: !3919)
!4382 = !DILocation(line: 1480, column: 1, scope: !3897)
!4383 = distinct !DISubprogram(name: "min_ff", scope: !4384, file: !4384, line: 202, type: !4385, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!4384 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!91, !91, !91}
!4387 = !DILocalVariable(name: "a", arg: 1, scope: !4383, file: !4384, line: 202, type: !91)
!4388 = !DILocation(line: 202, column: 28, scope: !4383)
!4389 = !DILocalVariable(name: "b", arg: 2, scope: !4383, file: !4384, line: 202, type: !91)
!4390 = !DILocation(line: 202, column: 37, scope: !4383)
!4391 = !DILocation(line: 204, column: 10, scope: !4383)
!4392 = !DILocation(line: 204, column: 14, scope: !4383)
!4393 = !DILocation(line: 204, column: 12, scope: !4383)
!4394 = !DILocation(line: 204, column: 9, scope: !4383)
!4395 = !DILocation(line: 204, column: 19, scope: !4383)
!4396 = !DILocation(line: 204, column: 23, scope: !4383)
!4397 = !DILocation(line: 204, column: 2, scope: !4383)
!4398 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4399, file: !4399, line: 64, type: !4400, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!4399 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !201, !954}
!4402 = !DILocalVariable(name: "r", arg: 1, scope: !4398, file: !4399, line: 64, type: !201)
!4403 = !DILocation(line: 64, column: 31, scope: !4398)
!4404 = !DILocalVariable(name: "a", arg: 2, scope: !4398, file: !4399, line: 64, type: !954)
!4405 = !DILocation(line: 64, column: 49, scope: !4398)
!4406 = !DILocation(line: 66, column: 9, scope: !4398)
!4407 = !DILocation(line: 66, column: 2, scope: !4398)
!4408 = !DILocation(line: 66, column: 7, scope: !4398)
!4409 = !DILocation(line: 67, column: 9, scope: !4398)
!4410 = !DILocation(line: 67, column: 2, scope: !4398)
!4411 = !DILocation(line: 67, column: 7, scope: !4398)
!4412 = !DILocation(line: 68, column: 9, scope: !4398)
!4413 = !DILocation(line: 68, column: 2, scope: !4398)
!4414 = !DILocation(line: 68, column: 7, scope: !4398)
!4415 = !DILocation(line: 69, column: 1, scope: !4398)
!4416 = distinct !DISubprogram(name: "texture_value_blend", scope: !3, file: !3, line: 1482, type: !4417, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!91, !91, !91, !91, !91, !92}
!4419 = !DILocalVariable(name: "tex", arg: 1, scope: !4416, file: !3, line: 1482, type: !91)
!4420 = !DILocation(line: 1482, column: 33, scope: !4416)
!4421 = !DILocalVariable(name: "out", arg: 2, scope: !4416, file: !3, line: 1482, type: !91)
!4422 = !DILocation(line: 1482, column: 44, scope: !4416)
!4423 = !DILocalVariable(name: "fact", arg: 3, scope: !4416, file: !3, line: 1482, type: !91)
!4424 = !DILocation(line: 1482, column: 55, scope: !4416)
!4425 = !DILocalVariable(name: "facg", arg: 4, scope: !4416, file: !3, line: 1482, type: !91)
!4426 = !DILocation(line: 1482, column: 67, scope: !4416)
!4427 = !DILocalVariable(name: "blendtype", arg: 5, scope: !4416, file: !3, line: 1482, type: !92)
!4428 = !DILocation(line: 1482, column: 77, scope: !4416)
!4429 = !DILocalVariable(name: "in", scope: !4416, file: !3, line: 1484, type: !91)
!4430 = !DILocation(line: 1484, column: 8, scope: !4416)
!4431 = !DILocalVariable(name: "facm", scope: !4416, file: !3, line: 1484, type: !91)
!4432 = !DILocation(line: 1484, column: 16, scope: !4416)
!4433 = !DILocalVariable(name: "col", scope: !4416, file: !3, line: 1484, type: !91)
!4434 = !DILocation(line: 1484, column: 22, scope: !4416)
!4435 = !DILocalVariable(name: "scf", scope: !4416, file: !3, line: 1484, type: !91)
!4436 = !DILocation(line: 1484, column: 27, scope: !4416)
!4437 = !DILocalVariable(name: "flip", scope: !4416, file: !3, line: 1485, type: !92)
!4438 = !DILocation(line: 1485, column: 6, scope: !4416)
!4439 = !DILocation(line: 1485, column: 13, scope: !4416)
!4440 = !DILocation(line: 1485, column: 18, scope: !4416)
!4441 = !DILocation(line: 1487, column: 14, scope: !4416)
!4442 = !DILocation(line: 1487, column: 8, scope: !4416)
!4443 = !DILocation(line: 1487, column: 6, scope: !4416)
!4444 = !DILocation(line: 1489, column: 9, scope: !4416)
!4445 = !DILocation(line: 1489, column: 6, scope: !4416)
!4446 = !DILocation(line: 1490, column: 13, scope: !4416)
!4447 = !DILocation(line: 1490, column: 12, scope: !4416)
!4448 = !DILocation(line: 1490, column: 6, scope: !4416)
!4449 = !DILocation(line: 1491, column: 6, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1491, column: 6)
!4451 = !DILocation(line: 1491, column: 6, scope: !4416)
!4452 = !DILocalVariable(name: "sw_ap", scope: !4453, file: !3, line: 1491, type: !91)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1491, column: 12)
!4454 = !DILocation(line: 1491, column: 12, scope: !4453)
!4455 = !DILocation(line: 1493, column: 10, scope: !4416)
!4456 = !DILocation(line: 1493, column: 2, scope: !4416)
!4457 = !DILocation(line: 1495, column: 7, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1493, column: 21)
!4459 = !DILocation(line: 1495, column: 12, scope: !4458)
!4460 = !DILocation(line: 1495, column: 11, scope: !4458)
!4461 = !DILocation(line: 1495, column: 18, scope: !4458)
!4462 = !DILocation(line: 1495, column: 23, scope: !4458)
!4463 = !DILocation(line: 1495, column: 22, scope: !4458)
!4464 = !DILocation(line: 1495, column: 16, scope: !4458)
!4465 = !DILocation(line: 1495, column: 5, scope: !4458)
!4466 = !DILocation(line: 1496, column: 3, scope: !4458)
!4467 = !DILocation(line: 1499, column: 14, scope: !4458)
!4468 = !DILocation(line: 1499, column: 13, scope: !4458)
!4469 = !DILocation(line: 1499, column: 7, scope: !4458)
!4470 = !DILocation(line: 1500, column: 8, scope: !4458)
!4471 = !DILocation(line: 1500, column: 13, scope: !4458)
!4472 = !DILocation(line: 1500, column: 18, scope: !4458)
!4473 = !DILocation(line: 1500, column: 17, scope: !4458)
!4474 = !DILocation(line: 1500, column: 12, scope: !4458)
!4475 = !DILocation(line: 1500, column: 23, scope: !4458)
!4476 = !DILocation(line: 1500, column: 22, scope: !4458)
!4477 = !DILocation(line: 1500, column: 5, scope: !4458)
!4478 = !DILocation(line: 1501, column: 3, scope: !4458)
!4479 = !DILocation(line: 1504, column: 14, scope: !4458)
!4480 = !DILocation(line: 1504, column: 13, scope: !4458)
!4481 = !DILocation(line: 1504, column: 7, scope: !4458)
!4482 = !DILocation(line: 1505, column: 13, scope: !4458)
!4483 = !DILocation(line: 1505, column: 18, scope: !4458)
!4484 = !DILocation(line: 1505, column: 29, scope: !4458)
!4485 = !DILocation(line: 1505, column: 28, scope: !4458)
!4486 = !DILocation(line: 1505, column: 22, scope: !4458)
!4487 = !DILocation(line: 1505, column: 17, scope: !4458)
!4488 = !DILocation(line: 1505, column: 41, scope: !4458)
!4489 = !DILocation(line: 1505, column: 40, scope: !4458)
!4490 = !DILocation(line: 1505, column: 34, scope: !4458)
!4491 = !DILocation(line: 1505, column: 11, scope: !4458)
!4492 = !DILocation(line: 1505, column: 5, scope: !4458)
!4493 = !DILocation(line: 1506, column: 3, scope: !4458)
!4494 = !DILocation(line: 1509, column: 14, scope: !4458)
!4495 = !DILocation(line: 1509, column: 13, scope: !4458)
!4496 = !DILocation(line: 1509, column: 7, scope: !4458)
!4497 = !DILocation(line: 1510, column: 7, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1510, column: 7)
!4499 = !DILocation(line: 1510, column: 11, scope: !4498)
!4500 = !DILocation(line: 1510, column: 7, scope: !4458)
!4501 = !DILocation(line: 1511, column: 9, scope: !4498)
!4502 = !DILocation(line: 1511, column: 16, scope: !4498)
!4503 = !DILocation(line: 1511, column: 28, scope: !4498)
!4504 = !DILocation(line: 1511, column: 27, scope: !4498)
!4505 = !DILocation(line: 1511, column: 33, scope: !4498)
!4506 = !DILocation(line: 1511, column: 32, scope: !4498)
!4507 = !DILocation(line: 1511, column: 21, scope: !4498)
!4508 = !DILocation(line: 1511, column: 13, scope: !4498)
!4509 = !DILocation(line: 1511, column: 7, scope: !4498)
!4510 = !DILocation(line: 1511, column: 4, scope: !4498)
!4511 = !DILocation(line: 1513, column: 17, scope: !4498)
!4512 = !DILocation(line: 1513, column: 29, scope: !4498)
!4513 = !DILocation(line: 1513, column: 28, scope: !4498)
!4514 = !DILocation(line: 1513, column: 42, scope: !4498)
!4515 = !DILocation(line: 1513, column: 40, scope: !4498)
!4516 = !DILocation(line: 1513, column: 33, scope: !4498)
!4517 = !DILocation(line: 1513, column: 22, scope: !4498)
!4518 = !DILocation(line: 1513, column: 58, scope: !4498)
!4519 = !DILocation(line: 1513, column: 56, scope: !4498)
!4520 = !DILocation(line: 1513, column: 48, scope: !4498)
!4521 = !DILocation(line: 1513, column: 14, scope: !4498)
!4522 = !DILocation(line: 1513, column: 7, scope: !4498)
!4523 = !DILocation(line: 1514, column: 3, scope: !4458)
!4524 = !DILocation(line: 1517, column: 10, scope: !4458)
!4525 = !DILocation(line: 1517, column: 9, scope: !4458)
!4526 = !DILocation(line: 1517, column: 7, scope: !4458)
!4527 = !DILocation(line: 1517, column: 3, scope: !4458)
!4528 = !DILocation(line: 1519, column: 7, scope: !4458)
!4529 = !DILocation(line: 1519, column: 12, scope: !4458)
!4530 = !DILocation(line: 1519, column: 11, scope: !4458)
!4531 = !DILocation(line: 1519, column: 18, scope: !4458)
!4532 = !DILocation(line: 1519, column: 16, scope: !4458)
!4533 = !DILocation(line: 1519, column: 5, scope: !4458)
!4534 = !DILocation(line: 1520, column: 3, scope: !4458)
!4535 = !DILocation(line: 1523, column: 7, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1523, column: 7)
!4537 = !DILocation(line: 1523, column: 10, scope: !4536)
!4538 = !DILocation(line: 1523, column: 7, scope: !4458)
!4539 = !DILocation(line: 1524, column: 8, scope: !4536)
!4540 = !DILocation(line: 1524, column: 13, scope: !4536)
!4541 = !DILocation(line: 1524, column: 12, scope: !4536)
!4542 = !DILocation(line: 1524, column: 19, scope: !4536)
!4543 = !DILocation(line: 1524, column: 24, scope: !4536)
!4544 = !DILocation(line: 1524, column: 23, scope: !4536)
!4545 = !DILocation(line: 1524, column: 28, scope: !4536)
!4546 = !DILocation(line: 1524, column: 27, scope: !4536)
!4547 = !DILocation(line: 1524, column: 17, scope: !4536)
!4548 = !DILocation(line: 1524, column: 6, scope: !4536)
!4549 = !DILocation(line: 1524, column: 4, scope: !4536)
!4550 = !DILocation(line: 1525, column: 3, scope: !4458)
!4551 = !DILocation(line: 1528, column: 7, scope: !4458)
!4552 = !DILocation(line: 1528, column: 12, scope: !4458)
!4553 = !DILocation(line: 1528, column: 11, scope: !4458)
!4554 = !DILocation(line: 1528, column: 18, scope: !4458)
!4555 = !DILocation(line: 1528, column: 29, scope: !4458)
!4556 = !DILocation(line: 1528, column: 33, scope: !4458)
!4557 = !DILocation(line: 1528, column: 32, scope: !4458)
!4558 = !DILocation(line: 1528, column: 23, scope: !4458)
!4559 = !DILocation(line: 1528, column: 22, scope: !4458)
!4560 = !DILocation(line: 1528, column: 16, scope: !4458)
!4561 = !DILocation(line: 1528, column: 5, scope: !4458)
!4562 = !DILocation(line: 1529, column: 3, scope: !4458)
!4563 = !DILocation(line: 1532, column: 15, scope: !4458)
!4564 = !DILocation(line: 1532, column: 20, scope: !4458)
!4565 = !DILocation(line: 1532, column: 8, scope: !4458)
!4566 = !DILocation(line: 1532, column: 25, scope: !4458)
!4567 = !DILocation(line: 1532, column: 24, scope: !4458)
!4568 = !DILocation(line: 1532, column: 32, scope: !4458)
!4569 = !DILocation(line: 1532, column: 36, scope: !4458)
!4570 = !DILocation(line: 1532, column: 35, scope: !4458)
!4571 = !DILocation(line: 1532, column: 30, scope: !4458)
!4572 = !DILocation(line: 1532, column: 6, scope: !4458)
!4573 = !DILocation(line: 1533, column: 3, scope: !4458)
!4574 = !DILocation(line: 1536, column: 8, scope: !4458)
!4575 = !DILocation(line: 1536, column: 13, scope: !4458)
!4576 = !DILocation(line: 1536, column: 12, scope: !4458)
!4577 = !DILocation(line: 1536, column: 6, scope: !4458)
!4578 = !DILocation(line: 1537, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1537, column: 7)
!4580 = !DILocation(line: 1537, column: 13, scope: !4579)
!4581 = !DILocation(line: 1537, column: 11, scope: !4579)
!4582 = !DILocation(line: 1537, column: 7, scope: !4458)
!4583 = !DILocation(line: 1537, column: 22, scope: !4579)
!4584 = !DILocation(line: 1537, column: 20, scope: !4579)
!4585 = !DILocation(line: 1537, column: 18, scope: !4579)
!4586 = !DILocation(line: 1537, column: 36, scope: !4579)
!4587 = !DILocation(line: 1537, column: 34, scope: !4579)
!4588 = !DILocation(line: 1538, column: 3, scope: !4458)
!4589 = !DILocation(line: 1541, column: 22, scope: !4458)
!4590 = !DILocation(line: 1541, column: 20, scope: !4458)
!4591 = !DILocation(line: 1541, column: 37, scope: !4458)
!4592 = !DILocation(line: 1541, column: 35, scope: !4458)
!4593 = !DILocation(line: 1541, column: 27, scope: !4458)
!4594 = !DILocation(line: 1541, column: 12, scope: !4458)
!4595 = !DILocation(line: 1541, column: 6, scope: !4458)
!4596 = !DILocation(line: 1542, column: 7, scope: !4458)
!4597 = !DILocation(line: 1542, column: 12, scope: !4458)
!4598 = !DILocation(line: 1542, column: 11, scope: !4458)
!4599 = !DILocation(line: 1542, column: 18, scope: !4458)
!4600 = !DILocation(line: 1542, column: 34, scope: !4458)
!4601 = !DILocation(line: 1542, column: 32, scope: !4458)
!4602 = !DILocation(line: 1542, column: 41, scope: !4458)
!4603 = !DILocation(line: 1542, column: 39, scope: !4458)
!4604 = !DILocation(line: 1542, column: 47, scope: !4458)
!4605 = !DILocation(line: 1542, column: 45, scope: !4458)
!4606 = !DILocation(line: 1542, column: 23, scope: !4458)
!4607 = !DILocation(line: 1542, column: 16, scope: !4458)
!4608 = !DILocation(line: 1542, column: 55, scope: !4458)
!4609 = !DILocation(line: 1542, column: 61, scope: !4458)
!4610 = !DILocation(line: 1542, column: 59, scope: !4458)
!4611 = !DILocation(line: 1542, column: 52, scope: !4458)
!4612 = !DILocation(line: 1542, column: 5, scope: !4458)
!4613 = !DILocation(line: 1543, column: 3, scope: !4458)
!4614 = !DILocation(line: 1546, column: 7, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1546, column: 7)
!4616 = !DILocation(line: 1546, column: 11, scope: !4615)
!4617 = !DILocation(line: 1546, column: 7, scope: !4458)
!4618 = !DILocation(line: 1547, column: 9, scope: !4615)
!4619 = !DILocation(line: 1547, column: 15, scope: !4615)
!4620 = !DILocation(line: 1547, column: 27, scope: !4615)
!4621 = !DILocation(line: 1547, column: 31, scope: !4615)
!4622 = !DILocation(line: 1547, column: 25, scope: !4615)
!4623 = !DILocation(line: 1547, column: 19, scope: !4615)
!4624 = !DILocation(line: 1547, column: 13, scope: !4615)
!4625 = !DILocation(line: 1547, column: 7, scope: !4615)
!4626 = !DILocation(line: 1547, column: 4, scope: !4615)
!4627 = !DILocation(line: 1549, column: 9, scope: !4615)
!4628 = !DILocation(line: 1549, column: 15, scope: !4615)
!4629 = !DILocation(line: 1549, column: 26, scope: !4615)
!4630 = !DILocation(line: 1549, column: 25, scope: !4615)
!4631 = !DILocation(line: 1549, column: 30, scope: !4615)
!4632 = !DILocation(line: 1549, column: 19, scope: !4615)
!4633 = !DILocation(line: 1549, column: 13, scope: !4615)
!4634 = !DILocation(line: 1549, column: 7, scope: !4615)
!4635 = !DILocation(line: 1550, column: 3, scope: !4458)
!4636 = !DILocation(line: 1553, column: 9, scope: !4416)
!4637 = !DILocation(line: 1553, column: 2, scope: !4416)
!4638 = distinct !DISubprogram(name: "do_material_tex", scope: !3, file: !3, line: 2141, type: !4639, scopeLine: 2142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{null, !2730, !3158}
!4641 = !DILocalVariable(name: "shi", arg: 1, scope: !4638, file: !3, line: 2141, type: !2730)
!4642 = !DILocation(line: 2141, column: 34, scope: !4638)
!4643 = !DILocalVariable(name: "re", arg: 2, scope: !4638, file: !3, line: 2141, type: !3158)
!4644 = !DILocation(line: 2141, column: 47, scope: !4638)
!4645 = !DILocalVariable(name: "compat_bump", scope: !4638, file: !3, line: 2143, type: !4646)
!4646 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompatibleBump", file: !3, line: 1652, baseType: !4647)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CompatibleBump", file: !3, line: 1648, size: 448, elements: !4648)
!4648 = !{!4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "nu", scope: !4647, file: !3, line: 1649, baseType: !344, size: 96)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "nv", scope: !4647, file: !3, line: 1649, baseType: !344, size: 96, offset: 96)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "nn", scope: !4647, file: !3, line: 1649, baseType: !344, size: 96, offset: 192)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "dudnu", scope: !4647, file: !3, line: 1650, baseType: !91, size: 32, offset: 288)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "dudnv", scope: !4647, file: !3, line: 1650, baseType: !91, size: 32, offset: 320)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "dvdnu", scope: !4647, file: !3, line: 1650, baseType: !91, size: 32, offset: 352)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "dvdnv", scope: !4647, file: !3, line: 1650, baseType: !91, size: 32, offset: 384)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "nunvdone", scope: !4647, file: !3, line: 1651, baseType: !1010, size: 8, offset: 416)
!4657 = !DILocation(line: 2143, column: 17, scope: !4638)
!4658 = !DILocalVariable(name: "ntap_bump", scope: !4638, file: !3, line: 2144, type: !4659)
!4659 = !DIDerivedType(tag: DW_TAG_typedef, name: "NTapBump", file: !3, line: 1874, baseType: !4660)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NTapBump", file: !3, line: 1865, size: 512, elements: !4661)
!4661 = !{!4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "init_done", scope: !4660, file: !3, line: 1866, baseType: !92, size: 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "iPrevBumpSpace", scope: !4660, file: !3, line: 1867, baseType: !92, size: 32, offset: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "vNorg", scope: !4660, file: !3, line: 1869, baseType: !344, size: 96, offset: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "vNacc", scope: !4660, file: !3, line: 1870, baseType: !344, size: 96, offset: 160)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "vR1", scope: !4660, file: !3, line: 1871, baseType: !344, size: 96, offset: 256)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "vR2", scope: !4660, file: !3, line: 1871, baseType: !344, size: 96, offset: 352)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "sgn_det", scope: !4660, file: !3, line: 1872, baseType: !91, size: 32, offset: 448)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "fPrevMagnitude", scope: !4660, file: !3, line: 1873, baseType: !91, size: 32, offset: 480)
!4670 = !DILocation(line: 2144, column: 11, scope: !4638)
!4671 = !DILocalVariable(name: "mtex", scope: !4638, file: !3, line: 2145, type: !3587)
!4672 = !DILocation(line: 2145, column: 8, scope: !4638)
!4673 = !DILocalVariable(name: "tex", scope: !4638, file: !3, line: 2146, type: !3402)
!4674 = !DILocation(line: 2146, column: 7, scope: !4638)
!4675 = !DILocalVariable(name: "texres", scope: !4638, file: !3, line: 2147, type: !3577)
!4676 = !DILocation(line: 2147, column: 12, scope: !4638)
!4677 = !DILocalVariable(name: "co", scope: !4638, file: !3, line: 2148, type: !201)
!4678 = !DILocation(line: 2148, column: 9, scope: !4638)
!4679 = !DILocalVariable(name: "dx", scope: !4638, file: !3, line: 2148, type: !201)
!4680 = !DILocation(line: 2148, column: 21, scope: !4638)
!4681 = !DILocalVariable(name: "dy", scope: !4638, file: !3, line: 2148, type: !201)
!4682 = !DILocation(line: 2148, column: 33, scope: !4638)
!4683 = !DILocalVariable(name: "fact", scope: !4638, file: !3, line: 2149, type: !91)
!4684 = !DILocation(line: 2149, column: 8, scope: !4638)
!4685 = !DILocalVariable(name: "facm", scope: !4638, file: !3, line: 2149, type: !91)
!4686 = !DILocation(line: 2149, column: 14, scope: !4638)
!4687 = !DILocalVariable(name: "factt", scope: !4638, file: !3, line: 2149, type: !91)
!4688 = !DILocation(line: 2149, column: 20, scope: !4638)
!4689 = !DILocalVariable(name: "facmm", scope: !4638, file: !3, line: 2149, type: !91)
!4690 = !DILocation(line: 2149, column: 27, scope: !4638)
!4691 = !DILocalVariable(name: "stencilTin", scope: !4638, file: !3, line: 2149, type: !91)
!4692 = !DILocation(line: 2149, column: 34, scope: !4638)
!4693 = !DILocalVariable(name: "texvec", scope: !4638, file: !3, line: 2150, type: !344)
!4694 = !DILocation(line: 2150, column: 8, scope: !4638)
!4695 = !DILocalVariable(name: "dxt", scope: !4638, file: !3, line: 2150, type: !344)
!4696 = !DILocation(line: 2150, column: 19, scope: !4638)
!4697 = !DILocalVariable(name: "dyt", scope: !4638, file: !3, line: 2150, type: !344)
!4698 = !DILocation(line: 2150, column: 27, scope: !4638)
!4699 = !DILocalVariable(name: "tempvec", scope: !4638, file: !3, line: 2150, type: !344)
!4700 = !DILocation(line: 2150, column: 35, scope: !4638)
!4701 = !DILocalVariable(name: "norvec", scope: !4638, file: !3, line: 2150, type: !344)
!4702 = !DILocation(line: 2150, column: 47, scope: !4638)
!4703 = !DILocalVariable(name: "warpvec", scope: !4638, file: !3, line: 2150, type: !344)
!4704 = !DILocation(line: 2150, column: 58, scope: !4638)
!4705 = !DILocalVariable(name: "Tnor", scope: !4638, file: !3, line: 2150, type: !91)
!4706 = !DILocation(line: 2150, column: 89, scope: !4638)
!4707 = !DILocalVariable(name: "tex_nr", scope: !4638, file: !3, line: 2151, type: !92)
!4708 = !DILocation(line: 2151, column: 6, scope: !4638)
!4709 = !DILocalVariable(name: "rgbnor", scope: !4638, file: !3, line: 2151, type: !92)
!4710 = !DILocation(line: 2151, column: 14, scope: !4638)
!4711 = !DILocalVariable(name: "warp_done", scope: !4638, file: !3, line: 2152, type: !1010)
!4712 = !DILocation(line: 2152, column: 7, scope: !4638)
!4713 = !DILocalVariable(name: "use_compat_bump", scope: !4638, file: !3, line: 2152, type: !1010)
!4714 = !DILocation(line: 2152, column: 26, scope: !4638)
!4715 = !DILocalVariable(name: "use_ntap_bump", scope: !4638, file: !3, line: 2152, type: !1010)
!4716 = !DILocation(line: 2152, column: 51, scope: !4638)
!4717 = !DILocalVariable(name: "found_nmapping", scope: !4638, file: !3, line: 2153, type: !1010)
!4718 = !DILocation(line: 2153, column: 7, scope: !4638)
!4719 = !DILocalVariable(name: "found_deriv_map", scope: !4638, file: !3, line: 2153, type: !1010)
!4720 = !DILocation(line: 2153, column: 31, scope: !4638)
!4721 = !DILocalVariable(name: "iFirstTimeNMap", scope: !4638, file: !3, line: 2154, type: !1010)
!4722 = !DILocation(line: 2154, column: 7, scope: !4638)
!4723 = !DILocation(line: 2156, column: 2, scope: !4638)
!4724 = !DILocation(line: 2157, column: 2, scope: !4638)
!4725 = !DILocation(line: 2159, column: 6, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2159, column: 6)
!4727 = !DILocation(line: 2159, column: 10, scope: !4726)
!4728 = !DILocation(line: 2159, column: 12, scope: !4726)
!4729 = !DILocation(line: 2159, column: 20, scope: !4726)
!4730 = !DILocation(line: 2159, column: 6, scope: !4638)
!4731 = !DILocation(line: 2159, column: 32, scope: !4726)
!4732 = !DILocation(line: 2162, column: 13, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2162, column: 2)
!4734 = !DILocation(line: 2162, column: 7, scope: !4733)
!4735 = !DILocation(line: 2162, column: 17, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 2162, column: 2)
!4737 = !DILocation(line: 2162, column: 23, scope: !4736)
!4738 = !DILocation(line: 2162, column: 2, scope: !4733)
!4739 = !DILocation(line: 2165, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2165, column: 7)
!4741 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 2162, column: 44)
!4742 = !DILocation(line: 2165, column: 12, scope: !4740)
!4743 = !DILocation(line: 2165, column: 17, scope: !4740)
!4744 = !DILocation(line: 2165, column: 30, scope: !4740)
!4745 = !DILocation(line: 2165, column: 28, scope: !4740)
!4746 = !DILocation(line: 2165, column: 24, scope: !4740)
!4747 = !DILocation(line: 2165, column: 7, scope: !4741)
!4748 = !DILocation(line: 2165, column: 39, scope: !4740)
!4749 = !DILocation(line: 2167, column: 7, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2167, column: 7)
!4751 = !DILocation(line: 2167, column: 12, scope: !4750)
!4752 = !DILocation(line: 2167, column: 17, scope: !4750)
!4753 = !DILocation(line: 2167, column: 22, scope: !4750)
!4754 = !DILocation(line: 2167, column: 7, scope: !4741)
!4755 = !DILocation(line: 2168, column: 10, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 2167, column: 31)
!4757 = !DILocation(line: 2168, column: 15, scope: !4756)
!4758 = !DILocation(line: 2168, column: 20, scope: !4756)
!4759 = !DILocation(line: 2168, column: 25, scope: !4756)
!4760 = !DILocation(line: 2168, column: 8, scope: !4756)
!4761 = !DILocation(line: 2170, column: 9, scope: !4756)
!4762 = !DILocation(line: 2170, column: 15, scope: !4756)
!4763 = !DILocation(line: 2170, column: 7, scope: !4756)
!4764 = !DILocation(line: 2171, column: 8, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2171, column: 8)
!4766 = !DILocation(line: 2171, column: 12, scope: !4765)
!4767 = !DILocation(line: 2171, column: 8, scope: !4756)
!4768 = !DILocation(line: 2171, column: 21, scope: !4765)
!4769 = !DILocation(line: 2173, column: 23, scope: !4756)
!4770 = !DILocation(line: 2173, column: 28, scope: !4756)
!4771 = !DILocation(line: 2173, column: 32, scope: !4756)
!4772 = !DILocation(line: 2173, column: 45, scope: !4756)
!4773 = !DILocation(line: 2173, column: 49, scope: !4756)
!4774 = !DILocation(line: 2173, column: 54, scope: !4756)
!4775 = !DILocation(line: 2173, column: 62, scope: !4756)
!4776 = !DILocation(line: 0, scope: !4756)
!4777 = !DILocation(line: 2173, column: 22, scope: !4756)
!4778 = !DILocation(line: 2173, column: 20, scope: !4756)
!4779 = !DILocation(line: 2174, column: 22, scope: !4756)
!4780 = !DILocation(line: 2174, column: 28, scope: !4756)
!4781 = !DILocation(line: 2174, column: 36, scope: !4756)
!4782 = !DILocation(line: 2174, column: 56, scope: !4756)
!4783 = !DILocation(line: 2174, column: 21, scope: !4756)
!4784 = !DILocation(line: 2174, column: 19, scope: !4756)
!4785 = !DILocation(line: 2175, column: 22, scope: !4756)
!4786 = !DILocation(line: 2175, column: 28, scope: !4756)
!4787 = !DILocation(line: 2175, column: 36, scope: !4756)
!4788 = !DILocation(line: 2175, column: 88, scope: !4756)
!4789 = !DILocation(line: 2175, column: 92, scope: !4756)
!4790 = !DILocation(line: 2175, column: 95, scope: !4756)
!4791 = !DILocation(line: 2175, column: 110, scope: !4756)
!4792 = !DILocation(line: 2175, column: 20, scope: !4756)
!4793 = !DILocation(line: 2175, column: 18, scope: !4756)
!4794 = !DILocation(line: 2178, column: 8, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2178, column: 8)
!4796 = !DILocation(line: 2178, column: 13, scope: !4795)
!4797 = !DILocation(line: 2178, column: 22, scope: !4795)
!4798 = !DILocation(line: 2178, column: 25, scope: !4795)
!4799 = !DILocation(line: 2178, column: 30, scope: !4795)
!4800 = !DILocation(line: 2178, column: 8, scope: !4756)
!4801 = !DILocation(line: 2179, column: 21, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2178, column: 41)
!4803 = !DILocation(line: 2180, column: 19, scope: !4802)
!4804 = !DILocation(line: 2181, column: 4, scope: !4802)
!4805 = !DILocation(line: 2184, column: 8, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2184, column: 8)
!4807 = !DILocation(line: 2184, column: 13, scope: !4806)
!4808 = !DILocation(line: 2184, column: 20, scope: !4806)
!4809 = !DILocation(line: 2184, column: 25, scope: !4806)
!4810 = !DILocation(line: 2184, column: 28, scope: !4806)
!4811 = !DILocation(line: 2184, column: 8, scope: !4756)
!4812 = !DILocation(line: 2185, column: 19, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 2184, column: 43)
!4814 = !DILocation(line: 2186, column: 21, scope: !4813)
!4815 = !DILocation(line: 2187, column: 4, scope: !4813)
!4816 = !DILocation(line: 2190, column: 8, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2190, column: 8)
!4818 = !DILocation(line: 2190, column: 13, scope: !4817)
!4819 = !DILocation(line: 2190, column: 18, scope: !4817)
!4820 = !DILocation(line: 2190, column: 8, scope: !4756)
!4821 = !DILocation(line: 2191, column: 19, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2190, column: 32)
!4823 = !DILocation(line: 2192, column: 21, scope: !4822)
!4824 = !DILocation(line: 2193, column: 4, scope: !4822)
!4825 = !DILocation(line: 2196, column: 8, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2196, column: 8)
!4827 = !DILocation(line: 2196, column: 14, scope: !4826)
!4828 = !DILocation(line: 2196, column: 19, scope: !4826)
!4829 = !DILocation(line: 2196, column: 8, scope: !4756)
!4830 = !DILocation(line: 2197, column: 9, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2197, column: 9)
!4832 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 2196, column: 33)
!4833 = !DILocation(line: 2197, column: 15, scope: !4831)
!4834 = !DILocation(line: 2197, column: 23, scope: !4831)
!4835 = !DILocation(line: 2197, column: 9, scope: !4832)
!4836 = !DILocation(line: 2198, column: 10, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 2197, column: 43)
!4838 = !DILocation(line: 2198, column: 15, scope: !4837)
!4839 = !DILocation(line: 2198, column: 8, scope: !4837)
!4840 = !DILocation(line: 2198, column: 28, scope: !4837)
!4841 = !DILocation(line: 2198, column: 26, scope: !4837)
!4842 = !DILocation(line: 2198, column: 37, scope: !4837)
!4843 = !DILocation(line: 2198, column: 35, scope: !4837)
!4844 = !DILocation(line: 2199, column: 22, scope: !4837)
!4845 = !DILocation(line: 2199, column: 28, scope: !4837)
!4846 = !DILocation(line: 2199, column: 14, scope: !4837)
!4847 = !DILocation(line: 2199, column: 20, scope: !4837)
!4848 = !DILocation(line: 2199, column: 6, scope: !4837)
!4849 = !DILocation(line: 2199, column: 12, scope: !4837)
!4850 = !DILocation(line: 2200, column: 22, scope: !4837)
!4851 = !DILocation(line: 2200, column: 28, scope: !4837)
!4852 = !DILocation(line: 2200, column: 14, scope: !4837)
!4853 = !DILocation(line: 2200, column: 20, scope: !4837)
!4854 = !DILocation(line: 2200, column: 6, scope: !4837)
!4855 = !DILocation(line: 2200, column: 12, scope: !4837)
!4856 = !DILocation(line: 2201, column: 5, scope: !4837)
!4857 = !DILocation(line: 2203, column: 10, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 2202, column: 10)
!4859 = !DILocation(line: 2203, column: 15, scope: !4858)
!4860 = !DILocation(line: 2203, column: 8, scope: !4858)
!4861 = !DILocation(line: 2203, column: 23, scope: !4858)
!4862 = !DILocation(line: 2203, column: 28, scope: !4858)
!4863 = !DILocation(line: 2203, column: 21, scope: !4858)
!4864 = !DILocation(line: 2203, column: 38, scope: !4858)
!4865 = !DILocation(line: 2203, column: 43, scope: !4858)
!4866 = !DILocation(line: 2203, column: 36, scope: !4858)
!4867 = !DILocation(line: 2205, column: 4, scope: !4832)
!4868 = !DILocation(line: 2206, column: 13, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 2206, column: 13)
!4870 = !DILocation(line: 2206, column: 19, scope: !4869)
!4871 = !DILocation(line: 2206, column: 24, scope: !4869)
!4872 = !DILocation(line: 2206, column: 13, scope: !4826)
!4873 = !DILocalVariable(name: "ob", scope: !4874, file: !3, line: 2207, type: !2935)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2206, column: 40)
!4875 = !DILocation(line: 2207, column: 13, scope: !4874)
!4876 = !DILocation(line: 2207, column: 17, scope: !4874)
!4877 = !DILocation(line: 2207, column: 23, scope: !4874)
!4878 = !DILocation(line: 2208, column: 9, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 2208, column: 9)
!4880 = !DILocation(line: 2208, column: 9, scope: !4874)
!4881 = !DILocation(line: 2209, column: 10, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2208, column: 13)
!4883 = !DILocation(line: 2209, column: 8, scope: !4882)
!4884 = !DILocation(line: 2210, column: 10, scope: !4882)
!4885 = !DILocation(line: 2210, column: 8, scope: !4882)
!4886 = !DILocation(line: 2211, column: 10, scope: !4882)
!4887 = !DILocation(line: 2211, column: 8, scope: !4882)
!4888 = !DILocation(line: 2212, column: 17, scope: !4882)
!4889 = !DILocation(line: 2212, column: 26, scope: !4882)
!4890 = !DILocation(line: 2212, column: 31, scope: !4882)
!4891 = !DILocation(line: 2212, column: 6, scope: !4882)
!4892 = !DILocation(line: 2213, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2213, column: 10)
!4894 = !DILocation(line: 2213, column: 16, scope: !4893)
!4895 = !DILocation(line: 2213, column: 24, scope: !4893)
!4896 = !DILocation(line: 2213, column: 10, scope: !4882)
!4897 = !DILocation(line: 2214, column: 11, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 2214, column: 11)
!4899 = !DILocation(line: 2214, column: 16, scope: !4898)
!4900 = !DILocation(line: 2214, column: 20, scope: !4898)
!4901 = !DILocation(line: 2214, column: 23, scope: !4898)
!4902 = !DILocation(line: 2214, column: 28, scope: !4898)
!4903 = !DILocation(line: 2214, column: 33, scope: !4898)
!4904 = !DILocation(line: 2214, column: 11, scope: !4893)
!4905 = !DILocation(line: 2215, column: 18, scope: !4898)
!4906 = !DILocation(line: 2215, column: 23, scope: !4898)
!4907 = !DILocation(line: 2215, column: 28, scope: !4898)
!4908 = !DILocation(line: 2215, column: 41, scope: !4898)
!4909 = !DILocation(line: 2215, column: 8, scope: !4898)
!4910 = !DILocation(line: 2216, column: 16, scope: !4882)
!4911 = !DILocation(line: 2216, column: 20, scope: !4882)
!4912 = !DILocation(line: 2216, column: 30, scope: !4882)
!4913 = !DILocation(line: 2216, column: 6, scope: !4882)
!4914 = !DILocation(line: 2217, column: 10, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2217, column: 10)
!4916 = !DILocation(line: 2217, column: 15, scope: !4915)
!4917 = !DILocation(line: 2217, column: 10, scope: !4882)
!4918 = !DILocation(line: 2218, column: 18, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 2217, column: 23)
!4920 = !DILocation(line: 2218, column: 23, scope: !4919)
!4921 = !DILocation(line: 2218, column: 28, scope: !4919)
!4922 = !DILocation(line: 2218, column: 7, scope: !4919)
!4923 = !DILocation(line: 2219, column: 18, scope: !4919)
!4924 = !DILocation(line: 2219, column: 23, scope: !4919)
!4925 = !DILocation(line: 2219, column: 28, scope: !4919)
!4926 = !DILocation(line: 2219, column: 7, scope: !4919)
!4927 = !DILocation(line: 2220, column: 22, scope: !4919)
!4928 = !DILocation(line: 2220, column: 26, scope: !4919)
!4929 = !DILocation(line: 2220, column: 36, scope: !4919)
!4930 = !DILocation(line: 2220, column: 7, scope: !4919)
!4931 = !DILocation(line: 2221, column: 22, scope: !4919)
!4932 = !DILocation(line: 2221, column: 26, scope: !4919)
!4933 = !DILocation(line: 2221, column: 36, scope: !4919)
!4934 = !DILocation(line: 2221, column: 7, scope: !4919)
!4935 = !DILocation(line: 2222, column: 6, scope: !4919)
!4936 = !DILocation(line: 2223, column: 5, scope: !4882)
!4937 = !DILocation(line: 2226, column: 10, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2224, column: 10)
!4939 = !DILocation(line: 2226, column: 15, scope: !4938)
!4940 = !DILocation(line: 2226, column: 8, scope: !4938)
!4941 = !DILocation(line: 2227, column: 10, scope: !4938)
!4942 = !DILocation(line: 2227, column: 15, scope: !4938)
!4943 = !DILocation(line: 2227, column: 8, scope: !4938)
!4944 = !DILocation(line: 2227, column: 25, scope: !4938)
!4945 = !DILocation(line: 2227, column: 30, scope: !4938)
!4946 = !DILocation(line: 2227, column: 23, scope: !4938)
!4947 = !DILocation(line: 2229, column: 4, scope: !4874)
!4948 = !DILocation(line: 2230, column: 13, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2230, column: 13)
!4950 = !DILocation(line: 2230, column: 19, scope: !4949)
!4951 = !DILocation(line: 2230, column: 24, scope: !4949)
!4952 = !DILocation(line: 2230, column: 13, scope: !4869)
!4953 = !DILocation(line: 2231, column: 16, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 2230, column: 38)
!4955 = !DILocation(line: 2231, column: 5, scope: !4954)
!4956 = !DILocation(line: 2232, column: 9, scope: !4954)
!4957 = !DILocation(line: 2232, column: 14, scope: !4954)
!4958 = !DILocation(line: 2232, column: 7, scope: !4954)
!4959 = !DILocation(line: 2232, column: 23, scope: !4954)
!4960 = !DILocation(line: 2232, column: 28, scope: !4954)
!4961 = !DILocation(line: 2232, column: 21, scope: !4954)
!4962 = !DILocation(line: 2232, column: 39, scope: !4954)
!4963 = !DILocation(line: 2232, column: 44, scope: !4954)
!4964 = !DILocation(line: 2232, column: 37, scope: !4954)
!4965 = !DILocation(line: 2233, column: 4, scope: !4954)
!4966 = !DILocation(line: 2234, column: 13, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 2234, column: 13)
!4968 = !DILocation(line: 2234, column: 19, scope: !4967)
!4969 = !DILocation(line: 2234, column: 24, scope: !4967)
!4970 = !DILocation(line: 2234, column: 13, scope: !4949)
!4971 = !DILocation(line: 2235, column: 9, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2234, column: 38)
!4973 = !DILocation(line: 2235, column: 14, scope: !4972)
!4974 = !DILocation(line: 2235, column: 7, scope: !4972)
!4975 = !DILocation(line: 2235, column: 23, scope: !4972)
!4976 = !DILocation(line: 2235, column: 28, scope: !4972)
!4977 = !DILocation(line: 2235, column: 21, scope: !4972)
!4978 = !DILocation(line: 2235, column: 38, scope: !4972)
!4979 = !DILocation(line: 2235, column: 43, scope: !4972)
!4980 = !DILocation(line: 2235, column: 36, scope: !4972)
!4981 = !DILocation(line: 2236, column: 4, scope: !4972)
!4982 = !DILocation(line: 2237, column: 13, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2237, column: 13)
!4984 = !DILocation(line: 2237, column: 19, scope: !4983)
!4985 = !DILocation(line: 2237, column: 24, scope: !4983)
!4986 = !DILocation(line: 2237, column: 13, scope: !4967)
!4987 = !DILocation(line: 2238, column: 9, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 2237, column: 41)
!4989 = !DILocation(line: 2238, column: 14, scope: !4988)
!4990 = !DILocation(line: 2238, column: 7, scope: !4988)
!4991 = !DILocation(line: 2238, column: 24, scope: !4988)
!4992 = !DILocation(line: 2238, column: 29, scope: !4988)
!4993 = !DILocation(line: 2238, column: 22, scope: !4988)
!4994 = !DILocation(line: 2238, column: 39, scope: !4988)
!4995 = !DILocation(line: 2238, column: 44, scope: !4988)
!4996 = !DILocation(line: 2238, column: 37, scope: !4988)
!4997 = !DILocation(line: 2239, column: 4, scope: !4988)
!4998 = !DILocation(line: 2240, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 2240, column: 13)
!5000 = !DILocation(line: 2240, column: 19, scope: !4999)
!5001 = !DILocation(line: 2240, column: 24, scope: !4999)
!5002 = !DILocation(line: 2240, column: 13, scope: !4983)
!5003 = !DILocation(line: 2241, column: 9, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 2240, column: 38)
!5005 = !DILocation(line: 2241, column: 14, scope: !5004)
!5006 = !DILocation(line: 2241, column: 7, scope: !5004)
!5007 = !DILocation(line: 2241, column: 22, scope: !5004)
!5008 = !DILocation(line: 2241, column: 27, scope: !5004)
!5009 = !DILocation(line: 2241, column: 20, scope: !5004)
!5010 = !DILocation(line: 2241, column: 37, scope: !5004)
!5011 = !DILocation(line: 2241, column: 42, scope: !5004)
!5012 = !DILocation(line: 2241, column: 35, scope: !5004)
!5013 = !DILocation(line: 2242, column: 4, scope: !5004)
!5014 = !DILocation(line: 2243, column: 13, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 2243, column: 13)
!5016 = !DILocation(line: 2243, column: 19, scope: !5015)
!5017 = !DILocation(line: 2243, column: 24, scope: !5015)
!5018 = !DILocation(line: 2243, column: 13, scope: !4999)
!5019 = !DILocation(line: 2244, column: 9, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 2244, column: 9)
!5021 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 2243, column: 36)
!5022 = !DILocation(line: 2244, column: 15, scope: !5020)
!5023 = !DILocation(line: 2244, column: 23, scope: !5020)
!5024 = !DILocation(line: 2244, column: 9, scope: !5021)
!5025 = !DILocation(line: 2245, column: 10, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 2244, column: 43)
!5027 = !DILocation(line: 2245, column: 15, scope: !5026)
!5028 = !DILocation(line: 2245, column: 8, scope: !5026)
!5029 = !DILocation(line: 2245, column: 28, scope: !5026)
!5030 = !DILocation(line: 2245, column: 26, scope: !5026)
!5031 = !DILocation(line: 2245, column: 37, scope: !5026)
!5032 = !DILocation(line: 2245, column: 35, scope: !5026)
!5033 = !DILocation(line: 2246, column: 22, scope: !5026)
!5034 = !DILocation(line: 2246, column: 28, scope: !5026)
!5035 = !DILocation(line: 2246, column: 14, scope: !5026)
!5036 = !DILocation(line: 2246, column: 20, scope: !5026)
!5037 = !DILocation(line: 2246, column: 6, scope: !5026)
!5038 = !DILocation(line: 2246, column: 12, scope: !5026)
!5039 = !DILocation(line: 2247, column: 22, scope: !5026)
!5040 = !DILocation(line: 2247, column: 28, scope: !5026)
!5041 = !DILocation(line: 2247, column: 14, scope: !5026)
!5042 = !DILocation(line: 2247, column: 20, scope: !5026)
!5043 = !DILocation(line: 2247, column: 6, scope: !5026)
!5044 = !DILocation(line: 2247, column: 12, scope: !5026)
!5045 = !DILocation(line: 2248, column: 5, scope: !5026)
!5046 = !DILocalVariable(name: "suv", scope: !5047, file: !3, line: 2250, type: !5048)
!5047 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 2249, column: 10)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!5049 = !DILocation(line: 2250, column: 20, scope: !5047)
!5050 = !DILocation(line: 2250, column: 26, scope: !5047)
!5051 = !DILocation(line: 2250, column: 31, scope: !5047)
!5052 = !DILocation(line: 2250, column: 34, scope: !5047)
!5053 = !DILocation(line: 2250, column: 39, scope: !5047)
!5054 = !DILocalVariable(name: "i", scope: !5047, file: !3, line: 2251, type: !92)
!5055 = !DILocation(line: 2251, column: 10, scope: !5047)
!5056 = !DILocation(line: 2251, column: 14, scope: !5047)
!5057 = !DILocation(line: 2251, column: 19, scope: !5047)
!5058 = !DILocation(line: 2253, column: 10, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 2253, column: 10)
!5060 = !DILocation(line: 2253, column: 16, scope: !5059)
!5061 = !DILocation(line: 2253, column: 26, scope: !5059)
!5062 = !DILocation(line: 2253, column: 10, scope: !5047)
!5063 = !DILocation(line: 2254, column: 14, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 2254, column: 7)
!5065 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2253, column: 32)
!5066 = !DILocation(line: 2254, column: 12, scope: !5064)
!5067 = !DILocation(line: 2254, column: 19, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 2254, column: 7)
!5069 = !DILocation(line: 2254, column: 23, scope: !5068)
!5070 = !DILocation(line: 2254, column: 28, scope: !5068)
!5071 = !DILocation(line: 2254, column: 21, scope: !5068)
!5072 = !DILocation(line: 2254, column: 7, scope: !5064)
!5073 = !DILocation(line: 2255, column: 19, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 2255, column: 12)
!5075 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 2254, column: 40)
!5076 = !DILocation(line: 2255, column: 24, scope: !5074)
!5077 = !DILocation(line: 2255, column: 27, scope: !5074)
!5078 = !DILocation(line: 2255, column: 30, scope: !5074)
!5079 = !DILocation(line: 2255, column: 36, scope: !5074)
!5080 = !DILocation(line: 2255, column: 42, scope: !5074)
!5081 = !DILocation(line: 2255, column: 12, scope: !5074)
!5082 = !DILocation(line: 2255, column: 49, scope: !5074)
!5083 = !DILocation(line: 2255, column: 12, scope: !5075)
!5084 = !DILocation(line: 2256, column: 15, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2255, column: 54)
!5086 = !DILocation(line: 2256, column: 20, scope: !5085)
!5087 = !DILocation(line: 2256, column: 23, scope: !5085)
!5088 = !DILocation(line: 2256, column: 12, scope: !5085)
!5089 = !DILocation(line: 2257, column: 9, scope: !5085)
!5090 = !DILocation(line: 2259, column: 7, scope: !5075)
!5091 = !DILocation(line: 2254, column: 36, scope: !5068)
!5092 = !DILocation(line: 2254, column: 7, scope: !5068)
!5093 = distinct !{!5093, !5072, !5094}
!5094 = !DILocation(line: 2259, column: 7, scope: !5064)
!5095 = !DILocation(line: 2260, column: 6, scope: !5065)
!5096 = !DILocation(line: 2262, column: 10, scope: !5047)
!5097 = !DILocation(line: 2262, column: 15, scope: !5047)
!5098 = !DILocation(line: 2262, column: 8, scope: !5047)
!5099 = !DILocation(line: 2263, column: 10, scope: !5047)
!5100 = !DILocation(line: 2263, column: 15, scope: !5047)
!5101 = !DILocation(line: 2263, column: 8, scope: !5047)
!5102 = !DILocation(line: 2264, column: 10, scope: !5047)
!5103 = !DILocation(line: 2264, column: 15, scope: !5047)
!5104 = !DILocation(line: 2264, column: 8, scope: !5047)
!5105 = !DILocation(line: 2266, column: 46, scope: !5047)
!5106 = !DILocation(line: 2266, column: 51, scope: !5047)
!5107 = !DILocation(line: 2266, column: 57, scope: !5047)
!5108 = !DILocation(line: 2266, column: 6, scope: !5047)
!5109 = !DILocation(line: 2268, column: 4, scope: !5021)
!5110 = !DILocation(line: 2269, column: 13, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 2269, column: 13)
!5112 = !DILocation(line: 2269, column: 19, scope: !5111)
!5113 = !DILocation(line: 2269, column: 24, scope: !5111)
!5114 = !DILocation(line: 2269, column: 13, scope: !5015)
!5115 = !DILocation(line: 2270, column: 9, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 2269, column: 40)
!5117 = !DILocation(line: 2270, column: 14, scope: !5116)
!5118 = !DILocation(line: 2270, column: 7, scope: !5116)
!5119 = !DILocation(line: 2270, column: 25, scope: !5116)
!5120 = !DILocation(line: 2270, column: 30, scope: !5116)
!5121 = !DILocation(line: 2270, column: 23, scope: !5116)
!5122 = !DILocation(line: 2270, column: 41, scope: !5116)
!5123 = !DILocation(line: 2270, column: 46, scope: !5116)
!5124 = !DILocation(line: 2270, column: 39, scope: !5116)
!5125 = !DILocation(line: 2271, column: 4, scope: !5116)
!5126 = !DILocation(line: 2272, column: 13, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 2272, column: 13)
!5128 = !DILocation(line: 2272, column: 19, scope: !5127)
!5129 = !DILocation(line: 2272, column: 24, scope: !5127)
!5130 = !DILocation(line: 2272, column: 13, scope: !5111)
!5131 = !DILocation(line: 2273, column: 9, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 2272, column: 40)
!5133 = !DILocation(line: 2273, column: 7, scope: !5132)
!5134 = !DILocation(line: 2273, column: 22, scope: !5132)
!5135 = !DILocation(line: 2273, column: 20, scope: !5132)
!5136 = !DILocation(line: 2273, column: 31, scope: !5132)
!5137 = !DILocation(line: 2273, column: 29, scope: !5132)
!5138 = !DILocation(line: 2274, column: 12, scope: !5132)
!5139 = !DILocation(line: 2274, column: 17, scope: !5132)
!5140 = !DILocation(line: 2274, column: 5, scope: !5132)
!5141 = !DILocation(line: 2274, column: 10, scope: !5132)
!5142 = !DILocation(line: 2275, column: 12, scope: !5132)
!5143 = !DILocation(line: 2275, column: 17, scope: !5132)
!5144 = !DILocation(line: 2275, column: 5, scope: !5132)
!5145 = !DILocation(line: 2275, column: 10, scope: !5132)
!5146 = !DILocation(line: 2276, column: 12, scope: !5132)
!5147 = !DILocation(line: 2276, column: 17, scope: !5132)
!5148 = !DILocation(line: 2276, column: 5, scope: !5132)
!5149 = !DILocation(line: 2276, column: 10, scope: !5132)
!5150 = !DILocation(line: 2277, column: 12, scope: !5132)
!5151 = !DILocation(line: 2277, column: 17, scope: !5132)
!5152 = !DILocation(line: 2277, column: 5, scope: !5132)
!5153 = !DILocation(line: 2277, column: 10, scope: !5132)
!5154 = !DILocation(line: 2278, column: 12, scope: !5132)
!5155 = !DILocation(line: 2278, column: 17, scope: !5132)
!5156 = !DILocation(line: 2278, column: 5, scope: !5132)
!5157 = !DILocation(line: 2278, column: 10, scope: !5132)
!5158 = !DILocation(line: 2279, column: 12, scope: !5132)
!5159 = !DILocation(line: 2279, column: 17, scope: !5132)
!5160 = !DILocation(line: 2279, column: 5, scope: !5132)
!5161 = !DILocation(line: 2279, column: 10, scope: !5132)
!5162 = !DILocation(line: 2280, column: 4, scope: !5132)
!5163 = !DILocation(line: 2281, column: 13, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 2281, column: 13)
!5165 = !DILocation(line: 2281, column: 19, scope: !5164)
!5166 = !DILocation(line: 2281, column: 24, scope: !5164)
!5167 = !DILocation(line: 2281, column: 13, scope: !5127)
!5168 = !DILocation(line: 2282, column: 9, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2281, column: 40)
!5170 = !DILocation(line: 2282, column: 7, scope: !5169)
!5171 = !DILocation(line: 2282, column: 22, scope: !5169)
!5172 = !DILocation(line: 2282, column: 20, scope: !5169)
!5173 = !DILocation(line: 2282, column: 31, scope: !5169)
!5174 = !DILocation(line: 2282, column: 29, scope: !5169)
!5175 = !DILocation(line: 2283, column: 12, scope: !5169)
!5176 = !DILocation(line: 2283, column: 17, scope: !5169)
!5177 = !DILocation(line: 2283, column: 5, scope: !5169)
!5178 = !DILocation(line: 2283, column: 10, scope: !5169)
!5179 = !DILocation(line: 2284, column: 12, scope: !5169)
!5180 = !DILocation(line: 2284, column: 17, scope: !5169)
!5181 = !DILocation(line: 2284, column: 5, scope: !5169)
!5182 = !DILocation(line: 2284, column: 10, scope: !5169)
!5183 = !DILocation(line: 2285, column: 5, scope: !5169)
!5184 = !DILocation(line: 2285, column: 10, scope: !5169)
!5185 = !DILocation(line: 2286, column: 12, scope: !5169)
!5186 = !DILocation(line: 2286, column: 17, scope: !5169)
!5187 = !DILocation(line: 2286, column: 5, scope: !5169)
!5188 = !DILocation(line: 2286, column: 10, scope: !5169)
!5189 = !DILocation(line: 2287, column: 5, scope: !5169)
!5190 = !DILocation(line: 2287, column: 10, scope: !5169)
!5191 = !DILocation(line: 2288, column: 12, scope: !5169)
!5192 = !DILocation(line: 2288, column: 17, scope: !5169)
!5193 = !DILocation(line: 2288, column: 5, scope: !5169)
!5194 = !DILocation(line: 2288, column: 10, scope: !5169)
!5195 = !DILocation(line: 2289, column: 4, scope: !5169)
!5196 = !DILocation(line: 2291, column: 5, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2290, column: 9)
!5198 = !DILocation(line: 2295, column: 8, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2295, column: 8)
!5200 = !DILocation(line: 2295, column: 14, scope: !5199)
!5201 = !DILocation(line: 2295, column: 20, scope: !5199)
!5202 = !DILocation(line: 2295, column: 8, scope: !4756)
!5203 = !DILocation(line: 2296, column: 17, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2295, column: 43)
!5205 = !DILocation(line: 2296, column: 12, scope: !5204)
!5206 = !DILocation(line: 2296, column: 15, scope: !5204)
!5207 = !DILocation(line: 2297, column: 27, scope: !5204)
!5208 = !DILocation(line: 2297, column: 36, scope: !5204)
!5209 = !DILocation(line: 2297, column: 16, scope: !5204)
!5210 = !DILocation(line: 2297, column: 25, scope: !5204)
!5211 = !DILocation(line: 2297, column: 5, scope: !5204)
!5212 = !DILocation(line: 2297, column: 14, scope: !5204)
!5213 = !DILocation(line: 2298, column: 4, scope: !5204)
!5214 = !DILocation(line: 2299, column: 16, scope: !5199)
!5215 = !DILocation(line: 2299, column: 19, scope: !5199)
!5216 = !DILocation(line: 2301, column: 8, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2301, column: 8)
!5218 = !DILocation(line: 2301, column: 8, scope: !4756)
!5219 = !DILocation(line: 2302, column: 17, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 2301, column: 19)
!5221 = !DILocation(line: 2302, column: 26, scope: !5220)
!5222 = !DILocation(line: 2302, column: 30, scope: !5220)
!5223 = !DILocation(line: 2302, column: 5, scope: !5220)
!5224 = !DILocation(line: 2303, column: 9, scope: !5220)
!5225 = !DILocation(line: 2303, column: 7, scope: !5220)
!5226 = !DILocation(line: 2304, column: 4, scope: !5220)
!5227 = !DILocation(line: 2307, column: 15, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2307, column: 8)
!5229 = !DILocation(line: 2307, column: 8, scope: !5228)
!5230 = !DILocation(line: 2307, column: 19, scope: !5228)
!5231 = !DILocation(line: 2307, column: 25, scope: !5228)
!5232 = !DILocation(line: 2307, column: 30, scope: !5228)
!5233 = !DILocation(line: 2307, column: 34, scope: !5228)
!5234 = !DILocation(line: 2307, column: 47, scope: !5228)
!5235 = !DILocation(line: 2307, column: 51, scope: !5228)
!5236 = !DILocation(line: 2307, column: 56, scope: !5228)
!5237 = !DILocation(line: 2307, column: 64, scope: !5228)
!5238 = !DILocation(line: 2307, column: 8, scope: !4756)
!5239 = !DILocation(line: 2308, column: 9, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2308, column: 9)
!5241 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 2307, column: 83)
!5242 = !DILocation(line: 2308, column: 9, scope: !5241)
!5243 = !DILocation(line: 2309, column: 53, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2308, column: 26)
!5245 = !DILocation(line: 2309, column: 58, scope: !5244)
!5246 = !DILocation(line: 2309, column: 64, scope: !5244)
!5247 = !DILocation(line: 2310, column: 48, scope: !5244)
!5248 = !DILocation(line: 2310, column: 53, scope: !5244)
!5249 = !DILocation(line: 2310, column: 52, scope: !5244)
!5250 = !DILocation(line: 2310, column: 65, scope: !5244)
!5251 = !DILocation(line: 2310, column: 69, scope: !5244)
!5252 = !DILocation(line: 2310, column: 73, scope: !5244)
!5253 = !DILocation(line: 2310, column: 77, scope: !5244)
!5254 = !DILocation(line: 2310, column: 85, scope: !5244)
!5255 = !DILocation(line: 2310, column: 90, scope: !5244)
!5256 = !DILocation(line: 2311, column: 39, scope: !5244)
!5257 = !DILocation(line: 2311, column: 43, scope: !5244)
!5258 = !DILocation(line: 2309, column: 15, scope: !5244)
!5259 = !DILocation(line: 2309, column: 13, scope: !5244)
!5260 = !DILocation(line: 2312, column: 5, scope: !5244)
!5261 = !DILocation(line: 2313, column: 14, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2313, column: 14)
!5263 = !DILocation(line: 2313, column: 14, scope: !5240)
!5264 = !DILocation(line: 2314, column: 45, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2313, column: 29)
!5266 = !DILocation(line: 2314, column: 50, scope: !5265)
!5267 = !DILocation(line: 2314, column: 56, scope: !5265)
!5268 = !DILocation(line: 2315, column: 42, scope: !5265)
!5269 = !DILocation(line: 2315, column: 47, scope: !5265)
!5270 = !DILocation(line: 2315, column: 46, scope: !5265)
!5271 = !DILocation(line: 2315, column: 59, scope: !5265)
!5272 = !DILocation(line: 2315, column: 63, scope: !5265)
!5273 = !DILocation(line: 2315, column: 67, scope: !5265)
!5274 = !DILocation(line: 2315, column: 71, scope: !5265)
!5275 = !DILocation(line: 2315, column: 79, scope: !5265)
!5276 = !DILocation(line: 2315, column: 84, scope: !5265)
!5277 = !DILocation(line: 2316, column: 33, scope: !5265)
!5278 = !DILocation(line: 2316, column: 37, scope: !5265)
!5279 = !DILocation(line: 2314, column: 15, scope: !5265)
!5280 = !DILocation(line: 2314, column: 13, scope: !5265)
!5281 = !DILocation(line: 2317, column: 5, scope: !5265)
!5282 = !DILocation(line: 2319, column: 20, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2318, column: 10)
!5284 = !DILocation(line: 2319, column: 25, scope: !5283)
!5285 = !DILocation(line: 2319, column: 30, scope: !5283)
!5286 = !DILocation(line: 2319, column: 36, scope: !5283)
!5287 = !DILocation(line: 2319, column: 40, scope: !5283)
!5288 = !DILocation(line: 2319, column: 44, scope: !5283)
!5289 = !DILocation(line: 2319, column: 48, scope: !5283)
!5290 = !DILocation(line: 2319, column: 56, scope: !5283)
!5291 = !DILocation(line: 2319, column: 61, scope: !5283)
!5292 = !DILocation(line: 2319, column: 6, scope: !5283)
!5293 = !DILocation(line: 2320, column: 29, scope: !5283)
!5294 = !DILocation(line: 2320, column: 34, scope: !5283)
!5295 = !DILocation(line: 2320, column: 40, scope: !5283)
!5296 = !DILocation(line: 2320, column: 48, scope: !5283)
!5297 = !DILocation(line: 2320, column: 53, scope: !5283)
!5298 = !DILocation(line: 2320, column: 67, scope: !5283)
!5299 = !DILocation(line: 2320, column: 71, scope: !5283)
!5300 = !DILocation(line: 2320, column: 15, scope: !5283)
!5301 = !DILocation(line: 2320, column: 13, scope: !5283)
!5302 = !DILocation(line: 2322, column: 4, scope: !5241)
!5303 = !DILocation(line: 2324, column: 19, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 2323, column: 9)
!5305 = !DILocation(line: 2324, column: 24, scope: !5304)
!5306 = !DILocation(line: 2324, column: 29, scope: !5304)
!5307 = !DILocation(line: 2324, column: 35, scope: !5304)
!5308 = !DILocation(line: 2324, column: 39, scope: !5304)
!5309 = !DILocation(line: 2324, column: 43, scope: !5304)
!5310 = !DILocation(line: 2324, column: 47, scope: !5304)
!5311 = !DILocation(line: 2324, column: 55, scope: !5304)
!5312 = !DILocation(line: 2324, column: 60, scope: !5304)
!5313 = !DILocation(line: 2324, column: 5, scope: !5304)
!5314 = !DILocation(line: 2325, column: 28, scope: !5304)
!5315 = !DILocation(line: 2325, column: 33, scope: !5304)
!5316 = !DILocation(line: 2325, column: 39, scope: !5304)
!5317 = !DILocation(line: 2325, column: 47, scope: !5304)
!5318 = !DILocation(line: 2325, column: 52, scope: !5304)
!5319 = !DILocation(line: 2325, column: 66, scope: !5304)
!5320 = !DILocation(line: 2325, column: 70, scope: !5304)
!5321 = !DILocation(line: 2325, column: 14, scope: !5304)
!5322 = !DILocation(line: 2325, column: 12, scope: !5304)
!5323 = !DILocation(line: 2330, column: 9, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2330, column: 8)
!5325 = !DILocation(line: 2330, column: 16, scope: !5324)
!5326 = !DILocation(line: 2330, column: 27, scope: !5324)
!5327 = !DILocation(line: 2330, column: 31, scope: !5324)
!5328 = !DILocation(line: 2330, column: 37, scope: !5324)
!5329 = !DILocation(line: 2330, column: 45, scope: !5324)
!5330 = !DILocation(line: 2330, column: 8, scope: !4756)
!5331 = !DILocation(line: 2331, column: 43, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 2330, column: 63)
!5333 = !DILocation(line: 2331, column: 18, scope: !5332)
!5334 = !DILocation(line: 2331, column: 12, scope: !5332)
!5335 = !DILocation(line: 2331, column: 16, scope: !5332)
!5336 = !DILocation(line: 2332, column: 12, scope: !5332)
!5337 = !DILocation(line: 2333, column: 4, scope: !5332)
!5338 = !DILocation(line: 2334, column: 8, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2334, column: 8)
!5340 = !DILocation(line: 2334, column: 14, scope: !5339)
!5341 = !DILocation(line: 2334, column: 22, scope: !5339)
!5342 = !DILocation(line: 2334, column: 8, scope: !4756)
!5343 = !DILocation(line: 2335, column: 9, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 2335, column: 9)
!5345 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2334, column: 39)
!5346 = !DILocation(line: 2335, column: 16, scope: !5344)
!5347 = !DILocation(line: 2335, column: 9, scope: !5345)
!5348 = !DILocation(line: 2336, column: 29, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 2335, column: 27)
!5350 = !DILocation(line: 2336, column: 21, scope: !5349)
!5351 = !DILocation(line: 2336, column: 13, scope: !5349)
!5352 = !DILocation(line: 2336, column: 15, scope: !5349)
!5353 = !DILocation(line: 2337, column: 29, scope: !5349)
!5354 = !DILocation(line: 2337, column: 21, scope: !5349)
!5355 = !DILocation(line: 2337, column: 13, scope: !5349)
!5356 = !DILocation(line: 2337, column: 15, scope: !5349)
!5357 = !DILocation(line: 2338, column: 29, scope: !5349)
!5358 = !DILocation(line: 2338, column: 21, scope: !5349)
!5359 = !DILocation(line: 2338, column: 13, scope: !5349)
!5360 = !DILocation(line: 2338, column: 15, scope: !5349)
!5361 = !DILocation(line: 2339, column: 5, scope: !5349)
!5362 = !DILocation(line: 2340, column: 29, scope: !5345)
!5363 = !DILocation(line: 2340, column: 21, scope: !5345)
!5364 = !DILocation(line: 2340, column: 12, scope: !5345)
!5365 = !DILocation(line: 2340, column: 15, scope: !5345)
!5366 = !DILocation(line: 2341, column: 4, scope: !5345)
!5367 = !DILocation(line: 2342, column: 8, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2342, column: 8)
!5369 = !DILocation(line: 2342, column: 14, scope: !5368)
!5370 = !DILocation(line: 2342, column: 22, scope: !5368)
!5371 = !DILocation(line: 2342, column: 8, scope: !4756)
!5372 = !DILocation(line: 2343, column: 9, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2343, column: 9)
!5374 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2342, column: 38)
!5375 = !DILocation(line: 2343, column: 16, scope: !5373)
!5376 = !DILocation(line: 2343, column: 9, scope: !5374)
!5377 = !DILocation(line: 2344, column: 19, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2343, column: 27)
!5379 = !DILocation(line: 2344, column: 10, scope: !5378)
!5380 = !DILocation(line: 2345, column: 18, scope: !5378)
!5381 = !DILocation(line: 2345, column: 13, scope: !5378)
!5382 = !DILocation(line: 2345, column: 15, scope: !5378)
!5383 = !DILocation(line: 2346, column: 19, scope: !5378)
!5384 = !DILocation(line: 2346, column: 16, scope: !5378)
!5385 = !DILocation(line: 2347, column: 5, scope: !5378)
!5386 = !DILocation(line: 2349, column: 19, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2348, column: 10)
!5388 = !DILocation(line: 2349, column: 10, scope: !5387)
!5389 = !DILocation(line: 2350, column: 19, scope: !5387)
!5390 = !DILocation(line: 2350, column: 13, scope: !5387)
!5391 = !DILocation(line: 2350, column: 16, scope: !5387)
!5392 = !DILocation(line: 2351, column: 19, scope: !5387)
!5393 = !DILocation(line: 2351, column: 16, scope: !5387)
!5394 = !DILocation(line: 2353, column: 4, scope: !5374)
!5395 = !DILocation(line: 2355, column: 12, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2354, column: 9)
!5397 = !DILocation(line: 2355, column: 9, scope: !5396)
!5398 = !DILocation(line: 2358, column: 15, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2358, column: 8)
!5400 = !DILocation(line: 2358, column: 8, scope: !5399)
!5401 = !DILocation(line: 2358, column: 8, scope: !4756)
!5402 = !DILocation(line: 2359, column: 10, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2359, column: 9)
!5404 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 2358, column: 20)
!5405 = !DILocation(line: 2359, column: 17, scope: !5403)
!5406 = !DILocation(line: 2359, column: 27, scope: !5403)
!5407 = !DILocation(line: 2359, column: 9, scope: !5404)
!5408 = !DILocation(line: 2361, column: 10, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 2361, column: 10)
!5410 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 2359, column: 32)
!5411 = !DILocation(line: 2361, column: 17, scope: !5409)
!5412 = !DILocation(line: 2361, column: 10, scope: !5410)
!5413 = !DILocation(line: 2362, column: 25, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 2361, column: 28)
!5415 = !DILocation(line: 2362, column: 38, scope: !5414)
!5416 = !DILocation(line: 2362, column: 7, scope: !5414)
!5417 = !DILocation(line: 2363, column: 6, scope: !5414)
!5418 = !DILocalVariable(name: "co_nor", scope: !5419, file: !3, line: 2365, type: !91)
!5419 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 2364, column: 11)
!5420 = !DILocation(line: 2365, column: 13, scope: !5419)
!5421 = !DILocation(line: 2365, column: 40, scope: !5419)
!5422 = !DILocation(line: 2365, column: 44, scope: !5419)
!5423 = !DILocation(line: 2365, column: 28, scope: !5419)
!5424 = !DILocation(line: 2365, column: 26, scope: !5419)
!5425 = !DILocalVariable(name: "si", scope: !5419, file: !3, line: 2366, type: !91)
!5426 = !DILocation(line: 2366, column: 13, scope: !5419)
!5427 = !DILocation(line: 2366, column: 37, scope: !5419)
!5428 = !DILocation(line: 2366, column: 41, scope: !5419)
!5429 = !DILocation(line: 2366, column: 25, scope: !5419)
!5430 = !DILocation(line: 2366, column: 23, scope: !5419)
!5431 = !DILocalVariable(name: "f1", scope: !5419, file: !3, line: 2367, type: !91)
!5432 = !DILocation(line: 2367, column: 13, scope: !5419)
!5433 = !DILocalVariable(name: "f2", scope: !5419, file: !3, line: 2367, type: !91)
!5434 = !DILocation(line: 2367, column: 17, scope: !5419)
!5435 = !DILocation(line: 2369, column: 11, scope: !5419)
!5436 = !DILocation(line: 2369, column: 16, scope: !5419)
!5437 = !DILocation(line: 2369, column: 9, scope: !5419)
!5438 = !DILocation(line: 2370, column: 11, scope: !5419)
!5439 = !DILocation(line: 2370, column: 16, scope: !5419)
!5440 = !DILocation(line: 2370, column: 9, scope: !5419)
!5441 = !DILocation(line: 2371, column: 22, scope: !5419)
!5442 = !DILocation(line: 2371, column: 25, scope: !5419)
!5443 = !DILocation(line: 2371, column: 24, scope: !5419)
!5444 = !DILocation(line: 2371, column: 32, scope: !5419)
!5445 = !DILocation(line: 2371, column: 35, scope: !5419)
!5446 = !DILocation(line: 2371, column: 34, scope: !5419)
!5447 = !DILocation(line: 2371, column: 31, scope: !5419)
!5448 = !DILocation(line: 2371, column: 14, scope: !5419)
!5449 = !DILocation(line: 2371, column: 7, scope: !5419)
!5450 = !DILocation(line: 2371, column: 20, scope: !5419)
!5451 = !DILocation(line: 2372, column: 11, scope: !5419)
!5452 = !DILocation(line: 2372, column: 16, scope: !5419)
!5453 = !DILocation(line: 2372, column: 9, scope: !5419)
!5454 = !DILocation(line: 2373, column: 11, scope: !5419)
!5455 = !DILocation(line: 2373, column: 16, scope: !5419)
!5456 = !DILocation(line: 2373, column: 9, scope: !5419)
!5457 = !DILocation(line: 2374, column: 22, scope: !5419)
!5458 = !DILocation(line: 2374, column: 25, scope: !5419)
!5459 = !DILocation(line: 2374, column: 24, scope: !5419)
!5460 = !DILocation(line: 2374, column: 32, scope: !5419)
!5461 = !DILocation(line: 2374, column: 35, scope: !5419)
!5462 = !DILocation(line: 2374, column: 34, scope: !5419)
!5463 = !DILocation(line: 2374, column: 31, scope: !5419)
!5464 = !DILocation(line: 2374, column: 14, scope: !5419)
!5465 = !DILocation(line: 2374, column: 7, scope: !5419)
!5466 = !DILocation(line: 2374, column: 20, scope: !5419)
!5467 = !DILocation(line: 2375, column: 22, scope: !5419)
!5468 = !DILocation(line: 2375, column: 25, scope: !5419)
!5469 = !DILocation(line: 2375, column: 24, scope: !5419)
!5470 = !DILocation(line: 2375, column: 32, scope: !5419)
!5471 = !DILocation(line: 2375, column: 35, scope: !5419)
!5472 = !DILocation(line: 2375, column: 34, scope: !5419)
!5473 = !DILocation(line: 2375, column: 31, scope: !5419)
!5474 = !DILocation(line: 2375, column: 14, scope: !5419)
!5475 = !DILocation(line: 2375, column: 7, scope: !5419)
!5476 = !DILocation(line: 2375, column: 20, scope: !5419)
!5477 = !DILocation(line: 2377, column: 5, scope: !5410)
!5478 = !DILocation(line: 2379, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2379, column: 9)
!5480 = !DILocation(line: 2379, column: 15, scope: !5479)
!5481 = !DILocation(line: 2379, column: 21, scope: !5479)
!5482 = !DILocation(line: 2379, column: 9, scope: !5404)
!5483 = !DILocalVariable(name: "warpnor", scope: !5484, file: !3, line: 2380, type: !201)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 2379, column: 33)
!5485 = !DILocation(line: 2380, column: 13, scope: !5484)
!5486 = !DILocation(line: 2380, column: 29, scope: !5484)
!5487 = !DILocalVariable(name: "warpnor_", scope: !5484, file: !3, line: 2380, type: !344)
!5488 = !DILocation(line: 2380, column: 34, scope: !5484)
!5489 = !DILocation(line: 2382, column: 10, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 2382, column: 10)
!5491 = !DILocation(line: 2382, column: 10, scope: !5484)
!5492 = !DILocation(line: 2383, column: 18, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 2382, column: 25)
!5494 = !DILocation(line: 2383, column: 35, scope: !5493)
!5495 = !DILocation(line: 2383, column: 7, scope: !5493)
!5496 = !DILocation(line: 2384, column: 16, scope: !5493)
!5497 = !DILocation(line: 2384, column: 14, scope: !5493)
!5498 = !DILocation(line: 2385, column: 20, scope: !5493)
!5499 = !DILocation(line: 2385, column: 7, scope: !5493)
!5500 = !DILocation(line: 2386, column: 6, scope: !5493)
!5501 = !DILocation(line: 2387, column: 18, scope: !5484)
!5502 = !DILocation(line: 2387, column: 24, scope: !5484)
!5503 = !DILocation(line: 2387, column: 32, scope: !5484)
!5504 = !DILocation(line: 2387, column: 31, scope: !5484)
!5505 = !DILocation(line: 2387, column: 6, scope: !5484)
!5506 = !DILocation(line: 2387, column: 16, scope: !5484)
!5507 = !DILocation(line: 2388, column: 18, scope: !5484)
!5508 = !DILocation(line: 2388, column: 24, scope: !5484)
!5509 = !DILocation(line: 2388, column: 32, scope: !5484)
!5510 = !DILocation(line: 2388, column: 31, scope: !5484)
!5511 = !DILocation(line: 2388, column: 6, scope: !5484)
!5512 = !DILocation(line: 2388, column: 16, scope: !5484)
!5513 = !DILocation(line: 2389, column: 18, scope: !5484)
!5514 = !DILocation(line: 2389, column: 24, scope: !5484)
!5515 = !DILocation(line: 2389, column: 32, scope: !5484)
!5516 = !DILocation(line: 2389, column: 31, scope: !5484)
!5517 = !DILocation(line: 2389, column: 6, scope: !5484)
!5518 = !DILocation(line: 2389, column: 16, scope: !5484)
!5519 = !DILocation(line: 2390, column: 16, scope: !5484)
!5520 = !DILocation(line: 2391, column: 5, scope: !5484)
!5521 = !DILocation(line: 2407, column: 4, scope: !5404)
!5522 = !DILocation(line: 2410, column: 8, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2410, column: 8)
!5524 = !DILocation(line: 2410, column: 14, scope: !5523)
!5525 = !DILocation(line: 2410, column: 20, scope: !5523)
!5526 = !DILocation(line: 2410, column: 8, scope: !4756)
!5527 = !DILocalVariable(name: "tcol", scope: !5528, file: !3, line: 2411, type: !344)
!5528 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 2410, column: 60)
!5529 = !DILocation(line: 2411, column: 11, scope: !5528)
!5530 = !DILocation(line: 2414, column: 16, scope: !5528)
!5531 = !DILocation(line: 2414, column: 30, scope: !5528)
!5532 = !DILocation(line: 2414, column: 5, scope: !5528)
!5533 = !DILocation(line: 2416, column: 10, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 2416, column: 9)
!5535 = !DILocation(line: 2416, column: 17, scope: !5534)
!5536 = !DILocation(line: 2416, column: 28, scope: !5534)
!5537 = !DILocation(line: 2416, column: 9, scope: !5528)
!5538 = !DILocation(line: 2417, column: 17, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2416, column: 34)
!5540 = !DILocation(line: 2417, column: 24, scope: !5539)
!5541 = !DILocation(line: 2417, column: 30, scope: !5539)
!5542 = !DILocation(line: 2417, column: 6, scope: !5539)
!5543 = !DILocation(line: 2418, column: 5, scope: !5539)
!5544 = !DILocation(line: 2419, column: 14, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2419, column: 14)
!5546 = !DILocation(line: 2419, column: 20, scope: !5545)
!5547 = !DILocation(line: 2419, column: 26, scope: !5545)
!5548 = !DILocation(line: 2419, column: 14, scope: !5534)
!5549 = !DILocation(line: 2420, column: 19, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 2419, column: 39)
!5551 = !DILocation(line: 2420, column: 13, scope: !5550)
!5552 = !DILocation(line: 2420, column: 17, scope: !5550)
!5553 = !DILocation(line: 2421, column: 5, scope: !5550)
!5554 = !DILocation(line: 2423, column: 26, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 2422, column: 10)
!5556 = !DILocation(line: 2423, column: 13, scope: !5555)
!5557 = !DILocation(line: 2423, column: 17, scope: !5555)
!5558 = !DILocation(line: 2427, column: 9, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 2427, column: 9)
!5560 = !DILocation(line: 2427, column: 14, scope: !5559)
!5561 = !DILocation(line: 2427, column: 18, scope: !5559)
!5562 = !DILocation(line: 2427, column: 9, scope: !5528)
!5563 = !DILocalVariable(name: "ima", scope: !5564, file: !3, line: 2428, type: !3130)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2427, column: 31)
!5565 = !DILocation(line: 2428, column: 13, scope: !5564)
!5566 = !DILocation(line: 2428, column: 19, scope: !5564)
!5567 = !DILocation(line: 2428, column: 24, scope: !5564)
!5568 = !DILocalVariable(name: "ibuf", scope: !5564, file: !3, line: 2429, type: !3706)
!5569 = !DILocation(line: 2429, column: 13, scope: !5564)
!5570 = !DILocation(line: 2429, column: 48, scope: !5564)
!5571 = !DILocation(line: 2429, column: 54, scope: !5564)
!5572 = !DILocation(line: 2429, column: 59, scope: !5564)
!5573 = !DILocation(line: 2429, column: 66, scope: !5564)
!5574 = !DILocation(line: 2429, column: 70, scope: !5564)
!5575 = !DILocation(line: 2429, column: 20, scope: !5564)
!5576 = !DILocation(line: 2432, column: 10, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2432, column: 10)
!5578 = !DILocation(line: 2432, column: 15, scope: !5577)
!5579 = !DILocation(line: 2432, column: 20, scope: !5577)
!5580 = !DILocation(line: 2432, column: 26, scope: !5577)
!5581 = !DILocation(line: 2432, column: 19, scope: !5577)
!5582 = !DILocation(line: 2432, column: 38, scope: !5577)
!5583 = !DILocation(line: 2432, column: 43, scope: !5577)
!5584 = !DILocation(line: 2432, column: 41, scope: !5577)
!5585 = !DILocation(line: 2432, column: 10, scope: !5564)
!5586 = !DILocation(line: 2433, column: 57, scope: !5577)
!5587 = !DILocation(line: 2433, column: 63, scope: !5577)
!5588 = !DILocation(line: 2433, column: 69, scope: !5577)
!5589 = !DILocation(line: 2433, column: 7, scope: !5577)
!5590 = !DILocation(line: 2435, column: 34, scope: !5564)
!5591 = !DILocation(line: 2435, column: 39, scope: !5564)
!5592 = !DILocation(line: 2435, column: 45, scope: !5564)
!5593 = !DILocation(line: 2435, column: 49, scope: !5564)
!5594 = !DILocation(line: 2435, column: 6, scope: !5564)
!5595 = !DILocation(line: 2436, column: 5, scope: !5564)
!5596 = !DILocation(line: 2438, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 2438, column: 9)
!5598 = !DILocation(line: 2438, column: 15, scope: !5597)
!5599 = !DILocation(line: 2438, column: 21, scope: !5597)
!5600 = !DILocation(line: 2438, column: 9, scope: !5528)
!5601 = !DILocalVariable(name: "colfac", scope: !5602, file: !3, line: 2439, type: !91)
!5602 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 2438, column: 32)
!5603 = !DILocation(line: 2439, column: 12, scope: !5602)
!5604 = !DILocation(line: 2439, column: 20, scope: !5602)
!5605 = !DILocation(line: 2439, column: 26, scope: !5602)
!5606 = !DILocation(line: 2439, column: 33, scope: !5602)
!5607 = !DILocation(line: 2439, column: 32, scope: !5602)
!5608 = !DILocation(line: 2440, column: 25, scope: !5602)
!5609 = !DILocation(line: 2440, column: 30, scope: !5602)
!5610 = !DILocation(line: 2440, column: 33, scope: !5602)
!5611 = !DILocation(line: 2440, column: 40, scope: !5602)
!5612 = !DILocation(line: 2440, column: 45, scope: !5602)
!5613 = !DILocation(line: 2440, column: 55, scope: !5602)
!5614 = !DILocation(line: 2440, column: 60, scope: !5602)
!5615 = !DILocation(line: 2440, column: 68, scope: !5602)
!5616 = !DILocation(line: 2440, column: 74, scope: !5602)
!5617 = !DILocation(line: 2440, column: 6, scope: !5602)
!5618 = !DILocation(line: 2441, column: 5, scope: !5602)
!5619 = !DILocation(line: 2442, column: 9, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 2442, column: 9)
!5621 = !DILocation(line: 2442, column: 15, scope: !5620)
!5622 = !DILocation(line: 2442, column: 21, scope: !5620)
!5623 = !DILocation(line: 2442, column: 9, scope: !5528)
!5624 = !DILocalVariable(name: "colspecfac", scope: !5625, file: !3, line: 2443, type: !91)
!5625 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 2442, column: 36)
!5626 = !DILocation(line: 2443, column: 12, scope: !5625)
!5627 = !DILocation(line: 2443, column: 24, scope: !5625)
!5628 = !DILocation(line: 2443, column: 30, scope: !5625)
!5629 = !DILocation(line: 2443, column: 41, scope: !5625)
!5630 = !DILocation(line: 2443, column: 40, scope: !5625)
!5631 = !DILocation(line: 2444, column: 25, scope: !5625)
!5632 = !DILocation(line: 2444, column: 30, scope: !5625)
!5633 = !DILocation(line: 2444, column: 37, scope: !5625)
!5634 = !DILocation(line: 2444, column: 44, scope: !5625)
!5635 = !DILocation(line: 2444, column: 49, scope: !5625)
!5636 = !DILocation(line: 2444, column: 63, scope: !5625)
!5637 = !DILocation(line: 2444, column: 68, scope: !5625)
!5638 = !DILocation(line: 2444, column: 80, scope: !5625)
!5639 = !DILocation(line: 2444, column: 86, scope: !5625)
!5640 = !DILocation(line: 2444, column: 6, scope: !5625)
!5641 = !DILocation(line: 2445, column: 5, scope: !5625)
!5642 = !DILocation(line: 2446, column: 9, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 2446, column: 9)
!5644 = !DILocation(line: 2446, column: 15, scope: !5643)
!5645 = !DILocation(line: 2446, column: 21, scope: !5643)
!5646 = !DILocation(line: 2446, column: 9, scope: !5528)
!5647 = !DILocalVariable(name: "mirrfac", scope: !5648, file: !3, line: 2447, type: !91)
!5648 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 2446, column: 35)
!5649 = !DILocation(line: 2447, column: 12, scope: !5648)
!5650 = !DILocation(line: 2447, column: 21, scope: !5648)
!5651 = !DILocation(line: 2447, column: 27, scope: !5648)
!5652 = !DILocation(line: 2447, column: 35, scope: !5648)
!5653 = !DILocation(line: 2447, column: 34, scope: !5648)
!5654 = !DILocation(line: 2450, column: 10, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 2450, column: 10)
!5656 = !DILocation(line: 2450, column: 15, scope: !5655)
!5657 = !DILocation(line: 2450, column: 19, scope: !5655)
!5658 = !DILocation(line: 2450, column: 32, scope: !5655)
!5659 = !DILocation(line: 2450, column: 35, scope: !5655)
!5660 = !DILocation(line: 2450, column: 41, scope: !5655)
!5661 = !DILocation(line: 2450, column: 50, scope: !5655)
!5662 = !DILocation(line: 2450, column: 10, scope: !5648)
!5663 = !DILocation(line: 2451, column: 20, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 2450, column: 64)
!5665 = !DILocation(line: 2451, column: 24, scope: !5664)
!5666 = !DILocation(line: 2451, column: 23, scope: !5664)
!5667 = !DILocation(line: 2451, column: 11, scope: !5664)
!5668 = !DILocation(line: 2452, column: 19, scope: !5664)
!5669 = !DILocation(line: 2452, column: 17, scope: !5664)
!5670 = !DILocation(line: 2452, column: 11, scope: !5664)
!5671 = !DILocation(line: 2453, column: 23, scope: !5664)
!5672 = !DILocation(line: 2453, column: 30, scope: !5664)
!5673 = !DILocation(line: 2453, column: 35, scope: !5664)
!5674 = !DILocation(line: 2453, column: 40, scope: !5664)
!5675 = !DILocation(line: 2453, column: 34, scope: !5664)
!5676 = !DILocation(line: 2453, column: 28, scope: !5664)
!5677 = !DILocation(line: 2453, column: 7, scope: !5664)
!5678 = !DILocation(line: 2453, column: 12, scope: !5664)
!5679 = !DILocation(line: 2453, column: 21, scope: !5664)
!5680 = !DILocation(line: 2454, column: 23, scope: !5664)
!5681 = !DILocation(line: 2454, column: 28, scope: !5664)
!5682 = !DILocation(line: 2454, column: 27, scope: !5664)
!5683 = !DILocation(line: 2454, column: 38, scope: !5664)
!5684 = !DILocation(line: 2454, column: 43, scope: !5664)
!5685 = !DILocation(line: 2454, column: 48, scope: !5664)
!5686 = !DILocation(line: 2454, column: 42, scope: !5664)
!5687 = !DILocation(line: 2454, column: 36, scope: !5664)
!5688 = !DILocation(line: 2454, column: 7, scope: !5664)
!5689 = !DILocation(line: 2454, column: 12, scope: !5664)
!5690 = !DILocation(line: 2454, column: 21, scope: !5664)
!5691 = !DILocation(line: 2455, column: 23, scope: !5664)
!5692 = !DILocation(line: 2455, column: 28, scope: !5664)
!5693 = !DILocation(line: 2455, column: 27, scope: !5664)
!5694 = !DILocation(line: 2455, column: 38, scope: !5664)
!5695 = !DILocation(line: 2455, column: 43, scope: !5664)
!5696 = !DILocation(line: 2455, column: 48, scope: !5664)
!5697 = !DILocation(line: 2455, column: 42, scope: !5664)
!5698 = !DILocation(line: 2455, column: 36, scope: !5664)
!5699 = !DILocation(line: 2455, column: 7, scope: !5664)
!5700 = !DILocation(line: 2455, column: 12, scope: !5664)
!5701 = !DILocation(line: 2455, column: 21, scope: !5664)
!5702 = !DILocation(line: 2456, column: 23, scope: !5664)
!5703 = !DILocation(line: 2456, column: 28, scope: !5664)
!5704 = !DILocation(line: 2456, column: 27, scope: !5664)
!5705 = !DILocation(line: 2456, column: 38, scope: !5664)
!5706 = !DILocation(line: 2456, column: 43, scope: !5664)
!5707 = !DILocation(line: 2456, column: 48, scope: !5664)
!5708 = !DILocation(line: 2456, column: 42, scope: !5664)
!5709 = !DILocation(line: 2456, column: 36, scope: !5664)
!5710 = !DILocation(line: 2456, column: 7, scope: !5664)
!5711 = !DILocation(line: 2456, column: 12, scope: !5664)
!5712 = !DILocation(line: 2456, column: 21, scope: !5664)
!5713 = !DILocation(line: 2457, column: 6, scope: !5664)
!5714 = !DILocation(line: 2459, column: 26, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 2458, column: 11)
!5716 = !DILocation(line: 2459, column: 31, scope: !5715)
!5717 = !DILocation(line: 2459, column: 37, scope: !5715)
!5718 = !DILocation(line: 2459, column: 44, scope: !5715)
!5719 = !DILocation(line: 2459, column: 49, scope: !5715)
!5720 = !DILocation(line: 2459, column: 62, scope: !5715)
!5721 = !DILocation(line: 2459, column: 67, scope: !5715)
!5722 = !DILocation(line: 2459, column: 76, scope: !5715)
!5723 = !DILocation(line: 2459, column: 82, scope: !5715)
!5724 = !DILocation(line: 2459, column: 7, scope: !5715)
!5725 = !DILocation(line: 2461, column: 5, scope: !5648)
!5726 = !DILocation(line: 2462, column: 4, scope: !5528)
!5727 = !DILocation(line: 2463, column: 10, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2463, column: 9)
!5729 = !DILocation(line: 2463, column: 16, scope: !5728)
!5730 = !DILocation(line: 2463, column: 22, scope: !5728)
!5731 = !DILocation(line: 2463, column: 9, scope: !4756)
!5732 = !DILocation(line: 2464, column: 16, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 2464, column: 9)
!5734 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2463, column: 36)
!5735 = !DILocation(line: 2464, column: 9, scope: !5733)
!5736 = !DILocation(line: 2464, column: 9, scope: !5734)
!5737 = !DILocalVariable(name: "norfac", scope: !5738, file: !3, line: 2465, type: !91)
!5738 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 2464, column: 21)
!5739 = !DILocation(line: 2465, column: 12, scope: !5738)
!5740 = !DILocation(line: 2465, column: 20, scope: !5738)
!5741 = !DILocation(line: 2465, column: 26, scope: !5738)
!5742 = !DILocation(line: 2469, column: 11, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 2469, column: 10)
!5744 = !DILocation(line: 2469, column: 16, scope: !5743)
!5745 = !DILocation(line: 2469, column: 20, scope: !5743)
!5746 = !DILocation(line: 2469, column: 33, scope: !5743)
!5747 = !DILocation(line: 2469, column: 37, scope: !5743)
!5748 = !DILocation(line: 2469, column: 42, scope: !5743)
!5749 = !DILocation(line: 2469, column: 50, scope: !5743)
!5750 = !DILocation(line: 2469, column: 10, scope: !5738)
!5751 = !DILocation(line: 2471, column: 22, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2469, column: 68)
!5753 = !DILocation(line: 2475, column: 11, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2475, column: 11)
!5755 = !DILocation(line: 2475, column: 18, scope: !5754)
!5756 = !DILocation(line: 2475, column: 11, scope: !5752)
!5757 = !DILocation(line: 2476, column: 32, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 2475, column: 26)
!5759 = !DILocation(line: 2476, column: 25, scope: !5758)
!5760 = !DILocation(line: 2476, column: 24, scope: !5758)
!5761 = !DILocation(line: 2476, column: 15, scope: !5758)
!5762 = !DILocation(line: 2476, column: 8, scope: !5758)
!5763 = !DILocation(line: 2476, column: 22, scope: !5758)
!5764 = !DILocation(line: 2477, column: 32, scope: !5758)
!5765 = !DILocation(line: 2477, column: 25, scope: !5758)
!5766 = !DILocation(line: 2477, column: 24, scope: !5758)
!5767 = !DILocation(line: 2477, column: 15, scope: !5758)
!5768 = !DILocation(line: 2477, column: 8, scope: !5758)
!5769 = !DILocation(line: 2477, column: 22, scope: !5758)
!5770 = !DILocation(line: 2478, column: 7, scope: !5758)
!5771 = !DILocation(line: 2479, column: 14, scope: !5752)
!5772 = !DILocation(line: 2479, column: 25, scope: !5752)
!5773 = !DILocation(line: 2479, column: 19, scope: !5752)
!5774 = !DILocation(line: 2479, column: 18, scope: !5752)
!5775 = !DILocation(line: 2479, column: 12, scope: !5752)
!5776 = !DILocation(line: 2480, column: 11, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2480, column: 11)
!5778 = !DILocation(line: 2480, column: 15, scope: !5777)
!5779 = !DILocation(line: 2480, column: 11, scope: !5752)
!5780 = !DILocation(line: 2480, column: 26, scope: !5777)
!5781 = !DILocation(line: 2480, column: 21, scope: !5777)
!5782 = !DILocation(line: 2481, column: 18, scope: !5752)
!5783 = !DILocation(line: 2481, column: 17, scope: !5752)
!5784 = !DILocation(line: 2481, column: 12, scope: !5752)
!5785 = !DILocation(line: 2482, column: 11, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 2482, column: 11)
!5787 = !DILocation(line: 2482, column: 17, scope: !5786)
!5788 = !DILocation(line: 2482, column: 29, scope: !5786)
!5789 = !DILocation(line: 2482, column: 11, scope: !5752)
!5790 = !DILocalVariable(name: "B", scope: !5791, file: !3, line: 2484, type: !344)
!5791 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 2482, column: 53)
!5792 = !DILocation(line: 2484, column: 14, scope: !5791)
!5793 = !DILocalVariable(name: "tv", scope: !5791, file: !3, line: 2484, type: !344)
!5794 = !DILocation(line: 2484, column: 20, scope: !5791)
!5795 = !DILocalVariable(name: "no", scope: !5791, file: !3, line: 2485, type: !954)
!5796 = !DILocation(line: 2485, column: 21, scope: !5791)
!5797 = !DILocation(line: 2485, column: 26, scope: !5791)
!5798 = !DILocation(line: 2485, column: 43, scope: !5791)
!5799 = !DILocation(line: 2485, column: 48, scope: !5791)
!5800 = !DILocation(line: 2485, column: 59, scope: !5791)
!5801 = !DILocation(line: 2485, column: 64, scope: !5791)
!5802 = !DILocation(line: 2486, column: 23, scope: !5791)
!5803 = !DILocation(line: 2487, column: 22, scope: !5791)
!5804 = !DILocation(line: 2487, column: 25, scope: !5791)
!5805 = !DILocation(line: 2487, column: 29, scope: !5791)
!5806 = !DILocation(line: 2487, column: 34, scope: !5791)
!5807 = !DILocation(line: 2487, column: 8, scope: !5791)
!5808 = !DILocation(line: 2488, column: 18, scope: !5791)
!5809 = !DILocation(line: 2488, column: 21, scope: !5791)
!5810 = !DILocation(line: 2488, column: 26, scope: !5791)
!5811 = !DILocation(line: 2488, column: 8, scope: !5791)
!5812 = !DILocation(line: 2490, column: 23, scope: !5791)
!5813 = !DILocation(line: 2490, column: 16, scope: !5791)
!5814 = !DILocation(line: 2490, column: 30, scope: !5791)
!5815 = !DILocation(line: 2490, column: 35, scope: !5791)
!5816 = !DILocation(line: 2490, column: 29, scope: !5791)
!5817 = !DILocation(line: 2490, column: 56, scope: !5791)
!5818 = !DILocation(line: 2490, column: 49, scope: !5791)
!5819 = !DILocation(line: 2490, column: 63, scope: !5791)
!5820 = !DILocation(line: 2490, column: 62, scope: !5791)
!5821 = !DILocation(line: 2490, column: 47, scope: !5791)
!5822 = !DILocation(line: 2490, column: 77, scope: !5791)
!5823 = !DILocation(line: 2490, column: 70, scope: !5791)
!5824 = !DILocation(line: 2490, column: 84, scope: !5791)
!5825 = !DILocation(line: 2490, column: 83, scope: !5791)
!5826 = !DILocation(line: 2490, column: 68, scope: !5791)
!5827 = !DILocation(line: 2490, column: 8, scope: !5791)
!5828 = !DILocation(line: 2490, column: 14, scope: !5791)
!5829 = !DILocation(line: 2491, column: 23, scope: !5791)
!5830 = !DILocation(line: 2491, column: 16, scope: !5791)
!5831 = !DILocation(line: 2491, column: 30, scope: !5791)
!5832 = !DILocation(line: 2491, column: 35, scope: !5791)
!5833 = !DILocation(line: 2491, column: 29, scope: !5791)
!5834 = !DILocation(line: 2491, column: 56, scope: !5791)
!5835 = !DILocation(line: 2491, column: 49, scope: !5791)
!5836 = !DILocation(line: 2491, column: 63, scope: !5791)
!5837 = !DILocation(line: 2491, column: 62, scope: !5791)
!5838 = !DILocation(line: 2491, column: 47, scope: !5791)
!5839 = !DILocation(line: 2491, column: 77, scope: !5791)
!5840 = !DILocation(line: 2491, column: 70, scope: !5791)
!5841 = !DILocation(line: 2491, column: 84, scope: !5791)
!5842 = !DILocation(line: 2491, column: 83, scope: !5791)
!5843 = !DILocation(line: 2491, column: 68, scope: !5791)
!5844 = !DILocation(line: 2491, column: 8, scope: !5791)
!5845 = !DILocation(line: 2491, column: 14, scope: !5791)
!5846 = !DILocation(line: 2492, column: 23, scope: !5791)
!5847 = !DILocation(line: 2492, column: 16, scope: !5791)
!5848 = !DILocation(line: 2492, column: 30, scope: !5791)
!5849 = !DILocation(line: 2492, column: 35, scope: !5791)
!5850 = !DILocation(line: 2492, column: 29, scope: !5791)
!5851 = !DILocation(line: 2492, column: 56, scope: !5791)
!5852 = !DILocation(line: 2492, column: 49, scope: !5791)
!5853 = !DILocation(line: 2492, column: 63, scope: !5791)
!5854 = !DILocation(line: 2492, column: 62, scope: !5791)
!5855 = !DILocation(line: 2492, column: 47, scope: !5791)
!5856 = !DILocation(line: 2492, column: 77, scope: !5791)
!5857 = !DILocation(line: 2492, column: 70, scope: !5791)
!5858 = !DILocation(line: 2492, column: 84, scope: !5791)
!5859 = !DILocation(line: 2492, column: 83, scope: !5791)
!5860 = !DILocation(line: 2492, column: 68, scope: !5791)
!5861 = !DILocation(line: 2492, column: 8, scope: !5791)
!5862 = !DILocation(line: 2492, column: 14, scope: !5791)
!5863 = !DILocation(line: 2493, column: 20, scope: !5791)
!5864 = !DILocation(line: 2493, column: 25, scope: !5791)
!5865 = !DILocation(line: 2493, column: 24, scope: !5791)
!5866 = !DILocation(line: 2493, column: 33, scope: !5791)
!5867 = !DILocation(line: 2493, column: 38, scope: !5791)
!5868 = !DILocation(line: 2493, column: 37, scope: !5791)
!5869 = !DILocation(line: 2493, column: 31, scope: !5791)
!5870 = !DILocation(line: 2493, column: 8, scope: !5791)
!5871 = !DILocation(line: 2493, column: 13, scope: !5791)
!5872 = !DILocation(line: 2493, column: 18, scope: !5791)
!5873 = !DILocation(line: 2494, column: 20, scope: !5791)
!5874 = !DILocation(line: 2494, column: 25, scope: !5791)
!5875 = !DILocation(line: 2494, column: 24, scope: !5791)
!5876 = !DILocation(line: 2494, column: 33, scope: !5791)
!5877 = !DILocation(line: 2494, column: 38, scope: !5791)
!5878 = !DILocation(line: 2494, column: 37, scope: !5791)
!5879 = !DILocation(line: 2494, column: 31, scope: !5791)
!5880 = !DILocation(line: 2494, column: 8, scope: !5791)
!5881 = !DILocation(line: 2494, column: 13, scope: !5791)
!5882 = !DILocation(line: 2494, column: 18, scope: !5791)
!5883 = !DILocation(line: 2495, column: 20, scope: !5791)
!5884 = !DILocation(line: 2495, column: 25, scope: !5791)
!5885 = !DILocation(line: 2495, column: 24, scope: !5791)
!5886 = !DILocation(line: 2495, column: 33, scope: !5791)
!5887 = !DILocation(line: 2495, column: 38, scope: !5791)
!5888 = !DILocation(line: 2495, column: 37, scope: !5791)
!5889 = !DILocation(line: 2495, column: 31, scope: !5791)
!5890 = !DILocation(line: 2495, column: 8, scope: !5791)
!5891 = !DILocation(line: 2495, column: 13, scope: !5791)
!5892 = !DILocation(line: 2495, column: 18, scope: !5791)
!5893 = !DILocation(line: 2496, column: 7, scope: !5791)
!5894 = !DILocalVariable(name: "nor", scope: !5895, file: !3, line: 2498, type: !344)
!5895 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 2497, column: 12)
!5896 = !DILocation(line: 2498, column: 14, scope: !5895)
!5897 = !DILocation(line: 2500, column: 19, scope: !5895)
!5898 = !DILocation(line: 2500, column: 31, scope: !5895)
!5899 = !DILocation(line: 2500, column: 8, scope: !5895)
!5900 = !DILocation(line: 2502, column: 12, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2502, column: 12)
!5902 = !DILocation(line: 2502, column: 18, scope: !5901)
!5903 = !DILocation(line: 2502, column: 30, scope: !5901)
!5904 = !DILocation(line: 2502, column: 12, scope: !5895)
!5905 = !DILocation(line: 2504, column: 8, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2502, column: 53)
!5907 = !DILocation(line: 2505, column: 17, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 2505, column: 17)
!5909 = !DILocation(line: 2505, column: 23, scope: !5908)
!5910 = !DILocation(line: 2505, column: 35, scope: !5908)
!5911 = !DILocation(line: 2505, column: 17, scope: !5901)
!5912 = !DILocation(line: 2506, column: 24, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2505, column: 57)
!5914 = !DILocation(line: 2506, column: 28, scope: !5913)
!5915 = !DILocation(line: 2506, column: 37, scope: !5913)
!5916 = !DILocation(line: 2506, column: 9, scope: !5913)
!5917 = !DILocation(line: 2507, column: 8, scope: !5913)
!5918 = !DILocation(line: 2508, column: 17, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2508, column: 17)
!5920 = !DILocation(line: 2508, column: 23, scope: !5919)
!5921 = !DILocation(line: 2508, column: 35, scope: !5919)
!5922 = !DILocation(line: 2508, column: 17, scope: !5908)
!5923 = !DILocation(line: 2509, column: 13, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 2509, column: 13)
!5925 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2508, column: 58)
!5926 = !DILocation(line: 2509, column: 18, scope: !5924)
!5927 = !DILocation(line: 2509, column: 22, scope: !5924)
!5928 = !DILocation(line: 2509, column: 25, scope: !5924)
!5929 = !DILocation(line: 2509, column: 30, scope: !5924)
!5930 = !DILocation(line: 2509, column: 35, scope: !5924)
!5931 = !DILocation(line: 2509, column: 13, scope: !5925)
!5932 = !DILocation(line: 2510, column: 25, scope: !5924)
!5933 = !DILocation(line: 2510, column: 30, scope: !5924)
!5934 = !DILocation(line: 2510, column: 35, scope: !5924)
!5935 = !DILocation(line: 2510, column: 39, scope: !5924)
!5936 = !DILocation(line: 2510, column: 46, scope: !5924)
!5937 = !DILocation(line: 2510, column: 10, scope: !5924)
!5938 = !DILocation(line: 2511, column: 24, scope: !5925)
!5939 = !DILocation(line: 2511, column: 28, scope: !5925)
!5940 = !DILocation(line: 2511, column: 37, scope: !5925)
!5941 = !DILocation(line: 2511, column: 9, scope: !5925)
!5942 = !DILocation(line: 2512, column: 8, scope: !5925)
!5943 = !DILocation(line: 2514, column: 21, scope: !5895)
!5944 = !DILocation(line: 2514, column: 8, scope: !5895)
!5945 = !DILocation(line: 2517, column: 20, scope: !5895)
!5946 = !DILocation(line: 2517, column: 25, scope: !5895)
!5947 = !DILocation(line: 2517, column: 30, scope: !5895)
!5948 = !DILocation(line: 2517, column: 24, scope: !5895)
!5949 = !DILocation(line: 2517, column: 38, scope: !5895)
!5950 = !DILocation(line: 2517, column: 43, scope: !5895)
!5951 = !DILocation(line: 2517, column: 42, scope: !5895)
!5952 = !DILocation(line: 2517, column: 36, scope: !5895)
!5953 = !DILocation(line: 2517, column: 8, scope: !5895)
!5954 = !DILocation(line: 2517, column: 13, scope: !5895)
!5955 = !DILocation(line: 2517, column: 18, scope: !5895)
!5956 = !DILocation(line: 2518, column: 20, scope: !5895)
!5957 = !DILocation(line: 2518, column: 25, scope: !5895)
!5958 = !DILocation(line: 2518, column: 30, scope: !5895)
!5959 = !DILocation(line: 2518, column: 24, scope: !5895)
!5960 = !DILocation(line: 2518, column: 38, scope: !5895)
!5961 = !DILocation(line: 2518, column: 43, scope: !5895)
!5962 = !DILocation(line: 2518, column: 42, scope: !5895)
!5963 = !DILocation(line: 2518, column: 36, scope: !5895)
!5964 = !DILocation(line: 2518, column: 8, scope: !5895)
!5965 = !DILocation(line: 2518, column: 13, scope: !5895)
!5966 = !DILocation(line: 2518, column: 18, scope: !5895)
!5967 = !DILocation(line: 2519, column: 20, scope: !5895)
!5968 = !DILocation(line: 2519, column: 25, scope: !5895)
!5969 = !DILocation(line: 2519, column: 30, scope: !5895)
!5970 = !DILocation(line: 2519, column: 24, scope: !5895)
!5971 = !DILocation(line: 2519, column: 38, scope: !5895)
!5972 = !DILocation(line: 2519, column: 43, scope: !5895)
!5973 = !DILocation(line: 2519, column: 42, scope: !5895)
!5974 = !DILocation(line: 2519, column: 36, scope: !5895)
!5975 = !DILocation(line: 2519, column: 8, scope: !5895)
!5976 = !DILocation(line: 2519, column: 13, scope: !5895)
!5977 = !DILocation(line: 2519, column: 18, scope: !5895)
!5978 = !DILocation(line: 2521, column: 6, scope: !5752)
!5979 = !DILocation(line: 2524, column: 11, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 2524, column: 11)
!5981 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 2522, column: 11)
!5982 = !DILocation(line: 2524, column: 27, scope: !5980)
!5983 = !DILocation(line: 2524, column: 30, scope: !5980)
!5984 = !DILocation(line: 2524, column: 11, scope: !5981)
!5985 = !DILocation(line: 2525, column: 28, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 2524, column: 45)
!5987 = !DILocation(line: 2525, column: 21, scope: !5986)
!5988 = !DILocation(line: 2525, column: 8, scope: !5986)
!5989 = !DILocation(line: 2525, column: 13, scope: !5986)
!5990 = !DILocation(line: 2525, column: 19, scope: !5986)
!5991 = !DILocation(line: 2526, column: 28, scope: !5986)
!5992 = !DILocation(line: 2526, column: 21, scope: !5986)
!5993 = !DILocation(line: 2526, column: 8, scope: !5986)
!5994 = !DILocation(line: 2526, column: 13, scope: !5986)
!5995 = !DILocation(line: 2526, column: 19, scope: !5986)
!5996 = !DILocation(line: 2527, column: 28, scope: !5986)
!5997 = !DILocation(line: 2527, column: 21, scope: !5986)
!5998 = !DILocation(line: 2527, column: 8, scope: !5986)
!5999 = !DILocation(line: 2527, column: 13, scope: !5986)
!6000 = !DILocation(line: 2527, column: 19, scope: !5986)
!6001 = !DILocation(line: 2528, column: 7, scope: !5986)
!6002 = !DILocalVariable(name: "nor", scope: !6003, file: !3, line: 2530, type: !344)
!6003 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 2529, column: 12)
!6004 = !DILocation(line: 2530, column: 14, scope: !6003)
!6005 = !DILocalVariable(name: "dot", scope: !6003, file: !3, line: 2530, type: !91)
!6006 = !DILocation(line: 2530, column: 22, scope: !6003)
!6007 = !DILocation(line: 2532, column: 12, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2532, column: 12)
!6009 = !DILocation(line: 2532, column: 17, scope: !6008)
!6010 = !DILocation(line: 2532, column: 22, scope: !6008)
!6011 = !DILocation(line: 2532, column: 27, scope: !6008)
!6012 = !DILocation(line: 2532, column: 12, scope: !6003)
!6013 = !DILocation(line: 2533, column: 24, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2532, column: 43)
!6015 = !DILocation(line: 2533, column: 29, scope: !6014)
!6016 = !DILocation(line: 2533, column: 28, scope: !6014)
!6017 = !DILocation(line: 2533, column: 43, scope: !6014)
!6018 = !DILocation(line: 2533, column: 36, scope: !6014)
!6019 = !DILocation(line: 2533, column: 35, scope: !6014)
!6020 = !DILocation(line: 2533, column: 9, scope: !6014)
!6021 = !DILocation(line: 2533, column: 14, scope: !6014)
!6022 = !DILocation(line: 2533, column: 21, scope: !6014)
!6023 = !DILocation(line: 2534, column: 24, scope: !6014)
!6024 = !DILocation(line: 2534, column: 29, scope: !6014)
!6025 = !DILocation(line: 2534, column: 28, scope: !6014)
!6026 = !DILocation(line: 2534, column: 43, scope: !6014)
!6027 = !DILocation(line: 2534, column: 36, scope: !6014)
!6028 = !DILocation(line: 2534, column: 35, scope: !6014)
!6029 = !DILocation(line: 2534, column: 9, scope: !6014)
!6030 = !DILocation(line: 2534, column: 14, scope: !6014)
!6031 = !DILocation(line: 2534, column: 21, scope: !6014)
!6032 = !DILocation(line: 2535, column: 24, scope: !6014)
!6033 = !DILocation(line: 2535, column: 29, scope: !6014)
!6034 = !DILocation(line: 2535, column: 28, scope: !6014)
!6035 = !DILocation(line: 2535, column: 43, scope: !6014)
!6036 = !DILocation(line: 2535, column: 36, scope: !6014)
!6037 = !DILocation(line: 2535, column: 35, scope: !6014)
!6038 = !DILocation(line: 2535, column: 9, scope: !6014)
!6039 = !DILocation(line: 2535, column: 14, scope: !6014)
!6040 = !DILocation(line: 2535, column: 21, scope: !6014)
!6041 = !DILocation(line: 2536, column: 8, scope: !6014)
!6042 = !DILocation(line: 2539, column: 16, scope: !6003)
!6043 = !DILocation(line: 2539, column: 21, scope: !6003)
!6044 = !DILocation(line: 2539, column: 20, scope: !6003)
!6045 = !DILocation(line: 2539, column: 35, scope: !6003)
!6046 = !DILocation(line: 2539, column: 28, scope: !6003)
!6047 = !DILocation(line: 2539, column: 27, scope: !6003)
!6048 = !DILocation(line: 2539, column: 8, scope: !6003)
!6049 = !DILocation(line: 2539, column: 14, scope: !6003)
!6050 = !DILocation(line: 2540, column: 16, scope: !6003)
!6051 = !DILocation(line: 2540, column: 21, scope: !6003)
!6052 = !DILocation(line: 2540, column: 20, scope: !6003)
!6053 = !DILocation(line: 2540, column: 35, scope: !6003)
!6054 = !DILocation(line: 2540, column: 28, scope: !6003)
!6055 = !DILocation(line: 2540, column: 27, scope: !6003)
!6056 = !DILocation(line: 2540, column: 8, scope: !6003)
!6057 = !DILocation(line: 2540, column: 14, scope: !6003)
!6058 = !DILocation(line: 2541, column: 16, scope: !6003)
!6059 = !DILocation(line: 2541, column: 21, scope: !6003)
!6060 = !DILocation(line: 2541, column: 20, scope: !6003)
!6061 = !DILocation(line: 2541, column: 35, scope: !6003)
!6062 = !DILocation(line: 2541, column: 28, scope: !6003)
!6063 = !DILocation(line: 2541, column: 27, scope: !6003)
!6064 = !DILocation(line: 2541, column: 8, scope: !6003)
!6065 = !DILocation(line: 2541, column: 14, scope: !6003)
!6066 = !DILocation(line: 2543, column: 36, scope: !6003)
!6067 = !DILocation(line: 2543, column: 41, scope: !6003)
!6068 = !DILocation(line: 2543, column: 46, scope: !6003)
!6069 = !DILocation(line: 2543, column: 27, scope: !6003)
!6070 = !DILocation(line: 2543, column: 25, scope: !6003)
!6071 = !DILocation(line: 2543, column: 18, scope: !6003)
!6072 = !DILocation(line: 2543, column: 11, scope: !6003)
!6073 = !DILocation(line: 2545, column: 21, scope: !6003)
!6074 = !DILocation(line: 2545, column: 25, scope: !6003)
!6075 = !DILocation(line: 2545, column: 24, scope: !6003)
!6076 = !DILocation(line: 2545, column: 8, scope: !6003)
!6077 = !DILocation(line: 2545, column: 13, scope: !6003)
!6078 = !DILocation(line: 2545, column: 18, scope: !6003)
!6079 = !DILocation(line: 2546, column: 21, scope: !6003)
!6080 = !DILocation(line: 2546, column: 25, scope: !6003)
!6081 = !DILocation(line: 2546, column: 24, scope: !6003)
!6082 = !DILocation(line: 2546, column: 8, scope: !6003)
!6083 = !DILocation(line: 2546, column: 13, scope: !6003)
!6084 = !DILocation(line: 2546, column: 18, scope: !6003)
!6085 = !DILocation(line: 2547, column: 21, scope: !6003)
!6086 = !DILocation(line: 2547, column: 25, scope: !6003)
!6087 = !DILocation(line: 2547, column: 24, scope: !6003)
!6088 = !DILocation(line: 2547, column: 8, scope: !6003)
!6089 = !DILocation(line: 2547, column: 13, scope: !6003)
!6090 = !DILocation(line: 2547, column: 18, scope: !6003)
!6091 = !DILocation(line: 2550, column: 19, scope: !5738)
!6092 = !DILocation(line: 2550, column: 24, scope: !5738)
!6093 = !DILocation(line: 2550, column: 6, scope: !5738)
!6094 = !DILocation(line: 2553, column: 20, scope: !5738)
!6095 = !DILocation(line: 2553, column: 25, scope: !5738)
!6096 = !DILocation(line: 2553, column: 19, scope: !5738)
!6097 = !DILocation(line: 2553, column: 6, scope: !5738)
!6098 = !DILocation(line: 2553, column: 11, scope: !5738)
!6099 = !DILocation(line: 2553, column: 17, scope: !5738)
!6100 = !DILocation(line: 2554, column: 20, scope: !5738)
!6101 = !DILocation(line: 2554, column: 25, scope: !5738)
!6102 = !DILocation(line: 2554, column: 19, scope: !5738)
!6103 = !DILocation(line: 2554, column: 6, scope: !5738)
!6104 = !DILocation(line: 2554, column: 11, scope: !5738)
!6105 = !DILocation(line: 2554, column: 17, scope: !5738)
!6106 = !DILocation(line: 2555, column: 20, scope: !5738)
!6107 = !DILocation(line: 2555, column: 25, scope: !5738)
!6108 = !DILocation(line: 2555, column: 19, scope: !5738)
!6109 = !DILocation(line: 2555, column: 6, scope: !5738)
!6110 = !DILocation(line: 2555, column: 11, scope: !5738)
!6111 = !DILocation(line: 2555, column: 17, scope: !5738)
!6112 = !DILocation(line: 2556, column: 5, scope: !5738)
!6113 = !DILocation(line: 2557, column: 4, scope: !5734)
!6114 = !DILocation(line: 2559, column: 9, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2559, column: 9)
!6116 = !DILocation(line: 2559, column: 15, scope: !6115)
!6117 = !DILocation(line: 2559, column: 21, scope: !6115)
!6118 = !DILocation(line: 2559, column: 9, scope: !4756)
!6119 = !DILocation(line: 2562, column: 16, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 2562, column: 9)
!6121 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 2559, column: 38)
!6122 = !DILocation(line: 2562, column: 9, scope: !6120)
!6123 = !DILocation(line: 2562, column: 9, scope: !6121)
!6124 = !DILocalVariable(name: "norfac", scope: !6125, file: !3, line: 2563, type: !91)
!6125 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 2562, column: 21)
!6126 = !DILocation(line: 2563, column: 12, scope: !6125)
!6127 = !DILocation(line: 2563, column: 20, scope: !6125)
!6128 = !DILocation(line: 2563, column: 26, scope: !6125)
!6129 = !DILocation(line: 2565, column: 30, scope: !6125)
!6130 = !DILocation(line: 2565, column: 29, scope: !6125)
!6131 = !DILocation(line: 2565, column: 35, scope: !6125)
!6132 = !DILocation(line: 2565, column: 34, scope: !6125)
!6133 = !DILocation(line: 2565, column: 49, scope: !6125)
!6134 = !DILocation(line: 2565, column: 42, scope: !6125)
!6135 = !DILocation(line: 2565, column: 41, scope: !6125)
!6136 = !DILocation(line: 2565, column: 6, scope: !6125)
!6137 = !DILocation(line: 2565, column: 11, scope: !6125)
!6138 = !DILocation(line: 2565, column: 22, scope: !6125)
!6139 = !DILocation(line: 2566, column: 30, scope: !6125)
!6140 = !DILocation(line: 2566, column: 29, scope: !6125)
!6141 = !DILocation(line: 2566, column: 35, scope: !6125)
!6142 = !DILocation(line: 2566, column: 34, scope: !6125)
!6143 = !DILocation(line: 2566, column: 49, scope: !6125)
!6144 = !DILocation(line: 2566, column: 42, scope: !6125)
!6145 = !DILocation(line: 2566, column: 41, scope: !6125)
!6146 = !DILocation(line: 2566, column: 6, scope: !6125)
!6147 = !DILocation(line: 2566, column: 11, scope: !6125)
!6148 = !DILocation(line: 2566, column: 22, scope: !6125)
!6149 = !DILocation(line: 2567, column: 30, scope: !6125)
!6150 = !DILocation(line: 2567, column: 29, scope: !6125)
!6151 = !DILocation(line: 2567, column: 35, scope: !6125)
!6152 = !DILocation(line: 2567, column: 34, scope: !6125)
!6153 = !DILocation(line: 2567, column: 49, scope: !6125)
!6154 = !DILocation(line: 2567, column: 42, scope: !6125)
!6155 = !DILocation(line: 2567, column: 41, scope: !6125)
!6156 = !DILocation(line: 2567, column: 6, scope: !6125)
!6157 = !DILocation(line: 2567, column: 11, scope: !6125)
!6158 = !DILocation(line: 2567, column: 22, scope: !6125)
!6159 = !DILocation(line: 2568, column: 5, scope: !6125)
!6160 = !DILocation(line: 2570, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 2570, column: 9)
!6162 = !DILocation(line: 2570, column: 16, scope: !6161)
!6163 = !DILocation(line: 2570, column: 9, scope: !6121)
!6164 = !DILocation(line: 2571, column: 44, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 2570, column: 27)
!6166 = !DILocation(line: 2571, column: 19, scope: !6165)
!6167 = !DILocation(line: 2571, column: 13, scope: !6165)
!6168 = !DILocation(line: 2571, column: 17, scope: !6165)
!6169 = !DILocation(line: 2572, column: 5, scope: !6165)
!6170 = !DILocation(line: 2574, column: 25, scope: !6121)
!6171 = !DILocation(line: 2574, column: 17, scope: !6121)
!6172 = !DILocation(line: 2574, column: 30, scope: !6121)
!6173 = !DILocation(line: 2574, column: 36, scope: !6121)
!6174 = !DILocation(line: 2574, column: 29, scope: !6121)
!6175 = !DILocation(line: 2574, column: 44, scope: !6121)
!6176 = !DILocation(line: 2574, column: 43, scope: !6121)
!6177 = !DILocation(line: 2574, column: 10, scope: !6121)
!6178 = !DILocation(line: 2574, column: 68, scope: !6121)
!6179 = !DILocation(line: 2574, column: 67, scope: !6121)
!6180 = !DILocation(line: 2574, column: 61, scope: !6121)
!6181 = !DILocation(line: 2576, column: 9, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 2576, column: 9)
!6183 = !DILocation(line: 2576, column: 15, scope: !6182)
!6184 = !DILocation(line: 2576, column: 24, scope: !6182)
!6185 = !DILocation(line: 2576, column: 9, scope: !6121)
!6186 = !DILocation(line: 2577, column: 24, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 2576, column: 38)
!6188 = !DILocation(line: 2577, column: 30, scope: !6187)
!6189 = !DILocation(line: 2577, column: 35, scope: !6187)
!6190 = !DILocation(line: 2577, column: 29, scope: !6187)
!6191 = !DILocation(line: 2577, column: 43, scope: !6187)
!6192 = !DILocation(line: 2577, column: 49, scope: !6187)
!6193 = !DILocation(line: 2577, column: 54, scope: !6187)
!6194 = !DILocation(line: 2577, column: 48, scope: !6187)
!6195 = !DILocation(line: 2577, column: 41, scope: !6187)
!6196 = !DILocation(line: 2577, column: 6, scope: !6187)
!6197 = !DILocation(line: 2577, column: 11, scope: !6187)
!6198 = !DILocation(line: 2577, column: 22, scope: !6187)
!6199 = !DILocation(line: 2578, column: 24, scope: !6187)
!6200 = !DILocation(line: 2578, column: 30, scope: !6187)
!6201 = !DILocation(line: 2578, column: 35, scope: !6187)
!6202 = !DILocation(line: 2578, column: 29, scope: !6187)
!6203 = !DILocation(line: 2578, column: 43, scope: !6187)
!6204 = !DILocation(line: 2578, column: 49, scope: !6187)
!6205 = !DILocation(line: 2578, column: 54, scope: !6187)
!6206 = !DILocation(line: 2578, column: 48, scope: !6187)
!6207 = !DILocation(line: 2578, column: 41, scope: !6187)
!6208 = !DILocation(line: 2578, column: 6, scope: !6187)
!6209 = !DILocation(line: 2578, column: 11, scope: !6187)
!6210 = !DILocation(line: 2578, column: 22, scope: !6187)
!6211 = !DILocation(line: 2579, column: 24, scope: !6187)
!6212 = !DILocation(line: 2579, column: 30, scope: !6187)
!6213 = !DILocation(line: 2579, column: 35, scope: !6187)
!6214 = !DILocation(line: 2579, column: 29, scope: !6187)
!6215 = !DILocation(line: 2579, column: 43, scope: !6187)
!6216 = !DILocation(line: 2579, column: 49, scope: !6187)
!6217 = !DILocation(line: 2579, column: 54, scope: !6187)
!6218 = !DILocation(line: 2579, column: 48, scope: !6187)
!6219 = !DILocation(line: 2579, column: 41, scope: !6187)
!6220 = !DILocation(line: 2579, column: 6, scope: !6187)
!6221 = !DILocation(line: 2579, column: 11, scope: !6187)
!6222 = !DILocation(line: 2579, column: 22, scope: !6187)
!6223 = !DILocation(line: 2580, column: 5, scope: !6187)
!6224 = !DILocation(line: 2581, column: 14, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 2581, column: 14)
!6226 = !DILocation(line: 2581, column: 20, scope: !6225)
!6227 = !DILocation(line: 2581, column: 29, scope: !6225)
!6228 = !DILocation(line: 2581, column: 14, scope: !6182)
!6229 = !DILocation(line: 2582, column: 25, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 2581, column: 41)
!6231 = !DILocation(line: 2582, column: 31, scope: !6230)
!6232 = !DILocation(line: 2582, column: 36, scope: !6230)
!6233 = !DILocation(line: 2582, column: 30, scope: !6230)
!6234 = !DILocation(line: 2582, column: 6, scope: !6230)
!6235 = !DILocation(line: 2582, column: 11, scope: !6230)
!6236 = !DILocation(line: 2582, column: 22, scope: !6230)
!6237 = !DILocation(line: 2583, column: 25, scope: !6230)
!6238 = !DILocation(line: 2583, column: 31, scope: !6230)
!6239 = !DILocation(line: 2583, column: 36, scope: !6230)
!6240 = !DILocation(line: 2583, column: 30, scope: !6230)
!6241 = !DILocation(line: 2583, column: 6, scope: !6230)
!6242 = !DILocation(line: 2583, column: 11, scope: !6230)
!6243 = !DILocation(line: 2583, column: 22, scope: !6230)
!6244 = !DILocation(line: 2584, column: 25, scope: !6230)
!6245 = !DILocation(line: 2584, column: 31, scope: !6230)
!6246 = !DILocation(line: 2584, column: 36, scope: !6230)
!6247 = !DILocation(line: 2584, column: 30, scope: !6230)
!6248 = !DILocation(line: 2584, column: 6, scope: !6230)
!6249 = !DILocation(line: 2584, column: 11, scope: !6230)
!6250 = !DILocation(line: 2584, column: 22, scope: !6230)
!6251 = !DILocation(line: 2585, column: 5, scope: !6230)
!6252 = !DILocation(line: 2587, column: 10, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 2587, column: 10)
!6254 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 2586, column: 10)
!6255 = !DILocation(line: 2587, column: 16, scope: !6253)
!6256 = !DILocation(line: 2587, column: 25, scope: !6253)
!6257 = !DILocation(line: 2587, column: 10, scope: !6254)
!6258 = !DILocation(line: 2587, column: 45, scope: !6253)
!6259 = !DILocation(line: 2587, column: 44, scope: !6253)
!6260 = !DILocation(line: 2587, column: 42, scope: !6253)
!6261 = !DILocation(line: 2587, column: 37, scope: !6253)
!6262 = !DILocation(line: 2588, column: 25, scope: !6254)
!6263 = !DILocation(line: 2588, column: 31, scope: !6254)
!6264 = !DILocation(line: 2588, column: 36, scope: !6254)
!6265 = !DILocation(line: 2588, column: 30, scope: !6254)
!6266 = !DILocation(line: 2588, column: 6, scope: !6254)
!6267 = !DILocation(line: 2588, column: 11, scope: !6254)
!6268 = !DILocation(line: 2588, column: 22, scope: !6254)
!6269 = !DILocation(line: 2589, column: 25, scope: !6254)
!6270 = !DILocation(line: 2589, column: 31, scope: !6254)
!6271 = !DILocation(line: 2589, column: 36, scope: !6254)
!6272 = !DILocation(line: 2589, column: 30, scope: !6254)
!6273 = !DILocation(line: 2589, column: 6, scope: !6254)
!6274 = !DILocation(line: 2589, column: 11, scope: !6254)
!6275 = !DILocation(line: 2589, column: 22, scope: !6254)
!6276 = !DILocation(line: 2590, column: 25, scope: !6254)
!6277 = !DILocation(line: 2590, column: 31, scope: !6254)
!6278 = !DILocation(line: 2590, column: 36, scope: !6254)
!6279 = !DILocation(line: 2590, column: 30, scope: !6254)
!6280 = !DILocation(line: 2590, column: 6, scope: !6254)
!6281 = !DILocation(line: 2590, column: 11, scope: !6254)
!6282 = !DILocation(line: 2590, column: 22, scope: !6254)
!6283 = !DILocation(line: 2592, column: 4, scope: !6121)
!6284 = !DILocation(line: 2594, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2594, column: 8)
!6286 = !DILocation(line: 2594, column: 14, scope: !6285)
!6287 = !DILocation(line: 2594, column: 20, scope: !6285)
!6288 = !DILocation(line: 2594, column: 8, scope: !4756)
!6289 = !DILocation(line: 2597, column: 9, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2597, column: 9)
!6291 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2594, column: 32)
!6292 = !DILocation(line: 2597, column: 16, scope: !6290)
!6293 = !DILocation(line: 2597, column: 9, scope: !6291)
!6294 = !DILocation(line: 2598, column: 17, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 2598, column: 10)
!6296 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2597, column: 27)
!6297 = !DILocation(line: 2598, column: 10, scope: !6295)
!6298 = !DILocation(line: 2598, column: 10, scope: !6296)
!6299 = !DILocation(line: 2598, column: 45, scope: !6295)
!6300 = !DILocation(line: 2598, column: 32, scope: !6295)
!6301 = !DILocation(line: 2598, column: 36, scope: !6295)
!6302 = !DILocation(line: 2598, column: 25, scope: !6295)
!6303 = !DILocation(line: 2599, column: 63, scope: !6295)
!6304 = !DILocation(line: 2599, column: 38, scope: !6295)
!6305 = !DILocation(line: 2599, column: 32, scope: !6295)
!6306 = !DILocation(line: 2599, column: 36, scope: !6295)
!6307 = !DILocation(line: 2600, column: 5, scope: !6296)
!6308 = !DILocation(line: 2602, column: 9, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2602, column: 9)
!6310 = !DILocation(line: 2602, column: 15, scope: !6309)
!6311 = !DILocation(line: 2602, column: 21, scope: !6309)
!6312 = !DILocation(line: 2602, column: 9, scope: !6291)
!6313 = !DILocalVariable(name: "difffac", scope: !6314, file: !3, line: 2603, type: !91)
!6314 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2602, column: 32)
!6315 = !DILocation(line: 2603, column: 12, scope: !6314)
!6316 = !DILocation(line: 2603, column: 21, scope: !6314)
!6317 = !DILocation(line: 2603, column: 27, scope: !6314)
!6318 = !DILocation(line: 2603, column: 35, scope: !6314)
!6319 = !DILocation(line: 2603, column: 34, scope: !6314)
!6320 = !DILocation(line: 2605, column: 37, scope: !6314)
!6321 = !DILocation(line: 2605, column: 43, scope: !6314)
!6322 = !DILocation(line: 2605, column: 52, scope: !6314)
!6323 = !DILocation(line: 2605, column: 57, scope: !6314)
!6324 = !DILocation(line: 2605, column: 70, scope: !6314)
!6325 = !DILocation(line: 2605, column: 75, scope: !6314)
!6326 = !DILocation(line: 2605, column: 84, scope: !6314)
!6327 = !DILocation(line: 2605, column: 90, scope: !6314)
!6328 = !DILocation(line: 2605, column: 17, scope: !6314)
!6329 = !DILocation(line: 2605, column: 6, scope: !6314)
!6330 = !DILocation(line: 2605, column: 11, scope: !6314)
!6331 = !DILocation(line: 2605, column: 15, scope: !6314)
!6332 = !DILocation(line: 2606, column: 10, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 2606, column: 10)
!6334 = !DILocation(line: 2606, column: 15, scope: !6333)
!6335 = !DILocation(line: 2606, column: 19, scope: !6333)
!6336 = !DILocation(line: 2606, column: 10, scope: !6314)
!6337 = !DILocation(line: 2606, column: 26, scope: !6333)
!6338 = !DILocation(line: 2606, column: 31, scope: !6333)
!6339 = !DILocation(line: 2606, column: 35, scope: !6333)
!6340 = !DILocation(line: 2607, column: 5, scope: !6314)
!6341 = !DILocation(line: 2608, column: 9, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2608, column: 9)
!6343 = !DILocation(line: 2608, column: 15, scope: !6342)
!6344 = !DILocation(line: 2608, column: 21, scope: !6342)
!6345 = !DILocation(line: 2608, column: 9, scope: !6291)
!6346 = !DILocalVariable(name: "specfac", scope: !6347, file: !3, line: 2609, type: !91)
!6347 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 2608, column: 33)
!6348 = !DILocation(line: 2609, column: 12, scope: !6347)
!6349 = !DILocation(line: 2609, column: 21, scope: !6347)
!6350 = !DILocation(line: 2609, column: 27, scope: !6347)
!6351 = !DILocation(line: 2609, column: 35, scope: !6347)
!6352 = !DILocation(line: 2609, column: 34, scope: !6347)
!6353 = !DILocation(line: 2611, column: 37, scope: !6347)
!6354 = !DILocation(line: 2611, column: 43, scope: !6347)
!6355 = !DILocation(line: 2611, column: 52, scope: !6347)
!6356 = !DILocation(line: 2611, column: 57, scope: !6347)
!6357 = !DILocation(line: 2611, column: 70, scope: !6347)
!6358 = !DILocation(line: 2611, column: 75, scope: !6347)
!6359 = !DILocation(line: 2611, column: 84, scope: !6347)
!6360 = !DILocation(line: 2611, column: 90, scope: !6347)
!6361 = !DILocation(line: 2611, column: 17, scope: !6347)
!6362 = !DILocation(line: 2611, column: 6, scope: !6347)
!6363 = !DILocation(line: 2611, column: 11, scope: !6347)
!6364 = !DILocation(line: 2611, column: 15, scope: !6347)
!6365 = !DILocation(line: 2612, column: 10, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2612, column: 10)
!6367 = !DILocation(line: 2612, column: 15, scope: !6366)
!6368 = !DILocation(line: 2612, column: 19, scope: !6366)
!6369 = !DILocation(line: 2612, column: 10, scope: !6347)
!6370 = !DILocation(line: 2612, column: 26, scope: !6366)
!6371 = !DILocation(line: 2612, column: 31, scope: !6366)
!6372 = !DILocation(line: 2612, column: 35, scope: !6366)
!6373 = !DILocation(line: 2613, column: 5, scope: !6347)
!6374 = !DILocation(line: 2614, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2614, column: 9)
!6376 = !DILocation(line: 2614, column: 15, scope: !6375)
!6377 = !DILocation(line: 2614, column: 21, scope: !6375)
!6378 = !DILocation(line: 2614, column: 9, scope: !6291)
!6379 = !DILocalVariable(name: "emitfac", scope: !6380, file: !3, line: 2615, type: !91)
!6380 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2614, column: 33)
!6381 = !DILocation(line: 2615, column: 12, scope: !6380)
!6382 = !DILocation(line: 2615, column: 21, scope: !6380)
!6383 = !DILocation(line: 2615, column: 27, scope: !6380)
!6384 = !DILocation(line: 2615, column: 35, scope: !6380)
!6385 = !DILocation(line: 2615, column: 34, scope: !6380)
!6386 = !DILocation(line: 2617, column: 37, scope: !6380)
!6387 = !DILocation(line: 2617, column: 43, scope: !6380)
!6388 = !DILocation(line: 2617, column: 52, scope: !6380)
!6389 = !DILocation(line: 2617, column: 57, scope: !6380)
!6390 = !DILocation(line: 2617, column: 70, scope: !6380)
!6391 = !DILocation(line: 2617, column: 75, scope: !6380)
!6392 = !DILocation(line: 2617, column: 84, scope: !6380)
!6393 = !DILocation(line: 2617, column: 90, scope: !6380)
!6394 = !DILocation(line: 2617, column: 17, scope: !6380)
!6395 = !DILocation(line: 2617, column: 6, scope: !6380)
!6396 = !DILocation(line: 2617, column: 11, scope: !6380)
!6397 = !DILocation(line: 2617, column: 15, scope: !6380)
!6398 = !DILocation(line: 2618, column: 10, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2618, column: 10)
!6400 = !DILocation(line: 2618, column: 15, scope: !6399)
!6401 = !DILocation(line: 2618, column: 19, scope: !6399)
!6402 = !DILocation(line: 2618, column: 10, scope: !6380)
!6403 = !DILocation(line: 2618, column: 26, scope: !6399)
!6404 = !DILocation(line: 2618, column: 31, scope: !6399)
!6405 = !DILocation(line: 2618, column: 35, scope: !6399)
!6406 = !DILocation(line: 2619, column: 5, scope: !6380)
!6407 = !DILocation(line: 2620, column: 9, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2620, column: 9)
!6409 = !DILocation(line: 2620, column: 15, scope: !6408)
!6410 = !DILocation(line: 2620, column: 21, scope: !6408)
!6411 = !DILocation(line: 2620, column: 9, scope: !6291)
!6412 = !DILocalVariable(name: "alphafac", scope: !6413, file: !3, line: 2621, type: !91)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2620, column: 34)
!6414 = !DILocation(line: 2621, column: 12, scope: !6413)
!6415 = !DILocation(line: 2621, column: 22, scope: !6413)
!6416 = !DILocation(line: 2621, column: 28, scope: !6413)
!6417 = !DILocation(line: 2621, column: 37, scope: !6413)
!6418 = !DILocation(line: 2621, column: 36, scope: !6413)
!6419 = !DILocation(line: 2623, column: 38, scope: !6413)
!6420 = !DILocation(line: 2623, column: 44, scope: !6413)
!6421 = !DILocation(line: 2623, column: 53, scope: !6413)
!6422 = !DILocation(line: 2623, column: 58, scope: !6413)
!6423 = !DILocation(line: 2623, column: 72, scope: !6413)
!6424 = !DILocation(line: 2623, column: 77, scope: !6413)
!6425 = !DILocation(line: 2623, column: 87, scope: !6413)
!6426 = !DILocation(line: 2623, column: 93, scope: !6413)
!6427 = !DILocation(line: 2623, column: 18, scope: !6413)
!6428 = !DILocation(line: 2623, column: 6, scope: !6413)
!6429 = !DILocation(line: 2623, column: 11, scope: !6413)
!6430 = !DILocation(line: 2623, column: 16, scope: !6413)
!6431 = !DILocation(line: 2624, column: 10, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2624, column: 10)
!6433 = !DILocation(line: 2624, column: 15, scope: !6432)
!6434 = !DILocation(line: 2624, column: 20, scope: !6432)
!6435 = !DILocation(line: 2624, column: 10, scope: !6413)
!6436 = !DILocation(line: 2624, column: 27, scope: !6432)
!6437 = !DILocation(line: 2624, column: 32, scope: !6432)
!6438 = !DILocation(line: 2624, column: 37, scope: !6432)
!6439 = !DILocation(line: 2625, column: 15, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 2625, column: 15)
!6441 = !DILocation(line: 2625, column: 20, scope: !6440)
!6442 = !DILocation(line: 2625, column: 25, scope: !6440)
!6443 = !DILocation(line: 2625, column: 15, scope: !6432)
!6444 = !DILocation(line: 2625, column: 32, scope: !6440)
!6445 = !DILocation(line: 2625, column: 37, scope: !6440)
!6446 = !DILocation(line: 2625, column: 42, scope: !6440)
!6447 = !DILocation(line: 2626, column: 5, scope: !6413)
!6448 = !DILocation(line: 2627, column: 9, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2627, column: 9)
!6450 = !DILocation(line: 2627, column: 15, scope: !6449)
!6451 = !DILocation(line: 2627, column: 21, scope: !6449)
!6452 = !DILocation(line: 2627, column: 9, scope: !6291)
!6453 = !DILocalVariable(name: "har", scope: !6454, file: !3, line: 2628, type: !91)
!6454 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2627, column: 32)
!6455 = !DILocation(line: 2628, column: 12, scope: !6454)
!6456 = !DILocalVariable(name: "hardfac", scope: !6454, file: !3, line: 2629, type: !91)
!6457 = !DILocation(line: 2629, column: 12, scope: !6454)
!6458 = !DILocation(line: 2629, column: 21, scope: !6454)
!6459 = !DILocation(line: 2629, column: 27, scope: !6454)
!6460 = !DILocation(line: 2629, column: 35, scope: !6454)
!6461 = !DILocation(line: 2629, column: 34, scope: !6454)
!6462 = !DILocation(line: 2631, column: 19, scope: !6454)
!6463 = !DILocation(line: 2631, column: 24, scope: !6454)
!6464 = !DILocation(line: 2631, column: 12, scope: !6454)
!6465 = !DILocation(line: 2631, column: 28, scope: !6454)
!6466 = !DILocation(line: 2631, column: 9, scope: !6454)
!6467 = !DILocation(line: 2632, column: 38, scope: !6454)
!6468 = !DILocation(line: 2632, column: 44, scope: !6454)
!6469 = !DILocation(line: 2632, column: 53, scope: !6454)
!6470 = !DILocation(line: 2632, column: 65, scope: !6454)
!6471 = !DILocation(line: 2632, column: 70, scope: !6454)
!6472 = !DILocation(line: 2632, column: 79, scope: !6454)
!6473 = !DILocation(line: 2632, column: 85, scope: !6454)
!6474 = !DILocation(line: 2632, column: 18, scope: !6454)
!6475 = !DILocation(line: 2632, column: 17, scope: !6454)
!6476 = !DILocation(line: 2632, column: 9, scope: !6454)
!6477 = !DILocation(line: 2634, column: 10, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2634, column: 10)
!6479 = !DILocation(line: 2634, column: 13, scope: !6478)
!6480 = !DILocation(line: 2634, column: 10, scope: !6454)
!6481 = !DILocation(line: 2634, column: 20, scope: !6478)
!6482 = !DILocation(line: 2634, column: 25, scope: !6478)
!6483 = !DILocation(line: 2634, column: 28, scope: !6478)
!6484 = !DILocation(line: 2635, column: 15, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 2635, column: 15)
!6486 = !DILocation(line: 2635, column: 18, scope: !6485)
!6487 = !DILocation(line: 2635, column: 15, scope: !6478)
!6488 = !DILocation(line: 2635, column: 24, scope: !6485)
!6489 = !DILocation(line: 2635, column: 29, scope: !6485)
!6490 = !DILocation(line: 2635, column: 32, scope: !6485)
!6491 = !DILocation(line: 2636, column: 26, scope: !6485)
!6492 = !DILocation(line: 2636, column: 21, scope: !6485)
!6493 = !DILocation(line: 2636, column: 11, scope: !6485)
!6494 = !DILocation(line: 2636, column: 16, scope: !6485)
!6495 = !DILocation(line: 2636, column: 19, scope: !6485)
!6496 = !DILocation(line: 2637, column: 5, scope: !6454)
!6497 = !DILocation(line: 2638, column: 9, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2638, column: 9)
!6499 = !DILocation(line: 2638, column: 15, scope: !6498)
!6500 = !DILocation(line: 2638, column: 21, scope: !6498)
!6501 = !DILocation(line: 2638, column: 9, scope: !6291)
!6502 = !DILocalVariable(name: "raymirrfac", scope: !6503, file: !3, line: 2639, type: !91)
!6503 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2638, column: 36)
!6504 = !DILocation(line: 2639, column: 12, scope: !6503)
!6505 = !DILocation(line: 2639, column: 24, scope: !6503)
!6506 = !DILocation(line: 2639, column: 30, scope: !6503)
!6507 = !DILocation(line: 2639, column: 41, scope: !6503)
!6508 = !DILocation(line: 2639, column: 40, scope: !6503)
!6509 = !DILocation(line: 2641, column: 43, scope: !6503)
!6510 = !DILocation(line: 2641, column: 49, scope: !6503)
!6511 = !DILocation(line: 2641, column: 58, scope: !6503)
!6512 = !DILocation(line: 2641, column: 63, scope: !6503)
!6513 = !DILocation(line: 2641, column: 82, scope: !6503)
!6514 = !DILocation(line: 2641, column: 87, scope: !6503)
!6515 = !DILocation(line: 2641, column: 99, scope: !6503)
!6516 = !DILocation(line: 2641, column: 105, scope: !6503)
!6517 = !DILocation(line: 2641, column: 23, scope: !6503)
!6518 = !DILocation(line: 2641, column: 6, scope: !6503)
!6519 = !DILocation(line: 2641, column: 11, scope: !6503)
!6520 = !DILocation(line: 2641, column: 21, scope: !6503)
!6521 = !DILocation(line: 2642, column: 10, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 2642, column: 10)
!6523 = !DILocation(line: 2642, column: 15, scope: !6522)
!6524 = !DILocation(line: 2642, column: 25, scope: !6522)
!6525 = !DILocation(line: 2642, column: 10, scope: !6503)
!6526 = !DILocation(line: 2642, column: 32, scope: !6522)
!6527 = !DILocation(line: 2642, column: 37, scope: !6522)
!6528 = !DILocation(line: 2642, column: 47, scope: !6522)
!6529 = !DILocation(line: 2643, column: 15, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2643, column: 15)
!6531 = !DILocation(line: 2643, column: 20, scope: !6530)
!6532 = !DILocation(line: 2643, column: 30, scope: !6530)
!6533 = !DILocation(line: 2643, column: 15, scope: !6522)
!6534 = !DILocation(line: 2643, column: 37, scope: !6530)
!6535 = !DILocation(line: 2643, column: 42, scope: !6530)
!6536 = !DILocation(line: 2643, column: 52, scope: !6530)
!6537 = !DILocation(line: 2644, column: 5, scope: !6503)
!6538 = !DILocation(line: 2645, column: 9, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2645, column: 9)
!6540 = !DILocation(line: 2645, column: 15, scope: !6539)
!6541 = !DILocation(line: 2645, column: 21, scope: !6539)
!6542 = !DILocation(line: 2645, column: 9, scope: !6291)
!6543 = !DILocalVariable(name: "translfac", scope: !6544, file: !3, line: 2646, type: !91)
!6544 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2645, column: 36)
!6545 = !DILocation(line: 2646, column: 12, scope: !6544)
!6546 = !DILocation(line: 2646, column: 23, scope: !6544)
!6547 = !DILocation(line: 2646, column: 29, scope: !6544)
!6548 = !DILocation(line: 2646, column: 39, scope: !6544)
!6549 = !DILocation(line: 2646, column: 38, scope: !6544)
!6550 = !DILocation(line: 2648, column: 45, scope: !6544)
!6551 = !DILocation(line: 2648, column: 51, scope: !6544)
!6552 = !DILocation(line: 2648, column: 60, scope: !6544)
!6553 = !DILocation(line: 2648, column: 65, scope: !6544)
!6554 = !DILocation(line: 2648, column: 86, scope: !6544)
!6555 = !DILocation(line: 2648, column: 91, scope: !6544)
!6556 = !DILocation(line: 2648, column: 102, scope: !6544)
!6557 = !DILocation(line: 2648, column: 108, scope: !6544)
!6558 = !DILocation(line: 2648, column: 25, scope: !6544)
!6559 = !DILocation(line: 2648, column: 6, scope: !6544)
!6560 = !DILocation(line: 2648, column: 11, scope: !6544)
!6561 = !DILocation(line: 2648, column: 23, scope: !6544)
!6562 = !DILocation(line: 2649, column: 10, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2649, column: 10)
!6564 = !DILocation(line: 2649, column: 15, scope: !6563)
!6565 = !DILocation(line: 2649, column: 27, scope: !6563)
!6566 = !DILocation(line: 2649, column: 10, scope: !6544)
!6567 = !DILocation(line: 2649, column: 34, scope: !6563)
!6568 = !DILocation(line: 2649, column: 39, scope: !6563)
!6569 = !DILocation(line: 2649, column: 51, scope: !6563)
!6570 = !DILocation(line: 2650, column: 15, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2650, column: 15)
!6572 = !DILocation(line: 2650, column: 20, scope: !6571)
!6573 = !DILocation(line: 2650, column: 32, scope: !6571)
!6574 = !DILocation(line: 2650, column: 15, scope: !6563)
!6575 = !DILocation(line: 2650, column: 39, scope: !6571)
!6576 = !DILocation(line: 2650, column: 44, scope: !6571)
!6577 = !DILocation(line: 2650, column: 56, scope: !6571)
!6578 = !DILocation(line: 2651, column: 5, scope: !6544)
!6579 = !DILocation(line: 2652, column: 9, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 2652, column: 9)
!6581 = !DILocation(line: 2652, column: 15, scope: !6580)
!6582 = !DILocation(line: 2652, column: 21, scope: !6580)
!6583 = !DILocation(line: 2652, column: 9, scope: !6291)
!6584 = !DILocalVariable(name: "ambfac", scope: !6585, file: !3, line: 2653, type: !91)
!6585 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2652, column: 32)
!6586 = !DILocation(line: 2653, column: 12, scope: !6585)
!6587 = !DILocation(line: 2653, column: 20, scope: !6585)
!6588 = !DILocation(line: 2653, column: 26, scope: !6585)
!6589 = !DILocation(line: 2653, column: 33, scope: !6585)
!6590 = !DILocation(line: 2653, column: 32, scope: !6585)
!6591 = !DILocation(line: 2655, column: 36, scope: !6585)
!6592 = !DILocation(line: 2655, column: 42, scope: !6585)
!6593 = !DILocation(line: 2655, column: 51, scope: !6585)
!6594 = !DILocation(line: 2655, column: 56, scope: !6585)
!6595 = !DILocation(line: 2655, column: 68, scope: !6585)
!6596 = !DILocation(line: 2655, column: 73, scope: !6585)
!6597 = !DILocation(line: 2655, column: 81, scope: !6585)
!6598 = !DILocation(line: 2655, column: 87, scope: !6585)
!6599 = !DILocation(line: 2655, column: 16, scope: !6585)
!6600 = !DILocation(line: 2655, column: 6, scope: !6585)
!6601 = !DILocation(line: 2655, column: 11, scope: !6585)
!6602 = !DILocation(line: 2655, column: 14, scope: !6585)
!6603 = !DILocation(line: 2656, column: 10, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 2656, column: 10)
!6605 = !DILocation(line: 2656, column: 15, scope: !6604)
!6606 = !DILocation(line: 2656, column: 18, scope: !6604)
!6607 = !DILocation(line: 2656, column: 10, scope: !6585)
!6608 = !DILocation(line: 2656, column: 25, scope: !6604)
!6609 = !DILocation(line: 2656, column: 30, scope: !6604)
!6610 = !DILocation(line: 2656, column: 33, scope: !6604)
!6611 = !DILocation(line: 2657, column: 15, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2657, column: 15)
!6613 = !DILocation(line: 2657, column: 20, scope: !6612)
!6614 = !DILocation(line: 2657, column: 23, scope: !6612)
!6615 = !DILocation(line: 2657, column: 15, scope: !6604)
!6616 = !DILocation(line: 2657, column: 30, scope: !6612)
!6617 = !DILocation(line: 2657, column: 35, scope: !6612)
!6618 = !DILocation(line: 2657, column: 38, scope: !6612)
!6619 = !DILocation(line: 2659, column: 17, scope: !6585)
!6620 = !DILocation(line: 2659, column: 22, scope: !6585)
!6621 = !DILocation(line: 2659, column: 26, scope: !6585)
!6622 = !DILocation(line: 2659, column: 30, scope: !6585)
!6623 = !DILocation(line: 2659, column: 35, scope: !6585)
!6624 = !DILocation(line: 2659, column: 25, scope: !6585)
!6625 = !DILocation(line: 2659, column: 6, scope: !6585)
!6626 = !DILocation(line: 2659, column: 11, scope: !6585)
!6627 = !DILocation(line: 2659, column: 15, scope: !6585)
!6628 = !DILocation(line: 2660, column: 17, scope: !6585)
!6629 = !DILocation(line: 2660, column: 22, scope: !6585)
!6630 = !DILocation(line: 2660, column: 26, scope: !6585)
!6631 = !DILocation(line: 2660, column: 30, scope: !6585)
!6632 = !DILocation(line: 2660, column: 35, scope: !6585)
!6633 = !DILocation(line: 2660, column: 25, scope: !6585)
!6634 = !DILocation(line: 2660, column: 6, scope: !6585)
!6635 = !DILocation(line: 2660, column: 11, scope: !6585)
!6636 = !DILocation(line: 2660, column: 15, scope: !6585)
!6637 = !DILocation(line: 2661, column: 17, scope: !6585)
!6638 = !DILocation(line: 2661, column: 22, scope: !6585)
!6639 = !DILocation(line: 2661, column: 26, scope: !6585)
!6640 = !DILocation(line: 2661, column: 30, scope: !6585)
!6641 = !DILocation(line: 2661, column: 35, scope: !6585)
!6642 = !DILocation(line: 2661, column: 25, scope: !6585)
!6643 = !DILocation(line: 2661, column: 6, scope: !6585)
!6644 = !DILocation(line: 2661, column: 11, scope: !6585)
!6645 = !DILocation(line: 2661, column: 15, scope: !6585)
!6646 = !DILocation(line: 2662, column: 5, scope: !6585)
!6647 = !DILocation(line: 2663, column: 4, scope: !6291)
!6648 = !DILocation(line: 2664, column: 3, scope: !4756)
!6649 = !DILocation(line: 2665, column: 2, scope: !4741)
!6650 = !DILocation(line: 2162, column: 40, scope: !4736)
!6651 = !DILocation(line: 2162, column: 2, scope: !4736)
!6652 = distinct !{!6652, !4738, !6653}
!6653 = !DILocation(line: 2665, column: 2, scope: !4733)
!6654 = !DILocation(line: 2666, column: 7, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2666, column: 6)
!6656 = !DILocation(line: 2666, column: 23, scope: !6655)
!6657 = !DILocation(line: 2666, column: 26, scope: !6655)
!6658 = !DILocation(line: 2666, column: 40, scope: !6655)
!6659 = !DILocation(line: 2666, column: 43, scope: !6655)
!6660 = !DILocation(line: 2666, column: 59, scope: !6655)
!6661 = !DILocation(line: 2666, column: 63, scope: !6655)
!6662 = !DILocation(line: 2666, column: 68, scope: !6655)
!6663 = !DILocation(line: 2666, column: 73, scope: !6655)
!6664 = !DILocation(line: 2666, column: 78, scope: !6655)
!6665 = !DILocation(line: 2666, column: 94, scope: !6655)
!6666 = !DILocation(line: 2666, column: 6, scope: !4638)
!6667 = !DILocalVariable(name: "fnegdot", scope: !6668, file: !3, line: 2667, type: !765)
!6668 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2666, column: 100)
!6669 = !DILocation(line: 2667, column: 15, scope: !6668)
!6670 = !DILocation(line: 2667, column: 35, scope: !6668)
!6671 = !DILocation(line: 2667, column: 40, scope: !6668)
!6672 = !DILocation(line: 2667, column: 44, scope: !6668)
!6673 = !DILocation(line: 2667, column: 49, scope: !6668)
!6674 = !DILocation(line: 2667, column: 26, scope: !6668)
!6675 = !DILocation(line: 2667, column: 25, scope: !6668)
!6676 = !DILocation(line: 2669, column: 16, scope: !6668)
!6677 = !DILocation(line: 2669, column: 21, scope: !6668)
!6678 = !DILocation(line: 2669, column: 28, scope: !6668)
!6679 = !DILocation(line: 2669, column: 33, scope: !6668)
!6680 = !DILocation(line: 2669, column: 37, scope: !6668)
!6681 = !DILocation(line: 2669, column: 3, scope: !6668)
!6682 = !DILocation(line: 2670, column: 16, scope: !6668)
!6683 = !DILocation(line: 2670, column: 21, scope: !6668)
!6684 = !DILocation(line: 2670, column: 3, scope: !6668)
!6685 = !DILocation(line: 2671, column: 2, scope: !6668)
!6686 = !DILocation(line: 2672, column: 1, scope: !4638)
!6687 = distinct !DISubprogram(name: "compatible_bump_init", scope: !3, file: !3, line: 1654, type: !6688, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{null, !6690}
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!6691 = !DILocalVariable(name: "compat_bump", arg: 1, scope: !6687, file: !3, line: 1654, type: !6690)
!6692 = !DILocation(line: 1654, column: 50, scope: !6687)
!6693 = !DILocation(line: 1656, column: 9, scope: !6687)
!6694 = !DILocation(line: 1656, column: 2, scope: !6687)
!6695 = !DILocation(line: 1658, column: 2, scope: !6687)
!6696 = !DILocation(line: 1658, column: 15, scope: !6687)
!6697 = !DILocation(line: 1658, column: 21, scope: !6687)
!6698 = !DILocation(line: 1659, column: 2, scope: !6687)
!6699 = !DILocation(line: 1659, column: 15, scope: !6687)
!6700 = !DILocation(line: 1659, column: 21, scope: !6687)
!6701 = !DILocation(line: 1660, column: 1, scope: !6687)
!6702 = distinct !DISubprogram(name: "ntap_bump_init", scope: !3, file: !3, line: 1876, type: !6703, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !6705}
!6705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!6706 = !DILocalVariable(name: "ntap_bump", arg: 1, scope: !6702, file: !3, line: 1876, type: !6705)
!6707 = !DILocation(line: 1876, column: 38, scope: !6702)
!6708 = !DILocation(line: 1878, column: 9, scope: !6702)
!6709 = !DILocation(line: 1878, column: 2, scope: !6702)
!6710 = !DILocation(line: 1879, column: 1, scope: !6702)
!6711 = distinct !DISubprogram(name: "compatible_bump_uv_derivs", scope: !3, file: !3, line: 1662, type: !6712, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{null, !6690, !2730, !3587, !92}
!6714 = !DILocalVariable(name: "compat_bump", arg: 1, scope: !6711, file: !3, line: 1662, type: !6690)
!6715 = !DILocation(line: 1662, column: 55, scope: !6711)
!6716 = !DILocalVariable(name: "shi", arg: 2, scope: !6711, file: !3, line: 1662, type: !2730)
!6717 = !DILocation(line: 1662, column: 80, scope: !6711)
!6718 = !DILocalVariable(name: "mtex", arg: 3, scope: !6711, file: !3, line: 1662, type: !3587)
!6719 = !DILocation(line: 1662, column: 91, scope: !6711)
!6720 = !DILocalVariable(name: "i", arg: 4, scope: !6711, file: !3, line: 1662, type: !92)
!6721 = !DILocation(line: 1662, column: 101, scope: !6711)
!6722 = !DILocation(line: 1674, column: 7, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1674, column: 6)
!6724 = !DILocation(line: 1674, column: 13, scope: !6723)
!6725 = !DILocation(line: 1674, column: 21, scope: !6723)
!6726 = !DILocation(line: 1674, column: 41, scope: !6723)
!6727 = !DILocation(line: 1674, column: 44, scope: !6723)
!6728 = !DILocation(line: 1674, column: 49, scope: !6723)
!6729 = !DILocation(line: 1674, column: 53, scope: !6723)
!6730 = !DILocation(line: 1674, column: 56, scope: !6723)
!6731 = !DILocation(line: 1674, column: 61, scope: !6723)
!6732 = !DILocation(line: 1674, column: 66, scope: !6723)
!6733 = !DILocation(line: 1674, column: 69, scope: !6723)
!6734 = !DILocation(line: 1674, column: 72, scope: !6723)
!6735 = !DILocation(line: 1674, column: 77, scope: !6723)
!6736 = !DILocation(line: 1674, column: 6, scope: !6711)
!6737 = !DILocation(line: 1675, column: 7, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1675, column: 7)
!6739 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 1674, column: 81)
!6740 = !DILocation(line: 1675, column: 13, scope: !6738)
!6741 = !DILocation(line: 1675, column: 19, scope: !6738)
!6742 = !DILocation(line: 1675, column: 41, scope: !6738)
!6743 = !DILocation(line: 1675, column: 47, scope: !6738)
!6744 = !DILocation(line: 1675, column: 53, scope: !6738)
!6745 = !DILocation(line: 1675, column: 58, scope: !6738)
!6746 = !DILocation(line: 1675, column: 62, scope: !6738)
!6747 = !DILocation(line: 1675, column: 75, scope: !6738)
!6748 = !DILocation(line: 1675, column: 79, scope: !6738)
!6749 = !DILocation(line: 1675, column: 85, scope: !6738)
!6750 = !DILocation(line: 1675, column: 90, scope: !6738)
!6751 = !DILocation(line: 1675, column: 98, scope: !6738)
!6752 = !DILocation(line: 1675, column: 7, scope: !6739)
!6753 = !DILocalVariable(name: "tf", scope: !6754, file: !3, line: 1676, type: !93)
!6754 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 1675, column: 117)
!6755 = !DILocation(line: 1676, column: 12, scope: !6754)
!6756 = !DILocation(line: 1676, column: 38, scope: !6754)
!6757 = !DILocation(line: 1676, column: 43, scope: !6754)
!6758 = !DILocation(line: 1676, column: 48, scope: !6754)
!6759 = !DILocation(line: 1676, column: 53, scope: !6754)
!6760 = !DILocation(line: 1676, column: 58, scope: !6754)
!6761 = !DILocation(line: 1676, column: 17, scope: !6754)
!6762 = !DILocalVariable(name: "j1", scope: !6754, file: !3, line: 1677, type: !92)
!6763 = !DILocation(line: 1677, column: 8, scope: !6754)
!6764 = !DILocation(line: 1677, column: 13, scope: !6754)
!6765 = !DILocation(line: 1677, column: 18, scope: !6754)
!6766 = !DILocalVariable(name: "j2", scope: !6754, file: !3, line: 1677, type: !92)
!6767 = !DILocation(line: 1677, column: 22, scope: !6754)
!6768 = !DILocation(line: 1677, column: 27, scope: !6754)
!6769 = !DILocation(line: 1677, column: 32, scope: !6754)
!6770 = !DILocalVariable(name: "j3", scope: !6754, file: !3, line: 1677, type: !92)
!6771 = !DILocation(line: 1677, column: 36, scope: !6754)
!6772 = !DILocation(line: 1677, column: 41, scope: !6754)
!6773 = !DILocation(line: 1677, column: 46, scope: !6754)
!6774 = !DILocation(line: 1679, column: 23, scope: !6754)
!6775 = !DILocation(line: 1679, column: 28, scope: !6754)
!6776 = !DILocation(line: 1679, column: 4, scope: !6754)
!6777 = !DILocation(line: 1682, column: 9, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1682, column: 8)
!6779 = !DILocation(line: 1682, column: 22, scope: !6778)
!6780 = !DILocation(line: 1682, column: 8, scope: !6754)
!6781 = !DILocation(line: 1684, column: 27, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1682, column: 32)
!6783 = !DILocation(line: 1684, column: 32, scope: !6782)
!6784 = !DILocation(line: 1684, column: 26, scope: !6782)
!6785 = !DILocation(line: 1684, column: 5, scope: !6782)
!6786 = !DILocation(line: 1684, column: 18, scope: !6782)
!6787 = !DILocation(line: 1684, column: 24, scope: !6782)
!6788 = !DILocation(line: 1685, column: 27, scope: !6782)
!6789 = !DILocation(line: 1685, column: 32, scope: !6782)
!6790 = !DILocation(line: 1685, column: 26, scope: !6782)
!6791 = !DILocation(line: 1685, column: 5, scope: !6782)
!6792 = !DILocation(line: 1685, column: 18, scope: !6782)
!6793 = !DILocation(line: 1685, column: 24, scope: !6782)
!6794 = !DILocation(line: 1686, column: 27, scope: !6782)
!6795 = !DILocation(line: 1686, column: 32, scope: !6782)
!6796 = !DILocation(line: 1686, column: 26, scope: !6782)
!6797 = !DILocation(line: 1686, column: 5, scope: !6782)
!6798 = !DILocation(line: 1686, column: 18, scope: !6782)
!6799 = !DILocation(line: 1686, column: 24, scope: !6782)
!6800 = !DILocation(line: 1687, column: 25, scope: !6782)
!6801 = !DILocation(line: 1687, column: 38, scope: !6782)
!6802 = !DILocation(line: 1687, column: 42, scope: !6782)
!6803 = !DILocation(line: 1687, column: 55, scope: !6782)
!6804 = !DILocation(line: 1687, column: 59, scope: !6782)
!6805 = !DILocation(line: 1687, column: 72, scope: !6782)
!6806 = !DILocation(line: 1687, column: 5, scope: !6782)
!6807 = !DILocation(line: 1688, column: 5, scope: !6782)
!6808 = !DILocation(line: 1688, column: 18, scope: !6782)
!6809 = !DILocation(line: 1688, column: 27, scope: !6782)
!6810 = !DILocation(line: 1689, column: 4, scope: !6782)
!6811 = !DILocation(line: 1691, column: 8, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1691, column: 8)
!6813 = !DILocation(line: 1691, column: 8, scope: !6754)
!6814 = !DILocalVariable(name: "uv1", scope: !6815, file: !3, line: 1692, type: !954)
!6815 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1691, column: 12)
!6816 = !DILocation(line: 1692, column: 18, scope: !6815)
!6817 = !DILocation(line: 1692, column: 24, scope: !6815)
!6818 = !DILocation(line: 1692, column: 28, scope: !6815)
!6819 = !DILocation(line: 1692, column: 31, scope: !6815)
!6820 = !DILocalVariable(name: "uv2", scope: !6815, file: !3, line: 1692, type: !954)
!6821 = !DILocation(line: 1692, column: 37, scope: !6815)
!6822 = !DILocation(line: 1692, column: 43, scope: !6815)
!6823 = !DILocation(line: 1692, column: 47, scope: !6815)
!6824 = !DILocation(line: 1692, column: 50, scope: !6815)
!6825 = !DILocalVariable(name: "uv3", scope: !6815, file: !3, line: 1692, type: !954)
!6826 = !DILocation(line: 1692, column: 56, scope: !6815)
!6827 = !DILocation(line: 1692, column: 62, scope: !6815)
!6828 = !DILocation(line: 1692, column: 66, scope: !6815)
!6829 = !DILocation(line: 1692, column: 69, scope: !6815)
!6830 = !DILocalVariable(name: "an", scope: !6815, file: !3, line: 1693, type: !6831)
!6831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 96, elements: !345)
!6832 = !DILocation(line: 1693, column: 17, scope: !6815)
!6833 = !DILocation(line: 1693, column: 25, scope: !6815)
!6834 = !DILocation(line: 1693, column: 32, scope: !6815)
!6835 = !DILocation(line: 1693, column: 45, scope: !6815)
!6836 = !DILocation(line: 1693, column: 26, scope: !6815)
!6837 = !DILocation(line: 1693, column: 59, scope: !6815)
!6838 = !DILocation(line: 1693, column: 72, scope: !6815)
!6839 = !DILocation(line: 1693, column: 53, scope: !6815)
!6840 = !DILocation(line: 1693, column: 86, scope: !6815)
!6841 = !DILocation(line: 1693, column: 99, scope: !6815)
!6842 = !DILocation(line: 1693, column: 80, scope: !6815)
!6843 = !DILocalVariable(name: "a1", scope: !6815, file: !3, line: 1694, type: !6844)
!6844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !92)
!6845 = !DILocation(line: 1694, column: 15, scope: !6815)
!6846 = !DILocation(line: 1694, column: 21, scope: !6815)
!6847 = !DILocation(line: 1694, column: 29, scope: !6815)
!6848 = !DILocation(line: 1694, column: 27, scope: !6815)
!6849 = !DILocation(line: 1694, column: 35, scope: !6815)
!6850 = !DILocation(line: 1694, column: 38, scope: !6815)
!6851 = !DILocation(line: 1694, column: 46, scope: !6815)
!6852 = !DILocation(line: 1694, column: 44, scope: !6815)
!6853 = !DILocation(line: 0, scope: !6815)
!6854 = !DILocation(line: 1694, column: 20, scope: !6815)
!6855 = !DILocalVariable(name: "a2", scope: !6815, file: !3, line: 1695, type: !6844)
!6856 = !DILocation(line: 1695, column: 15, scope: !6815)
!6857 = !DILocation(line: 1695, column: 21, scope: !6815)
!6858 = !DILocation(line: 1695, column: 29, scope: !6815)
!6859 = !DILocation(line: 1695, column: 27, scope: !6815)
!6860 = !DILocation(line: 1695, column: 35, scope: !6815)
!6861 = !DILocation(line: 1695, column: 38, scope: !6815)
!6862 = !DILocation(line: 1695, column: 46, scope: !6815)
!6863 = !DILocation(line: 1695, column: 44, scope: !6815)
!6864 = !DILocation(line: 1695, column: 20, scope: !6815)
!6865 = !DILocalVariable(name: "dp1_a1", scope: !6815, file: !3, line: 1696, type: !765)
!6866 = !DILocation(line: 1696, column: 17, scope: !6815)
!6867 = !DILocation(line: 1696, column: 26, scope: !6815)
!6868 = !DILocation(line: 1696, column: 31, scope: !6815)
!6869 = !DILocation(line: 1696, column: 35, scope: !6815)
!6870 = !DILocation(line: 1696, column: 38, scope: !6815)
!6871 = !DILocation(line: 1696, column: 44, scope: !6815)
!6872 = !DILocation(line: 1696, column: 49, scope: !6815)
!6873 = !DILocation(line: 1696, column: 53, scope: !6815)
!6874 = !DILocation(line: 1696, column: 56, scope: !6815)
!6875 = !DILocation(line: 1696, column: 42, scope: !6815)
!6876 = !DILocalVariable(name: "dp1_a2", scope: !6815, file: !3, line: 1697, type: !765)
!6877 = !DILocation(line: 1697, column: 17, scope: !6815)
!6878 = !DILocation(line: 1697, column: 26, scope: !6815)
!6879 = !DILocation(line: 1697, column: 31, scope: !6815)
!6880 = !DILocation(line: 1697, column: 35, scope: !6815)
!6881 = !DILocation(line: 1697, column: 38, scope: !6815)
!6882 = !DILocation(line: 1697, column: 44, scope: !6815)
!6883 = !DILocation(line: 1697, column: 49, scope: !6815)
!6884 = !DILocation(line: 1697, column: 53, scope: !6815)
!6885 = !DILocation(line: 1697, column: 56, scope: !6815)
!6886 = !DILocation(line: 1697, column: 42, scope: !6815)
!6887 = !DILocalVariable(name: "dp2_a1", scope: !6815, file: !3, line: 1698, type: !765)
!6888 = !DILocation(line: 1698, column: 17, scope: !6815)
!6889 = !DILocation(line: 1698, column: 26, scope: !6815)
!6890 = !DILocation(line: 1698, column: 31, scope: !6815)
!6891 = !DILocation(line: 1698, column: 35, scope: !6815)
!6892 = !DILocation(line: 1698, column: 38, scope: !6815)
!6893 = !DILocation(line: 1698, column: 44, scope: !6815)
!6894 = !DILocation(line: 1698, column: 49, scope: !6815)
!6895 = !DILocation(line: 1698, column: 53, scope: !6815)
!6896 = !DILocation(line: 1698, column: 56, scope: !6815)
!6897 = !DILocation(line: 1698, column: 42, scope: !6815)
!6898 = !DILocalVariable(name: "dp2_a2", scope: !6815, file: !3, line: 1699, type: !765)
!6899 = !DILocation(line: 1699, column: 17, scope: !6815)
!6900 = !DILocation(line: 1699, column: 26, scope: !6815)
!6901 = !DILocation(line: 1699, column: 31, scope: !6815)
!6902 = !DILocation(line: 1699, column: 35, scope: !6815)
!6903 = !DILocation(line: 1699, column: 38, scope: !6815)
!6904 = !DILocation(line: 1699, column: 44, scope: !6815)
!6905 = !DILocation(line: 1699, column: 49, scope: !6815)
!6906 = !DILocation(line: 1699, column: 53, scope: !6815)
!6907 = !DILocation(line: 1699, column: 56, scope: !6815)
!6908 = !DILocation(line: 1699, column: 42, scope: !6815)
!6909 = !DILocalVariable(name: "du1", scope: !6815, file: !3, line: 1700, type: !765)
!6910 = !DILocation(line: 1700, column: 17, scope: !6815)
!6911 = !DILocation(line: 1700, column: 23, scope: !6815)
!6912 = !DILocation(line: 1700, column: 32, scope: !6815)
!6913 = !DILocation(line: 1700, column: 30, scope: !6815)
!6914 = !DILocalVariable(name: "du2", scope: !6815, file: !3, line: 1700, type: !765)
!6915 = !DILocation(line: 1700, column: 40, scope: !6815)
!6916 = !DILocation(line: 1700, column: 46, scope: !6815)
!6917 = !DILocation(line: 1700, column: 55, scope: !6815)
!6918 = !DILocation(line: 1700, column: 53, scope: !6815)
!6919 = !DILocalVariable(name: "dv1", scope: !6815, file: !3, line: 1701, type: !765)
!6920 = !DILocation(line: 1701, column: 17, scope: !6815)
!6921 = !DILocation(line: 1701, column: 23, scope: !6815)
!6922 = !DILocation(line: 1701, column: 32, scope: !6815)
!6923 = !DILocation(line: 1701, column: 30, scope: !6815)
!6924 = !DILocalVariable(name: "dv2", scope: !6815, file: !3, line: 1701, type: !765)
!6925 = !DILocation(line: 1701, column: 40, scope: !6815)
!6926 = !DILocation(line: 1701, column: 46, scope: !6815)
!6927 = !DILocation(line: 1701, column: 55, scope: !6815)
!6928 = !DILocation(line: 1701, column: 53, scope: !6815)
!6929 = !DILocalVariable(name: "dpdu_a1", scope: !6815, file: !3, line: 1702, type: !765)
!6930 = !DILocation(line: 1702, column: 17, scope: !6815)
!6931 = !DILocation(line: 1702, column: 27, scope: !6815)
!6932 = !DILocation(line: 1702, column: 31, scope: !6815)
!6933 = !DILocation(line: 1702, column: 30, scope: !6815)
!6934 = !DILocation(line: 1702, column: 40, scope: !6815)
!6935 = !DILocation(line: 1702, column: 44, scope: !6815)
!6936 = !DILocation(line: 1702, column: 43, scope: !6815)
!6937 = !DILocation(line: 1702, column: 38, scope: !6815)
!6938 = !DILocalVariable(name: "dpdu_a2", scope: !6815, file: !3, line: 1703, type: !765)
!6939 = !DILocation(line: 1703, column: 17, scope: !6815)
!6940 = !DILocation(line: 1703, column: 27, scope: !6815)
!6941 = !DILocation(line: 1703, column: 31, scope: !6815)
!6942 = !DILocation(line: 1703, column: 30, scope: !6815)
!6943 = !DILocation(line: 1703, column: 40, scope: !6815)
!6944 = !DILocation(line: 1703, column: 44, scope: !6815)
!6945 = !DILocation(line: 1703, column: 43, scope: !6815)
!6946 = !DILocation(line: 1703, column: 38, scope: !6815)
!6947 = !DILocalVariable(name: "dpdv_a1", scope: !6815, file: !3, line: 1704, type: !765)
!6948 = !DILocation(line: 1704, column: 17, scope: !6815)
!6949 = !DILocation(line: 1704, column: 27, scope: !6815)
!6950 = !DILocation(line: 1704, column: 31, scope: !6815)
!6951 = !DILocation(line: 1704, column: 30, scope: !6815)
!6952 = !DILocation(line: 1704, column: 40, scope: !6815)
!6953 = !DILocation(line: 1704, column: 44, scope: !6815)
!6954 = !DILocation(line: 1704, column: 43, scope: !6815)
!6955 = !DILocation(line: 1704, column: 38, scope: !6815)
!6956 = !DILocalVariable(name: "dpdv_a2", scope: !6815, file: !3, line: 1705, type: !765)
!6957 = !DILocation(line: 1705, column: 17, scope: !6815)
!6958 = !DILocation(line: 1705, column: 27, scope: !6815)
!6959 = !DILocation(line: 1705, column: 31, scope: !6815)
!6960 = !DILocation(line: 1705, column: 30, scope: !6815)
!6961 = !DILocation(line: 1705, column: 40, scope: !6815)
!6962 = !DILocation(line: 1705, column: 44, scope: !6815)
!6963 = !DILocation(line: 1705, column: 43, scope: !6815)
!6964 = !DILocation(line: 1705, column: 38, scope: !6815)
!6965 = !DILocalVariable(name: "d", scope: !6815, file: !3, line: 1706, type: !91)
!6966 = !DILocation(line: 1706, column: 11, scope: !6815)
!6967 = !DILocation(line: 1706, column: 15, scope: !6815)
!6968 = !DILocation(line: 1706, column: 23, scope: !6815)
!6969 = !DILocation(line: 1706, column: 22, scope: !6815)
!6970 = !DILocation(line: 1706, column: 33, scope: !6815)
!6971 = !DILocation(line: 1706, column: 41, scope: !6815)
!6972 = !DILocation(line: 1706, column: 40, scope: !6815)
!6973 = !DILocation(line: 1706, column: 31, scope: !6815)
!6974 = !DILocalVariable(name: "uvd", scope: !6815, file: !3, line: 1707, type: !91)
!6975 = !DILocation(line: 1707, column: 11, scope: !6815)
!6976 = !DILocation(line: 1707, column: 17, scope: !6815)
!6977 = !DILocation(line: 1707, column: 21, scope: !6815)
!6978 = !DILocation(line: 1707, column: 20, scope: !6815)
!6979 = !DILocation(line: 1707, column: 27, scope: !6815)
!6980 = !DILocation(line: 1707, column: 31, scope: !6815)
!6981 = !DILocation(line: 1707, column: 30, scope: !6815)
!6982 = !DILocation(line: 1707, column: 25, scope: !6815)
!6983 = !DILocation(line: 1709, column: 9, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1709, column: 9)
!6985 = !DILocation(line: 1709, column: 13, scope: !6984)
!6986 = !DILocation(line: 1709, column: 9, scope: !6815)
!6987 = !DILocation(line: 1709, column: 25, scope: !6984)
!6988 = !DILocation(line: 1709, column: 21, scope: !6984)
!6989 = !DILocation(line: 1710, column: 9, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1710, column: 9)
!6991 = !DILocation(line: 1710, column: 11, scope: !6990)
!6992 = !DILocation(line: 1710, column: 9, scope: !6815)
!6993 = !DILocation(line: 1710, column: 21, scope: !6990)
!6994 = !DILocation(line: 1710, column: 19, scope: !6990)
!6995 = !DILocation(line: 1711, column: 9, scope: !6815)
!6996 = !DILocation(line: 1711, column: 15, scope: !6815)
!6997 = !DILocation(line: 1711, column: 13, scope: !6815)
!6998 = !DILocation(line: 1711, column: 7, scope: !6815)
!6999 = !DILocation(line: 1713, column: 27, scope: !6815)
!7000 = !DILocation(line: 1713, column: 35, scope: !6815)
!7001 = !DILocation(line: 1713, column: 48, scope: !6815)
!7002 = !DILocation(line: 1713, column: 51, scope: !6815)
!7003 = !DILocation(line: 1713, column: 34, scope: !6815)
!7004 = !DILocation(line: 1713, column: 57, scope: !6815)
!7005 = !DILocation(line: 1713, column: 65, scope: !6815)
!7006 = !DILocation(line: 1713, column: 78, scope: !6815)
!7007 = !DILocation(line: 1713, column: 81, scope: !6815)
!7008 = !DILocation(line: 1713, column: 64, scope: !6815)
!7009 = !DILocation(line: 1713, column: 55, scope: !6815)
!7010 = !DILocation(line: 1713, column: 86, scope: !6815)
!7011 = !DILocation(line: 1713, column: 85, scope: !6815)
!7012 = !DILocation(line: 1713, column: 5, scope: !6815)
!7013 = !DILocation(line: 1713, column: 18, scope: !6815)
!7014 = !DILocation(line: 1713, column: 24, scope: !6815)
!7015 = !DILocation(line: 1714, column: 27, scope: !6815)
!7016 = !DILocation(line: 1714, column: 35, scope: !6815)
!7017 = !DILocation(line: 1714, column: 48, scope: !6815)
!7018 = !DILocation(line: 1714, column: 51, scope: !6815)
!7019 = !DILocation(line: 1714, column: 34, scope: !6815)
!7020 = !DILocation(line: 1714, column: 57, scope: !6815)
!7021 = !DILocation(line: 1714, column: 65, scope: !6815)
!7022 = !DILocation(line: 1714, column: 78, scope: !6815)
!7023 = !DILocation(line: 1714, column: 81, scope: !6815)
!7024 = !DILocation(line: 1714, column: 64, scope: !6815)
!7025 = !DILocation(line: 1714, column: 55, scope: !6815)
!7026 = !DILocation(line: 1714, column: 86, scope: !6815)
!7027 = !DILocation(line: 1714, column: 85, scope: !6815)
!7028 = !DILocation(line: 1714, column: 5, scope: !6815)
!7029 = !DILocation(line: 1714, column: 18, scope: !6815)
!7030 = !DILocation(line: 1714, column: 24, scope: !6815)
!7031 = !DILocation(line: 1715, column: 27, scope: !6815)
!7032 = !DILocation(line: 1715, column: 35, scope: !6815)
!7033 = !DILocation(line: 1715, column: 48, scope: !6815)
!7034 = !DILocation(line: 1715, column: 51, scope: !6815)
!7035 = !DILocation(line: 1715, column: 34, scope: !6815)
!7036 = !DILocation(line: 1715, column: 57, scope: !6815)
!7037 = !DILocation(line: 1715, column: 65, scope: !6815)
!7038 = !DILocation(line: 1715, column: 78, scope: !6815)
!7039 = !DILocation(line: 1715, column: 81, scope: !6815)
!7040 = !DILocation(line: 1715, column: 64, scope: !6815)
!7041 = !DILocation(line: 1715, column: 55, scope: !6815)
!7042 = !DILocation(line: 1715, column: 86, scope: !6815)
!7043 = !DILocation(line: 1715, column: 85, scope: !6815)
!7044 = !DILocation(line: 1715, column: 5, scope: !6815)
!7045 = !DILocation(line: 1715, column: 18, scope: !6815)
!7046 = !DILocation(line: 1715, column: 24, scope: !6815)
!7047 = !DILocation(line: 1716, column: 27, scope: !6815)
!7048 = !DILocation(line: 1716, column: 35, scope: !6815)
!7049 = !DILocation(line: 1716, column: 48, scope: !6815)
!7050 = !DILocation(line: 1716, column: 51, scope: !6815)
!7051 = !DILocation(line: 1716, column: 34, scope: !6815)
!7052 = !DILocation(line: 1716, column: 57, scope: !6815)
!7053 = !DILocation(line: 1716, column: 65, scope: !6815)
!7054 = !DILocation(line: 1716, column: 78, scope: !6815)
!7055 = !DILocation(line: 1716, column: 81, scope: !6815)
!7056 = !DILocation(line: 1716, column: 64, scope: !6815)
!7057 = !DILocation(line: 1716, column: 55, scope: !6815)
!7058 = !DILocation(line: 1716, column: 86, scope: !6815)
!7059 = !DILocation(line: 1716, column: 85, scope: !6815)
!7060 = !DILocation(line: 1716, column: 5, scope: !6815)
!7061 = !DILocation(line: 1716, column: 18, scope: !6815)
!7062 = !DILocation(line: 1716, column: 24, scope: !6815)
!7063 = !DILocation(line: 1717, column: 4, scope: !6815)
!7064 = !DILocation(line: 1718, column: 3, scope: !6754)
!7065 = !DILocation(line: 1719, column: 2, scope: !6739)
!7066 = !DILocation(line: 1720, column: 1, scope: !6711)
!7067 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4399, file: !4399, line: 309, type: !7068, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{null, !201, !954, !954}
!7070 = !DILocalVariable(name: "r", arg: 1, scope: !7067, file: !4399, line: 309, type: !201)
!7071 = !DILocation(line: 309, column: 32, scope: !7067)
!7072 = !DILocalVariable(name: "a", arg: 2, scope: !7067, file: !4399, line: 309, type: !954)
!7073 = !DILocation(line: 309, column: 50, scope: !7067)
!7074 = !DILocalVariable(name: "b", arg: 3, scope: !7067, file: !4399, line: 309, type: !954)
!7075 = !DILocation(line: 309, column: 68, scope: !7067)
!7076 = !DILocation(line: 311, column: 9, scope: !7067)
!7077 = !DILocation(line: 311, column: 16, scope: !7067)
!7078 = !DILocation(line: 311, column: 14, scope: !7067)
!7079 = !DILocation(line: 311, column: 2, scope: !7067)
!7080 = !DILocation(line: 311, column: 7, scope: !7067)
!7081 = !DILocation(line: 312, column: 9, scope: !7067)
!7082 = !DILocation(line: 312, column: 16, scope: !7067)
!7083 = !DILocation(line: 312, column: 14, scope: !7067)
!7084 = !DILocation(line: 312, column: 2, scope: !7067)
!7085 = !DILocation(line: 312, column: 7, scope: !7067)
!7086 = !DILocation(line: 313, column: 9, scope: !7067)
!7087 = !DILocation(line: 313, column: 16, scope: !7067)
!7088 = !DILocation(line: 313, column: 14, scope: !7067)
!7089 = !DILocation(line: 313, column: 2, scope: !7067)
!7090 = !DILocation(line: 313, column: 7, scope: !7067)
!7091 = !DILocation(line: 314, column: 1, scope: !7067)
!7092 = distinct !DISubprogram(name: "compatible_bump_compute", scope: !3, file: !3, line: 1722, type: !7093, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!92, !6690, !2730, !3587, !3402, !3576, !91, !954, !954, !954, !201, !201, !201, !2905}
!7095 = !DILocalVariable(name: "compat_bump", arg: 1, scope: !7092, file: !3, line: 1722, type: !6690)
!7096 = !DILocation(line: 1722, column: 52, scope: !7092)
!7097 = !DILocalVariable(name: "shi", arg: 2, scope: !7092, file: !3, line: 1722, type: !2730)
!7098 = !DILocation(line: 1722, column: 77, scope: !7092)
!7099 = !DILocalVariable(name: "mtex", arg: 3, scope: !7092, file: !3, line: 1722, type: !3587)
!7100 = !DILocation(line: 1722, column: 88, scope: !7092)
!7101 = !DILocalVariable(name: "tex", arg: 4, scope: !7092, file: !3, line: 1722, type: !3402)
!7102 = !DILocation(line: 1722, column: 99, scope: !7092)
!7103 = !DILocalVariable(name: "texres", arg: 5, scope: !7092, file: !3, line: 1722, type: !3576)
!7104 = !DILocation(line: 1722, column: 115, scope: !7092)
!7105 = !DILocalVariable(name: "Tnor", arg: 6, scope: !7092, file: !3, line: 1723, type: !91)
!7106 = !DILocation(line: 1723, column: 42, scope: !7092)
!7107 = !DILocalVariable(name: "co", arg: 7, scope: !7092, file: !3, line: 1723, type: !954)
!7108 = !DILocation(line: 1723, column: 60, scope: !7092)
!7109 = !DILocalVariable(name: "dx", arg: 8, scope: !7092, file: !3, line: 1723, type: !954)
!7110 = !DILocation(line: 1723, column: 79, scope: !7092)
!7111 = !DILocalVariable(name: "dy", arg: 9, scope: !7092, file: !3, line: 1723, type: !954)
!7112 = !DILocation(line: 1723, column: 98, scope: !7092)
!7113 = !DILocalVariable(name: "texvec", arg: 10, scope: !7092, file: !3, line: 1723, type: !201)
!7114 = !DILocation(line: 1723, column: 111, scope: !7092)
!7115 = !DILocalVariable(name: "dxt", arg: 11, scope: !7092, file: !3, line: 1723, type: !201)
!7116 = !DILocation(line: 1723, column: 128, scope: !7092)
!7117 = !DILocalVariable(name: "dyt", arg: 12, scope: !7092, file: !3, line: 1723, type: !201)
!7118 = !DILocation(line: 1723, column: 142, scope: !7092)
!7119 = !DILocalVariable(name: "pool", arg: 13, scope: !7092, file: !3, line: 1724, type: !2905)
!7120 = !DILocation(line: 1724, column: 54, scope: !7092)
!7121 = !DILocalVariable(name: "ttexr", scope: !7092, file: !3, line: 1726, type: !3577)
!7122 = !DILocation(line: 1726, column: 12, scope: !7092)
!7123 = !DILocation(line: 1726, column: 20, scope: !7092)
!7124 = !DILocation(line: 1726, column: 36, scope: !7092)
!7125 = !DILocation(line: 1726, column: 44, scope: !7092)
!7126 = !DILocalVariable(name: "tco", scope: !7092, file: !3, line: 1727, type: !344)
!7127 = !DILocation(line: 1727, column: 8, scope: !7092)
!7128 = !DILocalVariable(name: "texv", scope: !7092, file: !3, line: 1727, type: !344)
!7129 = !DILocation(line: 1727, column: 16, scope: !7092)
!7130 = !DILocalVariable(name: "cd", scope: !7092, file: !3, line: 1727, type: !91)
!7131 = !DILocation(line: 1727, column: 25, scope: !7092)
!7132 = !DILocalVariable(name: "ud", scope: !7092, file: !3, line: 1727, type: !91)
!7133 = !DILocation(line: 1727, column: 29, scope: !7092)
!7134 = !DILocalVariable(name: "vd", scope: !7092, file: !3, line: 1727, type: !91)
!7135 = !DILocation(line: 1727, column: 33, scope: !7092)
!7136 = !DILocalVariable(name: "du", scope: !7092, file: !3, line: 1727, type: !91)
!7137 = !DILocation(line: 1727, column: 37, scope: !7092)
!7138 = !DILocalVariable(name: "dv", scope: !7092, file: !3, line: 1727, type: !91)
!7139 = !DILocation(line: 1727, column: 41, scope: !7092)
!7140 = !DILocalVariable(name: "idu", scope: !7092, file: !3, line: 1727, type: !91)
!7141 = !DILocation(line: 1727, column: 45, scope: !7092)
!7142 = !DILocalVariable(name: "idv", scope: !7092, file: !3, line: 1727, type: !91)
!7143 = !DILocation(line: 1727, column: 50, scope: !7092)
!7144 = !DILocalVariable(name: "fromrgb", scope: !7092, file: !3, line: 1728, type: !6844)
!7145 = !DILocation(line: 1728, column: 12, scope: !7092)
!7146 = !DILocation(line: 1728, column: 24, scope: !7092)
!7147 = !DILocation(line: 1728, column: 29, scope: !7092)
!7148 = !DILocation(line: 1728, column: 34, scope: !7092)
!7149 = !DILocation(line: 1728, column: 48, scope: !7092)
!7150 = !DILocation(line: 1728, column: 53, scope: !7092)
!7151 = !DILocation(line: 1728, column: 58, scope: !7092)
!7152 = !DILocation(line: 1728, column: 63, scope: !7092)
!7153 = !DILocation(line: 1728, column: 79, scope: !7092)
!7154 = !DILocalVariable(name: "bf", scope: !7092, file: !3, line: 1729, type: !765)
!7155 = !DILocation(line: 1729, column: 14, scope: !7092)
!7156 = !DILocation(line: 1729, column: 26, scope: !7092)
!7157 = !DILocation(line: 1729, column: 25, scope: !7092)
!7158 = !DILocation(line: 1729, column: 31, scope: !7092)
!7159 = !DILocation(line: 1729, column: 37, scope: !7092)
!7160 = !DILocation(line: 1729, column: 30, scope: !7092)
!7161 = !DILocalVariable(name: "rgbnor", scope: !7092, file: !3, line: 1730, type: !92)
!7162 = !DILocation(line: 1730, column: 6, scope: !7092)
!7163 = !DILocalVariable(name: "nvec", scope: !7092, file: !3, line: 1732, type: !201)
!7164 = !DILocation(line: 1732, column: 9, scope: !7092)
!7165 = !DILocation(line: 1732, column: 16, scope: !7092)
!7166 = !DILocation(line: 1732, column: 24, scope: !7092)
!7167 = !DILocation(line: 1733, column: 2, scope: !7092)
!7168 = !DILocation(line: 1733, column: 10, scope: !7092)
!7169 = !DILocation(line: 1733, column: 14, scope: !7092)
!7170 = !DILocation(line: 1735, column: 10, scope: !7092)
!7171 = !DILocation(line: 1735, column: 5, scope: !7092)
!7172 = !DILocation(line: 1738, column: 7, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1738, column: 6)
!7174 = !DILocation(line: 1738, column: 20, scope: !7173)
!7175 = !DILocation(line: 1738, column: 6, scope: !7092)
!7176 = !DILocation(line: 1740, column: 16, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 1738, column: 30)
!7178 = !DILocation(line: 1740, column: 29, scope: !7177)
!7179 = !DILocation(line: 1740, column: 33, scope: !7177)
!7180 = !DILocation(line: 1740, column: 38, scope: !7177)
!7181 = !DILocation(line: 1740, column: 3, scope: !7177)
!7182 = !DILocation(line: 1741, column: 23, scope: !7177)
!7183 = !DILocation(line: 1741, column: 36, scope: !7177)
!7184 = !DILocation(line: 1741, column: 40, scope: !7177)
!7185 = !DILocation(line: 1741, column: 53, scope: !7177)
!7186 = !DILocation(line: 1741, column: 57, scope: !7177)
!7187 = !DILocation(line: 1741, column: 70, scope: !7177)
!7188 = !DILocation(line: 1741, column: 3, scope: !7177)
!7189 = !DILocation(line: 1742, column: 3, scope: !7177)
!7190 = !DILocation(line: 1742, column: 16, scope: !7177)
!7191 = !DILocation(line: 1742, column: 25, scope: !7177)
!7192 = !DILocation(line: 1743, column: 2, scope: !7177)
!7193 = !DILocation(line: 1749, column: 7, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1749, column: 6)
!7195 = !DILocation(line: 1749, column: 12, scope: !7194)
!7196 = !DILocation(line: 1749, column: 19, scope: !7194)
!7197 = !DILocation(line: 1749, column: 23, scope: !7194)
!7198 = !DILocation(line: 1749, column: 28, scope: !7194)
!7199 = !DILocation(line: 1749, column: 33, scope: !7194)
!7200 = !DILocation(line: 1749, column: 47, scope: !7194)
!7201 = !DILocation(line: 1749, column: 50, scope: !7194)
!7202 = !DILocation(line: 1749, column: 55, scope: !7194)
!7203 = !DILocation(line: 1749, column: 6, scope: !7092)
!7204 = !DILocalVariable(name: "ibuf", scope: !7205, file: !3, line: 1752, type: !3706)
!7205 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1749, column: 60)
!7206 = !DILocation(line: 1752, column: 10, scope: !7205)
!7207 = !DILocation(line: 1752, column: 45, scope: !7205)
!7208 = !DILocation(line: 1752, column: 50, scope: !7205)
!7209 = !DILocation(line: 1752, column: 56, scope: !7205)
!7210 = !DILocation(line: 1752, column: 61, scope: !7205)
!7211 = !DILocation(line: 1752, column: 68, scope: !7205)
!7212 = !DILocation(line: 1752, column: 17, scope: !7205)
!7213 = !DILocation(line: 1753, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 1753, column: 7)
!7215 = !DILocation(line: 1753, column: 7, scope: !7205)
!7216 = !DILocation(line: 1754, column: 20, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 1753, column: 13)
!7218 = !DILocation(line: 1754, column: 26, scope: !7217)
!7219 = !DILocation(line: 1754, column: 13, scope: !7217)
!7220 = !DILocation(line: 1754, column: 12, scope: !7217)
!7221 = !DILocation(line: 1754, column: 7, scope: !7217)
!7222 = !DILocation(line: 1755, column: 20, scope: !7217)
!7223 = !DILocation(line: 1755, column: 26, scope: !7217)
!7224 = !DILocation(line: 1755, column: 13, scope: !7217)
!7225 = !DILocation(line: 1755, column: 12, scope: !7217)
!7226 = !DILocation(line: 1755, column: 7, scope: !7217)
!7227 = !DILocation(line: 1756, column: 3, scope: !7217)
!7228 = !DILocation(line: 1757, column: 31, scope: !7205)
!7229 = !DILocation(line: 1757, column: 36, scope: !7205)
!7230 = !DILocation(line: 1757, column: 41, scope: !7205)
!7231 = !DILocation(line: 1757, column: 47, scope: !7205)
!7232 = !DILocation(line: 1757, column: 3, scope: !7205)
!7233 = !DILocation(line: 1758, column: 2, scope: !7205)
!7234 = !DILocation(line: 1759, column: 11, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1759, column: 11)
!7236 = !DILocation(line: 1759, column: 16, scope: !7235)
!7237 = !DILocation(line: 1759, column: 11, scope: !7194)
!7238 = !DILocation(line: 1761, column: 7, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1761, column: 7)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1759, column: 24)
!7241 = !DILocation(line: 1761, column: 12, scope: !7239)
!7242 = !DILocation(line: 1761, column: 17, scope: !7239)
!7243 = !DILocation(line: 1761, column: 7, scope: !7240)
!7244 = !DILocalVariable(name: "adx", scope: !7245, file: !3, line: 1762, type: !7246)
!7245 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1761, column: 31)
!7246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 64, elements: !1102)
!7247 = !DILocation(line: 1762, column: 16, scope: !7245)
!7248 = !DILocation(line: 1762, column: 25, scope: !7245)
!7249 = !DILocation(line: 1762, column: 32, scope: !7245)
!7250 = !DILocation(line: 1762, column: 26, scope: !7245)
!7251 = !DILocation(line: 1762, column: 46, scope: !7245)
!7252 = !DILocation(line: 1762, column: 40, scope: !7245)
!7253 = !DILocalVariable(name: "ady", scope: !7245, file: !3, line: 1763, type: !7246)
!7254 = !DILocation(line: 1763, column: 16, scope: !7245)
!7255 = !DILocation(line: 1763, column: 25, scope: !7245)
!7256 = !DILocation(line: 1763, column: 32, scope: !7245)
!7257 = !DILocation(line: 1763, column: 26, scope: !7245)
!7258 = !DILocation(line: 1763, column: 46, scope: !7245)
!7259 = !DILocation(line: 1763, column: 40, scope: !7245)
!7260 = !DILocation(line: 1764, column: 9, scope: !7245)
!7261 = !DILocation(line: 1764, column: 7, scope: !7245)
!7262 = !DILocation(line: 1765, column: 9, scope: !7245)
!7263 = !DILocation(line: 1765, column: 7, scope: !7245)
!7264 = !DILocation(line: 1766, column: 3, scope: !7245)
!7265 = !DILocalVariable(name: "adx", scope: !7266, file: !3, line: 1768, type: !6831)
!7266 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1767, column: 8)
!7267 = !DILocation(line: 1768, column: 16, scope: !7266)
!7268 = !DILocation(line: 1768, column: 25, scope: !7266)
!7269 = !DILocation(line: 1768, column: 32, scope: !7266)
!7270 = !DILocation(line: 1768, column: 26, scope: !7266)
!7271 = !DILocation(line: 1768, column: 46, scope: !7266)
!7272 = !DILocation(line: 1768, column: 40, scope: !7266)
!7273 = !DILocation(line: 1768, column: 60, scope: !7266)
!7274 = !DILocation(line: 1768, column: 54, scope: !7266)
!7275 = !DILocalVariable(name: "ady", scope: !7266, file: !3, line: 1769, type: !6831)
!7276 = !DILocation(line: 1769, column: 16, scope: !7266)
!7277 = !DILocation(line: 1769, column: 25, scope: !7266)
!7278 = !DILocation(line: 1769, column: 32, scope: !7266)
!7279 = !DILocation(line: 1769, column: 26, scope: !7266)
!7280 = !DILocation(line: 1769, column: 46, scope: !7266)
!7281 = !DILocation(line: 1769, column: 40, scope: !7266)
!7282 = !DILocation(line: 1769, column: 60, scope: !7266)
!7283 = !DILocation(line: 1769, column: 54, scope: !7266)
!7284 = !DILocation(line: 1770, column: 17, scope: !7266)
!7285 = !DILocation(line: 1770, column: 25, scope: !7266)
!7286 = !DILocation(line: 1770, column: 33, scope: !7266)
!7287 = !DILocation(line: 1770, column: 9, scope: !7266)
!7288 = !DILocation(line: 1770, column: 7, scope: !7266)
!7289 = !DILocation(line: 1771, column: 17, scope: !7266)
!7290 = !DILocation(line: 1771, column: 25, scope: !7266)
!7291 = !DILocation(line: 1771, column: 33, scope: !7266)
!7292 = !DILocation(line: 1771, column: 9, scope: !7266)
!7293 = !DILocation(line: 1771, column: 7, scope: !7266)
!7294 = !DILocation(line: 1773, column: 2, scope: !7240)
!7295 = !DILocation(line: 1776, column: 16, scope: !7092)
!7296 = !DILocation(line: 1776, column: 21, scope: !7092)
!7297 = !DILocation(line: 1776, column: 26, scope: !7092)
!7298 = !DILocation(line: 1776, column: 32, scope: !7092)
!7299 = !DILocation(line: 1776, column: 36, scope: !7092)
!7300 = !DILocation(line: 1776, column: 40, scope: !7092)
!7301 = !DILocation(line: 1776, column: 44, scope: !7092)
!7302 = !DILocation(line: 1776, column: 52, scope: !7092)
!7303 = !DILocation(line: 1776, column: 57, scope: !7092)
!7304 = !DILocation(line: 1776, column: 2, scope: !7092)
!7305 = !DILocation(line: 1777, column: 25, scope: !7092)
!7306 = !DILocation(line: 1777, column: 30, scope: !7092)
!7307 = !DILocation(line: 1777, column: 36, scope: !7092)
!7308 = !DILocation(line: 1777, column: 44, scope: !7092)
!7309 = !DILocation(line: 1777, column: 49, scope: !7092)
!7310 = !DILocation(line: 1777, column: 54, scope: !7092)
!7311 = !DILocation(line: 1777, column: 62, scope: !7092)
!7312 = !DILocation(line: 1777, column: 11, scope: !7092)
!7313 = !DILocation(line: 1777, column: 9, scope: !7092)
!7314 = !DILocation(line: 1778, column: 7, scope: !7092)
!7315 = !DILocation(line: 1778, column: 18, scope: !7092)
!7316 = !DILocation(line: 1778, column: 26, scope: !7092)
!7317 = !DILocation(line: 1778, column: 31, scope: !7092)
!7318 = !DILocation(line: 1778, column: 39, scope: !7092)
!7319 = !DILocation(line: 1778, column: 29, scope: !7092)
!7320 = !DILocation(line: 1778, column: 44, scope: !7092)
!7321 = !DILocation(line: 1778, column: 52, scope: !7092)
!7322 = !DILocation(line: 1778, column: 42, scope: !7092)
!7323 = !DILocation(line: 1778, column: 56, scope: !7092)
!7324 = !DILocation(line: 1778, column: 65, scope: !7092)
!7325 = !DILocation(line: 1778, column: 73, scope: !7092)
!7326 = !DILocation(line: 1778, column: 5, scope: !7092)
!7327 = !DILocation(line: 1780, column: 6, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1780, column: 6)
!7329 = !DILocation(line: 1780, column: 12, scope: !7328)
!7330 = !DILocation(line: 1780, column: 18, scope: !7328)
!7331 = !DILocation(line: 1780, column: 6, scope: !7092)
!7332 = !DILocation(line: 1783, column: 15, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 1780, column: 31)
!7334 = !DILocation(line: 1783, column: 19, scope: !7333)
!7335 = !DILocation(line: 1783, column: 8, scope: !7333)
!7336 = !DILocation(line: 1783, column: 6, scope: !7333)
!7337 = !DILocation(line: 1784, column: 10, scope: !7333)
!7338 = !DILocation(line: 1784, column: 13, scope: !7333)
!7339 = !DILocation(line: 1784, column: 9, scope: !7333)
!7340 = !DILocation(line: 1784, column: 24, scope: !7333)
!7341 = !DILocation(line: 1784, column: 30, scope: !7333)
!7342 = !DILocation(line: 1784, column: 33, scope: !7333)
!7343 = !DILocation(line: 1784, column: 32, scope: !7333)
!7344 = !DILocation(line: 1784, column: 7, scope: !7333)
!7345 = !DILocation(line: 1787, column: 12, scope: !7333)
!7346 = !DILocation(line: 1787, column: 20, scope: !7333)
!7347 = !DILocation(line: 1787, column: 33, scope: !7333)
!7348 = !DILocation(line: 1787, column: 39, scope: !7333)
!7349 = !DILocation(line: 1787, column: 38, scope: !7333)
!7350 = !DILocation(line: 1787, column: 18, scope: !7333)
!7351 = !DILocation(line: 1787, column: 3, scope: !7333)
!7352 = !DILocation(line: 1787, column: 10, scope: !7333)
!7353 = !DILocation(line: 1788, column: 12, scope: !7333)
!7354 = !DILocation(line: 1788, column: 20, scope: !7333)
!7355 = !DILocation(line: 1788, column: 33, scope: !7333)
!7356 = !DILocation(line: 1788, column: 39, scope: !7333)
!7357 = !DILocation(line: 1788, column: 38, scope: !7333)
!7358 = !DILocation(line: 1788, column: 18, scope: !7333)
!7359 = !DILocation(line: 1788, column: 3, scope: !7333)
!7360 = !DILocation(line: 1788, column: 10, scope: !7333)
!7361 = !DILocation(line: 1789, column: 3, scope: !7333)
!7362 = !DILocation(line: 1789, column: 10, scope: !7333)
!7363 = !DILocation(line: 1790, column: 17, scope: !7333)
!7364 = !DILocation(line: 1790, column: 22, scope: !7333)
!7365 = !DILocation(line: 1790, column: 27, scope: !7333)
!7366 = !DILocation(line: 1790, column: 33, scope: !7333)
!7367 = !DILocation(line: 1790, column: 38, scope: !7333)
!7368 = !DILocation(line: 1790, column: 42, scope: !7333)
!7369 = !DILocation(line: 1790, column: 46, scope: !7333)
!7370 = !DILocation(line: 1790, column: 52, scope: !7333)
!7371 = !DILocation(line: 1790, column: 57, scope: !7333)
!7372 = !DILocation(line: 1790, column: 3, scope: !7333)
!7373 = !DILocation(line: 1791, column: 17, scope: !7333)
!7374 = !DILocation(line: 1791, column: 22, scope: !7333)
!7375 = !DILocation(line: 1791, column: 28, scope: !7333)
!7376 = !DILocation(line: 1791, column: 34, scope: !7333)
!7377 = !DILocation(line: 1791, column: 39, scope: !7333)
!7378 = !DILocation(line: 1791, column: 52, scope: !7333)
!7379 = !DILocation(line: 1791, column: 3, scope: !7333)
!7380 = !DILocation(line: 1792, column: 8, scope: !7333)
!7381 = !DILocation(line: 1792, column: 13, scope: !7333)
!7382 = !DILocation(line: 1792, column: 19, scope: !7333)
!7383 = !DILocation(line: 1792, column: 36, scope: !7333)
!7384 = !DILocation(line: 1792, column: 47, scope: !7333)
!7385 = !DILocation(line: 1792, column: 39, scope: !7333)
!7386 = !DILocation(line: 1792, column: 58, scope: !7333)
!7387 = !DILocation(line: 1792, column: 50, scope: !7333)
!7388 = !DILocation(line: 1792, column: 62, scope: !7333)
!7389 = !DILocation(line: 1792, column: 77, scope: !7333)
!7390 = !DILocation(line: 1792, column: 16, scope: !7333)
!7391 = !DILocation(line: 1792, column: 11, scope: !7333)
!7392 = !DILocation(line: 1792, column: 6, scope: !7333)
!7393 = !DILocation(line: 1795, column: 12, scope: !7333)
!7394 = !DILocation(line: 1795, column: 20, scope: !7333)
!7395 = !DILocation(line: 1795, column: 33, scope: !7333)
!7396 = !DILocation(line: 1795, column: 39, scope: !7333)
!7397 = !DILocation(line: 1795, column: 38, scope: !7333)
!7398 = !DILocation(line: 1795, column: 18, scope: !7333)
!7399 = !DILocation(line: 1795, column: 3, scope: !7333)
!7400 = !DILocation(line: 1795, column: 10, scope: !7333)
!7401 = !DILocation(line: 1796, column: 12, scope: !7333)
!7402 = !DILocation(line: 1796, column: 20, scope: !7333)
!7403 = !DILocation(line: 1796, column: 33, scope: !7333)
!7404 = !DILocation(line: 1796, column: 39, scope: !7333)
!7405 = !DILocation(line: 1796, column: 38, scope: !7333)
!7406 = !DILocation(line: 1796, column: 18, scope: !7333)
!7407 = !DILocation(line: 1796, column: 3, scope: !7333)
!7408 = !DILocation(line: 1796, column: 10, scope: !7333)
!7409 = !DILocation(line: 1797, column: 3, scope: !7333)
!7410 = !DILocation(line: 1797, column: 10, scope: !7333)
!7411 = !DILocation(line: 1798, column: 17, scope: !7333)
!7412 = !DILocation(line: 1798, column: 22, scope: !7333)
!7413 = !DILocation(line: 1798, column: 27, scope: !7333)
!7414 = !DILocation(line: 1798, column: 33, scope: !7333)
!7415 = !DILocation(line: 1798, column: 38, scope: !7333)
!7416 = !DILocation(line: 1798, column: 42, scope: !7333)
!7417 = !DILocation(line: 1798, column: 46, scope: !7333)
!7418 = !DILocation(line: 1798, column: 52, scope: !7333)
!7419 = !DILocation(line: 1798, column: 57, scope: !7333)
!7420 = !DILocation(line: 1798, column: 3, scope: !7333)
!7421 = !DILocation(line: 1799, column: 17, scope: !7333)
!7422 = !DILocation(line: 1799, column: 22, scope: !7333)
!7423 = !DILocation(line: 1799, column: 28, scope: !7333)
!7424 = !DILocation(line: 1799, column: 34, scope: !7333)
!7425 = !DILocation(line: 1799, column: 39, scope: !7333)
!7426 = !DILocation(line: 1799, column: 52, scope: !7333)
!7427 = !DILocation(line: 1799, column: 3, scope: !7333)
!7428 = !DILocation(line: 1800, column: 8, scope: !7333)
!7429 = !DILocation(line: 1800, column: 13, scope: !7333)
!7430 = !DILocation(line: 1800, column: 19, scope: !7333)
!7431 = !DILocation(line: 1800, column: 36, scope: !7333)
!7432 = !DILocation(line: 1800, column: 47, scope: !7333)
!7433 = !DILocation(line: 1800, column: 39, scope: !7333)
!7434 = !DILocation(line: 1800, column: 58, scope: !7333)
!7435 = !DILocation(line: 1800, column: 50, scope: !7333)
!7436 = !DILocation(line: 1800, column: 62, scope: !7333)
!7437 = !DILocation(line: 1800, column: 77, scope: !7333)
!7438 = !DILocation(line: 1800, column: 16, scope: !7333)
!7439 = !DILocation(line: 1800, column: 11, scope: !7333)
!7440 = !DILocation(line: 1800, column: 6, scope: !7333)
!7441 = !DILocation(line: 1801, column: 2, scope: !7333)
!7442 = !DILocalVariable(name: "tu", scope: !7443, file: !3, line: 1803, type: !344)
!7443 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 1802, column: 7)
!7444 = !DILocation(line: 1803, column: 9, scope: !7443)
!7445 = !DILocalVariable(name: "tv", scope: !7443, file: !3, line: 1803, type: !344)
!7446 = !DILocation(line: 1803, column: 16, scope: !7443)
!7447 = !DILocation(line: 1805, column: 14, scope: !7443)
!7448 = !DILocation(line: 1805, column: 18, scope: !7443)
!7449 = !DILocation(line: 1805, column: 31, scope: !7443)
!7450 = !DILocation(line: 1805, column: 3, scope: !7443)
!7451 = !DILocation(line: 1806, column: 14, scope: !7443)
!7452 = !DILocation(line: 1806, column: 18, scope: !7443)
!7453 = !DILocation(line: 1806, column: 31, scope: !7443)
!7454 = !DILocation(line: 1806, column: 3, scope: !7443)
!7455 = !DILocation(line: 1808, column: 10, scope: !7443)
!7456 = !DILocation(line: 1808, column: 13, scope: !7443)
!7457 = !DILocation(line: 1808, column: 9, scope: !7443)
!7458 = !DILocation(line: 1808, column: 24, scope: !7443)
!7459 = !DILocation(line: 1808, column: 30, scope: !7443)
!7460 = !DILocation(line: 1808, column: 33, scope: !7443)
!7461 = !DILocation(line: 1808, column: 32, scope: !7443)
!7462 = !DILocation(line: 1808, column: 7, scope: !7443)
!7463 = !DILocation(line: 1809, column: 10, scope: !7443)
!7464 = !DILocation(line: 1809, column: 13, scope: !7443)
!7465 = !DILocation(line: 1809, column: 9, scope: !7443)
!7466 = !DILocation(line: 1809, column: 24, scope: !7443)
!7467 = !DILocation(line: 1809, column: 30, scope: !7443)
!7468 = !DILocation(line: 1809, column: 33, scope: !7443)
!7469 = !DILocation(line: 1809, column: 32, scope: !7443)
!7470 = !DILocation(line: 1809, column: 7, scope: !7443)
!7471 = !DILocation(line: 1811, column: 8, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 1811, column: 7)
!7473 = !DILocation(line: 1811, column: 14, scope: !7472)
!7474 = !DILocation(line: 1811, column: 20, scope: !7472)
!7475 = !DILocation(line: 1811, column: 35, scope: !7472)
!7476 = !DILocation(line: 1811, column: 38, scope: !7472)
!7477 = !DILocation(line: 1811, column: 43, scope: !7472)
!7478 = !DILocation(line: 1811, column: 47, scope: !7472)
!7479 = !DILocation(line: 1811, column: 50, scope: !7472)
!7480 = !DILocation(line: 1811, column: 55, scope: !7472)
!7481 = !DILocation(line: 1811, column: 60, scope: !7472)
!7482 = !DILocation(line: 1811, column: 7, scope: !7443)
!7483 = !DILocation(line: 1812, column: 19, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1811, column: 64)
!7485 = !DILocation(line: 1812, column: 24, scope: !7484)
!7486 = !DILocation(line: 1812, column: 29, scope: !7484)
!7487 = !DILocation(line: 1812, column: 33, scope: !7484)
!7488 = !DILocation(line: 1812, column: 43, scope: !7484)
!7489 = !DILocation(line: 1812, column: 4, scope: !7484)
!7490 = !DILocation(line: 1813, column: 19, scope: !7484)
!7491 = !DILocation(line: 1813, column: 24, scope: !7484)
!7492 = !DILocation(line: 1813, column: 29, scope: !7484)
!7493 = !DILocation(line: 1813, column: 33, scope: !7484)
!7494 = !DILocation(line: 1813, column: 43, scope: !7484)
!7495 = !DILocation(line: 1813, column: 4, scope: !7484)
!7496 = !DILocation(line: 1814, column: 17, scope: !7484)
!7497 = !DILocation(line: 1814, column: 4, scope: !7484)
!7498 = !DILocation(line: 1815, column: 17, scope: !7484)
!7499 = !DILocation(line: 1815, column: 4, scope: !7484)
!7500 = !DILocation(line: 1816, column: 3, scope: !7484)
!7501 = !DILocation(line: 1817, column: 12, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1817, column: 12)
!7503 = !DILocation(line: 1817, column: 18, scope: !7502)
!7504 = !DILocation(line: 1817, column: 24, scope: !7502)
!7505 = !DILocation(line: 1817, column: 12, scope: !7472)
!7506 = !DILocation(line: 1818, column: 30, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 1817, column: 39)
!7508 = !DILocation(line: 1818, column: 4, scope: !7507)
!7509 = !DILocation(line: 1819, column: 30, scope: !7507)
!7510 = !DILocation(line: 1819, column: 4, scope: !7507)
!7511 = !DILocation(line: 1820, column: 3, scope: !7507)
!7512 = !DILocation(line: 1821, column: 12, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 1821, column: 12)
!7514 = !DILocation(line: 1821, column: 18, scope: !7513)
!7515 = !DILocation(line: 1821, column: 24, scope: !7513)
!7516 = !DILocation(line: 1821, column: 40, scope: !7513)
!7517 = !DILocation(line: 1821, column: 43, scope: !7513)
!7518 = !DILocation(line: 1821, column: 49, scope: !7513)
!7519 = !DILocation(line: 1821, column: 12, scope: !7502)
!7520 = !DILocation(line: 1822, column: 19, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1821, column: 57)
!7522 = !DILocation(line: 1822, column: 25, scope: !7521)
!7523 = !DILocation(line: 1822, column: 33, scope: !7521)
!7524 = !DILocation(line: 1822, column: 43, scope: !7521)
!7525 = !DILocation(line: 1822, column: 4, scope: !7521)
!7526 = !DILocation(line: 1823, column: 19, scope: !7521)
!7527 = !DILocation(line: 1823, column: 25, scope: !7521)
!7528 = !DILocation(line: 1823, column: 33, scope: !7521)
!7529 = !DILocation(line: 1823, column: 43, scope: !7521)
!7530 = !DILocation(line: 1823, column: 4, scope: !7521)
!7531 = !DILocation(line: 1824, column: 17, scope: !7521)
!7532 = !DILocation(line: 1824, column: 4, scope: !7521)
!7533 = !DILocation(line: 1825, column: 17, scope: !7521)
!7534 = !DILocation(line: 1825, column: 4, scope: !7521)
!7535 = !DILocation(line: 1826, column: 3, scope: !7521)
!7536 = !DILocation(line: 1829, column: 12, scope: !7443)
!7537 = !DILocation(line: 1829, column: 20, scope: !7443)
!7538 = !DILocation(line: 1829, column: 26, scope: !7443)
!7539 = !DILocation(line: 1829, column: 25, scope: !7443)
!7540 = !DILocation(line: 1829, column: 18, scope: !7443)
!7541 = !DILocation(line: 1829, column: 3, scope: !7443)
!7542 = !DILocation(line: 1829, column: 10, scope: !7443)
!7543 = !DILocation(line: 1830, column: 12, scope: !7443)
!7544 = !DILocation(line: 1830, column: 20, scope: !7443)
!7545 = !DILocation(line: 1830, column: 26, scope: !7443)
!7546 = !DILocation(line: 1830, column: 25, scope: !7443)
!7547 = !DILocation(line: 1830, column: 18, scope: !7443)
!7548 = !DILocation(line: 1830, column: 3, scope: !7443)
!7549 = !DILocation(line: 1830, column: 10, scope: !7443)
!7550 = !DILocation(line: 1831, column: 12, scope: !7443)
!7551 = !DILocation(line: 1831, column: 20, scope: !7443)
!7552 = !DILocation(line: 1831, column: 26, scope: !7443)
!7553 = !DILocation(line: 1831, column: 25, scope: !7443)
!7554 = !DILocation(line: 1831, column: 18, scope: !7443)
!7555 = !DILocation(line: 1831, column: 3, scope: !7443)
!7556 = !DILocation(line: 1831, column: 10, scope: !7443)
!7557 = !DILocation(line: 1832, column: 17, scope: !7443)
!7558 = !DILocation(line: 1832, column: 22, scope: !7443)
!7559 = !DILocation(line: 1832, column: 27, scope: !7443)
!7560 = !DILocation(line: 1832, column: 33, scope: !7443)
!7561 = !DILocation(line: 1832, column: 38, scope: !7443)
!7562 = !DILocation(line: 1832, column: 42, scope: !7443)
!7563 = !DILocation(line: 1832, column: 46, scope: !7443)
!7564 = !DILocation(line: 1832, column: 52, scope: !7443)
!7565 = !DILocation(line: 1832, column: 57, scope: !7443)
!7566 = !DILocation(line: 1832, column: 3, scope: !7443)
!7567 = !DILocation(line: 1833, column: 17, scope: !7443)
!7568 = !DILocation(line: 1833, column: 22, scope: !7443)
!7569 = !DILocation(line: 1833, column: 28, scope: !7443)
!7570 = !DILocation(line: 1833, column: 34, scope: !7443)
!7571 = !DILocation(line: 1833, column: 39, scope: !7443)
!7572 = !DILocation(line: 1833, column: 52, scope: !7443)
!7573 = !DILocation(line: 1833, column: 3, scope: !7443)
!7574 = !DILocation(line: 1834, column: 8, scope: !7443)
!7575 = !DILocation(line: 1834, column: 13, scope: !7443)
!7576 = !DILocation(line: 1834, column: 19, scope: !7443)
!7577 = !DILocation(line: 1834, column: 36, scope: !7443)
!7578 = !DILocation(line: 1834, column: 47, scope: !7443)
!7579 = !DILocation(line: 1834, column: 39, scope: !7443)
!7580 = !DILocation(line: 1834, column: 58, scope: !7443)
!7581 = !DILocation(line: 1834, column: 50, scope: !7443)
!7582 = !DILocation(line: 1834, column: 62, scope: !7443)
!7583 = !DILocation(line: 1834, column: 77, scope: !7443)
!7584 = !DILocation(line: 1834, column: 16, scope: !7443)
!7585 = !DILocation(line: 1834, column: 11, scope: !7443)
!7586 = !DILocation(line: 1834, column: 6, scope: !7443)
!7587 = !DILocation(line: 1837, column: 12, scope: !7443)
!7588 = !DILocation(line: 1837, column: 20, scope: !7443)
!7589 = !DILocation(line: 1837, column: 26, scope: !7443)
!7590 = !DILocation(line: 1837, column: 25, scope: !7443)
!7591 = !DILocation(line: 1837, column: 18, scope: !7443)
!7592 = !DILocation(line: 1837, column: 3, scope: !7443)
!7593 = !DILocation(line: 1837, column: 10, scope: !7443)
!7594 = !DILocation(line: 1838, column: 12, scope: !7443)
!7595 = !DILocation(line: 1838, column: 20, scope: !7443)
!7596 = !DILocation(line: 1838, column: 26, scope: !7443)
!7597 = !DILocation(line: 1838, column: 25, scope: !7443)
!7598 = !DILocation(line: 1838, column: 18, scope: !7443)
!7599 = !DILocation(line: 1838, column: 3, scope: !7443)
!7600 = !DILocation(line: 1838, column: 10, scope: !7443)
!7601 = !DILocation(line: 1839, column: 12, scope: !7443)
!7602 = !DILocation(line: 1839, column: 20, scope: !7443)
!7603 = !DILocation(line: 1839, column: 26, scope: !7443)
!7604 = !DILocation(line: 1839, column: 25, scope: !7443)
!7605 = !DILocation(line: 1839, column: 18, scope: !7443)
!7606 = !DILocation(line: 1839, column: 3, scope: !7443)
!7607 = !DILocation(line: 1839, column: 10, scope: !7443)
!7608 = !DILocation(line: 1840, column: 17, scope: !7443)
!7609 = !DILocation(line: 1840, column: 22, scope: !7443)
!7610 = !DILocation(line: 1840, column: 27, scope: !7443)
!7611 = !DILocation(line: 1840, column: 33, scope: !7443)
!7612 = !DILocation(line: 1840, column: 38, scope: !7443)
!7613 = !DILocation(line: 1840, column: 42, scope: !7443)
!7614 = !DILocation(line: 1840, column: 46, scope: !7443)
!7615 = !DILocation(line: 1840, column: 52, scope: !7443)
!7616 = !DILocation(line: 1840, column: 57, scope: !7443)
!7617 = !DILocation(line: 1840, column: 3, scope: !7443)
!7618 = !DILocation(line: 1841, column: 17, scope: !7443)
!7619 = !DILocation(line: 1841, column: 22, scope: !7443)
!7620 = !DILocation(line: 1841, column: 28, scope: !7443)
!7621 = !DILocation(line: 1841, column: 34, scope: !7443)
!7622 = !DILocation(line: 1841, column: 39, scope: !7443)
!7623 = !DILocation(line: 1841, column: 52, scope: !7443)
!7624 = !DILocation(line: 1841, column: 3, scope: !7443)
!7625 = !DILocation(line: 1842, column: 8, scope: !7443)
!7626 = !DILocation(line: 1842, column: 13, scope: !7443)
!7627 = !DILocation(line: 1842, column: 19, scope: !7443)
!7628 = !DILocation(line: 1842, column: 36, scope: !7443)
!7629 = !DILocation(line: 1842, column: 47, scope: !7443)
!7630 = !DILocation(line: 1842, column: 39, scope: !7443)
!7631 = !DILocation(line: 1842, column: 58, scope: !7443)
!7632 = !DILocation(line: 1842, column: 50, scope: !7443)
!7633 = !DILocation(line: 1842, column: 62, scope: !7443)
!7634 = !DILocation(line: 1842, column: 77, scope: !7443)
!7635 = !DILocation(line: 1842, column: 16, scope: !7443)
!7636 = !DILocation(line: 1842, column: 11, scope: !7443)
!7637 = !DILocation(line: 1842, column: 6, scope: !7443)
!7638 = !DILocation(line: 1846, column: 24, scope: !7092)
!7639 = !DILocation(line: 1846, column: 27, scope: !7092)
!7640 = !DILocation(line: 1846, column: 40, scope: !7092)
!7641 = !DILocation(line: 1846, column: 26, scope: !7092)
!7642 = !DILocation(line: 1846, column: 2, scope: !7092)
!7643 = !DILocation(line: 1846, column: 15, scope: !7092)
!7644 = !DILocation(line: 1846, column: 21, scope: !7092)
!7645 = !DILocation(line: 1847, column: 24, scope: !7092)
!7646 = !DILocation(line: 1847, column: 27, scope: !7092)
!7647 = !DILocation(line: 1847, column: 40, scope: !7092)
!7648 = !DILocation(line: 1847, column: 26, scope: !7092)
!7649 = !DILocation(line: 1847, column: 2, scope: !7092)
!7650 = !DILocation(line: 1847, column: 15, scope: !7092)
!7651 = !DILocation(line: 1847, column: 21, scope: !7092)
!7652 = !DILocation(line: 1848, column: 24, scope: !7092)
!7653 = !DILocation(line: 1848, column: 27, scope: !7092)
!7654 = !DILocation(line: 1848, column: 40, scope: !7092)
!7655 = !DILocation(line: 1848, column: 26, scope: !7092)
!7656 = !DILocation(line: 1848, column: 2, scope: !7092)
!7657 = !DILocation(line: 1848, column: 15, scope: !7092)
!7658 = !DILocation(line: 1848, column: 21, scope: !7092)
!7659 = !DILocation(line: 1849, column: 24, scope: !7092)
!7660 = !DILocation(line: 1849, column: 27, scope: !7092)
!7661 = !DILocation(line: 1849, column: 40, scope: !7092)
!7662 = !DILocation(line: 1849, column: 26, scope: !7092)
!7663 = !DILocation(line: 1849, column: 2, scope: !7092)
!7664 = !DILocation(line: 1849, column: 15, scope: !7092)
!7665 = !DILocation(line: 1849, column: 21, scope: !7092)
!7666 = !DILocation(line: 1850, column: 24, scope: !7092)
!7667 = !DILocation(line: 1850, column: 27, scope: !7092)
!7668 = !DILocation(line: 1850, column: 40, scope: !7092)
!7669 = !DILocation(line: 1850, column: 26, scope: !7092)
!7670 = !DILocation(line: 1850, column: 2, scope: !7092)
!7671 = !DILocation(line: 1850, column: 15, scope: !7092)
!7672 = !DILocation(line: 1850, column: 21, scope: !7092)
!7673 = !DILocation(line: 1851, column: 24, scope: !7092)
!7674 = !DILocation(line: 1851, column: 27, scope: !7092)
!7675 = !DILocation(line: 1851, column: 40, scope: !7092)
!7676 = !DILocation(line: 1851, column: 26, scope: !7092)
!7677 = !DILocation(line: 1851, column: 2, scope: !7092)
!7678 = !DILocation(line: 1851, column: 15, scope: !7092)
!7679 = !DILocation(line: 1851, column: 21, scope: !7092)
!7680 = !DILocation(line: 1852, column: 16, scope: !7092)
!7681 = !DILocation(line: 1852, column: 22, scope: !7092)
!7682 = !DILocation(line: 1852, column: 35, scope: !7092)
!7683 = !DILocation(line: 1852, column: 39, scope: !7092)
!7684 = !DILocation(line: 1852, column: 52, scope: !7092)
!7685 = !DILocation(line: 1852, column: 2, scope: !7092)
!7686 = !DILocation(line: 1854, column: 13, scope: !7092)
!7687 = !DILocation(line: 1854, column: 12, scope: !7092)
!7688 = !DILocation(line: 1854, column: 2, scope: !7092)
!7689 = !DILocation(line: 1854, column: 10, scope: !7092)
!7690 = !DILocation(line: 1855, column: 13, scope: !7092)
!7691 = !DILocation(line: 1855, column: 12, scope: !7092)
!7692 = !DILocation(line: 1855, column: 2, scope: !7092)
!7693 = !DILocation(line: 1855, column: 10, scope: !7092)
!7694 = !DILocation(line: 1856, column: 13, scope: !7092)
!7695 = !DILocation(line: 1856, column: 12, scope: !7092)
!7696 = !DILocation(line: 1856, column: 2, scope: !7092)
!7697 = !DILocation(line: 1856, column: 10, scope: !7092)
!7698 = !DILocation(line: 1857, column: 16, scope: !7092)
!7699 = !DILocation(line: 1857, column: 2, scope: !7092)
!7700 = !DILocation(line: 1857, column: 10, scope: !7092)
!7701 = !DILocation(line: 1857, column: 14, scope: !7092)
!7702 = !DILocation(line: 1859, column: 9, scope: !7092)
!7703 = !DILocation(line: 1860, column: 9, scope: !7092)
!7704 = !DILocation(line: 1860, column: 2, scope: !7092)
!7705 = distinct !DISubprogram(name: "ntap_bump_compute", scope: !3, file: !3, line: 1881, type: !7706, scopeLine: 1884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!92, !6705, !2730, !3587, !3402, !3576, !91, !954, !954, !954, !201, !201, !201, !2905}
!7708 = !DILocalVariable(name: "ntap_bump", arg: 1, scope: !7705, file: !3, line: 1881, type: !6705)
!7709 = !DILocation(line: 1881, column: 40, scope: !7705)
!7710 = !DILocalVariable(name: "shi", arg: 2, scope: !7705, file: !3, line: 1881, type: !2730)
!7711 = !DILocation(line: 1881, column: 63, scope: !7705)
!7712 = !DILocalVariable(name: "mtex", arg: 3, scope: !7705, file: !3, line: 1881, type: !3587)
!7713 = !DILocation(line: 1881, column: 74, scope: !7705)
!7714 = !DILocalVariable(name: "tex", arg: 4, scope: !7705, file: !3, line: 1881, type: !3402)
!7715 = !DILocation(line: 1881, column: 85, scope: !7705)
!7716 = !DILocalVariable(name: "texres", arg: 5, scope: !7705, file: !3, line: 1881, type: !3576)
!7717 = !DILocation(line: 1881, column: 101, scope: !7705)
!7718 = !DILocalVariable(name: "Tnor", arg: 6, scope: !7705, file: !3, line: 1882, type: !91)
!7719 = !DILocation(line: 1882, column: 36, scope: !7705)
!7720 = !DILocalVariable(name: "co", arg: 7, scope: !7705, file: !3, line: 1882, type: !954)
!7721 = !DILocation(line: 1882, column: 54, scope: !7705)
!7722 = !DILocalVariable(name: "dx", arg: 8, scope: !7705, file: !3, line: 1882, type: !954)
!7723 = !DILocation(line: 1882, column: 73, scope: !7705)
!7724 = !DILocalVariable(name: "dy", arg: 9, scope: !7705, file: !3, line: 1882, type: !954)
!7725 = !DILocation(line: 1882, column: 92, scope: !7705)
!7726 = !DILocalVariable(name: "texvec", arg: 10, scope: !7705, file: !3, line: 1883, type: !201)
!7727 = !DILocation(line: 1883, column: 36, scope: !7705)
!7728 = !DILocalVariable(name: "dxt", arg: 11, scope: !7705, file: !3, line: 1883, type: !201)
!7729 = !DILocation(line: 1883, column: 53, scope: !7705)
!7730 = !DILocalVariable(name: "dyt", arg: 12, scope: !7705, file: !3, line: 1883, type: !201)
!7731 = !DILocation(line: 1883, column: 67, scope: !7705)
!7732 = !DILocalVariable(name: "pool", arg: 13, scope: !7705, file: !3, line: 1883, type: !2905)
!7733 = !DILocation(line: 1883, column: 93, scope: !7705)
!7734 = !DILocalVariable(name: "ttexr", scope: !7705, file: !3, line: 1885, type: !3577)
!7735 = !DILocation(line: 1885, column: 12, scope: !7705)
!7736 = !DILocation(line: 1885, column: 20, scope: !7705)
!7737 = !DILocation(line: 1885, column: 36, scope: !7705)
!7738 = !DILocation(line: 1885, column: 44, scope: !7705)
!7739 = !DILocalVariable(name: "fromrgb", scope: !7705, file: !3, line: 1887, type: !6844)
!7740 = !DILocation(line: 1887, column: 12, scope: !7705)
!7741 = !DILocation(line: 1887, column: 24, scope: !7705)
!7742 = !DILocation(line: 1887, column: 29, scope: !7705)
!7743 = !DILocation(line: 1887, column: 34, scope: !7705)
!7744 = !DILocation(line: 1887, column: 48, scope: !7705)
!7745 = !DILocation(line: 1887, column: 53, scope: !7705)
!7746 = !DILocation(line: 1887, column: 58, scope: !7705)
!7747 = !DILocation(line: 1887, column: 63, scope: !7705)
!7748 = !DILocation(line: 1887, column: 79, scope: !7705)
!7749 = !DILocalVariable(name: "Hscale", scope: !7705, file: !3, line: 1894, type: !91)
!7750 = !DILocation(line: 1894, column: 8, scope: !7705)
!7751 = !DILocation(line: 1894, column: 18, scope: !7705)
!7752 = !DILocation(line: 1894, column: 17, scope: !7705)
!7753 = !DILocation(line: 1894, column: 23, scope: !7705)
!7754 = !DILocation(line: 1894, column: 29, scope: !7705)
!7755 = !DILocation(line: 1894, column: 22, scope: !7705)
!7756 = !DILocalVariable(name: "dimx", scope: !7705, file: !3, line: 1896, type: !92)
!7757 = !DILocation(line: 1896, column: 6, scope: !7705)
!7758 = !DILocalVariable(name: "dimy", scope: !7705, file: !3, line: 1896, type: !92)
!7759 = !DILocation(line: 1896, column: 16, scope: !7705)
!7760 = !DILocalVariable(name: "imag_tspace_dimension_x", scope: !7705, file: !3, line: 1897, type: !6844)
!7761 = !DILocation(line: 1897, column: 12, scope: !7705)
!7762 = !DILocalVariable(name: "aspect", scope: !7705, file: !3, line: 1898, type: !91)
!7763 = !DILocation(line: 1898, column: 8, scope: !7705)
!7764 = !DILocalVariable(name: "nr_channels", scope: !7705, file: !3, line: 1901, type: !6844)
!7765 = !DILocation(line: 1901, column: 12, scope: !7705)
!7766 = !DILocation(line: 1901, column: 27, scope: !7705)
!7767 = !DILocation(line: 1901, column: 33, scope: !7705)
!7768 = !DILocation(line: 1901, column: 39, scope: !7705)
!7769 = !DILocation(line: 1901, column: 26, scope: !7705)
!7770 = !DILocalVariable(name: "c", scope: !7705, file: !3, line: 1902, type: !92)
!7771 = !DILocation(line: 1902, column: 6, scope: !7705)
!7772 = !DILocalVariable(name: "rgbnor", scope: !7705, file: !3, line: 1902, type: !92)
!7773 = !DILocation(line: 1902, column: 9, scope: !7705)
!7774 = !DILocalVariable(name: "iBumpSpace", scope: !7705, file: !3, line: 1902, type: !92)
!7775 = !DILocation(line: 1902, column: 17, scope: !7705)
!7776 = !DILocalVariable(name: "dHdx", scope: !7705, file: !3, line: 1903, type: !91)
!7777 = !DILocation(line: 1903, column: 8, scope: !7705)
!7778 = !DILocalVariable(name: "dHdy", scope: !7705, file: !3, line: 1903, type: !91)
!7779 = !DILocation(line: 1903, column: 14, scope: !7705)
!7780 = !DILocalVariable(name: "found_deriv_map", scope: !7705, file: !3, line: 1904, type: !92)
!7781 = !DILocation(line: 1904, column: 6, scope: !7705)
!7782 = !DILocation(line: 1904, column: 25, scope: !7705)
!7783 = !DILocation(line: 1904, column: 30, scope: !7705)
!7784 = !DILocation(line: 1904, column: 34, scope: !7705)
!7785 = !DILocation(line: 1904, column: 47, scope: !7705)
!7786 = !DILocation(line: 1904, column: 51, scope: !7705)
!7787 = !DILocation(line: 1904, column: 56, scope: !7705)
!7788 = !DILocation(line: 1904, column: 64, scope: !7705)
!7789 = !DILocation(line: 0, scope: !7705)
!7790 = !DILocalVariable(name: "nvec", scope: !7705, file: !3, line: 1907, type: !201)
!7791 = !DILocation(line: 1907, column: 9, scope: !7705)
!7792 = !DILocation(line: 1907, column: 16, scope: !7705)
!7793 = !DILocation(line: 1907, column: 24, scope: !7705)
!7794 = !DILocation(line: 1908, column: 2, scope: !7705)
!7795 = !DILocation(line: 1908, column: 10, scope: !7705)
!7796 = !DILocation(line: 1908, column: 14, scope: !7705)
!7797 = !DILocation(line: 1910, column: 6, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1910, column: 6)
!7799 = !DILocation(line: 1910, column: 21, scope: !7798)
!7800 = !DILocation(line: 1910, column: 6, scope: !7705)
!7801 = !DILocation(line: 1911, column: 8, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 1911, column: 8)
!7803 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1910, column: 26)
!7804 = !DILocation(line: 1911, column: 14, scope: !7802)
!7805 = !DILocation(line: 1911, column: 22, scope: !7802)
!7806 = !DILocation(line: 1911, column: 8, scope: !7803)
!7807 = !DILocation(line: 1912, column: 8, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 1912, column: 8)
!7809 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1911, column: 49)
!7810 = !DILocation(line: 1912, column: 13, scope: !7808)
!7811 = !DILocation(line: 1912, column: 8, scope: !7809)
!7812 = !DILocation(line: 1913, column: 12, scope: !7808)
!7813 = !DILocation(line: 1913, column: 5, scope: !7808)
!7814 = !DILocation(line: 1914, column: 3, scope: !7809)
!7815 = !DILocation(line: 1916, column: 11, scope: !7802)
!7816 = !DILocation(line: 1917, column: 2, scope: !7803)
!7817 = !DILocation(line: 1919, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1919, column: 7)
!7819 = !DILocation(line: 1919, column: 19, scope: !7818)
!7820 = !DILocation(line: 1919, column: 7, scope: !7705)
!7821 = !DILocation(line: 1920, column: 14, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 1919, column: 31)
!7823 = !DILocation(line: 1920, column: 25, scope: !7822)
!7824 = !DILocation(line: 1920, column: 32, scope: !7822)
!7825 = !DILocation(line: 1920, column: 37, scope: !7822)
!7826 = !DILocation(line: 1920, column: 3, scope: !7822)
!7827 = !DILocation(line: 1921, column: 14, scope: !7822)
!7828 = !DILocation(line: 1921, column: 25, scope: !7822)
!7829 = !DILocation(line: 1921, column: 32, scope: !7822)
!7830 = !DILocation(line: 1921, column: 37, scope: !7822)
!7831 = !DILocation(line: 1921, column: 3, scope: !7822)
!7832 = !DILocation(line: 1922, column: 3, scope: !7822)
!7833 = !DILocation(line: 1922, column: 14, scope: !7822)
!7834 = !DILocation(line: 1922, column: 29, scope: !7822)
!7835 = !DILocation(line: 1923, column: 3, scope: !7822)
!7836 = !DILocation(line: 1923, column: 14, scope: !7822)
!7837 = !DILocation(line: 1923, column: 29, scope: !7822)
!7838 = !DILocation(line: 1925, column: 3, scope: !7822)
!7839 = !DILocation(line: 1925, column: 14, scope: !7822)
!7840 = !DILocation(line: 1925, column: 24, scope: !7822)
!7841 = !DILocation(line: 1926, column: 2, scope: !7822)
!7842 = !DILocation(line: 1929, column: 6, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1929, column: 6)
!7844 = !DILocation(line: 1929, column: 22, scope: !7843)
!7845 = !DILocation(line: 1929, column: 26, scope: !7843)
!7846 = !DILocation(line: 1929, column: 32, scope: !7843)
!7847 = !DILocation(line: 1929, column: 39, scope: !7843)
!7848 = !DILocation(line: 1929, column: 63, scope: !7843)
!7849 = !DILocation(line: 1929, column: 6, scope: !7705)
!7850 = !DILocalVariable(name: "ibuf", scope: !7851, file: !3, line: 1930, type: !3706)
!7851 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1929, column: 68)
!7852 = !DILocation(line: 1930, column: 10, scope: !7851)
!7853 = !DILocation(line: 1930, column: 45, scope: !7851)
!7854 = !DILocation(line: 1930, column: 50, scope: !7851)
!7855 = !DILocation(line: 1930, column: 56, scope: !7851)
!7856 = !DILocation(line: 1930, column: 61, scope: !7851)
!7857 = !DILocation(line: 1930, column: 68, scope: !7851)
!7858 = !DILocation(line: 1930, column: 17, scope: !7851)
!7859 = !DILocation(line: 1931, column: 7, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 1931, column: 7)
!7861 = !DILocation(line: 1931, column: 7, scope: !7851)
!7862 = !DILocation(line: 1932, column: 11, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 1931, column: 13)
!7864 = !DILocation(line: 1932, column: 17, scope: !7863)
!7865 = !DILocation(line: 1932, column: 9, scope: !7863)
!7866 = !DILocation(line: 1933, column: 11, scope: !7863)
!7867 = !DILocation(line: 1933, column: 17, scope: !7863)
!7868 = !DILocation(line: 1933, column: 9, scope: !7863)
!7869 = !DILocation(line: 1934, column: 22, scope: !7863)
!7870 = !DILocation(line: 1934, column: 14, scope: !7863)
!7871 = !DILocation(line: 1934, column: 30, scope: !7863)
!7872 = !DILocation(line: 1934, column: 28, scope: !7863)
!7873 = !DILocation(line: 1934, column: 11, scope: !7863)
!7874 = !DILocation(line: 1935, column: 3, scope: !7863)
!7875 = !DILocation(line: 1936, column: 31, scope: !7851)
!7876 = !DILocation(line: 1936, column: 36, scope: !7851)
!7877 = !DILocation(line: 1936, column: 41, scope: !7851)
!7878 = !DILocation(line: 1936, column: 47, scope: !7851)
!7879 = !DILocation(line: 1936, column: 3, scope: !7851)
!7880 = !DILocation(line: 1937, column: 2, scope: !7851)
!7881 = !DILocation(line: 1939, column: 6, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1939, column: 6)
!7883 = !DILocation(line: 1939, column: 6, scope: !7705)
!7884 = !DILocalVariable(name: "dBdu", scope: !7885, file: !3, line: 1940, type: !91)
!7885 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1939, column: 23)
!7886 = !DILocation(line: 1940, column: 9, scope: !7885)
!7887 = !DILocalVariable(name: "dBdv", scope: !7885, file: !3, line: 1940, type: !91)
!7888 = !DILocation(line: 1940, column: 15, scope: !7885)
!7889 = !DILocalVariable(name: "auto_bump", scope: !7885, file: !3, line: 1940, type: !91)
!7890 = !DILocation(line: 1940, column: 21, scope: !7885)
!7891 = !DILocalVariable(name: "s", scope: !7885, file: !3, line: 1941, type: !91)
!7892 = !DILocation(line: 1941, column: 9, scope: !7885)
!7893 = !DILocation(line: 1942, column: 17, scope: !7885)
!7894 = !DILocation(line: 1942, column: 22, scope: !7885)
!7895 = !DILocation(line: 1942, column: 27, scope: !7885)
!7896 = !DILocation(line: 1942, column: 33, scope: !7885)
!7897 = !DILocation(line: 1942, column: 37, scope: !7885)
!7898 = !DILocation(line: 1942, column: 41, scope: !7885)
!7899 = !DILocation(line: 1942, column: 45, scope: !7885)
!7900 = !DILocation(line: 1942, column: 53, scope: !7885)
!7901 = !DILocation(line: 1942, column: 58, scope: !7885)
!7902 = !DILocation(line: 1942, column: 3, scope: !7885)
!7903 = !DILocation(line: 1943, column: 26, scope: !7885)
!7904 = !DILocation(line: 1943, column: 31, scope: !7885)
!7905 = !DILocation(line: 1943, column: 37, scope: !7885)
!7906 = !DILocation(line: 1943, column: 45, scope: !7885)
!7907 = !DILocation(line: 1943, column: 50, scope: !7885)
!7908 = !DILocation(line: 1943, column: 55, scope: !7885)
!7909 = !DILocation(line: 1943, column: 63, scope: !7885)
!7910 = !DILocation(line: 1943, column: 12, scope: !7885)
!7911 = !DILocation(line: 1943, column: 10, scope: !7885)
!7912 = !DILocation(line: 1945, column: 7, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1945, column: 7)
!7914 = !DILocation(line: 1945, column: 12, scope: !7913)
!7915 = !DILocation(line: 1945, column: 17, scope: !7913)
!7916 = !DILocation(line: 1945, column: 21, scope: !7913)
!7917 = !DILocation(line: 1945, column: 7, scope: !7885)
!7918 = !DILocation(line: 1946, column: 16, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1945, column: 35)
!7920 = !DILocation(line: 1946, column: 21, scope: !7919)
!7921 = !DILocation(line: 1946, column: 26, scope: !7919)
!7922 = !DILocation(line: 1946, column: 30, scope: !7919)
!7923 = !DILocation(line: 1946, column: 44, scope: !7919)
!7924 = !DILocation(line: 1946, column: 14, scope: !7919)
!7925 = !DILocation(line: 1947, column: 3, scope: !7919)
!7926 = !DILocalVariable(name: "fVirtDim", scope: !7927, file: !3, line: 1950, type: !91)
!7927 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1949, column: 3)
!7928 = !DILocation(line: 1950, column: 10, scope: !7927)
!7929 = !DILocation(line: 1950, column: 42, scope: !7927)
!7930 = !DILocation(line: 1950, column: 47, scope: !7927)
!7931 = !DILocation(line: 1950, column: 46, scope: !7927)
!7932 = !DILocation(line: 1950, column: 33, scope: !7927)
!7933 = !DILocation(line: 1950, column: 53, scope: !7927)
!7934 = !DILocation(line: 1950, column: 59, scope: !7927)
!7935 = !DILocation(line: 1950, column: 52, scope: !7927)
!7936 = !DILocation(line: 1950, column: 67, scope: !7927)
!7937 = !DILocation(line: 1950, column: 73, scope: !7927)
!7938 = !DILocation(line: 1950, column: 66, scope: !7927)
!7939 = !DILocation(line: 1950, column: 27, scope: !7927)
!7940 = !DILocation(line: 1950, column: 21, scope: !7927)
!7941 = !DILocation(line: 1951, column: 17, scope: !7927)
!7942 = !DILocation(line: 1951, column: 14, scope: !7927)
!7943 = !DILocation(line: 1956, column: 10, scope: !7885)
!7944 = !DILocation(line: 1956, column: 20, scope: !7885)
!7945 = !DILocation(line: 1956, column: 19, scope: !7885)
!7946 = !DILocation(line: 1956, column: 27, scope: !7885)
!7947 = !DILocation(line: 1956, column: 26, scope: !7885)
!7948 = !DILocation(line: 1956, column: 35, scope: !7885)
!7949 = !DILocation(line: 1956, column: 43, scope: !7885)
!7950 = !DILocation(line: 1956, column: 34, scope: !7885)
!7951 = !DILocation(line: 1956, column: 45, scope: !7885)
!7952 = !DILocation(line: 1956, column: 31, scope: !7885)
!7953 = !DILocation(line: 1956, column: 8, scope: !7885)
!7954 = !DILocation(line: 1957, column: 10, scope: !7885)
!7955 = !DILocation(line: 1957, column: 20, scope: !7885)
!7956 = !DILocation(line: 1957, column: 19, scope: !7885)
!7957 = !DILocation(line: 1957, column: 27, scope: !7885)
!7958 = !DILocation(line: 1957, column: 26, scope: !7885)
!7959 = !DILocation(line: 1957, column: 35, scope: !7885)
!7960 = !DILocation(line: 1957, column: 43, scope: !7885)
!7961 = !DILocation(line: 1957, column: 34, scope: !7885)
!7962 = !DILocation(line: 1957, column: 45, scope: !7885)
!7963 = !DILocation(line: 1957, column: 31, scope: !7885)
!7964 = !DILocation(line: 1957, column: 8, scope: !7885)
!7965 = !DILocation(line: 1959, column: 10, scope: !7885)
!7966 = !DILocation(line: 1959, column: 15, scope: !7885)
!7967 = !DILocation(line: 1959, column: 14, scope: !7885)
!7968 = !DILocation(line: 1959, column: 24, scope: !7885)
!7969 = !DILocation(line: 1959, column: 28, scope: !7885)
!7970 = !DILocation(line: 1959, column: 26, scope: !7885)
!7971 = !DILocation(line: 1959, column: 33, scope: !7885)
!7972 = !DILocation(line: 1959, column: 32, scope: !7885)
!7973 = !DILocation(line: 1959, column: 22, scope: !7885)
!7974 = !DILocation(line: 1959, column: 8, scope: !7885)
!7975 = !DILocation(line: 1960, column: 10, scope: !7885)
!7976 = !DILocation(line: 1960, column: 15, scope: !7885)
!7977 = !DILocation(line: 1960, column: 14, scope: !7885)
!7978 = !DILocation(line: 1960, column: 24, scope: !7885)
!7979 = !DILocation(line: 1960, column: 28, scope: !7885)
!7980 = !DILocation(line: 1960, column: 26, scope: !7885)
!7981 = !DILocation(line: 1960, column: 33, scope: !7885)
!7982 = !DILocation(line: 1960, column: 32, scope: !7885)
!7983 = !DILocation(line: 1960, column: 22, scope: !7885)
!7984 = !DILocation(line: 1960, column: 8, scope: !7885)
!7985 = !DILocation(line: 1961, column: 2, scope: !7885)
!7986 = !DILocation(line: 1962, column: 13, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1962, column: 11)
!7988 = !DILocation(line: 1962, column: 19, scope: !7987)
!7989 = !DILocation(line: 1962, column: 27, scope: !7987)
!7990 = !DILocation(line: 1962, column: 11, scope: !7882)
!7991 = !DILocalVariable(name: "STll", scope: !7992, file: !3, line: 1964, type: !344)
!7992 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1962, column: 46)
!7993 = !DILocation(line: 1964, column: 9, scope: !7992)
!7994 = !DILocalVariable(name: "STlr", scope: !7992, file: !3, line: 1964, type: !344)
!7995 = !DILocation(line: 1964, column: 18, scope: !7992)
!7996 = !DILocalVariable(name: "STul", scope: !7992, file: !3, line: 1964, type: !344)
!7997 = !DILocation(line: 1964, column: 27, scope: !7992)
!7998 = !DILocalVariable(name: "Hll", scope: !7992, file: !3, line: 1965, type: !91)
!7999 = !DILocation(line: 1965, column: 9, scope: !7992)
!8000 = !DILocalVariable(name: "Hlr", scope: !7992, file: !3, line: 1965, type: !91)
!8001 = !DILocation(line: 1965, column: 14, scope: !7992)
!8002 = !DILocalVariable(name: "Hul", scope: !7992, file: !3, line: 1965, type: !91)
!8003 = !DILocation(line: 1965, column: 19, scope: !7992)
!8004 = !DILocation(line: 1967, column: 17, scope: !7992)
!8005 = !DILocation(line: 1967, column: 22, scope: !7992)
!8006 = !DILocation(line: 1967, column: 27, scope: !7992)
!8007 = !DILocation(line: 1967, column: 33, scope: !7992)
!8008 = !DILocation(line: 1967, column: 37, scope: !7992)
!8009 = !DILocation(line: 1967, column: 41, scope: !7992)
!8010 = !DILocation(line: 1967, column: 45, scope: !7992)
!8011 = !DILocation(line: 1967, column: 53, scope: !7992)
!8012 = !DILocation(line: 1967, column: 58, scope: !7992)
!8013 = !DILocation(line: 1967, column: 3, scope: !7992)
!8014 = !DILocation(line: 1969, column: 9, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1969, column: 3)
!8016 = !DILocation(line: 1969, column: 8, scope: !8015)
!8017 = !DILocation(line: 1969, column: 13, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 1969, column: 3)
!8019 = !DILocation(line: 1969, column: 15, scope: !8018)
!8020 = !DILocation(line: 1969, column: 14, scope: !8018)
!8021 = !DILocation(line: 1969, column: 3, scope: !8015)
!8022 = !DILocation(line: 1972, column: 14, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 1969, column: 33)
!8024 = !DILocation(line: 1972, column: 21, scope: !8023)
!8025 = !DILocation(line: 1972, column: 9, scope: !8023)
!8026 = !DILocation(line: 1972, column: 4, scope: !8023)
!8027 = !DILocation(line: 1972, column: 12, scope: !8023)
!8028 = !DILocation(line: 1973, column: 14, scope: !8023)
!8029 = !DILocation(line: 1973, column: 21, scope: !8023)
!8030 = !DILocation(line: 1973, column: 24, scope: !8023)
!8031 = !DILocation(line: 1973, column: 28, scope: !8023)
!8032 = !DILocation(line: 1973, column: 23, scope: !8023)
!8033 = !DILocation(line: 1973, column: 9, scope: !8023)
!8034 = !DILocation(line: 1973, column: 4, scope: !8023)
!8035 = !DILocation(line: 1973, column: 12, scope: !8023)
!8036 = !DILocation(line: 1974, column: 14, scope: !8023)
!8037 = !DILocation(line: 1974, column: 21, scope: !8023)
!8038 = !DILocation(line: 1974, column: 24, scope: !8023)
!8039 = !DILocation(line: 1974, column: 28, scope: !8023)
!8040 = !DILocation(line: 1974, column: 23, scope: !8023)
!8041 = !DILocation(line: 1974, column: 9, scope: !8023)
!8042 = !DILocation(line: 1974, column: 4, scope: !8023)
!8043 = !DILocation(line: 1974, column: 12, scope: !8023)
!8044 = !DILocation(line: 1975, column: 3, scope: !8023)
!8045 = !DILocation(line: 1969, column: 29, scope: !8018)
!8046 = !DILocation(line: 1969, column: 3, scope: !8018)
!8047 = distinct !{!8047, !8021, !8048}
!8048 = !DILocation(line: 1975, column: 3, scope: !8015)
!8049 = !DILocation(line: 1978, column: 10, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1978, column: 3)
!8051 = !DILocation(line: 1978, column: 9, scope: !8050)
!8052 = !DILocation(line: 1978, column: 8, scope: !8050)
!8053 = !DILocation(line: 1978, column: 23, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 1978, column: 3)
!8055 = !DILocation(line: 1978, column: 24, scope: !8054)
!8056 = !DILocation(line: 1978, column: 3, scope: !8050)
!8057 = !DILocation(line: 1979, column: 9, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 1978, column: 33)
!8059 = !DILocation(line: 1979, column: 4, scope: !8058)
!8060 = !DILocation(line: 1979, column: 12, scope: !8058)
!8061 = !DILocation(line: 1980, column: 9, scope: !8058)
!8062 = !DILocation(line: 1980, column: 4, scope: !8058)
!8063 = !DILocation(line: 1980, column: 12, scope: !8058)
!8064 = !DILocation(line: 1981, column: 9, scope: !8058)
!8065 = !DILocation(line: 1981, column: 4, scope: !8058)
!8066 = !DILocation(line: 1981, column: 12, scope: !8058)
!8067 = !DILocation(line: 1982, column: 3, scope: !8058)
!8068 = !DILocation(line: 1978, column: 29, scope: !8054)
!8069 = !DILocation(line: 1978, column: 3, scope: !8054)
!8070 = distinct !{!8070, !8056, !8071}
!8071 = !DILocation(line: 1982, column: 3, scope: !8050)
!8072 = !DILocation(line: 1985, column: 26, scope: !7992)
!8073 = !DILocation(line: 1985, column: 31, scope: !7992)
!8074 = !DILocation(line: 1985, column: 37, scope: !7992)
!8075 = !DILocation(line: 1985, column: 43, scope: !7992)
!8076 = !DILocation(line: 1985, column: 48, scope: !7992)
!8077 = !DILocation(line: 1985, column: 53, scope: !7992)
!8078 = !DILocation(line: 1985, column: 61, scope: !7992)
!8079 = !DILocation(line: 1985, column: 12, scope: !7992)
!8080 = !DILocation(line: 1985, column: 10, scope: !7992)
!8081 = !DILocation(line: 1986, column: 10, scope: !7992)
!8082 = !DILocation(line: 1986, column: 9, scope: !7992)
!8083 = !DILocation(line: 1986, column: 39, scope: !7992)
!8084 = !DILocation(line: 1986, column: 47, scope: !7992)
!8085 = !DILocation(line: 1986, column: 21, scope: !7992)
!8086 = !DILocation(line: 1986, column: 53, scope: !7992)
!8087 = !DILocation(line: 1986, column: 61, scope: !7992)
!8088 = !DILocation(line: 1986, column: 7, scope: !7992)
!8089 = !DILocation(line: 1989, column: 17, scope: !7992)
!8090 = !DILocation(line: 1989, column: 22, scope: !7992)
!8091 = !DILocation(line: 1989, column: 28, scope: !7992)
!8092 = !DILocation(line: 1989, column: 34, scope: !7992)
!8093 = !DILocation(line: 1989, column: 39, scope: !7992)
!8094 = !DILocation(line: 1989, column: 52, scope: !7992)
!8095 = !DILocation(line: 1989, column: 3, scope: !7992)
!8096 = !DILocation(line: 1990, column: 10, scope: !7992)
!8097 = !DILocation(line: 1990, column: 9, scope: !7992)
!8098 = !DILocation(line: 1990, column: 45, scope: !7992)
!8099 = !DILocation(line: 1990, column: 21, scope: !7992)
!8100 = !DILocation(line: 1990, column: 57, scope: !7992)
!8101 = !DILocation(line: 1990, column: 7, scope: !7992)
!8102 = !DILocation(line: 1992, column: 17, scope: !7992)
!8103 = !DILocation(line: 1992, column: 22, scope: !7992)
!8104 = !DILocation(line: 1992, column: 28, scope: !7992)
!8105 = !DILocation(line: 1992, column: 34, scope: !7992)
!8106 = !DILocation(line: 1992, column: 39, scope: !7992)
!8107 = !DILocation(line: 1992, column: 52, scope: !7992)
!8108 = !DILocation(line: 1992, column: 3, scope: !7992)
!8109 = !DILocation(line: 1993, column: 10, scope: !7992)
!8110 = !DILocation(line: 1993, column: 9, scope: !7992)
!8111 = !DILocation(line: 1993, column: 45, scope: !7992)
!8112 = !DILocation(line: 1993, column: 21, scope: !7992)
!8113 = !DILocation(line: 1993, column: 57, scope: !7992)
!8114 = !DILocation(line: 1993, column: 7, scope: !7992)
!8115 = !DILocation(line: 1995, column: 10, scope: !7992)
!8116 = !DILocation(line: 1995, column: 18, scope: !7992)
!8117 = !DILocation(line: 1995, column: 24, scope: !7992)
!8118 = !DILocation(line: 1995, column: 22, scope: !7992)
!8119 = !DILocation(line: 1995, column: 16, scope: !7992)
!8120 = !DILocation(line: 1995, column: 8, scope: !7992)
!8121 = !DILocation(line: 1996, column: 10, scope: !7992)
!8122 = !DILocation(line: 1996, column: 18, scope: !7992)
!8123 = !DILocation(line: 1996, column: 24, scope: !7992)
!8124 = !DILocation(line: 1996, column: 22, scope: !7992)
!8125 = !DILocation(line: 1996, column: 16, scope: !7992)
!8126 = !DILocation(line: 1996, column: 8, scope: !7992)
!8127 = !DILocation(line: 1997, column: 2, scope: !7992)
!8128 = !DILocalVariable(name: "STc", scope: !8129, file: !3, line: 2000, type: !344)
!8129 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1998, column: 7)
!8130 = !DILocation(line: 2000, column: 9, scope: !8129)
!8131 = !DILocalVariable(name: "STl", scope: !8129, file: !3, line: 2000, type: !344)
!8132 = !DILocation(line: 2000, column: 17, scope: !8129)
!8133 = !DILocalVariable(name: "STr", scope: !8129, file: !3, line: 2000, type: !344)
!8134 = !DILocation(line: 2000, column: 25, scope: !8129)
!8135 = !DILocalVariable(name: "STd", scope: !8129, file: !3, line: 2000, type: !344)
!8136 = !DILocation(line: 2000, column: 33, scope: !8129)
!8137 = !DILocalVariable(name: "STu", scope: !8129, file: !3, line: 2000, type: !344)
!8138 = !DILocation(line: 2000, column: 41, scope: !8129)
!8139 = !DILocalVariable(name: "Hl", scope: !8129, file: !3, line: 2001, type: !91)
!8140 = !DILocation(line: 2001, column: 33, scope: !8129)
!8141 = !DILocalVariable(name: "Hr", scope: !8129, file: !3, line: 2001, type: !91)
!8142 = !DILocation(line: 2001, column: 37, scope: !8129)
!8143 = !DILocalVariable(name: "Hd", scope: !8129, file: !3, line: 2001, type: !91)
!8144 = !DILocation(line: 2001, column: 41, scope: !8129)
!8145 = !DILocalVariable(name: "Hu", scope: !8129, file: !3, line: 2001, type: !91)
!8146 = !DILocation(line: 2001, column: 45, scope: !8129)
!8147 = !DILocation(line: 2003, column: 17, scope: !8129)
!8148 = !DILocation(line: 2003, column: 22, scope: !8129)
!8149 = !DILocation(line: 2003, column: 27, scope: !8129)
!8150 = !DILocation(line: 2003, column: 33, scope: !8129)
!8151 = !DILocation(line: 2003, column: 37, scope: !8129)
!8152 = !DILocation(line: 2003, column: 41, scope: !8129)
!8153 = !DILocation(line: 2003, column: 45, scope: !8129)
!8154 = !DILocation(line: 2003, column: 53, scope: !8129)
!8155 = !DILocation(line: 2003, column: 58, scope: !8129)
!8156 = !DILocation(line: 2003, column: 3, scope: !8129)
!8157 = !DILocation(line: 2005, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2005, column: 3)
!8159 = !DILocation(line: 2005, column: 8, scope: !8158)
!8160 = !DILocation(line: 2005, column: 13, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2005, column: 3)
!8162 = !DILocation(line: 2005, column: 15, scope: !8161)
!8163 = !DILocation(line: 2005, column: 14, scope: !8161)
!8164 = !DILocation(line: 2005, column: 3, scope: !8158)
!8165 = !DILocation(line: 2006, column: 13, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 2005, column: 33)
!8167 = !DILocation(line: 2006, column: 20, scope: !8166)
!8168 = !DILocation(line: 2006, column: 8, scope: !8166)
!8169 = !DILocation(line: 2006, column: 4, scope: !8166)
!8170 = !DILocation(line: 2006, column: 11, scope: !8166)
!8171 = !DILocation(line: 2007, column: 13, scope: !8166)
!8172 = !DILocation(line: 2007, column: 20, scope: !8166)
!8173 = !DILocation(line: 2007, column: 30, scope: !8166)
!8174 = !DILocation(line: 2007, column: 34, scope: !8166)
!8175 = !DILocation(line: 2007, column: 29, scope: !8166)
!8176 = !DILocation(line: 2007, column: 23, scope: !8166)
!8177 = !DILocation(line: 2007, column: 8, scope: !8166)
!8178 = !DILocation(line: 2007, column: 4, scope: !8166)
!8179 = !DILocation(line: 2007, column: 11, scope: !8166)
!8180 = !DILocation(line: 2008, column: 13, scope: !8166)
!8181 = !DILocation(line: 2008, column: 20, scope: !8166)
!8182 = !DILocation(line: 2008, column: 30, scope: !8166)
!8183 = !DILocation(line: 2008, column: 34, scope: !8166)
!8184 = !DILocation(line: 2008, column: 29, scope: !8166)
!8185 = !DILocation(line: 2008, column: 23, scope: !8166)
!8186 = !DILocation(line: 2008, column: 8, scope: !8166)
!8187 = !DILocation(line: 2008, column: 4, scope: !8166)
!8188 = !DILocation(line: 2008, column: 11, scope: !8166)
!8189 = !DILocation(line: 2009, column: 13, scope: !8166)
!8190 = !DILocation(line: 2009, column: 20, scope: !8166)
!8191 = !DILocation(line: 2009, column: 30, scope: !8166)
!8192 = !DILocation(line: 2009, column: 34, scope: !8166)
!8193 = !DILocation(line: 2009, column: 29, scope: !8166)
!8194 = !DILocation(line: 2009, column: 23, scope: !8166)
!8195 = !DILocation(line: 2009, column: 8, scope: !8166)
!8196 = !DILocation(line: 2009, column: 4, scope: !8166)
!8197 = !DILocation(line: 2009, column: 11, scope: !8166)
!8198 = !DILocation(line: 2010, column: 13, scope: !8166)
!8199 = !DILocation(line: 2010, column: 20, scope: !8166)
!8200 = !DILocation(line: 2010, column: 30, scope: !8166)
!8201 = !DILocation(line: 2010, column: 34, scope: !8166)
!8202 = !DILocation(line: 2010, column: 29, scope: !8166)
!8203 = !DILocation(line: 2010, column: 23, scope: !8166)
!8204 = !DILocation(line: 2010, column: 8, scope: !8166)
!8205 = !DILocation(line: 2010, column: 4, scope: !8166)
!8206 = !DILocation(line: 2010, column: 11, scope: !8166)
!8207 = !DILocation(line: 2011, column: 3, scope: !8166)
!8208 = !DILocation(line: 2005, column: 29, scope: !8161)
!8209 = !DILocation(line: 2005, column: 3, scope: !8161)
!8210 = distinct !{!8210, !8164, !8211}
!8211 = !DILocation(line: 2011, column: 3, scope: !8158)
!8212 = !DILocation(line: 2014, column: 10, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2014, column: 3)
!8214 = !DILocation(line: 2014, column: 9, scope: !8213)
!8215 = !DILocation(line: 2014, column: 8, scope: !8213)
!8216 = !DILocation(line: 2014, column: 23, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2014, column: 3)
!8218 = !DILocation(line: 2014, column: 24, scope: !8217)
!8219 = !DILocation(line: 2014, column: 3, scope: !8213)
!8220 = !DILocation(line: 2015, column: 8, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2014, column: 33)
!8222 = !DILocation(line: 2015, column: 4, scope: !8221)
!8223 = !DILocation(line: 2015, column: 11, scope: !8221)
!8224 = !DILocation(line: 2016, column: 8, scope: !8221)
!8225 = !DILocation(line: 2016, column: 4, scope: !8221)
!8226 = !DILocation(line: 2016, column: 11, scope: !8221)
!8227 = !DILocation(line: 2017, column: 8, scope: !8221)
!8228 = !DILocation(line: 2017, column: 4, scope: !8221)
!8229 = !DILocation(line: 2017, column: 11, scope: !8221)
!8230 = !DILocation(line: 2018, column: 8, scope: !8221)
!8231 = !DILocation(line: 2018, column: 4, scope: !8221)
!8232 = !DILocation(line: 2018, column: 11, scope: !8221)
!8233 = !DILocation(line: 2019, column: 8, scope: !8221)
!8234 = !DILocation(line: 2019, column: 4, scope: !8221)
!8235 = !DILocation(line: 2019, column: 11, scope: !8221)
!8236 = !DILocation(line: 2020, column: 3, scope: !8221)
!8237 = !DILocation(line: 2014, column: 29, scope: !8217)
!8238 = !DILocation(line: 2014, column: 3, scope: !8217)
!8239 = distinct !{!8239, !8219, !8240}
!8240 = !DILocation(line: 2020, column: 3, scope: !8213)
!8241 = !DILocation(line: 2023, column: 26, scope: !8129)
!8242 = !DILocation(line: 2023, column: 31, scope: !8129)
!8243 = !DILocation(line: 2023, column: 37, scope: !8129)
!8244 = !DILocation(line: 2023, column: 42, scope: !8129)
!8245 = !DILocation(line: 2023, column: 47, scope: !8129)
!8246 = !DILocation(line: 2023, column: 52, scope: !8129)
!8247 = !DILocation(line: 2023, column: 60, scope: !8129)
!8248 = !DILocation(line: 2023, column: 12, scope: !8129)
!8249 = !DILocation(line: 2023, column: 10, scope: !8129)
!8250 = !DILocation(line: 2027, column: 17, scope: !8129)
!8251 = !DILocation(line: 2027, column: 22, scope: !8129)
!8252 = !DILocation(line: 2027, column: 28, scope: !8129)
!8253 = !DILocation(line: 2027, column: 33, scope: !8129)
!8254 = !DILocation(line: 2027, column: 38, scope: !8129)
!8255 = !DILocation(line: 2027, column: 51, scope: !8129)
!8256 = !DILocation(line: 2027, column: 3, scope: !8129)
!8257 = !DILocation(line: 2028, column: 9, scope: !8129)
!8258 = !DILocation(line: 2028, column: 8, scope: !8129)
!8259 = !DILocation(line: 2028, column: 44, scope: !8129)
!8260 = !DILocation(line: 2028, column: 20, scope: !8129)
!8261 = !DILocation(line: 2028, column: 56, scope: !8129)
!8262 = !DILocation(line: 2028, column: 6, scope: !8129)
!8263 = !DILocation(line: 2029, column: 17, scope: !8129)
!8264 = !DILocation(line: 2029, column: 22, scope: !8129)
!8265 = !DILocation(line: 2029, column: 28, scope: !8129)
!8266 = !DILocation(line: 2029, column: 33, scope: !8129)
!8267 = !DILocation(line: 2029, column: 38, scope: !8129)
!8268 = !DILocation(line: 2029, column: 51, scope: !8129)
!8269 = !DILocation(line: 2029, column: 3, scope: !8129)
!8270 = !DILocation(line: 2030, column: 9, scope: !8129)
!8271 = !DILocation(line: 2030, column: 8, scope: !8129)
!8272 = !DILocation(line: 2030, column: 44, scope: !8129)
!8273 = !DILocation(line: 2030, column: 20, scope: !8129)
!8274 = !DILocation(line: 2030, column: 56, scope: !8129)
!8275 = !DILocation(line: 2030, column: 6, scope: !8129)
!8276 = !DILocation(line: 2031, column: 17, scope: !8129)
!8277 = !DILocation(line: 2031, column: 22, scope: !8129)
!8278 = !DILocation(line: 2031, column: 28, scope: !8129)
!8279 = !DILocation(line: 2031, column: 33, scope: !8129)
!8280 = !DILocation(line: 2031, column: 38, scope: !8129)
!8281 = !DILocation(line: 2031, column: 51, scope: !8129)
!8282 = !DILocation(line: 2031, column: 3, scope: !8129)
!8283 = !DILocation(line: 2032, column: 9, scope: !8129)
!8284 = !DILocation(line: 2032, column: 8, scope: !8129)
!8285 = !DILocation(line: 2032, column: 44, scope: !8129)
!8286 = !DILocation(line: 2032, column: 20, scope: !8129)
!8287 = !DILocation(line: 2032, column: 56, scope: !8129)
!8288 = !DILocation(line: 2032, column: 6, scope: !8129)
!8289 = !DILocation(line: 2033, column: 17, scope: !8129)
!8290 = !DILocation(line: 2033, column: 22, scope: !8129)
!8291 = !DILocation(line: 2033, column: 28, scope: !8129)
!8292 = !DILocation(line: 2033, column: 33, scope: !8129)
!8293 = !DILocation(line: 2033, column: 38, scope: !8129)
!8294 = !DILocation(line: 2033, column: 51, scope: !8129)
!8295 = !DILocation(line: 2033, column: 3, scope: !8129)
!8296 = !DILocation(line: 2034, column: 9, scope: !8129)
!8297 = !DILocation(line: 2034, column: 8, scope: !8129)
!8298 = !DILocation(line: 2034, column: 44, scope: !8129)
!8299 = !DILocation(line: 2034, column: 20, scope: !8129)
!8300 = !DILocation(line: 2034, column: 56, scope: !8129)
!8301 = !DILocation(line: 2034, column: 6, scope: !8129)
!8302 = !DILocation(line: 2036, column: 10, scope: !8129)
!8303 = !DILocation(line: 2036, column: 18, scope: !8129)
!8304 = !DILocation(line: 2036, column: 23, scope: !8129)
!8305 = !DILocation(line: 2036, column: 21, scope: !8129)
!8306 = !DILocation(line: 2036, column: 16, scope: !8129)
!8307 = !DILocation(line: 2036, column: 8, scope: !8129)
!8308 = !DILocation(line: 2037, column: 10, scope: !8129)
!8309 = !DILocation(line: 2037, column: 18, scope: !8129)
!8310 = !DILocation(line: 2037, column: 23, scope: !8129)
!8311 = !DILocation(line: 2037, column: 21, scope: !8129)
!8312 = !DILocation(line: 2037, column: 16, scope: !8129)
!8313 = !DILocation(line: 2037, column: 8, scope: !8129)
!8314 = !DILocation(line: 2041, column: 16, scope: !7705)
!8315 = !DILocation(line: 2041, column: 2, scope: !7705)
!8316 = !DILocation(line: 2041, column: 10, scope: !7705)
!8317 = !DILocation(line: 2041, column: 14, scope: !7705)
!8318 = !DILocation(line: 2047, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2047, column: 7)
!8320 = !DILocation(line: 2047, column: 13, scope: !8319)
!8321 = !DILocation(line: 2047, column: 21, scope: !8319)
!8322 = !DILocation(line: 2047, column: 7, scope: !7705)
!8323 = !DILocation(line: 2048, column: 14, scope: !8319)
!8324 = !DILocation(line: 2048, column: 3, scope: !8319)
!8325 = !DILocation(line: 2049, column: 12, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 2049, column: 12)
!8327 = !DILocation(line: 2049, column: 18, scope: !8326)
!8328 = !DILocation(line: 2049, column: 26, scope: !8326)
!8329 = !DILocation(line: 2049, column: 12, scope: !8319)
!8330 = !DILocation(line: 2050, column: 14, scope: !8326)
!8331 = !DILocation(line: 2050, column: 3, scope: !8326)
!8332 = !DILocation(line: 2052, column: 14, scope: !8326)
!8333 = !DILocation(line: 2054, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2054, column: 7)
!8335 = !DILocation(line: 2054, column: 18, scope: !8334)
!8336 = !DILocation(line: 2054, column: 36, scope: !8334)
!8337 = !DILocation(line: 2054, column: 33, scope: !8334)
!8338 = !DILocation(line: 2054, column: 7, scope: !7705)
!8339 = !DILocalVariable(name: "xyz", scope: !8340, file: !3, line: 2057, type: !92)
!8340 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2054, column: 49)
!8341 = !DILocation(line: 2057, column: 7, scope: !8340)
!8342 = !DILocalVariable(name: "fDet", scope: !8340, file: !3, line: 2058, type: !91)
!8343 = !DILocation(line: 2058, column: 9, scope: !8340)
!8344 = !DILocalVariable(name: "abs_fDet", scope: !8340, file: !3, line: 2058, type: !91)
!8345 = !DILocation(line: 2058, column: 15, scope: !8340)
!8346 = !DILocalVariable(name: "fMagnitude", scope: !8340, file: !3, line: 2058, type: !91)
!8347 = !DILocation(line: 2058, column: 25, scope: !8340)
!8348 = !DILocalVariable(name: "obj2view", scope: !8340, file: !3, line: 2060, type: !2490)
!8349 = !DILocation(line: 2060, column: 9, scope: !8340)
!8350 = !DILocalVariable(name: "view2obj", scope: !8340, file: !3, line: 2060, type: !2490)
!8351 = !DILocation(line: 2060, column: 25, scope: !8340)
!8352 = !DILocalVariable(name: "tmp", scope: !8340, file: !3, line: 2060, type: !603)
!8353 = !DILocation(line: 2060, column: 41, scope: !8340)
!8354 = !DILocalVariable(name: "dPdx", scope: !8340, file: !3, line: 2062, type: !344)
!8355 = !DILocation(line: 2062, column: 9, scope: !8340)
!8356 = !DILocalVariable(name: "dPdy", scope: !8340, file: !3, line: 2062, type: !344)
!8357 = !DILocation(line: 2062, column: 18, scope: !8340)
!8358 = !DILocalVariable(name: "vN", scope: !8340, file: !3, line: 2062, type: !344)
!8359 = !DILocation(line: 2062, column: 27, scope: !8340)
!8360 = !DILocation(line: 2063, column: 14, scope: !8340)
!8361 = !DILocation(line: 2063, column: 20, scope: !8340)
!8362 = !DILocation(line: 2063, column: 25, scope: !8340)
!8363 = !DILocation(line: 2063, column: 3, scope: !8340)
!8364 = !DILocation(line: 2064, column: 14, scope: !8340)
!8365 = !DILocation(line: 2064, column: 20, scope: !8340)
!8366 = !DILocation(line: 2064, column: 25, scope: !8340)
!8367 = !DILocation(line: 2064, column: 3, scope: !8340)
!8368 = !DILocation(line: 2065, column: 14, scope: !8340)
!8369 = !DILocation(line: 2065, column: 18, scope: !8340)
!8370 = !DILocation(line: 2065, column: 29, scope: !8340)
!8371 = !DILocation(line: 2065, column: 3, scope: !8340)
!8372 = !DILocation(line: 2067, column: 8, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2067, column: 8)
!8374 = !DILocation(line: 2067, column: 14, scope: !8373)
!8375 = !DILocation(line: 2067, column: 22, scope: !8373)
!8376 = !DILocation(line: 2067, column: 8, scope: !8340)
!8377 = !DILocation(line: 2070, column: 16, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 2067, column: 48)
!8379 = !DILocation(line: 2070, column: 32, scope: !8378)
!8380 = !DILocation(line: 2070, column: 37, scope: !8378)
!8381 = !DILocation(line: 2070, column: 42, scope: !8378)
!8382 = !DILocation(line: 2070, column: 46, scope: !8378)
!8383 = !DILocation(line: 2070, column: 4, scope: !8378)
!8384 = !DILocation(line: 2071, column: 15, scope: !8378)
!8385 = !DILocation(line: 2071, column: 25, scope: !8378)
!8386 = !DILocation(line: 2071, column: 4, scope: !8378)
!8387 = !DILocation(line: 2072, column: 17, scope: !8378)
!8388 = !DILocation(line: 2072, column: 27, scope: !8378)
!8389 = !DILocation(line: 2072, column: 4, scope: !8378)
!8390 = !DILocation(line: 2075, column: 14, scope: !8378)
!8391 = !DILocation(line: 2075, column: 24, scope: !8378)
!8392 = !DILocation(line: 2075, column: 4, scope: !8378)
!8393 = !DILocation(line: 2076, column: 14, scope: !8378)
!8394 = !DILocation(line: 2076, column: 24, scope: !8378)
!8395 = !DILocation(line: 2076, column: 4, scope: !8378)
!8396 = !DILocation(line: 2078, column: 25, scope: !8378)
!8397 = !DILocation(line: 2078, column: 35, scope: !8378)
!8398 = !DILocation(line: 2078, column: 4, scope: !8378)
!8399 = !DILocation(line: 2079, column: 17, scope: !8378)
!8400 = !DILocation(line: 2079, column: 4, scope: !8378)
!8401 = !DILocation(line: 2080, column: 3, scope: !8378)
!8402 = !DILocation(line: 2082, column: 17, scope: !8340)
!8403 = !DILocation(line: 2082, column: 28, scope: !8340)
!8404 = !DILocation(line: 2082, column: 33, scope: !8340)
!8405 = !DILocation(line: 2082, column: 39, scope: !8340)
!8406 = !DILocation(line: 2082, column: 3, scope: !8340)
!8407 = !DILocation(line: 2083, column: 17, scope: !8340)
!8408 = !DILocation(line: 2083, column: 28, scope: !8340)
!8409 = !DILocation(line: 2083, column: 33, scope: !8340)
!8410 = !DILocation(line: 2083, column: 37, scope: !8340)
!8411 = !DILocation(line: 2083, column: 3, scope: !8340)
!8412 = !DILocation(line: 2084, column: 19, scope: !8340)
!8413 = !DILocation(line: 2084, column: 25, scope: !8340)
!8414 = !DILocation(line: 2084, column: 36, scope: !8340)
!8415 = !DILocation(line: 2084, column: 10, scope: !8340)
!8416 = !DILocation(line: 2084, column: 8, scope: !8340)
!8417 = !DILocation(line: 2085, column: 25, scope: !8340)
!8418 = !DILocation(line: 2085, column: 30, scope: !8340)
!8419 = !DILocation(line: 2085, column: 24, scope: !8340)
!8420 = !DILocation(line: 2085, column: 3, scope: !8340)
!8421 = !DILocation(line: 2085, column: 14, scope: !8340)
!8422 = !DILocation(line: 2085, column: 22, scope: !8340)
!8423 = !DILocation(line: 2086, column: 14, scope: !8340)
!8424 = !DILocation(line: 2086, column: 25, scope: !8340)
!8425 = !DILocation(line: 2086, column: 35, scope: !8340)
!8426 = !DILocation(line: 2086, column: 33, scope: !8340)
!8427 = !DILocation(line: 2086, column: 12, scope: !8340)
!8428 = !DILocation(line: 2088, column: 8, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2088, column: 8)
!8430 = !DILocation(line: 2088, column: 14, scope: !8429)
!8431 = !DILocation(line: 2088, column: 22, scope: !8429)
!8432 = !DILocation(line: 2088, column: 8, scope: !8340)
!8433 = !DILocation(line: 2089, column: 8, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2089, column: 8)
!8435 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2088, column: 49)
!8436 = !DILocation(line: 2089, column: 13, scope: !8434)
!8437 = !DILocation(line: 2089, column: 8, scope: !8435)
!8438 = !DILocation(line: 2091, column: 18, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 2089, column: 18)
!8440 = !DILocation(line: 2091, column: 29, scope: !8439)
!8441 = !DILocation(line: 2091, column: 5, scope: !8439)
!8442 = !DILocation(line: 2092, column: 18, scope: !8439)
!8443 = !DILocation(line: 2092, column: 29, scope: !8439)
!8444 = !DILocation(line: 2092, column: 5, scope: !8439)
!8445 = !DILocation(line: 2093, column: 14, scope: !8439)
!8446 = !DILocation(line: 2094, column: 4, scope: !8439)
!8447 = !DILocation(line: 2095, column: 3, scope: !8435)
!8448 = !DILocation(line: 2097, column: 16, scope: !8340)
!8449 = !DILocation(line: 2097, column: 14, scope: !8340)
!8450 = !DILocation(line: 2098, column: 8, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2098, column: 8)
!8452 = !DILocation(line: 2098, column: 14, scope: !8451)
!8453 = !DILocation(line: 2098, column: 22, scope: !8451)
!8454 = !DILocation(line: 2098, column: 8, scope: !8340)
!8455 = !DILocation(line: 2100, column: 25, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 2098, column: 48)
!8457 = !DILocation(line: 2100, column: 35, scope: !8456)
!8458 = !DILocation(line: 2100, column: 4, scope: !8456)
!8459 = !DILocation(line: 2101, column: 25, scope: !8456)
!8460 = !DILocation(line: 2101, column: 35, scope: !8456)
!8461 = !DILocation(line: 2101, column: 46, scope: !8456)
!8462 = !DILocation(line: 2101, column: 4, scope: !8456)
!8463 = !DILocation(line: 2102, column: 25, scope: !8456)
!8464 = !DILocation(line: 2102, column: 35, scope: !8456)
!8465 = !DILocation(line: 2102, column: 46, scope: !8456)
!8466 = !DILocation(line: 2102, column: 4, scope: !8456)
!8467 = !DILocation(line: 2104, column: 25, scope: !8456)
!8468 = !DILocation(line: 2104, column: 18, scope: !8456)
!8469 = !DILocation(line: 2104, column: 15, scope: !8456)
!8470 = !DILocation(line: 2105, column: 3, scope: !8456)
!8471 = !DILocation(line: 2107, column: 7, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2107, column: 7)
!8473 = !DILocation(line: 2107, column: 18, scope: !8472)
!8474 = !DILocation(line: 2107, column: 33, scope: !8472)
!8475 = !DILocation(line: 2107, column: 7, scope: !8340)
!8476 = !DILocation(line: 2108, column: 12, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2108, column: 4)
!8478 = !DILocation(line: 2108, column: 9, scope: !8477)
!8479 = !DILocation(line: 2108, column: 16, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2108, column: 4)
!8481 = !DILocation(line: 2108, column: 19, scope: !8480)
!8482 = !DILocation(line: 2108, column: 4, scope: !8477)
!8483 = !DILocation(line: 2109, column: 30, scope: !8480)
!8484 = !DILocation(line: 2109, column: 43, scope: !8480)
!8485 = !DILocation(line: 2109, column: 54, scope: !8480)
!8486 = !DILocation(line: 2109, column: 41, scope: !8480)
!8487 = !DILocation(line: 2109, column: 5, scope: !8480)
!8488 = !DILocation(line: 2109, column: 16, scope: !8480)
!8489 = !DILocation(line: 2109, column: 22, scope: !8480)
!8490 = !DILocation(line: 2109, column: 27, scope: !8480)
!8491 = !DILocation(line: 2108, column: 26, scope: !8480)
!8492 = !DILocation(line: 2108, column: 4, scope: !8480)
!8493 = distinct !{!8493, !8482, !8494}
!8494 = !DILocation(line: 2109, column: 54, scope: !8477)
!8495 = !DILocation(line: 2111, column: 31, scope: !8340)
!8496 = !DILocation(line: 2111, column: 3, scope: !8340)
!8497 = !DILocation(line: 2111, column: 14, scope: !8340)
!8498 = !DILocation(line: 2111, column: 29, scope: !8340)
!8499 = !DILocation(line: 2112, column: 31, scope: !8340)
!8500 = !DILocation(line: 2112, column: 3, scope: !8340)
!8501 = !DILocation(line: 2112, column: 14, scope: !8340)
!8502 = !DILocation(line: 2112, column: 29, scope: !8340)
!8503 = !DILocation(line: 2113, column: 2, scope: !8340)
!8504 = !DILocation(line: 2115, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2115, column: 7)
!8506 = !DILocation(line: 2115, column: 13, scope: !8505)
!8507 = !DILocation(line: 2115, column: 21, scope: !8505)
!8508 = !DILocation(line: 2115, column: 7, scope: !7705)
!8509 = !DILocation(line: 2116, column: 7, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 2116, column: 7)
!8511 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 2115, column: 48)
!8512 = !DILocation(line: 2116, column: 12, scope: !8510)
!8513 = !DILocation(line: 2116, column: 7, scope: !8511)
!8514 = !DILocalVariable(name: "vec", scope: !8515, file: !3, line: 2118, type: !1101)
!8515 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 2116, column: 17)
!8516 = !DILocation(line: 2118, column: 10, scope: !8515)
!8517 = !DILocalVariable(name: "imag_tspace_dimension_y", scope: !8515, file: !3, line: 2119, type: !765)
!8518 = !DILocation(line: 2119, column: 16, scope: !8515)
!8519 = !DILocation(line: 2119, column: 42, scope: !8515)
!8520 = !DILocation(line: 2119, column: 48, scope: !8515)
!8521 = !DILocation(line: 2121, column: 37, scope: !8515)
!8522 = !DILocation(line: 2121, column: 36, scope: !8515)
!8523 = !DILocation(line: 2121, column: 4, scope: !8515)
!8524 = !DILocation(line: 2121, column: 11, scope: !8515)
!8525 = !DILocation(line: 2122, column: 13, scope: !8515)
!8526 = !DILocation(line: 2122, column: 37, scope: !8515)
!8527 = !DILocation(line: 2122, column: 36, scope: !8515)
!8528 = !DILocation(line: 2122, column: 4, scope: !8515)
!8529 = !DILocation(line: 2122, column: 11, scope: !8515)
!8530 = !DILocation(line: 2123, column: 24, scope: !8515)
!8531 = !DILocation(line: 2123, column: 17, scope: !8515)
!8532 = !DILocation(line: 2123, column: 16, scope: !8515)
!8533 = !DILocation(line: 2123, column: 9, scope: !8515)
!8534 = !DILocation(line: 2124, column: 37, scope: !8515)
!8535 = !DILocation(line: 2124, column: 36, scope: !8515)
!8536 = !DILocation(line: 2124, column: 4, scope: !8515)
!8537 = !DILocation(line: 2124, column: 11, scope: !8515)
!8538 = !DILocation(line: 2125, column: 13, scope: !8515)
!8539 = !DILocation(line: 2125, column: 37, scope: !8515)
!8540 = !DILocation(line: 2125, column: 36, scope: !8515)
!8541 = !DILocation(line: 2125, column: 4, scope: !8515)
!8542 = !DILocation(line: 2125, column: 11, scope: !8515)
!8543 = !DILocation(line: 2126, column: 24, scope: !8515)
!8544 = !DILocation(line: 2126, column: 17, scope: !8515)
!8545 = !DILocation(line: 2126, column: 16, scope: !8515)
!8546 = !DILocation(line: 2126, column: 9, scope: !8515)
!8547 = !DILocation(line: 2127, column: 3, scope: !8515)
!8548 = !DILocation(line: 2128, column: 2, scope: !8511)
!8549 = !DILocation(line: 2131, column: 8, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2131, column: 2)
!8551 = !DILocation(line: 2131, column: 7, scope: !8550)
!8552 = !DILocation(line: 2131, column: 12, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2131, column: 2)
!8554 = !DILocation(line: 2131, column: 13, scope: !8553)
!8555 = !DILocation(line: 2131, column: 2, scope: !8550)
!8556 = !DILocalVariable(name: "vSurfGrad_compi", scope: !8557, file: !3, line: 2132, type: !91)
!8557 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 2131, column: 22)
!8558 = !DILocation(line: 2132, column: 9, scope: !8557)
!8559 = !DILocation(line: 2132, column: 27, scope: !8557)
!8560 = !DILocation(line: 2132, column: 38, scope: !8557)
!8561 = !DILocation(line: 2132, column: 49, scope: !8557)
!8562 = !DILocation(line: 2132, column: 56, scope: !8557)
!8563 = !DILocation(line: 2132, column: 67, scope: !8557)
!8564 = !DILocation(line: 2132, column: 71, scope: !8557)
!8565 = !DILocation(line: 2132, column: 54, scope: !8557)
!8566 = !DILocation(line: 2132, column: 76, scope: !8557)
!8567 = !DILocation(line: 2132, column: 83, scope: !8557)
!8568 = !DILocation(line: 2132, column: 94, scope: !8557)
!8569 = !DILocation(line: 2132, column: 98, scope: !8557)
!8570 = !DILocation(line: 2132, column: 81, scope: !8557)
!8571 = !DILocation(line: 2132, column: 74, scope: !8557)
!8572 = !DILocation(line: 2132, column: 46, scope: !8557)
!8573 = !DILocation(line: 2133, column: 26, scope: !8557)
!8574 = !DILocation(line: 2133, column: 3, scope: !8557)
!8575 = !DILocation(line: 2133, column: 14, scope: !8557)
!8576 = !DILocation(line: 2133, column: 20, scope: !8557)
!8577 = !DILocation(line: 2133, column: 23, scope: !8557)
!8578 = !DILocation(line: 2134, column: 20, scope: !8557)
!8579 = !DILocation(line: 2134, column: 31, scope: !8557)
!8580 = !DILocation(line: 2134, column: 37, scope: !8557)
!8581 = !DILocation(line: 2134, column: 3, scope: !8557)
!8582 = !DILocation(line: 2134, column: 11, scope: !8557)
!8583 = !DILocation(line: 2134, column: 15, scope: !8557)
!8584 = !DILocation(line: 2134, column: 18, scope: !8557)
!8585 = !DILocation(line: 2135, column: 2, scope: !8557)
!8586 = !DILocation(line: 2131, column: 18, scope: !8553)
!8587 = !DILocation(line: 2131, column: 2, scope: !8553)
!8588 = distinct !{!8588, !8555, !8589}
!8589 = !DILocation(line: 2135, column: 2, scope: !8550)
!8590 = !DILocation(line: 2137, column: 9, scope: !7705)
!8591 = !DILocation(line: 2138, column: 9, scope: !7705)
!8592 = !DILocation(line: 2138, column: 2, scope: !7705)
!8593 = distinct !DISubprogram(name: "texco_mapping", scope: !3, file: !3, line: 1556, type: !8594, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{null, !2730, !3402, !3587, !954, !954, !954, !201, !201, !201}
!8596 = !DILocalVariable(name: "shi", arg: 1, scope: !8593, file: !3, line: 1556, type: !2730)
!8597 = !DILocation(line: 1556, column: 39, scope: !8593)
!8598 = !DILocalVariable(name: "tex", arg: 2, scope: !8593, file: !3, line: 1556, type: !3402)
!8599 = !DILocation(line: 1556, column: 49, scope: !8593)
!8600 = !DILocalVariable(name: "mtex", arg: 3, scope: !8593, file: !3, line: 1556, type: !3587)
!8601 = !DILocation(line: 1556, column: 60, scope: !8593)
!8602 = !DILocalVariable(name: "co", arg: 4, scope: !8593, file: !3, line: 1557, type: !954)
!8603 = !DILocation(line: 1557, column: 39, scope: !8593)
!8604 = !DILocalVariable(name: "dx", arg: 5, scope: !8593, file: !3, line: 1557, type: !954)
!8605 = !DILocation(line: 1557, column: 58, scope: !8593)
!8606 = !DILocalVariable(name: "dy", arg: 6, scope: !8593, file: !3, line: 1557, type: !954)
!8607 = !DILocation(line: 1557, column: 77, scope: !8593)
!8608 = !DILocalVariable(name: "texvec", arg: 7, scope: !8593, file: !3, line: 1557, type: !201)
!8609 = !DILocation(line: 1557, column: 90, scope: !8593)
!8610 = !DILocalVariable(name: "dxt", arg: 8, scope: !8593, file: !3, line: 1557, type: !201)
!8611 = !DILocation(line: 1557, column: 107, scope: !8593)
!8612 = !DILocalVariable(name: "dyt", arg: 9, scope: !8593, file: !3, line: 1557, type: !201)
!8613 = !DILocation(line: 1557, column: 121, scope: !8593)
!8614 = !DILocation(line: 1560, column: 6, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1560, column: 6)
!8616 = !DILocation(line: 1560, column: 11, scope: !8615)
!8617 = !DILocation(line: 1560, column: 16, scope: !8615)
!8618 = !DILocation(line: 1560, column: 6, scope: !8593)
!8619 = !DILocation(line: 1562, column: 15, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1560, column: 30)
!8621 = !DILocation(line: 1562, column: 21, scope: !8620)
!8622 = !DILocation(line: 1562, column: 29, scope: !8620)
!8623 = !DILocation(line: 1562, column: 32, scope: !8620)
!8624 = !DILocation(line: 1562, column: 38, scope: !8620)
!8625 = !DILocation(line: 1562, column: 44, scope: !8620)
!8626 = !DILocation(line: 1562, column: 3, scope: !8620)
!8627 = !DILocation(line: 1562, column: 13, scope: !8620)
!8628 = !DILocation(line: 1563, column: 15, scope: !8620)
!8629 = !DILocation(line: 1563, column: 21, scope: !8620)
!8630 = !DILocation(line: 1563, column: 29, scope: !8620)
!8631 = !DILocation(line: 1563, column: 32, scope: !8620)
!8632 = !DILocation(line: 1563, column: 38, scope: !8620)
!8633 = !DILocation(line: 1563, column: 44, scope: !8620)
!8634 = !DILocation(line: 1563, column: 3, scope: !8620)
!8635 = !DILocation(line: 1563, column: 13, scope: !8620)
!8636 = !DILocation(line: 1564, column: 15, scope: !8620)
!8637 = !DILocation(line: 1564, column: 21, scope: !8620)
!8638 = !DILocation(line: 1564, column: 29, scope: !8620)
!8639 = !DILocation(line: 1564, column: 32, scope: !8620)
!8640 = !DILocation(line: 1564, column: 38, scope: !8620)
!8641 = !DILocation(line: 1564, column: 44, scope: !8620)
!8642 = !DILocation(line: 1564, column: 3, scope: !8620)
!8643 = !DILocation(line: 1564, column: 13, scope: !8620)
!8644 = !DILocation(line: 1566, column: 7, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1566, column: 7)
!8646 = !DILocation(line: 1566, column: 12, scope: !8645)
!8647 = !DILocation(line: 1566, column: 7, scope: !8620)
!8648 = !DILocation(line: 1567, column: 8, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 1567, column: 8)
!8650 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 1566, column: 20)
!8651 = !DILocation(line: 1567, column: 14, scope: !8649)
!8652 = !DILocation(line: 1567, column: 8, scope: !8650)
!8653 = !DILocation(line: 1568, column: 14, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 1567, column: 21)
!8655 = !DILocation(line: 1568, column: 17, scope: !8654)
!8656 = !DILocation(line: 1568, column: 23, scope: !8654)
!8657 = !DILocation(line: 1568, column: 29, scope: !8654)
!8658 = !DILocation(line: 1568, column: 5, scope: !8654)
!8659 = !DILocation(line: 1568, column: 12, scope: !8654)
!8660 = !DILocation(line: 1569, column: 14, scope: !8654)
!8661 = !DILocation(line: 1569, column: 17, scope: !8654)
!8662 = !DILocation(line: 1569, column: 23, scope: !8654)
!8663 = !DILocation(line: 1569, column: 29, scope: !8654)
!8664 = !DILocation(line: 1569, column: 5, scope: !8654)
!8665 = !DILocation(line: 1569, column: 12, scope: !8654)
!8666 = !DILocation(line: 1570, column: 4, scope: !8654)
!8667 = !DILocation(line: 1571, column: 18, scope: !8649)
!8668 = !DILocation(line: 1571, column: 25, scope: !8649)
!8669 = !DILocation(line: 1571, column: 9, scope: !8649)
!8670 = !DILocation(line: 1571, column: 16, scope: !8649)
!8671 = !DILocation(line: 1572, column: 8, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 1572, column: 8)
!8673 = !DILocation(line: 1572, column: 14, scope: !8672)
!8674 = !DILocation(line: 1572, column: 8, scope: !8650)
!8675 = !DILocation(line: 1573, column: 14, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1572, column: 21)
!8677 = !DILocation(line: 1573, column: 17, scope: !8676)
!8678 = !DILocation(line: 1573, column: 23, scope: !8676)
!8679 = !DILocation(line: 1573, column: 29, scope: !8676)
!8680 = !DILocation(line: 1573, column: 5, scope: !8676)
!8681 = !DILocation(line: 1573, column: 12, scope: !8676)
!8682 = !DILocation(line: 1574, column: 14, scope: !8676)
!8683 = !DILocation(line: 1574, column: 17, scope: !8676)
!8684 = !DILocation(line: 1574, column: 23, scope: !8676)
!8685 = !DILocation(line: 1574, column: 29, scope: !8676)
!8686 = !DILocation(line: 1574, column: 5, scope: !8676)
!8687 = !DILocation(line: 1574, column: 12, scope: !8676)
!8688 = !DILocation(line: 1575, column: 4, scope: !8676)
!8689 = !DILocation(line: 1576, column: 18, scope: !8672)
!8690 = !DILocation(line: 1576, column: 25, scope: !8672)
!8691 = !DILocation(line: 1576, column: 9, scope: !8672)
!8692 = !DILocation(line: 1576, column: 16, scope: !8672)
!8693 = !DILocation(line: 1577, column: 8, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 1577, column: 8)
!8695 = !DILocation(line: 1577, column: 14, scope: !8694)
!8696 = !DILocation(line: 1577, column: 8, scope: !8650)
!8697 = !DILocation(line: 1578, column: 14, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 1577, column: 21)
!8699 = !DILocation(line: 1578, column: 17, scope: !8698)
!8700 = !DILocation(line: 1578, column: 23, scope: !8698)
!8701 = !DILocation(line: 1578, column: 29, scope: !8698)
!8702 = !DILocation(line: 1578, column: 5, scope: !8698)
!8703 = !DILocation(line: 1578, column: 12, scope: !8698)
!8704 = !DILocation(line: 1579, column: 14, scope: !8698)
!8705 = !DILocation(line: 1579, column: 17, scope: !8698)
!8706 = !DILocation(line: 1579, column: 23, scope: !8698)
!8707 = !DILocation(line: 1579, column: 29, scope: !8698)
!8708 = !DILocation(line: 1579, column: 5, scope: !8698)
!8709 = !DILocation(line: 1579, column: 12, scope: !8698)
!8710 = !DILocation(line: 1580, column: 4, scope: !8698)
!8711 = !DILocation(line: 1581, column: 18, scope: !8694)
!8712 = !DILocation(line: 1581, column: 25, scope: !8694)
!8713 = !DILocation(line: 1581, column: 9, scope: !8694)
!8714 = !DILocation(line: 1581, column: 16, scope: !8694)
!8715 = !DILocation(line: 1582, column: 3, scope: !8650)
!8716 = !DILocation(line: 1583, column: 17, scope: !8620)
!8717 = !DILocation(line: 1583, column: 23, scope: !8620)
!8718 = !DILocation(line: 1583, column: 31, scope: !8620)
!8719 = !DILocation(line: 1583, column: 36, scope: !8620)
!8720 = !DILocation(line: 1583, column: 41, scope: !8620)
!8721 = !DILocation(line: 1583, column: 46, scope: !8620)
!8722 = !DILocation(line: 1583, column: 55, scope: !8620)
!8723 = !DILocation(line: 1583, column: 60, scope: !8620)
!8724 = !DILocation(line: 1583, column: 3, scope: !8620)
!8725 = !DILocation(line: 1586, column: 15, scope: !8620)
!8726 = !DILocation(line: 1586, column: 21, scope: !8620)
!8727 = !DILocation(line: 1586, column: 30, scope: !8620)
!8728 = !DILocation(line: 1586, column: 40, scope: !8620)
!8729 = !DILocation(line: 1586, column: 28, scope: !8620)
!8730 = !DILocation(line: 1586, column: 50, scope: !8620)
!8731 = !DILocation(line: 1586, column: 56, scope: !8620)
!8732 = !DILocation(line: 1586, column: 48, scope: !8620)
!8733 = !DILocation(line: 1586, column: 63, scope: !8620)
!8734 = !DILocation(line: 1586, column: 3, scope: !8620)
!8735 = !DILocation(line: 1586, column: 13, scope: !8620)
!8736 = !DILocation(line: 1587, column: 15, scope: !8620)
!8737 = !DILocation(line: 1587, column: 21, scope: !8620)
!8738 = !DILocation(line: 1587, column: 30, scope: !8620)
!8739 = !DILocation(line: 1587, column: 40, scope: !8620)
!8740 = !DILocation(line: 1587, column: 28, scope: !8620)
!8741 = !DILocation(line: 1587, column: 50, scope: !8620)
!8742 = !DILocation(line: 1587, column: 56, scope: !8620)
!8743 = !DILocation(line: 1587, column: 48, scope: !8620)
!8744 = !DILocation(line: 1587, column: 63, scope: !8620)
!8745 = !DILocation(line: 1587, column: 3, scope: !8620)
!8746 = !DILocation(line: 1587, column: 13, scope: !8620)
!8747 = !DILocation(line: 1588, column: 7, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1588, column: 7)
!8749 = !DILocation(line: 1588, column: 12, scope: !8748)
!8750 = !DILocation(line: 1588, column: 7, scope: !8620)
!8751 = !DILocation(line: 1589, column: 13, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 1588, column: 20)
!8753 = !DILocation(line: 1589, column: 19, scope: !8752)
!8754 = !DILocation(line: 1589, column: 29, scope: !8752)
!8755 = !DILocation(line: 1589, column: 27, scope: !8752)
!8756 = !DILocation(line: 1589, column: 4, scope: !8752)
!8757 = !DILocation(line: 1589, column: 11, scope: !8752)
!8758 = !DILocation(line: 1590, column: 13, scope: !8752)
!8759 = !DILocation(line: 1590, column: 19, scope: !8752)
!8760 = !DILocation(line: 1590, column: 29, scope: !8752)
!8761 = !DILocation(line: 1590, column: 27, scope: !8752)
!8762 = !DILocation(line: 1590, column: 4, scope: !8752)
!8763 = !DILocation(line: 1590, column: 11, scope: !8752)
!8764 = !DILocation(line: 1591, column: 13, scope: !8752)
!8765 = !DILocation(line: 1591, column: 19, scope: !8752)
!8766 = !DILocation(line: 1591, column: 29, scope: !8752)
!8767 = !DILocation(line: 1591, column: 27, scope: !8752)
!8768 = !DILocation(line: 1591, column: 4, scope: !8752)
!8769 = !DILocation(line: 1591, column: 11, scope: !8752)
!8770 = !DILocation(line: 1592, column: 13, scope: !8752)
!8771 = !DILocation(line: 1592, column: 19, scope: !8752)
!8772 = !DILocation(line: 1592, column: 29, scope: !8752)
!8773 = !DILocation(line: 1592, column: 27, scope: !8752)
!8774 = !DILocation(line: 1592, column: 4, scope: !8752)
!8775 = !DILocation(line: 1592, column: 11, scope: !8752)
!8776 = !DILocation(line: 1593, column: 3, scope: !8752)
!8777 = !DILocation(line: 1600, column: 7, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1600, column: 7)
!8779 = !DILocation(line: 1600, column: 12, scope: !8778)
!8780 = !DILocation(line: 1600, column: 19, scope: !8778)
!8781 = !DILocation(line: 1600, column: 33, scope: !8778)
!8782 = !DILocation(line: 1600, column: 37, scope: !8778)
!8783 = !DILocation(line: 1600, column: 42, scope: !8778)
!8784 = !DILocation(line: 1600, column: 47, scope: !8778)
!8785 = !DILocation(line: 1600, column: 7, scope: !8620)
!8786 = !DILocation(line: 1601, column: 8, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 1601, column: 8)
!8788 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 1600, column: 67)
!8789 = !DILocation(line: 1601, column: 13, scope: !8787)
!8790 = !DILocation(line: 1601, column: 23, scope: !8787)
!8791 = !DILocation(line: 1601, column: 8, scope: !8788)
!8792 = !DILocation(line: 1602, column: 25, scope: !8787)
!8793 = !DILocation(line: 1602, column: 18, scope: !8787)
!8794 = !DILocation(line: 1602, column: 5, scope: !8787)
!8795 = !DILocation(line: 1602, column: 15, scope: !8787)
!8796 = !DILocation(line: 1603, column: 13, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 1603, column: 13)
!8798 = !DILocation(line: 1603, column: 23, scope: !8797)
!8799 = !DILocation(line: 1603, column: 29, scope: !8797)
!8800 = !DILocation(line: 1603, column: 32, scope: !8797)
!8801 = !DILocation(line: 1603, column: 42, scope: !8797)
!8802 = !DILocation(line: 1603, column: 13, scope: !8787)
!8803 = !DILocalVariable(name: "tx", scope: !8804, file: !3, line: 1604, type: !765)
!8804 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 1603, column: 49)
!8805 = !DILocation(line: 1604, column: 17, scope: !8804)
!8806 = !DILocation(line: 1604, column: 27, scope: !8804)
!8807 = !DILocation(line: 1604, column: 26, scope: !8804)
!8808 = !DILocation(line: 1605, column: 22, scope: !8804)
!8809 = !DILocation(line: 1605, column: 34, scope: !8804)
!8810 = !DILocation(line: 1605, column: 27, scope: !8804)
!8811 = !DILocation(line: 1605, column: 25, scope: !8804)
!8812 = !DILocation(line: 1605, column: 20, scope: !8804)
!8813 = !DILocation(line: 1605, column: 5, scope: !8804)
!8814 = !DILocation(line: 1605, column: 15, scope: !8804)
!8815 = !DILocation(line: 1606, column: 9, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1606, column: 9)
!8817 = !DILocation(line: 1606, column: 19, scope: !8816)
!8818 = !DILocation(line: 1606, column: 9, scope: !8804)
!8819 = !DILocation(line: 1606, column: 44, scope: !8816)
!8820 = !DILocation(line: 1606, column: 42, scope: !8816)
!8821 = !DILocation(line: 1606, column: 26, scope: !8816)
!8822 = !DILocation(line: 1606, column: 36, scope: !8816)
!8823 = !DILocation(line: 1607, column: 4, scope: !8804)
!8824 = !DILocation(line: 1608, column: 3, scope: !8788)
!8825 = !DILocation(line: 1609, column: 7, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1609, column: 7)
!8827 = !DILocation(line: 1609, column: 12, scope: !8826)
!8828 = !DILocation(line: 1609, column: 19, scope: !8826)
!8829 = !DILocation(line: 1609, column: 33, scope: !8826)
!8830 = !DILocation(line: 1609, column: 37, scope: !8826)
!8831 = !DILocation(line: 1609, column: 42, scope: !8826)
!8832 = !DILocation(line: 1609, column: 47, scope: !8826)
!8833 = !DILocation(line: 1609, column: 7, scope: !8620)
!8834 = !DILocation(line: 1610, column: 8, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1610, column: 8)
!8836 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1609, column: 67)
!8837 = !DILocation(line: 1610, column: 13, scope: !8835)
!8838 = !DILocation(line: 1610, column: 23, scope: !8835)
!8839 = !DILocation(line: 1610, column: 8, scope: !8836)
!8840 = !DILocation(line: 1611, column: 25, scope: !8835)
!8841 = !DILocation(line: 1611, column: 18, scope: !8835)
!8842 = !DILocation(line: 1611, column: 5, scope: !8835)
!8843 = !DILocation(line: 1611, column: 15, scope: !8835)
!8844 = !DILocation(line: 1612, column: 13, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 1612, column: 13)
!8846 = !DILocation(line: 1612, column: 23, scope: !8845)
!8847 = !DILocation(line: 1612, column: 29, scope: !8845)
!8848 = !DILocation(line: 1612, column: 32, scope: !8845)
!8849 = !DILocation(line: 1612, column: 42, scope: !8845)
!8850 = !DILocation(line: 1612, column: 13, scope: !8835)
!8851 = !DILocalVariable(name: "ty", scope: !8852, file: !3, line: 1613, type: !765)
!8852 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 1612, column: 49)
!8853 = !DILocation(line: 1613, column: 17, scope: !8852)
!8854 = !DILocation(line: 1613, column: 27, scope: !8852)
!8855 = !DILocation(line: 1613, column: 26, scope: !8852)
!8856 = !DILocation(line: 1614, column: 22, scope: !8852)
!8857 = !DILocation(line: 1614, column: 34, scope: !8852)
!8858 = !DILocation(line: 1614, column: 27, scope: !8852)
!8859 = !DILocation(line: 1614, column: 25, scope: !8852)
!8860 = !DILocation(line: 1614, column: 20, scope: !8852)
!8861 = !DILocation(line: 1614, column: 5, scope: !8852)
!8862 = !DILocation(line: 1614, column: 15, scope: !8852)
!8863 = !DILocation(line: 1615, column: 9, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1615, column: 9)
!8865 = !DILocation(line: 1615, column: 19, scope: !8864)
!8866 = !DILocation(line: 1615, column: 9, scope: !8852)
!8867 = !DILocation(line: 1615, column: 44, scope: !8864)
!8868 = !DILocation(line: 1615, column: 42, scope: !8864)
!8869 = !DILocation(line: 1615, column: 26, scope: !8864)
!8870 = !DILocation(line: 1615, column: 36, scope: !8864)
!8871 = !DILocation(line: 1616, column: 4, scope: !8852)
!8872 = !DILocation(line: 1617, column: 3, scope: !8836)
!8873 = !DILocation(line: 1619, column: 2, scope: !8620)
!8874 = !DILocation(line: 1622, column: 15, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1620, column: 7)
!8876 = !DILocation(line: 1622, column: 21, scope: !8875)
!8877 = !DILocation(line: 1622, column: 30, scope: !8875)
!8878 = !DILocation(line: 1622, column: 36, scope: !8875)
!8879 = !DILocation(line: 1622, column: 45, scope: !8875)
!8880 = !DILocation(line: 1622, column: 48, scope: !8875)
!8881 = !DILocation(line: 1622, column: 54, scope: !8875)
!8882 = !DILocation(line: 1622, column: 60, scope: !8875)
!8883 = !DILocation(line: 1622, column: 67, scope: !8875)
!8884 = !DILocation(line: 1622, column: 73, scope: !8875)
!8885 = !DILocation(line: 1622, column: 65, scope: !8875)
!8886 = !DILocation(line: 1622, column: 83, scope: !8875)
!8887 = !DILocation(line: 1622, column: 89, scope: !8875)
!8888 = !DILocation(line: 1622, column: 28, scope: !8875)
!8889 = !DILocation(line: 1622, column: 3, scope: !8875)
!8890 = !DILocation(line: 1622, column: 13, scope: !8875)
!8891 = !DILocation(line: 1623, column: 15, scope: !8875)
!8892 = !DILocation(line: 1623, column: 21, scope: !8875)
!8893 = !DILocation(line: 1623, column: 30, scope: !8875)
!8894 = !DILocation(line: 1623, column: 36, scope: !8875)
!8895 = !DILocation(line: 1623, column: 45, scope: !8875)
!8896 = !DILocation(line: 1623, column: 48, scope: !8875)
!8897 = !DILocation(line: 1623, column: 54, scope: !8875)
!8898 = !DILocation(line: 1623, column: 60, scope: !8875)
!8899 = !DILocation(line: 1623, column: 67, scope: !8875)
!8900 = !DILocation(line: 1623, column: 73, scope: !8875)
!8901 = !DILocation(line: 1623, column: 65, scope: !8875)
!8902 = !DILocation(line: 1623, column: 83, scope: !8875)
!8903 = !DILocation(line: 1623, column: 89, scope: !8875)
!8904 = !DILocation(line: 1623, column: 28, scope: !8875)
!8905 = !DILocation(line: 1623, column: 3, scope: !8875)
!8906 = !DILocation(line: 1623, column: 13, scope: !8875)
!8907 = !DILocation(line: 1624, column: 15, scope: !8875)
!8908 = !DILocation(line: 1624, column: 21, scope: !8875)
!8909 = !DILocation(line: 1624, column: 30, scope: !8875)
!8910 = !DILocation(line: 1624, column: 36, scope: !8875)
!8911 = !DILocation(line: 1624, column: 45, scope: !8875)
!8912 = !DILocation(line: 1624, column: 48, scope: !8875)
!8913 = !DILocation(line: 1624, column: 54, scope: !8875)
!8914 = !DILocation(line: 1624, column: 60, scope: !8875)
!8915 = !DILocation(line: 1624, column: 67, scope: !8875)
!8916 = !DILocation(line: 1624, column: 73, scope: !8875)
!8917 = !DILocation(line: 1624, column: 65, scope: !8875)
!8918 = !DILocation(line: 1624, column: 83, scope: !8875)
!8919 = !DILocation(line: 1624, column: 89, scope: !8875)
!8920 = !DILocation(line: 1624, column: 28, scope: !8875)
!8921 = !DILocation(line: 1624, column: 3, scope: !8875)
!8922 = !DILocation(line: 1624, column: 13, scope: !8875)
!8923 = !DILocation(line: 1626, column: 7, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 1626, column: 7)
!8925 = !DILocation(line: 1626, column: 12, scope: !8924)
!8926 = !DILocation(line: 1626, column: 7, scope: !8875)
!8927 = !DILocation(line: 1627, column: 8, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1627, column: 8)
!8929 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 1626, column: 20)
!8930 = !DILocation(line: 1627, column: 14, scope: !8928)
!8931 = !DILocation(line: 1627, column: 8, scope: !8929)
!8932 = !DILocation(line: 1628, column: 14, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 1627, column: 21)
!8934 = !DILocation(line: 1628, column: 20, scope: !8933)
!8935 = !DILocation(line: 1628, column: 28, scope: !8933)
!8936 = !DILocation(line: 1628, column: 31, scope: !8933)
!8937 = !DILocation(line: 1628, column: 37, scope: !8933)
!8938 = !DILocation(line: 1628, column: 43, scope: !8933)
!8939 = !DILocation(line: 1628, column: 27, scope: !8933)
!8940 = !DILocation(line: 1628, column: 5, scope: !8933)
!8941 = !DILocation(line: 1628, column: 12, scope: !8933)
!8942 = !DILocation(line: 1629, column: 14, scope: !8933)
!8943 = !DILocation(line: 1629, column: 20, scope: !8933)
!8944 = !DILocation(line: 1629, column: 28, scope: !8933)
!8945 = !DILocation(line: 1629, column: 31, scope: !8933)
!8946 = !DILocation(line: 1629, column: 37, scope: !8933)
!8947 = !DILocation(line: 1629, column: 43, scope: !8933)
!8948 = !DILocation(line: 1629, column: 27, scope: !8933)
!8949 = !DILocation(line: 1629, column: 5, scope: !8933)
!8950 = !DILocation(line: 1629, column: 12, scope: !8933)
!8951 = !DILocation(line: 1630, column: 4, scope: !8933)
!8952 = !DILocation(line: 1631, column: 18, scope: !8928)
!8953 = !DILocation(line: 1631, column: 25, scope: !8928)
!8954 = !DILocation(line: 1631, column: 9, scope: !8928)
!8955 = !DILocation(line: 1631, column: 16, scope: !8928)
!8956 = !DILocation(line: 1632, column: 8, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1632, column: 8)
!8958 = !DILocation(line: 1632, column: 14, scope: !8957)
!8959 = !DILocation(line: 1632, column: 8, scope: !8929)
!8960 = !DILocation(line: 1633, column: 14, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 1632, column: 21)
!8962 = !DILocation(line: 1633, column: 20, scope: !8961)
!8963 = !DILocation(line: 1633, column: 28, scope: !8961)
!8964 = !DILocation(line: 1633, column: 31, scope: !8961)
!8965 = !DILocation(line: 1633, column: 37, scope: !8961)
!8966 = !DILocation(line: 1633, column: 43, scope: !8961)
!8967 = !DILocation(line: 1633, column: 27, scope: !8961)
!8968 = !DILocation(line: 1633, column: 5, scope: !8961)
!8969 = !DILocation(line: 1633, column: 12, scope: !8961)
!8970 = !DILocation(line: 1634, column: 14, scope: !8961)
!8971 = !DILocation(line: 1634, column: 20, scope: !8961)
!8972 = !DILocation(line: 1634, column: 28, scope: !8961)
!8973 = !DILocation(line: 1634, column: 31, scope: !8961)
!8974 = !DILocation(line: 1634, column: 37, scope: !8961)
!8975 = !DILocation(line: 1634, column: 43, scope: !8961)
!8976 = !DILocation(line: 1634, column: 27, scope: !8961)
!8977 = !DILocation(line: 1634, column: 5, scope: !8961)
!8978 = !DILocation(line: 1634, column: 12, scope: !8961)
!8979 = !DILocation(line: 1635, column: 4, scope: !8961)
!8980 = !DILocation(line: 1636, column: 18, scope: !8957)
!8981 = !DILocation(line: 1636, column: 25, scope: !8957)
!8982 = !DILocation(line: 1636, column: 9, scope: !8957)
!8983 = !DILocation(line: 1636, column: 16, scope: !8957)
!8984 = !DILocation(line: 1637, column: 8, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1637, column: 8)
!8986 = !DILocation(line: 1637, column: 14, scope: !8985)
!8987 = !DILocation(line: 1637, column: 8, scope: !8929)
!8988 = !DILocation(line: 1638, column: 14, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1637, column: 21)
!8990 = !DILocation(line: 1638, column: 20, scope: !8989)
!8991 = !DILocation(line: 1638, column: 28, scope: !8989)
!8992 = !DILocation(line: 1638, column: 31, scope: !8989)
!8993 = !DILocation(line: 1638, column: 37, scope: !8989)
!8994 = !DILocation(line: 1638, column: 43, scope: !8989)
!8995 = !DILocation(line: 1638, column: 27, scope: !8989)
!8996 = !DILocation(line: 1638, column: 5, scope: !8989)
!8997 = !DILocation(line: 1638, column: 12, scope: !8989)
!8998 = !DILocation(line: 1639, column: 14, scope: !8989)
!8999 = !DILocation(line: 1639, column: 20, scope: !8989)
!9000 = !DILocation(line: 1639, column: 28, scope: !8989)
!9001 = !DILocation(line: 1639, column: 31, scope: !8989)
!9002 = !DILocation(line: 1639, column: 37, scope: !8989)
!9003 = !DILocation(line: 1639, column: 43, scope: !8989)
!9004 = !DILocation(line: 1639, column: 27, scope: !8989)
!9005 = !DILocation(line: 1639, column: 5, scope: !8989)
!9006 = !DILocation(line: 1639, column: 12, scope: !8989)
!9007 = !DILocation(line: 1640, column: 4, scope: !8989)
!9008 = !DILocation(line: 1641, column: 17, scope: !8985)
!9009 = !DILocation(line: 1641, column: 24, scope: !8985)
!9010 = !DILocation(line: 1641, column: 9, scope: !8985)
!9011 = !DILocation(line: 1641, column: 15, scope: !8985)
!9012 = !DILocation(line: 1642, column: 3, scope: !8929)
!9013 = !DILocation(line: 1644, column: 1, scope: !8593)
!9014 = distinct !DISubprogram(name: "multitex_mtex", scope: !3, file: !3, line: 1306, type: !9015, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{!92, !2730, !3587, !201, !201, !201, !3576, !2905}
!9017 = !DILocalVariable(name: "shi", arg: 1, scope: !9014, file: !3, line: 1306, type: !2730)
!9018 = !DILocation(line: 1306, column: 38, scope: !9014)
!9019 = !DILocalVariable(name: "mtex", arg: 2, scope: !9014, file: !3, line: 1306, type: !3587)
!9020 = !DILocation(line: 1306, column: 49, scope: !9014)
!9021 = !DILocalVariable(name: "texvec", arg: 3, scope: !9014, file: !3, line: 1306, type: !201)
!9022 = !DILocation(line: 1306, column: 61, scope: !9014)
!9023 = !DILocalVariable(name: "dxt", arg: 4, scope: !9014, file: !3, line: 1306, type: !201)
!9024 = !DILocation(line: 1306, column: 78, scope: !9014)
!9025 = !DILocalVariable(name: "dyt", arg: 5, scope: !9014, file: !3, line: 1306, type: !201)
!9026 = !DILocation(line: 1306, column: 92, scope: !9014)
!9027 = !DILocalVariable(name: "texres", arg: 6, scope: !9014, file: !3, line: 1306, type: !3576)
!9028 = !DILocation(line: 1306, column: 111, scope: !9014)
!9029 = !DILocalVariable(name: "pool", arg: 7, scope: !9014, file: !3, line: 1306, type: !2905)
!9030 = !DILocation(line: 1306, column: 137, scope: !9014)
!9031 = !DILocalVariable(name: "tex", scope: !9014, file: !3, line: 1308, type: !3402)
!9032 = !DILocation(line: 1308, column: 7, scope: !9014)
!9033 = !DILocation(line: 1308, column: 13, scope: !9014)
!9034 = !DILocation(line: 1308, column: 19, scope: !9014)
!9035 = !DILocation(line: 1310, column: 6, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1310, column: 6)
!9037 = !DILocation(line: 1310, column: 11, scope: !9036)
!9038 = !DILocation(line: 1310, column: 21, scope: !9036)
!9039 = !DILocation(line: 1310, column: 24, scope: !9036)
!9040 = !DILocation(line: 1310, column: 29, scope: !9036)
!9041 = !DILocation(line: 1310, column: 6, scope: !9014)
!9042 = !DILocation(line: 1313, column: 27, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 1310, column: 39)
!9044 = !DILocation(line: 1313, column: 32, scope: !9043)
!9045 = !DILocation(line: 1313, column: 42, scope: !9043)
!9046 = !DILocation(line: 1313, column: 50, scope: !9043)
!9047 = !DILocation(line: 1313, column: 58, scope: !9043)
!9048 = !DILocation(line: 1313, column: 63, scope: !9043)
!9049 = !DILocation(line: 1313, column: 68, scope: !9043)
!9050 = !DILocation(line: 1313, column: 73, scope: !9043)
!9051 = !DILocation(line: 1313, column: 81, scope: !9043)
!9052 = !DILocation(line: 1313, column: 86, scope: !9043)
!9053 = !DILocation(line: 1314, column: 27, scope: !9043)
!9054 = !DILocation(line: 1314, column: 32, scope: !9043)
!9055 = !DILocation(line: 1314, column: 38, scope: !9043)
!9056 = !DILocation(line: 1314, column: 56, scope: !9043)
!9057 = !DILocation(line: 1314, column: 67, scope: !9043)
!9058 = !DILocation(line: 1314, column: 75, scope: !9043)
!9059 = !DILocation(line: 1314, column: 96, scope: !9043)
!9060 = !DILocation(line: 1314, column: 102, scope: !9043)
!9061 = !DILocation(line: 1314, column: 107, scope: !9043)
!9062 = !DILocation(line: 1313, column: 10, scope: !9043)
!9063 = !DILocation(line: 1313, column: 3, scope: !9043)
!9064 = !DILocation(line: 1317, column: 19, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 1316, column: 7)
!9066 = !DILocation(line: 1317, column: 25, scope: !9065)
!9067 = !DILocation(line: 1317, column: 30, scope: !9065)
!9068 = !DILocation(line: 1317, column: 38, scope: !9065)
!9069 = !DILocation(line: 1317, column: 43, scope: !9065)
!9070 = !DILocation(line: 1317, column: 48, scope: !9065)
!9071 = !DILocation(line: 1317, column: 53, scope: !9065)
!9072 = !DILocation(line: 1317, column: 61, scope: !9065)
!9073 = !DILocation(line: 1317, column: 69, scope: !9065)
!9074 = !DILocation(line: 1317, column: 74, scope: !9065)
!9075 = !DILocation(line: 1317, column: 82, scope: !9065)
!9076 = !DILocation(line: 1317, column: 88, scope: !9065)
!9077 = !DILocation(line: 1317, column: 102, scope: !9065)
!9078 = !DILocation(line: 1317, column: 10, scope: !9065)
!9079 = !DILocation(line: 1317, column: 3, scope: !9065)
!9080 = !DILocation(line: 1319, column: 1, scope: !9014)
!9081 = distinct !DISubprogram(name: "rgb_to_grayscale", scope: !9082, file: !9082, line: 220, type: !9083, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9082 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9083 = !DISubroutineType(types: !9084)
!9084 = !{!91, !954}
!9085 = !DILocalVariable(name: "rgb", arg: 1, scope: !9081, file: !9082, line: 220, type: !954)
!9086 = !DILocation(line: 220, column: 44, scope: !9081)
!9087 = !DILocation(line: 222, column: 16, scope: !9081)
!9088 = !DILocation(line: 222, column: 14, scope: !9081)
!9089 = !DILocation(line: 222, column: 33, scope: !9081)
!9090 = !DILocation(line: 222, column: 31, scope: !9081)
!9091 = !DILocation(line: 222, column: 23, scope: !9081)
!9092 = !DILocation(line: 222, column: 50, scope: !9081)
!9093 = !DILocation(line: 222, column: 48, scope: !9081)
!9094 = !DILocation(line: 222, column: 40, scope: !9081)
!9095 = !DILocation(line: 222, column: 2, scope: !9081)
!9096 = distinct !DISubprogram(name: "normalize_v3", scope: !4399, file: !4399, line: 830, type: !9097, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!91, !201}
!9099 = !DILocalVariable(name: "n", arg: 1, scope: !9096, file: !4399, line: 830, type: !201)
!9100 = !DILocation(line: 830, column: 34, scope: !9096)
!9101 = !DILocation(line: 832, column: 25, scope: !9096)
!9102 = !DILocation(line: 832, column: 28, scope: !9096)
!9103 = !DILocation(line: 832, column: 9, scope: !9096)
!9104 = !DILocation(line: 832, column: 2, scope: !9096)
!9105 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4399, file: !4399, line: 634, type: !7068, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9106 = !DILocalVariable(name: "r", arg: 1, scope: !9105, file: !4399, line: 634, type: !201)
!9107 = !DILocation(line: 634, column: 34, scope: !9105)
!9108 = !DILocalVariable(name: "a", arg: 2, scope: !9105, file: !4399, line: 634, type: !954)
!9109 = !DILocation(line: 634, column: 52, scope: !9105)
!9110 = !DILocalVariable(name: "b", arg: 3, scope: !9105, file: !4399, line: 634, type: !954)
!9111 = !DILocation(line: 634, column: 70, scope: !9105)
!9112 = !DILocation(line: 637, column: 9, scope: !9105)
!9113 = !DILocation(line: 637, column: 16, scope: !9105)
!9114 = !DILocation(line: 637, column: 14, scope: !9105)
!9115 = !DILocation(line: 637, column: 23, scope: !9105)
!9116 = !DILocation(line: 637, column: 30, scope: !9105)
!9117 = !DILocation(line: 637, column: 28, scope: !9105)
!9118 = !DILocation(line: 637, column: 21, scope: !9105)
!9119 = !DILocation(line: 637, column: 2, scope: !9105)
!9120 = !DILocation(line: 637, column: 7, scope: !9105)
!9121 = !DILocation(line: 638, column: 9, scope: !9105)
!9122 = !DILocation(line: 638, column: 16, scope: !9105)
!9123 = !DILocation(line: 638, column: 14, scope: !9105)
!9124 = !DILocation(line: 638, column: 23, scope: !9105)
!9125 = !DILocation(line: 638, column: 30, scope: !9105)
!9126 = !DILocation(line: 638, column: 28, scope: !9105)
!9127 = !DILocation(line: 638, column: 21, scope: !9105)
!9128 = !DILocation(line: 638, column: 2, scope: !9105)
!9129 = !DILocation(line: 638, column: 7, scope: !9105)
!9130 = !DILocation(line: 639, column: 9, scope: !9105)
!9131 = !DILocation(line: 639, column: 16, scope: !9105)
!9132 = !DILocation(line: 639, column: 14, scope: !9105)
!9133 = !DILocation(line: 639, column: 23, scope: !9105)
!9134 = !DILocation(line: 639, column: 30, scope: !9105)
!9135 = !DILocation(line: 639, column: 28, scope: !9105)
!9136 = !DILocation(line: 639, column: 21, scope: !9105)
!9137 = !DILocation(line: 639, column: 2, scope: !9105)
!9138 = !DILocation(line: 639, column: 7, scope: !9105)
!9139 = !DILocation(line: 640, column: 1, scope: !9105)
!9140 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4399, file: !4399, line: 392, type: !9141, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9141 = !DISubroutineType(types: !9142)
!9142 = !{null, !201, !91}
!9143 = !DILocalVariable(name: "r", arg: 1, scope: !9140, file: !4399, line: 392, type: !201)
!9144 = !DILocation(line: 392, column: 30, scope: !9140)
!9145 = !DILocalVariable(name: "f", arg: 2, scope: !9140, file: !4399, line: 392, type: !91)
!9146 = !DILocation(line: 392, column: 42, scope: !9140)
!9147 = !DILocation(line: 394, column: 10, scope: !9140)
!9148 = !DILocation(line: 394, column: 2, scope: !9140)
!9149 = !DILocation(line: 394, column: 7, scope: !9140)
!9150 = !DILocation(line: 395, column: 10, scope: !9140)
!9151 = !DILocation(line: 395, column: 2, scope: !9140)
!9152 = !DILocation(line: 395, column: 7, scope: !9140)
!9153 = !DILocation(line: 396, column: 10, scope: !9140)
!9154 = !DILocation(line: 396, column: 2, scope: !9140)
!9155 = !DILocation(line: 396, column: 7, scope: !9140)
!9156 = !DILocation(line: 397, column: 1, scope: !9140)
!9157 = distinct !DISubprogram(name: "dot_v3v3", scope: !4399, file: !4399, line: 619, type: !9158, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{!91, !954, !954}
!9160 = !DILocalVariable(name: "a", arg: 1, scope: !9157, file: !4399, line: 619, type: !954)
!9161 = !DILocation(line: 619, column: 36, scope: !9157)
!9162 = !DILocalVariable(name: "b", arg: 2, scope: !9157, file: !4399, line: 619, type: !954)
!9163 = !DILocation(line: 619, column: 54, scope: !9157)
!9164 = !DILocation(line: 621, column: 9, scope: !9157)
!9165 = !DILocation(line: 621, column: 16, scope: !9157)
!9166 = !DILocation(line: 621, column: 14, scope: !9157)
!9167 = !DILocation(line: 621, column: 23, scope: !9157)
!9168 = !DILocation(line: 621, column: 30, scope: !9157)
!9169 = !DILocation(line: 621, column: 28, scope: !9157)
!9170 = !DILocation(line: 621, column: 21, scope: !9157)
!9171 = !DILocation(line: 621, column: 37, scope: !9157)
!9172 = !DILocation(line: 621, column: 44, scope: !9157)
!9173 = !DILocation(line: 621, column: 42, scope: !9157)
!9174 = !DILocation(line: 621, column: 35, scope: !9157)
!9175 = !DILocation(line: 621, column: 2, scope: !9157)
!9176 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !4399, file: !4399, line: 507, type: !9177, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9177 = !DISubroutineType(types: !9178)
!9178 = !{null, !201, !954, !91}
!9179 = !DILocalVariable(name: "r", arg: 1, scope: !9176, file: !4399, line: 507, type: !201)
!9180 = !DILocation(line: 507, column: 33, scope: !9176)
!9181 = !DILocalVariable(name: "a", arg: 2, scope: !9176, file: !4399, line: 507, type: !954)
!9182 = !DILocation(line: 507, column: 51, scope: !9176)
!9183 = !DILocalVariable(name: "f", arg: 3, scope: !9176, file: !4399, line: 507, type: !91)
!9184 = !DILocation(line: 507, column: 63, scope: !9176)
!9185 = !DILocation(line: 509, column: 10, scope: !9176)
!9186 = !DILocation(line: 509, column: 17, scope: !9176)
!9187 = !DILocation(line: 509, column: 15, scope: !9176)
!9188 = !DILocation(line: 509, column: 2, scope: !9176)
!9189 = !DILocation(line: 509, column: 7, scope: !9176)
!9190 = !DILocation(line: 510, column: 10, scope: !9176)
!9191 = !DILocation(line: 510, column: 17, scope: !9176)
!9192 = !DILocation(line: 510, column: 15, scope: !9176)
!9193 = !DILocation(line: 510, column: 2, scope: !9176)
!9194 = !DILocation(line: 510, column: 7, scope: !9176)
!9195 = !DILocation(line: 511, column: 10, scope: !9176)
!9196 = !DILocation(line: 511, column: 17, scope: !9176)
!9197 = !DILocation(line: 511, column: 15, scope: !9176)
!9198 = !DILocation(line: 511, column: 2, scope: !9176)
!9199 = !DILocation(line: 511, column: 7, scope: !9176)
!9200 = !DILocation(line: 512, column: 1, scope: !9176)
!9201 = distinct !DISubprogram(name: "do_volume_tex", scope: !3, file: !3, line: 2675, type: !9202, scopeLine: 2676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{null, !2730, !954, !92, !201, !201, !3158}
!9204 = !DILocalVariable(name: "shi", arg: 1, scope: !9201, file: !3, line: 2675, type: !2730)
!9205 = !DILocation(line: 2675, column: 32, scope: !9201)
!9206 = !DILocalVariable(name: "xyz", arg: 2, scope: !9201, file: !3, line: 2675, type: !954)
!9207 = !DILocation(line: 2675, column: 50, scope: !9201)
!9208 = !DILocalVariable(name: "mapto_flag", arg: 3, scope: !9201, file: !3, line: 2675, type: !92)
!9209 = !DILocation(line: 2675, column: 59, scope: !9201)
!9210 = !DILocalVariable(name: "col_r", arg: 4, scope: !9201, file: !3, line: 2675, type: !201)
!9211 = !DILocation(line: 2675, column: 77, scope: !9201)
!9212 = !DILocalVariable(name: "val", arg: 5, scope: !9201, file: !3, line: 2675, type: !201)
!9213 = !DILocation(line: 2675, column: 94, scope: !9201)
!9214 = !DILocalVariable(name: "re", arg: 6, scope: !9201, file: !3, line: 2675, type: !3158)
!9215 = !DILocation(line: 2675, column: 107, scope: !9201)
!9216 = !DILocalVariable(name: "mtex", scope: !9201, file: !3, line: 2677, type: !3587)
!9217 = !DILocation(line: 2677, column: 8, scope: !9201)
!9218 = !DILocalVariable(name: "tex", scope: !9201, file: !3, line: 2678, type: !3402)
!9219 = !DILocation(line: 2678, column: 7, scope: !9201)
!9220 = !DILocalVariable(name: "texres", scope: !9201, file: !3, line: 2679, type: !3577)
!9221 = !DILocation(line: 2679, column: 12, scope: !9201)
!9222 = !DILocalVariable(name: "tex_nr", scope: !9201, file: !3, line: 2680, type: !92)
!9223 = !DILocation(line: 2680, column: 6, scope: !9201)
!9224 = !DILocalVariable(name: "rgbnor", scope: !9201, file: !3, line: 2680, type: !92)
!9225 = !DILocation(line: 2680, column: 14, scope: !9201)
!9226 = !DILocalVariable(name: "co", scope: !9201, file: !3, line: 2681, type: !344)
!9227 = !DILocation(line: 2681, column: 8, scope: !9201)
!9228 = !DILocalVariable(name: "texvec", scope: !9201, file: !3, line: 2681, type: !344)
!9229 = !DILocation(line: 2681, column: 15, scope: !9201)
!9230 = !DILocalVariable(name: "fact", scope: !9201, file: !3, line: 2682, type: !91)
!9231 = !DILocation(line: 2682, column: 8, scope: !9201)
!9232 = !DILocalVariable(name: "stencilTin", scope: !9201, file: !3, line: 2682, type: !91)
!9233 = !DILocation(line: 2682, column: 14, scope: !9201)
!9234 = !DILocation(line: 2684, column: 6, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 2684, column: 6)
!9236 = !DILocation(line: 2684, column: 10, scope: !9235)
!9237 = !DILocation(line: 2684, column: 12, scope: !9235)
!9238 = !DILocation(line: 2684, column: 20, scope: !9235)
!9239 = !DILocation(line: 2684, column: 6, scope: !9201)
!9240 = !DILocation(line: 2684, column: 32, scope: !9235)
!9241 = !DILocation(line: 2687, column: 13, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 2687, column: 2)
!9243 = !DILocation(line: 2687, column: 7, scope: !9242)
!9244 = !DILocation(line: 2687, column: 17, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 2687, column: 2)
!9246 = !DILocation(line: 2687, column: 23, scope: !9245)
!9247 = !DILocation(line: 2687, column: 2, scope: !9242)
!9248 = !DILocation(line: 2689, column: 7, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 2689, column: 7)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 2687, column: 44)
!9251 = !DILocation(line: 2689, column: 12, scope: !9249)
!9252 = !DILocation(line: 2689, column: 17, scope: !9249)
!9253 = !DILocation(line: 2689, column: 30, scope: !9249)
!9254 = !DILocation(line: 2689, column: 28, scope: !9249)
!9255 = !DILocation(line: 2689, column: 24, scope: !9249)
!9256 = !DILocation(line: 2689, column: 7, scope: !9250)
!9257 = !DILocation(line: 2689, column: 39, scope: !9249)
!9258 = !DILocation(line: 2691, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 2691, column: 7)
!9260 = !DILocation(line: 2691, column: 12, scope: !9259)
!9261 = !DILocation(line: 2691, column: 17, scope: !9259)
!9262 = !DILocation(line: 2691, column: 22, scope: !9259)
!9263 = !DILocation(line: 2691, column: 7, scope: !9250)
!9264 = !DILocation(line: 2692, column: 10, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 2691, column: 31)
!9266 = !DILocation(line: 2692, column: 15, scope: !9265)
!9267 = !DILocation(line: 2692, column: 20, scope: !9265)
!9268 = !DILocation(line: 2692, column: 25, scope: !9265)
!9269 = !DILocation(line: 2692, column: 8, scope: !9265)
!9270 = !DILocation(line: 2693, column: 9, scope: !9265)
!9271 = !DILocation(line: 2693, column: 15, scope: !9265)
!9272 = !DILocation(line: 2693, column: 7, scope: !9265)
!9273 = !DILocation(line: 2694, column: 8, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2694, column: 8)
!9275 = !DILocation(line: 2694, column: 12, scope: !9274)
!9276 = !DILocation(line: 2694, column: 8, scope: !9265)
!9277 = !DILocation(line: 2694, column: 21, scope: !9274)
!9278 = !DILocation(line: 2698, column: 10, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2698, column: 8)
!9280 = !DILocation(line: 2698, column: 16, scope: !9279)
!9281 = !DILocation(line: 2698, column: 24, scope: !9279)
!9282 = !DILocation(line: 2698, column: 22, scope: !9279)
!9283 = !DILocation(line: 2698, column: 8, scope: !9265)
!9284 = !DILocation(line: 2698, column: 37, scope: !9279)
!9285 = !DILocation(line: 2701, column: 8, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2701, column: 8)
!9287 = !DILocation(line: 2701, column: 14, scope: !9286)
!9288 = !DILocation(line: 2701, column: 19, scope: !9286)
!9289 = !DILocation(line: 2701, column: 8, scope: !9265)
!9290 = !DILocalVariable(name: "ob", scope: !9291, file: !3, line: 2702, type: !2935)
!9291 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 2701, column: 35)
!9292 = !DILocation(line: 2702, column: 13, scope: !9291)
!9293 = !DILocation(line: 2702, column: 17, scope: !9291)
!9294 = !DILocation(line: 2702, column: 23, scope: !9291)
!9295 = !DILocation(line: 2703, column: 9, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 2703, column: 9)
!9297 = !DILocation(line: 2703, column: 9, scope: !9291)
!9298 = !DILocation(line: 2704, column: 17, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 2703, column: 13)
!9300 = !DILocation(line: 2704, column: 21, scope: !9299)
!9301 = !DILocation(line: 2704, column: 6, scope: !9299)
!9302 = !DILocation(line: 2705, column: 10, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2705, column: 10)
!9304 = !DILocation(line: 2705, column: 16, scope: !9303)
!9305 = !DILocation(line: 2705, column: 24, scope: !9303)
!9306 = !DILocation(line: 2705, column: 10, scope: !9299)
!9307 = !DILocation(line: 2706, column: 11, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9309, file: !3, line: 2706, column: 11)
!9309 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 2705, column: 46)
!9310 = !DILocation(line: 2706, column: 16, scope: !9308)
!9311 = !DILocation(line: 2706, column: 20, scope: !9308)
!9312 = !DILocation(line: 2706, column: 23, scope: !9308)
!9313 = !DILocation(line: 2706, column: 28, scope: !9308)
!9314 = !DILocation(line: 2706, column: 33, scope: !9308)
!9315 = !DILocation(line: 2706, column: 11, scope: !9309)
!9316 = !DILocation(line: 2707, column: 18, scope: !9308)
!9317 = !DILocation(line: 2707, column: 23, scope: !9308)
!9318 = !DILocation(line: 2707, column: 28, scope: !9308)
!9319 = !DILocation(line: 2707, column: 41, scope: !9308)
!9320 = !DILocation(line: 2707, column: 8, scope: !9308)
!9321 = !DILocation(line: 2708, column: 6, scope: !9309)
!9322 = !DILocation(line: 2709, column: 16, scope: !9299)
!9323 = !DILocation(line: 2709, column: 20, scope: !9299)
!9324 = !DILocation(line: 2709, column: 30, scope: !9299)
!9325 = !DILocation(line: 2709, column: 6, scope: !9299)
!9326 = !DILocation(line: 2711, column: 10, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2711, column: 10)
!9328 = !DILocation(line: 2711, column: 16, scope: !9327)
!9329 = !DILocation(line: 2711, column: 24, scope: !9327)
!9330 = !DILocation(line: 2711, column: 44, scope: !9327)
!9331 = !DILocation(line: 2711, column: 47, scope: !9327)
!9332 = !DILocation(line: 2711, column: 51, scope: !9327)
!9333 = !DILocation(line: 2711, column: 10, scope: !9299)
!9334 = !DILocation(line: 2713, column: 16, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 2711, column: 55)
!9336 = !DILocation(line: 2713, column: 24, scope: !9335)
!9337 = !DILocation(line: 2713, column: 28, scope: !9335)
!9338 = !DILocation(line: 2713, column: 32, scope: !9335)
!9339 = !DILocation(line: 2713, column: 22, scope: !9335)
!9340 = !DILocation(line: 2713, column: 46, scope: !9335)
!9341 = !DILocation(line: 2713, column: 50, scope: !9335)
!9342 = !DILocation(line: 2713, column: 54, scope: !9335)
!9343 = !DILocation(line: 2713, column: 64, scope: !9335)
!9344 = !DILocation(line: 2713, column: 68, scope: !9335)
!9345 = !DILocation(line: 2713, column: 72, scope: !9335)
!9346 = !DILocation(line: 2713, column: 63, scope: !9335)
!9347 = !DILocation(line: 2713, column: 43, scope: !9335)
!9348 = !DILocation(line: 2713, column: 83, scope: !9335)
!9349 = !DILocation(line: 2713, column: 90, scope: !9335)
!9350 = !DILocation(line: 2713, column: 7, scope: !9335)
!9351 = !DILocation(line: 2713, column: 13, scope: !9335)
!9352 = !DILocation(line: 2714, column: 16, scope: !9335)
!9353 = !DILocation(line: 2714, column: 24, scope: !9335)
!9354 = !DILocation(line: 2714, column: 28, scope: !9335)
!9355 = !DILocation(line: 2714, column: 32, scope: !9335)
!9356 = !DILocation(line: 2714, column: 22, scope: !9335)
!9357 = !DILocation(line: 2714, column: 46, scope: !9335)
!9358 = !DILocation(line: 2714, column: 50, scope: !9335)
!9359 = !DILocation(line: 2714, column: 54, scope: !9335)
!9360 = !DILocation(line: 2714, column: 64, scope: !9335)
!9361 = !DILocation(line: 2714, column: 68, scope: !9335)
!9362 = !DILocation(line: 2714, column: 72, scope: !9335)
!9363 = !DILocation(line: 2714, column: 63, scope: !9335)
!9364 = !DILocation(line: 2714, column: 43, scope: !9335)
!9365 = !DILocation(line: 2714, column: 83, scope: !9335)
!9366 = !DILocation(line: 2714, column: 90, scope: !9335)
!9367 = !DILocation(line: 2714, column: 7, scope: !9335)
!9368 = !DILocation(line: 2714, column: 13, scope: !9335)
!9369 = !DILocation(line: 2715, column: 16, scope: !9335)
!9370 = !DILocation(line: 2715, column: 24, scope: !9335)
!9371 = !DILocation(line: 2715, column: 28, scope: !9335)
!9372 = !DILocation(line: 2715, column: 32, scope: !9335)
!9373 = !DILocation(line: 2715, column: 22, scope: !9335)
!9374 = !DILocation(line: 2715, column: 46, scope: !9335)
!9375 = !DILocation(line: 2715, column: 50, scope: !9335)
!9376 = !DILocation(line: 2715, column: 54, scope: !9335)
!9377 = !DILocation(line: 2715, column: 64, scope: !9335)
!9378 = !DILocation(line: 2715, column: 68, scope: !9335)
!9379 = !DILocation(line: 2715, column: 72, scope: !9335)
!9380 = !DILocation(line: 2715, column: 63, scope: !9335)
!9381 = !DILocation(line: 2715, column: 43, scope: !9335)
!9382 = !DILocation(line: 2715, column: 83, scope: !9335)
!9383 = !DILocation(line: 2715, column: 90, scope: !9335)
!9384 = !DILocation(line: 2715, column: 7, scope: !9335)
!9385 = !DILocation(line: 2715, column: 13, scope: !9335)
!9386 = !DILocation(line: 2716, column: 6, scope: !9335)
!9387 = !DILocation(line: 2717, column: 5, scope: !9299)
!9388 = !DILocation(line: 2718, column: 4, scope: !9291)
!9389 = !DILocation(line: 2720, column: 13, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 2720, column: 13)
!9391 = !DILocation(line: 2720, column: 19, scope: !9390)
!9392 = !DILocation(line: 2720, column: 24, scope: !9390)
!9393 = !DILocation(line: 2720, column: 13, scope: !9286)
!9394 = !DILocation(line: 2722, column: 9, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2722, column: 9)
!9396 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 2720, column: 38)
!9397 = !DILocation(line: 2722, column: 15, scope: !9395)
!9398 = !DILocation(line: 2722, column: 23, scope: !9395)
!9399 = !DILocation(line: 2722, column: 9, scope: !9396)
!9400 = !DILocation(line: 2723, column: 17, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 2722, column: 43)
!9402 = !DILocation(line: 2723, column: 21, scope: !9401)
!9403 = !DILocation(line: 2723, column: 26, scope: !9401)
!9404 = !DILocation(line: 2723, column: 6, scope: !9401)
!9405 = !DILocation(line: 2724, column: 5, scope: !9401)
!9406 = !DILocalVariable(name: "ob", scope: !9407, file: !3, line: 2726, type: !2935)
!9407 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 2725, column: 10)
!9408 = !DILocation(line: 2726, column: 14, scope: !9407)
!9409 = !DILocation(line: 2726, column: 18, scope: !9407)
!9410 = !DILocation(line: 2726, column: 23, scope: !9407)
!9411 = !DILocation(line: 2726, column: 28, scope: !9407)
!9412 = !DILocation(line: 2727, column: 17, scope: !9407)
!9413 = !DILocation(line: 2727, column: 21, scope: !9407)
!9414 = !DILocation(line: 2727, column: 6, scope: !9407)
!9415 = !DILocation(line: 2728, column: 16, scope: !9407)
!9416 = !DILocation(line: 2728, column: 20, scope: !9407)
!9417 = !DILocation(line: 2728, column: 30, scope: !9407)
!9418 = !DILocation(line: 2728, column: 6, scope: !9407)
!9419 = !DILocation(line: 2730, column: 10, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 2730, column: 10)
!9421 = !DILocation(line: 2730, column: 16, scope: !9420)
!9422 = !DILocation(line: 2730, column: 24, scope: !9420)
!9423 = !DILocation(line: 2730, column: 44, scope: !9420)
!9424 = !DILocation(line: 2730, column: 47, scope: !9420)
!9425 = !DILocation(line: 2730, column: 51, scope: !9420)
!9426 = !DILocation(line: 2730, column: 10, scope: !9407)
!9427 = !DILocation(line: 2732, column: 16, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 2730, column: 55)
!9429 = !DILocation(line: 2732, column: 24, scope: !9428)
!9430 = !DILocation(line: 2732, column: 28, scope: !9428)
!9431 = !DILocation(line: 2732, column: 32, scope: !9428)
!9432 = !DILocation(line: 2732, column: 22, scope: !9428)
!9433 = !DILocation(line: 2732, column: 46, scope: !9428)
!9434 = !DILocation(line: 2732, column: 50, scope: !9428)
!9435 = !DILocation(line: 2732, column: 54, scope: !9428)
!9436 = !DILocation(line: 2732, column: 64, scope: !9428)
!9437 = !DILocation(line: 2732, column: 68, scope: !9428)
!9438 = !DILocation(line: 2732, column: 72, scope: !9428)
!9439 = !DILocation(line: 2732, column: 63, scope: !9428)
!9440 = !DILocation(line: 2732, column: 43, scope: !9428)
!9441 = !DILocation(line: 2732, column: 83, scope: !9428)
!9442 = !DILocation(line: 2732, column: 90, scope: !9428)
!9443 = !DILocation(line: 2732, column: 7, scope: !9428)
!9444 = !DILocation(line: 2732, column: 13, scope: !9428)
!9445 = !DILocation(line: 2733, column: 16, scope: !9428)
!9446 = !DILocation(line: 2733, column: 24, scope: !9428)
!9447 = !DILocation(line: 2733, column: 28, scope: !9428)
!9448 = !DILocation(line: 2733, column: 32, scope: !9428)
!9449 = !DILocation(line: 2733, column: 22, scope: !9428)
!9450 = !DILocation(line: 2733, column: 46, scope: !9428)
!9451 = !DILocation(line: 2733, column: 50, scope: !9428)
!9452 = !DILocation(line: 2733, column: 54, scope: !9428)
!9453 = !DILocation(line: 2733, column: 64, scope: !9428)
!9454 = !DILocation(line: 2733, column: 68, scope: !9428)
!9455 = !DILocation(line: 2733, column: 72, scope: !9428)
!9456 = !DILocation(line: 2733, column: 63, scope: !9428)
!9457 = !DILocation(line: 2733, column: 43, scope: !9428)
!9458 = !DILocation(line: 2733, column: 83, scope: !9428)
!9459 = !DILocation(line: 2733, column: 90, scope: !9428)
!9460 = !DILocation(line: 2733, column: 7, scope: !9428)
!9461 = !DILocation(line: 2733, column: 13, scope: !9428)
!9462 = !DILocation(line: 2734, column: 16, scope: !9428)
!9463 = !DILocation(line: 2734, column: 24, scope: !9428)
!9464 = !DILocation(line: 2734, column: 28, scope: !9428)
!9465 = !DILocation(line: 2734, column: 32, scope: !9428)
!9466 = !DILocation(line: 2734, column: 22, scope: !9428)
!9467 = !DILocation(line: 2734, column: 46, scope: !9428)
!9468 = !DILocation(line: 2734, column: 50, scope: !9428)
!9469 = !DILocation(line: 2734, column: 54, scope: !9428)
!9470 = !DILocation(line: 2734, column: 64, scope: !9428)
!9471 = !DILocation(line: 2734, column: 68, scope: !9428)
!9472 = !DILocation(line: 2734, column: 72, scope: !9428)
!9473 = !DILocation(line: 2734, column: 63, scope: !9428)
!9474 = !DILocation(line: 2734, column: 43, scope: !9428)
!9475 = !DILocation(line: 2734, column: 83, scope: !9428)
!9476 = !DILocation(line: 2734, column: 90, scope: !9428)
!9477 = !DILocation(line: 2734, column: 7, scope: !9428)
!9478 = !DILocation(line: 2734, column: 13, scope: !9428)
!9479 = !DILocation(line: 2735, column: 6, scope: !9428)
!9480 = !DILocation(line: 2737, column: 4, scope: !9396)
!9481 = !DILocation(line: 2738, column: 13, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 2738, column: 13)
!9483 = !DILocation(line: 2738, column: 19, scope: !9482)
!9484 = !DILocation(line: 2738, column: 24, scope: !9482)
!9485 = !DILocation(line: 2738, column: 13, scope: !9390)
!9486 = !DILocation(line: 2739, column: 16, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 2738, column: 38)
!9488 = !DILocation(line: 2739, column: 20, scope: !9487)
!9489 = !DILocation(line: 2739, column: 5, scope: !9487)
!9490 = !DILocation(line: 2740, column: 15, scope: !9487)
!9491 = !DILocation(line: 2740, column: 19, scope: !9487)
!9492 = !DILocation(line: 2740, column: 28, scope: !9487)
!9493 = !DILocation(line: 2740, column: 5, scope: !9487)
!9494 = !DILocation(line: 2741, column: 4, scope: !9487)
!9495 = !DILocation(line: 2743, column: 5, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 2742, column: 9)
!9497 = !DILocation(line: 2746, column: 11, scope: !9265)
!9498 = !DILocation(line: 2746, column: 14, scope: !9265)
!9499 = !DILocation(line: 2748, column: 8, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2748, column: 8)
!9501 = !DILocation(line: 2748, column: 13, scope: !9500)
!9502 = !DILocation(line: 2748, column: 18, scope: !9500)
!9503 = !DILocation(line: 2748, column: 8, scope: !9265)
!9504 = !DILocation(line: 2749, column: 5, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 2748, column: 32)
!9506 = !DILocation(line: 2754, column: 9, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2754, column: 9)
!9508 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 2752, column: 9)
!9509 = !DILocation(line: 2754, column: 15, scope: !9507)
!9510 = !DILocation(line: 2754, column: 9, scope: !9508)
!9511 = !DILocation(line: 2754, column: 33, scope: !9507)
!9512 = !DILocation(line: 2754, column: 39, scope: !9507)
!9513 = !DILocation(line: 2754, column: 51, scope: !9507)
!9514 = !DILocation(line: 2754, column: 57, scope: !9507)
!9515 = !DILocation(line: 2754, column: 62, scope: !9507)
!9516 = !DILocation(line: 2754, column: 48, scope: !9507)
!9517 = !DILocation(line: 2754, column: 66, scope: !9507)
!9518 = !DILocation(line: 2754, column: 72, scope: !9507)
!9519 = !DILocation(line: 2754, column: 65, scope: !9507)
!9520 = !DILocation(line: 2754, column: 46, scope: !9507)
!9521 = !DILocation(line: 2754, column: 22, scope: !9507)
!9522 = !DILocation(line: 2754, column: 31, scope: !9507)
!9523 = !DILocation(line: 2755, column: 21, scope: !9507)
!9524 = !DILocation(line: 2755, column: 27, scope: !9507)
!9525 = !DILocation(line: 2755, column: 36, scope: !9507)
!9526 = !DILocation(line: 2755, column: 42, scope: !9507)
!9527 = !DILocation(line: 2755, column: 34, scope: !9507)
!9528 = !DILocation(line: 2755, column: 10, scope: !9507)
!9529 = !DILocation(line: 2755, column: 19, scope: !9507)
!9530 = !DILocation(line: 2757, column: 9, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2757, column: 9)
!9532 = !DILocation(line: 2757, column: 15, scope: !9531)
!9533 = !DILocation(line: 2757, column: 9, scope: !9508)
!9534 = !DILocation(line: 2757, column: 33, scope: !9531)
!9535 = !DILocation(line: 2757, column: 39, scope: !9531)
!9536 = !DILocation(line: 2757, column: 51, scope: !9531)
!9537 = !DILocation(line: 2757, column: 57, scope: !9531)
!9538 = !DILocation(line: 2757, column: 62, scope: !9531)
!9539 = !DILocation(line: 2757, column: 48, scope: !9531)
!9540 = !DILocation(line: 2757, column: 66, scope: !9531)
!9541 = !DILocation(line: 2757, column: 72, scope: !9531)
!9542 = !DILocation(line: 2757, column: 65, scope: !9531)
!9543 = !DILocation(line: 2757, column: 46, scope: !9531)
!9544 = !DILocation(line: 2757, column: 22, scope: !9531)
!9545 = !DILocation(line: 2757, column: 31, scope: !9531)
!9546 = !DILocation(line: 2758, column: 21, scope: !9531)
!9547 = !DILocation(line: 2758, column: 27, scope: !9531)
!9548 = !DILocation(line: 2758, column: 36, scope: !9531)
!9549 = !DILocation(line: 2758, column: 42, scope: !9531)
!9550 = !DILocation(line: 2758, column: 34, scope: !9531)
!9551 = !DILocation(line: 2758, column: 10, scope: !9531)
!9552 = !DILocation(line: 2758, column: 19, scope: !9531)
!9553 = !DILocation(line: 2760, column: 9, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2760, column: 9)
!9555 = !DILocation(line: 2760, column: 15, scope: !9554)
!9556 = !DILocation(line: 2760, column: 9, scope: !9508)
!9557 = !DILocation(line: 2760, column: 33, scope: !9554)
!9558 = !DILocation(line: 2760, column: 39, scope: !9554)
!9559 = !DILocation(line: 2760, column: 51, scope: !9554)
!9560 = !DILocation(line: 2760, column: 57, scope: !9554)
!9561 = !DILocation(line: 2760, column: 62, scope: !9554)
!9562 = !DILocation(line: 2760, column: 48, scope: !9554)
!9563 = !DILocation(line: 2760, column: 66, scope: !9554)
!9564 = !DILocation(line: 2760, column: 72, scope: !9554)
!9565 = !DILocation(line: 2760, column: 65, scope: !9554)
!9566 = !DILocation(line: 2760, column: 46, scope: !9554)
!9567 = !DILocation(line: 2760, column: 22, scope: !9554)
!9568 = !DILocation(line: 2760, column: 31, scope: !9554)
!9569 = !DILocation(line: 2761, column: 21, scope: !9554)
!9570 = !DILocation(line: 2761, column: 27, scope: !9554)
!9571 = !DILocation(line: 2761, column: 36, scope: !9554)
!9572 = !DILocation(line: 2761, column: 42, scope: !9554)
!9573 = !DILocation(line: 2761, column: 34, scope: !9554)
!9574 = !DILocation(line: 2761, column: 10, scope: !9554)
!9575 = !DILocation(line: 2761, column: 19, scope: !9554)
!9576 = !DILocation(line: 2764, column: 22, scope: !9265)
!9577 = !DILocation(line: 2764, column: 27, scope: !9265)
!9578 = !DILocation(line: 2764, column: 59, scope: !9265)
!9579 = !DILocation(line: 2764, column: 64, scope: !9265)
!9580 = !DILocation(line: 2764, column: 72, scope: !9265)
!9581 = !DILocation(line: 2764, column: 78, scope: !9265)
!9582 = !DILocation(line: 2764, column: 92, scope: !9265)
!9583 = !DILocation(line: 2764, column: 96, scope: !9265)
!9584 = !DILocation(line: 2764, column: 13, scope: !9265)
!9585 = !DILocation(line: 2764, column: 11, scope: !9265)
!9586 = !DILocation(line: 2768, column: 9, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2768, column: 8)
!9588 = !DILocation(line: 2768, column: 16, scope: !9587)
!9589 = !DILocation(line: 2768, column: 27, scope: !9587)
!9590 = !DILocation(line: 2768, column: 31, scope: !9587)
!9591 = !DILocation(line: 2768, column: 37, scope: !9587)
!9592 = !DILocation(line: 2768, column: 45, scope: !9587)
!9593 = !DILocation(line: 2768, column: 8, scope: !9265)
!9594 = !DILocation(line: 2769, column: 43, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 2768, column: 63)
!9596 = !DILocation(line: 2769, column: 18, scope: !9595)
!9597 = !DILocation(line: 2769, column: 12, scope: !9595)
!9598 = !DILocation(line: 2769, column: 16, scope: !9595)
!9599 = !DILocation(line: 2770, column: 12, scope: !9595)
!9600 = !DILocation(line: 2771, column: 4, scope: !9595)
!9601 = !DILocation(line: 2772, column: 8, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2772, column: 8)
!9603 = !DILocation(line: 2772, column: 14, scope: !9602)
!9604 = !DILocation(line: 2772, column: 22, scope: !9602)
!9605 = !DILocation(line: 2772, column: 8, scope: !9265)
!9606 = !DILocation(line: 2773, column: 9, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 2773, column: 9)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 2772, column: 39)
!9609 = !DILocation(line: 2773, column: 16, scope: !9607)
!9610 = !DILocation(line: 2773, column: 9, scope: !9608)
!9611 = !DILocation(line: 2774, column: 29, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 2773, column: 27)
!9613 = !DILocation(line: 2774, column: 21, scope: !9612)
!9614 = !DILocation(line: 2774, column: 13, scope: !9612)
!9615 = !DILocation(line: 2774, column: 15, scope: !9612)
!9616 = !DILocation(line: 2775, column: 29, scope: !9612)
!9617 = !DILocation(line: 2775, column: 21, scope: !9612)
!9618 = !DILocation(line: 2775, column: 13, scope: !9612)
!9619 = !DILocation(line: 2775, column: 15, scope: !9612)
!9620 = !DILocation(line: 2776, column: 29, scope: !9612)
!9621 = !DILocation(line: 2776, column: 21, scope: !9612)
!9622 = !DILocation(line: 2776, column: 13, scope: !9612)
!9623 = !DILocation(line: 2776, column: 15, scope: !9612)
!9624 = !DILocation(line: 2777, column: 5, scope: !9612)
!9625 = !DILocation(line: 2778, column: 29, scope: !9608)
!9626 = !DILocation(line: 2778, column: 21, scope: !9608)
!9627 = !DILocation(line: 2778, column: 12, scope: !9608)
!9628 = !DILocation(line: 2778, column: 15, scope: !9608)
!9629 = !DILocation(line: 2779, column: 4, scope: !9608)
!9630 = !DILocation(line: 2780, column: 8, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2780, column: 8)
!9632 = !DILocation(line: 2780, column: 14, scope: !9631)
!9633 = !DILocation(line: 2780, column: 22, scope: !9631)
!9634 = !DILocation(line: 2780, column: 8, scope: !9265)
!9635 = !DILocation(line: 2781, column: 9, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 2781, column: 9)
!9637 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 2780, column: 38)
!9638 = !DILocation(line: 2781, column: 16, scope: !9636)
!9639 = !DILocation(line: 2781, column: 9, scope: !9637)
!9640 = !DILocation(line: 2782, column: 19, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2781, column: 27)
!9642 = !DILocation(line: 2782, column: 10, scope: !9641)
!9643 = !DILocation(line: 2783, column: 18, scope: !9641)
!9644 = !DILocation(line: 2783, column: 13, scope: !9641)
!9645 = !DILocation(line: 2783, column: 15, scope: !9641)
!9646 = !DILocation(line: 2784, column: 19, scope: !9641)
!9647 = !DILocation(line: 2784, column: 16, scope: !9641)
!9648 = !DILocation(line: 2785, column: 5, scope: !9641)
!9649 = !DILocation(line: 2787, column: 19, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2786, column: 10)
!9651 = !DILocation(line: 2787, column: 10, scope: !9650)
!9652 = !DILocation(line: 2788, column: 19, scope: !9650)
!9653 = !DILocation(line: 2788, column: 13, scope: !9650)
!9654 = !DILocation(line: 2788, column: 16, scope: !9650)
!9655 = !DILocation(line: 2789, column: 19, scope: !9650)
!9656 = !DILocation(line: 2789, column: 16, scope: !9650)
!9657 = !DILocation(line: 2791, column: 4, scope: !9637)
!9658 = !DILocation(line: 2794, column: 9, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2794, column: 8)
!9660 = !DILocation(line: 2794, column: 20, scope: !9659)
!9661 = !DILocation(line: 2794, column: 82, scope: !9659)
!9662 = !DILocation(line: 2794, column: 86, scope: !9659)
!9663 = !DILocation(line: 2794, column: 92, scope: !9659)
!9664 = !DILocation(line: 2794, column: 98, scope: !9659)
!9665 = !DILocation(line: 2794, column: 8, scope: !9265)
!9666 = !DILocalVariable(name: "tcol", scope: !9667, file: !3, line: 2795, type: !344)
!9667 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2794, column: 161)
!9668 = !DILocation(line: 2795, column: 11, scope: !9667)
!9669 = !DILocation(line: 2799, column: 10, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2799, column: 9)
!9671 = !DILocation(line: 2799, column: 17, scope: !9670)
!9672 = !DILocation(line: 2799, column: 28, scope: !9670)
!9673 = !DILocation(line: 2799, column: 9, scope: !9667)
!9674 = !DILocation(line: 2800, column: 17, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 2799, column: 34)
!9676 = !DILocation(line: 2800, column: 24, scope: !9675)
!9677 = !DILocation(line: 2800, column: 30, scope: !9675)
!9678 = !DILocation(line: 2800, column: 6, scope: !9675)
!9679 = !DILocation(line: 2801, column: 5, scope: !9675)
!9680 = !DILocation(line: 2802, column: 14, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 2802, column: 14)
!9682 = !DILocation(line: 2802, column: 20, scope: !9681)
!9683 = !DILocation(line: 2802, column: 26, scope: !9681)
!9684 = !DILocation(line: 2802, column: 14, scope: !9670)
!9685 = !DILocation(line: 2803, column: 17, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2802, column: 41)
!9687 = !DILocation(line: 2803, column: 31, scope: !9686)
!9688 = !DILocation(line: 2803, column: 6, scope: !9686)
!9689 = !DILocation(line: 2804, column: 17, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 2804, column: 10)
!9691 = !DILocation(line: 2804, column: 10, scope: !9690)
!9692 = !DILocation(line: 2804, column: 10, scope: !9686)
!9693 = !DILocation(line: 2805, column: 20, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 2804, column: 25)
!9695 = !DILocation(line: 2805, column: 14, scope: !9694)
!9696 = !DILocation(line: 2805, column: 18, scope: !9694)
!9697 = !DILocation(line: 2806, column: 6, scope: !9694)
!9698 = !DILocation(line: 2807, column: 5, scope: !9686)
!9699 = !DILocation(line: 2809, column: 17, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 2808, column: 10)
!9701 = !DILocation(line: 2809, column: 31, scope: !9700)
!9702 = !DILocation(line: 2809, column: 6, scope: !9700)
!9703 = !DILocation(line: 2810, column: 17, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2810, column: 10)
!9705 = !DILocation(line: 2810, column: 10, scope: !9704)
!9706 = !DILocation(line: 2810, column: 10, scope: !9700)
!9707 = !DILocation(line: 2811, column: 26, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2810, column: 25)
!9709 = !DILocation(line: 2811, column: 14, scope: !9708)
!9710 = !DILocation(line: 2811, column: 17, scope: !9708)
!9711 = !DILocation(line: 2812, column: 6, scope: !9708)
!9712 = !DILocation(line: 2816, column: 10, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2816, column: 9)
!9714 = !DILocation(line: 2816, column: 21, scope: !9713)
!9715 = !DILocation(line: 2816, column: 41, scope: !9713)
!9716 = !DILocation(line: 2816, column: 45, scope: !9713)
!9717 = !DILocation(line: 2816, column: 51, scope: !9713)
!9718 = !DILocation(line: 2816, column: 57, scope: !9713)
!9719 = !DILocation(line: 2816, column: 9, scope: !9667)
!9720 = !DILocalVariable(name: "colemitfac", scope: !9721, file: !3, line: 2817, type: !91)
!9721 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 2816, column: 78)
!9722 = !DILocation(line: 2817, column: 12, scope: !9721)
!9723 = !DILocation(line: 2817, column: 24, scope: !9721)
!9724 = !DILocation(line: 2817, column: 30, scope: !9721)
!9725 = !DILocation(line: 2817, column: 41, scope: !9721)
!9726 = !DILocation(line: 2817, column: 40, scope: !9721)
!9727 = !DILocation(line: 2818, column: 24, scope: !9721)
!9728 = !DILocation(line: 2818, column: 31, scope: !9721)
!9729 = !DILocation(line: 2818, column: 37, scope: !9721)
!9730 = !DILocation(line: 2818, column: 51, scope: !9721)
!9731 = !DILocation(line: 2818, column: 56, scope: !9721)
!9732 = !DILocation(line: 2818, column: 68, scope: !9721)
!9733 = !DILocation(line: 2818, column: 74, scope: !9721)
!9734 = !DILocation(line: 2818, column: 6, scope: !9721)
!9735 = !DILocation(line: 2819, column: 5, scope: !9721)
!9736 = !DILocation(line: 2821, column: 10, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2821, column: 9)
!9738 = !DILocation(line: 2821, column: 21, scope: !9737)
!9739 = !DILocation(line: 2821, column: 43, scope: !9737)
!9740 = !DILocation(line: 2821, column: 47, scope: !9737)
!9741 = !DILocation(line: 2821, column: 53, scope: !9737)
!9742 = !DILocation(line: 2821, column: 59, scope: !9737)
!9743 = !DILocation(line: 2821, column: 9, scope: !9667)
!9744 = !DILocalVariable(name: "colreflfac", scope: !9745, file: !3, line: 2822, type: !91)
!9745 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 2821, column: 82)
!9746 = !DILocation(line: 2822, column: 12, scope: !9745)
!9747 = !DILocation(line: 2822, column: 24, scope: !9745)
!9748 = !DILocation(line: 2822, column: 30, scope: !9745)
!9749 = !DILocation(line: 2822, column: 41, scope: !9745)
!9750 = !DILocation(line: 2822, column: 40, scope: !9745)
!9751 = !DILocation(line: 2823, column: 24, scope: !9745)
!9752 = !DILocation(line: 2823, column: 31, scope: !9745)
!9753 = !DILocation(line: 2823, column: 37, scope: !9745)
!9754 = !DILocation(line: 2823, column: 51, scope: !9745)
!9755 = !DILocation(line: 2823, column: 56, scope: !9745)
!9756 = !DILocation(line: 2823, column: 68, scope: !9745)
!9757 = !DILocation(line: 2823, column: 74, scope: !9745)
!9758 = !DILocation(line: 2823, column: 6, scope: !9745)
!9759 = !DILocation(line: 2824, column: 5, scope: !9745)
!9760 = !DILocation(line: 2826, column: 10, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2826, column: 9)
!9762 = !DILocation(line: 2826, column: 21, scope: !9761)
!9763 = !DILocation(line: 2826, column: 45, scope: !9761)
!9764 = !DILocation(line: 2826, column: 49, scope: !9761)
!9765 = !DILocation(line: 2826, column: 55, scope: !9761)
!9766 = !DILocation(line: 2826, column: 61, scope: !9761)
!9767 = !DILocation(line: 2826, column: 9, scope: !9667)
!9768 = !DILocalVariable(name: "coltransfac", scope: !9769, file: !3, line: 2827, type: !91)
!9769 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 2826, column: 86)
!9770 = !DILocation(line: 2827, column: 12, scope: !9769)
!9771 = !DILocation(line: 2827, column: 25, scope: !9769)
!9772 = !DILocation(line: 2827, column: 31, scope: !9769)
!9773 = !DILocation(line: 2827, column: 43, scope: !9769)
!9774 = !DILocation(line: 2827, column: 42, scope: !9769)
!9775 = !DILocation(line: 2828, column: 24, scope: !9769)
!9776 = !DILocation(line: 2828, column: 31, scope: !9769)
!9777 = !DILocation(line: 2828, column: 37, scope: !9769)
!9778 = !DILocation(line: 2828, column: 51, scope: !9769)
!9779 = !DILocation(line: 2828, column: 56, scope: !9769)
!9780 = !DILocation(line: 2828, column: 69, scope: !9769)
!9781 = !DILocation(line: 2828, column: 75, scope: !9769)
!9782 = !DILocation(line: 2828, column: 6, scope: !9769)
!9783 = !DILocation(line: 2829, column: 5, scope: !9769)
!9784 = !DILocation(line: 2830, column: 4, scope: !9667)
!9785 = !DILocation(line: 2832, column: 9, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 2832, column: 8)
!9787 = !DILocation(line: 2832, column: 20, scope: !9786)
!9788 = !DILocation(line: 2832, column: 32, scope: !9786)
!9789 = !DILocation(line: 2832, column: 36, scope: !9786)
!9790 = !DILocation(line: 2832, column: 42, scope: !9786)
!9791 = !DILocation(line: 2832, column: 48, scope: !9786)
!9792 = !DILocation(line: 2832, column: 8, scope: !9265)
!9793 = !DILocation(line: 2836, column: 9, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2836, column: 9)
!9795 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 2832, column: 61)
!9796 = !DILocation(line: 2836, column: 16, scope: !9794)
!9797 = !DILocation(line: 2836, column: 9, scope: !9795)
!9798 = !DILocation(line: 2837, column: 17, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 2837, column: 10)
!9800 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 2836, column: 27)
!9801 = !DILocation(line: 2837, column: 10, scope: !9799)
!9802 = !DILocation(line: 2837, column: 10, scope: !9800)
!9803 = !DILocation(line: 2837, column: 46, scope: !9799)
!9804 = !DILocation(line: 2837, column: 33, scope: !9799)
!9805 = !DILocation(line: 2837, column: 37, scope: !9799)
!9806 = !DILocation(line: 2837, column: 26, scope: !9799)
!9807 = !DILocation(line: 2838, column: 64, scope: !9799)
!9808 = !DILocation(line: 2838, column: 39, scope: !9799)
!9809 = !DILocation(line: 2838, column: 33, scope: !9799)
!9810 = !DILocation(line: 2838, column: 37, scope: !9799)
!9811 = !DILocation(line: 2839, column: 5, scope: !9800)
!9812 = !DILocation(line: 2841, column: 10, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2841, column: 9)
!9814 = !DILocation(line: 2841, column: 21, scope: !9813)
!9815 = !DILocation(line: 2841, column: 37, scope: !9813)
!9816 = !DILocation(line: 2841, column: 41, scope: !9813)
!9817 = !DILocation(line: 2841, column: 47, scope: !9813)
!9818 = !DILocation(line: 2841, column: 53, scope: !9813)
!9819 = !DILocation(line: 2841, column: 9, scope: !9795)
!9820 = !DILocalVariable(name: "emitfac", scope: !9821, file: !3, line: 2842, type: !91)
!9821 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2841, column: 70)
!9822 = !DILocation(line: 2842, column: 12, scope: !9821)
!9823 = !DILocation(line: 2842, column: 21, scope: !9821)
!9824 = !DILocation(line: 2842, column: 27, scope: !9821)
!9825 = !DILocation(line: 2842, column: 35, scope: !9821)
!9826 = !DILocation(line: 2842, column: 34, scope: !9821)
!9827 = !DILocation(line: 2844, column: 33, scope: !9821)
!9828 = !DILocation(line: 2844, column: 39, scope: !9821)
!9829 = !DILocation(line: 2844, column: 49, scope: !9821)
!9830 = !DILocation(line: 2844, column: 48, scope: !9821)
!9831 = !DILocation(line: 2844, column: 61, scope: !9821)
!9832 = !DILocation(line: 2844, column: 66, scope: !9821)
!9833 = !DILocation(line: 2844, column: 75, scope: !9821)
!9834 = !DILocation(line: 2844, column: 81, scope: !9821)
!9835 = !DILocation(line: 2844, column: 13, scope: !9821)
!9836 = !DILocation(line: 2844, column: 7, scope: !9821)
!9837 = !DILocation(line: 2844, column: 11, scope: !9821)
!9838 = !DILocation(line: 2845, column: 11, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 2845, column: 10)
!9840 = !DILocation(line: 2845, column: 10, scope: !9839)
!9841 = !DILocation(line: 2845, column: 14, scope: !9839)
!9842 = !DILocation(line: 2845, column: 10, scope: !9821)
!9843 = !DILocation(line: 2845, column: 22, scope: !9839)
!9844 = !DILocation(line: 2845, column: 25, scope: !9839)
!9845 = !DILocation(line: 2845, column: 21, scope: !9839)
!9846 = !DILocation(line: 2846, column: 5, scope: !9821)
!9847 = !DILocation(line: 2847, column: 10, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2847, column: 9)
!9849 = !DILocation(line: 2847, column: 21, scope: !9848)
!9850 = !DILocation(line: 2847, column: 36, scope: !9848)
!9851 = !DILocation(line: 2847, column: 40, scope: !9848)
!9852 = !DILocation(line: 2847, column: 46, scope: !9848)
!9853 = !DILocation(line: 2847, column: 52, scope: !9848)
!9854 = !DILocation(line: 2847, column: 9, scope: !9795)
!9855 = !DILocalVariable(name: "densfac", scope: !9856, file: !3, line: 2848, type: !91)
!9856 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 2847, column: 68)
!9857 = !DILocation(line: 2848, column: 12, scope: !9856)
!9858 = !DILocation(line: 2848, column: 21, scope: !9856)
!9859 = !DILocation(line: 2848, column: 27, scope: !9856)
!9860 = !DILocation(line: 2848, column: 35, scope: !9856)
!9861 = !DILocation(line: 2848, column: 34, scope: !9856)
!9862 = !DILocation(line: 2850, column: 33, scope: !9856)
!9863 = !DILocation(line: 2850, column: 39, scope: !9856)
!9864 = !DILocation(line: 2850, column: 49, scope: !9856)
!9865 = !DILocation(line: 2850, column: 48, scope: !9856)
!9866 = !DILocation(line: 2850, column: 61, scope: !9856)
!9867 = !DILocation(line: 2850, column: 66, scope: !9856)
!9868 = !DILocation(line: 2850, column: 75, scope: !9856)
!9869 = !DILocation(line: 2850, column: 81, scope: !9856)
!9870 = !DILocation(line: 2850, column: 13, scope: !9856)
!9871 = !DILocation(line: 2850, column: 7, scope: !9856)
!9872 = !DILocation(line: 2850, column: 11, scope: !9856)
!9873 = !DILocation(line: 2851, column: 6, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 2851, column: 6)
!9875 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 2851, column: 6)
!9876 = !DILocation(line: 2851, column: 6, scope: !9875)
!9877 = !DILocation(line: 2851, column: 6, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 2851, column: 6)
!9879 = !DILocation(line: 2852, column: 5, scope: !9856)
!9880 = !DILocation(line: 2853, column: 10, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2853, column: 9)
!9882 = !DILocation(line: 2853, column: 21, scope: !9881)
!9883 = !DILocation(line: 2853, column: 39, scope: !9881)
!9884 = !DILocation(line: 2853, column: 43, scope: !9881)
!9885 = !DILocation(line: 2853, column: 49, scope: !9881)
!9886 = !DILocation(line: 2853, column: 55, scope: !9881)
!9887 = !DILocation(line: 2853, column: 9, scope: !9795)
!9888 = !DILocalVariable(name: "scatterfac", scope: !9889, file: !3, line: 2854, type: !91)
!9889 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 2853, column: 74)
!9890 = !DILocation(line: 2854, column: 12, scope: !9889)
!9891 = !DILocation(line: 2854, column: 24, scope: !9889)
!9892 = !DILocation(line: 2854, column: 30, scope: !9889)
!9893 = !DILocation(line: 2854, column: 41, scope: !9889)
!9894 = !DILocation(line: 2854, column: 40, scope: !9889)
!9895 = !DILocation(line: 2856, column: 33, scope: !9889)
!9896 = !DILocation(line: 2856, column: 39, scope: !9889)
!9897 = !DILocation(line: 2856, column: 49, scope: !9889)
!9898 = !DILocation(line: 2856, column: 48, scope: !9889)
!9899 = !DILocation(line: 2856, column: 61, scope: !9889)
!9900 = !DILocation(line: 2856, column: 66, scope: !9889)
!9901 = !DILocation(line: 2856, column: 78, scope: !9889)
!9902 = !DILocation(line: 2856, column: 84, scope: !9889)
!9903 = !DILocation(line: 2856, column: 13, scope: !9889)
!9904 = !DILocation(line: 2856, column: 7, scope: !9889)
!9905 = !DILocation(line: 2856, column: 11, scope: !9889)
!9906 = !DILocation(line: 2857, column: 6, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !3, line: 2857, column: 6)
!9908 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 2857, column: 6)
!9909 = !DILocation(line: 2857, column: 6, scope: !9908)
!9910 = !DILocation(line: 2857, column: 6, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 2857, column: 6)
!9912 = !DILocation(line: 2858, column: 5, scope: !9889)
!9913 = !DILocation(line: 2859, column: 10, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 2859, column: 9)
!9915 = !DILocation(line: 2859, column: 21, scope: !9914)
!9916 = !DILocation(line: 2859, column: 39, scope: !9914)
!9917 = !DILocation(line: 2859, column: 43, scope: !9914)
!9918 = !DILocation(line: 2859, column: 49, scope: !9914)
!9919 = !DILocation(line: 2859, column: 55, scope: !9914)
!9920 = !DILocation(line: 2859, column: 9, scope: !9795)
!9921 = !DILocalVariable(name: "reflfac", scope: !9922, file: !3, line: 2860, type: !91)
!9922 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 2859, column: 74)
!9923 = !DILocation(line: 2860, column: 12, scope: !9922)
!9924 = !DILocation(line: 2860, column: 21, scope: !9922)
!9925 = !DILocation(line: 2860, column: 27, scope: !9922)
!9926 = !DILocation(line: 2860, column: 35, scope: !9922)
!9927 = !DILocation(line: 2860, column: 34, scope: !9922)
!9928 = !DILocation(line: 2862, column: 33, scope: !9922)
!9929 = !DILocation(line: 2862, column: 39, scope: !9922)
!9930 = !DILocation(line: 2862, column: 49, scope: !9922)
!9931 = !DILocation(line: 2862, column: 48, scope: !9922)
!9932 = !DILocation(line: 2862, column: 61, scope: !9922)
!9933 = !DILocation(line: 2862, column: 66, scope: !9922)
!9934 = !DILocation(line: 2862, column: 75, scope: !9922)
!9935 = !DILocation(line: 2862, column: 81, scope: !9922)
!9936 = !DILocation(line: 2862, column: 13, scope: !9922)
!9937 = !DILocation(line: 2862, column: 7, scope: !9922)
!9938 = !DILocation(line: 2862, column: 11, scope: !9922)
!9939 = !DILocation(line: 2863, column: 6, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 2863, column: 6)
!9941 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 2863, column: 6)
!9942 = !DILocation(line: 2863, column: 6, scope: !9941)
!9943 = !DILocation(line: 2863, column: 6, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 2863, column: 6)
!9945 = !DILocation(line: 2864, column: 5, scope: !9922)
!9946 = !DILocation(line: 2865, column: 4, scope: !9795)
!9947 = !DILocation(line: 2866, column: 3, scope: !9265)
!9948 = !DILocation(line: 2867, column: 2, scope: !9250)
!9949 = !DILocation(line: 2687, column: 40, scope: !9245)
!9950 = !DILocation(line: 2687, column: 2, scope: !9245)
!9951 = distinct !{!9951, !9247, !9952}
!9952 = !DILocation(line: 2867, column: 2, scope: !9242)
!9953 = !DILocation(line: 2868, column: 1, scope: !9201)
!9954 = distinct !DISubprogram(name: "multitex", scope: !3, file: !3, line: 1109, type: !9955, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{!92, !3402, !201, !201, !201, !92, !3576, !956, !141, !2905}
!9957 = !DILocalVariable(name: "tex", arg: 1, scope: !9954, file: !3, line: 1109, type: !3402)
!9958 = !DILocation(line: 1109, column: 26, scope: !9954)
!9959 = !DILocalVariable(name: "texvec", arg: 2, scope: !9954, file: !3, line: 1109, type: !201)
!9960 = !DILocation(line: 1109, column: 37, scope: !9954)
!9961 = !DILocalVariable(name: "dxt", arg: 3, scope: !9954, file: !3, line: 1109, type: !201)
!9962 = !DILocation(line: 1109, column: 54, scope: !9954)
!9963 = !DILocalVariable(name: "dyt", arg: 4, scope: !9954, file: !3, line: 1109, type: !201)
!9964 = !DILocation(line: 1109, column: 68, scope: !9954)
!9965 = !DILocalVariable(name: "osatex", arg: 5, scope: !9954, file: !3, line: 1109, type: !92)
!9966 = !DILocation(line: 1109, column: 80, scope: !9954)
!9967 = !DILocalVariable(name: "texres", arg: 6, scope: !9954, file: !3, line: 1109, type: !3576)
!9968 = !DILocation(line: 1109, column: 99, scope: !9954)
!9969 = !DILocalVariable(name: "thread", arg: 7, scope: !9954, file: !3, line: 1109, type: !956)
!9970 = !DILocation(line: 1109, column: 119, scope: !9954)
!9971 = !DILocalVariable(name: "which_output", arg: 8, scope: !9954, file: !3, line: 1109, type: !141)
!9972 = !DILocation(line: 1109, column: 133, scope: !9954)
!9973 = !DILocalVariable(name: "pool", arg: 9, scope: !9954, file: !3, line: 1109, type: !2905)
!9974 = !DILocation(line: 1109, column: 165, scope: !9954)
!9975 = !DILocalVariable(name: "tmpvec", scope: !9954, file: !3, line: 1111, type: !344)
!9976 = !DILocation(line: 1111, column: 8, scope: !9954)
!9977 = !DILocalVariable(name: "retval", scope: !9954, file: !3, line: 1112, type: !92)
!9978 = !DILocation(line: 1112, column: 6, scope: !9954)
!9979 = !DILocation(line: 1114, column: 2, scope: !9954)
!9980 = !DILocation(line: 1114, column: 10, scope: !9954)
!9981 = !DILocation(line: 1114, column: 17, scope: !9954)
!9982 = !DILocation(line: 1116, column: 6, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1116, column: 6)
!9984 = !DILocation(line: 1116, column: 11, scope: !9983)
!9985 = !DILocation(line: 1116, column: 21, scope: !9983)
!9986 = !DILocation(line: 1116, column: 24, scope: !9983)
!9987 = !DILocation(line: 1116, column: 29, scope: !9983)
!9988 = !DILocation(line: 1116, column: 6, scope: !9954)
!9989 = !DILocation(line: 1117, column: 29, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 1116, column: 39)
!9991 = !DILocation(line: 1117, column: 34, scope: !9990)
!9992 = !DILocation(line: 1117, column: 44, scope: !9990)
!9993 = !DILocation(line: 1117, column: 52, scope: !9990)
!9994 = !DILocation(line: 1117, column: 60, scope: !9990)
!9995 = !DILocation(line: 1117, column: 65, scope: !9990)
!9996 = !DILocation(line: 1117, column: 70, scope: !9990)
!9997 = !DILocation(line: 1117, column: 78, scope: !9990)
!9998 = !DILocation(line: 1118, column: 29, scope: !9990)
!9999 = !DILocation(line: 1118, column: 34, scope: !9990)
!10000 = !DILocation(line: 1118, column: 52, scope: !9990)
!10001 = !DILocation(line: 1118, column: 63, scope: !9990)
!10002 = !DILocation(line: 1118, column: 71, scope: !9990)
!10003 = !DILocation(line: 1118, column: 92, scope: !9990)
!10004 = !DILocation(line: 1117, column: 12, scope: !9990)
!10005 = !DILocation(line: 1117, column: 10, scope: !9990)
!10006 = !DILocation(line: 1119, column: 2, scope: !9990)
!10007 = !DILocation(line: 1121, column: 11, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 1120, column: 7)
!10009 = !DILocation(line: 1121, column: 16, scope: !10008)
!10010 = !DILocation(line: 1121, column: 3, scope: !10008)
!10011 = !DILocation(line: 1123, column: 5, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 1121, column: 22)
!10013 = !DILocation(line: 1123, column: 13, scope: !10012)
!10014 = !DILocation(line: 1123, column: 16, scope: !10012)
!10015 = !DILocation(line: 1124, column: 5, scope: !10012)
!10016 = !DILocation(line: 1126, column: 21, scope: !10012)
!10017 = !DILocation(line: 1126, column: 26, scope: !10012)
!10018 = !DILocation(line: 1126, column: 34, scope: !10012)
!10019 = !DILocation(line: 1126, column: 14, scope: !10012)
!10020 = !DILocation(line: 1126, column: 12, scope: !10012)
!10021 = !DILocation(line: 1127, column: 5, scope: !10012)
!10022 = !DILocation(line: 1129, column: 19, scope: !10012)
!10023 = !DILocation(line: 1129, column: 24, scope: !10012)
!10024 = !DILocation(line: 1129, column: 32, scope: !10012)
!10025 = !DILocation(line: 1129, column: 14, scope: !10012)
!10026 = !DILocation(line: 1129, column: 12, scope: !10012)
!10027 = !DILocation(line: 1130, column: 5, scope: !10012)
!10028 = !DILocation(line: 1132, column: 21, scope: !10012)
!10029 = !DILocation(line: 1132, column: 26, scope: !10012)
!10030 = !DILocation(line: 1132, column: 34, scope: !10012)
!10031 = !DILocation(line: 1132, column: 14, scope: !10012)
!10032 = !DILocation(line: 1132, column: 12, scope: !10012)
!10033 = !DILocation(line: 1133, column: 5, scope: !10012)
!10034 = !DILocation(line: 1135, column: 20, scope: !10012)
!10035 = !DILocation(line: 1135, column: 25, scope: !10012)
!10036 = !DILocation(line: 1135, column: 33, scope: !10012)
!10037 = !DILocation(line: 1135, column: 14, scope: !10012)
!10038 = !DILocation(line: 1135, column: 12, scope: !10012)
!10039 = !DILocation(line: 1136, column: 5, scope: !10012)
!10040 = !DILocation(line: 1138, column: 20, scope: !10012)
!10041 = !DILocation(line: 1138, column: 25, scope: !10012)
!10042 = !DILocation(line: 1138, column: 33, scope: !10012)
!10043 = !DILocation(line: 1138, column: 14, scope: !10012)
!10044 = !DILocation(line: 1138, column: 12, scope: !10012)
!10045 = !DILocation(line: 1139, column: 5, scope: !10012)
!10046 = !DILocation(line: 1141, column: 21, scope: !10012)
!10047 = !DILocation(line: 1141, column: 26, scope: !10012)
!10048 = !DILocation(line: 1141, column: 34, scope: !10012)
!10049 = !DILocation(line: 1141, column: 14, scope: !10012)
!10050 = !DILocation(line: 1141, column: 12, scope: !10012)
!10051 = !DILocation(line: 1142, column: 5, scope: !10012)
!10052 = !DILocation(line: 1144, column: 23, scope: !10012)
!10053 = !DILocation(line: 1144, column: 28, scope: !10012)
!10054 = !DILocation(line: 1144, column: 36, scope: !10012)
!10055 = !DILocation(line: 1144, column: 14, scope: !10012)
!10056 = !DILocation(line: 1144, column: 12, scope: !10012)
!10057 = !DILocation(line: 1145, column: 5, scope: !10012)
!10058 = !DILocation(line: 1147, column: 9, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1147, column: 9)
!10060 = !DILocation(line: 1147, column: 9, scope: !10012)
!10061 = !DILocation(line: 1147, column: 39, scope: !10059)
!10062 = !DILocation(line: 1147, column: 44, scope: !10059)
!10063 = !DILocation(line: 1147, column: 49, scope: !10059)
!10064 = !DILocation(line: 1147, column: 60, scope: !10059)
!10065 = !DILocation(line: 1147, column: 68, scope: !10059)
!10066 = !DILocation(line: 1147, column: 73, scope: !10059)
!10067 = !DILocation(line: 1147, column: 78, scope: !10059)
!10068 = !DILocation(line: 1147, column: 86, scope: !10059)
!10069 = !DILocation(line: 1147, column: 26, scope: !10059)
!10070 = !DILocation(line: 1147, column: 24, scope: !10059)
!10071 = !DILocation(line: 1147, column: 17, scope: !10059)
!10072 = !DILocation(line: 1148, column: 36, scope: !10059)
!10073 = !DILocation(line: 1148, column: 41, scope: !10059)
!10074 = !DILocation(line: 1148, column: 46, scope: !10059)
!10075 = !DILocation(line: 1148, column: 57, scope: !10059)
!10076 = !DILocation(line: 1148, column: 65, scope: !10059)
!10077 = !DILocation(line: 1148, column: 73, scope: !10059)
!10078 = !DILocation(line: 1148, column: 26, scope: !10059)
!10079 = !DILocation(line: 1148, column: 24, scope: !10059)
!10080 = !DILocation(line: 1149, column: 9, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1149, column: 9)
!10082 = !DILocation(line: 1149, column: 14, scope: !10081)
!10083 = !DILocation(line: 1149, column: 9, scope: !10012)
!10084 = !DILocation(line: 1150, column: 25, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 1149, column: 19)
!10086 = !DILocation(line: 1150, column: 30, scope: !10085)
!10087 = !DILocation(line: 1150, column: 6, scope: !10085)
!10088 = !DILocation(line: 1151, column: 5, scope: !10085)
!10089 = !DILocation(line: 1152, column: 5, scope: !10012)
!10090 = !DILocation(line: 1154, column: 24, scope: !10012)
!10091 = !DILocation(line: 1154, column: 29, scope: !10012)
!10092 = !DILocation(line: 1154, column: 37, scope: !10012)
!10093 = !DILocation(line: 1154, column: 42, scope: !10012)
!10094 = !DILocation(line: 1154, column: 47, scope: !10012)
!10095 = !DILocation(line: 1154, column: 55, scope: !10012)
!10096 = !DILocation(line: 1154, column: 63, scope: !10012)
!10097 = !DILocation(line: 1154, column: 14, scope: !10012)
!10098 = !DILocation(line: 1154, column: 12, scope: !10012)
!10099 = !DILocation(line: 1155, column: 5, scope: !10012)
!10100 = !DILocation(line: 1162, column: 16, scope: !10012)
!10101 = !DILocation(line: 1162, column: 24, scope: !10012)
!10102 = !DILocation(line: 1162, column: 5, scope: !10012)
!10103 = !DILocation(line: 1163, column: 15, scope: !10012)
!10104 = !DILocation(line: 1163, column: 30, scope: !10012)
!10105 = !DILocation(line: 1163, column: 35, scope: !10012)
!10106 = !DILocation(line: 1163, column: 28, scope: !10012)
!10107 = !DILocation(line: 1163, column: 5, scope: !10012)
!10108 = !DILocation(line: 1165, column: 13, scope: !10012)
!10109 = !DILocation(line: 1165, column: 18, scope: !10012)
!10110 = !DILocation(line: 1165, column: 5, scope: !10012)
!10111 = !DILocation(line: 1168, column: 36, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1165, column: 25)
!10113 = !DILocation(line: 1168, column: 41, scope: !10112)
!10114 = !DILocation(line: 1168, column: 49, scope: !10112)
!10115 = !DILocation(line: 1168, column: 16, scope: !10112)
!10116 = !DILocation(line: 1168, column: 14, scope: !10112)
!10117 = !DILocation(line: 1169, column: 7, scope: !10112)
!10118 = !DILocation(line: 1172, column: 39, scope: !10112)
!10119 = !DILocation(line: 1172, column: 44, scope: !10112)
!10120 = !DILocation(line: 1172, column: 52, scope: !10112)
!10121 = !DILocation(line: 1172, column: 16, scope: !10112)
!10122 = !DILocation(line: 1172, column: 14, scope: !10112)
!10123 = !DILocation(line: 1173, column: 7, scope: !10112)
!10124 = !DILocation(line: 1175, column: 31, scope: !10112)
!10125 = !DILocation(line: 1175, column: 36, scope: !10112)
!10126 = !DILocation(line: 1175, column: 44, scope: !10112)
!10127 = !DILocation(line: 1175, column: 16, scope: !10112)
!10128 = !DILocation(line: 1175, column: 14, scope: !10112)
!10129 = !DILocation(line: 1176, column: 7, scope: !10112)
!10130 = !DILocation(line: 1178, column: 5, scope: !10012)
!10131 = !DILocation(line: 1184, column: 16, scope: !10012)
!10132 = !DILocation(line: 1184, column: 24, scope: !10012)
!10133 = !DILocation(line: 1184, column: 5, scope: !10012)
!10134 = !DILocation(line: 1185, column: 15, scope: !10012)
!10135 = !DILocation(line: 1185, column: 30, scope: !10012)
!10136 = !DILocation(line: 1185, column: 35, scope: !10012)
!10137 = !DILocation(line: 1185, column: 28, scope: !10012)
!10138 = !DILocation(line: 1185, column: 5, scope: !10012)
!10139 = !DILocation(line: 1187, column: 25, scope: !10012)
!10140 = !DILocation(line: 1187, column: 30, scope: !10012)
!10141 = !DILocation(line: 1187, column: 38, scope: !10012)
!10142 = !DILocation(line: 1187, column: 14, scope: !10012)
!10143 = !DILocation(line: 1187, column: 12, scope: !10012)
!10144 = !DILocation(line: 1188, column: 5, scope: !10012)
!10145 = !DILocation(line: 1193, column: 16, scope: !10012)
!10146 = !DILocation(line: 1193, column: 24, scope: !10012)
!10147 = !DILocation(line: 1193, column: 5, scope: !10012)
!10148 = !DILocation(line: 1194, column: 15, scope: !10012)
!10149 = !DILocation(line: 1194, column: 30, scope: !10012)
!10150 = !DILocation(line: 1194, column: 35, scope: !10012)
!10151 = !DILocation(line: 1194, column: 28, scope: !10012)
!10152 = !DILocation(line: 1194, column: 5, scope: !10012)
!10153 = !DILocation(line: 1196, column: 30, scope: !10012)
!10154 = !DILocation(line: 1196, column: 35, scope: !10012)
!10155 = !DILocation(line: 1196, column: 43, scope: !10012)
!10156 = !DILocation(line: 1196, column: 14, scope: !10012)
!10157 = !DILocation(line: 1196, column: 12, scope: !10012)
!10158 = !DILocation(line: 1197, column: 5, scope: !10012)
!10159 = !DILocation(line: 1199, column: 30, scope: !10012)
!10160 = !DILocation(line: 1199, column: 35, scope: !10012)
!10161 = !DILocation(line: 1199, column: 43, scope: !10012)
!10162 = !DILocation(line: 1199, column: 14, scope: !10012)
!10163 = !DILocation(line: 1199, column: 12, scope: !10012)
!10164 = !DILocation(line: 1200, column: 5, scope: !10012)
!10165 = !DILocation(line: 1202, column: 27, scope: !10012)
!10166 = !DILocation(line: 1202, column: 32, scope: !10012)
!10167 = !DILocation(line: 1202, column: 40, scope: !10012)
!10168 = !DILocation(line: 1202, column: 14, scope: !10012)
!10169 = !DILocation(line: 1202, column: 12, scope: !10012)
!10170 = !DILocation(line: 1203, column: 5, scope: !10012)
!10171 = !DILocation(line: 1205, column: 28, scope: !10012)
!10172 = !DILocation(line: 1205, column: 33, scope: !10012)
!10173 = !DILocation(line: 1205, column: 41, scope: !10012)
!10174 = !DILocation(line: 1205, column: 14, scope: !10012)
!10175 = !DILocation(line: 1205, column: 12, scope: !10012)
!10176 = !DILocation(line: 1206, column: 5, scope: !10012)
!10177 = !DILocation(line: 1210, column: 6, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1210, column: 6)
!10179 = !DILocation(line: 1210, column: 11, scope: !10178)
!10180 = !DILocation(line: 1210, column: 16, scope: !10178)
!10181 = !DILocation(line: 1210, column: 6, scope: !9954)
!10182 = !DILocalVariable(name: "col", scope: !10183, file: !3, line: 1211, type: !426)
!10183 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 1210, column: 33)
!10184 = !DILocation(line: 1211, column: 9, scope: !10183)
!10185 = !DILocation(line: 1212, column: 20, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 1212, column: 7)
!10187 = !DILocation(line: 1212, column: 25, scope: !10186)
!10188 = !DILocation(line: 1212, column: 31, scope: !10186)
!10189 = !DILocation(line: 1212, column: 39, scope: !10186)
!10190 = !DILocation(line: 1212, column: 44, scope: !10186)
!10191 = !DILocation(line: 1212, column: 7, scope: !10186)
!10192 = !DILocation(line: 1212, column: 7, scope: !10183)
!10193 = !DILocation(line: 1213, column: 4, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 1212, column: 50)
!10195 = !DILocation(line: 1213, column: 12, scope: !10194)
!10196 = !DILocation(line: 1213, column: 19, scope: !10194)
!10197 = !DILocation(line: 1214, column: 16, scope: !10194)
!10198 = !DILocation(line: 1214, column: 4, scope: !10194)
!10199 = !DILocation(line: 1214, column: 12, scope: !10194)
!10200 = !DILocation(line: 1214, column: 14, scope: !10194)
!10201 = !DILocation(line: 1215, column: 16, scope: !10194)
!10202 = !DILocation(line: 1215, column: 4, scope: !10194)
!10203 = !DILocation(line: 1215, column: 12, scope: !10194)
!10204 = !DILocation(line: 1215, column: 14, scope: !10194)
!10205 = !DILocation(line: 1216, column: 16, scope: !10194)
!10206 = !DILocation(line: 1216, column: 4, scope: !10194)
!10207 = !DILocation(line: 1216, column: 12, scope: !10194)
!10208 = !DILocation(line: 1216, column: 14, scope: !10194)
!10209 = !DILocation(line: 1217, column: 16, scope: !10194)
!10210 = !DILocation(line: 1217, column: 4, scope: !10194)
!10211 = !DILocation(line: 1217, column: 12, scope: !10194)
!10212 = !DILocation(line: 1217, column: 14, scope: !10194)
!10213 = !DILocation(line: 1218, column: 11, scope: !10194)
!10214 = !DILocation(line: 1219, column: 3, scope: !10194)
!10215 = !DILocation(line: 1220, column: 2, scope: !10183)
!10216 = !DILocation(line: 1221, column: 9, scope: !9954)
!10217 = !DILocation(line: 1221, column: 2, scope: !9954)
!10218 = !DILocation(line: 1222, column: 1, scope: !9954)
!10219 = distinct !DISubprogram(name: "do_halo_tex", scope: !3, file: !3, line: 2873, type: !10220, scopeLine: 2874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{null, !10222, !91, !91, !201}
!10222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10223, size: 64)
!10223 = !DIDerivedType(tag: DW_TAG_typedef, name: "HaloRen", file: !2739, line: 427, baseType: !2872)
!10224 = !DILocalVariable(name: "har", arg: 1, scope: !10219, file: !3, line: 2873, type: !10222)
!10225 = !DILocation(line: 2873, column: 27, scope: !10219)
!10226 = !DILocalVariable(name: "xn", arg: 2, scope: !10219, file: !3, line: 2873, type: !91)
!10227 = !DILocation(line: 2873, column: 38, scope: !10219)
!10228 = !DILocalVariable(name: "yn", arg: 3, scope: !10219, file: !3, line: 2873, type: !91)
!10229 = !DILocation(line: 2873, column: 48, scope: !10219)
!10230 = !DILocalVariable(name: "col_r", arg: 4, scope: !10219, file: !3, line: 2873, type: !201)
!10231 = !DILocation(line: 2873, column: 58, scope: !10219)
!10232 = !DILocalVariable(name: "mtex", scope: !10219, file: !3, line: 2875, type: !3587)
!10233 = !DILocation(line: 2875, column: 8, scope: !10219)
!10234 = !DILocalVariable(name: "texres", scope: !10219, file: !3, line: 2876, type: !3577)
!10235 = !DILocation(line: 2876, column: 12, scope: !10219)
!10236 = !DILocalVariable(name: "texvec", scope: !10219, file: !3, line: 2877, type: !344)
!10237 = !DILocation(line: 2877, column: 8, scope: !10219)
!10238 = !DILocalVariable(name: "dxt", scope: !10219, file: !3, line: 2877, type: !344)
!10239 = !DILocation(line: 2877, column: 19, scope: !10219)
!10240 = !DILocalVariable(name: "dyt", scope: !10219, file: !3, line: 2877, type: !344)
!10241 = !DILocation(line: 2877, column: 27, scope: !10219)
!10242 = !DILocalVariable(name: "fact", scope: !10219, file: !3, line: 2877, type: !91)
!10243 = !DILocation(line: 2877, column: 35, scope: !10219)
!10244 = !DILocalVariable(name: "facm", scope: !10219, file: !3, line: 2877, type: !91)
!10245 = !DILocation(line: 2877, column: 41, scope: !10219)
!10246 = !DILocalVariable(name: "dx", scope: !10219, file: !3, line: 2877, type: !91)
!10247 = !DILocation(line: 2877, column: 47, scope: !10219)
!10248 = !DILocalVariable(name: "rgb", scope: !10219, file: !3, line: 2878, type: !92)
!10249 = !DILocation(line: 2878, column: 6, scope: !10219)
!10250 = !DILocalVariable(name: "osatex", scope: !10219, file: !3, line: 2878, type: !92)
!10251 = !DILocation(line: 2878, column: 11, scope: !10219)
!10252 = !DILocation(line: 2880, column: 10, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2880, column: 6)
!10254 = !DILocation(line: 2880, column: 18, scope: !10253)
!10255 = !DILocation(line: 2880, column: 6, scope: !10219)
!10256 = !DILocation(line: 2880, column: 30, scope: !10253)
!10257 = !DILocation(line: 2882, column: 8, scope: !10219)
!10258 = !DILocation(line: 2882, column: 13, scope: !10219)
!10259 = !DILocation(line: 2882, column: 18, scope: !10219)
!10260 = !DILocation(line: 2882, column: 6, scope: !10219)
!10261 = !DILocation(line: 2883, column: 6, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2883, column: 6)
!10263 = !DILocation(line: 2883, column: 11, scope: !10262)
!10264 = !DILocation(line: 2883, column: 16, scope: !10262)
!10265 = !DILocation(line: 2883, column: 23, scope: !10262)
!10266 = !DILocation(line: 2883, column: 6, scope: !10219)
!10267 = !DILocation(line: 2883, column: 33, scope: !10262)
!10268 = !DILocation(line: 2884, column: 6, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2884, column: 6)
!10270 = !DILocation(line: 2884, column: 12, scope: !10269)
!10271 = !DILocation(line: 2884, column: 15, scope: !10269)
!10272 = !DILocation(line: 2884, column: 6, scope: !10219)
!10273 = !DILocation(line: 2884, column: 23, scope: !10269)
!10274 = !DILocation(line: 2887, column: 9, scope: !10219)
!10275 = !DILocation(line: 2887, column: 12, scope: !10219)
!10276 = !DILocation(line: 2889, column: 13, scope: !10219)
!10277 = !DILocation(line: 2889, column: 16, scope: !10219)
!10278 = !DILocation(line: 2889, column: 21, scope: !10219)
!10279 = !DILocation(line: 2889, column: 15, scope: !10219)
!10280 = !DILocation(line: 2889, column: 2, scope: !10219)
!10281 = !DILocation(line: 2889, column: 11, scope: !10219)
!10282 = !DILocation(line: 2890, column: 13, scope: !10219)
!10283 = !DILocation(line: 2890, column: 16, scope: !10219)
!10284 = !DILocation(line: 2890, column: 21, scope: !10219)
!10285 = !DILocation(line: 2890, column: 15, scope: !10219)
!10286 = !DILocation(line: 2890, column: 2, scope: !10219)
!10287 = !DILocation(line: 2890, column: 11, scope: !10219)
!10288 = !DILocation(line: 2891, column: 2, scope: !10219)
!10289 = !DILocation(line: 2891, column: 11, scope: !10219)
!10290 = !DILocation(line: 2893, column: 11, scope: !10219)
!10291 = !DILocation(line: 2893, column: 16, scope: !10219)
!10292 = !DILocation(line: 2893, column: 21, scope: !10219)
!10293 = !DILocation(line: 2893, column: 27, scope: !10219)
!10294 = !DILocation(line: 2893, column: 8, scope: !10219)
!10295 = !DILocation(line: 2896, column: 6, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2896, column: 6)
!10297 = !DILocation(line: 2896, column: 12, scope: !10296)
!10298 = !DILocation(line: 2896, column: 6, scope: !10219)
!10299 = !DILocation(line: 2896, column: 30, scope: !10296)
!10300 = !DILocation(line: 2896, column: 36, scope: !10296)
!10301 = !DILocation(line: 2896, column: 52, scope: !10296)
!10302 = !DILocation(line: 2896, column: 58, scope: !10296)
!10303 = !DILocation(line: 2896, column: 63, scope: !10296)
!10304 = !DILocation(line: 2896, column: 45, scope: !10296)
!10305 = !DILocation(line: 2896, column: 67, scope: !10296)
!10306 = !DILocation(line: 2896, column: 73, scope: !10296)
!10307 = !DILocation(line: 2896, column: 66, scope: !10296)
!10308 = !DILocation(line: 2896, column: 43, scope: !10296)
!10309 = !DILocation(line: 2896, column: 19, scope: !10296)
!10310 = !DILocation(line: 2896, column: 28, scope: !10296)
!10311 = !DILocation(line: 2897, column: 18, scope: !10296)
!10312 = !DILocation(line: 2897, column: 24, scope: !10296)
!10313 = !DILocation(line: 2897, column: 33, scope: !10296)
!10314 = !DILocation(line: 2897, column: 39, scope: !10296)
!10315 = !DILocation(line: 2897, column: 31, scope: !10296)
!10316 = !DILocation(line: 2897, column: 7, scope: !10296)
!10317 = !DILocation(line: 2897, column: 16, scope: !10296)
!10318 = !DILocation(line: 2899, column: 6, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2899, column: 6)
!10320 = !DILocation(line: 2899, column: 12, scope: !10319)
!10321 = !DILocation(line: 2899, column: 6, scope: !10219)
!10322 = !DILocation(line: 2899, column: 30, scope: !10319)
!10323 = !DILocation(line: 2899, column: 36, scope: !10319)
!10324 = !DILocation(line: 2899, column: 52, scope: !10319)
!10325 = !DILocation(line: 2899, column: 58, scope: !10319)
!10326 = !DILocation(line: 2899, column: 63, scope: !10319)
!10327 = !DILocation(line: 2899, column: 45, scope: !10319)
!10328 = !DILocation(line: 2899, column: 67, scope: !10319)
!10329 = !DILocation(line: 2899, column: 73, scope: !10319)
!10330 = !DILocation(line: 2899, column: 66, scope: !10319)
!10331 = !DILocation(line: 2899, column: 43, scope: !10319)
!10332 = !DILocation(line: 2899, column: 19, scope: !10319)
!10333 = !DILocation(line: 2899, column: 28, scope: !10319)
!10334 = !DILocation(line: 2900, column: 18, scope: !10319)
!10335 = !DILocation(line: 2900, column: 24, scope: !10319)
!10336 = !DILocation(line: 2900, column: 33, scope: !10319)
!10337 = !DILocation(line: 2900, column: 39, scope: !10319)
!10338 = !DILocation(line: 2900, column: 31, scope: !10319)
!10339 = !DILocation(line: 2900, column: 7, scope: !10319)
!10340 = !DILocation(line: 2900, column: 16, scope: !10319)
!10341 = !DILocation(line: 2902, column: 6, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2902, column: 6)
!10343 = !DILocation(line: 2902, column: 12, scope: !10342)
!10344 = !DILocation(line: 2902, column: 6, scope: !10219)
!10345 = !DILocation(line: 2902, column: 30, scope: !10342)
!10346 = !DILocation(line: 2902, column: 36, scope: !10342)
!10347 = !DILocation(line: 2902, column: 52, scope: !10342)
!10348 = !DILocation(line: 2902, column: 58, scope: !10342)
!10349 = !DILocation(line: 2902, column: 63, scope: !10342)
!10350 = !DILocation(line: 2902, column: 45, scope: !10342)
!10351 = !DILocation(line: 2902, column: 67, scope: !10342)
!10352 = !DILocation(line: 2902, column: 73, scope: !10342)
!10353 = !DILocation(line: 2902, column: 66, scope: !10342)
!10354 = !DILocation(line: 2902, column: 43, scope: !10342)
!10355 = !DILocation(line: 2902, column: 19, scope: !10342)
!10356 = !DILocation(line: 2902, column: 28, scope: !10342)
!10357 = !DILocation(line: 2903, column: 18, scope: !10342)
!10358 = !DILocation(line: 2903, column: 24, scope: !10342)
!10359 = !DILocation(line: 2903, column: 33, scope: !10342)
!10360 = !DILocation(line: 2903, column: 39, scope: !10342)
!10361 = !DILocation(line: 2903, column: 31, scope: !10342)
!10362 = !DILocation(line: 2903, column: 7, scope: !10342)
!10363 = !DILocation(line: 2903, column: 16, scope: !10342)
!10364 = !DILocation(line: 2905, column: 6, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2905, column: 6)
!10366 = !DILocation(line: 2905, column: 6, scope: !10219)
!10367 = !DILocation(line: 2907, column: 12, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 2905, column: 14)
!10369 = !DILocation(line: 2907, column: 17, scope: !10368)
!10370 = !DILocation(line: 2907, column: 11, scope: !10368)
!10371 = !DILocation(line: 2907, column: 5, scope: !10368)
!10372 = !DILocation(line: 2909, column: 7, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 2909, column: 7)
!10374 = !DILocation(line: 2909, column: 13, scope: !10373)
!10375 = !DILocation(line: 2909, column: 7, scope: !10368)
!10376 = !DILocation(line: 2910, column: 12, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 2909, column: 20)
!10378 = !DILocation(line: 2910, column: 18, scope: !10377)
!10379 = !DILocation(line: 2910, column: 26, scope: !10377)
!10380 = !DILocation(line: 2910, column: 25, scope: !10377)
!10381 = !DILocation(line: 2910, column: 4, scope: !10377)
!10382 = !DILocation(line: 2910, column: 10, scope: !10377)
!10383 = !DILocation(line: 2911, column: 12, scope: !10377)
!10384 = !DILocation(line: 2911, column: 18, scope: !10377)
!10385 = !DILocation(line: 2911, column: 26, scope: !10377)
!10386 = !DILocation(line: 2911, column: 25, scope: !10377)
!10387 = !DILocation(line: 2911, column: 4, scope: !10377)
!10388 = !DILocation(line: 2911, column: 10, scope: !10377)
!10389 = !DILocation(line: 2912, column: 3, scope: !10377)
!10390 = !DILocation(line: 2913, column: 16, scope: !10373)
!10391 = !DILocation(line: 2913, column: 22, scope: !10373)
!10392 = !DILocation(line: 2913, column: 8, scope: !10373)
!10393 = !DILocation(line: 2913, column: 14, scope: !10373)
!10394 = !DILocation(line: 2915, column: 7, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 2915, column: 7)
!10396 = !DILocation(line: 2915, column: 13, scope: !10395)
!10397 = !DILocation(line: 2915, column: 7, scope: !10368)
!10398 = !DILocation(line: 2916, column: 12, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 2915, column: 20)
!10400 = !DILocation(line: 2916, column: 18, scope: !10399)
!10401 = !DILocation(line: 2916, column: 26, scope: !10399)
!10402 = !DILocation(line: 2916, column: 25, scope: !10399)
!10403 = !DILocation(line: 2916, column: 4, scope: !10399)
!10404 = !DILocation(line: 2916, column: 10, scope: !10399)
!10405 = !DILocation(line: 2917, column: 12, scope: !10399)
!10406 = !DILocation(line: 2917, column: 18, scope: !10399)
!10407 = !DILocation(line: 2917, column: 26, scope: !10399)
!10408 = !DILocation(line: 2917, column: 25, scope: !10399)
!10409 = !DILocation(line: 2917, column: 4, scope: !10399)
!10410 = !DILocation(line: 2917, column: 10, scope: !10399)
!10411 = !DILocation(line: 2918, column: 3, scope: !10399)
!10412 = !DILocation(line: 2919, column: 16, scope: !10395)
!10413 = !DILocation(line: 2919, column: 22, scope: !10395)
!10414 = !DILocation(line: 2919, column: 8, scope: !10395)
!10415 = !DILocation(line: 2919, column: 14, scope: !10395)
!10416 = !DILocation(line: 2921, column: 7, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 2921, column: 7)
!10418 = !DILocation(line: 2921, column: 13, scope: !10417)
!10419 = !DILocation(line: 2921, column: 7, scope: !10368)
!10420 = !DILocation(line: 2922, column: 4, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 2921, column: 20)
!10422 = !DILocation(line: 2922, column: 10, scope: !10421)
!10423 = !DILocation(line: 2923, column: 4, scope: !10421)
!10424 = !DILocation(line: 2923, column: 10, scope: !10421)
!10425 = !DILocation(line: 2924, column: 3, scope: !10421)
!10426 = !DILocation(line: 2925, column: 16, scope: !10417)
!10427 = !DILocation(line: 2925, column: 22, scope: !10417)
!10428 = !DILocation(line: 2925, column: 8, scope: !10417)
!10429 = !DILocation(line: 2925, column: 14, scope: !10417)
!10430 = !DILocation(line: 2927, column: 2, scope: !10368)
!10431 = !DILocation(line: 2929, column: 6, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2929, column: 6)
!10433 = !DILocation(line: 2929, column: 12, scope: !10432)
!10434 = !DILocation(line: 2929, column: 17, scope: !10432)
!10435 = !DILocation(line: 2929, column: 21, scope: !10432)
!10436 = !DILocation(line: 2929, column: 6, scope: !10219)
!10437 = !DILocation(line: 2929, column: 48, scope: !10432)
!10438 = !DILocation(line: 2929, column: 54, scope: !10432)
!10439 = !DILocation(line: 2929, column: 74, scope: !10432)
!10440 = !DILocation(line: 2929, column: 79, scope: !10432)
!10441 = !DILocation(line: 2929, column: 34, scope: !10432)
!10442 = !DILocation(line: 2931, column: 17, scope: !10219)
!10443 = !DILocation(line: 2931, column: 23, scope: !10219)
!10444 = !DILocation(line: 2931, column: 28, scope: !10219)
!10445 = !DILocation(line: 2931, column: 36, scope: !10219)
!10446 = !DILocation(line: 2931, column: 41, scope: !10219)
!10447 = !DILocation(line: 2931, column: 46, scope: !10219)
!10448 = !DILocation(line: 2931, column: 66, scope: !10219)
!10449 = !DILocation(line: 2931, column: 72, scope: !10219)
!10450 = !DILocation(line: 2931, column: 86, scope: !10219)
!10451 = !DILocation(line: 2931, column: 91, scope: !10219)
!10452 = !DILocation(line: 2931, column: 8, scope: !10219)
!10453 = !DILocation(line: 2931, column: 6, scope: !10219)
!10454 = !DILocation(line: 2934, column: 6, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2934, column: 6)
!10456 = !DILocation(line: 2934, column: 10, scope: !10455)
!10457 = !DILocation(line: 2934, column: 14, scope: !10455)
!10458 = !DILocation(line: 2934, column: 20, scope: !10455)
!10459 = !DILocation(line: 2934, column: 28, scope: !10455)
!10460 = !DILocation(line: 2934, column: 6, scope: !10219)
!10461 = !DILocation(line: 2935, column: 34, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2934, column: 46)
!10463 = !DILocation(line: 2935, column: 16, scope: !10462)
!10464 = !DILocation(line: 2935, column: 10, scope: !10462)
!10465 = !DILocation(line: 2935, column: 14, scope: !10462)
!10466 = !DILocation(line: 2936, column: 6, scope: !10462)
!10467 = !DILocation(line: 2937, column: 2, scope: !10462)
!10468 = !DILocation(line: 2938, column: 6, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2938, column: 6)
!10470 = !DILocation(line: 2938, column: 12, scope: !10469)
!10471 = !DILocation(line: 2938, column: 20, scope: !10469)
!10472 = !DILocation(line: 2938, column: 6, scope: !10219)
!10473 = !DILocation(line: 2939, column: 7, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 2939, column: 7)
!10475 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2938, column: 37)
!10476 = !DILocation(line: 2939, column: 7, scope: !10475)
!10477 = !DILocation(line: 2940, column: 27, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 2939, column: 12)
!10479 = !DILocation(line: 2940, column: 19, scope: !10478)
!10480 = !DILocation(line: 2940, column: 11, scope: !10478)
!10481 = !DILocation(line: 2940, column: 13, scope: !10478)
!10482 = !DILocation(line: 2941, column: 27, scope: !10478)
!10483 = !DILocation(line: 2941, column: 19, scope: !10478)
!10484 = !DILocation(line: 2941, column: 11, scope: !10478)
!10485 = !DILocation(line: 2941, column: 13, scope: !10478)
!10486 = !DILocation(line: 2942, column: 27, scope: !10478)
!10487 = !DILocation(line: 2942, column: 19, scope: !10478)
!10488 = !DILocation(line: 2942, column: 11, scope: !10478)
!10489 = !DILocation(line: 2942, column: 13, scope: !10478)
!10490 = !DILocation(line: 2943, column: 3, scope: !10478)
!10491 = !DILocation(line: 2944, column: 32, scope: !10474)
!10492 = !DILocation(line: 2944, column: 24, scope: !10474)
!10493 = !DILocation(line: 2944, column: 15, scope: !10474)
!10494 = !DILocation(line: 2944, column: 18, scope: !10474)
!10495 = !DILocation(line: 2945, column: 2, scope: !10475)
!10496 = !DILocation(line: 2948, column: 6, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 2948, column: 6)
!10498 = !DILocation(line: 2948, column: 12, scope: !10497)
!10499 = !DILocation(line: 2948, column: 18, scope: !10497)
!10500 = !DILocation(line: 2948, column: 6, scope: !10219)
!10501 = !DILocation(line: 2950, column: 7, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2950, column: 7)
!10503 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 2948, column: 29)
!10504 = !DILocation(line: 2950, column: 10, scope: !10502)
!10505 = !DILocation(line: 2950, column: 7, scope: !10503)
!10506 = !DILocation(line: 2951, column: 15, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 2950, column: 15)
!10508 = !DILocation(line: 2951, column: 21, scope: !10507)
!10509 = !DILocation(line: 2951, column: 11, scope: !10507)
!10510 = !DILocation(line: 2951, column: 13, scope: !10507)
!10511 = !DILocation(line: 2952, column: 15, scope: !10507)
!10512 = !DILocation(line: 2952, column: 21, scope: !10507)
!10513 = !DILocation(line: 2952, column: 11, scope: !10507)
!10514 = !DILocation(line: 2952, column: 13, scope: !10507)
!10515 = !DILocation(line: 2953, column: 15, scope: !10507)
!10516 = !DILocation(line: 2953, column: 21, scope: !10507)
!10517 = !DILocation(line: 2953, column: 11, scope: !10507)
!10518 = !DILocation(line: 2953, column: 13, scope: !10507)
!10519 = !DILocation(line: 2954, column: 3, scope: !10507)
!10520 = !DILocation(line: 2955, column: 12, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 2955, column: 12)
!10522 = !DILocation(line: 2955, column: 18, scope: !10521)
!10523 = !DILocation(line: 2955, column: 24, scope: !10521)
!10524 = !DILocation(line: 2955, column: 12, scope: !10502)
!10525 = !DILocation(line: 2956, column: 11, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 2955, column: 37)
!10527 = !DILocation(line: 2956, column: 14, scope: !10526)
!10528 = !DILocation(line: 2957, column: 3, scope: !10526)
!10529 = !DILocation(line: 2958, column: 27, scope: !10521)
!10530 = !DILocation(line: 2958, column: 15, scope: !10521)
!10531 = !DILocation(line: 2958, column: 18, scope: !10521)
!10532 = !DILocation(line: 2961, column: 7, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2961, column: 7)
!10534 = !DILocation(line: 2961, column: 13, scope: !10533)
!10535 = !DILocation(line: 2961, column: 18, scope: !10533)
!10536 = !DILocation(line: 2961, column: 22, scope: !10533)
!10537 = !DILocation(line: 2961, column: 7, scope: !10503)
!10538 = !DILocalVariable(name: "ima", scope: !10539, file: !3, line: 2962, type: !3130)
!10539 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 2961, column: 35)
!10540 = !DILocation(line: 2962, column: 11, scope: !10539)
!10541 = !DILocation(line: 2962, column: 17, scope: !10539)
!10542 = !DILocation(line: 2962, column: 23, scope: !10539)
!10543 = !DILocation(line: 2962, column: 28, scope: !10539)
!10544 = !DILocalVariable(name: "ibuf", scope: !10539, file: !3, line: 2963, type: !3706)
!10545 = !DILocation(line: 2963, column: 11, scope: !10539)
!10546 = !DILocation(line: 2963, column: 46, scope: !10539)
!10547 = !DILocation(line: 2963, column: 52, scope: !10539)
!10548 = !DILocation(line: 2963, column: 58, scope: !10539)
!10549 = !DILocation(line: 2963, column: 63, scope: !10539)
!10550 = !DILocation(line: 2963, column: 70, scope: !10539)
!10551 = !DILocation(line: 2963, column: 75, scope: !10539)
!10552 = !DILocation(line: 2963, column: 18, scope: !10539)
!10553 = !DILocation(line: 2966, column: 8, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 2966, column: 8)
!10555 = !DILocation(line: 2966, column: 13, scope: !10554)
!10556 = !DILocation(line: 2966, column: 18, scope: !10554)
!10557 = !DILocation(line: 2966, column: 24, scope: !10554)
!10558 = !DILocation(line: 2966, column: 17, scope: !10554)
!10559 = !DILocation(line: 2966, column: 36, scope: !10554)
!10560 = !DILocation(line: 2966, column: 41, scope: !10554)
!10561 = !DILocation(line: 2966, column: 39, scope: !10554)
!10562 = !DILocation(line: 2966, column: 8, scope: !10539)
!10563 = !DILocation(line: 2967, column: 63, scope: !10554)
!10564 = !DILocation(line: 2967, column: 67, scope: !10554)
!10565 = !DILocation(line: 2967, column: 73, scope: !10554)
!10566 = !DILocation(line: 2967, column: 5, scope: !10554)
!10567 = !DILocation(line: 2969, column: 32, scope: !10539)
!10568 = !DILocation(line: 2969, column: 37, scope: !10539)
!10569 = !DILocation(line: 2969, column: 43, scope: !10539)
!10570 = !DILocation(line: 2969, column: 48, scope: !10539)
!10571 = !DILocation(line: 2969, column: 4, scope: !10539)
!10572 = !DILocation(line: 2970, column: 3, scope: !10539)
!10573 = !DILocation(line: 2972, column: 16, scope: !10503)
!10574 = !DILocation(line: 2972, column: 20, scope: !10503)
!10575 = !DILocation(line: 2972, column: 26, scope: !10503)
!10576 = !DILocation(line: 2972, column: 19, scope: !10503)
!10577 = !DILocation(line: 2972, column: 7, scope: !10503)
!10578 = !DILocation(line: 2973, column: 14, scope: !10503)
!10579 = !DILocation(line: 2973, column: 13, scope: !10503)
!10580 = !DILocation(line: 2973, column: 7, scope: !10503)
!10581 = !DILocation(line: 2975, column: 7, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2975, column: 7)
!10583 = !DILocation(line: 2975, column: 13, scope: !10582)
!10584 = !DILocation(line: 2975, column: 22, scope: !10582)
!10585 = !DILocation(line: 2975, column: 7, scope: !10503)
!10586 = !DILocation(line: 2976, column: 15, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2975, column: 34)
!10588 = !DILocation(line: 2976, column: 21, scope: !10587)
!10589 = !DILocation(line: 2976, column: 14, scope: !10587)
!10590 = !DILocation(line: 2976, column: 8, scope: !10587)
!10591 = !DILocation(line: 2977, column: 3, scope: !10587)
!10592 = !DILocation(line: 2979, column: 7, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2979, column: 7)
!10594 = !DILocation(line: 2979, column: 13, scope: !10593)
!10595 = !DILocation(line: 2979, column: 22, scope: !10593)
!10596 = !DILocation(line: 2979, column: 7, scope: !10503)
!10597 = !DILocation(line: 2979, column: 41, scope: !10593)
!10598 = !DILocation(line: 2979, column: 40, scope: !10593)
!10599 = !DILocation(line: 2979, column: 38, scope: !10593)
!10600 = !DILocation(line: 2979, column: 34, scope: !10593)
!10601 = !DILocation(line: 2981, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2981, column: 7)
!10603 = !DILocation(line: 2981, column: 13, scope: !10602)
!10604 = !DILocation(line: 2981, column: 22, scope: !10602)
!10605 = !DILocation(line: 2981, column: 7, scope: !10503)
!10606 = !DILocation(line: 2982, column: 15, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 2981, column: 36)
!10608 = !DILocation(line: 2982, column: 27, scope: !10607)
!10609 = !DILocation(line: 2982, column: 19, scope: !10607)
!10610 = !DILocation(line: 2982, column: 32, scope: !10607)
!10611 = !DILocation(line: 2982, column: 37, scope: !10607)
!10612 = !DILocation(line: 2982, column: 42, scope: !10607)
!10613 = !DILocation(line: 2982, column: 36, scope: !10607)
!10614 = !DILocation(line: 2982, column: 30, scope: !10607)
!10615 = !DILocation(line: 2982, column: 4, scope: !10607)
!10616 = !DILocation(line: 2982, column: 12, scope: !10607)
!10617 = !DILocation(line: 2983, column: 15, scope: !10607)
!10618 = !DILocation(line: 2983, column: 27, scope: !10607)
!10619 = !DILocation(line: 2983, column: 19, scope: !10607)
!10620 = !DILocation(line: 2983, column: 32, scope: !10607)
!10621 = !DILocation(line: 2983, column: 37, scope: !10607)
!10622 = !DILocation(line: 2983, column: 42, scope: !10607)
!10623 = !DILocation(line: 2983, column: 36, scope: !10607)
!10624 = !DILocation(line: 2983, column: 30, scope: !10607)
!10625 = !DILocation(line: 2983, column: 4, scope: !10607)
!10626 = !DILocation(line: 2983, column: 12, scope: !10607)
!10627 = !DILocation(line: 2984, column: 15, scope: !10607)
!10628 = !DILocation(line: 2984, column: 27, scope: !10607)
!10629 = !DILocation(line: 2984, column: 19, scope: !10607)
!10630 = !DILocation(line: 2984, column: 32, scope: !10607)
!10631 = !DILocation(line: 2984, column: 37, scope: !10607)
!10632 = !DILocation(line: 2984, column: 42, scope: !10607)
!10633 = !DILocation(line: 2984, column: 36, scope: !10607)
!10634 = !DILocation(line: 2984, column: 30, scope: !10607)
!10635 = !DILocation(line: 2984, column: 4, scope: !10607)
!10636 = !DILocation(line: 2984, column: 12, scope: !10607)
!10637 = !DILocation(line: 2985, column: 3, scope: !10607)
!10638 = !DILocation(line: 2986, column: 12, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 2986, column: 12)
!10640 = !DILocation(line: 2986, column: 18, scope: !10639)
!10641 = !DILocation(line: 2986, column: 27, scope: !10639)
!10642 = !DILocation(line: 2986, column: 12, scope: !10602)
!10643 = !DILocation(line: 2987, column: 15, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 2986, column: 39)
!10645 = !DILocation(line: 2987, column: 20, scope: !10644)
!10646 = !DILocation(line: 2987, column: 32, scope: !10644)
!10647 = !DILocation(line: 2987, column: 24, scope: !10644)
!10648 = !DILocation(line: 2987, column: 19, scope: !10644)
!10649 = !DILocation(line: 2987, column: 36, scope: !10644)
!10650 = !DILocation(line: 2987, column: 41, scope: !10644)
!10651 = !DILocation(line: 2987, column: 35, scope: !10644)
!10652 = !DILocation(line: 2987, column: 4, scope: !10644)
!10653 = !DILocation(line: 2987, column: 12, scope: !10644)
!10654 = !DILocation(line: 2988, column: 15, scope: !10644)
!10655 = !DILocation(line: 2988, column: 20, scope: !10644)
!10656 = !DILocation(line: 2988, column: 32, scope: !10644)
!10657 = !DILocation(line: 2988, column: 24, scope: !10644)
!10658 = !DILocation(line: 2988, column: 19, scope: !10644)
!10659 = !DILocation(line: 2988, column: 36, scope: !10644)
!10660 = !DILocation(line: 2988, column: 41, scope: !10644)
!10661 = !DILocation(line: 2988, column: 35, scope: !10644)
!10662 = !DILocation(line: 2988, column: 4, scope: !10644)
!10663 = !DILocation(line: 2988, column: 12, scope: !10644)
!10664 = !DILocation(line: 2989, column: 15, scope: !10644)
!10665 = !DILocation(line: 2989, column: 20, scope: !10644)
!10666 = !DILocation(line: 2989, column: 32, scope: !10644)
!10667 = !DILocation(line: 2989, column: 24, scope: !10644)
!10668 = !DILocation(line: 2989, column: 19, scope: !10644)
!10669 = !DILocation(line: 2989, column: 36, scope: !10644)
!10670 = !DILocation(line: 2989, column: 41, scope: !10644)
!10671 = !DILocation(line: 2989, column: 35, scope: !10644)
!10672 = !DILocation(line: 2989, column: 4, scope: !10644)
!10673 = !DILocation(line: 2989, column: 12, scope: !10644)
!10674 = !DILocation(line: 2990, column: 3, scope: !10644)
!10675 = !DILocation(line: 2992, column: 15, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 2991, column: 8)
!10677 = !DILocation(line: 2992, column: 27, scope: !10676)
!10678 = !DILocation(line: 2992, column: 19, scope: !10676)
!10679 = !DILocation(line: 2992, column: 32, scope: !10676)
!10680 = !DILocation(line: 2992, column: 37, scope: !10676)
!10681 = !DILocation(line: 2992, column: 30, scope: !10676)
!10682 = !DILocation(line: 2992, column: 4, scope: !10676)
!10683 = !DILocation(line: 2992, column: 12, scope: !10676)
!10684 = !DILocation(line: 2993, column: 15, scope: !10676)
!10685 = !DILocation(line: 2993, column: 27, scope: !10676)
!10686 = !DILocation(line: 2993, column: 19, scope: !10676)
!10687 = !DILocation(line: 2993, column: 32, scope: !10676)
!10688 = !DILocation(line: 2993, column: 37, scope: !10676)
!10689 = !DILocation(line: 2993, column: 30, scope: !10676)
!10690 = !DILocation(line: 2993, column: 4, scope: !10676)
!10691 = !DILocation(line: 2993, column: 12, scope: !10676)
!10692 = !DILocation(line: 2994, column: 15, scope: !10676)
!10693 = !DILocation(line: 2994, column: 27, scope: !10676)
!10694 = !DILocation(line: 2994, column: 19, scope: !10676)
!10695 = !DILocation(line: 2994, column: 32, scope: !10676)
!10696 = !DILocation(line: 2994, column: 37, scope: !10676)
!10697 = !DILocation(line: 2994, column: 30, scope: !10676)
!10698 = !DILocation(line: 2994, column: 4, scope: !10676)
!10699 = !DILocation(line: 2994, column: 12, scope: !10676)
!10700 = !DILocation(line: 2996, column: 4, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2996, column: 4)
!10702 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2996, column: 4)
!10703 = !DILocation(line: 2996, column: 4, scope: !10702)
!10704 = !DILocation(line: 2996, column: 4, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2996, column: 4)
!10706 = !DILocation(line: 2997, column: 4, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2997, column: 4)
!10708 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2997, column: 4)
!10709 = !DILocation(line: 2997, column: 4, scope: !10708)
!10710 = !DILocation(line: 2997, column: 4, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 2997, column: 4)
!10712 = !DILocation(line: 2998, column: 4, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 2998, column: 4)
!10714 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 2998, column: 4)
!10715 = !DILocation(line: 2998, column: 4, scope: !10714)
!10716 = !DILocation(line: 2998, column: 4, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 2998, column: 4)
!10718 = !DILocation(line: 3000, column: 2, scope: !10503)
!10719 = !DILocation(line: 3001, column: 6, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 3001, column: 6)
!10721 = !DILocation(line: 3001, column: 12, scope: !10720)
!10722 = !DILocation(line: 3001, column: 18, scope: !10720)
!10723 = !DILocation(line: 3001, column: 6, scope: !10219)
!10724 = !DILocation(line: 3002, column: 7, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 3002, column: 7)
!10726 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 3001, column: 31)
!10727 = !DILocation(line: 3002, column: 7, scope: !10726)
!10728 = !DILocation(line: 3003, column: 15, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 3003, column: 8)
!10730 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 3002, column: 12)
!10731 = !DILocation(line: 3003, column: 8, scope: !10729)
!10732 = !DILocation(line: 3003, column: 8, scope: !10730)
!10733 = !DILocation(line: 3004, column: 25, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 3003, column: 23)
!10735 = !DILocation(line: 3004, column: 12, scope: !10734)
!10736 = !DILocation(line: 3004, column: 16, scope: !10734)
!10737 = !DILocation(line: 3005, column: 4, scope: !10734)
!10738 = !DILocation(line: 3007, column: 36, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 3006, column: 9)
!10740 = !DILocation(line: 3007, column: 18, scope: !10739)
!10741 = !DILocation(line: 3007, column: 12, scope: !10739)
!10742 = !DILocation(line: 3007, column: 16, scope: !10739)
!10743 = !DILocation(line: 3009, column: 3, scope: !10730)
!10744 = !DILocation(line: 3011, column: 21, scope: !10726)
!10745 = !DILocation(line: 3011, column: 3, scope: !10726)
!10746 = !DILocation(line: 3011, column: 11, scope: !10726)
!10747 = !DILocation(line: 3012, column: 2, scope: !10726)
!10748 = !DILocation(line: 3013, column: 1, scope: !10219)
!10749 = distinct !DISubprogram(name: "do_2d_mapping", scope: !3, file: !3, line: 879, type: !10750, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{null, !3587, !201, !10752, !954, !201, !201}
!10752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10753, size: 64)
!10753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !2739, line: 411, baseType: !2738)
!10754 = !DILocalVariable(name: "mtex", arg: 1, scope: !10749, file: !3, line: 879, type: !3587)
!10755 = !DILocation(line: 879, column: 33, scope: !10749)
!10756 = !DILocalVariable(name: "texvec", arg: 2, scope: !10749, file: !3, line: 879, type: !201)
!10757 = !DILocation(line: 879, column: 45, scope: !10749)
!10758 = !DILocalVariable(name: "vlr", arg: 3, scope: !10749, file: !3, line: 879, type: !10752)
!10759 = !DILocation(line: 879, column: 65, scope: !10749)
!10760 = !DILocalVariable(name: "n", arg: 4, scope: !10749, file: !3, line: 879, type: !954)
!10761 = !DILocation(line: 879, column: 82, scope: !10749)
!10762 = !DILocalVariable(name: "dxt", arg: 5, scope: !10749, file: !3, line: 879, type: !201)
!10763 = !DILocation(line: 879, column: 94, scope: !10749)
!10764 = !DILocalVariable(name: "dyt", arg: 6, scope: !10749, file: !3, line: 879, type: !201)
!10765 = !DILocation(line: 879, column: 108, scope: !10749)
!10766 = !DILocalVariable(name: "tex", scope: !10749, file: !3, line: 881, type: !3402)
!10767 = !DILocation(line: 881, column: 7, scope: !10749)
!10768 = !DILocalVariable(name: "ob", scope: !10749, file: !3, line: 882, type: !2935)
!10769 = !DILocation(line: 882, column: 10, scope: !10749)
!10770 = !DILocalVariable(name: "fx", scope: !10749, file: !3, line: 883, type: !91)
!10771 = !DILocation(line: 883, column: 8, scope: !10749)
!10772 = !DILocalVariable(name: "fy", scope: !10749, file: !3, line: 883, type: !91)
!10773 = !DILocation(line: 883, column: 12, scope: !10749)
!10774 = !DILocalVariable(name: "fac1", scope: !10749, file: !3, line: 883, type: !91)
!10775 = !DILocation(line: 883, column: 16, scope: !10749)
!10776 = !DILocalVariable(name: "area", scope: !10749, file: !3, line: 883, type: !10777)
!10777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 256, elements: !1909)
!10778 = !DILocation(line: 883, column: 22, scope: !10749)
!10779 = !DILocalVariable(name: "ok", scope: !10749, file: !3, line: 884, type: !92)
!10780 = !DILocation(line: 884, column: 6, scope: !10749)
!10781 = !DILocalVariable(name: "proj", scope: !10749, file: !3, line: 884, type: !92)
!10782 = !DILocation(line: 884, column: 10, scope: !10749)
!10783 = !DILocalVariable(name: "areaflag", scope: !10749, file: !3, line: 884, type: !92)
!10784 = !DILocation(line: 884, column: 16, scope: !10749)
!10785 = !DILocalVariable(name: "wrap", scope: !10749, file: !3, line: 884, type: !92)
!10786 = !DILocation(line: 884, column: 29, scope: !10749)
!10787 = !DILocalVariable(name: "texco", scope: !10749, file: !3, line: 884, type: !92)
!10788 = !DILocation(line: 884, column: 35, scope: !10749)
!10789 = !DILocation(line: 887, column: 8, scope: !10749)
!10790 = !DILocation(line: 887, column: 14, scope: !10749)
!10791 = !DILocation(line: 887, column: 6, scope: !10749)
!10792 = !DILocation(line: 888, column: 7, scope: !10749)
!10793 = !DILocation(line: 888, column: 13, scope: !10749)
!10794 = !DILocation(line: 888, column: 5, scope: !10749)
!10795 = !DILocation(line: 889, column: 6, scope: !10749)
!10796 = !DILocation(line: 889, column: 12, scope: !10749)
!10797 = !DILocation(line: 889, column: 4, scope: !10749)
!10798 = !DILocation(line: 890, column: 9, scope: !10749)
!10799 = !DILocation(line: 890, column: 15, scope: !10749)
!10800 = !DILocation(line: 890, column: 7, scope: !10749)
!10801 = !DILocation(line: 892, column: 8, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 892, column: 6)
!10803 = !DILocation(line: 892, column: 6, scope: !10802)
!10804 = !DILocation(line: 892, column: 11, scope: !10802)
!10805 = !DILocation(line: 892, column: 6, scope: !10749)
!10806 = !DILocation(line: 894, column: 7, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 894, column: 7)
!10808 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 892, column: 16)
!10809 = !DILocation(line: 894, column: 11, scope: !10807)
!10810 = !DILocation(line: 894, column: 7, scope: !10808)
!10811 = !DILocation(line: 895, column: 10, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 894, column: 24)
!10813 = !DILocation(line: 895, column: 20, scope: !10812)
!10814 = !DILocation(line: 895, column: 28, scope: !10812)
!10815 = !DILocation(line: 895, column: 7, scope: !10812)
!10816 = !DILocation(line: 896, column: 10, scope: !10812)
!10817 = !DILocation(line: 896, column: 20, scope: !10812)
!10818 = !DILocation(line: 896, column: 28, scope: !10812)
!10819 = !DILocation(line: 896, column: 7, scope: !10812)
!10820 = !DILocation(line: 897, column: 3, scope: !10812)
!10821 = !DILocation(line: 898, column: 12, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 898, column: 12)
!10823 = !DILocation(line: 898, column: 17, scope: !10822)
!10824 = !DILocation(line: 898, column: 12, scope: !10807)
!10825 = !DILocation(line: 898, column: 56, scope: !10822)
!10826 = !DILocation(line: 898, column: 67, scope: !10822)
!10827 = !DILocation(line: 898, column: 78, scope: !10822)
!10828 = !DILocation(line: 898, column: 33, scope: !10822)
!10829 = !DILocation(line: 899, column: 12, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 899, column: 12)
!10831 = !DILocation(line: 899, column: 17, scope: !10830)
!10832 = !DILocation(line: 899, column: 12, scope: !10822)
!10833 = !DILocation(line: 899, column: 57, scope: !10830)
!10834 = !DILocation(line: 899, column: 68, scope: !10830)
!10835 = !DILocation(line: 899, column: 79, scope: !10830)
!10836 = !DILocation(line: 899, column: 33, scope: !10830)
!10837 = !DILocation(line: 901, column: 13, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 901, column: 13)
!10839 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 900, column: 8)
!10840 = !DILocation(line: 901, column: 19, scope: !10838)
!10841 = !DILocation(line: 901, column: 13, scope: !10839)
!10842 = !DILocation(line: 901, column: 47, scope: !10838)
!10843 = !DILocation(line: 901, column: 51, scope: !10838)
!10844 = !DILocation(line: 901, column: 54, scope: !10838)
!10845 = !DILocation(line: 901, column: 65, scope: !10838)
!10846 = !DILocation(line: 901, column: 76, scope: !10838)
!10847 = !DILocation(line: 901, column: 36, scope: !10838)
!10848 = !DILocation(line: 902, column: 13, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 902, column: 13)
!10850 = !DILocation(line: 902, column: 19, scope: !10849)
!10851 = !DILocation(line: 902, column: 13, scope: !10838)
!10852 = !DILocation(line: 902, column: 49, scope: !10849)
!10853 = !DILocation(line: 902, column: 52, scope: !10849)
!10854 = !DILocation(line: 902, column: 63, scope: !10849)
!10855 = !DILocation(line: 902, column: 74, scope: !10849)
!10856 = !DILocation(line: 902, column: 36, scope: !10849)
!10857 = !DILocation(line: 903, column: 44, scope: !10849)
!10858 = !DILocation(line: 903, column: 50, scope: !10849)
!10859 = !DILocation(line: 903, column: 55, scope: !10849)
!10860 = !DILocation(line: 903, column: 58, scope: !10849)
!10861 = !DILocation(line: 903, column: 69, scope: !10849)
!10862 = !DILocation(line: 903, column: 80, scope: !10849)
!10863 = !DILocation(line: 903, column: 36, scope: !10849)
!10864 = !DILocation(line: 907, column: 7, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 907, column: 7)
!10866 = !DILocation(line: 907, column: 12, scope: !10865)
!10867 = !DILocation(line: 907, column: 18, scope: !10865)
!10868 = !DILocation(line: 907, column: 7, scope: !10808)
!10869 = !DILocation(line: 908, column: 8, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 908, column: 8)
!10871 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 907, column: 32)
!10872 = !DILocation(line: 908, column: 13, scope: !10870)
!10873 = !DILocation(line: 908, column: 20, scope: !10870)
!10874 = !DILocation(line: 908, column: 8, scope: !10871)
!10875 = !DILocalVariable(name: "origf", scope: !10876, file: !3, line: 909, type: !91)
!10876 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 908, column: 24)
!10877 = !DILocation(line: 909, column: 11, scope: !10876)
!10878 = !DILocation(line: 909, column: 24, scope: !10876)
!10879 = !DILocation(line: 909, column: 29, scope: !10876)
!10880 = !DILocation(line: 909, column: 21, scope: !10876)
!10881 = !DILocation(line: 911, column: 9, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 911, column: 9)
!10883 = !DILocation(line: 911, column: 11, scope: !10882)
!10884 = !DILocation(line: 911, column: 9, scope: !10876)
!10885 = !DILocation(line: 911, column: 30, scope: !10882)
!10886 = !DILocation(line: 911, column: 24, scope: !10882)
!10887 = !DILocation(line: 911, column: 21, scope: !10882)
!10888 = !DILocation(line: 911, column: 18, scope: !10882)
!10889 = !DILocation(line: 912, column: 14, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 912, column: 14)
!10891 = !DILocation(line: 912, column: 16, scope: !10890)
!10892 = !DILocation(line: 912, column: 14, scope: !10882)
!10893 = !DILocation(line: 912, column: 36, scope: !10890)
!10894 = !DILocation(line: 912, column: 30, scope: !10890)
!10895 = !DILocation(line: 912, column: 29, scope: !10890)
!10896 = !DILocation(line: 912, column: 28, scope: !10890)
!10897 = !DILocation(line: 912, column: 25, scope: !10890)
!10898 = !DILocation(line: 912, column: 23, scope: !10890)
!10899 = !DILocation(line: 914, column: 9, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 914, column: 9)
!10901 = !DILocation(line: 914, column: 14, scope: !10900)
!10902 = !DILocation(line: 914, column: 19, scope: !10900)
!10903 = !DILocation(line: 914, column: 9, scope: !10876)
!10904 = !DILocalVariable(name: "orig", scope: !10905, file: !3, line: 915, type: !92)
!10905 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 914, column: 38)
!10906 = !DILocation(line: 915, column: 10, scope: !10905)
!10907 = !DILocation(line: 915, column: 27, scope: !10905)
!10908 = !DILocation(line: 915, column: 21, scope: !10905)
!10909 = !DILocation(line: 915, column: 16, scope: !10905)
!10910 = !DILocation(line: 916, column: 10, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 916, column: 10)
!10912 = !DILocation(line: 916, column: 15, scope: !10911)
!10913 = !DILocation(line: 916, column: 10, scope: !10905)
!10914 = !DILocation(line: 917, column: 16, scope: !10911)
!10915 = !DILocation(line: 917, column: 15, scope: !10911)
!10916 = !DILocation(line: 917, column: 9, scope: !10911)
!10917 = !DILocation(line: 917, column: 7, scope: !10911)
!10918 = !DILocation(line: 918, column: 5, scope: !10905)
!10919 = !DILocation(line: 919, column: 4, scope: !10876)
!10920 = !DILocation(line: 920, column: 8, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 920, column: 8)
!10922 = !DILocation(line: 920, column: 13, scope: !10921)
!10923 = !DILocation(line: 920, column: 20, scope: !10921)
!10924 = !DILocation(line: 920, column: 8, scope: !10871)
!10925 = !DILocalVariable(name: "origf", scope: !10926, file: !3, line: 921, type: !91)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 920, column: 24)
!10927 = !DILocation(line: 921, column: 11, scope: !10926)
!10928 = !DILocation(line: 921, column: 24, scope: !10926)
!10929 = !DILocation(line: 921, column: 29, scope: !10926)
!10930 = !DILocation(line: 921, column: 21, scope: !10926)
!10931 = !DILocation(line: 923, column: 9, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 923, column: 9)
!10933 = !DILocation(line: 923, column: 11, scope: !10932)
!10934 = !DILocation(line: 923, column: 9, scope: !10926)
!10935 = !DILocation(line: 923, column: 30, scope: !10932)
!10936 = !DILocation(line: 923, column: 24, scope: !10932)
!10937 = !DILocation(line: 923, column: 21, scope: !10932)
!10938 = !DILocation(line: 923, column: 18, scope: !10932)
!10939 = !DILocation(line: 924, column: 14, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 924, column: 14)
!10941 = !DILocation(line: 924, column: 16, scope: !10940)
!10942 = !DILocation(line: 924, column: 14, scope: !10932)
!10943 = !DILocation(line: 924, column: 36, scope: !10940)
!10944 = !DILocation(line: 924, column: 30, scope: !10940)
!10945 = !DILocation(line: 924, column: 29, scope: !10940)
!10946 = !DILocation(line: 924, column: 28, scope: !10940)
!10947 = !DILocation(line: 924, column: 25, scope: !10940)
!10948 = !DILocation(line: 924, column: 23, scope: !10940)
!10949 = !DILocation(line: 926, column: 9, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 926, column: 9)
!10951 = !DILocation(line: 926, column: 14, scope: !10950)
!10952 = !DILocation(line: 926, column: 19, scope: !10950)
!10953 = !DILocation(line: 926, column: 9, scope: !10926)
!10954 = !DILocalVariable(name: "orig", scope: !10955, file: !3, line: 927, type: !92)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 926, column: 38)
!10956 = !DILocation(line: 927, column: 10, scope: !10955)
!10957 = !DILocation(line: 927, column: 27, scope: !10955)
!10958 = !DILocation(line: 927, column: 21, scope: !10955)
!10959 = !DILocation(line: 927, column: 16, scope: !10955)
!10960 = !DILocation(line: 928, column: 10, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 928, column: 10)
!10962 = !DILocation(line: 928, column: 15, scope: !10961)
!10963 = !DILocation(line: 928, column: 10, scope: !10955)
!10964 = !DILocation(line: 929, column: 16, scope: !10961)
!10965 = !DILocation(line: 929, column: 15, scope: !10961)
!10966 = !DILocation(line: 929, column: 9, scope: !10961)
!10967 = !DILocation(line: 929, column: 7, scope: !10961)
!10968 = !DILocation(line: 930, column: 5, scope: !10955)
!10969 = !DILocation(line: 931, column: 4, scope: !10926)
!10970 = !DILocation(line: 932, column: 3, scope: !10871)
!10971 = !DILocation(line: 934, column: 7, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 934, column: 7)
!10973 = !DILocation(line: 934, column: 12, scope: !10972)
!10974 = !DILocation(line: 934, column: 20, scope: !10972)
!10975 = !DILocation(line: 934, column: 27, scope: !10972)
!10976 = !DILocation(line: 934, column: 30, scope: !10972)
!10977 = !DILocation(line: 934, column: 35, scope: !10972)
!10978 = !DILocation(line: 934, column: 43, scope: !10972)
!10979 = !DILocation(line: 934, column: 7, scope: !10808)
!10980 = !DILocation(line: 935, column: 10, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 934, column: 51)
!10982 = !DILocation(line: 935, column: 15, scope: !10981)
!10983 = !DILocation(line: 935, column: 26, scope: !10981)
!10984 = !DILocation(line: 935, column: 31, scope: !10981)
!10985 = !DILocation(line: 935, column: 24, scope: !10981)
!10986 = !DILocation(line: 935, column: 8, scope: !10981)
!10987 = !DILocation(line: 936, column: 8, scope: !10981)
!10988 = !DILocation(line: 936, column: 13, scope: !10981)
!10989 = !DILocation(line: 936, column: 23, scope: !10981)
!10990 = !DILocation(line: 936, column: 26, scope: !10981)
!10991 = !DILocation(line: 936, column: 25, scope: !10981)
!10992 = !DILocation(line: 936, column: 21, scope: !10981)
!10993 = !DILocation(line: 936, column: 6, scope: !10981)
!10994 = !DILocation(line: 937, column: 3, scope: !10981)
!10995 = !DILocation(line: 938, column: 7, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 938, column: 7)
!10997 = !DILocation(line: 938, column: 12, scope: !10996)
!10998 = !DILocation(line: 938, column: 20, scope: !10996)
!10999 = !DILocation(line: 938, column: 27, scope: !10996)
!11000 = !DILocation(line: 938, column: 30, scope: !10996)
!11001 = !DILocation(line: 938, column: 35, scope: !10996)
!11002 = !DILocation(line: 938, column: 43, scope: !10996)
!11003 = !DILocation(line: 938, column: 7, scope: !10808)
!11004 = !DILocation(line: 939, column: 10, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 938, column: 51)
!11006 = !DILocation(line: 939, column: 15, scope: !11005)
!11007 = !DILocation(line: 939, column: 26, scope: !11005)
!11008 = !DILocation(line: 939, column: 31, scope: !11005)
!11009 = !DILocation(line: 939, column: 24, scope: !11005)
!11010 = !DILocation(line: 939, column: 8, scope: !11005)
!11011 = !DILocation(line: 940, column: 8, scope: !11005)
!11012 = !DILocation(line: 940, column: 13, scope: !11005)
!11013 = !DILocation(line: 940, column: 23, scope: !11005)
!11014 = !DILocation(line: 940, column: 26, scope: !11005)
!11015 = !DILocation(line: 940, column: 25, scope: !11005)
!11016 = !DILocation(line: 940, column: 21, scope: !11005)
!11017 = !DILocation(line: 940, column: 6, scope: !11005)
!11018 = !DILocation(line: 941, column: 3, scope: !11005)
!11019 = !DILocation(line: 943, column: 14, scope: !10808)
!11020 = !DILocation(line: 943, column: 3, scope: !10808)
!11021 = !DILocation(line: 943, column: 12, scope: !10808)
!11022 = !DILocation(line: 944, column: 14, scope: !10808)
!11023 = !DILocation(line: 944, column: 3, scope: !10808)
!11024 = !DILocation(line: 944, column: 12, scope: !10808)
!11025 = !DILocation(line: 945, column: 2, scope: !10808)
!11026 = !DILocation(line: 948, column: 7, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 948, column: 7)
!11028 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 946, column: 7)
!11029 = !DILocation(line: 948, column: 11, scope: !11027)
!11030 = !DILocation(line: 948, column: 7, scope: !11028)
!11031 = !DILocation(line: 949, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 948, column: 24)
!11033 = !DILocation(line: 949, column: 19, scope: !11032)
!11034 = !DILocation(line: 949, column: 27, scope: !11032)
!11035 = !DILocation(line: 949, column: 6, scope: !11032)
!11036 = !DILocation(line: 950, column: 9, scope: !11032)
!11037 = !DILocation(line: 950, column: 19, scope: !11032)
!11038 = !DILocation(line: 950, column: 27, scope: !11032)
!11039 = !DILocation(line: 950, column: 6, scope: !11032)
!11040 = !DILocation(line: 951, column: 4, scope: !11032)
!11041 = !DILocation(line: 951, column: 10, scope: !11032)
!11042 = !DILocation(line: 952, column: 4, scope: !11032)
!11043 = !DILocation(line: 952, column: 10, scope: !11032)
!11044 = !DILocation(line: 953, column: 4, scope: !11032)
!11045 = !DILocation(line: 953, column: 10, scope: !11032)
!11046 = !DILocation(line: 954, column: 4, scope: !11032)
!11047 = !DILocation(line: 954, column: 10, scope: !11032)
!11048 = !DILocation(line: 955, column: 4, scope: !11032)
!11049 = !DILocation(line: 955, column: 10, scope: !11032)
!11050 = !DILocation(line: 956, column: 4, scope: !11032)
!11051 = !DILocation(line: 956, column: 10, scope: !11032)
!11052 = !DILocation(line: 957, column: 3, scope: !11032)
!11053 = !DILocation(line: 958, column: 12, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 958, column: 12)
!11055 = !DILocation(line: 958, column: 12, scope: !11027)
!11056 = !DILocation(line: 960, column: 6, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 958, column: 48)
!11058 = !DILocation(line: 961, column: 8, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 961, column: 8)
!11060 = !DILocation(line: 961, column: 17, scope: !11059)
!11061 = !DILocation(line: 961, column: 8, scope: !11057)
!11062 = !DILocation(line: 962, column: 9, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 961, column: 25)
!11064 = !DILocation(line: 962, column: 19, scope: !11063)
!11065 = !DILocation(line: 962, column: 18, scope: !11063)
!11066 = !DILocation(line: 962, column: 7, scope: !11063)
!11067 = !DILocation(line: 963, column: 9, scope: !11063)
!11068 = !DILocation(line: 963, column: 19, scope: !11063)
!11069 = !DILocation(line: 963, column: 18, scope: !11063)
!11070 = !DILocation(line: 963, column: 7, scope: !11063)
!11071 = !DILocation(line: 964, column: 9, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 964, column: 9)
!11073 = !DILocation(line: 964, column: 11, scope: !11072)
!11074 = !DILocation(line: 964, column: 18, scope: !11072)
!11075 = !DILocation(line: 964, column: 21, scope: !11072)
!11076 = !DILocation(line: 964, column: 23, scope: !11072)
!11077 = !DILocation(line: 964, column: 30, scope: !11072)
!11078 = !DILocation(line: 964, column: 33, scope: !11072)
!11079 = !DILocation(line: 964, column: 42, scope: !11072)
!11080 = !DILocation(line: 964, column: 9, scope: !11063)
!11081 = !DILocation(line: 966, column: 5, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 964, column: 50)
!11083 = !DILocation(line: 967, column: 14, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 967, column: 14)
!11085 = !DILocation(line: 967, column: 16, scope: !11084)
!11086 = !DILocation(line: 967, column: 23, scope: !11084)
!11087 = !DILocation(line: 967, column: 26, scope: !11084)
!11088 = !DILocation(line: 967, column: 28, scope: !11084)
!11089 = !DILocation(line: 967, column: 35, scope: !11084)
!11090 = !DILocation(line: 967, column: 38, scope: !11084)
!11091 = !DILocation(line: 967, column: 47, scope: !11084)
!11092 = !DILocation(line: 967, column: 14, scope: !11072)
!11093 = !DILocation(line: 969, column: 5, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 967, column: 55)
!11095 = !DILocation(line: 971, column: 9, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 970, column: 10)
!11097 = !DILocation(line: 973, column: 4, scope: !11063)
!11098 = !DILocation(line: 975, column: 8, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 975, column: 8)
!11100 = !DILocation(line: 975, column: 8, scope: !11057)
!11101 = !DILocation(line: 976, column: 9, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 976, column: 9)
!11103 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 975, column: 12)
!11104 = !DILocation(line: 976, column: 13, scope: !11102)
!11105 = !DILocation(line: 976, column: 9, scope: !11103)
!11106 = !DILocation(line: 977, column: 18, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 976, column: 26)
!11108 = !DILocation(line: 977, column: 24, scope: !11107)
!11109 = !DILocation(line: 977, column: 28, scope: !11107)
!11110 = !DILocation(line: 977, column: 32, scope: !11107)
!11111 = !DILocation(line: 977, column: 43, scope: !11107)
!11112 = !DILocation(line: 977, column: 54, scope: !11107)
!11113 = !DILocation(line: 977, column: 6, scope: !11107)
!11114 = !DILocation(line: 978, column: 18, scope: !11107)
!11115 = !DILocation(line: 978, column: 23, scope: !11107)
!11116 = !DILocation(line: 978, column: 28, scope: !11107)
!11117 = !DILocation(line: 978, column: 33, scope: !11107)
!11118 = !DILocation(line: 978, column: 38, scope: !11107)
!11119 = !DILocation(line: 978, column: 50, scope: !11107)
!11120 = !DILocation(line: 978, column: 48, scope: !11107)
!11121 = !DILocation(line: 978, column: 58, scope: !11107)
!11122 = !DILocation(line: 978, column: 70, scope: !11107)
!11123 = !DILocation(line: 978, column: 68, scope: !11107)
!11124 = !DILocation(line: 978, column: 78, scope: !11107)
!11125 = !DILocation(line: 978, column: 90, scope: !11107)
!11126 = !DILocation(line: 978, column: 88, scope: !11107)
!11127 = !DILocation(line: 978, column: 6, scope: !11107)
!11128 = !DILocation(line: 979, column: 18, scope: !11107)
!11129 = !DILocation(line: 979, column: 23, scope: !11107)
!11130 = !DILocation(line: 979, column: 28, scope: !11107)
!11131 = !DILocation(line: 979, column: 33, scope: !11107)
!11132 = !DILocation(line: 979, column: 38, scope: !11107)
!11133 = !DILocation(line: 979, column: 50, scope: !11107)
!11134 = !DILocation(line: 979, column: 48, scope: !11107)
!11135 = !DILocation(line: 979, column: 58, scope: !11107)
!11136 = !DILocation(line: 979, column: 70, scope: !11107)
!11137 = !DILocation(line: 979, column: 68, scope: !11107)
!11138 = !DILocation(line: 979, column: 78, scope: !11107)
!11139 = !DILocation(line: 979, column: 90, scope: !11107)
!11140 = !DILocation(line: 979, column: 88, scope: !11107)
!11141 = !DILocation(line: 979, column: 6, scope: !11107)
!11142 = !DILocation(line: 980, column: 5, scope: !11107)
!11143 = !DILocation(line: 982, column: 20, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 981, column: 10)
!11145 = !DILocation(line: 982, column: 26, scope: !11144)
!11146 = !DILocation(line: 982, column: 30, scope: !11144)
!11147 = !DILocation(line: 982, column: 34, scope: !11144)
!11148 = !DILocation(line: 982, column: 45, scope: !11144)
!11149 = !DILocation(line: 982, column: 56, scope: !11144)
!11150 = !DILocation(line: 982, column: 6, scope: !11144)
!11151 = !DILocation(line: 983, column: 20, scope: !11144)
!11152 = !DILocation(line: 983, column: 25, scope: !11144)
!11153 = !DILocation(line: 983, column: 30, scope: !11144)
!11154 = !DILocation(line: 983, column: 35, scope: !11144)
!11155 = !DILocation(line: 983, column: 40, scope: !11144)
!11156 = !DILocation(line: 983, column: 52, scope: !11144)
!11157 = !DILocation(line: 983, column: 50, scope: !11144)
!11158 = !DILocation(line: 983, column: 60, scope: !11144)
!11159 = !DILocation(line: 983, column: 72, scope: !11144)
!11160 = !DILocation(line: 983, column: 70, scope: !11144)
!11161 = !DILocation(line: 983, column: 80, scope: !11144)
!11162 = !DILocation(line: 983, column: 92, scope: !11144)
!11163 = !DILocation(line: 983, column: 90, scope: !11144)
!11164 = !DILocation(line: 983, column: 6, scope: !11144)
!11165 = !DILocation(line: 984, column: 20, scope: !11144)
!11166 = !DILocation(line: 984, column: 25, scope: !11144)
!11167 = !DILocation(line: 984, column: 30, scope: !11144)
!11168 = !DILocation(line: 984, column: 35, scope: !11144)
!11169 = !DILocation(line: 984, column: 40, scope: !11144)
!11170 = !DILocation(line: 984, column: 52, scope: !11144)
!11171 = !DILocation(line: 984, column: 50, scope: !11144)
!11172 = !DILocation(line: 984, column: 60, scope: !11144)
!11173 = !DILocation(line: 984, column: 72, scope: !11144)
!11174 = !DILocation(line: 984, column: 70, scope: !11144)
!11175 = !DILocation(line: 984, column: 80, scope: !11144)
!11176 = !DILocation(line: 984, column: 92, scope: !11144)
!11177 = !DILocation(line: 984, column: 90, scope: !11144)
!11178 = !DILocation(line: 984, column: 6, scope: !11144)
!11179 = !DILocation(line: 986, column: 13, scope: !11103)
!11180 = !DILocation(line: 987, column: 4, scope: !11103)
!11181 = !DILocation(line: 989, column: 9, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 989, column: 9)
!11183 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 988, column: 9)
!11184 = !DILocation(line: 989, column: 13, scope: !11182)
!11185 = !DILocation(line: 989, column: 9, scope: !11183)
!11186 = !DILocation(line: 989, column: 49, scope: !11182)
!11187 = !DILocation(line: 989, column: 60, scope: !11182)
!11188 = !DILocation(line: 989, column: 71, scope: !11182)
!11189 = !DILocation(line: 989, column: 26, scope: !11182)
!11190 = !DILocation(line: 990, column: 34, scope: !11182)
!11191 = !DILocation(line: 990, column: 45, scope: !11182)
!11192 = !DILocation(line: 990, column: 56, scope: !11182)
!11193 = !DILocation(line: 990, column: 10, scope: !11182)
!11194 = !DILocation(line: 991, column: 5, scope: !11183)
!11195 = !DILocation(line: 991, column: 11, scope: !11183)
!11196 = !DILocation(line: 992, column: 5, scope: !11183)
!11197 = !DILocation(line: 992, column: 11, scope: !11183)
!11198 = !DILocation(line: 993, column: 5, scope: !11183)
!11199 = !DILocation(line: 993, column: 11, scope: !11183)
!11200 = !DILocation(line: 994, column: 5, scope: !11183)
!11201 = !DILocation(line: 994, column: 11, scope: !11183)
!11202 = !DILocation(line: 996, column: 3, scope: !11057)
!11203 = !DILocation(line: 999, column: 8, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 999, column: 8)
!11205 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 997, column: 8)
!11206 = !DILocation(line: 999, column: 13, scope: !11204)
!11207 = !DILocation(line: 999, column: 8, scope: !11205)
!11208 = !DILocation(line: 999, column: 47, scope: !11204)
!11209 = !DILocation(line: 999, column: 51, scope: !11204)
!11210 = !DILocation(line: 999, column: 54, scope: !11204)
!11211 = !DILocation(line: 999, column: 65, scope: !11204)
!11212 = !DILocation(line: 999, column: 76, scope: !11204)
!11213 = !DILocation(line: 999, column: 36, scope: !11204)
!11214 = !DILocation(line: 999, column: 34, scope: !11204)
!11215 = !DILocation(line: 999, column: 29, scope: !11204)
!11216 = !DILocation(line: 1000, column: 13, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 1000, column: 13)
!11218 = !DILocation(line: 1000, column: 18, scope: !11217)
!11219 = !DILocation(line: 1000, column: 13, scope: !11204)
!11220 = !DILocation(line: 1000, column: 52, scope: !11217)
!11221 = !DILocation(line: 1000, column: 55, scope: !11217)
!11222 = !DILocation(line: 1000, column: 66, scope: !11217)
!11223 = !DILocation(line: 1000, column: 77, scope: !11217)
!11224 = !DILocation(line: 1000, column: 39, scope: !11217)
!11225 = !DILocation(line: 1000, column: 37, scope: !11217)
!11226 = !DILocation(line: 1000, column: 32, scope: !11217)
!11227 = !DILocation(line: 1001, column: 24, scope: !11217)
!11228 = !DILocation(line: 1001, column: 30, scope: !11217)
!11229 = !DILocation(line: 1001, column: 35, scope: !11217)
!11230 = !DILocation(line: 1001, column: 38, scope: !11217)
!11231 = !DILocation(line: 1001, column: 49, scope: !11217)
!11232 = !DILocation(line: 1001, column: 60, scope: !11217)
!11233 = !DILocation(line: 1001, column: 16, scope: !11217)
!11234 = !DILocation(line: 1001, column: 14, scope: !11217)
!11235 = !DILocation(line: 1003, column: 8, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 1003, column: 8)
!11237 = !DILocation(line: 1003, column: 12, scope: !11236)
!11238 = !DILocation(line: 1003, column: 8, scope: !11205)
!11239 = !DILocalVariable(name: "sw_ap", scope: !11240, file: !3, line: 1004, type: !91)
!11240 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 1004, column: 5)
!11241 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1003, column: 17)
!11242 = !DILocation(line: 1004, column: 5, scope: !11240)
!11243 = !DILocalVariable(name: "sw_ap", scope: !11244, file: !3, line: 1005, type: !91)
!11244 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 1005, column: 5)
!11245 = !DILocation(line: 1005, column: 5, scope: !11244)
!11246 = !DILocation(line: 1006, column: 4, scope: !11241)
!11247 = !DILocation(line: 1007, column: 13, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1007, column: 13)
!11249 = !DILocation(line: 1007, column: 17, scope: !11248)
!11250 = !DILocation(line: 1007, column: 13, scope: !11236)
!11251 = !DILocalVariable(name: "f1", scope: !11252, file: !3, line: 1008, type: !91)
!11252 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 1007, column: 22)
!11253 = !DILocation(line: 1008, column: 11, scope: !11252)
!11254 = !DILocation(line: 1008, column: 15, scope: !11252)
!11255 = !DILocalVariable(name: "f2", scope: !11252, file: !3, line: 1008, type: !91)
!11256 = !DILocation(line: 1008, column: 23, scope: !11252)
!11257 = !DILocation(line: 1008, column: 27, scope: !11252)
!11258 = !DILocation(line: 1009, column: 13, scope: !11252)
!11259 = !DILocation(line: 1009, column: 5, scope: !11252)
!11260 = !DILocation(line: 1009, column: 11, scope: !11252)
!11261 = !DILocation(line: 1010, column: 13, scope: !11252)
!11262 = !DILocation(line: 1010, column: 5, scope: !11252)
!11263 = !DILocation(line: 1010, column: 11, scope: !11252)
!11264 = !DILocation(line: 1011, column: 13, scope: !11252)
!11265 = !DILocation(line: 1011, column: 5, scope: !11252)
!11266 = !DILocation(line: 1011, column: 11, scope: !11252)
!11267 = !DILocation(line: 1012, column: 13, scope: !11252)
!11268 = !DILocation(line: 1012, column: 5, scope: !11252)
!11269 = !DILocation(line: 1012, column: 11, scope: !11252)
!11270 = !DILocation(line: 1013, column: 13, scope: !11252)
!11271 = !DILocation(line: 1013, column: 5, scope: !11252)
!11272 = !DILocation(line: 1013, column: 11, scope: !11252)
!11273 = !DILocation(line: 1014, column: 13, scope: !11252)
!11274 = !DILocation(line: 1014, column: 5, scope: !11252)
!11275 = !DILocation(line: 1014, column: 11, scope: !11252)
!11276 = !DILocation(line: 1015, column: 4, scope: !11252)
!11277 = !DILocation(line: 1017, column: 4, scope: !11205)
!11278 = !DILocation(line: 1017, column: 11, scope: !11205)
!11279 = !DILocation(line: 1018, column: 4, scope: !11205)
!11280 = !DILocation(line: 1018, column: 11, scope: !11205)
!11281 = !DILocation(line: 1019, column: 4, scope: !11205)
!11282 = !DILocation(line: 1019, column: 11, scope: !11205)
!11283 = !DILocation(line: 1021, column: 4, scope: !11205)
!11284 = !DILocation(line: 1021, column: 11, scope: !11205)
!11285 = !DILocation(line: 1022, column: 4, scope: !11205)
!11286 = !DILocation(line: 1022, column: 11, scope: !11205)
!11287 = !DILocation(line: 1023, column: 4, scope: !11205)
!11288 = !DILocation(line: 1023, column: 11, scope: !11205)
!11289 = !DILocation(line: 1028, column: 7, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 1028, column: 7)
!11291 = !DILocation(line: 1028, column: 7, scope: !11028)
!11292 = !DILocation(line: 1029, column: 8, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 1028, column: 17)
!11294 = !DILocation(line: 1029, column: 6, scope: !11293)
!11295 = !DILocation(line: 1030, column: 8, scope: !11293)
!11296 = !DILocation(line: 1030, column: 6, scope: !11293)
!11297 = !DILocation(line: 1031, column: 12, scope: !11293)
!11298 = !DILocation(line: 1031, column: 20, scope: !11293)
!11299 = !DILocation(line: 1031, column: 19, scope: !11293)
!11300 = !DILocation(line: 1031, column: 4, scope: !11293)
!11301 = !DILocation(line: 1031, column: 10, scope: !11293)
!11302 = !DILocation(line: 1032, column: 12, scope: !11293)
!11303 = !DILocation(line: 1032, column: 20, scope: !11293)
!11304 = !DILocation(line: 1032, column: 19, scope: !11293)
!11305 = !DILocation(line: 1032, column: 4, scope: !11293)
!11306 = !DILocation(line: 1032, column: 10, scope: !11293)
!11307 = !DILocation(line: 1033, column: 12, scope: !11293)
!11308 = !DILocation(line: 1033, column: 20, scope: !11293)
!11309 = !DILocation(line: 1033, column: 19, scope: !11293)
!11310 = !DILocation(line: 1033, column: 4, scope: !11293)
!11311 = !DILocation(line: 1033, column: 10, scope: !11293)
!11312 = !DILocation(line: 1034, column: 12, scope: !11293)
!11313 = !DILocation(line: 1034, column: 20, scope: !11293)
!11314 = !DILocation(line: 1034, column: 19, scope: !11293)
!11315 = !DILocation(line: 1034, column: 4, scope: !11293)
!11316 = !DILocation(line: 1034, column: 10, scope: !11293)
!11317 = !DILocation(line: 1035, column: 3, scope: !11293)
!11318 = !DILocation(line: 1038, column: 7, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 1038, column: 7)
!11320 = !DILocation(line: 1038, column: 12, scope: !11319)
!11321 = !DILocation(line: 1038, column: 18, scope: !11319)
!11322 = !DILocation(line: 1038, column: 7, scope: !11028)
!11323 = !DILocalVariable(name: "max", scope: !11324, file: !3, line: 1039, type: !91)
!11324 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 1038, column: 32)
!11325 = !DILocation(line: 1039, column: 10, scope: !11324)
!11326 = !DILocation(line: 1040, column: 8, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1040, column: 8)
!11328 = !DILocation(line: 1040, column: 13, scope: !11327)
!11329 = !DILocation(line: 1040, column: 20, scope: !11327)
!11330 = !DILocation(line: 1040, column: 8, scope: !11324)
!11331 = !DILocalVariable(name: "origf", scope: !11332, file: !3, line: 1041, type: !91)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 1040, column: 24)
!11333 = !DILocation(line: 1041, column: 11, scope: !11332)
!11334 = !DILocation(line: 1041, column: 24, scope: !11332)
!11335 = !DILocation(line: 1041, column: 29, scope: !11332)
!11336 = !DILocation(line: 1041, column: 21, scope: !11332)
!11337 = !DILocation(line: 1044, column: 9, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1044, column: 9)
!11339 = !DILocation(line: 1044, column: 14, scope: !11338)
!11340 = !DILocation(line: 1044, column: 24, scope: !11338)
!11341 = !DILocation(line: 1044, column: 9, scope: !11332)
!11342 = !DILocation(line: 1045, column: 10, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 1045, column: 10)
!11344 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 1044, column: 36)
!11345 = !DILocation(line: 1045, column: 12, scope: !11343)
!11346 = !DILocation(line: 1045, column: 10, scope: !11344)
!11347 = !DILocation(line: 1045, column: 31, scope: !11343)
!11348 = !DILocation(line: 1045, column: 25, scope: !11343)
!11349 = !DILocation(line: 1045, column: 22, scope: !11343)
!11350 = !DILocation(line: 1045, column: 19, scope: !11343)
!11351 = !DILocation(line: 1046, column: 15, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 1046, column: 15)
!11353 = !DILocation(line: 1046, column: 17, scope: !11352)
!11354 = !DILocation(line: 1046, column: 15, scope: !11343)
!11355 = !DILocation(line: 1046, column: 37, scope: !11352)
!11356 = !DILocation(line: 1046, column: 31, scope: !11352)
!11357 = !DILocation(line: 1046, column: 30, scope: !11352)
!11358 = !DILocation(line: 1046, column: 29, scope: !11352)
!11359 = !DILocation(line: 1046, column: 26, scope: !11352)
!11360 = !DILocation(line: 1046, column: 24, scope: !11352)
!11361 = !DILocation(line: 1048, column: 10, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 1048, column: 10)
!11363 = !DILocation(line: 1048, column: 15, scope: !11362)
!11364 = !DILocation(line: 1048, column: 20, scope: !11362)
!11365 = !DILocation(line: 1048, column: 10, scope: !11344)
!11366 = !DILocalVariable(name: "orig", scope: !11367, file: !3, line: 1049, type: !92)
!11367 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 1048, column: 39)
!11368 = !DILocation(line: 1049, column: 11, scope: !11367)
!11369 = !DILocation(line: 1049, column: 28, scope: !11367)
!11370 = !DILocation(line: 1049, column: 22, scope: !11367)
!11371 = !DILocation(line: 1049, column: 17, scope: !11367)
!11372 = !DILocation(line: 1050, column: 11, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 1050, column: 11)
!11374 = !DILocation(line: 1050, column: 16, scope: !11373)
!11375 = !DILocation(line: 1050, column: 11, scope: !11367)
!11376 = !DILocation(line: 1051, column: 17, scope: !11373)
!11377 = !DILocation(line: 1051, column: 16, scope: !11373)
!11378 = !DILocation(line: 1051, column: 10, scope: !11373)
!11379 = !DILocation(line: 1051, column: 8, scope: !11373)
!11380 = !DILocation(line: 1052, column: 6, scope: !11367)
!11381 = !DILocation(line: 1053, column: 5, scope: !11344)
!11382 = !DILocation(line: 1055, column: 10, scope: !11332)
!11383 = !DILocation(line: 1055, column: 15, scope: !11332)
!11384 = !DILocation(line: 1055, column: 8, scope: !11332)
!11385 = !DILocation(line: 1057, column: 14, scope: !11332)
!11386 = !DILocation(line: 1057, column: 19, scope: !11332)
!11387 = !DILocation(line: 1057, column: 5, scope: !11332)
!11388 = !DILocation(line: 1057, column: 11, scope: !11332)
!11389 = !DILocation(line: 1058, column: 14, scope: !11332)
!11390 = !DILocation(line: 1058, column: 19, scope: !11332)
!11391 = !DILocation(line: 1058, column: 5, scope: !11332)
!11392 = !DILocation(line: 1058, column: 11, scope: !11332)
!11393 = !DILocation(line: 1059, column: 4, scope: !11332)
!11394 = !DILocation(line: 1060, column: 8, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1060, column: 8)
!11396 = !DILocation(line: 1060, column: 13, scope: !11395)
!11397 = !DILocation(line: 1060, column: 20, scope: !11395)
!11398 = !DILocation(line: 1060, column: 8, scope: !11324)
!11399 = !DILocalVariable(name: "origf", scope: !11400, file: !3, line: 1061, type: !91)
!11400 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1060, column: 24)
!11401 = !DILocation(line: 1061, column: 11, scope: !11400)
!11402 = !DILocation(line: 1061, column: 24, scope: !11400)
!11403 = !DILocation(line: 1061, column: 29, scope: !11400)
!11404 = !DILocation(line: 1061, column: 21, scope: !11400)
!11405 = !DILocation(line: 1064, column: 9, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1064, column: 9)
!11407 = !DILocation(line: 1064, column: 14, scope: !11406)
!11408 = !DILocation(line: 1064, column: 24, scope: !11406)
!11409 = !DILocation(line: 1064, column: 9, scope: !11400)
!11410 = !DILocation(line: 1065, column: 10, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 1065, column: 10)
!11412 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 1064, column: 36)
!11413 = !DILocation(line: 1065, column: 12, scope: !11411)
!11414 = !DILocation(line: 1065, column: 10, scope: !11412)
!11415 = !DILocation(line: 1065, column: 31, scope: !11411)
!11416 = !DILocation(line: 1065, column: 25, scope: !11411)
!11417 = !DILocation(line: 1065, column: 22, scope: !11411)
!11418 = !DILocation(line: 1065, column: 19, scope: !11411)
!11419 = !DILocation(line: 1066, column: 15, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 1066, column: 15)
!11421 = !DILocation(line: 1066, column: 17, scope: !11420)
!11422 = !DILocation(line: 1066, column: 15, scope: !11411)
!11423 = !DILocation(line: 1066, column: 37, scope: !11420)
!11424 = !DILocation(line: 1066, column: 31, scope: !11420)
!11425 = !DILocation(line: 1066, column: 30, scope: !11420)
!11426 = !DILocation(line: 1066, column: 29, scope: !11420)
!11427 = !DILocation(line: 1066, column: 26, scope: !11420)
!11428 = !DILocation(line: 1066, column: 24, scope: !11420)
!11429 = !DILocation(line: 1068, column: 10, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 1068, column: 10)
!11431 = !DILocation(line: 1068, column: 15, scope: !11430)
!11432 = !DILocation(line: 1068, column: 20, scope: !11430)
!11433 = !DILocation(line: 1068, column: 10, scope: !11412)
!11434 = !DILocalVariable(name: "orig", scope: !11435, file: !3, line: 1069, type: !92)
!11435 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1068, column: 39)
!11436 = !DILocation(line: 1069, column: 11, scope: !11435)
!11437 = !DILocation(line: 1069, column: 28, scope: !11435)
!11438 = !DILocation(line: 1069, column: 22, scope: !11435)
!11439 = !DILocation(line: 1069, column: 17, scope: !11435)
!11440 = !DILocation(line: 1070, column: 11, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 1070, column: 11)
!11442 = !DILocation(line: 1070, column: 16, scope: !11441)
!11443 = !DILocation(line: 1070, column: 11, scope: !11435)
!11444 = !DILocation(line: 1071, column: 17, scope: !11441)
!11445 = !DILocation(line: 1071, column: 16, scope: !11441)
!11446 = !DILocation(line: 1071, column: 10, scope: !11441)
!11447 = !DILocation(line: 1071, column: 8, scope: !11441)
!11448 = !DILocation(line: 1072, column: 6, scope: !11435)
!11449 = !DILocation(line: 1073, column: 5, scope: !11412)
!11450 = !DILocation(line: 1075, column: 9, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1075, column: 9)
!11452 = !DILocation(line: 1075, column: 13, scope: !11451)
!11453 = !DILocation(line: 1075, column: 18, scope: !11451)
!11454 = !DILocation(line: 1075, column: 12, scope: !11451)
!11455 = !DILocation(line: 1075, column: 9, scope: !11400)
!11456 = !DILocation(line: 1076, column: 11, scope: !11451)
!11457 = !DILocation(line: 1076, column: 16, scope: !11451)
!11458 = !DILocation(line: 1076, column: 9, scope: !11451)
!11459 = !DILocation(line: 1076, column: 6, scope: !11451)
!11460 = !DILocation(line: 1078, column: 14, scope: !11400)
!11461 = !DILocation(line: 1078, column: 19, scope: !11400)
!11462 = !DILocation(line: 1078, column: 5, scope: !11400)
!11463 = !DILocation(line: 1078, column: 11, scope: !11400)
!11464 = !DILocation(line: 1079, column: 14, scope: !11400)
!11465 = !DILocation(line: 1079, column: 19, scope: !11400)
!11466 = !DILocation(line: 1079, column: 5, scope: !11400)
!11467 = !DILocation(line: 1079, column: 11, scope: !11400)
!11468 = !DILocation(line: 1080, column: 4, scope: !11400)
!11469 = !DILocation(line: 1081, column: 8, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1081, column: 8)
!11471 = !DILocation(line: 1081, column: 11, scope: !11470)
!11472 = !DILocation(line: 1081, column: 8, scope: !11324)
!11473 = !DILocation(line: 1082, column: 14, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1081, column: 19)
!11475 = !DILocation(line: 1082, column: 5, scope: !11474)
!11476 = !DILocation(line: 1082, column: 11, scope: !11474)
!11477 = !DILocation(line: 1083, column: 14, scope: !11474)
!11478 = !DILocation(line: 1083, column: 5, scope: !11474)
!11479 = !DILocation(line: 1083, column: 11, scope: !11474)
!11480 = !DILocation(line: 1084, column: 4, scope: !11474)
!11481 = !DILocation(line: 1086, column: 3, scope: !11324)
!11482 = !DILocation(line: 1088, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 1088, column: 7)
!11484 = !DILocation(line: 1088, column: 12, scope: !11483)
!11485 = !DILocation(line: 1088, column: 20, scope: !11483)
!11486 = !DILocation(line: 1088, column: 27, scope: !11483)
!11487 = !DILocation(line: 1088, column: 30, scope: !11483)
!11488 = !DILocation(line: 1088, column: 35, scope: !11483)
!11489 = !DILocation(line: 1088, column: 43, scope: !11483)
!11490 = !DILocation(line: 1088, column: 7, scope: !11028)
!11491 = !DILocation(line: 1089, column: 10, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 1088, column: 51)
!11493 = !DILocation(line: 1089, column: 15, scope: !11492)
!11494 = !DILocation(line: 1089, column: 26, scope: !11492)
!11495 = !DILocation(line: 1089, column: 31, scope: !11492)
!11496 = !DILocation(line: 1089, column: 24, scope: !11492)
!11497 = !DILocation(line: 1089, column: 8, scope: !11492)
!11498 = !DILocation(line: 1090, column: 8, scope: !11492)
!11499 = !DILocation(line: 1090, column: 13, scope: !11492)
!11500 = !DILocation(line: 1090, column: 23, scope: !11492)
!11501 = !DILocation(line: 1090, column: 26, scope: !11492)
!11502 = !DILocation(line: 1090, column: 25, scope: !11492)
!11503 = !DILocation(line: 1090, column: 21, scope: !11492)
!11504 = !DILocation(line: 1090, column: 6, scope: !11492)
!11505 = !DILocation(line: 1091, column: 13, scope: !11492)
!11506 = !DILocation(line: 1091, column: 4, scope: !11492)
!11507 = !DILocation(line: 1091, column: 10, scope: !11492)
!11508 = !DILocation(line: 1092, column: 13, scope: !11492)
!11509 = !DILocation(line: 1092, column: 4, scope: !11492)
!11510 = !DILocation(line: 1092, column: 10, scope: !11492)
!11511 = !DILocation(line: 1093, column: 3, scope: !11492)
!11512 = !DILocation(line: 1094, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 1094, column: 7)
!11514 = !DILocation(line: 1094, column: 12, scope: !11513)
!11515 = !DILocation(line: 1094, column: 20, scope: !11513)
!11516 = !DILocation(line: 1094, column: 27, scope: !11513)
!11517 = !DILocation(line: 1094, column: 30, scope: !11513)
!11518 = !DILocation(line: 1094, column: 35, scope: !11513)
!11519 = !DILocation(line: 1094, column: 43, scope: !11513)
!11520 = !DILocation(line: 1094, column: 7, scope: !11028)
!11521 = !DILocation(line: 1095, column: 10, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 1094, column: 51)
!11523 = !DILocation(line: 1095, column: 15, scope: !11522)
!11524 = !DILocation(line: 1095, column: 26, scope: !11522)
!11525 = !DILocation(line: 1095, column: 31, scope: !11522)
!11526 = !DILocation(line: 1095, column: 24, scope: !11522)
!11527 = !DILocation(line: 1095, column: 8, scope: !11522)
!11528 = !DILocation(line: 1096, column: 8, scope: !11522)
!11529 = !DILocation(line: 1096, column: 13, scope: !11522)
!11530 = !DILocation(line: 1096, column: 23, scope: !11522)
!11531 = !DILocation(line: 1096, column: 26, scope: !11522)
!11532 = !DILocation(line: 1096, column: 25, scope: !11522)
!11533 = !DILocation(line: 1096, column: 21, scope: !11522)
!11534 = !DILocation(line: 1096, column: 6, scope: !11522)
!11535 = !DILocation(line: 1097, column: 13, scope: !11522)
!11536 = !DILocation(line: 1097, column: 4, scope: !11522)
!11537 = !DILocation(line: 1097, column: 10, scope: !11522)
!11538 = !DILocation(line: 1098, column: 13, scope: !11522)
!11539 = !DILocation(line: 1098, column: 4, scope: !11522)
!11540 = !DILocation(line: 1098, column: 10, scope: !11522)
!11541 = !DILocation(line: 1099, column: 3, scope: !11522)
!11542 = !DILocation(line: 1101, column: 14, scope: !11028)
!11543 = !DILocation(line: 1101, column: 3, scope: !11028)
!11544 = !DILocation(line: 1101, column: 12, scope: !11028)
!11545 = !DILocation(line: 1102, column: 14, scope: !11028)
!11546 = !DILocation(line: 1102, column: 3, scope: !11028)
!11547 = !DILocation(line: 1102, column: 12, scope: !11028)
!11548 = !DILocation(line: 1105, column: 1, scope: !10749)
!11549 = distinct !DISubprogram(name: "rgb_to_bw", scope: !9082, file: !9082, line: 211, type: !9083, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!11550 = !DILocalVariable(name: "rgb", arg: 1, scope: !11549, file: !9082, line: 211, type: !954)
!11551 = !DILocation(line: 211, column: 37, scope: !11549)
!11552 = !DILocation(line: 213, column: 17, scope: !11549)
!11553 = !DILocation(line: 213, column: 15, scope: !11549)
!11554 = !DILocation(line: 213, column: 34, scope: !11549)
!11555 = !DILocation(line: 213, column: 32, scope: !11549)
!11556 = !DILocation(line: 213, column: 24, scope: !11549)
!11557 = !DILocation(line: 213, column: 50, scope: !11549)
!11558 = !DILocation(line: 213, column: 48, scope: !11549)
!11559 = !DILocation(line: 213, column: 41, scope: !11549)
!11560 = !DILocation(line: 213, column: 2, scope: !11549)
!11561 = distinct !DISubprogram(name: "do_sky_tex", scope: !3, file: !3, line: 3018, type: !11562, scopeLine: 3019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{null, !954, !201, !954, !201, !201, !201, !92, !141}
!11564 = !DILocalVariable(name: "rco", arg: 1, scope: !11561, file: !3, line: 3018, type: !954)
!11565 = !DILocation(line: 3018, column: 29, scope: !11561)
!11566 = !DILocalVariable(name: "lo", arg: 2, scope: !11561, file: !3, line: 3018, type: !201)
!11567 = !DILocation(line: 3018, column: 43, scope: !11561)
!11568 = !DILocalVariable(name: "dxyview", arg: 3, scope: !11561, file: !3, line: 3018, type: !954)
!11569 = !DILocation(line: 3018, column: 62, scope: !11561)
!11570 = !DILocalVariable(name: "hor", arg: 4, scope: !11561, file: !3, line: 3018, type: !201)
!11571 = !DILocation(line: 3018, column: 80, scope: !11561)
!11572 = !DILocalVariable(name: "zen", arg: 5, scope: !11561, file: !3, line: 3018, type: !201)
!11573 = !DILocation(line: 3018, column: 94, scope: !11561)
!11574 = !DILocalVariable(name: "blend", arg: 6, scope: !11561, file: !3, line: 3018, type: !201)
!11575 = !DILocation(line: 3018, column: 109, scope: !11561)
!11576 = !DILocalVariable(name: "skyflag", arg: 7, scope: !11561, file: !3, line: 3018, type: !92)
!11577 = !DILocation(line: 3018, column: 120, scope: !11561)
!11578 = !DILocalVariable(name: "thread", arg: 8, scope: !11561, file: !3, line: 3018, type: !141)
!11579 = !DILocation(line: 3018, column: 135, scope: !11561)
!11580 = !DILocalVariable(name: "mtex", scope: !11561, file: !3, line: 3020, type: !3587)
!11581 = !DILocation(line: 3020, column: 8, scope: !11561)
!11582 = !DILocalVariable(name: "tex", scope: !11561, file: !3, line: 3021, type: !3402)
!11583 = !DILocation(line: 3021, column: 7, scope: !11561)
!11584 = !DILocalVariable(name: "texres", scope: !11561, file: !3, line: 3022, type: !3577)
!11585 = !DILocation(line: 3022, column: 12, scope: !11561)
!11586 = !DILocalVariable(name: "co", scope: !11561, file: !3, line: 3023, type: !201)
!11587 = !DILocation(line: 3023, column: 9, scope: !11561)
!11588 = !DILocalVariable(name: "fact", scope: !11561, file: !3, line: 3023, type: !91)
!11589 = !DILocation(line: 3023, column: 13, scope: !11561)
!11590 = !DILocalVariable(name: "stencilTin", scope: !11561, file: !3, line: 3023, type: !91)
!11591 = !DILocation(line: 3023, column: 19, scope: !11561)
!11592 = !DILocalVariable(name: "tempvec", scope: !11561, file: !3, line: 3024, type: !344)
!11593 = !DILocation(line: 3024, column: 8, scope: !11561)
!11594 = !DILocalVariable(name: "texvec", scope: !11561, file: !3, line: 3024, type: !344)
!11595 = !DILocation(line: 3024, column: 20, scope: !11561)
!11596 = !DILocalVariable(name: "dxt", scope: !11561, file: !3, line: 3024, type: !344)
!11597 = !DILocation(line: 3024, column: 31, scope: !11561)
!11598 = !DILocalVariable(name: "dyt", scope: !11561, file: !3, line: 3024, type: !344)
!11599 = !DILocation(line: 3024, column: 39, scope: !11561)
!11600 = !DILocalVariable(name: "tex_nr", scope: !11561, file: !3, line: 3025, type: !92)
!11601 = !DILocation(line: 3025, column: 6, scope: !11561)
!11602 = !DILocalVariable(name: "rgb", scope: !11561, file: !3, line: 3025, type: !92)
!11603 = !DILocation(line: 3025, column: 14, scope: !11561)
!11604 = !DILocation(line: 3027, column: 10, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 3027, column: 6)
!11606 = !DILocation(line: 3027, column: 18, scope: !11605)
!11607 = !DILocation(line: 3027, column: 6, scope: !11561)
!11608 = !DILocation(line: 3027, column: 30, scope: !11605)
!11609 = !DILocation(line: 3029, column: 9, scope: !11561)
!11610 = !DILocation(line: 3029, column: 12, scope: !11561)
!11611 = !DILocation(line: 3031, column: 13, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 3031, column: 2)
!11613 = !DILocation(line: 3031, column: 7, scope: !11612)
!11614 = !DILocation(line: 3031, column: 17, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11612, file: !3, line: 3031, column: 2)
!11616 = !DILocation(line: 3031, column: 23, scope: !11615)
!11617 = !DILocation(line: 3031, column: 2, scope: !11612)
!11618 = !DILocation(line: 3032, column: 19, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3032, column: 7)
!11620 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 3031, column: 44)
!11621 = !DILocation(line: 3032, column: 7, scope: !11619)
!11622 = !DILocation(line: 3032, column: 7, scope: !11620)
!11623 = !DILocation(line: 3033, column: 22, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 3032, column: 28)
!11625 = !DILocation(line: 3033, column: 10, scope: !11624)
!11626 = !DILocation(line: 3033, column: 8, scope: !11624)
!11627 = !DILocation(line: 3035, column: 9, scope: !11624)
!11628 = !DILocation(line: 3035, column: 15, scope: !11624)
!11629 = !DILocation(line: 3035, column: 7, scope: !11624)
!11630 = !DILocation(line: 3036, column: 8, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3036, column: 8)
!11632 = !DILocation(line: 3036, column: 12, scope: !11631)
!11633 = !DILocation(line: 3036, column: 8, scope: !11624)
!11634 = !DILocation(line: 3036, column: 21, scope: !11631)
!11635 = !DILocation(line: 3040, column: 8, scope: !11624)
!11636 = !DILocation(line: 3040, column: 6, scope: !11624)
!11637 = !DILocation(line: 3043, column: 8, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3043, column: 8)
!11639 = !DILocation(line: 3043, column: 8, scope: !11624)
!11640 = !DILocation(line: 3044, column: 29, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 3043, column: 17)
!11642 = !DILocation(line: 3044, column: 21, scope: !11641)
!11643 = !DILocation(line: 3044, column: 27, scope: !11641)
!11644 = !DILocation(line: 3044, column: 13, scope: !11641)
!11645 = !DILocation(line: 3044, column: 19, scope: !11641)
!11646 = !DILocation(line: 3044, column: 5, scope: !11641)
!11647 = !DILocation(line: 3044, column: 11, scope: !11641)
!11648 = !DILocation(line: 3045, column: 29, scope: !11641)
!11649 = !DILocation(line: 3045, column: 21, scope: !11641)
!11650 = !DILocation(line: 3045, column: 27, scope: !11641)
!11651 = !DILocation(line: 3045, column: 13, scope: !11641)
!11652 = !DILocation(line: 3045, column: 19, scope: !11641)
!11653 = !DILocation(line: 3045, column: 5, scope: !11641)
!11654 = !DILocation(line: 3045, column: 11, scope: !11641)
!11655 = !DILocation(line: 3046, column: 4, scope: !11641)
!11656 = !DILocation(line: 3048, column: 21, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 3047, column: 9)
!11658 = !DILocation(line: 3048, column: 27, scope: !11657)
!11659 = !DILocation(line: 3048, column: 13, scope: !11657)
!11660 = !DILocation(line: 3048, column: 19, scope: !11657)
!11661 = !DILocation(line: 3048, column: 5, scope: !11657)
!11662 = !DILocation(line: 3048, column: 11, scope: !11657)
!11663 = !DILocation(line: 3049, column: 21, scope: !11657)
!11664 = !DILocation(line: 3049, column: 27, scope: !11657)
!11665 = !DILocation(line: 3049, column: 13, scope: !11657)
!11666 = !DILocation(line: 3049, column: 19, scope: !11657)
!11667 = !DILocation(line: 3049, column: 5, scope: !11657)
!11668 = !DILocation(line: 3049, column: 11, scope: !11657)
!11669 = !DILocation(line: 3053, column: 12, scope: !11624)
!11670 = !DILocation(line: 3053, column: 18, scope: !11624)
!11671 = !DILocation(line: 3053, column: 4, scope: !11624)
!11672 = !DILocation(line: 3057, column: 9, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3057, column: 9)
!11674 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3053, column: 25)
!11675 = !DILocation(line: 3057, column: 15, scope: !11673)
!11676 = !DILocation(line: 3057, column: 18, scope: !11673)
!11677 = !DILocation(line: 3057, column: 9, scope: !11674)
!11678 = !DILocation(line: 3058, column: 38, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 3057, column: 25)
!11680 = !DILocation(line: 3058, column: 31, scope: !11679)
!11681 = !DILocation(line: 3058, column: 30, scope: !11679)
!11682 = !DILocation(line: 3058, column: 52, scope: !11679)
!11683 = !DILocation(line: 3058, column: 58, scope: !11679)
!11684 = !DILocation(line: 3058, column: 57, scope: !11679)
!11685 = !DILocation(line: 3058, column: 66, scope: !11679)
!11686 = !DILocation(line: 3058, column: 72, scope: !11679)
!11687 = !DILocation(line: 3058, column: 71, scope: !11679)
!11688 = !DILocation(line: 3058, column: 64, scope: !11679)
!11689 = !DILocation(line: 3058, column: 46, scope: !11679)
!11690 = !DILocation(line: 3058, column: 44, scope: !11679)
!11691 = !DILocation(line: 3058, column: 10, scope: !11679)
!11692 = !DILocation(line: 3059, column: 18, scope: !11679)
!11693 = !DILocation(line: 3059, column: 24, scope: !11679)
!11694 = !DILocation(line: 3059, column: 23, scope: !11679)
!11695 = !DILocation(line: 3059, column: 6, scope: !11679)
!11696 = !DILocation(line: 3059, column: 16, scope: !11679)
!11697 = !DILocation(line: 3060, column: 18, scope: !11679)
!11698 = !DILocation(line: 3060, column: 24, scope: !11679)
!11699 = !DILocation(line: 3060, column: 23, scope: !11679)
!11700 = !DILocation(line: 3060, column: 6, scope: !11679)
!11701 = !DILocation(line: 3060, column: 16, scope: !11679)
!11702 = !DILocation(line: 3061, column: 6, scope: !11679)
!11703 = !DILocation(line: 3061, column: 16, scope: !11679)
!11704 = !DILocation(line: 3062, column: 5, scope: !11679)
!11705 = !DILocation(line: 3066, column: 6, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 3063, column: 10)
!11707 = !DILocation(line: 3066, column: 16, scope: !11706)
!11708 = !DILocation(line: 3067, column: 6, scope: !11706)
!11709 = !DILocation(line: 3067, column: 16, scope: !11706)
!11710 = !DILocation(line: 3068, column: 6, scope: !11706)
!11711 = !DILocation(line: 3068, column: 16, scope: !11706)
!11712 = !DILocation(line: 3070, column: 9, scope: !11674)
!11713 = !DILocation(line: 3070, column: 7, scope: !11674)
!11714 = !DILocation(line: 3071, column: 5, scope: !11674)
!11715 = !DILocation(line: 3075, column: 9, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3075, column: 9)
!11717 = !DILocation(line: 3075, column: 17, scope: !11716)
!11718 = !DILocation(line: 3075, column: 9, scope: !11674)
!11719 = !DILocation(line: 3076, column: 10, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 3076, column: 10)
!11721 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3075, column: 29)
!11722 = !DILocation(line: 3076, column: 16, scope: !11720)
!11723 = !DILocation(line: 3076, column: 21, scope: !11720)
!11724 = !DILocation(line: 3076, column: 10, scope: !11721)
!11725 = !DILocation(line: 3076, column: 53, scope: !11720)
!11726 = !DILocation(line: 3076, column: 62, scope: !11720)
!11727 = !DILocation(line: 3076, column: 69, scope: !11720)
!11728 = !DILocation(line: 3076, column: 73, scope: !11720)
!11729 = !DILocation(line: 3076, column: 80, scope: !11720)
!11730 = !DILocation(line: 3076, column: 87, scope: !11720)
!11731 = !DILocation(line: 3076, column: 40, scope: !11720)
!11732 = !DILocation(line: 3077, column: 25, scope: !11720)
!11733 = !DILocation(line: 3077, column: 34, scope: !11720)
!11734 = !DILocation(line: 3077, column: 41, scope: !11720)
!11735 = !DILocation(line: 3077, column: 45, scope: !11720)
!11736 = !DILocation(line: 3077, column: 52, scope: !11720)
!11737 = !DILocation(line: 3077, column: 59, scope: !11720)
!11738 = !DILocation(line: 3077, column: 11, scope: !11720)
!11739 = !DILocation(line: 3079, column: 23, scope: !11721)
!11740 = !DILocation(line: 3079, column: 22, scope: !11721)
!11741 = !DILocation(line: 3079, column: 6, scope: !11721)
!11742 = !DILocation(line: 3079, column: 16, scope: !11721)
!11743 = !DILocation(line: 3081, column: 23, scope: !11721)
!11744 = !DILocation(line: 3081, column: 22, scope: !11721)
!11745 = !DILocation(line: 3081, column: 33, scope: !11721)
!11746 = !DILocation(line: 3081, column: 6, scope: !11721)
!11747 = !DILocation(line: 3081, column: 16, scope: !11721)
!11748 = !DILocation(line: 3082, column: 6, scope: !11721)
!11749 = !DILocation(line: 3082, column: 16, scope: !11721)
!11750 = !DILocation(line: 3084, column: 23, scope: !11721)
!11751 = !DILocation(line: 3084, column: 22, scope: !11721)
!11752 = !DILocation(line: 3084, column: 33, scope: !11721)
!11753 = !DILocation(line: 3084, column: 6, scope: !11721)
!11754 = !DILocation(line: 3084, column: 16, scope: !11721)
!11755 = !DILocation(line: 3085, column: 23, scope: !11721)
!11756 = !DILocation(line: 3085, column: 22, scope: !11721)
!11757 = !DILocation(line: 3085, column: 33, scope: !11721)
!11758 = !DILocation(line: 3085, column: 6, scope: !11721)
!11759 = !DILocation(line: 3085, column: 16, scope: !11721)
!11760 = !DILocation(line: 3086, column: 10, scope: !11721)
!11761 = !DILocation(line: 3086, column: 8, scope: !11721)
!11762 = !DILocation(line: 3087, column: 5, scope: !11721)
!11763 = !DILocation(line: 3090, column: 6, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3088, column: 10)
!11765 = !DILocation(line: 3092, column: 5, scope: !11674)
!11766 = !DILocation(line: 3094, column: 24, scope: !11674)
!11767 = !DILocation(line: 3094, column: 31, scope: !11674)
!11768 = !DILocation(line: 3094, column: 17, scope: !11674)
!11769 = !DILocation(line: 3094, column: 38, scope: !11674)
!11770 = !DILocation(line: 3094, column: 5, scope: !11674)
!11771 = !DILocation(line: 3094, column: 15, scope: !11674)
!11772 = !DILocation(line: 3095, column: 36, scope: !11674)
!11773 = !DILocation(line: 3095, column: 29, scope: !11674)
!11774 = !DILocation(line: 3095, column: 28, scope: !11674)
!11775 = !DILocation(line: 3095, column: 43, scope: !11674)
!11776 = !DILocation(line: 3095, column: 22, scope: !11674)
!11777 = !DILocation(line: 3095, column: 5, scope: !11674)
!11778 = !DILocation(line: 3095, column: 15, scope: !11674)
!11779 = !DILocation(line: 3096, column: 5, scope: !11674)
!11780 = !DILocation(line: 3096, column: 15, scope: !11674)
!11781 = !DILocation(line: 3097, column: 9, scope: !11674)
!11782 = !DILocation(line: 3097, column: 7, scope: !11674)
!11783 = !DILocation(line: 3098, column: 5, scope: !11674)
!11784 = !DILocation(line: 3100, column: 9, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3100, column: 9)
!11786 = !DILocation(line: 3100, column: 15, scope: !11785)
!11787 = !DILocation(line: 3100, column: 9, scope: !11674)
!11788 = !DILocation(line: 3101, column: 17, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 3100, column: 23)
!11790 = !DILocation(line: 3101, column: 26, scope: !11789)
!11791 = !DILocation(line: 3101, column: 6, scope: !11789)
!11792 = !DILocation(line: 3102, column: 16, scope: !11789)
!11793 = !DILocation(line: 3102, column: 22, scope: !11789)
!11794 = !DILocation(line: 3102, column: 30, scope: !11789)
!11795 = !DILocation(line: 3102, column: 40, scope: !11789)
!11796 = !DILocation(line: 3102, column: 6, scope: !11789)
!11797 = !DILocation(line: 3103, column: 10, scope: !11789)
!11798 = !DILocation(line: 3103, column: 8, scope: !11789)
!11799 = !DILocation(line: 3104, column: 5, scope: !11789)
!11800 = !DILocation(line: 3105, column: 5, scope: !11674)
!11801 = !DILocation(line: 3108, column: 9, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3108, column: 9)
!11803 = !DILocation(line: 3108, column: 9, scope: !11674)
!11804 = !DILocation(line: 3109, column: 17, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 3108, column: 14)
!11806 = !DILocation(line: 3109, column: 26, scope: !11805)
!11807 = !DILocation(line: 3109, column: 6, scope: !11805)
!11808 = !DILocation(line: 3110, column: 27, scope: !11805)
!11809 = !DILocation(line: 3110, column: 6, scope: !11805)
!11810 = !DILocation(line: 3111, column: 10, scope: !11805)
!11811 = !DILocation(line: 3111, column: 8, scope: !11805)
!11812 = !DILocation(line: 3112, column: 5, scope: !11805)
!11813 = !DILocation(line: 3114, column: 10, scope: !11802)
!11814 = !DILocation(line: 3114, column: 8, scope: !11802)
!11815 = !DILocation(line: 3120, column: 5, scope: !11674)
!11816 = !DILocation(line: 3124, column: 8, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3124, column: 8)
!11818 = !DILocation(line: 3124, column: 14, scope: !11817)
!11819 = !DILocation(line: 3124, column: 8, scope: !11624)
!11820 = !DILocation(line: 3124, column: 32, scope: !11817)
!11821 = !DILocation(line: 3124, column: 38, scope: !11817)
!11822 = !DILocation(line: 3124, column: 47, scope: !11817)
!11823 = !DILocation(line: 3124, column: 50, scope: !11817)
!11824 = !DILocation(line: 3124, column: 56, scope: !11817)
!11825 = !DILocation(line: 3124, column: 61, scope: !11817)
!11826 = !DILocation(line: 3124, column: 65, scope: !11817)
!11827 = !DILocation(line: 3124, column: 71, scope: !11817)
!11828 = !DILocation(line: 3124, column: 64, scope: !11817)
!11829 = !DILocation(line: 3124, column: 45, scope: !11817)
!11830 = !DILocation(line: 3124, column: 21, scope: !11817)
!11831 = !DILocation(line: 3124, column: 30, scope: !11817)
!11832 = !DILocation(line: 3125, column: 20, scope: !11817)
!11833 = !DILocation(line: 3125, column: 26, scope: !11817)
!11834 = !DILocation(line: 3125, column: 35, scope: !11817)
!11835 = !DILocation(line: 3125, column: 41, scope: !11817)
!11836 = !DILocation(line: 3125, column: 33, scope: !11817)
!11837 = !DILocation(line: 3125, column: 9, scope: !11817)
!11838 = !DILocation(line: 3125, column: 18, scope: !11817)
!11839 = !DILocation(line: 3127, column: 8, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3127, column: 8)
!11841 = !DILocation(line: 3127, column: 14, scope: !11840)
!11842 = !DILocation(line: 3127, column: 8, scope: !11624)
!11843 = !DILocation(line: 3127, column: 32, scope: !11840)
!11844 = !DILocation(line: 3127, column: 38, scope: !11840)
!11845 = !DILocation(line: 3127, column: 47, scope: !11840)
!11846 = !DILocation(line: 3127, column: 50, scope: !11840)
!11847 = !DILocation(line: 3127, column: 56, scope: !11840)
!11848 = !DILocation(line: 3127, column: 61, scope: !11840)
!11849 = !DILocation(line: 3127, column: 65, scope: !11840)
!11850 = !DILocation(line: 3127, column: 71, scope: !11840)
!11851 = !DILocation(line: 3127, column: 64, scope: !11840)
!11852 = !DILocation(line: 3127, column: 45, scope: !11840)
!11853 = !DILocation(line: 3127, column: 21, scope: !11840)
!11854 = !DILocation(line: 3127, column: 30, scope: !11840)
!11855 = !DILocation(line: 3128, column: 20, scope: !11840)
!11856 = !DILocation(line: 3128, column: 26, scope: !11840)
!11857 = !DILocation(line: 3128, column: 35, scope: !11840)
!11858 = !DILocation(line: 3128, column: 41, scope: !11840)
!11859 = !DILocation(line: 3128, column: 33, scope: !11840)
!11860 = !DILocation(line: 3128, column: 9, scope: !11840)
!11861 = !DILocation(line: 3128, column: 18, scope: !11840)
!11862 = !DILocation(line: 3130, column: 8, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3130, column: 8)
!11864 = !DILocation(line: 3130, column: 14, scope: !11863)
!11865 = !DILocation(line: 3130, column: 8, scope: !11624)
!11866 = !DILocation(line: 3130, column: 32, scope: !11863)
!11867 = !DILocation(line: 3130, column: 38, scope: !11863)
!11868 = !DILocation(line: 3130, column: 47, scope: !11863)
!11869 = !DILocation(line: 3130, column: 50, scope: !11863)
!11870 = !DILocation(line: 3130, column: 56, scope: !11863)
!11871 = !DILocation(line: 3130, column: 61, scope: !11863)
!11872 = !DILocation(line: 3130, column: 65, scope: !11863)
!11873 = !DILocation(line: 3130, column: 71, scope: !11863)
!11874 = !DILocation(line: 3130, column: 64, scope: !11863)
!11875 = !DILocation(line: 3130, column: 45, scope: !11863)
!11876 = !DILocation(line: 3130, column: 21, scope: !11863)
!11877 = !DILocation(line: 3130, column: 30, scope: !11863)
!11878 = !DILocation(line: 3131, column: 20, scope: !11863)
!11879 = !DILocation(line: 3131, column: 26, scope: !11863)
!11880 = !DILocation(line: 3131, column: 35, scope: !11863)
!11881 = !DILocation(line: 3131, column: 41, scope: !11863)
!11882 = !DILocation(line: 3131, column: 33, scope: !11863)
!11883 = !DILocation(line: 3131, column: 9, scope: !11863)
!11884 = !DILocation(line: 3131, column: 18, scope: !11863)
!11885 = !DILocation(line: 3134, column: 8, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3134, column: 8)
!11887 = !DILocation(line: 3134, column: 13, scope: !11886)
!11888 = !DILocation(line: 3134, column: 17, scope: !11886)
!11889 = !DILocation(line: 3134, column: 8, scope: !11624)
!11890 = !DILocation(line: 3134, column: 44, scope: !11886)
!11891 = !DILocation(line: 3134, column: 50, scope: !11886)
!11892 = !DILocation(line: 3134, column: 70, scope: !11886)
!11893 = !DILocation(line: 3134, column: 75, scope: !11886)
!11894 = !DILocation(line: 3134, column: 30, scope: !11886)
!11895 = !DILocation(line: 3136, column: 19, scope: !11624)
!11896 = !DILocation(line: 3136, column: 25, scope: !11624)
!11897 = !DILocation(line: 3136, column: 30, scope: !11624)
!11898 = !DILocation(line: 3136, column: 38, scope: !11624)
!11899 = !DILocation(line: 3136, column: 43, scope: !11624)
!11900 = !DILocation(line: 3136, column: 50, scope: !11624)
!11901 = !DILocation(line: 3136, column: 48, scope: !11624)
!11902 = !DILocation(line: 3136, column: 64, scope: !11624)
!11903 = !DILocation(line: 3136, column: 72, scope: !11624)
!11904 = !DILocation(line: 3136, column: 78, scope: !11624)
!11905 = !DILocation(line: 3136, column: 94, scope: !11624)
!11906 = !DILocation(line: 3136, column: 10, scope: !11624)
!11907 = !DILocation(line: 3136, column: 8, scope: !11624)
!11908 = !DILocation(line: 3139, column: 8, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3139, column: 8)
!11910 = !DILocation(line: 3139, column: 12, scope: !11909)
!11911 = !DILocation(line: 3139, column: 16, scope: !11909)
!11912 = !DILocation(line: 3139, column: 22, scope: !11909)
!11913 = !DILocation(line: 3139, column: 30, scope: !11909)
!11914 = !DILocation(line: 3139, column: 8, scope: !11624)
!11915 = !DILocation(line: 3140, column: 36, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 3139, column: 48)
!11917 = !DILocation(line: 3140, column: 18, scope: !11916)
!11918 = !DILocation(line: 3140, column: 12, scope: !11916)
!11919 = !DILocation(line: 3140, column: 16, scope: !11916)
!11920 = !DILocation(line: 3141, column: 8, scope: !11916)
!11921 = !DILocation(line: 3142, column: 4, scope: !11916)
!11922 = !DILocation(line: 3143, column: 8, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3143, column: 8)
!11924 = !DILocation(line: 3143, column: 14, scope: !11923)
!11925 = !DILocation(line: 3143, column: 22, scope: !11923)
!11926 = !DILocation(line: 3143, column: 8, scope: !11624)
!11927 = !DILocation(line: 3144, column: 9, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 3144, column: 9)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 3143, column: 39)
!11930 = !DILocation(line: 3144, column: 9, scope: !11929)
!11931 = !DILocation(line: 3145, column: 29, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 3144, column: 14)
!11933 = !DILocation(line: 3145, column: 21, scope: !11932)
!11934 = !DILocation(line: 3145, column: 13, scope: !11932)
!11935 = !DILocation(line: 3145, column: 15, scope: !11932)
!11936 = !DILocation(line: 3146, column: 29, scope: !11932)
!11937 = !DILocation(line: 3146, column: 21, scope: !11932)
!11938 = !DILocation(line: 3146, column: 13, scope: !11932)
!11939 = !DILocation(line: 3146, column: 15, scope: !11932)
!11940 = !DILocation(line: 3147, column: 29, scope: !11932)
!11941 = !DILocation(line: 3147, column: 21, scope: !11932)
!11942 = !DILocation(line: 3147, column: 13, scope: !11932)
!11943 = !DILocation(line: 3147, column: 15, scope: !11932)
!11944 = !DILocation(line: 3148, column: 5, scope: !11932)
!11945 = !DILocation(line: 3149, column: 34, scope: !11928)
!11946 = !DILocation(line: 3149, column: 26, scope: !11928)
!11947 = !DILocation(line: 3149, column: 17, scope: !11928)
!11948 = !DILocation(line: 3149, column: 20, scope: !11928)
!11949 = !DILocation(line: 3150, column: 4, scope: !11929)
!11950 = !DILocation(line: 3151, column: 8, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3151, column: 8)
!11952 = !DILocation(line: 3151, column: 14, scope: !11951)
!11953 = !DILocation(line: 3151, column: 22, scope: !11951)
!11954 = !DILocation(line: 3151, column: 8, scope: !11624)
!11955 = !DILocation(line: 3152, column: 9, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 3152, column: 9)
!11957 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 3151, column: 38)
!11958 = !DILocation(line: 3152, column: 9, scope: !11957)
!11959 = !DILocation(line: 3153, column: 19, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 3152, column: 14)
!11961 = !DILocation(line: 3153, column: 10, scope: !11960)
!11962 = !DILocation(line: 3154, column: 18, scope: !11960)
!11963 = !DILocation(line: 3154, column: 13, scope: !11960)
!11964 = !DILocation(line: 3154, column: 15, scope: !11960)
!11965 = !DILocation(line: 3155, column: 19, scope: !11960)
!11966 = !DILocation(line: 3155, column: 16, scope: !11960)
!11967 = !DILocation(line: 3156, column: 5, scope: !11960)
!11968 = !DILocation(line: 3158, column: 19, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 3157, column: 10)
!11970 = !DILocation(line: 3158, column: 10, scope: !11969)
!11971 = !DILocation(line: 3159, column: 19, scope: !11969)
!11972 = !DILocation(line: 3159, column: 13, scope: !11969)
!11973 = !DILocation(line: 3159, column: 16, scope: !11969)
!11974 = !DILocation(line: 3160, column: 19, scope: !11969)
!11975 = !DILocation(line: 3160, column: 16, scope: !11969)
!11976 = !DILocation(line: 3162, column: 4, scope: !11957)
!11977 = !DILocation(line: 3164, column: 9, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3164, column: 9)
!11979 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 3163, column: 9)
!11980 = !DILocation(line: 3164, column: 9, scope: !11979)
!11981 = !DILocation(line: 3164, column: 27, scope: !11978)
!11982 = !DILocation(line: 3164, column: 21, scope: !11978)
!11983 = !DILocation(line: 3164, column: 24, scope: !11978)
!11984 = !DILocation(line: 3164, column: 14, scope: !11978)
!11985 = !DILocation(line: 3165, column: 23, scope: !11978)
!11986 = !DILocation(line: 3165, column: 17, scope: !11978)
!11987 = !DILocation(line: 3165, column: 20, scope: !11978)
!11988 = !DILocation(line: 3169, column: 8, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3169, column: 8)
!11990 = !DILocation(line: 3169, column: 14, scope: !11989)
!11991 = !DILocation(line: 3169, column: 20, scope: !11989)
!11992 = !DILocation(line: 3169, column: 8, scope: !11624)
!11993 = !DILocalVariable(name: "tcol", scope: !11994, file: !3, line: 3170, type: !344)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 3169, column: 63)
!11995 = !DILocation(line: 3170, column: 11, scope: !11994)
!11996 = !DILocation(line: 3172, column: 9, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 3172, column: 9)
!11998 = !DILocation(line: 3172, column: 12, scope: !11997)
!11999 = !DILocation(line: 3172, column: 9, scope: !11994)
!12000 = !DILocation(line: 3173, column: 17, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 3172, column: 17)
!12002 = !DILocation(line: 3173, column: 23, scope: !12001)
!12003 = !DILocation(line: 3173, column: 13, scope: !12001)
!12004 = !DILocation(line: 3173, column: 15, scope: !12001)
!12005 = !DILocation(line: 3174, column: 17, scope: !12001)
!12006 = !DILocation(line: 3174, column: 23, scope: !12001)
!12007 = !DILocation(line: 3174, column: 13, scope: !12001)
!12008 = !DILocation(line: 3174, column: 15, scope: !12001)
!12009 = !DILocation(line: 3175, column: 17, scope: !12001)
!12010 = !DILocation(line: 3175, column: 23, scope: !12001)
!12011 = !DILocation(line: 3175, column: 13, scope: !12001)
!12012 = !DILocation(line: 3175, column: 15, scope: !12001)
!12013 = !DILocation(line: 3176, column: 5, scope: !12001)
!12014 = !DILocation(line: 3177, column: 29, scope: !11997)
!12015 = !DILocation(line: 3177, column: 17, scope: !11997)
!12016 = !DILocation(line: 3177, column: 20, scope: !11997)
!12017 = !DILocation(line: 3179, column: 21, scope: !11994)
!12018 = !DILocation(line: 3179, column: 5, scope: !11994)
!12019 = !DILocation(line: 3179, column: 12, scope: !11994)
!12020 = !DILocation(line: 3179, column: 41, scope: !11994)
!12021 = !DILocation(line: 3179, column: 25, scope: !11994)
!12022 = !DILocation(line: 3179, column: 32, scope: !11994)
!12023 = !DILocation(line: 3179, column: 61, scope: !11994)
!12024 = !DILocation(line: 3179, column: 45, scope: !11994)
!12025 = !DILocation(line: 3179, column: 52, scope: !11994)
!12026 = !DILocation(line: 3182, column: 9, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 3182, column: 9)
!12028 = !DILocation(line: 3182, column: 14, scope: !12027)
!12029 = !DILocation(line: 3182, column: 18, scope: !12027)
!12030 = !DILocation(line: 3182, column: 9, scope: !11994)
!12031 = !DILocalVariable(name: "ima", scope: !12032, file: !3, line: 3183, type: !3130)
!12032 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 3182, column: 31)
!12033 = !DILocation(line: 3183, column: 13, scope: !12032)
!12034 = !DILocation(line: 3183, column: 19, scope: !12032)
!12035 = !DILocation(line: 3183, column: 24, scope: !12032)
!12036 = !DILocalVariable(name: "ibuf", scope: !12032, file: !3, line: 3184, type: !3706)
!12037 = !DILocation(line: 3184, column: 13, scope: !12032)
!12038 = !DILocation(line: 3184, column: 48, scope: !12032)
!12039 = !DILocation(line: 3184, column: 54, scope: !12032)
!12040 = !DILocation(line: 3184, column: 59, scope: !12032)
!12041 = !DILocation(line: 3184, column: 68, scope: !12032)
!12042 = !DILocation(line: 3184, column: 20, scope: !12032)
!12043 = !DILocation(line: 3187, column: 10, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 3187, column: 10)
!12045 = !DILocation(line: 3187, column: 15, scope: !12044)
!12046 = !DILocation(line: 3187, column: 20, scope: !12044)
!12047 = !DILocation(line: 3187, column: 26, scope: !12044)
!12048 = !DILocation(line: 3187, column: 19, scope: !12044)
!12049 = !DILocation(line: 3187, column: 38, scope: !12044)
!12050 = !DILocation(line: 3187, column: 43, scope: !12044)
!12051 = !DILocation(line: 3187, column: 41, scope: !12044)
!12052 = !DILocation(line: 3187, column: 10, scope: !12032)
!12053 = !DILocation(line: 3188, column: 57, scope: !12044)
!12054 = !DILocation(line: 3188, column: 63, scope: !12044)
!12055 = !DILocation(line: 3188, column: 69, scope: !12044)
!12056 = !DILocation(line: 3188, column: 7, scope: !12044)
!12057 = !DILocation(line: 3190, column: 34, scope: !12032)
!12058 = !DILocation(line: 3190, column: 39, scope: !12032)
!12059 = !DILocation(line: 3190, column: 47, scope: !12032)
!12060 = !DILocation(line: 3190, column: 6, scope: !12032)
!12061 = !DILocation(line: 3191, column: 5, scope: !12032)
!12062 = !DILocation(line: 3193, column: 9, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 3193, column: 9)
!12064 = !DILocation(line: 3193, column: 15, scope: !12063)
!12065 = !DILocation(line: 3193, column: 21, scope: !12063)
!12066 = !DILocation(line: 3193, column: 9, scope: !11994)
!12067 = !DILocation(line: 3194, column: 24, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 3193, column: 36)
!12069 = !DILocation(line: 3194, column: 29, scope: !12068)
!12070 = !DILocation(line: 3194, column: 35, scope: !12068)
!12071 = !DILocation(line: 3194, column: 47, scope: !12068)
!12072 = !DILocation(line: 3194, column: 52, scope: !12068)
!12073 = !DILocation(line: 3194, column: 58, scope: !12068)
!12074 = !DILocation(line: 3194, column: 66, scope: !12068)
!12075 = !DILocation(line: 3194, column: 72, scope: !12068)
!12076 = !DILocation(line: 3194, column: 6, scope: !12068)
!12077 = !DILocation(line: 3195, column: 5, scope: !12068)
!12078 = !DILocation(line: 3196, column: 9, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 3196, column: 9)
!12080 = !DILocation(line: 3196, column: 15, scope: !12079)
!12081 = !DILocation(line: 3196, column: 21, scope: !12079)
!12082 = !DILocation(line: 3196, column: 9, scope: !11994)
!12083 = !DILocalVariable(name: "zenfac", scope: !12084, file: !3, line: 3197, type: !91)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 3196, column: 52)
!12085 = !DILocation(line: 3197, column: 12, scope: !12084)
!12086 = !DILocation(line: 3199, column: 17, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 3199, column: 10)
!12088 = !DILocation(line: 3199, column: 10, scope: !12087)
!12089 = !DILocation(line: 3199, column: 25, scope: !12087)
!12090 = !DILocation(line: 3199, column: 10, scope: !12084)
!12091 = !DILocation(line: 3200, column: 12, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 3200, column: 11)
!12093 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 3199, column: 39)
!12094 = !DILocation(line: 3200, column: 20, scope: !12092)
!12095 = !DILocation(line: 3200, column: 11, scope: !12093)
!12096 = !DILocation(line: 3201, column: 12, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 3201, column: 12)
!12098 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 3200, column: 33)
!12099 = !DILocation(line: 3201, column: 18, scope: !12097)
!12100 = !DILocation(line: 3201, column: 24, scope: !12097)
!12101 = !DILocation(line: 3201, column: 12, scope: !12098)
!12102 = !DILocation(line: 3201, column: 47, scope: !12097)
!12103 = !DILocation(line: 3201, column: 53, scope: !12097)
!12104 = !DILocation(line: 3201, column: 45, scope: !12097)
!12105 = !DILocation(line: 3201, column: 39, scope: !12097)
!12106 = !DILocation(line: 3202, column: 7, scope: !12098)
!12107 = !DILocation(line: 3203, column: 16, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 3203, column: 16)
!12109 = !DILocation(line: 3203, column: 22, scope: !12108)
!12110 = !DILocation(line: 3203, column: 28, scope: !12108)
!12111 = !DILocation(line: 3203, column: 16, scope: !12092)
!12112 = !DILocation(line: 3203, column: 53, scope: !12108)
!12113 = !DILocation(line: 3203, column: 59, scope: !12108)
!12114 = !DILocation(line: 3203, column: 51, scope: !12108)
!12115 = !DILocation(line: 3203, column: 45, scope: !12108)
!12116 = !DILocation(line: 3204, column: 6, scope: !12093)
!12117 = !DILocation(line: 3206, column: 11, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 3206, column: 11)
!12119 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 3205, column: 11)
!12120 = !DILocation(line: 3206, column: 17, scope: !12118)
!12121 = !DILocation(line: 3206, column: 23, scope: !12118)
!12122 = !DILocation(line: 3206, column: 11, scope: !12119)
!12123 = !DILocation(line: 3206, column: 46, scope: !12118)
!12124 = !DILocation(line: 3206, column: 52, scope: !12118)
!12125 = !DILocation(line: 3206, column: 44, scope: !12118)
!12126 = !DILocation(line: 3206, column: 38, scope: !12118)
!12127 = !DILocation(line: 3207, column: 16, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 3207, column: 16)
!12129 = !DILocation(line: 3207, column: 22, scope: !12128)
!12130 = !DILocation(line: 3207, column: 28, scope: !12128)
!12131 = !DILocation(line: 3207, column: 16, scope: !12118)
!12132 = !DILocation(line: 3207, column: 53, scope: !12128)
!12133 = !DILocation(line: 3207, column: 59, scope: !12128)
!12134 = !DILocation(line: 3207, column: 51, scope: !12128)
!12135 = !DILocation(line: 3207, column: 45, scope: !12128)
!12136 = !DILocation(line: 3210, column: 10, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 3210, column: 10)
!12138 = !DILocation(line: 3210, column: 17, scope: !12137)
!12139 = !DILocation(line: 3210, column: 10, scope: !12084)
!12140 = !DILocation(line: 3211, column: 25, scope: !12137)
!12141 = !DILocation(line: 3211, column: 30, scope: !12137)
!12142 = !DILocation(line: 3211, column: 36, scope: !12137)
!12143 = !DILocation(line: 3211, column: 48, scope: !12137)
!12144 = !DILocation(line: 3211, column: 53, scope: !12137)
!12145 = !DILocation(line: 3211, column: 61, scope: !12137)
!12146 = !DILocation(line: 3211, column: 67, scope: !12137)
!12147 = !DILocation(line: 3211, column: 7, scope: !12137)
!12148 = !DILocation(line: 3212, column: 5, scope: !12084)
!12149 = !DILocation(line: 3213, column: 4, scope: !11994)
!12150 = !DILocation(line: 3214, column: 8, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 3214, column: 8)
!12152 = !DILocation(line: 3214, column: 14, scope: !12151)
!12153 = !DILocation(line: 3214, column: 20, scope: !12151)
!12154 = !DILocation(line: 3214, column: 8, scope: !11624)
!12155 = !DILocation(line: 3215, column: 9, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 3215, column: 9)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !3, line: 3214, column: 35)
!12158 = !DILocation(line: 3215, column: 9, scope: !12157)
!12159 = !DILocation(line: 3215, column: 45, scope: !12156)
!12160 = !DILocation(line: 3215, column: 27, scope: !12156)
!12161 = !DILocation(line: 3215, column: 21, scope: !12156)
!12162 = !DILocation(line: 3215, column: 25, scope: !12156)
!12163 = !DILocation(line: 3215, column: 14, scope: !12156)
!12164 = !DILocation(line: 3217, column: 33, scope: !12157)
!12165 = !DILocation(line: 3217, column: 39, scope: !12157)
!12166 = !DILocation(line: 3217, column: 49, scope: !12157)
!12167 = !DILocation(line: 3217, column: 48, scope: !12157)
!12168 = !DILocation(line: 3217, column: 63, scope: !12157)
!12169 = !DILocation(line: 3217, column: 68, scope: !12157)
!12170 = !DILocation(line: 3217, column: 74, scope: !12157)
!12171 = !DILocation(line: 3217, column: 84, scope: !12157)
!12172 = !DILocation(line: 3217, column: 90, scope: !12157)
!12173 = !DILocation(line: 3217, column: 13, scope: !12157)
!12174 = !DILocation(line: 3217, column: 6, scope: !12157)
!12175 = !DILocation(line: 3217, column: 11, scope: !12157)
!12176 = !DILocation(line: 3218, column: 4, scope: !12157)
!12177 = !DILocation(line: 3219, column: 3, scope: !11624)
!12178 = !DILocation(line: 3220, column: 2, scope: !11620)
!12179 = !DILocation(line: 3031, column: 40, scope: !11615)
!12180 = !DILocation(line: 3031, column: 2, scope: !11615)
!12181 = distinct !{!12181, !11617, !12182}
!12182 = !DILocation(line: 3220, column: 2, scope: !11612)
!12183 = !DILocation(line: 3221, column: 1, scope: !11561)
!12184 = distinct !DISubprogram(name: "saacos", scope: !4384, file: !4384, line: 66, type: !12185, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!12185 = !DISubroutineType(types: !12186)
!12186 = !{!91, !91}
!12187 = !DILocalVariable(name: "fac", arg: 1, scope: !12184, file: !4384, line: 66, type: !91)
!12188 = !DILocation(line: 66, column: 28, scope: !12184)
!12189 = !DILocation(line: 68, column: 11, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12184, file: !4384, line: 68, column: 11)
!12191 = !DILocation(line: 68, column: 11, scope: !12184)
!12192 = !DILocation(line: 68, column: 35, scope: !12190)
!12193 = !DILocation(line: 69, column: 11, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12190, file: !4384, line: 69, column: 11)
!12195 = !DILocation(line: 69, column: 11, scope: !12190)
!12196 = !DILocation(line: 69, column: 35, scope: !12194)
!12197 = !DILocation(line: 70, column: 48, scope: !12194)
!12198 = !DILocation(line: 70, column: 42, scope: !12194)
!12199 = !DILocation(line: 70, column: 35, scope: !12194)
!12200 = !DILocation(line: 71, column: 1, scope: !12184)
!12201 = distinct !DISubprogram(name: "do_lamp_tex", scope: !3, file: !3, line: 3226, type: !12202, scopeLine: 3227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{null, !12204, !954, !2730, !201, !92}
!12204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12205, size: 64)
!12205 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !2739, line: 615, baseType: !12206)
!12206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !2739, line: 540, size: 5376, elements: !12207)
!12207 = !{!12208, !12210, !12211, !12212, !12213, !12214, !12215, !12216, !12217, !12218, !12219, !12220, !12221, !12222, !12223, !12224, !12225, !12226, !12227, !12228, !12229, !12230, !12231, !12232, !12233, !12234, !12235, !12236, !12237, !12238, !12239, !12240, !12241, !12242, !12243, !12244, !12245, !12246, !12247, !12248, !12249, !12250, !12251, !12252, !12253, !12254, !12255, !12256, !12257, !12258, !12259, !12261, !12262, !12263, !12264, !12265, !12266, !12305, !12330, !12331, !12332, !12333, !12334, !12335, !12336, !12337, !12338, !12339, !12351, !12353, !12354, !12355}
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12206, file: !2739, line: 541, baseType: !12209, size: 64)
!12209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12206, size: 64)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12206, file: !2739, line: 541, baseType: !12209, size: 64, offset: 64)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !12206, file: !2739, line: 543, baseType: !91, size: 32, offset: 128)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !12206, file: !2739, line: 543, baseType: !91, size: 32, offset: 160)
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !12206, file: !2739, line: 543, baseType: !91, size: 32, offset: 192)
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !12206, file: !2739, line: 544, baseType: !344, size: 96, offset: 224)
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12206, file: !2739, line: 545, baseType: !141, size: 16, offset: 320)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12206, file: !2739, line: 546, baseType: !92, size: 32, offset: 352)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !12206, file: !2739, line: 547, baseType: !91, size: 32, offset: 384)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !12206, file: !2739, line: 547, baseType: !91, size: 32, offset: 416)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !12206, file: !2739, line: 547, baseType: !91, size: 32, offset: 448)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !12206, file: !2739, line: 547, baseType: !91, size: 32, offset: 480)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !12206, file: !2739, line: 548, baseType: !91, size: 32, offset: 512)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !12206, file: !2739, line: 548, baseType: !91, size: 32, offset: 544)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !12206, file: !2739, line: 548, baseType: !91, size: 32, offset: 576)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !12206, file: !2739, line: 549, baseType: !91, size: 32, offset: 608)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !12206, file: !2739, line: 549, baseType: !91, size: 32, offset: 640)
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !12206, file: !2739, line: 550, baseType: !92, size: 32, offset: 672)
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !12206, file: !2739, line: 551, baseType: !91, size: 32, offset: 704)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !12206, file: !2739, line: 551, baseType: !91, size: 32, offset: 736)
!12229 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !12206, file: !2739, line: 552, baseType: !344, size: 96, offset: 768)
!12230 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !12206, file: !2739, line: 553, baseType: !91, size: 32, offset: 864)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !12206, file: !2739, line: 553, baseType: !91, size: 32, offset: 896)
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !12206, file: !2739, line: 553, baseType: !91, size: 32, offset: 928)
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !12206, file: !2739, line: 553, baseType: !91, size: 32, offset: 960)
!12234 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !12206, file: !2739, line: 554, baseType: !91, size: 32, offset: 992)
!12235 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !12206, file: !2739, line: 554, baseType: !91, size: 32, offset: 1024)
!12236 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !12206, file: !2739, line: 556, baseType: !141, size: 16, offset: 1056)
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !12206, file: !2739, line: 557, baseType: !91, size: 32, offset: 1088)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !12206, file: !2739, line: 557, baseType: !91, size: 32, offset: 1120)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !12206, file: !2739, line: 558, baseType: !2017, size: 64, offset: 1152)
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !12206, file: !2739, line: 562, baseType: !141, size: 16, offset: 1216)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !12206, file: !2739, line: 564, baseType: !141, size: 16, offset: 1232)
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !12206, file: !2739, line: 566, baseType: !91, size: 32, offset: 1248)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !12206, file: !2739, line: 568, baseType: !141, size: 16, offset: 1280)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !12206, file: !2739, line: 568, baseType: !141, size: 16, offset: 1296)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !12206, file: !2739, line: 570, baseType: !141, size: 16, offset: 1312)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !12206, file: !2739, line: 572, baseType: !141, size: 16, offset: 1328)
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !12206, file: !2739, line: 574, baseType: !141, size: 16, offset: 1344)
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !12206, file: !2739, line: 576, baseType: !91, size: 32, offset: 1376)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !12206, file: !2739, line: 578, baseType: !91, size: 32, offset: 1408)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !12206, file: !2739, line: 580, baseType: !91, size: 32, offset: 1440)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !12206, file: !2739, line: 582, baseType: !91, size: 32, offset: 1472)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1504)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1520)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1536)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1552)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1568)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1584)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !12206, file: !2739, line: 584, baseType: !141, size: 16, offset: 1600)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !12206, file: !2739, line: 585, baseType: !12260, size: 16, offset: 1616)
!12260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 16, elements: !444)
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !12206, file: !2739, line: 585, baseType: !12260, size: 16, offset: 1632)
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !12206, file: !2739, line: 586, baseType: !91, size: 32, offset: 1664)
!12263 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !12206, file: !2739, line: 586, baseType: !91, size: 32, offset: 1696)
!12264 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !12206, file: !2739, line: 586, baseType: !91, size: 32, offset: 1728)
!12265 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !12206, file: !2739, line: 587, baseType: !91, size: 32, offset: 1760)
!12266 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !12206, file: !2739, line: 590, baseType: !12267, size: 64, offset: 1792)
!12267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12268, size: 64)
!12268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !12269, line: 32, size: 1792, elements: !12270)
!12269 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12270 = !{!12271, !12272, !12273, !12274, !12275, !12276, !12277, !12278, !12279, !12280, !12281, !12282, !12284, !12285, !12286, !12287, !12288, !12289, !12290, !12291, !12292, !12293, !12294, !12295, !12296, !12297, !12298, !12299, !12300, !12301, !12302, !12303, !12304}
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !12268, file: !12269, line: 33, baseType: !141, size: 16)
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !12268, file: !12269, line: 33, baseType: !141, size: 16, offset: 16)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !12268, file: !12269, line: 33, baseType: !141, size: 16, offset: 32)
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !12268, file: !12269, line: 34, baseType: !91, size: 32, offset: 64)
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !12268, file: !12269, line: 35, baseType: !91, size: 32, offset: 96)
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !12268, file: !12269, line: 35, baseType: !91, size: 32, offset: 128)
!12277 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !12268, file: !12269, line: 37, baseType: !344, size: 96, offset: 160)
!12278 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !12268, file: !12269, line: 40, baseType: !91, size: 32, offset: 256)
!12279 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !12268, file: !12269, line: 42, baseType: !91, size: 32, offset: 288)
!12280 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !12268, file: !12269, line: 42, baseType: !91, size: 32, offset: 320)
!12281 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !12268, file: !12269, line: 42, baseType: !91, size: 32, offset: 352)
!12282 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !12268, file: !12269, line: 44, baseType: !12283, size: 160, offset: 384)
!12283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 160, elements: !1831)
!12284 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !12268, file: !12269, line: 44, baseType: !12283, size: 160, offset: 544)
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !12268, file: !12269, line: 44, baseType: !12283, size: 160, offset: 704)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !12268, file: !12269, line: 47, baseType: !91, size: 32, offset: 864)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !12268, file: !12269, line: 48, baseType: !91, size: 32, offset: 896)
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !12268, file: !12269, line: 49, baseType: !91, size: 32, offset: 928)
!12289 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !12268, file: !12269, line: 50, baseType: !91, size: 32, offset: 960)
!12290 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !12268, file: !12269, line: 51, baseType: !91, size: 32, offset: 992)
!12291 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !12268, file: !12269, line: 52, baseType: !91, size: 32, offset: 1024)
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !12268, file: !12269, line: 53, baseType: !91, size: 32, offset: 1056)
!12293 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !12268, file: !12269, line: 55, baseType: !91, size: 32, offset: 1088)
!12294 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !12268, file: !12269, line: 57, baseType: !91, size: 32, offset: 1120)
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !12268, file: !12269, line: 58, baseType: !91, size: 32, offset: 1152)
!12296 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !12268, file: !12269, line: 59, baseType: !91, size: 32, offset: 1184)
!12297 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !12268, file: !12269, line: 60, baseType: !91, size: 32, offset: 1216)
!12298 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !12268, file: !12269, line: 61, baseType: !91, size: 32, offset: 1248)
!12299 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !12268, file: !12269, line: 62, baseType: !91, size: 32, offset: 1280)
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !12268, file: !12269, line: 64, baseType: !344, size: 96, offset: 1312)
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !12268, file: !12269, line: 65, baseType: !344, size: 96, offset: 1408)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !12268, file: !12269, line: 66, baseType: !344, size: 96, offset: 1504)
!12303 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !12268, file: !12269, line: 67, baseType: !344, size: 96, offset: 1600)
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !12268, file: !12269, line: 68, baseType: !344, size: 96, offset: 1696)
!12305 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !12206, file: !2739, line: 592, baseType: !12306, size: 64, offset: 1856)
!12306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12307, size: 64)
!12307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !2739, line: 297, size: 2240, elements: !12308)
!12308 = !{!12309, !12310, !12311, !12312, !12313, !12314, !12315, !12316, !12317, !12318, !12319, !12320, !12321, !12322, !12323, !12324, !12325, !12326}
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !12307, file: !2739, line: 299, baseType: !141, size: 16)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !12307, file: !2739, line: 299, baseType: !141, size: 16, offset: 16)
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !12307, file: !2739, line: 299, baseType: !141, size: 16, offset: 32)
!12312 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !12307, file: !2739, line: 300, baseType: !603, size: 512, offset: 64)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !12307, file: !2739, line: 301, baseType: !603, size: 512, offset: 576)
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !12307, file: !2739, line: 302, baseType: !603, size: 512, offset: 1088)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !12307, file: !2739, line: 303, baseType: !201, size: 64, offset: 1600)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !12307, file: !2739, line: 303, baseType: !201, size: 64, offset: 1664)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !12307, file: !2739, line: 304, baseType: !91, size: 32, offset: 1728)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !12307, file: !2739, line: 304, baseType: !91, size: 32, offset: 1760)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !12307, file: !2739, line: 304, baseType: !91, size: 32, offset: 1792)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !12307, file: !2739, line: 304, baseType: !91, size: 32, offset: 1824)
!12321 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !12307, file: !2739, line: 304, baseType: !91, size: 32, offset: 1856)
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !12307, file: !2739, line: 305, baseType: !1804, size: 96, offset: 1888)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12307, file: !2739, line: 306, baseType: !92, size: 32, offset: 1984)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !12307, file: !2739, line: 306, baseType: !92, size: 32, offset: 2016)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !12307, file: !2739, line: 307, baseType: !167, size: 128, offset: 2048)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !12307, file: !2739, line: 310, baseType: !12327, size: 64, offset: 2176)
!12327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12328, size: 64, elements: !444)
!12328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12329, size: 64)
!12329 = !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !2739, line: 282, flags: DIFlagFwdDecl)
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !12206, file: !2739, line: 593, baseType: !201, size: 64, offset: 1920)
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !12206, file: !2739, line: 595, baseType: !2490, size: 288, offset: 1984)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !12206, file: !2739, line: 596, baseType: !91, size: 32, offset: 2272)
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !12206, file: !2739, line: 597, baseType: !344, size: 96, offset: 2304)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !12206, file: !2739, line: 597, baseType: !91, size: 32, offset: 2400)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !12206, file: !2739, line: 599, baseType: !603, size: 512, offset: 2432)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !12206, file: !2739, line: 601, baseType: !2490, size: 288, offset: 2944)
!12337 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !12206, file: !2739, line: 602, baseType: !506, size: 768, offset: 3232)
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !12206, file: !2739, line: 602, baseType: !91, size: 32, offset: 4000)
!12339 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !12206, file: !2739, line: 605, baseType: !12340, size: 64, offset: 4032)
!12340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12341, size: 64)
!12341 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !2739, line: 538, baseType: !12342)
!12342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !2739, line: 536, size: 2560, elements: !12343)
!12343 = !{!12344}
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !12342, file: !2739, line: 537, baseType: !12345, size: 2560)
!12345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12346, size: 2560, elements: !3216)
!12346 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !2739, line: 534, baseType: !12347)
!12347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !2739, line: 531, size: 160, elements: !12348)
!12348 = !{!12349, !12350}
!12349 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !12347, file: !2739, line: 532, baseType: !92, size: 32)
!12350 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !12347, file: !2739, line: 533, baseType: !426, size: 128, offset: 32)
!12351 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !12206, file: !2739, line: 608, baseType: !12352, size: 64, offset: 4096)
!12352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2917, size: 64, elements: !444)
!12353 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !12206, file: !2739, line: 610, baseType: !469, size: 1152, offset: 4160)
!12354 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !12206, file: !2739, line: 613, baseType: !92, size: 32, offset: 5312)
!12355 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !12206, file: !2739, line: 614, baseType: !92, size: 32, offset: 5344)
!12356 = !DILocalVariable(name: "la", arg: 1, scope: !12201, file: !3, line: 3226, type: !12204)
!12357 = !DILocation(line: 3226, column: 27, scope: !12201)
!12358 = !DILocalVariable(name: "lavec", arg: 2, scope: !12201, file: !3, line: 3226, type: !954)
!12359 = !DILocation(line: 3226, column: 43, scope: !12201)
!12360 = !DILocalVariable(name: "shi", arg: 3, scope: !12201, file: !3, line: 3226, type: !2730)
!12361 = !DILocation(line: 3226, column: 65, scope: !12201)
!12362 = !DILocalVariable(name: "col_r", arg: 4, scope: !12201, file: !3, line: 3226, type: !201)
!12363 = !DILocation(line: 3226, column: 76, scope: !12201)
!12364 = !DILocalVariable(name: "effect", arg: 5, scope: !12201, file: !3, line: 3226, type: !92)
!12365 = !DILocation(line: 3226, column: 90, scope: !12201)
!12366 = !DILocalVariable(name: "ob", scope: !12201, file: !3, line: 3228, type: !2935)
!12367 = !DILocation(line: 3228, column: 10, scope: !12201)
!12368 = !DILocalVariable(name: "mtex", scope: !12201, file: !3, line: 3229, type: !3587)
!12369 = !DILocation(line: 3229, column: 8, scope: !12201)
!12370 = !DILocalVariable(name: "tex", scope: !12201, file: !3, line: 3230, type: !3402)
!12371 = !DILocation(line: 3230, column: 7, scope: !12201)
!12372 = !DILocalVariable(name: "texres", scope: !12201, file: !3, line: 3231, type: !3577)
!12373 = !DILocation(line: 3231, column: 12, scope: !12201)
!12374 = !DILocalVariable(name: "co", scope: !12201, file: !3, line: 3232, type: !201)
!12375 = !DILocation(line: 3232, column: 9, scope: !12201)
!12376 = !DILocalVariable(name: "dx", scope: !12201, file: !3, line: 3232, type: !201)
!12377 = !DILocation(line: 3232, column: 21, scope: !12201)
!12378 = !DILocalVariable(name: "dy", scope: !12201, file: !3, line: 3232, type: !201)
!12379 = !DILocation(line: 3232, column: 33, scope: !12201)
!12380 = !DILocalVariable(name: "fact", scope: !12201, file: !3, line: 3232, type: !91)
!12381 = !DILocation(line: 3232, column: 44, scope: !12201)
!12382 = !DILocalVariable(name: "stencilTin", scope: !12201, file: !3, line: 3232, type: !91)
!12383 = !DILocation(line: 3232, column: 50, scope: !12201)
!12384 = !DILocalVariable(name: "texvec", scope: !12201, file: !3, line: 3233, type: !344)
!12385 = !DILocation(line: 3233, column: 8, scope: !12201)
!12386 = !DILocalVariable(name: "dxt", scope: !12201, file: !3, line: 3233, type: !344)
!12387 = !DILocation(line: 3233, column: 19, scope: !12201)
!12388 = !DILocalVariable(name: "dyt", scope: !12201, file: !3, line: 3233, type: !344)
!12389 = !DILocation(line: 3233, column: 27, scope: !12201)
!12390 = !DILocalVariable(name: "tempvec", scope: !12201, file: !3, line: 3233, type: !344)
!12391 = !DILocation(line: 3233, column: 35, scope: !12201)
!12392 = !DILocalVariable(name: "i", scope: !12201, file: !3, line: 3234, type: !92)
!12393 = !DILocation(line: 3234, column: 6, scope: !12201)
!12394 = !DILocalVariable(name: "tex_nr", scope: !12201, file: !3, line: 3234, type: !92)
!12395 = !DILocation(line: 3234, column: 9, scope: !12201)
!12396 = !DILocalVariable(name: "rgb", scope: !12201, file: !3, line: 3234, type: !92)
!12397 = !DILocation(line: 3234, column: 17, scope: !12201)
!12398 = !DILocation(line: 3236, column: 10, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 3236, column: 6)
!12400 = !DILocation(line: 3236, column: 18, scope: !12399)
!12401 = !DILocation(line: 3236, column: 6, scope: !12201)
!12402 = !DILocation(line: 3236, column: 30, scope: !12399)
!12403 = !DILocation(line: 3237, column: 8, scope: !12201)
!12404 = !DILocation(line: 3239, column: 2, scope: !12201)
!12405 = !DILocation(line: 3239, column: 9, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 3239, column: 2)
!12407 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 3239, column: 2)
!12408 = !DILocation(line: 3239, column: 15, scope: !12406)
!12409 = !DILocation(line: 3239, column: 2, scope: !12407)
!12410 = !DILocation(line: 3241, column: 7, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !3, line: 3241, column: 7)
!12412 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 3239, column: 36)
!12413 = !DILocation(line: 3241, column: 11, scope: !12411)
!12414 = !DILocation(line: 3241, column: 16, scope: !12411)
!12415 = !DILocation(line: 3241, column: 7, scope: !12412)
!12416 = !DILocation(line: 3242, column: 10, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 3241, column: 25)
!12418 = !DILocation(line: 3242, column: 14, scope: !12417)
!12419 = !DILocation(line: 3242, column: 19, scope: !12417)
!12420 = !DILocation(line: 3242, column: 8, scope: !12417)
!12421 = !DILocation(line: 3244, column: 9, scope: !12417)
!12422 = !DILocation(line: 3244, column: 15, scope: !12417)
!12423 = !DILocation(line: 3244, column: 7, scope: !12417)
!12424 = !DILocation(line: 3245, column: 8, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3245, column: 8)
!12426 = !DILocation(line: 3245, column: 11, scope: !12425)
!12427 = !DILocation(line: 3245, column: 8, scope: !12417)
!12428 = !DILocation(line: 3245, column: 19, scope: !12425)
!12429 = !DILocation(line: 3246, column: 11, scope: !12417)
!12430 = !DILocation(line: 3246, column: 14, scope: !12417)
!12431 = !DILocation(line: 3249, column: 8, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3249, column: 8)
!12433 = !DILocation(line: 3249, column: 14, scope: !12432)
!12434 = !DILocation(line: 3249, column: 19, scope: !12432)
!12435 = !DILocation(line: 3249, column: 8, scope: !12417)
!12436 = !DILocation(line: 3250, column: 9, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 3249, column: 35)
!12438 = !DILocation(line: 3250, column: 15, scope: !12437)
!12439 = !DILocation(line: 3250, column: 7, scope: !12437)
!12440 = !DILocation(line: 3251, column: 9, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12437, file: !3, line: 3251, column: 9)
!12442 = !DILocation(line: 3251, column: 9, scope: !12437)
!12443 = !DILocation(line: 3252, column: 10, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 3251, column: 13)
!12445 = !DILocation(line: 3252, column: 8, scope: !12444)
!12446 = !DILocation(line: 3253, column: 10, scope: !12444)
!12447 = !DILocation(line: 3253, column: 8, scope: !12444)
!12448 = !DILocation(line: 3254, column: 10, scope: !12444)
!12449 = !DILocation(line: 3254, column: 8, scope: !12444)
!12450 = !DILocation(line: 3255, column: 17, scope: !12444)
!12451 = !DILocation(line: 3255, column: 26, scope: !12444)
!12452 = !DILocation(line: 3255, column: 31, scope: !12444)
!12453 = !DILocation(line: 3255, column: 6, scope: !12444)
!12454 = !DILocation(line: 3256, column: 16, scope: !12444)
!12455 = !DILocation(line: 3256, column: 20, scope: !12444)
!12456 = !DILocation(line: 3256, column: 30, scope: !12444)
!12457 = !DILocation(line: 3256, column: 6, scope: !12444)
!12458 = !DILocation(line: 3257, column: 10, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 3257, column: 10)
!12460 = !DILocation(line: 3257, column: 15, scope: !12459)
!12461 = !DILocation(line: 3257, column: 10, scope: !12444)
!12462 = !DILocation(line: 3258, column: 18, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3257, column: 23)
!12464 = !DILocation(line: 3258, column: 23, scope: !12463)
!12465 = !DILocation(line: 3258, column: 28, scope: !12463)
!12466 = !DILocation(line: 3258, column: 7, scope: !12463)
!12467 = !DILocation(line: 3259, column: 18, scope: !12463)
!12468 = !DILocation(line: 3259, column: 23, scope: !12463)
!12469 = !DILocation(line: 3259, column: 28, scope: !12463)
!12470 = !DILocation(line: 3259, column: 7, scope: !12463)
!12471 = !DILocation(line: 3260, column: 22, scope: !12463)
!12472 = !DILocation(line: 3260, column: 26, scope: !12463)
!12473 = !DILocation(line: 3260, column: 36, scope: !12463)
!12474 = !DILocation(line: 3260, column: 7, scope: !12463)
!12475 = !DILocation(line: 3261, column: 22, scope: !12463)
!12476 = !DILocation(line: 3261, column: 26, scope: !12463)
!12477 = !DILocation(line: 3261, column: 36, scope: !12463)
!12478 = !DILocation(line: 3261, column: 7, scope: !12463)
!12479 = !DILocation(line: 3262, column: 6, scope: !12463)
!12480 = !DILocation(line: 3263, column: 5, scope: !12444)
!12481 = !DILocation(line: 3265, column: 10, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 3264, column: 10)
!12483 = !DILocation(line: 3265, column: 15, scope: !12482)
!12484 = !DILocation(line: 3265, column: 8, scope: !12482)
!12485 = !DILocation(line: 3266, column: 10, scope: !12482)
!12486 = !DILocation(line: 3266, column: 15, scope: !12482)
!12487 = !DILocation(line: 3266, column: 8, scope: !12482)
!12488 = !DILocation(line: 3266, column: 25, scope: !12482)
!12489 = !DILocation(line: 3266, column: 30, scope: !12482)
!12490 = !DILocation(line: 3266, column: 23, scope: !12482)
!12491 = !DILocation(line: 3268, column: 4, scope: !12437)
!12492 = !DILocation(line: 3269, column: 13, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 3269, column: 13)
!12494 = !DILocation(line: 3269, column: 19, scope: !12493)
!12495 = !DILocation(line: 3269, column: 24, scope: !12493)
!12496 = !DILocation(line: 3269, column: 13, scope: !12432)
!12497 = !DILocation(line: 3270, column: 9, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 3269, column: 38)
!12499 = !DILocation(line: 3270, column: 14, scope: !12498)
!12500 = !DILocation(line: 3270, column: 7, scope: !12498)
!12501 = !DILocation(line: 3270, column: 22, scope: !12498)
!12502 = !DILocation(line: 3270, column: 27, scope: !12498)
!12503 = !DILocation(line: 3270, column: 20, scope: !12498)
!12504 = !DILocation(line: 3270, column: 37, scope: !12498)
!12505 = !DILocation(line: 3270, column: 42, scope: !12498)
!12506 = !DILocation(line: 3270, column: 35, scope: !12498)
!12507 = !DILocation(line: 3271, column: 16, scope: !12498)
!12508 = !DILocation(line: 3271, column: 21, scope: !12498)
!12509 = !DILocation(line: 3271, column: 25, scope: !12498)
!12510 = !DILocation(line: 3271, column: 30, scope: !12498)
!12511 = !DILocation(line: 3271, column: 5, scope: !12498)
!12512 = !DILocation(line: 3272, column: 26, scope: !12498)
!12513 = !DILocation(line: 3272, column: 31, scope: !12498)
!12514 = !DILocation(line: 3272, column: 5, scope: !12498)
!12515 = !DILocation(line: 3273, column: 4, scope: !12498)
!12516 = !DILocation(line: 3274, column: 13, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 3274, column: 13)
!12518 = !DILocation(line: 3274, column: 19, scope: !12517)
!12519 = !DILocation(line: 3274, column: 24, scope: !12517)
!12520 = !DILocation(line: 3274, column: 13, scope: !12493)
!12521 = !DILocation(line: 3276, column: 16, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !3, line: 3274, column: 38)
!12523 = !DILocation(line: 3276, column: 25, scope: !12522)
!12524 = !DILocation(line: 3276, column: 5, scope: !12522)
!12525 = !DILocation(line: 3277, column: 15, scope: !12522)
!12526 = !DILocation(line: 3277, column: 19, scope: !12522)
!12527 = !DILocation(line: 3277, column: 25, scope: !12522)
!12528 = !DILocation(line: 3277, column: 5, scope: !12522)
!12529 = !DILocation(line: 3279, column: 9, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 3279, column: 9)
!12531 = !DILocation(line: 3279, column: 13, scope: !12530)
!12532 = !DILocation(line: 3279, column: 17, scope: !12530)
!12533 = !DILocation(line: 3279, column: 9, scope: !12522)
!12534 = !DILocation(line: 3280, column: 19, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 3279, column: 28)
!12536 = !DILocation(line: 3280, column: 23, scope: !12535)
!12537 = !DILocation(line: 3280, column: 6, scope: !12535)
!12538 = !DILocation(line: 3280, column: 16, scope: !12535)
!12539 = !DILocation(line: 3281, column: 19, scope: !12535)
!12540 = !DILocation(line: 3281, column: 23, scope: !12535)
!12541 = !DILocation(line: 3281, column: 6, scope: !12535)
!12542 = !DILocation(line: 3281, column: 16, scope: !12535)
!12543 = !DILocation(line: 3283, column: 21, scope: !12535)
!12544 = !DILocation(line: 3283, column: 20, scope: !12535)
!12545 = !DILocation(line: 3283, column: 6, scope: !12535)
!12546 = !DILocation(line: 3283, column: 17, scope: !12535)
!12547 = !DILocation(line: 3284, column: 21, scope: !12535)
!12548 = !DILocation(line: 3284, column: 20, scope: !12535)
!12549 = !DILocation(line: 3284, column: 6, scope: !12535)
!12550 = !DILocation(line: 3284, column: 17, scope: !12535)
!12551 = !DILocation(line: 3285, column: 5, scope: !12535)
!12552 = !DILocation(line: 3286, column: 9, scope: !12522)
!12553 = !DILocation(line: 3286, column: 7, scope: !12522)
!12554 = !DILocation(line: 3288, column: 9, scope: !12522)
!12555 = !DILocation(line: 3288, column: 7, scope: !12522)
!12556 = !DILocation(line: 3288, column: 18, scope: !12522)
!12557 = !DILocation(line: 3288, column: 16, scope: !12522)
!12558 = !DILocation(line: 3289, column: 9, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 3289, column: 9)
!12560 = !DILocation(line: 3289, column: 14, scope: !12559)
!12561 = !DILocation(line: 3289, column: 9, scope: !12522)
!12562 = !DILocation(line: 3290, column: 17, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 3289, column: 22)
!12564 = !DILocation(line: 3290, column: 22, scope: !12563)
!12565 = !DILocation(line: 3290, column: 27, scope: !12563)
!12566 = !DILocation(line: 3290, column: 6, scope: !12563)
!12567 = !DILocation(line: 3291, column: 17, scope: !12563)
!12568 = !DILocation(line: 3291, column: 22, scope: !12563)
!12569 = !DILocation(line: 3291, column: 27, scope: !12563)
!12570 = !DILocation(line: 3291, column: 6, scope: !12563)
!12571 = !DILocation(line: 3293, column: 16, scope: !12563)
!12572 = !DILocation(line: 3293, column: 20, scope: !12563)
!12573 = !DILocation(line: 3293, column: 26, scope: !12563)
!12574 = !DILocation(line: 3293, column: 6, scope: !12563)
!12575 = !DILocation(line: 3294, column: 16, scope: !12563)
!12576 = !DILocation(line: 3294, column: 20, scope: !12563)
!12577 = !DILocation(line: 3294, column: 26, scope: !12563)
!12578 = !DILocation(line: 3294, column: 6, scope: !12563)
!12579 = !DILocation(line: 3296, column: 16, scope: !12563)
!12580 = !DILocation(line: 3296, column: 21, scope: !12563)
!12581 = !DILocation(line: 3296, column: 25, scope: !12563)
!12582 = !DILocation(line: 3296, column: 6, scope: !12563)
!12583 = !DILocation(line: 3297, column: 16, scope: !12563)
!12584 = !DILocation(line: 3297, column: 21, scope: !12563)
!12585 = !DILocation(line: 3297, column: 25, scope: !12563)
!12586 = !DILocation(line: 3297, column: 6, scope: !12563)
!12587 = !DILocation(line: 3298, column: 5, scope: !12563)
!12588 = !DILocation(line: 3299, column: 4, scope: !12522)
!12589 = !DILocation(line: 3303, column: 8, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3303, column: 8)
!12591 = !DILocation(line: 3303, column: 14, scope: !12590)
!12592 = !DILocation(line: 3303, column: 20, scope: !12590)
!12593 = !DILocation(line: 3303, column: 23, scope: !12590)
!12594 = !DILocation(line: 3303, column: 8, scope: !12417)
!12595 = !DILocation(line: 3303, column: 38, scope: !12590)
!12596 = !DILocation(line: 3303, column: 44, scope: !12590)
!12597 = !DILocation(line: 3303, column: 53, scope: !12590)
!12598 = !DILocation(line: 3303, column: 56, scope: !12590)
!12599 = !DILocation(line: 3303, column: 62, scope: !12590)
!12600 = !DILocation(line: 3303, column: 67, scope: !12590)
!12601 = !DILocation(line: 3303, column: 71, scope: !12590)
!12602 = !DILocation(line: 3303, column: 77, scope: !12590)
!12603 = !DILocation(line: 3303, column: 70, scope: !12590)
!12604 = !DILocation(line: 3303, column: 51, scope: !12590)
!12605 = !DILocation(line: 3303, column: 27, scope: !12590)
!12606 = !DILocation(line: 3303, column: 36, scope: !12590)
!12607 = !DILocation(line: 3304, column: 20, scope: !12590)
!12608 = !DILocation(line: 3304, column: 26, scope: !12590)
!12609 = !DILocation(line: 3304, column: 35, scope: !12590)
!12610 = !DILocation(line: 3304, column: 41, scope: !12590)
!12611 = !DILocation(line: 3304, column: 33, scope: !12590)
!12612 = !DILocation(line: 3304, column: 9, scope: !12590)
!12613 = !DILocation(line: 3304, column: 18, scope: !12590)
!12614 = !DILocation(line: 3306, column: 8, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3306, column: 8)
!12616 = !DILocation(line: 3306, column: 14, scope: !12615)
!12617 = !DILocation(line: 3306, column: 20, scope: !12615)
!12618 = !DILocation(line: 3306, column: 23, scope: !12615)
!12619 = !DILocation(line: 3306, column: 8, scope: !12417)
!12620 = !DILocation(line: 3306, column: 38, scope: !12615)
!12621 = !DILocation(line: 3306, column: 44, scope: !12615)
!12622 = !DILocation(line: 3306, column: 53, scope: !12615)
!12623 = !DILocation(line: 3306, column: 56, scope: !12615)
!12624 = !DILocation(line: 3306, column: 62, scope: !12615)
!12625 = !DILocation(line: 3306, column: 67, scope: !12615)
!12626 = !DILocation(line: 3306, column: 71, scope: !12615)
!12627 = !DILocation(line: 3306, column: 77, scope: !12615)
!12628 = !DILocation(line: 3306, column: 70, scope: !12615)
!12629 = !DILocation(line: 3306, column: 51, scope: !12615)
!12630 = !DILocation(line: 3306, column: 27, scope: !12615)
!12631 = !DILocation(line: 3306, column: 36, scope: !12615)
!12632 = !DILocation(line: 3307, column: 20, scope: !12615)
!12633 = !DILocation(line: 3307, column: 26, scope: !12615)
!12634 = !DILocation(line: 3307, column: 35, scope: !12615)
!12635 = !DILocation(line: 3307, column: 41, scope: !12615)
!12636 = !DILocation(line: 3307, column: 33, scope: !12615)
!12637 = !DILocation(line: 3307, column: 9, scope: !12615)
!12638 = !DILocation(line: 3307, column: 18, scope: !12615)
!12639 = !DILocation(line: 3309, column: 8, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3309, column: 8)
!12641 = !DILocation(line: 3309, column: 14, scope: !12640)
!12642 = !DILocation(line: 3309, column: 20, scope: !12640)
!12643 = !DILocation(line: 3309, column: 23, scope: !12640)
!12644 = !DILocation(line: 3309, column: 8, scope: !12417)
!12645 = !DILocation(line: 3309, column: 38, scope: !12640)
!12646 = !DILocation(line: 3309, column: 44, scope: !12640)
!12647 = !DILocation(line: 3309, column: 53, scope: !12640)
!12648 = !DILocation(line: 3309, column: 56, scope: !12640)
!12649 = !DILocation(line: 3309, column: 62, scope: !12640)
!12650 = !DILocation(line: 3309, column: 67, scope: !12640)
!12651 = !DILocation(line: 3309, column: 71, scope: !12640)
!12652 = !DILocation(line: 3309, column: 77, scope: !12640)
!12653 = !DILocation(line: 3309, column: 70, scope: !12640)
!12654 = !DILocation(line: 3309, column: 51, scope: !12640)
!12655 = !DILocation(line: 3309, column: 27, scope: !12640)
!12656 = !DILocation(line: 3309, column: 36, scope: !12640)
!12657 = !DILocation(line: 3310, column: 20, scope: !12640)
!12658 = !DILocation(line: 3310, column: 26, scope: !12640)
!12659 = !DILocation(line: 3310, column: 35, scope: !12640)
!12660 = !DILocation(line: 3310, column: 41, scope: !12640)
!12661 = !DILocation(line: 3310, column: 33, scope: !12640)
!12662 = !DILocation(line: 3310, column: 9, scope: !12640)
!12663 = !DILocation(line: 3310, column: 18, scope: !12640)
!12664 = !DILocation(line: 3312, column: 8, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3312, column: 8)
!12666 = !DILocation(line: 3312, column: 13, scope: !12665)
!12667 = !DILocation(line: 3312, column: 8, scope: !12417)
!12668 = !DILocation(line: 3313, column: 10, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !3, line: 3313, column: 9)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 3312, column: 21)
!12671 = !DILocation(line: 3313, column: 9, scope: !12670)
!12672 = !DILocation(line: 3314, column: 12, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 3314, column: 6)
!12674 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 3313, column: 14)
!12675 = !DILocation(line: 3314, column: 11, scope: !12673)
!12676 = !DILocation(line: 3314, column: 15, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 3314, column: 6)
!12678 = !DILocation(line: 3314, column: 16, scope: !12677)
!12679 = !DILocation(line: 3314, column: 6, scope: !12673)
!12680 = !DILocation(line: 3315, column: 20, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 3314, column: 24)
!12682 = !DILocation(line: 3315, column: 16, scope: !12681)
!12683 = !DILocation(line: 3315, column: 23, scope: !12681)
!12684 = !DILocation(line: 3315, column: 11, scope: !12681)
!12685 = !DILocation(line: 3315, column: 7, scope: !12681)
!12686 = !DILocation(line: 3315, column: 14, scope: !12681)
!12687 = !DILocation(line: 3316, column: 6, scope: !12681)
!12688 = !DILocation(line: 3314, column: 20, scope: !12677)
!12689 = !DILocation(line: 3314, column: 6, scope: !12677)
!12690 = distinct !{!12690, !12679, !12691}
!12691 = !DILocation(line: 3316, column: 6, scope: !12673)
!12692 = !DILocation(line: 3317, column: 5, scope: !12674)
!12693 = !DILocation(line: 3319, column: 10, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 3319, column: 10)
!12695 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 3318, column: 10)
!12696 = !DILocation(line: 3319, column: 16, scope: !12694)
!12697 = !DILocation(line: 3319, column: 10, scope: !12695)
!12698 = !DILocation(line: 3320, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 3319, column: 23)
!12700 = !DILocation(line: 3320, column: 21, scope: !12699)
!12701 = !DILocation(line: 3320, column: 29, scope: !12699)
!12702 = !DILocation(line: 3320, column: 32, scope: !12699)
!12703 = !DILocation(line: 3320, column: 38, scope: !12699)
!12704 = !DILocation(line: 3320, column: 43, scope: !12699)
!12705 = !DILocation(line: 3320, column: 28, scope: !12699)
!12706 = !DILocation(line: 3320, column: 7, scope: !12699)
!12707 = !DILocation(line: 3320, column: 13, scope: !12699)
!12708 = !DILocation(line: 3321, column: 15, scope: !12699)
!12709 = !DILocation(line: 3321, column: 21, scope: !12699)
!12710 = !DILocation(line: 3321, column: 29, scope: !12699)
!12711 = !DILocation(line: 3321, column: 32, scope: !12699)
!12712 = !DILocation(line: 3321, column: 38, scope: !12699)
!12713 = !DILocation(line: 3321, column: 43, scope: !12699)
!12714 = !DILocation(line: 3321, column: 28, scope: !12699)
!12715 = !DILocation(line: 3321, column: 7, scope: !12699)
!12716 = !DILocation(line: 3321, column: 13, scope: !12699)
!12717 = !DILocation(line: 3322, column: 6, scope: !12699)
!12718 = !DILocation(line: 3324, column: 7, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 3323, column: 11)
!12720 = !DILocation(line: 3324, column: 13, scope: !12719)
!12721 = !DILocation(line: 3325, column: 7, scope: !12719)
!12722 = !DILocation(line: 3325, column: 13, scope: !12719)
!12723 = !DILocation(line: 3327, column: 10, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 3327, column: 10)
!12725 = !DILocation(line: 3327, column: 16, scope: !12724)
!12726 = !DILocation(line: 3327, column: 10, scope: !12695)
!12727 = !DILocation(line: 3328, column: 15, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 3327, column: 23)
!12729 = !DILocation(line: 3328, column: 21, scope: !12728)
!12730 = !DILocation(line: 3328, column: 29, scope: !12728)
!12731 = !DILocation(line: 3328, column: 32, scope: !12728)
!12732 = !DILocation(line: 3328, column: 38, scope: !12728)
!12733 = !DILocation(line: 3328, column: 43, scope: !12728)
!12734 = !DILocation(line: 3328, column: 28, scope: !12728)
!12735 = !DILocation(line: 3328, column: 7, scope: !12728)
!12736 = !DILocation(line: 3328, column: 13, scope: !12728)
!12737 = !DILocation(line: 3329, column: 15, scope: !12728)
!12738 = !DILocation(line: 3329, column: 21, scope: !12728)
!12739 = !DILocation(line: 3329, column: 29, scope: !12728)
!12740 = !DILocation(line: 3329, column: 32, scope: !12728)
!12741 = !DILocation(line: 3329, column: 38, scope: !12728)
!12742 = !DILocation(line: 3329, column: 43, scope: !12728)
!12743 = !DILocation(line: 3329, column: 28, scope: !12728)
!12744 = !DILocation(line: 3329, column: 7, scope: !12728)
!12745 = !DILocation(line: 3329, column: 13, scope: !12728)
!12746 = !DILocation(line: 3330, column: 6, scope: !12728)
!12747 = !DILocation(line: 3332, column: 7, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 3331, column: 11)
!12749 = !DILocation(line: 3332, column: 13, scope: !12748)
!12750 = !DILocation(line: 3333, column: 7, scope: !12748)
!12751 = !DILocation(line: 3333, column: 13, scope: !12748)
!12752 = !DILocation(line: 3335, column: 10, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 3335, column: 10)
!12754 = !DILocation(line: 3335, column: 16, scope: !12753)
!12755 = !DILocation(line: 3335, column: 10, scope: !12695)
!12756 = !DILocation(line: 3336, column: 15, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 3335, column: 23)
!12758 = !DILocation(line: 3336, column: 21, scope: !12757)
!12759 = !DILocation(line: 3336, column: 29, scope: !12757)
!12760 = !DILocation(line: 3336, column: 32, scope: !12757)
!12761 = !DILocation(line: 3336, column: 38, scope: !12757)
!12762 = !DILocation(line: 3336, column: 43, scope: !12757)
!12763 = !DILocation(line: 3336, column: 28, scope: !12757)
!12764 = !DILocation(line: 3336, column: 7, scope: !12757)
!12765 = !DILocation(line: 3336, column: 13, scope: !12757)
!12766 = !DILocation(line: 3337, column: 15, scope: !12757)
!12767 = !DILocation(line: 3337, column: 21, scope: !12757)
!12768 = !DILocation(line: 3337, column: 29, scope: !12757)
!12769 = !DILocation(line: 3337, column: 32, scope: !12757)
!12770 = !DILocation(line: 3337, column: 38, scope: !12757)
!12771 = !DILocation(line: 3337, column: 43, scope: !12757)
!12772 = !DILocation(line: 3337, column: 28, scope: !12757)
!12773 = !DILocation(line: 3337, column: 7, scope: !12757)
!12774 = !DILocation(line: 3337, column: 13, scope: !12757)
!12775 = !DILocation(line: 3338, column: 6, scope: !12757)
!12776 = !DILocation(line: 3340, column: 7, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 3339, column: 11)
!12778 = !DILocation(line: 3340, column: 13, scope: !12777)
!12779 = !DILocation(line: 3341, column: 7, scope: !12777)
!12780 = !DILocation(line: 3341, column: 13, scope: !12777)
!12781 = !DILocation(line: 3344, column: 4, scope: !12670)
!12782 = !DILocation(line: 3347, column: 8, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3347, column: 8)
!12784 = !DILocation(line: 3347, column: 13, scope: !12783)
!12785 = !DILocation(line: 3347, column: 17, scope: !12783)
!12786 = !DILocation(line: 3347, column: 8, scope: !12417)
!12787 = !DILocation(line: 3348, column: 19, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 3347, column: 30)
!12789 = !DILocation(line: 3348, column: 25, scope: !12788)
!12790 = !DILocation(line: 3348, column: 45, scope: !12788)
!12791 = !DILocation(line: 3348, column: 50, scope: !12788)
!12792 = !DILocation(line: 3348, column: 5, scope: !12788)
!12793 = !DILocation(line: 3349, column: 4, scope: !12788)
!12794 = !DILocation(line: 3351, column: 19, scope: !12417)
!12795 = !DILocation(line: 3351, column: 24, scope: !12417)
!12796 = !DILocation(line: 3351, column: 32, scope: !12417)
!12797 = !DILocation(line: 3351, column: 37, scope: !12417)
!12798 = !DILocation(line: 3351, column: 42, scope: !12417)
!12799 = !DILocation(line: 3351, column: 47, scope: !12417)
!12800 = !DILocation(line: 3351, column: 64, scope: !12417)
!12801 = !DILocation(line: 3351, column: 69, scope: !12417)
!12802 = !DILocation(line: 3351, column: 77, scope: !12417)
!12803 = !DILocation(line: 3351, column: 83, scope: !12417)
!12804 = !DILocation(line: 3351, column: 99, scope: !12417)
!12805 = !DILocation(line: 3351, column: 10, scope: !12417)
!12806 = !DILocation(line: 3351, column: 8, scope: !12417)
!12807 = !DILocation(line: 3354, column: 8, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3354, column: 8)
!12809 = !DILocation(line: 3354, column: 12, scope: !12808)
!12810 = !DILocation(line: 3354, column: 16, scope: !12808)
!12811 = !DILocation(line: 3354, column: 22, scope: !12808)
!12812 = !DILocation(line: 3354, column: 30, scope: !12808)
!12813 = !DILocation(line: 3354, column: 8, scope: !12417)
!12814 = !DILocation(line: 3355, column: 36, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12808, file: !3, line: 3354, column: 48)
!12816 = !DILocation(line: 3355, column: 18, scope: !12815)
!12817 = !DILocation(line: 3355, column: 12, scope: !12815)
!12818 = !DILocation(line: 3355, column: 16, scope: !12815)
!12819 = !DILocation(line: 3356, column: 8, scope: !12815)
!12820 = !DILocation(line: 3357, column: 4, scope: !12815)
!12821 = !DILocation(line: 3358, column: 8, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3358, column: 8)
!12823 = !DILocation(line: 3358, column: 14, scope: !12822)
!12824 = !DILocation(line: 3358, column: 22, scope: !12822)
!12825 = !DILocation(line: 3358, column: 8, scope: !12417)
!12826 = !DILocation(line: 3359, column: 9, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 3359, column: 9)
!12828 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 3358, column: 39)
!12829 = !DILocation(line: 3359, column: 9, scope: !12828)
!12830 = !DILocation(line: 3360, column: 29, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 3359, column: 14)
!12832 = !DILocation(line: 3360, column: 21, scope: !12831)
!12833 = !DILocation(line: 3360, column: 13, scope: !12831)
!12834 = !DILocation(line: 3360, column: 15, scope: !12831)
!12835 = !DILocation(line: 3361, column: 29, scope: !12831)
!12836 = !DILocation(line: 3361, column: 21, scope: !12831)
!12837 = !DILocation(line: 3361, column: 13, scope: !12831)
!12838 = !DILocation(line: 3361, column: 15, scope: !12831)
!12839 = !DILocation(line: 3362, column: 29, scope: !12831)
!12840 = !DILocation(line: 3362, column: 21, scope: !12831)
!12841 = !DILocation(line: 3362, column: 13, scope: !12831)
!12842 = !DILocation(line: 3362, column: 15, scope: !12831)
!12843 = !DILocation(line: 3363, column: 5, scope: !12831)
!12844 = !DILocation(line: 3364, column: 34, scope: !12827)
!12845 = !DILocation(line: 3364, column: 26, scope: !12827)
!12846 = !DILocation(line: 3364, column: 17, scope: !12827)
!12847 = !DILocation(line: 3364, column: 20, scope: !12827)
!12848 = !DILocation(line: 3365, column: 4, scope: !12828)
!12849 = !DILocation(line: 3366, column: 8, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3366, column: 8)
!12851 = !DILocation(line: 3366, column: 14, scope: !12850)
!12852 = !DILocation(line: 3366, column: 22, scope: !12850)
!12853 = !DILocation(line: 3366, column: 8, scope: !12417)
!12854 = !DILocation(line: 3367, column: 9, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 3367, column: 9)
!12856 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 3366, column: 38)
!12857 = !DILocation(line: 3367, column: 9, scope: !12856)
!12858 = !DILocation(line: 3368, column: 19, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 3367, column: 14)
!12860 = !DILocation(line: 3368, column: 10, scope: !12859)
!12861 = !DILocation(line: 3369, column: 18, scope: !12859)
!12862 = !DILocation(line: 3369, column: 13, scope: !12859)
!12863 = !DILocation(line: 3369, column: 15, scope: !12859)
!12864 = !DILocation(line: 3370, column: 19, scope: !12859)
!12865 = !DILocation(line: 3370, column: 16, scope: !12859)
!12866 = !DILocation(line: 3371, column: 5, scope: !12859)
!12867 = !DILocation(line: 3373, column: 19, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 3372, column: 10)
!12869 = !DILocation(line: 3373, column: 10, scope: !12868)
!12870 = !DILocation(line: 3374, column: 19, scope: !12868)
!12871 = !DILocation(line: 3374, column: 13, scope: !12868)
!12872 = !DILocation(line: 3374, column: 16, scope: !12868)
!12873 = !DILocation(line: 3375, column: 19, scope: !12868)
!12874 = !DILocation(line: 3375, column: 16, scope: !12868)
!12875 = !DILocation(line: 3377, column: 4, scope: !12856)
!12876 = !DILocation(line: 3379, column: 9, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 3379, column: 9)
!12878 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 3378, column: 9)
!12879 = !DILocation(line: 3379, column: 9, scope: !12878)
!12880 = !DILocation(line: 3379, column: 26, scope: !12877)
!12881 = !DILocation(line: 3379, column: 21, scope: !12877)
!12882 = !DILocation(line: 3379, column: 23, scope: !12877)
!12883 = !DILocation(line: 3379, column: 14, scope: !12877)
!12884 = !DILocation(line: 3380, column: 23, scope: !12877)
!12885 = !DILocation(line: 3380, column: 17, scope: !12877)
!12886 = !DILocation(line: 3380, column: 20, scope: !12877)
!12887 = !DILocation(line: 3384, column: 10, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3384, column: 8)
!12889 = !DILocation(line: 3384, column: 16, scope: !12888)
!12890 = !DILocation(line: 3384, column: 22, scope: !12888)
!12891 = !DILocation(line: 3384, column: 35, scope: !12888)
!12892 = !DILocation(line: 3384, column: 39, scope: !12888)
!12893 = !DILocation(line: 3384, column: 46, scope: !12888)
!12894 = !DILocation(line: 3384, column: 60, scope: !12888)
!12895 = !DILocation(line: 3384, column: 64, scope: !12888)
!12896 = !DILocation(line: 3384, column: 70, scope: !12888)
!12897 = !DILocation(line: 3384, column: 76, scope: !12888)
!12898 = !DILocation(line: 3384, column: 90, scope: !12888)
!12899 = !DILocation(line: 3384, column: 94, scope: !12888)
!12900 = !DILocation(line: 3384, column: 101, scope: !12888)
!12901 = !DILocation(line: 3384, column: 8, scope: !12417)
!12902 = !DILocalVariable(name: "col", scope: !12903, file: !3, line: 3385, type: !344)
!12903 = distinct !DILexicalBlock(scope: !12888, file: !3, line: 3384, column: 118)
!12904 = !DILocation(line: 3385, column: 11, scope: !12903)
!12905 = !DILocation(line: 3387, column: 9, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 3387, column: 9)
!12907 = !DILocation(line: 3387, column: 12, scope: !12906)
!12908 = !DILocation(line: 3387, column: 9, scope: !12903)
!12909 = !DILocation(line: 3388, column: 17, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3387, column: 17)
!12911 = !DILocation(line: 3388, column: 23, scope: !12910)
!12912 = !DILocation(line: 3388, column: 13, scope: !12910)
!12913 = !DILocation(line: 3388, column: 15, scope: !12910)
!12914 = !DILocation(line: 3389, column: 17, scope: !12910)
!12915 = !DILocation(line: 3389, column: 23, scope: !12910)
!12916 = !DILocation(line: 3389, column: 13, scope: !12910)
!12917 = !DILocation(line: 3389, column: 15, scope: !12910)
!12918 = !DILocation(line: 3390, column: 17, scope: !12910)
!12919 = !DILocation(line: 3390, column: 23, scope: !12910)
!12920 = !DILocation(line: 3390, column: 13, scope: !12910)
!12921 = !DILocation(line: 3390, column: 15, scope: !12910)
!12922 = !DILocation(line: 3391, column: 5, scope: !12910)
!12923 = !DILocation(line: 3392, column: 14, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3392, column: 14)
!12925 = !DILocation(line: 3392, column: 20, scope: !12924)
!12926 = !DILocation(line: 3392, column: 26, scope: !12924)
!12927 = !DILocation(line: 3392, column: 14, scope: !12906)
!12928 = !DILocation(line: 3393, column: 18, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12924, file: !3, line: 3392, column: 39)
!12930 = !DILocation(line: 3393, column: 13, scope: !12929)
!12931 = !DILocation(line: 3393, column: 16, scope: !12929)
!12932 = !DILocation(line: 3394, column: 5, scope: !12929)
!12933 = !DILocation(line: 3395, column: 29, scope: !12924)
!12934 = !DILocation(line: 3395, column: 17, scope: !12924)
!12935 = !DILocation(line: 3395, column: 20, scope: !12924)
!12936 = !DILocation(line: 3398, column: 9, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 3398, column: 9)
!12938 = !DILocation(line: 3398, column: 14, scope: !12937)
!12939 = !DILocation(line: 3398, column: 18, scope: !12937)
!12940 = !DILocation(line: 3398, column: 9, scope: !12903)
!12941 = !DILocalVariable(name: "ima", scope: !12942, file: !3, line: 3399, type: !3130)
!12942 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 3398, column: 31)
!12943 = !DILocation(line: 3399, column: 13, scope: !12942)
!12944 = !DILocation(line: 3399, column: 19, scope: !12942)
!12945 = !DILocation(line: 3399, column: 24, scope: !12942)
!12946 = !DILocalVariable(name: "ibuf", scope: !12942, file: !3, line: 3400, type: !3706)
!12947 = !DILocation(line: 3400, column: 13, scope: !12942)
!12948 = !DILocation(line: 3400, column: 48, scope: !12942)
!12949 = !DILocation(line: 3400, column: 54, scope: !12942)
!12950 = !DILocation(line: 3400, column: 59, scope: !12942)
!12951 = !DILocation(line: 3400, column: 68, scope: !12942)
!12952 = !DILocation(line: 3400, column: 20, scope: !12942)
!12953 = !DILocation(line: 3403, column: 10, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 3403, column: 10)
!12955 = !DILocation(line: 3403, column: 15, scope: !12954)
!12956 = !DILocation(line: 3403, column: 20, scope: !12954)
!12957 = !DILocation(line: 3403, column: 26, scope: !12954)
!12958 = !DILocation(line: 3403, column: 19, scope: !12954)
!12959 = !DILocation(line: 3403, column: 38, scope: !12954)
!12960 = !DILocation(line: 3403, column: 43, scope: !12954)
!12961 = !DILocation(line: 3403, column: 41, scope: !12954)
!12962 = !DILocation(line: 3403, column: 10, scope: !12942)
!12963 = !DILocation(line: 3404, column: 65, scope: !12954)
!12964 = !DILocation(line: 3404, column: 69, scope: !12954)
!12965 = !DILocation(line: 3404, column: 75, scope: !12954)
!12966 = !DILocation(line: 3404, column: 7, scope: !12954)
!12967 = !DILocation(line: 3406, column: 34, scope: !12942)
!12968 = !DILocation(line: 3406, column: 39, scope: !12942)
!12969 = !DILocation(line: 3406, column: 47, scope: !12942)
!12970 = !DILocation(line: 3406, column: 6, scope: !12942)
!12971 = !DILocation(line: 3407, column: 5, scope: !12942)
!12972 = !DILocation(line: 3410, column: 20, scope: !12903)
!12973 = !DILocation(line: 3410, column: 23, scope: !12903)
!12974 = !DILocation(line: 3410, column: 27, scope: !12903)
!12975 = !DILocation(line: 3410, column: 22, scope: !12903)
!12976 = !DILocation(line: 3410, column: 5, scope: !12903)
!12977 = !DILocation(line: 3410, column: 11, scope: !12903)
!12978 = !DILocation(line: 3411, column: 20, scope: !12903)
!12979 = !DILocation(line: 3411, column: 23, scope: !12903)
!12980 = !DILocation(line: 3411, column: 27, scope: !12903)
!12981 = !DILocation(line: 3411, column: 22, scope: !12903)
!12982 = !DILocation(line: 3411, column: 5, scope: !12903)
!12983 = !DILocation(line: 3411, column: 11, scope: !12903)
!12984 = !DILocation(line: 3412, column: 20, scope: !12903)
!12985 = !DILocation(line: 3412, column: 23, scope: !12903)
!12986 = !DILocation(line: 3412, column: 27, scope: !12903)
!12987 = !DILocation(line: 3412, column: 22, scope: !12903)
!12988 = !DILocation(line: 3412, column: 5, scope: !12903)
!12989 = !DILocation(line: 3412, column: 11, scope: !12903)
!12990 = !DILocation(line: 3414, column: 9, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 3414, column: 9)
!12992 = !DILocation(line: 3414, column: 16, scope: !12991)
!12993 = !DILocation(line: 3414, column: 9, scope: !12903)
!12994 = !DILocation(line: 3415, column: 24, scope: !12991)
!12995 = !DILocation(line: 3415, column: 31, scope: !12991)
!12996 = !DILocation(line: 3415, column: 36, scope: !12991)
!12997 = !DILocation(line: 3415, column: 50, scope: !12991)
!12998 = !DILocation(line: 3415, column: 55, scope: !12991)
!12999 = !DILocation(line: 3415, column: 61, scope: !12991)
!13000 = !DILocation(line: 3415, column: 72, scope: !12991)
!13001 = !DILocation(line: 3415, column: 78, scope: !12991)
!13002 = !DILocation(line: 3415, column: 6, scope: !12991)
!13003 = !DILocation(line: 3417, column: 24, scope: !12991)
!13004 = !DILocation(line: 3417, column: 31, scope: !12991)
!13005 = !DILocation(line: 3417, column: 36, scope: !12991)
!13006 = !DILocation(line: 3417, column: 50, scope: !12991)
!13007 = !DILocation(line: 3417, column: 55, scope: !12991)
!13008 = !DILocation(line: 3417, column: 61, scope: !12991)
!13009 = !DILocation(line: 3417, column: 69, scope: !12991)
!13010 = !DILocation(line: 3417, column: 75, scope: !12991)
!13011 = !DILocation(line: 3417, column: 6, scope: !12991)
!13012 = !DILocation(line: 3418, column: 4, scope: !12903)
!13013 = !DILocation(line: 3419, column: 3, scope: !12417)
!13014 = !DILocation(line: 3420, column: 2, scope: !12412)
!13015 = !DILocation(line: 3239, column: 32, scope: !12406)
!13016 = !DILocation(line: 3239, column: 2, scope: !12406)
!13017 = distinct !{!13017, !12409, !13018}
!13018 = !DILocation(line: 3420, column: 2, scope: !12407)
!13019 = !DILocation(line: 3421, column: 1, scope: !12201)
!13020 = distinct !DISubprogram(name: "externtex", scope: !3, file: !3, line: 3425, type: !13021, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!13021 = !DISubroutineType(types: !13022)
!13022 = !{!92, !3587, !954, !201, !201, !201, !201, !201, !6844, !2905}
!13023 = !DILocalVariable(name: "mtex", arg: 1, scope: !13020, file: !3, line: 3425, type: !3587)
!13024 = !DILocation(line: 3425, column: 21, scope: !13020)
!13025 = !DILocalVariable(name: "vec", arg: 2, scope: !13020, file: !3, line: 3425, type: !954)
!13026 = !DILocation(line: 3425, column: 39, scope: !13020)
!13027 = !DILocalVariable(name: "tin", arg: 3, scope: !13020, file: !3, line: 3425, type: !201)
!13028 = !DILocation(line: 3425, column: 54, scope: !13020)
!13029 = !DILocalVariable(name: "tr", arg: 4, scope: !13020, file: !3, line: 3425, type: !201)
!13030 = !DILocation(line: 3425, column: 66, scope: !13020)
!13031 = !DILocalVariable(name: "tg", arg: 5, scope: !13020, file: !3, line: 3425, type: !201)
!13032 = !DILocation(line: 3425, column: 77, scope: !13020)
!13033 = !DILocalVariable(name: "tb", arg: 6, scope: !13020, file: !3, line: 3425, type: !201)
!13034 = !DILocation(line: 3425, column: 88, scope: !13020)
!13035 = !DILocalVariable(name: "ta", arg: 7, scope: !13020, file: !3, line: 3425, type: !201)
!13036 = !DILocation(line: 3425, column: 99, scope: !13020)
!13037 = !DILocalVariable(name: "thread", arg: 8, scope: !13020, file: !3, line: 3425, type: !6844)
!13038 = !DILocation(line: 3425, column: 113, scope: !13020)
!13039 = !DILocalVariable(name: "pool", arg: 9, scope: !13020, file: !3, line: 3425, type: !2905)
!13040 = !DILocation(line: 3425, column: 139, scope: !13020)
!13041 = !DILocalVariable(name: "tex", scope: !13020, file: !3, line: 3427, type: !3402)
!13042 = !DILocation(line: 3427, column: 7, scope: !13020)
!13043 = !DILocalVariable(name: "texr", scope: !13020, file: !3, line: 3428, type: !3577)
!13044 = !DILocation(line: 3428, column: 12, scope: !13020)
!13045 = !DILocalVariable(name: "dxt", scope: !13020, file: !3, line: 3429, type: !344)
!13046 = !DILocation(line: 3429, column: 8, scope: !13020)
!13047 = !DILocalVariable(name: "dyt", scope: !13020, file: !3, line: 3429, type: !344)
!13048 = !DILocation(line: 3429, column: 16, scope: !13020)
!13049 = !DILocalVariable(name: "texvec", scope: !13020, file: !3, line: 3429, type: !344)
!13050 = !DILocation(line: 3429, column: 24, scope: !13020)
!13051 = !DILocalVariable(name: "rgb", scope: !13020, file: !3, line: 3430, type: !92)
!13052 = !DILocation(line: 3430, column: 6, scope: !13020)
!13053 = !DILocation(line: 3432, column: 7, scope: !13020)
!13054 = !DILocation(line: 3432, column: 13, scope: !13020)
!13055 = !DILocation(line: 3432, column: 5, scope: !13020)
!13056 = !DILocation(line: 3433, column: 6, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3433, column: 6)
!13058 = !DILocation(line: 3433, column: 9, scope: !13057)
!13059 = !DILocation(line: 3433, column: 6, scope: !13020)
!13060 = !DILocation(line: 3433, column: 17, scope: !13057)
!13061 = !DILocation(line: 3434, column: 7, scope: !13020)
!13062 = !DILocation(line: 3434, column: 10, scope: !13020)
!13063 = !DILocation(line: 3437, column: 6, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3437, column: 6)
!13065 = !DILocation(line: 3437, column: 12, scope: !13064)
!13066 = !DILocation(line: 3437, column: 6, scope: !13020)
!13067 = !DILocation(line: 3437, column: 30, scope: !13064)
!13068 = !DILocation(line: 3437, column: 36, scope: !13064)
!13069 = !DILocation(line: 3437, column: 45, scope: !13064)
!13070 = !DILocation(line: 3437, column: 49, scope: !13064)
!13071 = !DILocation(line: 3437, column: 55, scope: !13064)
!13072 = !DILocation(line: 3437, column: 60, scope: !13064)
!13073 = !DILocation(line: 3437, column: 64, scope: !13064)
!13074 = !DILocation(line: 3437, column: 70, scope: !13064)
!13075 = !DILocation(line: 3437, column: 63, scope: !13064)
!13076 = !DILocation(line: 3437, column: 43, scope: !13064)
!13077 = !DILocation(line: 3437, column: 19, scope: !13064)
!13078 = !DILocation(line: 3437, column: 28, scope: !13064)
!13079 = !DILocation(line: 3438, column: 18, scope: !13064)
!13080 = !DILocation(line: 3438, column: 24, scope: !13064)
!13081 = !DILocation(line: 3438, column: 33, scope: !13064)
!13082 = !DILocation(line: 3438, column: 39, scope: !13064)
!13083 = !DILocation(line: 3438, column: 31, scope: !13064)
!13084 = !DILocation(line: 3438, column: 7, scope: !13064)
!13085 = !DILocation(line: 3438, column: 16, scope: !13064)
!13086 = !DILocation(line: 3440, column: 6, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3440, column: 6)
!13088 = !DILocation(line: 3440, column: 12, scope: !13087)
!13089 = !DILocation(line: 3440, column: 6, scope: !13020)
!13090 = !DILocation(line: 3440, column: 30, scope: !13087)
!13091 = !DILocation(line: 3440, column: 36, scope: !13087)
!13092 = !DILocation(line: 3440, column: 45, scope: !13087)
!13093 = !DILocation(line: 3440, column: 49, scope: !13087)
!13094 = !DILocation(line: 3440, column: 55, scope: !13087)
!13095 = !DILocation(line: 3440, column: 60, scope: !13087)
!13096 = !DILocation(line: 3440, column: 64, scope: !13087)
!13097 = !DILocation(line: 3440, column: 70, scope: !13087)
!13098 = !DILocation(line: 3440, column: 63, scope: !13087)
!13099 = !DILocation(line: 3440, column: 43, scope: !13087)
!13100 = !DILocation(line: 3440, column: 19, scope: !13087)
!13101 = !DILocation(line: 3440, column: 28, scope: !13087)
!13102 = !DILocation(line: 3441, column: 18, scope: !13087)
!13103 = !DILocation(line: 3441, column: 24, scope: !13087)
!13104 = !DILocation(line: 3441, column: 33, scope: !13087)
!13105 = !DILocation(line: 3441, column: 39, scope: !13087)
!13106 = !DILocation(line: 3441, column: 31, scope: !13087)
!13107 = !DILocation(line: 3441, column: 7, scope: !13087)
!13108 = !DILocation(line: 3441, column: 16, scope: !13087)
!13109 = !DILocation(line: 3443, column: 6, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3443, column: 6)
!13111 = !DILocation(line: 3443, column: 12, scope: !13110)
!13112 = !DILocation(line: 3443, column: 6, scope: !13020)
!13113 = !DILocation(line: 3443, column: 30, scope: !13110)
!13114 = !DILocation(line: 3443, column: 36, scope: !13110)
!13115 = !DILocation(line: 3443, column: 45, scope: !13110)
!13116 = !DILocation(line: 3443, column: 49, scope: !13110)
!13117 = !DILocation(line: 3443, column: 55, scope: !13110)
!13118 = !DILocation(line: 3443, column: 60, scope: !13110)
!13119 = !DILocation(line: 3443, column: 64, scope: !13110)
!13120 = !DILocation(line: 3443, column: 70, scope: !13110)
!13121 = !DILocation(line: 3443, column: 63, scope: !13110)
!13122 = !DILocation(line: 3443, column: 43, scope: !13110)
!13123 = !DILocation(line: 3443, column: 19, scope: !13110)
!13124 = !DILocation(line: 3443, column: 28, scope: !13110)
!13125 = !DILocation(line: 3444, column: 18, scope: !13110)
!13126 = !DILocation(line: 3444, column: 24, scope: !13110)
!13127 = !DILocation(line: 3444, column: 33, scope: !13110)
!13128 = !DILocation(line: 3444, column: 39, scope: !13110)
!13129 = !DILocation(line: 3444, column: 31, scope: !13110)
!13130 = !DILocation(line: 3444, column: 7, scope: !13110)
!13131 = !DILocation(line: 3444, column: 16, scope: !13110)
!13132 = !DILocation(line: 3447, column: 6, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3447, column: 6)
!13134 = !DILocation(line: 3447, column: 11, scope: !13133)
!13135 = !DILocation(line: 3447, column: 15, scope: !13133)
!13136 = !DILocation(line: 3447, column: 6, scope: !13020)
!13137 = !DILocation(line: 3448, column: 17, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 3447, column: 28)
!13139 = !DILocation(line: 3448, column: 23, scope: !13138)
!13140 = !DILocation(line: 3448, column: 43, scope: !13138)
!13141 = !DILocation(line: 3448, column: 48, scope: !13138)
!13142 = !DILocation(line: 3448, column: 3, scope: !13138)
!13143 = !DILocation(line: 3449, column: 2, scope: !13138)
!13144 = !DILocation(line: 3451, column: 17, scope: !13020)
!13145 = !DILocation(line: 3451, column: 22, scope: !13020)
!13146 = !DILocation(line: 3451, column: 30, scope: !13020)
!13147 = !DILocation(line: 3451, column: 35, scope: !13020)
!13148 = !DILocation(line: 3451, column: 50, scope: !13020)
!13149 = !DILocation(line: 3451, column: 58, scope: !13020)
!13150 = !DILocation(line: 3451, column: 64, scope: !13020)
!13151 = !DILocation(line: 3451, column: 78, scope: !13020)
!13152 = !DILocation(line: 3451, column: 8, scope: !13020)
!13153 = !DILocation(line: 3451, column: 6, scope: !13020)
!13154 = !DILocation(line: 3453, column: 6, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 3453, column: 6)
!13156 = !DILocation(line: 3453, column: 6, scope: !13020)
!13157 = !DILocation(line: 3454, column: 30, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 3453, column: 11)
!13159 = !DILocation(line: 3454, column: 14, scope: !13158)
!13160 = !DILocation(line: 3454, column: 8, scope: !13158)
!13161 = !DILocation(line: 3454, column: 12, scope: !13158)
!13162 = !DILocation(line: 3455, column: 2, scope: !13158)
!13163 = !DILocation(line: 3457, column: 12, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 3456, column: 7)
!13165 = !DILocation(line: 3457, column: 18, scope: !13164)
!13166 = !DILocation(line: 3457, column: 8, scope: !13164)
!13167 = !DILocation(line: 3457, column: 10, scope: !13164)
!13168 = !DILocation(line: 3458, column: 12, scope: !13164)
!13169 = !DILocation(line: 3458, column: 18, scope: !13164)
!13170 = !DILocation(line: 3458, column: 8, scope: !13164)
!13171 = !DILocation(line: 3458, column: 10, scope: !13164)
!13172 = !DILocation(line: 3459, column: 12, scope: !13164)
!13173 = !DILocation(line: 3459, column: 18, scope: !13164)
!13174 = !DILocation(line: 3459, column: 8, scope: !13164)
!13175 = !DILocation(line: 3459, column: 10, scope: !13164)
!13176 = !DILocation(line: 3462, column: 13, scope: !13020)
!13177 = !DILocation(line: 3462, column: 3, scope: !13020)
!13178 = !DILocation(line: 3462, column: 6, scope: !13020)
!13179 = !DILocation(line: 3463, column: 12, scope: !13020)
!13180 = !DILocation(line: 3463, column: 3, scope: !13020)
!13181 = !DILocation(line: 3463, column: 5, scope: !13020)
!13182 = !DILocation(line: 3464, column: 12, scope: !13020)
!13183 = !DILocation(line: 3464, column: 3, scope: !13020)
!13184 = !DILocation(line: 3464, column: 5, scope: !13020)
!13185 = !DILocation(line: 3465, column: 12, scope: !13020)
!13186 = !DILocation(line: 3465, column: 3, scope: !13020)
!13187 = !DILocation(line: 3465, column: 5, scope: !13020)
!13188 = !DILocation(line: 3466, column: 12, scope: !13020)
!13189 = !DILocation(line: 3466, column: 3, scope: !13020)
!13190 = !DILocation(line: 3466, column: 5, scope: !13020)
!13191 = !DILocation(line: 3468, column: 10, scope: !13020)
!13192 = !DILocation(line: 3468, column: 14, scope: !13020)
!13193 = !DILocation(line: 3468, column: 2, scope: !13020)
!13194 = !DILocation(line: 3469, column: 1, scope: !13020)
!13195 = !DILocalVariable(name: "shi", arg: 1, scope: !2727, file: !3, line: 3474, type: !2730)
!13196 = !DILocation(line: 3474, column: 42, scope: !2727)
!13197 = !DILocalVariable(name: "ima", arg: 2, scope: !2727, file: !3, line: 3474, type: !3130)
!13198 = !DILocation(line: 3474, column: 54, scope: !2727)
!13199 = !DILocalVariable(name: "texr", scope: !2727, file: !3, line: 3476, type: !3577)
!13200 = !DILocation(line: 3476, column: 12, scope: !2727)
!13201 = !DILocalVariable(name: "tex", scope: !2727, file: !3, line: 3479, type: !3402)
!13202 = !DILocation(line: 3479, column: 7, scope: !2727)
!13203 = !DILocalVariable(name: "texvec", scope: !2727, file: !3, line: 3480, type: !344)
!13204 = !DILocation(line: 3480, column: 8, scope: !2727)
!13205 = !DILocalVariable(name: "dx", scope: !2727, file: !3, line: 3480, type: !1101)
!13206 = !DILocation(line: 3480, column: 19, scope: !2727)
!13207 = !DILocalVariable(name: "dy", scope: !2727, file: !3, line: 3480, type: !1101)
!13208 = !DILocation(line: 3480, column: 26, scope: !2727)
!13209 = !DILocalVariable(name: "suv", scope: !2727, file: !3, line: 3481, type: !5048)
!13210 = !DILocation(line: 3481, column: 16, scope: !2727)
!13211 = !DILocation(line: 3481, column: 22, scope: !2727)
!13212 = !DILocation(line: 3481, column: 27, scope: !2727)
!13213 = !DILocation(line: 3481, column: 30, scope: !2727)
!13214 = !DILocation(line: 3481, column: 35, scope: !2727)
!13215 = !DILocalVariable(name: "a", scope: !2727, file: !3, line: 3482, type: !92)
!13216 = !DILocation(line: 3482, column: 6, scope: !2727)
!13217 = !DILocation(line: 3484, column: 10, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 3484, column: 6)
!13219 = !DILocation(line: 3484, column: 18, scope: !13218)
!13220 = !DILocation(line: 3484, column: 6, scope: !2727)
!13221 = !DILocation(line: 3484, column: 30, scope: !13218)
!13222 = !DILocation(line: 3486, column: 6, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 3486, column: 6)
!13224 = !DILocation(line: 3486, column: 6, scope: !2727)
!13225 = !DILocation(line: 3487, column: 3, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13223, file: !3, line: 3486, column: 17)
!13227 = !DILocation(line: 3488, column: 7, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 3488, column: 7)
!13229 = !DILocation(line: 3488, column: 7, scope: !13226)
!13230 = !DILocation(line: 3489, column: 10, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 3489, column: 4)
!13232 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 3488, column: 18)
!13233 = !DILocation(line: 3489, column: 9, scope: !13231)
!13234 = !DILocation(line: 3489, column: 14, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 3489, column: 4)
!13236 = !DILocation(line: 3489, column: 15, scope: !13235)
!13237 = !DILocation(line: 3489, column: 4, scope: !13231)
!13238 = !DILocation(line: 3490, column: 20, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 3489, column: 42)
!13240 = !DILocation(line: 3490, column: 13, scope: !13239)
!13241 = !DILocation(line: 3490, column: 5, scope: !13239)
!13242 = !DILocation(line: 3491, column: 25, scope: !13239)
!13243 = !DILocation(line: 3491, column: 18, scope: !13239)
!13244 = !DILocation(line: 3491, column: 5, scope: !13239)
!13245 = !DILocation(line: 3492, column: 12, scope: !13239)
!13246 = !DILocation(line: 3492, column: 5, scope: !13239)
!13247 = !DILocation(line: 3492, column: 15, scope: !13239)
!13248 = !DILocation(line: 3492, column: 19, scope: !13239)
!13249 = !DILocation(line: 3493, column: 4, scope: !13239)
!13250 = !DILocation(line: 3489, column: 38, scope: !13235)
!13251 = !DILocation(line: 3489, column: 4, scope: !13235)
!13252 = distinct !{!13252, !13237, !13253}
!13253 = !DILocation(line: 3493, column: 4, scope: !13231)
!13254 = !DILocation(line: 3495, column: 13, scope: !13232)
!13255 = !DILocation(line: 3496, column: 3, scope: !13232)
!13256 = !DILocation(line: 3497, column: 3, scope: !13226)
!13257 = !DILocation(line: 3498, column: 2, scope: !13226)
!13258 = !DILocation(line: 3500, column: 15, scope: !2727)
!13259 = !DILocation(line: 3500, column: 20, scope: !2727)
!13260 = !DILocation(line: 3500, column: 8, scope: !2727)
!13261 = !DILocation(line: 3500, column: 5, scope: !2727)
!13262 = !DILocation(line: 3501, column: 17, scope: !2727)
!13263 = !DILocation(line: 3501, column: 22, scope: !2727)
!13264 = !DILocation(line: 3501, column: 2, scope: !2727)
!13265 = !DILocation(line: 3501, column: 7, scope: !2727)
!13266 = !DILocation(line: 3501, column: 13, scope: !2727)
!13267 = !DILocation(line: 3501, column: 15, scope: !2727)
!13268 = !DILocation(line: 3502, column: 13, scope: !2727)
!13269 = !DILocation(line: 3502, column: 2, scope: !2727)
!13270 = !DILocation(line: 3502, column: 7, scope: !2727)
!13271 = !DILocation(line: 3502, column: 11, scope: !2727)
!13272 = !DILocation(line: 3504, column: 23, scope: !2727)
!13273 = !DILocation(line: 3504, column: 28, scope: !2727)
!13274 = !DILocation(line: 3504, column: 22, scope: !2727)
!13275 = !DILocation(line: 3504, column: 17, scope: !2727)
!13276 = !DILocation(line: 3504, column: 2, scope: !2727)
!13277 = !DILocation(line: 3504, column: 11, scope: !2727)
!13278 = !DILocation(line: 3505, column: 23, scope: !2727)
!13279 = !DILocation(line: 3505, column: 28, scope: !2727)
!13280 = !DILocation(line: 3505, column: 22, scope: !2727)
!13281 = !DILocation(line: 3505, column: 17, scope: !2727)
!13282 = !DILocation(line: 3505, column: 2, scope: !2727)
!13283 = !DILocation(line: 3505, column: 11, scope: !2727)
!13284 = !DILocation(line: 3506, column: 2, scope: !2727)
!13285 = !DILocation(line: 3506, column: 12, scope: !2727)
!13286 = !DILocation(line: 3507, column: 6, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 3507, column: 6)
!13288 = !DILocation(line: 3507, column: 11, scope: !13287)
!13289 = !DILocation(line: 3507, column: 6, scope: !2727)
!13290 = !DILocation(line: 3508, column: 15, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13287, file: !3, line: 3507, column: 19)
!13292 = !DILocation(line: 3508, column: 20, scope: !13291)
!13293 = !DILocation(line: 3508, column: 14, scope: !13291)
!13294 = !DILocation(line: 3508, column: 3, scope: !13291)
!13295 = !DILocation(line: 3508, column: 8, scope: !13291)
!13296 = !DILocation(line: 3509, column: 15, scope: !13291)
!13297 = !DILocation(line: 3509, column: 20, scope: !13291)
!13298 = !DILocation(line: 3509, column: 14, scope: !13291)
!13299 = !DILocation(line: 3509, column: 3, scope: !13291)
!13300 = !DILocation(line: 3509, column: 8, scope: !13291)
!13301 = !DILocation(line: 3510, column: 15, scope: !13291)
!13302 = !DILocation(line: 3510, column: 20, scope: !13291)
!13303 = !DILocation(line: 3510, column: 14, scope: !13291)
!13304 = !DILocation(line: 3510, column: 3, scope: !13291)
!13305 = !DILocation(line: 3510, column: 8, scope: !13291)
!13306 = !DILocation(line: 3511, column: 15, scope: !13291)
!13307 = !DILocation(line: 3511, column: 20, scope: !13291)
!13308 = !DILocation(line: 3511, column: 14, scope: !13291)
!13309 = !DILocation(line: 3511, column: 3, scope: !13291)
!13310 = !DILocation(line: 3511, column: 8, scope: !13291)
!13311 = !DILocation(line: 3512, column: 2, scope: !13291)
!13312 = !DILocation(line: 3514, column: 7, scope: !2727)
!13313 = !DILocation(line: 3514, column: 10, scope: !2727)
!13314 = !DILocation(line: 3516, column: 6, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 3516, column: 6)
!13316 = !DILocation(line: 3516, column: 11, scope: !13315)
!13317 = !DILocation(line: 3516, column: 6, scope: !2727)
!13318 = !DILocation(line: 3516, column: 32, scope: !13315)
!13319 = !DILocation(line: 3516, column: 37, scope: !13315)
!13320 = !DILocation(line: 3516, column: 48, scope: !13315)
!13321 = !DILocation(line: 3516, column: 56, scope: !13315)
!13322 = !DILocation(line: 3516, column: 60, scope: !13315)
!13323 = !DILocation(line: 3516, column: 73, scope: !13315)
!13324 = !DILocation(line: 3516, column: 19, scope: !13315)
!13325 = !DILocation(line: 3517, column: 17, scope: !13315)
!13326 = !DILocation(line: 3517, column: 22, scope: !13315)
!13327 = !DILocation(line: 3517, column: 33, scope: !13315)
!13328 = !DILocation(line: 3517, column: 50, scope: !13315)
!13329 = !DILocation(line: 3517, column: 7, scope: !13315)
!13330 = !DILocation(line: 3519, column: 22, scope: !2727)
!13331 = !DILocation(line: 3519, column: 2, scope: !2727)
!13332 = !DILocation(line: 3519, column: 7, scope: !2727)
!13333 = !DILocation(line: 3519, column: 14, scope: !2727)
!13334 = !DILocation(line: 3520, column: 22, scope: !2727)
!13335 = !DILocation(line: 3520, column: 2, scope: !2727)
!13336 = !DILocation(line: 3520, column: 7, scope: !2727)
!13337 = !DILocation(line: 3520, column: 14, scope: !2727)
!13338 = !DILocation(line: 3521, column: 22, scope: !2727)
!13339 = !DILocation(line: 3521, column: 2, scope: !2727)
!13340 = !DILocation(line: 3521, column: 7, scope: !2727)
!13341 = !DILocation(line: 3521, column: 14, scope: !2727)
!13342 = !DILocation(line: 3522, column: 22, scope: !2727)
!13343 = !DILocation(line: 3522, column: 2, scope: !2727)
!13344 = !DILocation(line: 3522, column: 7, scope: !2727)
!13345 = !DILocation(line: 3522, column: 14, scope: !2727)
!13346 = !DILocation(line: 3523, column: 1, scope: !2727)
!13347 = distinct !DISubprogram(name: "RE_init_sample_material", scope: !3, file: !3, line: 3553, type: !13348, scopeLine: 3554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!13348 = !DISubroutineType(types: !13349)
!13349 = !{!237, !13350, !3291}
!13350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13351, size: 64)
!13351 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !239, line: 203, baseType: !238)
!13352 = !DILocalVariable(name: "orig_mat", arg: 1, scope: !13347, file: !3, line: 3553, type: !13350)
!13353 = !DILocation(line: 3553, column: 45, scope: !13347)
!13354 = !DILocalVariable(name: "scene", arg: 2, scope: !13347, file: !3, line: 3553, type: !3291)
!13355 = !DILocation(line: 3553, column: 62, scope: !13347)
!13356 = !DILocalVariable(name: "tex", scope: !13347, file: !3, line: 3555, type: !3402)
!13357 = !DILocation(line: 3555, column: 7, scope: !13347)
!13358 = !DILocalVariable(name: "mat", scope: !13347, file: !3, line: 3556, type: !13350)
!13359 = !DILocation(line: 3556, column: 12, scope: !13347)
!13360 = !DILocalVariable(name: "tex_nr", scope: !13347, file: !3, line: 3557, type: !92)
!13361 = !DILocation(line: 3557, column: 6, scope: !13347)
!13362 = !DILocation(line: 3559, column: 7, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13347, file: !3, line: 3559, column: 6)
!13364 = !DILocation(line: 3559, column: 6, scope: !13347)
!13365 = !DILocation(line: 3559, column: 17, scope: !13363)
!13366 = !DILocation(line: 3562, column: 26, scope: !13347)
!13367 = !DILocation(line: 3562, column: 8, scope: !13347)
!13368 = !DILocation(line: 3562, column: 6, scope: !13347)
!13369 = !DILocation(line: 3565, column: 32, scope: !13347)
!13370 = !DILocation(line: 3565, column: 40, scope: !13347)
!13371 = !DILocation(line: 3565, column: 45, scope: !13347)
!13372 = !DILocation(line: 3565, column: 49, scope: !13347)
!13373 = !DILocation(line: 3565, column: 54, scope: !13347)
!13374 = !DILocation(line: 3565, column: 79, scope: !13347)
!13375 = !DILocation(line: 3565, column: 59, scope: !13347)
!13376 = !DILocation(line: 3565, column: 2, scope: !13347)
!13377 = !DILocation(line: 3568, column: 13, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13347, file: !3, line: 3568, column: 2)
!13379 = !DILocation(line: 3568, column: 7, scope: !13378)
!13380 = !DILocation(line: 3568, column: 17, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 3568, column: 2)
!13382 = !DILocation(line: 3568, column: 23, scope: !13381)
!13383 = !DILocation(line: 3568, column: 2, scope: !13378)
!13384 = !DILocation(line: 3570, column: 7, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !3, line: 3570, column: 7)
!13386 = distinct !DILexicalBlock(scope: !13381, file: !3, line: 3568, column: 44)
!13387 = !DILocation(line: 3570, column: 12, scope: !13385)
!13388 = !DILocation(line: 3570, column: 17, scope: !13385)
!13389 = !DILocation(line: 3570, column: 7, scope: !13386)
!13390 = !DILocalVariable(name: "mtex", scope: !13391, file: !3, line: 3571, type: !3587)
!13391 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 3570, column: 26)
!13392 = !DILocation(line: 3571, column: 10, scope: !13391)
!13393 = !DILocation(line: 3571, column: 17, scope: !13391)
!13394 = !DILocation(line: 3571, column: 22, scope: !13391)
!13395 = !DILocation(line: 3571, column: 27, scope: !13391)
!13396 = !DILocalVariable(name: "cur_tex", scope: !13391, file: !3, line: 3574, type: !3402)
!13397 = !DILocation(line: 3574, column: 9, scope: !13391)
!13398 = !DILocation(line: 3574, column: 19, scope: !13391)
!13399 = !DILocation(line: 3574, column: 25, scope: !13391)
!13400 = !DILocation(line: 3575, column: 4, scope: !13391)
!13401 = !DILocation(line: 3575, column: 10, scope: !13391)
!13402 = !DILocation(line: 3575, column: 14, scope: !13391)
!13403 = !DILocation(line: 3577, column: 8, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3577, column: 8)
!13405 = !DILocation(line: 3577, column: 13, scope: !13404)
!13406 = !DILocation(line: 3577, column: 26, scope: !13404)
!13407 = !DILocation(line: 3577, column: 24, scope: !13404)
!13408 = !DILocation(line: 3577, column: 20, scope: !13404)
!13409 = !DILocation(line: 3577, column: 34, scope: !13404)
!13410 = !DILocation(line: 3577, column: 38, scope: !13404)
!13411 = !DILocation(line: 3577, column: 8, scope: !13391)
!13412 = !DILocation(line: 3577, column: 47, scope: !13404)
!13413 = !DILocation(line: 3580, column: 20, scope: !13391)
!13414 = !DILocation(line: 3580, column: 26, scope: !13391)
!13415 = !DILocation(line: 3580, column: 34, scope: !13391)
!13416 = !DILocation(line: 3580, column: 4, scope: !13391)
!13417 = !DILocation(line: 3580, column: 10, scope: !13391)
!13418 = !DILocation(line: 3580, column: 18, scope: !13391)
!13419 = !DILocation(line: 3583, column: 8, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3583, column: 8)
!13421 = !DILocation(line: 3583, column: 13, scope: !13420)
!13422 = !DILocation(line: 3583, column: 27, scope: !13420)
!13423 = !DILocation(line: 3583, column: 8, scope: !13391)
!13424 = !DILocation(line: 3584, column: 10, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 3584, column: 9)
!13426 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 3583, column: 47)
!13427 = !DILocation(line: 3584, column: 9, scope: !13426)
!13428 = !DILocation(line: 3586, column: 6, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13425, file: !3, line: 3584, column: 77)
!13430 = !DILocation(line: 3586, column: 12, scope: !13429)
!13431 = !DILocation(line: 3586, column: 18, scope: !13429)
!13432 = !DILocation(line: 3587, column: 6, scope: !13429)
!13433 = !DILocation(line: 3590, column: 20, scope: !13426)
!13434 = !DILocation(line: 3590, column: 26, scope: !13426)
!13435 = !DILocation(line: 3590, column: 32, scope: !13426)
!13436 = !DILocation(line: 3590, column: 46, scope: !13426)
!13437 = !DILocation(line: 3590, column: 52, scope: !13426)
!13438 = !DILocation(line: 3590, column: 58, scope: !13426)
!13439 = !DILocation(line: 3590, column: 43, scope: !13426)
!13440 = !DILocation(line: 3590, column: 19, scope: !13426)
!13441 = !DILocation(line: 3590, column: 5, scope: !13426)
!13442 = !DILocation(line: 3590, column: 11, scope: !13426)
!13443 = !DILocation(line: 3590, column: 17, scope: !13426)
!13444 = !DILocation(line: 3591, column: 4, scope: !13426)
!13445 = !DILocation(line: 3592, column: 13, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 3592, column: 13)
!13447 = !DILocation(line: 3592, column: 18, scope: !13446)
!13448 = !DILocation(line: 3592, column: 32, scope: !13446)
!13449 = !DILocation(line: 3592, column: 13, scope: !13420)
!13450 = !DILocation(line: 3593, column: 10, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 3593, column: 9)
!13452 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 3592, column: 51)
!13453 = !DILocation(line: 3593, column: 9, scope: !13452)
!13454 = !DILocation(line: 3595, column: 6, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 3593, column: 67)
!13456 = !DILocation(line: 3595, column: 12, scope: !13455)
!13457 = !DILocation(line: 3595, column: 18, scope: !13455)
!13458 = !DILocation(line: 3596, column: 6, scope: !13455)
!13459 = !DILocation(line: 3599, column: 19, scope: !13452)
!13460 = !DILocation(line: 3599, column: 25, scope: !13452)
!13461 = !DILocation(line: 3599, column: 31, scope: !13452)
!13462 = !DILocation(line: 3599, column: 5, scope: !13452)
!13463 = !DILocation(line: 3599, column: 11, scope: !13452)
!13464 = !DILocation(line: 3599, column: 17, scope: !13452)
!13465 = !DILocation(line: 3600, column: 4, scope: !13452)
!13466 = !DILocation(line: 3603, column: 8, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3603, column: 8)
!13468 = !DILocation(line: 3603, column: 14, scope: !13467)
!13469 = !DILocation(line: 3603, column: 19, scope: !13467)
!13470 = !DILocation(line: 3603, column: 8, scope: !13391)
!13471 = !DILocalVariable(name: "ob", scope: !13472, file: !3, line: 3604, type: !2935)
!13472 = distinct !DILexicalBlock(scope: !13467, file: !3, line: 3603, column: 35)
!13473 = !DILocation(line: 3604, column: 13, scope: !13472)
!13474 = !DILocation(line: 3604, column: 17, scope: !13472)
!13475 = !DILocation(line: 3604, column: 23, scope: !13472)
!13476 = !DILocation(line: 3605, column: 9, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3605, column: 9)
!13478 = !DILocation(line: 3605, column: 9, scope: !13472)
!13479 = !DILocation(line: 3606, column: 19, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 3605, column: 13)
!13481 = !DILocation(line: 3606, column: 23, scope: !13480)
!13482 = !DILocation(line: 3606, column: 29, scope: !13480)
!13483 = !DILocation(line: 3606, column: 33, scope: !13480)
!13484 = !DILocation(line: 3606, column: 6, scope: !13480)
!13485 = !DILocation(line: 3607, column: 17, scope: !13480)
!13486 = !DILocation(line: 3607, column: 21, scope: !13480)
!13487 = !DILocation(line: 3607, column: 31, scope: !13480)
!13488 = !DILocation(line: 3607, column: 35, scope: !13480)
!13489 = !DILocation(line: 3607, column: 6, scope: !13480)
!13490 = !DILocation(line: 3608, column: 5, scope: !13480)
!13491 = !DILocation(line: 3609, column: 4, scope: !13472)
!13492 = !DILocation(line: 3612, column: 38, scope: !13391)
!13493 = !DILocation(line: 3612, column: 21, scope: !13391)
!13494 = !DILocation(line: 3612, column: 9, scope: !13391)
!13495 = !DILocation(line: 3612, column: 15, scope: !13391)
!13496 = !DILocation(line: 3612, column: 19, scope: !13391)
!13497 = !DILocation(line: 3612, column: 7, scope: !13391)
!13498 = !DILocation(line: 3615, column: 34, scope: !13391)
!13499 = !DILocation(line: 3615, column: 42, scope: !13391)
!13500 = !DILocation(line: 3615, column: 47, scope: !13391)
!13501 = !DILocation(line: 3615, column: 51, scope: !13391)
!13502 = !DILocation(line: 3615, column: 56, scope: !13391)
!13503 = !DILocation(line: 3615, column: 81, scope: !13391)
!13504 = !DILocation(line: 3615, column: 61, scope: !13391)
!13505 = !DILocation(line: 3615, column: 4, scope: !13391)
!13506 = !DILocation(line: 3618, column: 8, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3618, column: 8)
!13508 = !DILocation(line: 3618, column: 13, scope: !13507)
!13509 = !DILocation(line: 3618, column: 17, scope: !13507)
!13510 = !DILocation(line: 3618, column: 8, scope: !13391)
!13511 = !DILocation(line: 3619, column: 21, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 3618, column: 34)
!13513 = !DILocation(line: 3619, column: 31, scope: !13512)
!13514 = !DILocation(line: 3619, column: 38, scope: !13512)
!13515 = !DILocation(line: 3619, column: 40, scope: !13512)
!13516 = !DILocation(line: 3619, column: 5, scope: !13512)
!13517 = !DILocation(line: 3620, column: 4, scope: !13512)
!13518 = !DILocation(line: 3621, column: 8, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3621, column: 8)
!13520 = !DILocation(line: 3621, column: 13, scope: !13519)
!13521 = !DILocation(line: 3621, column: 17, scope: !13519)
!13522 = !DILocation(line: 3621, column: 8, scope: !13391)
!13523 = !DILocalVariable(name: "dummy_re", scope: !13524, file: !3, line: 3623, type: !3159)
!13524 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 3621, column: 37)
!13525 = !DILocation(line: 3623, column: 12, scope: !13524)
!13526 = !DILocation(line: 3624, column: 22, scope: !13524)
!13527 = !DILocation(line: 3624, column: 14, scope: !13524)
!13528 = !DILocation(line: 3624, column: 20, scope: !13524)
!13529 = !DILocation(line: 3625, column: 22, scope: !13524)
!13530 = !DILocation(line: 3625, column: 13, scope: !13524)
!13531 = !DILocation(line: 3625, column: 5, scope: !13524)
!13532 = !DILocation(line: 3626, column: 22, scope: !13524)
!13533 = !DILocation(line: 3626, column: 13, scope: !13524)
!13534 = !DILocation(line: 3626, column: 5, scope: !13524)
!13535 = !DILocation(line: 3627, column: 22, scope: !13524)
!13536 = !DILocation(line: 3627, column: 13, scope: !13524)
!13537 = !DILocation(line: 3627, column: 5, scope: !13524)
!13538 = !DILocation(line: 3628, column: 30, scope: !13524)
!13539 = !DILocation(line: 3628, column: 35, scope: !13524)
!13540 = !DILocation(line: 3628, column: 14, scope: !13524)
!13541 = !DILocation(line: 3628, column: 19, scope: !13524)
!13542 = !DILocation(line: 3629, column: 35, scope: !13524)
!13543 = !DILocation(line: 3629, column: 5, scope: !13524)
!13544 = !DILocation(line: 3630, column: 4, scope: !13524)
!13545 = !DILocation(line: 3633, column: 8, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 3633, column: 8)
!13547 = !DILocation(line: 3633, column: 13, scope: !13546)
!13548 = !DILocation(line: 3633, column: 17, scope: !13546)
!13549 = !DILocation(line: 3633, column: 42, scope: !13546)
!13550 = !DILocation(line: 3633, column: 47, scope: !13546)
!13551 = !DILocation(line: 3633, column: 20, scope: !13546)
!13552 = !DILocation(line: 3633, column: 8, scope: !13391)
!13553 = !DILocation(line: 3634, column: 38, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13546, file: !3, line: 3633, column: 53)
!13555 = !DILocation(line: 3634, column: 43, scope: !13554)
!13556 = !DILocation(line: 3634, column: 55, scope: !13554)
!13557 = !DILocation(line: 3634, column: 62, scope: !13554)
!13558 = !DILocation(line: 3634, column: 64, scope: !13554)
!13559 = !DILocation(line: 3634, column: 5, scope: !13554)
!13560 = !DILocation(line: 3635, column: 4, scope: !13554)
!13561 = !DILocation(line: 3636, column: 3, scope: !13391)
!13562 = !DILocation(line: 3637, column: 2, scope: !13386)
!13563 = !DILocation(line: 3568, column: 40, scope: !13381)
!13564 = !DILocation(line: 3568, column: 2, scope: !13381)
!13565 = distinct !{!13565, !13383, !13566}
!13566 = !DILocation(line: 3637, column: 2, scope: !13378)
!13567 = !DILocation(line: 3638, column: 9, scope: !13347)
!13568 = !DILocation(line: 3638, column: 2, scope: !13347)
!13569 = !DILocation(line: 3639, column: 1, scope: !13347)
!13570 = distinct !DISubprogram(name: "RE_free_sample_material", scope: !3, file: !3, line: 3642, type: !13571, scopeLine: 3643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{null, !13350}
!13573 = !DILocalVariable(name: "mat", arg: 1, scope: !13570, file: !3, line: 3642, type: !13350)
!13574 = !DILocation(line: 3642, column: 40, scope: !13570)
!13575 = !DILocalVariable(name: "tex_nr", scope: !13570, file: !3, line: 3644, type: !92)
!13576 = !DILocation(line: 3644, column: 6, scope: !13570)
!13577 = !DILocation(line: 3647, column: 13, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 3647, column: 2)
!13579 = !DILocation(line: 3647, column: 7, scope: !13578)
!13580 = !DILocation(line: 3647, column: 17, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 3647, column: 2)
!13582 = !DILocation(line: 3647, column: 23, scope: !13581)
!13583 = !DILocation(line: 3647, column: 2, scope: !13578)
!13584 = !DILocation(line: 3648, column: 7, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 3648, column: 7)
!13586 = distinct !DILexicalBlock(scope: !13581, file: !3, line: 3647, column: 44)
!13587 = !DILocation(line: 3648, column: 12, scope: !13585)
!13588 = !DILocation(line: 3648, column: 25, scope: !13585)
!13589 = !DILocation(line: 3648, column: 23, scope: !13585)
!13590 = !DILocation(line: 3648, column: 19, scope: !13585)
!13591 = !DILocation(line: 3648, column: 7, scope: !13586)
!13592 = !DILocation(line: 3648, column: 34, scope: !13585)
!13593 = !DILocation(line: 3649, column: 7, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 3649, column: 7)
!13595 = !DILocation(line: 3649, column: 12, scope: !13594)
!13596 = !DILocation(line: 3649, column: 17, scope: !13594)
!13597 = !DILocation(line: 3649, column: 7, scope: !13586)
!13598 = !DILocalVariable(name: "mtex", scope: !13599, file: !3, line: 3650, type: !3587)
!13599 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3649, column: 26)
!13600 = !DILocation(line: 3650, column: 10, scope: !13599)
!13601 = !DILocation(line: 3650, column: 16, scope: !13599)
!13602 = !DILocation(line: 3650, column: 21, scope: !13599)
!13603 = !DILocation(line: 3650, column: 26, scope: !13599)
!13604 = !DILocation(line: 3652, column: 8, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 3652, column: 8)
!13606 = !DILocation(line: 3652, column: 14, scope: !13605)
!13607 = !DILocation(line: 3652, column: 8, scope: !13599)
!13608 = !DILocation(line: 3653, column: 22, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 3652, column: 19)
!13610 = !DILocation(line: 3653, column: 28, scope: !13609)
!13611 = !DILocation(line: 3653, column: 5, scope: !13609)
!13612 = !DILocation(line: 3654, column: 5, scope: !13609)
!13613 = !DILocation(line: 3654, column: 15, scope: !13609)
!13614 = !DILocation(line: 3654, column: 21, scope: !13609)
!13615 = !DILocation(line: 3655, column: 5, scope: !13609)
!13616 = !DILocation(line: 3655, column: 11, scope: !13609)
!13617 = !DILocation(line: 3655, column: 15, scope: !13609)
!13618 = !DILocation(line: 3656, column: 4, scope: !13609)
!13619 = !DILocation(line: 3657, column: 3, scope: !13599)
!13620 = !DILocation(line: 3658, column: 2, scope: !13586)
!13621 = !DILocation(line: 3647, column: 40, scope: !13581)
!13622 = !DILocation(line: 3647, column: 2, scope: !13581)
!13623 = distinct !{!13623, !13583, !13624}
!13624 = !DILocation(line: 3658, column: 2, scope: !13578)
!13625 = !DILocation(line: 3661, column: 23, scope: !13570)
!13626 = !DILocation(line: 3661, column: 2, scope: !13570)
!13627 = !DILocation(line: 3662, column: 2, scope: !13570)
!13628 = !DILocation(line: 3662, column: 12, scope: !13570)
!13629 = !DILocation(line: 3663, column: 1, scope: !13570)
!13630 = distinct !DISubprogram(name: "RE_sample_material_color", scope: !3, file: !3, line: 3677, type: !13631, scopeLine: 3678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{null, !13350, !201, !201, !954, !954, !92, !141, !759, !2935}
!13633 = !DILocalVariable(name: "mat", arg: 1, scope: !13630, file: !3, line: 3677, type: !13350)
!13634 = !DILocation(line: 3677, column: 41, scope: !13630)
!13635 = !DILocalVariable(name: "color", arg: 2, scope: !13630, file: !3, line: 3677, type: !201)
!13636 = !DILocation(line: 3677, column: 52, scope: !13630)
!13637 = !DILocalVariable(name: "alpha", arg: 3, scope: !13630, file: !3, line: 3677, type: !201)
!13638 = !DILocation(line: 3677, column: 69, scope: !13630)
!13639 = !DILocalVariable(name: "volume_co", arg: 4, scope: !13630, file: !3, line: 3677, type: !954)
!13640 = !DILocation(line: 3677, column: 88, scope: !13630)
!13641 = !DILocalVariable(name: "surface_co", arg: 5, scope: !13630, file: !3, line: 3677, type: !954)
!13642 = !DILocation(line: 3677, column: 114, scope: !13630)
!13643 = !DILocalVariable(name: "face_index", arg: 6, scope: !13630, file: !3, line: 3677, type: !92)
!13644 = !DILocation(line: 3677, column: 133, scope: !13630)
!13645 = !DILocalVariable(name: "hit_quad", arg: 7, scope: !13630, file: !3, line: 3677, type: !141)
!13646 = !DILocation(line: 3677, column: 151, scope: !13630)
!13647 = !DILocalVariable(name: "orcoDm", arg: 8, scope: !13630, file: !3, line: 3677, type: !759)
!13648 = !DILocation(line: 3677, column: 174, scope: !13630)
!13649 = !DILocalVariable(name: "ob", arg: 9, scope: !13630, file: !3, line: 3677, type: !2935)
!13650 = !DILocation(line: 3677, column: 190, scope: !13630)
!13651 = !DILocalVariable(name: "mface", scope: !13630, file: !3, line: 3679, type: !13652)
!13652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13653, size: 64)
!13653 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !84, line: 46, baseType: !804)
!13654 = !DILocation(line: 3679, column: 9, scope: !13630)
!13655 = !DILocalVariable(name: "v1", scope: !13630, file: !3, line: 3680, type: !92)
!13656 = !DILocation(line: 3680, column: 6, scope: !13630)
!13657 = !DILocalVariable(name: "v2", scope: !13630, file: !3, line: 3680, type: !92)
!13658 = !DILocation(line: 3680, column: 10, scope: !13630)
!13659 = !DILocalVariable(name: "v3", scope: !13630, file: !3, line: 3680, type: !92)
!13660 = !DILocation(line: 3680, column: 14, scope: !13630)
!13661 = !DILocalVariable(name: "mvert", scope: !13630, file: !3, line: 3681, type: !13662)
!13662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13663, size: 64)
!13663 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !84, line: 69, baseType: !780)
!13664 = !DILocation(line: 3681, column: 9, scope: !13630)
!13665 = !DILocalVariable(name: "uv", scope: !13630, file: !3, line: 3682, type: !344)
!13666 = !DILocation(line: 3682, column: 8, scope: !13630)
!13667 = !DILocalVariable(name: "normal", scope: !13630, file: !3, line: 3682, type: !344)
!13668 = !DILocation(line: 3682, column: 15, scope: !13630)
!13669 = !DILocalVariable(name: "shi", scope: !13630, file: !3, line: 3683, type: !2731)
!13670 = !DILocation(line: 3683, column: 13, scope: !13630)
!13671 = !DILocalVariable(name: "re", scope: !13630, file: !3, line: 3684, type: !3159)
!13672 = !DILocation(line: 3684, column: 9, scope: !13630)
!13673 = !DILocation(line: 3687, column: 10, scope: !13630)
!13674 = !DILocation(line: 3687, column: 18, scope: !13630)
!13675 = !DILocation(line: 3687, column: 31, scope: !13630)
!13676 = !DILocation(line: 3687, column: 8, scope: !13630)
!13677 = !DILocation(line: 3688, column: 10, scope: !13630)
!13678 = !DILocation(line: 3688, column: 18, scope: !13630)
!13679 = !DILocation(line: 3688, column: 35, scope: !13630)
!13680 = !DILocation(line: 3688, column: 8, scope: !13630)
!13681 = !DILocation(line: 3690, column: 7, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 3690, column: 6)
!13683 = !DILocation(line: 3690, column: 13, scope: !13682)
!13684 = !DILocation(line: 3690, column: 17, scope: !13682)
!13685 = !DILocation(line: 3690, column: 23, scope: !13682)
!13686 = !DILocation(line: 3690, column: 27, scope: !13682)
!13687 = !DILocation(line: 3690, column: 6, scope: !13630)
!13688 = !DILocation(line: 3690, column: 32, scope: !13682)
!13689 = !DILocation(line: 3691, column: 5, scope: !13630)
!13690 = !DILocation(line: 3691, column: 11, scope: !13630)
!13691 = !DILocation(line: 3691, column: 23, scope: !13630)
!13692 = !DILocation(line: 3691, column: 4, scope: !13630)
!13693 = !DILocation(line: 3691, column: 30, scope: !13630)
!13694 = !DILocation(line: 3691, column: 36, scope: !13630)
!13695 = !DILocation(line: 3691, column: 48, scope: !13630)
!13696 = !DILocation(line: 3691, column: 29, scope: !13630)
!13697 = !DILocation(line: 3691, column: 55, scope: !13630)
!13698 = !DILocation(line: 3691, column: 61, scope: !13630)
!13699 = !DILocation(line: 3691, column: 73, scope: !13630)
!13700 = !DILocation(line: 3691, column: 54, scope: !13630)
!13701 = !DILocation(line: 3692, column: 6, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 3692, column: 6)
!13703 = !DILocation(line: 3692, column: 6, scope: !13630)
!13704 = !DILocation(line: 3692, column: 23, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 3692, column: 16)
!13706 = !DILocation(line: 3692, column: 29, scope: !13705)
!13707 = !DILocation(line: 3692, column: 41, scope: !13705)
!13708 = !DILocation(line: 3692, column: 21, scope: !13705)
!13709 = !DILocation(line: 3692, column: 50, scope: !13705)
!13710 = !DILocation(line: 3692, column: 56, scope: !13705)
!13711 = !DILocation(line: 3692, column: 68, scope: !13705)
!13712 = !DILocation(line: 3692, column: 48, scope: !13705)
!13713 = !DILocation(line: 3692, column: 72, scope: !13705)
!13714 = !DILocation(line: 3693, column: 16, scope: !13630)
!13715 = !DILocation(line: 3693, column: 24, scope: !13630)
!13716 = !DILocation(line: 3693, column: 30, scope: !13630)
!13717 = !DILocation(line: 3693, column: 34, scope: !13630)
!13718 = !DILocation(line: 3693, column: 38, scope: !13630)
!13719 = !DILocation(line: 3693, column: 44, scope: !13630)
!13720 = !DILocation(line: 3693, column: 48, scope: !13630)
!13721 = !DILocation(line: 3693, column: 52, scope: !13630)
!13722 = !DILocation(line: 3693, column: 58, scope: !13630)
!13723 = !DILocation(line: 3693, column: 62, scope: !13630)
!13724 = !DILocation(line: 3693, column: 2, scope: !13630)
!13725 = !DILocation(line: 3696, column: 12, scope: !13630)
!13726 = !DILocation(line: 3696, column: 6, scope: !13630)
!13727 = !DILocation(line: 3696, column: 10, scope: !13630)
!13728 = !DILocation(line: 3699, column: 6, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 3699, column: 6)
!13730 = !DILocation(line: 3699, column: 11, scope: !13729)
!13731 = !DILocation(line: 3699, column: 25, scope: !13729)
!13732 = !DILocation(line: 3699, column: 6, scope: !13630)
!13733 = !DILocation(line: 3701, column: 18, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 3699, column: 45)
!13735 = !DILocation(line: 3701, column: 14, scope: !13734)
!13736 = !DILocation(line: 3701, column: 22, scope: !13734)
!13737 = !DILocation(line: 3701, column: 3, scope: !13734)
!13738 = !DILocation(line: 3703, column: 18, scope: !13734)
!13739 = !DILocation(line: 3703, column: 14, scope: !13734)
!13740 = !DILocation(line: 3703, column: 22, scope: !13734)
!13741 = !DILocation(line: 3703, column: 3, scope: !13734)
!13742 = !DILocation(line: 3704, column: 13, scope: !13734)
!13743 = !DILocation(line: 3704, column: 17, scope: !13734)
!13744 = !DILocation(line: 3704, column: 27, scope: !13734)
!13745 = !DILocation(line: 3704, column: 23, scope: !13734)
!13746 = !DILocation(line: 3704, column: 3, scope: !13734)
!13747 = !DILocalVariable(name: "l", scope: !13748, file: !3, line: 3707, type: !91)
!13748 = distinct !DILexicalBlock(scope: !13734, file: !3, line: 3706, column: 3)
!13749 = !DILocation(line: 3707, column: 10, scope: !13748)
!13750 = !DILocation(line: 3709, column: 30, scope: !13748)
!13751 = !DILocation(line: 3709, column: 34, scope: !13748)
!13752 = !DILocation(line: 3709, column: 46, scope: !13748)
!13753 = !DILocation(line: 3709, column: 42, scope: !13748)
!13754 = !DILocation(line: 3709, column: 50, scope: !13748)
!13755 = !DILocation(line: 3709, column: 56, scope: !13748)
!13756 = !DILocation(line: 3709, column: 60, scope: !13748)
!13757 = !DILocation(line: 3709, column: 64, scope: !13748)
!13758 = !DILocation(line: 3709, column: 70, scope: !13748)
!13759 = !DILocation(line: 3709, column: 74, scope: !13748)
!13760 = !DILocation(line: 3709, column: 78, scope: !13748)
!13761 = !DILocation(line: 3709, column: 84, scope: !13748)
!13762 = !DILocation(line: 3709, column: 88, scope: !13748)
!13763 = !DILocation(line: 3709, column: 4, scope: !13748)
!13764 = !DILocation(line: 3710, column: 12, scope: !13748)
!13765 = !DILocation(line: 3710, column: 11, scope: !13748)
!13766 = !DILocation(line: 3710, column: 18, scope: !13748)
!13767 = !DILocation(line: 3710, column: 17, scope: !13748)
!13768 = !DILocation(line: 3710, column: 5, scope: !13748)
!13769 = !DILocation(line: 3713, column: 15, scope: !13748)
!13770 = !DILocation(line: 3713, column: 17, scope: !13748)
!13771 = !DILocation(line: 3713, column: 23, scope: !13748)
!13772 = !DILocation(line: 3713, column: 27, scope: !13748)
!13773 = !DILocation(line: 3713, column: 16, scope: !13748)
!13774 = !DILocation(line: 3713, column: 33, scope: !13748)
!13775 = !DILocation(line: 3713, column: 39, scope: !13748)
!13776 = !DILocation(line: 3713, column: 45, scope: !13748)
!13777 = !DILocation(line: 3713, column: 49, scope: !13748)
!13778 = !DILocation(line: 3713, column: 38, scope: !13748)
!13779 = !DILocation(line: 3713, column: 32, scope: !13748)
!13780 = !DILocation(line: 3713, column: 55, scope: !13748)
!13781 = !DILocation(line: 3713, column: 61, scope: !13748)
!13782 = !DILocation(line: 3713, column: 67, scope: !13748)
!13783 = !DILocation(line: 3713, column: 71, scope: !13748)
!13784 = !DILocation(line: 3713, column: 60, scope: !13748)
!13785 = !DILocation(line: 3713, column: 54, scope: !13748)
!13786 = !DILocation(line: 3713, column: 8, scope: !13748)
!13787 = !DILocation(line: 3713, column: 4, scope: !13748)
!13788 = !DILocation(line: 3713, column: 13, scope: !13748)
!13789 = !DILocation(line: 3714, column: 15, scope: !13748)
!13790 = !DILocation(line: 3714, column: 17, scope: !13748)
!13791 = !DILocation(line: 3714, column: 23, scope: !13748)
!13792 = !DILocation(line: 3714, column: 27, scope: !13748)
!13793 = !DILocation(line: 3714, column: 16, scope: !13748)
!13794 = !DILocation(line: 3714, column: 33, scope: !13748)
!13795 = !DILocation(line: 3714, column: 39, scope: !13748)
!13796 = !DILocation(line: 3714, column: 45, scope: !13748)
!13797 = !DILocation(line: 3714, column: 49, scope: !13748)
!13798 = !DILocation(line: 3714, column: 38, scope: !13748)
!13799 = !DILocation(line: 3714, column: 32, scope: !13748)
!13800 = !DILocation(line: 3714, column: 55, scope: !13748)
!13801 = !DILocation(line: 3714, column: 61, scope: !13748)
!13802 = !DILocation(line: 3714, column: 67, scope: !13748)
!13803 = !DILocation(line: 3714, column: 71, scope: !13748)
!13804 = !DILocation(line: 3714, column: 60, scope: !13748)
!13805 = !DILocation(line: 3714, column: 54, scope: !13748)
!13806 = !DILocation(line: 3714, column: 8, scope: !13748)
!13807 = !DILocation(line: 3714, column: 4, scope: !13748)
!13808 = !DILocation(line: 3714, column: 13, scope: !13748)
!13809 = !DILocation(line: 3715, column: 15, scope: !13748)
!13810 = !DILocation(line: 3715, column: 17, scope: !13748)
!13811 = !DILocation(line: 3715, column: 23, scope: !13748)
!13812 = !DILocation(line: 3715, column: 27, scope: !13748)
!13813 = !DILocation(line: 3715, column: 16, scope: !13748)
!13814 = !DILocation(line: 3715, column: 33, scope: !13748)
!13815 = !DILocation(line: 3715, column: 39, scope: !13748)
!13816 = !DILocation(line: 3715, column: 45, scope: !13748)
!13817 = !DILocation(line: 3715, column: 49, scope: !13748)
!13818 = !DILocation(line: 3715, column: 38, scope: !13748)
!13819 = !DILocation(line: 3715, column: 32, scope: !13748)
!13820 = !DILocation(line: 3715, column: 55, scope: !13748)
!13821 = !DILocation(line: 3715, column: 61, scope: !13748)
!13822 = !DILocation(line: 3715, column: 67, scope: !13748)
!13823 = !DILocation(line: 3715, column: 71, scope: !13748)
!13824 = !DILocation(line: 3715, column: 60, scope: !13748)
!13825 = !DILocation(line: 3715, column: 54, scope: !13748)
!13826 = !DILocation(line: 3715, column: 8, scope: !13748)
!13827 = !DILocation(line: 3715, column: 4, scope: !13748)
!13828 = !DILocation(line: 3715, column: 13, scope: !13748)
!13829 = !DILocalVariable(name: "i", scope: !13830, file: !3, line: 3719, type: !92)
!13830 = distinct !DILexicalBlock(scope: !13734, file: !3, line: 3718, column: 3)
!13831 = !DILocation(line: 3719, column: 8, scope: !13830)
!13832 = !DILocalVariable(name: "layers", scope: !13830, file: !3, line: 3719, type: !92)
!13833 = !DILocation(line: 3719, column: 11, scope: !13830)
!13834 = !DILocation(line: 3719, column: 49, scope: !13830)
!13835 = !DILocation(line: 3719, column: 57, scope: !13830)
!13836 = !DILocation(line: 3719, column: 20, scope: !13830)
!13837 = !DILocalVariable(name: "layer_index", scope: !13830, file: !3, line: 3720, type: !92)
!13838 = !DILocation(line: 3720, column: 8, scope: !13830)
!13839 = !DILocation(line: 3720, column: 50, scope: !13830)
!13840 = !DILocation(line: 3720, column: 58, scope: !13830)
!13841 = !DILocation(line: 3720, column: 22, scope: !13830)
!13842 = !DILocation(line: 3723, column: 10, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 3723, column: 4)
!13844 = !DILocation(line: 3723, column: 9, scope: !13843)
!13845 = !DILocation(line: 3723, column: 14, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13843, file: !3, line: 3723, column: 4)
!13847 = !DILocation(line: 3723, column: 16, scope: !13846)
!13848 = !DILocation(line: 3723, column: 15, scope: !13846)
!13849 = !DILocation(line: 3723, column: 4, scope: !13843)
!13850 = !DILocation(line: 3724, column: 9, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !3, line: 3724, column: 9)
!13852 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 3723, column: 29)
!13853 = !DILocation(line: 3724, column: 21, scope: !13851)
!13854 = !DILocation(line: 3724, column: 9, scope: !13852)
!13855 = !DILocalVariable(name: "uv1", scope: !13856, file: !3, line: 3725, type: !954)
!13856 = distinct !DILexicalBlock(scope: !13851, file: !3, line: 3724, column: 27)
!13857 = !DILocation(line: 3725, column: 19, scope: !13856)
!13858 = !DILocalVariable(name: "uv2", scope: !13856, file: !3, line: 3725, type: !954)
!13859 = !DILocation(line: 3725, column: 25, scope: !13856)
!13860 = !DILocalVariable(name: "uv3", scope: !13856, file: !3, line: 3725, type: !954)
!13861 = !DILocation(line: 3725, column: 31, scope: !13856)
!13862 = !DILocalVariable(name: "l", scope: !13856, file: !3, line: 3726, type: !91)
!13863 = !DILocation(line: 3726, column: 12, scope: !13856)
!13864 = !DILocalVariable(name: "data", scope: !13856, file: !3, line: 3727, type: !890)
!13865 = !DILocation(line: 3727, column: 18, scope: !13856)
!13866 = !DILocation(line: 3727, column: 26, scope: !13856)
!13867 = !DILocation(line: 3727, column: 34, scope: !13856)
!13868 = !DILocalVariable(name: "tface", scope: !13856, file: !3, line: 3728, type: !93)
!13869 = !DILocation(line: 3728, column: 14, scope: !13856)
!13870 = !DILocation(line: 3728, column: 33, scope: !13856)
!13871 = !DILocation(line: 3728, column: 39, scope: !13856)
!13872 = !DILocation(line: 3728, column: 46, scope: !13856)
!13873 = !DILocation(line: 3728, column: 58, scope: !13856)
!13874 = !DILocation(line: 3728, column: 57, scope: !13856)
!13875 = !DILocation(line: 3728, column: 61, scope: !13856)
!13876 = !DILocation(line: 3728, column: 22, scope: !13856)
!13877 = !DILocalVariable(name: "uv", scope: !13856, file: !3, line: 3729, type: !344)
!13878 = !DILocation(line: 3729, column: 12, scope: !13856)
!13879 = !DILocation(line: 3731, column: 23, scope: !13856)
!13880 = !DILocation(line: 3731, column: 29, scope: !13856)
!13881 = !DILocation(line: 3731, column: 36, scope: !13856)
!13882 = !DILocation(line: 3731, column: 39, scope: !13856)
!13883 = !DILocation(line: 3731, column: 10, scope: !13856)
!13884 = !DILocation(line: 3731, column: 13, scope: !13856)
!13885 = !DILocation(line: 3731, column: 6, scope: !13856)
!13886 = !DILocation(line: 3731, column: 16, scope: !13856)
!13887 = !DILocation(line: 3731, column: 21, scope: !13856)
!13888 = !DILocation(line: 3733, column: 32, scope: !13856)
!13889 = !DILocation(line: 3733, column: 36, scope: !13856)
!13890 = !DILocation(line: 3733, column: 48, scope: !13856)
!13891 = !DILocation(line: 3733, column: 44, scope: !13856)
!13892 = !DILocation(line: 3733, column: 52, scope: !13856)
!13893 = !DILocation(line: 3733, column: 58, scope: !13856)
!13894 = !DILocation(line: 3733, column: 62, scope: !13856)
!13895 = !DILocation(line: 3733, column: 66, scope: !13856)
!13896 = !DILocation(line: 3733, column: 72, scope: !13856)
!13897 = !DILocation(line: 3733, column: 76, scope: !13856)
!13898 = !DILocation(line: 3733, column: 80, scope: !13856)
!13899 = !DILocation(line: 3733, column: 86, scope: !13856)
!13900 = !DILocation(line: 3733, column: 90, scope: !13856)
!13901 = !DILocation(line: 3733, column: 6, scope: !13856)
!13902 = !DILocation(line: 3735, column: 14, scope: !13856)
!13903 = !DILocation(line: 3735, column: 13, scope: !13856)
!13904 = !DILocation(line: 3735, column: 20, scope: !13856)
!13905 = !DILocation(line: 3735, column: 19, scope: !13856)
!13906 = !DILocation(line: 3735, column: 7, scope: !13856)
!13907 = !DILocation(line: 3737, column: 11, scope: !13856)
!13908 = !DILocation(line: 3737, column: 17, scope: !13856)
!13909 = !DILocation(line: 3737, column: 29, scope: !13856)
!13910 = !DILocation(line: 3737, column: 9, scope: !13856)
!13911 = !DILocation(line: 3738, column: 12, scope: !13856)
!13912 = !DILocation(line: 3738, column: 11, scope: !13856)
!13913 = !DILocation(line: 3738, column: 24, scope: !13856)
!13914 = !DILocation(line: 3738, column: 30, scope: !13856)
!13915 = !DILocation(line: 3738, column: 42, scope: !13856)
!13916 = !DILocation(line: 3738, column: 50, scope: !13856)
!13917 = !DILocation(line: 3738, column: 56, scope: !13856)
!13918 = !DILocation(line: 3738, column: 68, scope: !13856)
!13919 = !DILocation(line: 3738, column: 9, scope: !13856)
!13920 = !DILocation(line: 3739, column: 12, scope: !13856)
!13921 = !DILocation(line: 3739, column: 11, scope: !13856)
!13922 = !DILocation(line: 3739, column: 24, scope: !13856)
!13923 = !DILocation(line: 3739, column: 30, scope: !13856)
!13924 = !DILocation(line: 3739, column: 42, scope: !13856)
!13925 = !DILocation(line: 3739, column: 50, scope: !13856)
!13926 = !DILocation(line: 3739, column: 56, scope: !13856)
!13927 = !DILocation(line: 3739, column: 68, scope: !13856)
!13928 = !DILocation(line: 3739, column: 9, scope: !13856)
!13929 = !DILocation(line: 3741, column: 37, scope: !13856)
!13930 = !DILocation(line: 3741, column: 39, scope: !13856)
!13931 = !DILocation(line: 3741, column: 38, scope: !13856)
!13932 = !DILocation(line: 3741, column: 46, scope: !13856)
!13933 = !DILocation(line: 3741, column: 52, scope: !13856)
!13934 = !DILocation(line: 3741, column: 51, scope: !13856)
!13935 = !DILocation(line: 3741, column: 45, scope: !13856)
!13936 = !DILocation(line: 3741, column: 59, scope: !13856)
!13937 = !DILocation(line: 3741, column: 65, scope: !13856)
!13938 = !DILocation(line: 3741, column: 64, scope: !13856)
!13939 = !DILocation(line: 3741, column: 58, scope: !13856)
!13940 = !DILocation(line: 3741, column: 35, scope: !13856)
!13941 = !DILocation(line: 3741, column: 29, scope: !13856)
!13942 = !DILocation(line: 3741, column: 10, scope: !13856)
!13943 = !DILocation(line: 3741, column: 13, scope: !13856)
!13944 = !DILocation(line: 3741, column: 6, scope: !13856)
!13945 = !DILocation(line: 3741, column: 16, scope: !13856)
!13946 = !DILocation(line: 3741, column: 21, scope: !13856)
!13947 = !DILocation(line: 3742, column: 37, scope: !13856)
!13948 = !DILocation(line: 3742, column: 39, scope: !13856)
!13949 = !DILocation(line: 3742, column: 38, scope: !13856)
!13950 = !DILocation(line: 3742, column: 46, scope: !13856)
!13951 = !DILocation(line: 3742, column: 52, scope: !13856)
!13952 = !DILocation(line: 3742, column: 51, scope: !13856)
!13953 = !DILocation(line: 3742, column: 45, scope: !13856)
!13954 = !DILocation(line: 3742, column: 59, scope: !13856)
!13955 = !DILocation(line: 3742, column: 65, scope: !13856)
!13956 = !DILocation(line: 3742, column: 64, scope: !13856)
!13957 = !DILocation(line: 3742, column: 58, scope: !13856)
!13958 = !DILocation(line: 3742, column: 35, scope: !13856)
!13959 = !DILocation(line: 3742, column: 29, scope: !13856)
!13960 = !DILocation(line: 3742, column: 10, scope: !13856)
!13961 = !DILocation(line: 3742, column: 13, scope: !13856)
!13962 = !DILocation(line: 3742, column: 6, scope: !13856)
!13963 = !DILocation(line: 3742, column: 16, scope: !13856)
!13964 = !DILocation(line: 3742, column: 21, scope: !13856)
!13965 = !DILocation(line: 3743, column: 10, scope: !13856)
!13966 = !DILocation(line: 3743, column: 13, scope: !13856)
!13967 = !DILocation(line: 3743, column: 6, scope: !13856)
!13968 = !DILocation(line: 3743, column: 16, scope: !13856)
!13969 = !DILocation(line: 3743, column: 21, scope: !13856)
!13970 = !DILocation(line: 3744, column: 5, scope: !13856)
!13971 = !DILocation(line: 3745, column: 4, scope: !13852)
!13972 = !DILocation(line: 3723, column: 25, scope: !13846)
!13973 = !DILocation(line: 3723, column: 4, scope: !13846)
!13974 = distinct !{!13974, !13849, !13975}
!13975 = !DILocation(line: 3745, column: 4, scope: !13843)
!13976 = !DILocation(line: 3747, column: 51, scope: !13830)
!13977 = !DILocation(line: 3747, column: 59, scope: !13830)
!13978 = !DILocation(line: 3747, column: 16, scope: !13830)
!13979 = !DILocation(line: 3747, column: 82, scope: !13830)
!13980 = !DILocation(line: 3747, column: 80, scope: !13830)
!13981 = !DILocation(line: 3747, column: 8, scope: !13830)
!13982 = !DILocation(line: 3747, column: 14, scope: !13830)
!13983 = !DILocation(line: 3748, column: 16, scope: !13830)
!13984 = !DILocation(line: 3748, column: 8, scope: !13830)
!13985 = !DILocation(line: 3748, column: 14, scope: !13830)
!13986 = !DILocation(line: 3752, column: 11, scope: !13734)
!13987 = !DILocation(line: 3752, column: 16, scope: !13734)
!13988 = !DILocation(line: 3752, column: 7, scope: !13734)
!13989 = !DILocation(line: 3752, column: 9, scope: !13734)
!13990 = !DILocation(line: 3753, column: 11, scope: !13734)
!13991 = !DILocation(line: 3753, column: 16, scope: !13734)
!13992 = !DILocation(line: 3753, column: 7, scope: !13734)
!13993 = !DILocation(line: 3753, column: 9, scope: !13734)
!13994 = !DILocation(line: 3754, column: 11, scope: !13734)
!13995 = !DILocation(line: 3754, column: 16, scope: !13734)
!13996 = !DILocation(line: 3754, column: 7, scope: !13734)
!13997 = !DILocation(line: 3754, column: 9, scope: !13734)
!13998 = !DILocation(line: 3755, column: 15, scope: !13734)
!13999 = !DILocation(line: 3755, column: 20, scope: !13734)
!14000 = !DILocation(line: 3755, column: 7, scope: !13734)
!14001 = !DILocation(line: 3755, column: 13, scope: !13734)
!14002 = !DILocation(line: 3758, column: 3, scope: !13734)
!14003 = !DILocation(line: 3761, column: 18, scope: !13734)
!14004 = !DILocation(line: 3761, column: 3, scope: !13734)
!14005 = !DILocation(line: 3761, column: 12, scope: !13734)
!14006 = !DILocation(line: 3762, column: 18, scope: !13734)
!14007 = !DILocation(line: 3762, column: 3, scope: !13734)
!14008 = !DILocation(line: 3762, column: 12, scope: !13734)
!14009 = !DILocation(line: 3763, column: 18, scope: !13734)
!14010 = !DILocation(line: 3763, column: 3, scope: !13734)
!14011 = !DILocation(line: 3763, column: 12, scope: !13734)
!14012 = !DILocation(line: 3764, column: 16, scope: !13734)
!14013 = !DILocation(line: 3764, column: 4, scope: !13734)
!14014 = !DILocation(line: 3764, column: 10, scope: !13734)
!14015 = !DILocation(line: 3765, column: 2, scope: !13734)
!14016 = !DILocation(line: 3766, column: 11, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 3766, column: 11)
!14018 = !DILocation(line: 3766, column: 16, scope: !14017)
!14019 = !DILocation(line: 3766, column: 30, scope: !14017)
!14020 = !DILocation(line: 3766, column: 11, scope: !13729)
!14021 = !DILocalVariable(name: "obi", scope: !14022, file: !3, line: 3767, type: !14023)
!14022 = distinct !DILexicalBlock(scope: !14017, file: !3, line: 3766, column: 49)
!14023 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !2739, line: 368, baseType: !2927)
!14024 = !DILocation(line: 3767, column: 21, scope: !14022)
!14025 = !DILocation(line: 3768, column: 12, scope: !14022)
!14026 = !DILocation(line: 3768, column: 7, scope: !14022)
!14027 = !DILocation(line: 3768, column: 10, scope: !14022)
!14028 = !DILocation(line: 3769, column: 7, scope: !14022)
!14029 = !DILocation(line: 3769, column: 11, scope: !14022)
!14030 = !DILocation(line: 3770, column: 14, scope: !14022)
!14031 = !DILocation(line: 3770, column: 11, scope: !14022)
!14032 = !DILocation(line: 3770, column: 3, scope: !14022)
!14033 = !DILocation(line: 3771, column: 14, scope: !14022)
!14034 = !DILocation(line: 3771, column: 21, scope: !14022)
!14035 = !DILocation(line: 3771, column: 26, scope: !14022)
!14036 = !DILocation(line: 3771, column: 30, scope: !14022)
!14037 = !DILocation(line: 3771, column: 3, scope: !14022)
!14038 = !DILocation(line: 3772, column: 12, scope: !14022)
!14039 = !DILocation(line: 3772, column: 17, scope: !14022)
!14040 = !DILocation(line: 3772, column: 21, scope: !14022)
!14041 = !DILocation(line: 3772, column: 4, scope: !14022)
!14042 = !DILocation(line: 3772, column: 10, scope: !14022)
!14043 = !DILocation(line: 3775, column: 23, scope: !14022)
!14044 = !DILocation(line: 3776, column: 17, scope: !14022)
!14045 = !DILocation(line: 3776, column: 24, scope: !14022)
!14046 = !DILocation(line: 3775, column: 3, scope: !14022)
!14047 = !DILocation(line: 3777, column: 2, scope: !14022)
!14048 = !DILocation(line: 3778, column: 1, scope: !13630)
!14049 = distinct !DISubprogram(name: "textured_face_generate_uv", scope: !3, file: !3, line: 3527, type: !14050, scopeLine: 3528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14050 = !DISubroutineType(types: !14051)
!14051 = !{null, !201, !954, !201, !201, !201, !201}
!14052 = !DILocalVariable(name: "uv", arg: 1, scope: !14049, file: !3, line: 3527, type: !201)
!14053 = !DILocation(line: 3527, column: 46, scope: !14049)
!14054 = !DILocalVariable(name: "normal", arg: 2, scope: !14049, file: !3, line: 3527, type: !954)
!14055 = !DILocation(line: 3527, column: 62, scope: !14049)
!14056 = !DILocalVariable(name: "hit", arg: 3, scope: !14049, file: !3, line: 3527, type: !201)
!14057 = !DILocation(line: 3527, column: 80, scope: !14049)
!14058 = !DILocalVariable(name: "v1", arg: 4, scope: !14049, file: !3, line: 3527, type: !201)
!14059 = !DILocation(line: 3527, column: 92, scope: !14049)
!14060 = !DILocalVariable(name: "v2", arg: 5, scope: !14049, file: !3, line: 3527, type: !201)
!14061 = !DILocation(line: 3527, column: 103, scope: !14049)
!14062 = !DILocalVariable(name: "v3", arg: 6, scope: !14049, file: !3, line: 3527, type: !201)
!14063 = !DILocation(line: 3527, column: 114, scope: !14049)
!14064 = !DILocalVariable(name: "detsh", scope: !14049, file: !3, line: 3530, type: !91)
!14065 = !DILocation(line: 3530, column: 8, scope: !14049)
!14066 = !DILocalVariable(name: "t00", scope: !14049, file: !3, line: 3530, type: !91)
!14067 = !DILocation(line: 3530, column: 15, scope: !14049)
!14068 = !DILocalVariable(name: "t10", scope: !14049, file: !3, line: 3530, type: !91)
!14069 = !DILocation(line: 3530, column: 20, scope: !14049)
!14070 = !DILocalVariable(name: "t01", scope: !14049, file: !3, line: 3530, type: !91)
!14071 = !DILocation(line: 3530, column: 25, scope: !14049)
!14072 = !DILocalVariable(name: "t11", scope: !14049, file: !3, line: 3530, type: !91)
!14073 = !DILocation(line: 3530, column: 30, scope: !14049)
!14074 = !DILocalVariable(name: "axis1", scope: !14049, file: !3, line: 3531, type: !92)
!14075 = !DILocation(line: 3531, column: 6, scope: !14049)
!14076 = !DILocalVariable(name: "axis2", scope: !14049, file: !3, line: 3531, type: !92)
!14077 = !DILocation(line: 3531, column: 13, scope: !14049)
!14078 = !DILocation(line: 3534, column: 35, scope: !14049)
!14079 = !DILocation(line: 3534, column: 2, scope: !14049)
!14080 = !DILocation(line: 3537, column: 7, scope: !14049)
!14081 = !DILocation(line: 3537, column: 10, scope: !14049)
!14082 = !DILocation(line: 3537, column: 17, scope: !14049)
!14083 = !DILocation(line: 3537, column: 20, scope: !14049)
!14084 = !DILocation(line: 3537, column: 16, scope: !14049)
!14085 = !DILocation(line: 3537, column: 5, scope: !14049)
!14086 = !DILocation(line: 3537, column: 33, scope: !14049)
!14087 = !DILocation(line: 3537, column: 36, scope: !14049)
!14088 = !DILocation(line: 3537, column: 43, scope: !14049)
!14089 = !DILocation(line: 3537, column: 46, scope: !14049)
!14090 = !DILocation(line: 3537, column: 42, scope: !14049)
!14091 = !DILocation(line: 3537, column: 31, scope: !14049)
!14092 = !DILocation(line: 3538, column: 7, scope: !14049)
!14093 = !DILocation(line: 3538, column: 10, scope: !14049)
!14094 = !DILocation(line: 3538, column: 17, scope: !14049)
!14095 = !DILocation(line: 3538, column: 20, scope: !14049)
!14096 = !DILocation(line: 3538, column: 16, scope: !14049)
!14097 = !DILocation(line: 3538, column: 5, scope: !14049)
!14098 = !DILocation(line: 3538, column: 33, scope: !14049)
!14099 = !DILocation(line: 3538, column: 36, scope: !14049)
!14100 = !DILocation(line: 3538, column: 43, scope: !14049)
!14101 = !DILocation(line: 3538, column: 46, scope: !14049)
!14102 = !DILocation(line: 3538, column: 42, scope: !14049)
!14103 = !DILocation(line: 3538, column: 31, scope: !14049)
!14104 = !DILocation(line: 3540, column: 15, scope: !14049)
!14105 = !DILocation(line: 3540, column: 19, scope: !14049)
!14106 = !DILocation(line: 3540, column: 18, scope: !14049)
!14107 = !DILocation(line: 3540, column: 23, scope: !14049)
!14108 = !DILocation(line: 3540, column: 27, scope: !14049)
!14109 = !DILocation(line: 3540, column: 26, scope: !14049)
!14110 = !DILocation(line: 3540, column: 22, scope: !14049)
!14111 = !DILocation(line: 3540, column: 13, scope: !14049)
!14112 = !DILocation(line: 3540, column: 7, scope: !14049)
!14113 = !DILocation(line: 3541, column: 8, scope: !14049)
!14114 = !DILocation(line: 3541, column: 5, scope: !14049)
!14115 = !DILocation(line: 3541, column: 20, scope: !14049)
!14116 = !DILocation(line: 3541, column: 18, scope: !14049)
!14117 = !DILocation(line: 3542, column: 7, scope: !14049)
!14118 = !DILocation(line: 3542, column: 5, scope: !14049)
!14119 = !DILocation(line: 3542, column: 19, scope: !14049)
!14120 = !DILocation(line: 3542, column: 17, scope: !14049)
!14121 = !DILocation(line: 3544, column: 11, scope: !14049)
!14122 = !DILocation(line: 3544, column: 15, scope: !14049)
!14123 = !DILocation(line: 3544, column: 22, scope: !14049)
!14124 = !DILocation(line: 3544, column: 25, scope: !14049)
!14125 = !DILocation(line: 3544, column: 21, scope: !14049)
!14126 = !DILocation(line: 3544, column: 33, scope: !14049)
!14127 = !DILocation(line: 3544, column: 32, scope: !14049)
!14128 = !DILocation(line: 3544, column: 38, scope: !14049)
!14129 = !DILocation(line: 3544, column: 42, scope: !14049)
!14130 = !DILocation(line: 3544, column: 49, scope: !14049)
!14131 = !DILocation(line: 3544, column: 52, scope: !14049)
!14132 = !DILocation(line: 3544, column: 48, scope: !14049)
!14133 = !DILocation(line: 3544, column: 60, scope: !14049)
!14134 = !DILocation(line: 3544, column: 59, scope: !14049)
!14135 = !DILocation(line: 3544, column: 36, scope: !14049)
!14136 = !DILocation(line: 3544, column: 2, scope: !14049)
!14137 = !DILocation(line: 3544, column: 8, scope: !14049)
!14138 = !DILocation(line: 3545, column: 11, scope: !14049)
!14139 = !DILocation(line: 3545, column: 15, scope: !14049)
!14140 = !DILocation(line: 3545, column: 22, scope: !14049)
!14141 = !DILocation(line: 3545, column: 25, scope: !14049)
!14142 = !DILocation(line: 3545, column: 21, scope: !14049)
!14143 = !DILocation(line: 3545, column: 33, scope: !14049)
!14144 = !DILocation(line: 3545, column: 32, scope: !14049)
!14145 = !DILocation(line: 3545, column: 38, scope: !14049)
!14146 = !DILocation(line: 3545, column: 42, scope: !14049)
!14147 = !DILocation(line: 3545, column: 49, scope: !14049)
!14148 = !DILocation(line: 3545, column: 52, scope: !14049)
!14149 = !DILocation(line: 3545, column: 48, scope: !14049)
!14150 = !DILocation(line: 3545, column: 60, scope: !14049)
!14151 = !DILocation(line: 3545, column: 59, scope: !14049)
!14152 = !DILocation(line: 3545, column: 36, scope: !14049)
!14153 = !DILocation(line: 3545, column: 2, scope: !14049)
!14154 = !DILocation(line: 3545, column: 8, scope: !14049)
!14155 = !DILocation(line: 3548, column: 2, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 3548, column: 2)
!14157 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 3548, column: 2)
!14158 = !DILocation(line: 3548, column: 2, scope: !14157)
!14159 = !DILocation(line: 3548, column: 2, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !3, line: 3548, column: 2)
!14161 = !DILocation(line: 3549, column: 2, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 3549, column: 2)
!14163 = distinct !DILexicalBlock(scope: !14049, file: !3, line: 3549, column: 2)
!14164 = !DILocation(line: 3549, column: 2, scope: !14163)
!14165 = !DILocation(line: 3549, column: 2, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14162, file: !3, line: 3549, column: 2)
!14167 = !DILocation(line: 3550, column: 1, scope: !14049)
!14168 = distinct !DISubprogram(name: "zero_v3", scope: !4399, file: !4399, line: 43, type: !14169, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{null, !201}
!14171 = !DILocalVariable(name: "r", arg: 1, scope: !14168, file: !4399, line: 43, type: !201)
!14172 = !DILocation(line: 43, column: 28, scope: !14168)
!14173 = !DILocation(line: 45, column: 2, scope: !14168)
!14174 = !DILocation(line: 45, column: 7, scope: !14168)
!14175 = !DILocation(line: 46, column: 2, scope: !14168)
!14176 = !DILocation(line: 46, column: 7, scope: !14168)
!14177 = !DILocation(line: 47, column: 2, scope: !14168)
!14178 = !DILocation(line: 47, column: 7, scope: !14168)
!14179 = !DILocation(line: 48, column: 1, scope: !14168)
!14180 = distinct !DISubprogram(name: "negate_v3_v3", scope: !4399, file: !4399, line: 583, type: !4400, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14181 = !DILocalVariable(name: "r", arg: 1, scope: !14180, file: !4399, line: 583, type: !201)
!14182 = !DILocation(line: 583, column: 33, scope: !14180)
!14183 = !DILocalVariable(name: "a", arg: 2, scope: !14180, file: !4399, line: 583, type: !954)
!14184 = !DILocation(line: 583, column: 51, scope: !14180)
!14185 = !DILocation(line: 585, column: 10, scope: !14180)
!14186 = !DILocation(line: 585, column: 9, scope: !14180)
!14187 = !DILocation(line: 585, column: 2, scope: !14180)
!14188 = !DILocation(line: 585, column: 7, scope: !14180)
!14189 = !DILocation(line: 586, column: 10, scope: !14180)
!14190 = !DILocation(line: 586, column: 9, scope: !14180)
!14191 = !DILocation(line: 586, column: 2, scope: !14180)
!14192 = !DILocation(line: 586, column: 7, scope: !14180)
!14193 = !DILocation(line: 587, column: 10, scope: !14180)
!14194 = !DILocation(line: 587, column: 9, scope: !14180)
!14195 = !DILocation(line: 587, column: 2, scope: !14180)
!14196 = !DILocation(line: 587, column: 7, scope: !14180)
!14197 = !DILocation(line: 588, column: 1, scope: !14180)
!14198 = distinct !DISubprogram(name: "max_fff", scope: !4384, file: !4384, line: 224, type: !14199, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!91, !91, !91, !91}
!14201 = !DILocalVariable(name: "a", arg: 1, scope: !14198, file: !4384, line: 224, type: !91)
!14202 = !DILocation(line: 224, column: 29, scope: !14198)
!14203 = !DILocalVariable(name: "b", arg: 2, scope: !14198, file: !4384, line: 224, type: !91)
!14204 = !DILocation(line: 224, column: 38, scope: !14198)
!14205 = !DILocalVariable(name: "c", arg: 3, scope: !14198, file: !4384, line: 224, type: !91)
!14206 = !DILocation(line: 224, column: 47, scope: !14198)
!14207 = !DILocation(line: 226, column: 23, scope: !14198)
!14208 = !DILocation(line: 226, column: 26, scope: !14198)
!14209 = !DILocation(line: 226, column: 16, scope: !14198)
!14210 = !DILocation(line: 226, column: 30, scope: !14198)
!14211 = !DILocation(line: 226, column: 9, scope: !14198)
!14212 = !DILocation(line: 226, column: 2, scope: !14198)
!14213 = distinct !DISubprogram(name: "max_ff", scope: !4384, file: !4384, line: 206, type: !4385, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14214 = !DILocalVariable(name: "a", arg: 1, scope: !14213, file: !4384, line: 206, type: !91)
!14215 = !DILocation(line: 206, column: 28, scope: !14213)
!14216 = !DILocalVariable(name: "b", arg: 2, scope: !14213, file: !4384, line: 206, type: !91)
!14217 = !DILocation(line: 206, column: 37, scope: !14213)
!14218 = !DILocation(line: 208, column: 10, scope: !14213)
!14219 = !DILocation(line: 208, column: 14, scope: !14213)
!14220 = !DILocation(line: 208, column: 12, scope: !14213)
!14221 = !DILocation(line: 208, column: 9, scope: !14213)
!14222 = !DILocation(line: 208, column: 19, scope: !14213)
!14223 = !DILocation(line: 208, column: 23, scope: !14213)
!14224 = !DILocation(line: 208, column: 2, scope: !14213)
!14225 = distinct !DISubprogram(name: "len_v3", scope: !4399, file: !4399, line: 714, type: !9083, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14226 = !DILocalVariable(name: "a", arg: 1, scope: !14225, file: !4399, line: 714, type: !954)
!14227 = !DILocation(line: 714, column: 34, scope: !14225)
!14228 = !DILocation(line: 716, column: 24, scope: !14225)
!14229 = !DILocation(line: 716, column: 27, scope: !14225)
!14230 = !DILocation(line: 716, column: 15, scope: !14225)
!14231 = !DILocation(line: 716, column: 9, scope: !14225)
!14232 = !DILocation(line: 716, column: 2, scope: !14225)
!14233 = distinct !DISubprogram(name: "len_v2", scope: !4399, file: !4399, line: 691, type: !9083, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14234 = !DILocalVariable(name: "v", arg: 1, scope: !14233, file: !4399, line: 691, type: !954)
!14235 = !DILocation(line: 691, column: 34, scope: !14233)
!14236 = !DILocation(line: 693, column: 15, scope: !14233)
!14237 = !DILocation(line: 693, column: 22, scope: !14233)
!14238 = !DILocation(line: 693, column: 20, scope: !14233)
!14239 = !DILocation(line: 693, column: 29, scope: !14233)
!14240 = !DILocation(line: 693, column: 36, scope: !14233)
!14241 = !DILocation(line: 693, column: 34, scope: !14233)
!14242 = !DILocation(line: 693, column: 27, scope: !14233)
!14243 = !DILocation(line: 693, column: 9, scope: !14233)
!14244 = !DILocation(line: 693, column: 2, scope: !14233)
!14245 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4399, file: !4399, line: 788, type: !14246, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{!91, !201, !954}
!14248 = !DILocalVariable(name: "r", arg: 1, scope: !14245, file: !4399, line: 788, type: !201)
!14249 = !DILocation(line: 788, column: 37, scope: !14245)
!14250 = !DILocalVariable(name: "a", arg: 2, scope: !14245, file: !4399, line: 788, type: !954)
!14251 = !DILocation(line: 788, column: 55, scope: !14245)
!14252 = !DILocalVariable(name: "d", scope: !14245, file: !4399, line: 790, type: !91)
!14253 = !DILocation(line: 790, column: 8, scope: !14245)
!14254 = !DILocation(line: 790, column: 21, scope: !14245)
!14255 = !DILocation(line: 790, column: 24, scope: !14245)
!14256 = !DILocation(line: 790, column: 12, scope: !14245)
!14257 = !DILocation(line: 794, column: 6, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14245, file: !4399, line: 794, column: 6)
!14259 = !DILocation(line: 794, column: 8, scope: !14258)
!14260 = !DILocation(line: 794, column: 6, scope: !14245)
!14261 = !DILocation(line: 795, column: 13, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14258, file: !4399, line: 794, column: 20)
!14263 = !DILocation(line: 795, column: 7, scope: !14262)
!14264 = !DILocation(line: 795, column: 5, scope: !14262)
!14265 = !DILocation(line: 796, column: 15, scope: !14262)
!14266 = !DILocation(line: 796, column: 18, scope: !14262)
!14267 = !DILocation(line: 796, column: 28, scope: !14262)
!14268 = !DILocation(line: 796, column: 26, scope: !14262)
!14269 = !DILocation(line: 796, column: 3, scope: !14262)
!14270 = !DILocation(line: 797, column: 2, scope: !14262)
!14271 = !DILocation(line: 799, column: 11, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14258, file: !4399, line: 798, column: 7)
!14273 = !DILocation(line: 799, column: 3, scope: !14272)
!14274 = !DILocation(line: 800, column: 5, scope: !14272)
!14275 = !DILocation(line: 803, column: 9, scope: !14245)
!14276 = !DILocation(line: 803, column: 2, scope: !14245)
!14277 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4399, file: !4399, line: 399, type: !9177, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14278 = !DILocalVariable(name: "r", arg: 1, scope: !14277, file: !4399, line: 399, type: !201)
!14279 = !DILocation(line: 399, column: 32, scope: !14277)
!14280 = !DILocalVariable(name: "a", arg: 2, scope: !14277, file: !4399, line: 399, type: !954)
!14281 = !DILocation(line: 399, column: 50, scope: !14277)
!14282 = !DILocalVariable(name: "f", arg: 3, scope: !14277, file: !4399, line: 399, type: !91)
!14283 = !DILocation(line: 399, column: 62, scope: !14277)
!14284 = !DILocation(line: 401, column: 9, scope: !14277)
!14285 = !DILocation(line: 401, column: 16, scope: !14277)
!14286 = !DILocation(line: 401, column: 14, scope: !14277)
!14287 = !DILocation(line: 401, column: 2, scope: !14277)
!14288 = !DILocation(line: 401, column: 7, scope: !14277)
!14289 = !DILocation(line: 402, column: 9, scope: !14277)
!14290 = !DILocation(line: 402, column: 16, scope: !14277)
!14291 = !DILocation(line: 402, column: 14, scope: !14277)
!14292 = !DILocation(line: 402, column: 2, scope: !14277)
!14293 = !DILocation(line: 402, column: 7, scope: !14277)
!14294 = !DILocation(line: 403, column: 9, scope: !14277)
!14295 = !DILocation(line: 403, column: 16, scope: !14277)
!14296 = !DILocation(line: 403, column: 14, scope: !14277)
!14297 = !DILocation(line: 403, column: 2, scope: !14277)
!14298 = !DILocation(line: 403, column: 7, scope: !14277)
!14299 = !DILocation(line: 404, column: 1, scope: !14277)
!14300 = distinct !DISubprogram(name: "clouds", scope: !3, file: !3, line: 244, type: !14301, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14301 = !DISubroutineType(types: !14302)
!14302 = !{!92, !3402, !954, !3576}
!14303 = !DILocalVariable(name: "tex", arg: 1, scope: !14300, file: !3, line: 244, type: !3402)
!14304 = !DILocation(line: 244, column: 24, scope: !14300)
!14305 = !DILocalVariable(name: "texvec", arg: 2, scope: !14300, file: !3, line: 244, type: !954)
!14306 = !DILocation(line: 244, column: 41, scope: !14300)
!14307 = !DILocalVariable(name: "texres", arg: 3, scope: !14300, file: !3, line: 244, type: !3576)
!14308 = !DILocation(line: 244, column: 63, scope: !14300)
!14309 = !DILocalVariable(name: "rv", scope: !14300, file: !3, line: 246, type: !92)
!14310 = !DILocation(line: 246, column: 6, scope: !14300)
!14311 = !DILocation(line: 248, column: 32, scope: !14300)
!14312 = !DILocation(line: 248, column: 37, scope: !14300)
!14313 = !DILocation(line: 248, column: 48, scope: !14300)
!14314 = !DILocation(line: 248, column: 59, scope: !14300)
!14315 = !DILocation(line: 248, column: 70, scope: !14300)
!14316 = !DILocation(line: 248, column: 81, scope: !14300)
!14317 = !DILocation(line: 248, column: 86, scope: !14300)
!14318 = !DILocation(line: 248, column: 99, scope: !14300)
!14319 = !DILocation(line: 248, column: 104, scope: !14300)
!14320 = !DILocation(line: 248, column: 113, scope: !14300)
!14321 = !DILocation(line: 248, column: 131, scope: !14300)
!14322 = !DILocation(line: 248, column: 136, scope: !14300)
!14323 = !DILocation(line: 248, column: 16, scope: !14300)
!14324 = !DILocation(line: 248, column: 2, scope: !14300)
!14325 = !DILocation(line: 248, column: 10, scope: !14300)
!14326 = !DILocation(line: 248, column: 14, scope: !14300)
!14327 = !DILocation(line: 250, column: 6, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 250, column: 6)
!14329 = !DILocation(line: 250, column: 14, scope: !14328)
!14330 = !DILocation(line: 250, column: 17, scope: !14328)
!14331 = !DILocation(line: 250, column: 6, scope: !14300)
!14332 = !DILocation(line: 252, column: 36, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 250, column: 25)
!14334 = !DILocation(line: 252, column: 41, scope: !14333)
!14335 = !DILocation(line: 252, column: 52, scope: !14333)
!14336 = !DILocation(line: 252, column: 64, scope: !14333)
!14337 = !DILocation(line: 252, column: 69, scope: !14333)
!14338 = !DILocation(line: 252, column: 62, scope: !14333)
!14339 = !DILocation(line: 252, column: 76, scope: !14333)
!14340 = !DILocation(line: 252, column: 87, scope: !14333)
!14341 = !DILocation(line: 252, column: 98, scope: !14333)
!14342 = !DILocation(line: 252, column: 103, scope: !14333)
!14343 = !DILocation(line: 252, column: 117, scope: !14333)
!14344 = !DILocation(line: 252, column: 122, scope: !14333)
!14345 = !DILocation(line: 252, column: 131, scope: !14333)
!14346 = !DILocation(line: 252, column: 149, scope: !14333)
!14347 = !DILocation(line: 252, column: 154, scope: !14333)
!14348 = !DILocation(line: 252, column: 20, scope: !14333)
!14349 = !DILocation(line: 252, column: 3, scope: !14333)
!14350 = !DILocation(line: 252, column: 11, scope: !14333)
!14351 = !DILocation(line: 252, column: 18, scope: !14333)
!14352 = !DILocation(line: 253, column: 36, scope: !14333)
!14353 = !DILocation(line: 253, column: 41, scope: !14333)
!14354 = !DILocation(line: 253, column: 52, scope: !14333)
!14355 = !DILocation(line: 253, column: 63, scope: !14333)
!14356 = !DILocation(line: 253, column: 75, scope: !14333)
!14357 = !DILocation(line: 253, column: 80, scope: !14333)
!14358 = !DILocation(line: 253, column: 73, scope: !14333)
!14359 = !DILocation(line: 253, column: 87, scope: !14333)
!14360 = !DILocation(line: 253, column: 98, scope: !14333)
!14361 = !DILocation(line: 253, column: 103, scope: !14333)
!14362 = !DILocation(line: 253, column: 117, scope: !14333)
!14363 = !DILocation(line: 253, column: 122, scope: !14333)
!14364 = !DILocation(line: 253, column: 131, scope: !14333)
!14365 = !DILocation(line: 253, column: 149, scope: !14333)
!14366 = !DILocation(line: 253, column: 154, scope: !14333)
!14367 = !DILocation(line: 253, column: 20, scope: !14333)
!14368 = !DILocation(line: 253, column: 3, scope: !14333)
!14369 = !DILocation(line: 253, column: 11, scope: !14333)
!14370 = !DILocation(line: 253, column: 18, scope: !14333)
!14371 = !DILocation(line: 254, column: 36, scope: !14333)
!14372 = !DILocation(line: 254, column: 41, scope: !14333)
!14373 = !DILocation(line: 254, column: 52, scope: !14333)
!14374 = !DILocation(line: 254, column: 63, scope: !14333)
!14375 = !DILocation(line: 254, column: 74, scope: !14333)
!14376 = !DILocation(line: 254, column: 86, scope: !14333)
!14377 = !DILocation(line: 254, column: 91, scope: !14333)
!14378 = !DILocation(line: 254, column: 84, scope: !14333)
!14379 = !DILocation(line: 254, column: 98, scope: !14333)
!14380 = !DILocation(line: 254, column: 103, scope: !14333)
!14381 = !DILocation(line: 254, column: 117, scope: !14333)
!14382 = !DILocation(line: 254, column: 122, scope: !14333)
!14383 = !DILocation(line: 254, column: 131, scope: !14333)
!14384 = !DILocation(line: 254, column: 149, scope: !14333)
!14385 = !DILocation(line: 254, column: 154, scope: !14333)
!14386 = !DILocation(line: 254, column: 20, scope: !14333)
!14387 = !DILocation(line: 254, column: 3, scope: !14333)
!14388 = !DILocation(line: 254, column: 11, scope: !14333)
!14389 = !DILocation(line: 254, column: 18, scope: !14333)
!14390 = !DILocation(line: 256, column: 23, scope: !14333)
!14391 = !DILocation(line: 256, column: 28, scope: !14333)
!14392 = !DILocation(line: 256, column: 3, scope: !14333)
!14393 = !DILocation(line: 257, column: 6, scope: !14333)
!14394 = !DILocation(line: 258, column: 2, scope: !14333)
!14395 = !DILocation(line: 260, column: 6, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 260, column: 6)
!14397 = !DILocation(line: 260, column: 11, scope: !14396)
!14398 = !DILocation(line: 260, column: 16, scope: !14396)
!14399 = !DILocation(line: 260, column: 6, scope: !14300)
!14400 = !DILocation(line: 263, column: 16, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 260, column: 29)
!14402 = !DILocation(line: 263, column: 24, scope: !14401)
!14403 = !DILocation(line: 263, column: 3, scope: !14401)
!14404 = !DILocation(line: 263, column: 11, scope: !14401)
!14405 = !DILocation(line: 263, column: 14, scope: !14401)
!14406 = !DILocation(line: 264, column: 32, scope: !14401)
!14407 = !DILocation(line: 264, column: 37, scope: !14401)
!14408 = !DILocation(line: 264, column: 48, scope: !14401)
!14409 = !DILocation(line: 264, column: 59, scope: !14401)
!14410 = !DILocation(line: 264, column: 70, scope: !14401)
!14411 = !DILocation(line: 264, column: 81, scope: !14401)
!14412 = !DILocation(line: 264, column: 86, scope: !14401)
!14413 = !DILocation(line: 264, column: 99, scope: !14401)
!14414 = !DILocation(line: 264, column: 104, scope: !14401)
!14415 = !DILocation(line: 264, column: 113, scope: !14401)
!14416 = !DILocation(line: 264, column: 131, scope: !14401)
!14417 = !DILocation(line: 264, column: 136, scope: !14401)
!14418 = !DILocation(line: 264, column: 16, scope: !14401)
!14419 = !DILocation(line: 264, column: 3, scope: !14401)
!14420 = !DILocation(line: 264, column: 11, scope: !14401)
!14421 = !DILocation(line: 264, column: 14, scope: !14401)
!14422 = !DILocation(line: 265, column: 32, scope: !14401)
!14423 = !DILocation(line: 265, column: 37, scope: !14401)
!14424 = !DILocation(line: 265, column: 48, scope: !14401)
!14425 = !DILocation(line: 265, column: 59, scope: !14401)
!14426 = !DILocation(line: 265, column: 70, scope: !14401)
!14427 = !DILocation(line: 265, column: 81, scope: !14401)
!14428 = !DILocation(line: 265, column: 86, scope: !14401)
!14429 = !DILocation(line: 265, column: 99, scope: !14401)
!14430 = !DILocation(line: 265, column: 104, scope: !14401)
!14431 = !DILocation(line: 265, column: 113, scope: !14401)
!14432 = !DILocation(line: 265, column: 131, scope: !14401)
!14433 = !DILocation(line: 265, column: 136, scope: !14401)
!14434 = !DILocation(line: 265, column: 16, scope: !14401)
!14435 = !DILocation(line: 265, column: 3, scope: !14401)
!14436 = !DILocation(line: 265, column: 11, scope: !14401)
!14437 = !DILocation(line: 265, column: 14, scope: !14401)
!14438 = !DILocation(line: 266, column: 3, scope: !14401)
!14439 = !DILocation(line: 266, column: 3, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 266, column: 3)
!14441 = !DILocation(line: 266, column: 3, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 266, column: 3)
!14443 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 266, column: 3)
!14444 = !DILocation(line: 266, column: 3, scope: !14443)
!14445 = !DILocation(line: 266, column: 3, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 266, column: 3)
!14447 = !DILocation(line: 266, column: 3, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 266, column: 3)
!14449 = !DILocation(line: 266, column: 3, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 266, column: 3)
!14451 = !DILocalVariable(name: "_hsv", scope: !14452, file: !3, line: 266, type: !344)
!14452 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 266, column: 3)
!14453 = !DILocation(line: 266, column: 3, scope: !14452)
!14454 = !DILocation(line: 267, column: 3, scope: !14401)
!14455 = !DILocation(line: 267, column: 11, scope: !14401)
!14456 = !DILocation(line: 267, column: 14, scope: !14401)
!14457 = !DILocation(line: 268, column: 11, scope: !14401)
!14458 = !DILocation(line: 268, column: 14, scope: !14401)
!14459 = !DILocation(line: 268, column: 3, scope: !14401)
!14460 = !DILocation(line: 271, column: 2, scope: !14300)
!14461 = !DILocation(line: 271, column: 2, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 271, column: 2)
!14463 = !DILocation(line: 271, column: 2, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 271, column: 2)
!14465 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 271, column: 2)
!14466 = !DILocation(line: 271, column: 2, scope: !14465)
!14467 = !DILocation(line: 271, column: 2, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !3, line: 271, column: 2)
!14469 = !DILocation(line: 273, column: 9, scope: !14300)
!14470 = !DILocation(line: 273, column: 2, scope: !14300)
!14471 = !DILocation(line: 275, column: 1, scope: !14300)
!14472 = distinct !DISubprogram(name: "wood", scope: !3, file: !3, line: 339, type: !14301, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14473 = !DILocalVariable(name: "tex", arg: 1, scope: !14472, file: !3, line: 339, type: !3402)
!14474 = !DILocation(line: 339, column: 22, scope: !14472)
!14475 = !DILocalVariable(name: "texvec", arg: 2, scope: !14472, file: !3, line: 339, type: !954)
!14476 = !DILocation(line: 339, column: 39, scope: !14472)
!14477 = !DILocalVariable(name: "texres", arg: 3, scope: !14472, file: !3, line: 339, type: !3576)
!14478 = !DILocation(line: 339, column: 61, scope: !14472)
!14479 = !DILocalVariable(name: "rv", scope: !14472, file: !3, line: 341, type: !92)
!14480 = !DILocation(line: 341, column: 6, scope: !14472)
!14481 = !DILocation(line: 343, column: 25, scope: !14472)
!14482 = !DILocation(line: 343, column: 30, scope: !14472)
!14483 = !DILocation(line: 343, column: 41, scope: !14472)
!14484 = !DILocation(line: 343, column: 52, scope: !14472)
!14485 = !DILocation(line: 343, column: 16, scope: !14472)
!14486 = !DILocation(line: 343, column: 2, scope: !14472)
!14487 = !DILocation(line: 343, column: 10, scope: !14472)
!14488 = !DILocation(line: 343, column: 14, scope: !14472)
!14489 = !DILocation(line: 344, column: 6, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 344, column: 6)
!14491 = !DILocation(line: 344, column: 14, scope: !14490)
!14492 = !DILocation(line: 344, column: 17, scope: !14490)
!14493 = !DILocation(line: 344, column: 6, scope: !14472)
!14494 = !DILocation(line: 346, column: 29, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !3, line: 344, column: 25)
!14496 = !DILocation(line: 346, column: 34, scope: !14495)
!14497 = !DILocation(line: 346, column: 46, scope: !14495)
!14498 = !DILocation(line: 346, column: 51, scope: !14495)
!14499 = !DILocation(line: 346, column: 44, scope: !14495)
!14500 = !DILocation(line: 346, column: 58, scope: !14495)
!14501 = !DILocation(line: 346, column: 69, scope: !14495)
!14502 = !DILocation(line: 346, column: 20, scope: !14495)
!14503 = !DILocation(line: 346, column: 3, scope: !14495)
!14504 = !DILocation(line: 346, column: 11, scope: !14495)
!14505 = !DILocation(line: 346, column: 18, scope: !14495)
!14506 = !DILocation(line: 347, column: 29, scope: !14495)
!14507 = !DILocation(line: 347, column: 34, scope: !14495)
!14508 = !DILocation(line: 347, column: 45, scope: !14495)
!14509 = !DILocation(line: 347, column: 57, scope: !14495)
!14510 = !DILocation(line: 347, column: 62, scope: !14495)
!14511 = !DILocation(line: 347, column: 55, scope: !14495)
!14512 = !DILocation(line: 347, column: 69, scope: !14495)
!14513 = !DILocation(line: 347, column: 20, scope: !14495)
!14514 = !DILocation(line: 347, column: 3, scope: !14495)
!14515 = !DILocation(line: 347, column: 11, scope: !14495)
!14516 = !DILocation(line: 347, column: 18, scope: !14495)
!14517 = !DILocation(line: 348, column: 29, scope: !14495)
!14518 = !DILocation(line: 348, column: 34, scope: !14495)
!14519 = !DILocation(line: 348, column: 45, scope: !14495)
!14520 = !DILocation(line: 348, column: 56, scope: !14495)
!14521 = !DILocation(line: 348, column: 68, scope: !14495)
!14522 = !DILocation(line: 348, column: 73, scope: !14495)
!14523 = !DILocation(line: 348, column: 66, scope: !14495)
!14524 = !DILocation(line: 348, column: 20, scope: !14495)
!14525 = !DILocation(line: 348, column: 3, scope: !14495)
!14526 = !DILocation(line: 348, column: 11, scope: !14495)
!14527 = !DILocation(line: 348, column: 18, scope: !14495)
!14528 = !DILocation(line: 350, column: 23, scope: !14495)
!14529 = !DILocation(line: 350, column: 28, scope: !14495)
!14530 = !DILocation(line: 350, column: 3, scope: !14495)
!14531 = !DILocation(line: 351, column: 6, scope: !14495)
!14532 = !DILocation(line: 352, column: 2, scope: !14495)
!14533 = !DILocation(line: 354, column: 2, scope: !14472)
!14534 = !DILocation(line: 354, column: 2, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 354, column: 2)
!14536 = !DILocation(line: 354, column: 2, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !3, line: 354, column: 2)
!14538 = distinct !DILexicalBlock(scope: !14535, file: !3, line: 354, column: 2)
!14539 = !DILocation(line: 354, column: 2, scope: !14538)
!14540 = !DILocation(line: 354, column: 2, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14537, file: !3, line: 354, column: 2)
!14542 = !DILocation(line: 356, column: 9, scope: !14472)
!14543 = !DILocation(line: 356, column: 2, scope: !14472)
!14544 = distinct !DISubprogram(name: "marble", scope: !3, file: !3, line: 390, type: !14301, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14545 = !DILocalVariable(name: "tex", arg: 1, scope: !14544, file: !3, line: 390, type: !3402)
!14546 = !DILocation(line: 390, column: 24, scope: !14544)
!14547 = !DILocalVariable(name: "texvec", arg: 2, scope: !14544, file: !3, line: 390, type: !954)
!14548 = !DILocation(line: 390, column: 41, scope: !14544)
!14549 = !DILocalVariable(name: "texres", arg: 3, scope: !14544, file: !3, line: 390, type: !3576)
!14550 = !DILocation(line: 390, column: 63, scope: !14544)
!14551 = !DILocalVariable(name: "rv", scope: !14544, file: !3, line: 392, type: !92)
!14552 = !DILocation(line: 392, column: 6, scope: !14544)
!14553 = !DILocation(line: 394, column: 27, scope: !14544)
!14554 = !DILocation(line: 394, column: 32, scope: !14544)
!14555 = !DILocation(line: 394, column: 43, scope: !14544)
!14556 = !DILocation(line: 394, column: 54, scope: !14544)
!14557 = !DILocation(line: 394, column: 16, scope: !14544)
!14558 = !DILocation(line: 394, column: 2, scope: !14544)
!14559 = !DILocation(line: 394, column: 10, scope: !14544)
!14560 = !DILocation(line: 394, column: 14, scope: !14544)
!14561 = !DILocation(line: 396, column: 6, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 396, column: 6)
!14563 = !DILocation(line: 396, column: 14, scope: !14562)
!14564 = !DILocation(line: 396, column: 17, scope: !14562)
!14565 = !DILocation(line: 396, column: 6, scope: !14544)
!14566 = !DILocation(line: 398, column: 31, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 396, column: 25)
!14568 = !DILocation(line: 398, column: 36, scope: !14567)
!14569 = !DILocation(line: 398, column: 48, scope: !14567)
!14570 = !DILocation(line: 398, column: 53, scope: !14567)
!14571 = !DILocation(line: 398, column: 46, scope: !14567)
!14572 = !DILocation(line: 398, column: 60, scope: !14567)
!14573 = !DILocation(line: 398, column: 71, scope: !14567)
!14574 = !DILocation(line: 398, column: 20, scope: !14567)
!14575 = !DILocation(line: 398, column: 3, scope: !14567)
!14576 = !DILocation(line: 398, column: 11, scope: !14567)
!14577 = !DILocation(line: 398, column: 18, scope: !14567)
!14578 = !DILocation(line: 399, column: 31, scope: !14567)
!14579 = !DILocation(line: 399, column: 36, scope: !14567)
!14580 = !DILocation(line: 399, column: 47, scope: !14567)
!14581 = !DILocation(line: 399, column: 59, scope: !14567)
!14582 = !DILocation(line: 399, column: 64, scope: !14567)
!14583 = !DILocation(line: 399, column: 57, scope: !14567)
!14584 = !DILocation(line: 399, column: 71, scope: !14567)
!14585 = !DILocation(line: 399, column: 20, scope: !14567)
!14586 = !DILocation(line: 399, column: 3, scope: !14567)
!14587 = !DILocation(line: 399, column: 11, scope: !14567)
!14588 = !DILocation(line: 399, column: 18, scope: !14567)
!14589 = !DILocation(line: 400, column: 31, scope: !14567)
!14590 = !DILocation(line: 400, column: 36, scope: !14567)
!14591 = !DILocation(line: 400, column: 47, scope: !14567)
!14592 = !DILocation(line: 400, column: 58, scope: !14567)
!14593 = !DILocation(line: 400, column: 70, scope: !14567)
!14594 = !DILocation(line: 400, column: 75, scope: !14567)
!14595 = !DILocation(line: 400, column: 68, scope: !14567)
!14596 = !DILocation(line: 400, column: 20, scope: !14567)
!14597 = !DILocation(line: 400, column: 3, scope: !14567)
!14598 = !DILocation(line: 400, column: 11, scope: !14567)
!14599 = !DILocation(line: 400, column: 18, scope: !14567)
!14600 = !DILocation(line: 402, column: 23, scope: !14567)
!14601 = !DILocation(line: 402, column: 28, scope: !14567)
!14602 = !DILocation(line: 402, column: 3, scope: !14567)
!14603 = !DILocation(line: 404, column: 6, scope: !14567)
!14604 = !DILocation(line: 405, column: 2, scope: !14567)
!14605 = !DILocation(line: 407, column: 2, scope: !14544)
!14606 = !DILocation(line: 407, column: 2, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 407, column: 2)
!14608 = !DILocation(line: 407, column: 2, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 407, column: 2)
!14610 = distinct !DILexicalBlock(scope: !14607, file: !3, line: 407, column: 2)
!14611 = !DILocation(line: 407, column: 2, scope: !14610)
!14612 = !DILocation(line: 407, column: 2, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 407, column: 2)
!14614 = !DILocation(line: 409, column: 9, scope: !14544)
!14615 = !DILocation(line: 409, column: 2, scope: !14544)
!14616 = distinct !DISubprogram(name: "magic", scope: !3, file: !3, line: 414, type: !14301, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14617 = !DILocalVariable(name: "tex", arg: 1, scope: !14616, file: !3, line: 414, type: !3402)
!14618 = !DILocation(line: 414, column: 23, scope: !14616)
!14619 = !DILocalVariable(name: "texvec", arg: 2, scope: !14616, file: !3, line: 414, type: !954)
!14620 = !DILocation(line: 414, column: 40, scope: !14616)
!14621 = !DILocalVariable(name: "texres", arg: 3, scope: !14616, file: !3, line: 414, type: !3576)
!14622 = !DILocation(line: 414, column: 62, scope: !14616)
!14623 = !DILocalVariable(name: "x", scope: !14616, file: !3, line: 416, type: !91)
!14624 = !DILocation(line: 416, column: 8, scope: !14616)
!14625 = !DILocalVariable(name: "y", scope: !14616, file: !3, line: 416, type: !91)
!14626 = !DILocation(line: 416, column: 11, scope: !14616)
!14627 = !DILocalVariable(name: "z", scope: !14616, file: !3, line: 416, type: !91)
!14628 = !DILocation(line: 416, column: 14, scope: !14616)
!14629 = !DILocalVariable(name: "turb", scope: !14616, file: !3, line: 416, type: !91)
!14630 = !DILocation(line: 416, column: 17, scope: !14616)
!14631 = !DILocalVariable(name: "n", scope: !14616, file: !3, line: 417, type: !92)
!14632 = !DILocation(line: 417, column: 6, scope: !14616)
!14633 = !DILocation(line: 419, column: 5, scope: !14616)
!14634 = !DILocation(line: 419, column: 10, scope: !14616)
!14635 = !DILocation(line: 419, column: 3, scope: !14616)
!14636 = !DILocation(line: 420, column: 8, scope: !14616)
!14637 = !DILocation(line: 420, column: 13, scope: !14616)
!14638 = !DILocation(line: 420, column: 19, scope: !14616)
!14639 = !DILocation(line: 420, column: 6, scope: !14616)
!14640 = !DILocation(line: 422, column: 14, scope: !14616)
!14641 = !DILocation(line: 422, column: 26, scope: !14616)
!14642 = !DILocation(line: 422, column: 24, scope: !14616)
!14643 = !DILocation(line: 422, column: 38, scope: !14616)
!14644 = !DILocation(line: 422, column: 36, scope: !14616)
!14645 = !DILocation(line: 422, column: 49, scope: !14616)
!14646 = !DILocation(line: 422, column: 7, scope: !14616)
!14647 = !DILocation(line: 422, column: 4, scope: !14616)
!14648 = !DILocation(line: 423, column: 14, scope: !14616)
!14649 = !DILocation(line: 423, column: 13, scope: !14616)
!14650 = !DILocation(line: 423, column: 26, scope: !14616)
!14651 = !DILocation(line: 423, column: 24, scope: !14616)
!14652 = !DILocation(line: 423, column: 38, scope: !14616)
!14653 = !DILocation(line: 423, column: 36, scope: !14616)
!14654 = !DILocation(line: 423, column: 49, scope: !14616)
!14655 = !DILocation(line: 423, column: 7, scope: !14616)
!14656 = !DILocation(line: 423, column: 4, scope: !14616)
!14657 = !DILocation(line: 424, column: 14, scope: !14616)
!14658 = !DILocation(line: 424, column: 13, scope: !14616)
!14659 = !DILocation(line: 424, column: 26, scope: !14616)
!14660 = !DILocation(line: 424, column: 24, scope: !14616)
!14661 = !DILocation(line: 424, column: 38, scope: !14616)
!14662 = !DILocation(line: 424, column: 36, scope: !14616)
!14663 = !DILocation(line: 424, column: 49, scope: !14616)
!14664 = !DILocation(line: 424, column: 7, scope: !14616)
!14665 = !DILocation(line: 424, column: 6, scope: !14616)
!14666 = !DILocation(line: 424, column: 4, scope: !14616)
!14667 = !DILocation(line: 425, column: 6, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 425, column: 6)
!14669 = !DILocation(line: 425, column: 7, scope: !14668)
!14670 = !DILocation(line: 425, column: 6, scope: !14616)
!14671 = !DILocation(line: 426, column: 7, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 425, column: 11)
!14673 = !DILocation(line: 426, column: 4, scope: !14672)
!14674 = !DILocation(line: 427, column: 7, scope: !14672)
!14675 = !DILocation(line: 427, column: 4, scope: !14672)
!14676 = !DILocation(line: 428, column: 7, scope: !14672)
!14677 = !DILocation(line: 428, column: 4, scope: !14672)
!14678 = !DILocation(line: 429, column: 12, scope: !14672)
!14679 = !DILocation(line: 429, column: 14, scope: !14672)
!14680 = !DILocation(line: 429, column: 13, scope: !14672)
!14681 = !DILocation(line: 429, column: 16, scope: !14672)
!14682 = !DILocation(line: 429, column: 15, scope: !14672)
!14683 = !DILocation(line: 429, column: 7, scope: !14672)
!14684 = !DILocation(line: 429, column: 6, scope: !14672)
!14685 = !DILocation(line: 429, column: 4, scope: !14672)
!14686 = !DILocation(line: 430, column: 7, scope: !14672)
!14687 = !DILocation(line: 430, column: 4, scope: !14672)
!14688 = !DILocation(line: 431, column: 7, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14672, file: !3, line: 431, column: 7)
!14690 = !DILocation(line: 431, column: 8, scope: !14689)
!14691 = !DILocation(line: 431, column: 7, scope: !14672)
!14692 = !DILocation(line: 432, column: 12, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14689, file: !3, line: 431, column: 12)
!14694 = !DILocation(line: 432, column: 14, scope: !14693)
!14695 = !DILocation(line: 432, column: 13, scope: !14693)
!14696 = !DILocation(line: 432, column: 16, scope: !14693)
!14697 = !DILocation(line: 432, column: 15, scope: !14693)
!14698 = !DILocation(line: 432, column: 7, scope: !14693)
!14699 = !DILocation(line: 432, column: 5, scope: !14693)
!14700 = !DILocation(line: 433, column: 8, scope: !14693)
!14701 = !DILocation(line: 433, column: 5, scope: !14693)
!14702 = !DILocation(line: 434, column: 8, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 434, column: 8)
!14704 = !DILocation(line: 434, column: 9, scope: !14703)
!14705 = !DILocation(line: 434, column: 8, scope: !14693)
!14706 = !DILocation(line: 435, column: 14, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 434, column: 13)
!14708 = !DILocation(line: 435, column: 13, scope: !14707)
!14709 = !DILocation(line: 435, column: 16, scope: !14707)
!14710 = !DILocation(line: 435, column: 15, scope: !14707)
!14711 = !DILocation(line: 435, column: 18, scope: !14707)
!14712 = !DILocation(line: 435, column: 17, scope: !14707)
!14713 = !DILocation(line: 435, column: 8, scope: !14707)
!14714 = !DILocation(line: 435, column: 6, scope: !14707)
!14715 = !DILocation(line: 436, column: 9, scope: !14707)
!14716 = !DILocation(line: 436, column: 6, scope: !14707)
!14717 = !DILocation(line: 437, column: 9, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14707, file: !3, line: 437, column: 9)
!14719 = !DILocation(line: 437, column: 10, scope: !14718)
!14720 = !DILocation(line: 437, column: 9, scope: !14707)
!14721 = !DILocation(line: 438, column: 16, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14718, file: !3, line: 437, column: 14)
!14723 = !DILocation(line: 438, column: 15, scope: !14722)
!14724 = !DILocation(line: 438, column: 18, scope: !14722)
!14725 = !DILocation(line: 438, column: 17, scope: !14722)
!14726 = !DILocation(line: 438, column: 20, scope: !14722)
!14727 = !DILocation(line: 438, column: 19, scope: !14722)
!14728 = !DILocation(line: 438, column: 10, scope: !14722)
!14729 = !DILocation(line: 438, column: 9, scope: !14722)
!14730 = !DILocation(line: 438, column: 7, scope: !14722)
!14731 = !DILocation(line: 439, column: 10, scope: !14722)
!14732 = !DILocation(line: 439, column: 7, scope: !14722)
!14733 = !DILocation(line: 440, column: 10, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14722, file: !3, line: 440, column: 10)
!14735 = !DILocation(line: 440, column: 11, scope: !14734)
!14736 = !DILocation(line: 440, column: 10, scope: !14722)
!14737 = !DILocation(line: 441, column: 17, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14734, file: !3, line: 440, column: 15)
!14739 = !DILocation(line: 441, column: 16, scope: !14738)
!14740 = !DILocation(line: 441, column: 19, scope: !14738)
!14741 = !DILocation(line: 441, column: 18, scope: !14738)
!14742 = !DILocation(line: 441, column: 21, scope: !14738)
!14743 = !DILocation(line: 441, column: 20, scope: !14738)
!14744 = !DILocation(line: 441, column: 11, scope: !14738)
!14745 = !DILocation(line: 441, column: 10, scope: !14738)
!14746 = !DILocation(line: 441, column: 8, scope: !14738)
!14747 = !DILocation(line: 442, column: 11, scope: !14738)
!14748 = !DILocation(line: 442, column: 8, scope: !14738)
!14749 = !DILocation(line: 443, column: 11, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 443, column: 11)
!14751 = !DILocation(line: 443, column: 12, scope: !14750)
!14752 = !DILocation(line: 443, column: 11, scope: !14738)
!14753 = !DILocation(line: 444, column: 18, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14750, file: !3, line: 443, column: 16)
!14755 = !DILocation(line: 444, column: 17, scope: !14754)
!14756 = !DILocation(line: 444, column: 20, scope: !14754)
!14757 = !DILocation(line: 444, column: 19, scope: !14754)
!14758 = !DILocation(line: 444, column: 22, scope: !14754)
!14759 = !DILocation(line: 444, column: 21, scope: !14754)
!14760 = !DILocation(line: 444, column: 12, scope: !14754)
!14761 = !DILocation(line: 444, column: 11, scope: !14754)
!14762 = !DILocation(line: 444, column: 9, scope: !14754)
!14763 = !DILocation(line: 445, column: 12, scope: !14754)
!14764 = !DILocation(line: 445, column: 9, scope: !14754)
!14765 = !DILocation(line: 446, column: 12, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14754, file: !3, line: 446, column: 12)
!14767 = !DILocation(line: 446, column: 13, scope: !14766)
!14768 = !DILocation(line: 446, column: 12, scope: !14754)
!14769 = !DILocation(line: 447, column: 17, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 446, column: 17)
!14771 = !DILocation(line: 447, column: 19, scope: !14770)
!14772 = !DILocation(line: 447, column: 18, scope: !14770)
!14773 = !DILocation(line: 447, column: 21, scope: !14770)
!14774 = !DILocation(line: 447, column: 20, scope: !14770)
!14775 = !DILocation(line: 447, column: 12, scope: !14770)
!14776 = !DILocation(line: 447, column: 10, scope: !14770)
!14777 = !DILocation(line: 448, column: 13, scope: !14770)
!14778 = !DILocation(line: 448, column: 10, scope: !14770)
!14779 = !DILocation(line: 449, column: 13, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14770, file: !3, line: 449, column: 13)
!14781 = !DILocation(line: 449, column: 14, scope: !14780)
!14782 = !DILocation(line: 449, column: 13, scope: !14770)
!14783 = !DILocation(line: 450, column: 18, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14780, file: !3, line: 449, column: 18)
!14785 = !DILocation(line: 450, column: 20, scope: !14784)
!14786 = !DILocation(line: 450, column: 19, scope: !14784)
!14787 = !DILocation(line: 450, column: 22, scope: !14784)
!14788 = !DILocation(line: 450, column: 21, scope: !14784)
!14789 = !DILocation(line: 450, column: 13, scope: !14784)
!14790 = !DILocation(line: 450, column: 11, scope: !14784)
!14791 = !DILocation(line: 451, column: 14, scope: !14784)
!14792 = !DILocation(line: 451, column: 11, scope: !14784)
!14793 = !DILocation(line: 452, column: 14, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14784, file: !3, line: 452, column: 14)
!14795 = !DILocation(line: 452, column: 15, scope: !14794)
!14796 = !DILocation(line: 452, column: 14, scope: !14784)
!14797 = !DILocation(line: 453, column: 21, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14794, file: !3, line: 452, column: 19)
!14799 = !DILocation(line: 453, column: 20, scope: !14798)
!14800 = !DILocation(line: 453, column: 23, scope: !14798)
!14801 = !DILocation(line: 453, column: 22, scope: !14798)
!14802 = !DILocation(line: 453, column: 25, scope: !14798)
!14803 = !DILocation(line: 453, column: 24, scope: !14798)
!14804 = !DILocation(line: 453, column: 15, scope: !14798)
!14805 = !DILocation(line: 453, column: 14, scope: !14798)
!14806 = !DILocation(line: 453, column: 12, scope: !14798)
!14807 = !DILocation(line: 454, column: 15, scope: !14798)
!14808 = !DILocation(line: 454, column: 12, scope: !14798)
!14809 = !DILocation(line: 455, column: 15, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 455, column: 15)
!14811 = !DILocation(line: 455, column: 16, scope: !14810)
!14812 = !DILocation(line: 455, column: 15, scope: !14798)
!14813 = !DILocation(line: 456, column: 21, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 455, column: 20)
!14815 = !DILocation(line: 456, column: 23, scope: !14814)
!14816 = !DILocation(line: 456, column: 22, scope: !14814)
!14817 = !DILocation(line: 456, column: 25, scope: !14814)
!14818 = !DILocation(line: 456, column: 24, scope: !14814)
!14819 = !DILocation(line: 456, column: 16, scope: !14814)
!14820 = !DILocation(line: 456, column: 15, scope: !14814)
!14821 = !DILocation(line: 456, column: 13, scope: !14814)
!14822 = !DILocation(line: 457, column: 16, scope: !14814)
!14823 = !DILocation(line: 457, column: 13, scope: !14814)
!14824 = !DILocation(line: 458, column: 11, scope: !14814)
!14825 = !DILocation(line: 459, column: 10, scope: !14798)
!14826 = !DILocation(line: 460, column: 9, scope: !14784)
!14827 = !DILocation(line: 461, column: 8, scope: !14770)
!14828 = !DILocation(line: 462, column: 7, scope: !14754)
!14829 = !DILocation(line: 463, column: 6, scope: !14738)
!14830 = !DILocation(line: 464, column: 5, scope: !14722)
!14831 = !DILocation(line: 465, column: 4, scope: !14707)
!14832 = !DILocation(line: 466, column: 3, scope: !14693)
!14833 = !DILocation(line: 467, column: 2, scope: !14672)
!14834 = !DILocation(line: 469, column: 6, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 469, column: 6)
!14836 = !DILocation(line: 469, column: 10, scope: !14835)
!14837 = !DILocation(line: 469, column: 6, scope: !14616)
!14838 = !DILocation(line: 470, column: 7, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 469, column: 18)
!14840 = !DILocation(line: 471, column: 7, scope: !14839)
!14841 = !DILocation(line: 471, column: 4, scope: !14839)
!14842 = !DILocation(line: 472, column: 7, scope: !14839)
!14843 = !DILocation(line: 472, column: 4, scope: !14839)
!14844 = !DILocation(line: 473, column: 7, scope: !14839)
!14845 = !DILocation(line: 473, column: 4, scope: !14839)
!14846 = !DILocation(line: 474, column: 2, scope: !14839)
!14847 = !DILocation(line: 475, column: 22, scope: !14616)
!14848 = !DILocation(line: 475, column: 20, scope: !14616)
!14849 = !DILocation(line: 475, column: 2, scope: !14616)
!14850 = !DILocation(line: 475, column: 10, scope: !14616)
!14851 = !DILocation(line: 475, column: 13, scope: !14616)
!14852 = !DILocation(line: 476, column: 22, scope: !14616)
!14853 = !DILocation(line: 476, column: 20, scope: !14616)
!14854 = !DILocation(line: 476, column: 2, scope: !14616)
!14855 = !DILocation(line: 476, column: 10, scope: !14616)
!14856 = !DILocation(line: 476, column: 13, scope: !14616)
!14857 = !DILocation(line: 477, column: 22, scope: !14616)
!14858 = !DILocation(line: 477, column: 20, scope: !14616)
!14859 = !DILocation(line: 477, column: 2, scope: !14616)
!14860 = !DILocation(line: 477, column: 10, scope: !14616)
!14861 = !DILocation(line: 477, column: 13, scope: !14616)
!14862 = !DILocation(line: 479, column: 32, scope: !14616)
!14863 = !DILocation(line: 479, column: 40, scope: !14616)
!14864 = !DILocation(line: 479, column: 45, scope: !14616)
!14865 = !DILocation(line: 479, column: 53, scope: !14616)
!14866 = !DILocation(line: 479, column: 43, scope: !14616)
!14867 = !DILocation(line: 479, column: 58, scope: !14616)
!14868 = !DILocation(line: 479, column: 66, scope: !14616)
!14869 = !DILocation(line: 479, column: 56, scope: !14616)
!14870 = !DILocation(line: 479, column: 29, scope: !14616)
!14871 = !DILocation(line: 479, column: 2, scope: !14616)
!14872 = !DILocation(line: 479, column: 10, scope: !14616)
!14873 = !DILocation(line: 479, column: 13, scope: !14616)
!14874 = !DILocation(line: 481, column: 2, scope: !14616)
!14875 = !DILocation(line: 481, column: 2, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 481, column: 2)
!14877 = !DILocation(line: 481, column: 2, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 481, column: 2)
!14879 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 481, column: 2)
!14880 = !DILocation(line: 481, column: 2, scope: !14879)
!14881 = !DILocation(line: 481, column: 2, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 481, column: 2)
!14883 = !DILocation(line: 481, column: 2, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 481, column: 2)
!14885 = !DILocation(line: 481, column: 2, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 481, column: 2)
!14887 = !DILocalVariable(name: "_hsv", scope: !14888, file: !3, line: 481, type: !344)
!14888 = distinct !DILexicalBlock(scope: !14886, file: !3, line: 481, column: 2)
!14889 = !DILocation(line: 481, column: 2, scope: !14888)
!14890 = !DILocation(line: 482, column: 2, scope: !14616)
!14891 = !DILocation(line: 482, column: 10, scope: !14616)
!14892 = !DILocation(line: 482, column: 13, scope: !14616)
!14893 = !DILocation(line: 484, column: 2, scope: !14616)
!14894 = distinct !DISubprogram(name: "blend", scope: !3, file: !3, line: 192, type: !14301, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!14895 = !DILocalVariable(name: "tex", arg: 1, scope: !14894, file: !3, line: 192, type: !3402)
!14896 = !DILocation(line: 192, column: 23, scope: !14894)
!14897 = !DILocalVariable(name: "texvec", arg: 2, scope: !14894, file: !3, line: 192, type: !954)
!14898 = !DILocation(line: 192, column: 40, scope: !14894)
!14899 = !DILocalVariable(name: "texres", arg: 3, scope: !14894, file: !3, line: 192, type: !3576)
!14900 = !DILocation(line: 192, column: 62, scope: !14894)
!14901 = !DILocalVariable(name: "x", scope: !14894, file: !3, line: 194, type: !91)
!14902 = !DILocation(line: 194, column: 8, scope: !14894)
!14903 = !DILocalVariable(name: "y", scope: !14894, file: !3, line: 194, type: !91)
!14904 = !DILocation(line: 194, column: 11, scope: !14894)
!14905 = !DILocalVariable(name: "t", scope: !14894, file: !3, line: 194, type: !91)
!14906 = !DILocation(line: 194, column: 14, scope: !14894)
!14907 = !DILocation(line: 196, column: 6, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 196, column: 6)
!14909 = !DILocation(line: 196, column: 11, scope: !14908)
!14910 = !DILocation(line: 196, column: 16, scope: !14908)
!14911 = !DILocation(line: 196, column: 6, scope: !14894)
!14912 = !DILocation(line: 197, column: 6, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 196, column: 33)
!14914 = !DILocation(line: 197, column: 4, scope: !14913)
!14915 = !DILocation(line: 198, column: 6, scope: !14913)
!14916 = !DILocation(line: 198, column: 4, scope: !14913)
!14917 = !DILocation(line: 199, column: 2, scope: !14913)
!14918 = !DILocation(line: 201, column: 6, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 200, column: 7)
!14920 = !DILocation(line: 201, column: 4, scope: !14919)
!14921 = !DILocation(line: 202, column: 6, scope: !14919)
!14922 = !DILocation(line: 202, column: 4, scope: !14919)
!14923 = !DILocation(line: 205, column: 6, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 205, column: 6)
!14925 = !DILocation(line: 205, column: 11, scope: !14924)
!14926 = !DILocation(line: 205, column: 16, scope: !14924)
!14927 = !DILocation(line: 205, column: 6, scope: !14894)
!14928 = !DILocation(line: 206, column: 22, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14924, file: !3, line: 205, column: 27)
!14930 = !DILocation(line: 206, column: 21, scope: !14929)
!14931 = !DILocation(line: 206, column: 24, scope: !14929)
!14932 = !DILocation(line: 206, column: 3, scope: !14929)
!14933 = !DILocation(line: 206, column: 11, scope: !14929)
!14934 = !DILocation(line: 206, column: 14, scope: !14929)
!14935 = !DILocation(line: 207, column: 2, scope: !14929)
!14936 = !DILocation(line: 208, column: 11, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14924, file: !3, line: 208, column: 11)
!14938 = !DILocation(line: 208, column: 16, scope: !14937)
!14939 = !DILocation(line: 208, column: 21, scope: !14937)
!14940 = !DILocation(line: 208, column: 11, scope: !14924)
!14941 = !DILocation(line: 209, column: 22, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 208, column: 33)
!14943 = !DILocation(line: 209, column: 21, scope: !14942)
!14944 = !DILocation(line: 209, column: 24, scope: !14942)
!14945 = !DILocation(line: 209, column: 3, scope: !14942)
!14946 = !DILocation(line: 209, column: 11, scope: !14942)
!14947 = !DILocation(line: 209, column: 14, scope: !14942)
!14948 = !DILocation(line: 210, column: 7, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 210, column: 7)
!14950 = !DILocation(line: 210, column: 15, scope: !14949)
!14951 = !DILocation(line: 210, column: 18, scope: !14949)
!14952 = !DILocation(line: 210, column: 7, scope: !14942)
!14953 = !DILocation(line: 210, column: 25, scope: !14949)
!14954 = !DILocation(line: 210, column: 33, scope: !14949)
!14955 = !DILocation(line: 210, column: 36, scope: !14949)
!14956 = !DILocation(line: 211, column: 22, scope: !14949)
!14957 = !DILocation(line: 211, column: 30, scope: !14949)
!14958 = !DILocation(line: 211, column: 8, scope: !14949)
!14959 = !DILocation(line: 211, column: 16, scope: !14949)
!14960 = !DILocation(line: 211, column: 19, scope: !14949)
!14961 = !DILocation(line: 212, column: 2, scope: !14942)
!14962 = !DILocation(line: 213, column: 11, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 213, column: 11)
!14964 = !DILocation(line: 213, column: 16, scope: !14963)
!14965 = !DILocation(line: 213, column: 21, scope: !14963)
!14966 = !DILocation(line: 213, column: 11, scope: !14937)
!14967 = !DILocation(line: 214, column: 22, scope: !14968)
!14968 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 213, column: 33)
!14969 = !DILocation(line: 214, column: 21, scope: !14968)
!14970 = !DILocation(line: 214, column: 24, scope: !14968)
!14971 = !DILocation(line: 214, column: 3, scope: !14968)
!14972 = !DILocation(line: 214, column: 11, scope: !14968)
!14973 = !DILocation(line: 214, column: 14, scope: !14968)
!14974 = !DILocation(line: 215, column: 7, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14968, file: !3, line: 215, column: 7)
!14976 = !DILocation(line: 215, column: 15, scope: !14975)
!14977 = !DILocation(line: 215, column: 18, scope: !14975)
!14978 = !DILocation(line: 215, column: 7, scope: !14968)
!14979 = !DILocation(line: 215, column: 26, scope: !14975)
!14980 = !DILocation(line: 215, column: 34, scope: !14975)
!14981 = !DILocation(line: 215, column: 37, scope: !14975)
!14982 = !DILocation(line: 216, column: 12, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14975, file: !3, line: 216, column: 12)
!14984 = !DILocation(line: 216, column: 20, scope: !14983)
!14985 = !DILocation(line: 216, column: 23, scope: !14983)
!14986 = !DILocation(line: 216, column: 12, scope: !14975)
!14987 = !DILocation(line: 216, column: 31, scope: !14983)
!14988 = !DILocation(line: 216, column: 39, scope: !14983)
!14989 = !DILocation(line: 216, column: 42, scope: !14983)
!14990 = !DILocation(line: 218, column: 7, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14983, file: !3, line: 217, column: 8)
!14992 = !DILocation(line: 218, column: 15, scope: !14991)
!14993 = !DILocation(line: 218, column: 19, scope: !14991)
!14994 = !DILocation(line: 218, column: 27, scope: !14991)
!14995 = !DILocation(line: 218, column: 18, scope: !14991)
!14996 = !DILocation(line: 218, column: 5, scope: !14991)
!14997 = !DILocation(line: 219, column: 23, scope: !14991)
!14998 = !DILocation(line: 219, column: 22, scope: !14991)
!14999 = !DILocation(line: 219, column: 30, scope: !14991)
!15000 = !DILocation(line: 219, column: 29, scope: !14991)
!15001 = !DILocation(line: 219, column: 32, scope: !14991)
!15002 = !DILocation(line: 219, column: 40, scope: !14991)
!15003 = !DILocation(line: 219, column: 31, scope: !14991)
!15004 = !DILocation(line: 219, column: 24, scope: !14991)
!15005 = !DILocation(line: 219, column: 4, scope: !14991)
!15006 = !DILocation(line: 219, column: 12, scope: !14991)
!15007 = !DILocation(line: 219, column: 15, scope: !14991)
!15008 = !DILocation(line: 221, column: 2, scope: !14968)
!15009 = !DILocation(line: 222, column: 11, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 222, column: 11)
!15011 = !DILocation(line: 222, column: 16, scope: !15010)
!15012 = !DILocation(line: 222, column: 21, scope: !15010)
!15013 = !DILocation(line: 222, column: 11, scope: !14963)
!15014 = !DILocation(line: 223, column: 22, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 222, column: 33)
!15016 = !DILocation(line: 223, column: 21, scope: !15015)
!15017 = !DILocation(line: 223, column: 24, scope: !15015)
!15018 = !DILocation(line: 223, column: 23, scope: !15015)
!15019 = !DILocation(line: 223, column: 26, scope: !15015)
!15020 = !DILocation(line: 223, column: 3, scope: !15015)
!15021 = !DILocation(line: 223, column: 11, scope: !15015)
!15022 = !DILocation(line: 223, column: 14, scope: !15015)
!15023 = !DILocation(line: 224, column: 2, scope: !15015)
!15024 = !DILocation(line: 225, column: 11, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 225, column: 11)
!15026 = !DILocation(line: 225, column: 16, scope: !15025)
!15027 = !DILocation(line: 225, column: 21, scope: !15025)
!15028 = !DILocation(line: 225, column: 11, scope: !15010)
!15029 = !DILocation(line: 226, column: 25, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15025, file: !3, line: 225, column: 32)
!15031 = !DILocation(line: 226, column: 28, scope: !15030)
!15032 = !DILocation(line: 226, column: 18, scope: !15030)
!15033 = !DILocation(line: 226, column: 31, scope: !15030)
!15034 = !DILocation(line: 226, column: 44, scope: !15030)
!15035 = !DILocation(line: 226, column: 17, scope: !15030)
!15036 = !DILocation(line: 226, column: 3, scope: !15030)
!15037 = !DILocation(line: 226, column: 11, scope: !15030)
!15038 = !DILocation(line: 226, column: 15, scope: !15030)
!15039 = !DILocation(line: 227, column: 2, scope: !15030)
!15040 = !DILocation(line: 229, column: 29, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15025, file: !3, line: 228, column: 7)
!15042 = !DILocation(line: 229, column: 33, scope: !15041)
!15043 = !DILocation(line: 229, column: 31, scope: !15041)
!15044 = !DILocation(line: 229, column: 37, scope: !15041)
!15045 = !DILocation(line: 229, column: 41, scope: !15041)
!15046 = !DILocation(line: 229, column: 39, scope: !15041)
!15047 = !DILocation(line: 229, column: 35, scope: !15041)
!15048 = !DILocation(line: 229, column: 45, scope: !15041)
!15049 = !DILocation(line: 229, column: 57, scope: !15041)
!15050 = !DILocation(line: 229, column: 55, scope: !15041)
!15051 = !DILocation(line: 229, column: 43, scope: !15041)
!15052 = !DILocation(line: 229, column: 23, scope: !15041)
!15053 = !DILocation(line: 229, column: 21, scope: !15041)
!15054 = !DILocation(line: 229, column: 17, scope: !15041)
!15055 = !DILocation(line: 229, column: 3, scope: !15041)
!15056 = !DILocation(line: 229, column: 11, scope: !15041)
!15057 = !DILocation(line: 229, column: 15, scope: !15041)
!15058 = !DILocation(line: 230, column: 7, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 230, column: 7)
!15060 = !DILocation(line: 230, column: 15, scope: !15059)
!15061 = !DILocation(line: 230, column: 18, scope: !15059)
!15062 = !DILocation(line: 230, column: 7, scope: !15041)
!15063 = !DILocation(line: 230, column: 25, scope: !15059)
!15064 = !DILocation(line: 230, column: 33, scope: !15059)
!15065 = !DILocation(line: 230, column: 36, scope: !15059)
!15066 = !DILocation(line: 231, column: 7, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 231, column: 7)
!15068 = !DILocation(line: 231, column: 12, scope: !15067)
!15069 = !DILocation(line: 231, column: 17, scope: !15067)
!15070 = !DILocation(line: 231, column: 7, scope: !15041)
!15071 = !DILocation(line: 231, column: 43, scope: !15067)
!15072 = !DILocation(line: 231, column: 51, scope: !15067)
!15073 = !DILocation(line: 231, column: 29, scope: !15067)
!15074 = !DILocation(line: 231, column: 37, scope: !15067)
!15075 = !DILocation(line: 231, column: 40, scope: !15067)
!15076 = !DILocation(line: 234, column: 2, scope: !14894)
!15077 = !DILocation(line: 234, column: 2, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 234, column: 2)
!15079 = !DILocation(line: 234, column: 2, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !3, line: 234, column: 2)
!15081 = distinct !DILexicalBlock(scope: !15078, file: !3, line: 234, column: 2)
!15082 = !DILocation(line: 234, column: 2, scope: !15081)
!15083 = !DILocation(line: 234, column: 2, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15080, file: !3, line: 234, column: 2)
!15085 = !DILocation(line: 236, column: 2, scope: !14894)
!15086 = distinct !DISubprogram(name: "stucci", scope: !3, file: !3, line: 490, type: !14301, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15087 = !DILocalVariable(name: "tex", arg: 1, scope: !15086, file: !3, line: 490, type: !3402)
!15088 = !DILocation(line: 490, column: 24, scope: !15086)
!15089 = !DILocalVariable(name: "texvec", arg: 2, scope: !15086, file: !3, line: 490, type: !954)
!15090 = !DILocation(line: 490, column: 41, scope: !15086)
!15091 = !DILocalVariable(name: "texres", arg: 3, scope: !15086, file: !3, line: 490, type: !3576)
!15092 = !DILocation(line: 490, column: 63, scope: !15086)
!15093 = !DILocalVariable(name: "nor", scope: !15086, file: !3, line: 492, type: !344)
!15094 = !DILocation(line: 492, column: 8, scope: !15086)
!15095 = !DILocalVariable(name: "b2", scope: !15086, file: !3, line: 492, type: !91)
!15096 = !DILocation(line: 492, column: 16, scope: !15086)
!15097 = !DILocalVariable(name: "ofs", scope: !15086, file: !3, line: 492, type: !91)
!15098 = !DILocation(line: 492, column: 20, scope: !15086)
!15099 = !DILocalVariable(name: "retval", scope: !15086, file: !3, line: 493, type: !92)
!15100 = !DILocation(line: 493, column: 6, scope: !15086)
!15101 = !DILocation(line: 495, column: 17, scope: !15086)
!15102 = !DILocation(line: 495, column: 22, scope: !15086)
!15103 = !DILocation(line: 495, column: 33, scope: !15086)
!15104 = !DILocation(line: 495, column: 44, scope: !15086)
!15105 = !DILocation(line: 495, column: 55, scope: !15086)
!15106 = !DILocation(line: 495, column: 67, scope: !15086)
!15107 = !DILocation(line: 495, column: 72, scope: !15086)
!15108 = !DILocation(line: 495, column: 81, scope: !15086)
!15109 = !DILocation(line: 495, column: 99, scope: !15086)
!15110 = !DILocation(line: 495, column: 104, scope: !15086)
!15111 = !DILocation(line: 495, column: 6, scope: !15086)
!15112 = !DILocation(line: 495, column: 4, scope: !15086)
!15113 = !DILocation(line: 497, column: 7, scope: !15086)
!15114 = !DILocation(line: 497, column: 12, scope: !15086)
!15115 = !DILocation(line: 497, column: 18, scope: !15086)
!15116 = !DILocation(line: 497, column: 5, scope: !15086)
!15117 = !DILocation(line: 499, column: 6, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 499, column: 6)
!15119 = !DILocation(line: 499, column: 11, scope: !15118)
!15120 = !DILocation(line: 499, column: 6, scope: !15086)
!15121 = !DILocation(line: 499, column: 24, scope: !15118)
!15122 = !DILocation(line: 499, column: 27, scope: !15118)
!15123 = !DILocation(line: 499, column: 26, scope: !15118)
!15124 = !DILocation(line: 499, column: 21, scope: !15118)
!15125 = !DILocation(line: 499, column: 18, scope: !15118)
!15126 = !DILocation(line: 500, column: 22, scope: !15086)
!15127 = !DILocation(line: 500, column: 27, scope: !15086)
!15128 = !DILocation(line: 500, column: 38, scope: !15086)
!15129 = !DILocation(line: 500, column: 48, scope: !15086)
!15130 = !DILocation(line: 500, column: 47, scope: !15086)
!15131 = !DILocation(line: 500, column: 53, scope: !15086)
!15132 = !DILocation(line: 500, column: 64, scope: !15086)
!15133 = !DILocation(line: 500, column: 76, scope: !15086)
!15134 = !DILocation(line: 500, column: 81, scope: !15086)
!15135 = !DILocation(line: 500, column: 90, scope: !15086)
!15136 = !DILocation(line: 500, column: 108, scope: !15086)
!15137 = !DILocation(line: 500, column: 113, scope: !15086)
!15138 = !DILocation(line: 500, column: 11, scope: !15086)
!15139 = !DILocation(line: 500, column: 2, scope: !15086)
!15140 = !DILocation(line: 500, column: 9, scope: !15086)
!15141 = !DILocation(line: 501, column: 22, scope: !15086)
!15142 = !DILocation(line: 501, column: 27, scope: !15086)
!15143 = !DILocation(line: 501, column: 38, scope: !15086)
!15144 = !DILocation(line: 501, column: 49, scope: !15086)
!15145 = !DILocation(line: 501, column: 59, scope: !15086)
!15146 = !DILocation(line: 501, column: 58, scope: !15086)
!15147 = !DILocation(line: 501, column: 64, scope: !15086)
!15148 = !DILocation(line: 501, column: 76, scope: !15086)
!15149 = !DILocation(line: 501, column: 81, scope: !15086)
!15150 = !DILocation(line: 501, column: 90, scope: !15086)
!15151 = !DILocation(line: 501, column: 108, scope: !15086)
!15152 = !DILocation(line: 501, column: 113, scope: !15086)
!15153 = !DILocation(line: 501, column: 11, scope: !15086)
!15154 = !DILocation(line: 501, column: 2, scope: !15086)
!15155 = !DILocation(line: 501, column: 9, scope: !15086)
!15156 = !DILocation(line: 502, column: 22, scope: !15086)
!15157 = !DILocation(line: 502, column: 27, scope: !15086)
!15158 = !DILocation(line: 502, column: 38, scope: !15086)
!15159 = !DILocation(line: 502, column: 49, scope: !15086)
!15160 = !DILocation(line: 502, column: 60, scope: !15086)
!15161 = !DILocation(line: 502, column: 70, scope: !15086)
!15162 = !DILocation(line: 502, column: 69, scope: !15086)
!15163 = !DILocation(line: 502, column: 76, scope: !15086)
!15164 = !DILocation(line: 502, column: 81, scope: !15086)
!15165 = !DILocation(line: 502, column: 90, scope: !15086)
!15166 = !DILocation(line: 502, column: 108, scope: !15086)
!15167 = !DILocation(line: 502, column: 113, scope: !15086)
!15168 = !DILocation(line: 502, column: 11, scope: !15086)
!15169 = !DILocation(line: 502, column: 2, scope: !15086)
!15170 = !DILocation(line: 502, column: 9, scope: !15086)
!15171 = !DILocation(line: 504, column: 15, scope: !15086)
!15172 = !DILocation(line: 504, column: 2, scope: !15086)
!15173 = !DILocation(line: 504, column: 10, scope: !15086)
!15174 = !DILocation(line: 504, column: 13, scope: !15086)
!15175 = !DILocation(line: 506, column: 6, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 506, column: 6)
!15177 = !DILocation(line: 506, column: 14, scope: !15176)
!15178 = !DILocation(line: 506, column: 6, scope: !15086)
!15179 = !DILocation(line: 508, column: 14, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15176, file: !3, line: 506, column: 19)
!15181 = !DILocation(line: 508, column: 22, scope: !15180)
!15182 = !DILocation(line: 508, column: 27, scope: !15180)
!15183 = !DILocation(line: 508, column: 3, scope: !15180)
!15184 = !DILocation(line: 509, column: 23, scope: !15180)
!15185 = !DILocation(line: 509, column: 28, scope: !15180)
!15186 = !DILocation(line: 509, column: 3, scope: !15180)
!15187 = !DILocation(line: 511, column: 7, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15180, file: !3, line: 511, column: 7)
!15189 = !DILocation(line: 511, column: 12, scope: !15188)
!15190 = !DILocation(line: 511, column: 17, scope: !15188)
!15191 = !DILocation(line: 511, column: 7, scope: !15180)
!15192 = !DILocation(line: 512, column: 21, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15188, file: !3, line: 511, column: 32)
!15194 = !DILocation(line: 512, column: 29, scope: !15193)
!15195 = !DILocation(line: 512, column: 20, scope: !15193)
!15196 = !DILocation(line: 512, column: 4, scope: !15193)
!15197 = !DILocation(line: 512, column: 12, scope: !15193)
!15198 = !DILocation(line: 512, column: 18, scope: !15193)
!15199 = !DILocation(line: 513, column: 21, scope: !15193)
!15200 = !DILocation(line: 513, column: 29, scope: !15193)
!15201 = !DILocation(line: 513, column: 20, scope: !15193)
!15202 = !DILocation(line: 513, column: 4, scope: !15193)
!15203 = !DILocation(line: 513, column: 12, scope: !15193)
!15204 = !DILocation(line: 513, column: 18, scope: !15193)
!15205 = !DILocation(line: 514, column: 21, scope: !15193)
!15206 = !DILocation(line: 514, column: 29, scope: !15193)
!15207 = !DILocation(line: 514, column: 20, scope: !15193)
!15208 = !DILocation(line: 514, column: 4, scope: !15193)
!15209 = !DILocation(line: 514, column: 12, scope: !15193)
!15210 = !DILocation(line: 514, column: 18, scope: !15193)
!15211 = !DILocation(line: 515, column: 3, scope: !15193)
!15212 = !DILocation(line: 517, column: 10, scope: !15180)
!15213 = !DILocation(line: 518, column: 2, scope: !15180)
!15214 = !DILocation(line: 520, column: 6, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 520, column: 6)
!15216 = !DILocation(line: 520, column: 11, scope: !15215)
!15217 = !DILocation(line: 520, column: 16, scope: !15215)
!15218 = !DILocation(line: 520, column: 6, scope: !15086)
!15219 = !DILocation(line: 521, column: 21, scope: !15215)
!15220 = !DILocation(line: 521, column: 29, scope: !15215)
!15221 = !DILocation(line: 521, column: 20, scope: !15215)
!15222 = !DILocation(line: 521, column: 3, scope: !15215)
!15223 = !DILocation(line: 521, column: 11, scope: !15215)
!15224 = !DILocation(line: 521, column: 14, scope: !15215)
!15225 = !DILocation(line: 523, column: 6, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 523, column: 6)
!15227 = !DILocation(line: 523, column: 14, scope: !15226)
!15228 = !DILocation(line: 523, column: 17, scope: !15226)
!15229 = !DILocation(line: 523, column: 6, scope: !15086)
!15230 = !DILocation(line: 524, column: 3, scope: !15226)
!15231 = !DILocation(line: 524, column: 11, scope: !15226)
!15232 = !DILocation(line: 524, column: 14, scope: !15226)
!15233 = !DILocation(line: 526, column: 9, scope: !15086)
!15234 = !DILocation(line: 526, column: 2, scope: !15086)
!15235 = distinct !DISubprogram(name: "texnoise", scope: !3, file: !3, line: 723, type: !15236, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15236 = !DISubroutineType(types: !15237)
!15237 = !{!92, !3402, !3576, !92}
!15238 = !DILocalVariable(name: "tex", arg: 1, scope: !15235, file: !3, line: 723, type: !3402)
!15239 = !DILocation(line: 723, column: 26, scope: !15235)
!15240 = !DILocalVariable(name: "texres", arg: 2, scope: !15235, file: !3, line: 723, type: !3576)
!15241 = !DILocation(line: 723, column: 42, scope: !15235)
!15242 = !DILocalVariable(name: "thread", arg: 3, scope: !15235, file: !3, line: 723, type: !92)
!15243 = !DILocation(line: 723, column: 54, scope: !15235)
!15244 = !DILocalVariable(name: "div", scope: !15235, file: !3, line: 725, type: !91)
!15245 = !DILocation(line: 725, column: 8, scope: !15235)
!15246 = !DILocalVariable(name: "val", scope: !15235, file: !3, line: 726, type: !92)
!15247 = !DILocation(line: 726, column: 6, scope: !15235)
!15248 = !DILocalVariable(name: "ran", scope: !15235, file: !3, line: 726, type: !92)
!15249 = !DILocation(line: 726, column: 11, scope: !15235)
!15250 = !DILocalVariable(name: "loop", scope: !15235, file: !3, line: 726, type: !92)
!15251 = !DILocation(line: 726, column: 16, scope: !15235)
!15252 = !DILocalVariable(name: "shift", scope: !15235, file: !3, line: 726, type: !92)
!15253 = !DILocation(line: 726, column: 22, scope: !15235)
!15254 = !DILocation(line: 728, column: 28, scope: !15235)
!15255 = !DILocation(line: 728, column: 46, scope: !15235)
!15256 = !DILocation(line: 728, column: 8, scope: !15235)
!15257 = !DILocation(line: 728, column: 5, scope: !15235)
!15258 = !DILocation(line: 730, column: 8, scope: !15235)
!15259 = !DILocation(line: 730, column: 13, scope: !15235)
!15260 = !DILocation(line: 730, column: 6, scope: !15235)
!15261 = !DILocation(line: 733, column: 9, scope: !15235)
!15262 = !DILocation(line: 733, column: 16, scope: !15235)
!15263 = !DILocation(line: 733, column: 13, scope: !15235)
!15264 = !DILocation(line: 733, column: 23, scope: !15235)
!15265 = !DILocation(line: 733, column: 5, scope: !15235)
!15266 = !DILocation(line: 735, column: 2, scope: !15235)
!15267 = !DILocation(line: 735, column: 13, scope: !15235)
!15268 = !DILocation(line: 736, column: 9, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 735, column: 17)
!15270 = !DILocation(line: 737, column: 12, scope: !15269)
!15271 = !DILocation(line: 737, column: 19, scope: !15269)
!15272 = !DILocation(line: 737, column: 16, scope: !15269)
!15273 = !DILocation(line: 737, column: 26, scope: !15269)
!15274 = !DILocation(line: 737, column: 7, scope: !15269)
!15275 = !DILocation(line: 738, column: 7, scope: !15269)
!15276 = distinct !{!15276, !15266, !15277}
!15277 = !DILocation(line: 739, column: 2, scope: !15235)
!15278 = !DILocation(line: 741, column: 23, scope: !15235)
!15279 = !DILocation(line: 741, column: 16, scope: !15235)
!15280 = !DILocation(line: 741, column: 28, scope: !15235)
!15281 = !DILocation(line: 741, column: 27, scope: !15235)
!15282 = !DILocation(line: 741, column: 2, scope: !15235)
!15283 = !DILocation(line: 741, column: 10, scope: !15235)
!15284 = !DILocation(line: 741, column: 13, scope: !15235)
!15285 = !DILocation(line: 743, column: 2, scope: !15235)
!15286 = !DILocation(line: 743, column: 2, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 743, column: 2)
!15288 = !DILocation(line: 743, column: 2, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 743, column: 2)
!15290 = distinct !DILexicalBlock(scope: !15287, file: !3, line: 743, column: 2)
!15291 = !DILocation(line: 743, column: 2, scope: !15290)
!15292 = !DILocation(line: 743, column: 2, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 743, column: 2)
!15294 = !DILocation(line: 744, column: 2, scope: !15235)
!15295 = distinct !DISubprogram(name: "mg_mFractalOrfBmTex", scope: !3, file: !3, line: 532, type: !15296, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{!91, !3402, !954, !3576}
!15298 = !DILocalVariable(name: "tex", arg: 1, scope: !15295, file: !3, line: 532, type: !3402)
!15299 = !DILocation(line: 532, column: 39, scope: !15295)
!15300 = !DILocalVariable(name: "texvec", arg: 2, scope: !15295, file: !3, line: 532, type: !954)
!15301 = !DILocation(line: 532, column: 56, scope: !15295)
!15302 = !DILocalVariable(name: "texres", arg: 3, scope: !15295, file: !3, line: 532, type: !3576)
!15303 = !DILocation(line: 532, column: 78, scope: !15295)
!15304 = !DILocalVariable(name: "rv", scope: !15295, file: !3, line: 534, type: !92)
!15305 = !DILocation(line: 534, column: 6, scope: !15295)
!15306 = !DILocalVariable(name: "mgravefunc", scope: !15295, file: !3, line: 535, type: !15307)
!15307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15308, size: 64)
!15308 = !DISubroutineType(types: !15309)
!15309 = !{!91, !91, !91, !91, !91, !91, !91, !92}
!15310 = !DILocation(line: 535, column: 10, scope: !15295)
!15311 = !DILocation(line: 537, column: 6, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 537, column: 6)
!15313 = !DILocation(line: 537, column: 11, scope: !15312)
!15314 = !DILocation(line: 537, column: 16, scope: !15312)
!15315 = !DILocation(line: 537, column: 6, scope: !15295)
!15316 = !DILocation(line: 538, column: 14, scope: !15312)
!15317 = !DILocation(line: 538, column: 3, scope: !15312)
!15318 = !DILocation(line: 540, column: 14, scope: !15312)
!15319 = !DILocation(line: 542, column: 16, scope: !15295)
!15320 = !DILocation(line: 542, column: 21, scope: !15295)
!15321 = !DILocation(line: 542, column: 33, scope: !15295)
!15322 = !DILocation(line: 542, column: 44, scope: !15295)
!15323 = !DILocation(line: 542, column: 55, scope: !15295)
!15324 = !DILocation(line: 542, column: 66, scope: !15295)
!15325 = !DILocation(line: 542, column: 77, scope: !15295)
!15326 = !DILocation(line: 542, column: 82, scope: !15295)
!15327 = !DILocation(line: 542, column: 88, scope: !15295)
!15328 = !DILocation(line: 542, column: 93, scope: !15295)
!15329 = !DILocation(line: 542, column: 108, scope: !15295)
!15330 = !DILocation(line: 542, column: 113, scope: !15295)
!15331 = !DILocation(line: 542, column: 125, scope: !15295)
!15332 = !DILocation(line: 542, column: 130, scope: !15295)
!15333 = !DILocation(line: 542, column: 32, scope: !15295)
!15334 = !DILocation(line: 542, column: 2, scope: !15295)
!15335 = !DILocation(line: 542, column: 10, scope: !15295)
!15336 = !DILocation(line: 542, column: 14, scope: !15295)
!15337 = !DILocation(line: 544, column: 6, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 544, column: 6)
!15339 = !DILocation(line: 544, column: 14, scope: !15338)
!15340 = !DILocation(line: 544, column: 17, scope: !15338)
!15341 = !DILocation(line: 544, column: 6, scope: !15295)
!15342 = !DILocalVariable(name: "offs", scope: !15343, file: !3, line: 545, type: !91)
!15343 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 544, column: 25)
!15344 = !DILocation(line: 545, column: 9, scope: !15343)
!15345 = !DILocation(line: 545, column: 15, scope: !15343)
!15346 = !DILocation(line: 545, column: 20, scope: !15343)
!15347 = !DILocation(line: 545, column: 26, scope: !15343)
!15348 = !DILocation(line: 545, column: 31, scope: !15343)
!15349 = !DILocation(line: 545, column: 25, scope: !15343)
!15350 = !DILocation(line: 548, column: 20, scope: !15343)
!15351 = !DILocation(line: 548, column: 25, scope: !15343)
!15352 = !DILocation(line: 548, column: 37, scope: !15343)
!15353 = !DILocation(line: 548, column: 48, scope: !15343)
!15354 = !DILocation(line: 548, column: 60, scope: !15343)
!15355 = !DILocation(line: 548, column: 58, scope: !15343)
!15356 = !DILocation(line: 548, column: 66, scope: !15343)
!15357 = !DILocation(line: 548, column: 77, scope: !15343)
!15358 = !DILocation(line: 548, column: 88, scope: !15343)
!15359 = !DILocation(line: 548, column: 93, scope: !15343)
!15360 = !DILocation(line: 548, column: 99, scope: !15343)
!15361 = !DILocation(line: 548, column: 104, scope: !15343)
!15362 = !DILocation(line: 548, column: 119, scope: !15343)
!15363 = !DILocation(line: 548, column: 124, scope: !15343)
!15364 = !DILocation(line: 548, column: 136, scope: !15343)
!15365 = !DILocation(line: 548, column: 141, scope: !15343)
!15366 = !DILocation(line: 548, column: 36, scope: !15343)
!15367 = !DILocation(line: 548, column: 3, scope: !15343)
!15368 = !DILocation(line: 548, column: 11, scope: !15343)
!15369 = !DILocation(line: 548, column: 18, scope: !15343)
!15370 = !DILocation(line: 549, column: 20, scope: !15343)
!15371 = !DILocation(line: 549, column: 25, scope: !15343)
!15372 = !DILocation(line: 549, column: 37, scope: !15343)
!15373 = !DILocation(line: 549, column: 48, scope: !15343)
!15374 = !DILocation(line: 549, column: 59, scope: !15343)
!15375 = !DILocation(line: 549, column: 71, scope: !15343)
!15376 = !DILocation(line: 549, column: 69, scope: !15343)
!15377 = !DILocation(line: 549, column: 77, scope: !15343)
!15378 = !DILocation(line: 549, column: 88, scope: !15343)
!15379 = !DILocation(line: 549, column: 93, scope: !15343)
!15380 = !DILocation(line: 549, column: 99, scope: !15343)
!15381 = !DILocation(line: 549, column: 104, scope: !15343)
!15382 = !DILocation(line: 549, column: 119, scope: !15343)
!15383 = !DILocation(line: 549, column: 124, scope: !15343)
!15384 = !DILocation(line: 549, column: 136, scope: !15343)
!15385 = !DILocation(line: 549, column: 141, scope: !15343)
!15386 = !DILocation(line: 549, column: 36, scope: !15343)
!15387 = !DILocation(line: 549, column: 3, scope: !15343)
!15388 = !DILocation(line: 549, column: 11, scope: !15343)
!15389 = !DILocation(line: 549, column: 18, scope: !15343)
!15390 = !DILocation(line: 550, column: 20, scope: !15343)
!15391 = !DILocation(line: 550, column: 25, scope: !15343)
!15392 = !DILocation(line: 550, column: 37, scope: !15343)
!15393 = !DILocation(line: 550, column: 48, scope: !15343)
!15394 = !DILocation(line: 550, column: 59, scope: !15343)
!15395 = !DILocation(line: 550, column: 70, scope: !15343)
!15396 = !DILocation(line: 550, column: 82, scope: !15343)
!15397 = !DILocation(line: 550, column: 80, scope: !15343)
!15398 = !DILocation(line: 550, column: 88, scope: !15343)
!15399 = !DILocation(line: 550, column: 93, scope: !15343)
!15400 = !DILocation(line: 550, column: 99, scope: !15343)
!15401 = !DILocation(line: 550, column: 104, scope: !15343)
!15402 = !DILocation(line: 550, column: 119, scope: !15343)
!15403 = !DILocation(line: 550, column: 124, scope: !15343)
!15404 = !DILocation(line: 550, column: 136, scope: !15343)
!15405 = !DILocation(line: 550, column: 141, scope: !15343)
!15406 = !DILocation(line: 550, column: 36, scope: !15343)
!15407 = !DILocation(line: 550, column: 3, scope: !15343)
!15408 = !DILocation(line: 550, column: 11, scope: !15343)
!15409 = !DILocation(line: 550, column: 18, scope: !15343)
!15410 = !DILocation(line: 552, column: 23, scope: !15343)
!15411 = !DILocation(line: 552, column: 28, scope: !15343)
!15412 = !DILocation(line: 552, column: 3, scope: !15343)
!15413 = !DILocation(line: 553, column: 6, scope: !15343)
!15414 = !DILocation(line: 554, column: 2, scope: !15343)
!15415 = !DILocation(line: 556, column: 2, scope: !15295)
!15416 = !DILocation(line: 556, column: 2, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 556, column: 2)
!15418 = !DILocation(line: 556, column: 2, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 556, column: 2)
!15420 = distinct !DILexicalBlock(scope: !15417, file: !3, line: 556, column: 2)
!15421 = !DILocation(line: 556, column: 2, scope: !15420)
!15422 = !DILocation(line: 556, column: 2, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15419, file: !3, line: 556, column: 2)
!15424 = !DILocation(line: 558, column: 9, scope: !15295)
!15425 = !DILocation(line: 558, column: 2, scope: !15295)
!15426 = distinct !DISubprogram(name: "mg_ridgedOrHybridMFTex", scope: !3, file: !3, line: 562, type: !15296, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15427 = !DILocalVariable(name: "tex", arg: 1, scope: !15426, file: !3, line: 562, type: !3402)
!15428 = !DILocation(line: 562, column: 42, scope: !15426)
!15429 = !DILocalVariable(name: "texvec", arg: 2, scope: !15426, file: !3, line: 562, type: !954)
!15430 = !DILocation(line: 562, column: 59, scope: !15426)
!15431 = !DILocalVariable(name: "texres", arg: 3, scope: !15426, file: !3, line: 562, type: !3576)
!15432 = !DILocation(line: 562, column: 81, scope: !15426)
!15433 = !DILocalVariable(name: "rv", scope: !15426, file: !3, line: 564, type: !92)
!15434 = !DILocation(line: 564, column: 6, scope: !15426)
!15435 = !DILocalVariable(name: "mgravefunc", scope: !15426, file: !3, line: 565, type: !15436)
!15436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15437, size: 64)
!15437 = !DISubroutineType(types: !15438)
!15438 = !{!91, !91, !91, !91, !91, !91, !91, !91, !91, !92}
!15439 = !DILocation(line: 565, column: 10, scope: !15426)
!15440 = !DILocation(line: 567, column: 6, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 567, column: 6)
!15442 = !DILocation(line: 567, column: 11, scope: !15441)
!15443 = !DILocation(line: 567, column: 16, scope: !15441)
!15444 = !DILocation(line: 567, column: 6, scope: !15426)
!15445 = !DILocation(line: 568, column: 14, scope: !15441)
!15446 = !DILocation(line: 568, column: 3, scope: !15441)
!15447 = !DILocation(line: 570, column: 14, scope: !15441)
!15448 = !DILocation(line: 572, column: 16, scope: !15426)
!15449 = !DILocation(line: 572, column: 21, scope: !15426)
!15450 = !DILocation(line: 572, column: 33, scope: !15426)
!15451 = !DILocation(line: 572, column: 44, scope: !15426)
!15452 = !DILocation(line: 572, column: 55, scope: !15426)
!15453 = !DILocation(line: 572, column: 66, scope: !15426)
!15454 = !DILocation(line: 572, column: 77, scope: !15426)
!15455 = !DILocation(line: 572, column: 82, scope: !15426)
!15456 = !DILocation(line: 572, column: 88, scope: !15426)
!15457 = !DILocation(line: 572, column: 93, scope: !15426)
!15458 = !DILocation(line: 572, column: 108, scope: !15426)
!15459 = !DILocation(line: 572, column: 113, scope: !15426)
!15460 = !DILocation(line: 572, column: 125, scope: !15426)
!15461 = !DILocation(line: 572, column: 130, scope: !15426)
!15462 = !DILocation(line: 572, column: 141, scope: !15426)
!15463 = !DILocation(line: 572, column: 146, scope: !15426)
!15464 = !DILocation(line: 572, column: 155, scope: !15426)
!15465 = !DILocation(line: 572, column: 160, scope: !15426)
!15466 = !DILocation(line: 572, column: 32, scope: !15426)
!15467 = !DILocation(line: 572, column: 2, scope: !15426)
!15468 = !DILocation(line: 572, column: 10, scope: !15426)
!15469 = !DILocation(line: 572, column: 14, scope: !15426)
!15470 = !DILocation(line: 574, column: 6, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 574, column: 6)
!15472 = !DILocation(line: 574, column: 14, scope: !15471)
!15473 = !DILocation(line: 574, column: 17, scope: !15471)
!15474 = !DILocation(line: 574, column: 6, scope: !15426)
!15475 = !DILocalVariable(name: "offs", scope: !15476, file: !3, line: 575, type: !91)
!15476 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 574, column: 25)
!15477 = !DILocation(line: 575, column: 9, scope: !15476)
!15478 = !DILocation(line: 575, column: 15, scope: !15476)
!15479 = !DILocation(line: 575, column: 20, scope: !15476)
!15480 = !DILocation(line: 575, column: 26, scope: !15476)
!15481 = !DILocation(line: 575, column: 31, scope: !15476)
!15482 = !DILocation(line: 575, column: 25, scope: !15476)
!15483 = !DILocation(line: 578, column: 20, scope: !15476)
!15484 = !DILocation(line: 578, column: 25, scope: !15476)
!15485 = !DILocation(line: 578, column: 37, scope: !15476)
!15486 = !DILocation(line: 578, column: 48, scope: !15476)
!15487 = !DILocation(line: 578, column: 60, scope: !15476)
!15488 = !DILocation(line: 578, column: 58, scope: !15476)
!15489 = !DILocation(line: 578, column: 66, scope: !15476)
!15490 = !DILocation(line: 578, column: 77, scope: !15476)
!15491 = !DILocation(line: 578, column: 88, scope: !15476)
!15492 = !DILocation(line: 578, column: 93, scope: !15476)
!15493 = !DILocation(line: 578, column: 99, scope: !15476)
!15494 = !DILocation(line: 578, column: 104, scope: !15476)
!15495 = !DILocation(line: 578, column: 119, scope: !15476)
!15496 = !DILocation(line: 578, column: 124, scope: !15476)
!15497 = !DILocation(line: 578, column: 136, scope: !15476)
!15498 = !DILocation(line: 578, column: 141, scope: !15476)
!15499 = !DILocation(line: 578, column: 152, scope: !15476)
!15500 = !DILocation(line: 578, column: 157, scope: !15476)
!15501 = !DILocation(line: 578, column: 166, scope: !15476)
!15502 = !DILocation(line: 578, column: 171, scope: !15476)
!15503 = !DILocation(line: 578, column: 36, scope: !15476)
!15504 = !DILocation(line: 578, column: 3, scope: !15476)
!15505 = !DILocation(line: 578, column: 11, scope: !15476)
!15506 = !DILocation(line: 578, column: 18, scope: !15476)
!15507 = !DILocation(line: 579, column: 20, scope: !15476)
!15508 = !DILocation(line: 579, column: 25, scope: !15476)
!15509 = !DILocation(line: 579, column: 37, scope: !15476)
!15510 = !DILocation(line: 579, column: 48, scope: !15476)
!15511 = !DILocation(line: 579, column: 59, scope: !15476)
!15512 = !DILocation(line: 579, column: 71, scope: !15476)
!15513 = !DILocation(line: 579, column: 69, scope: !15476)
!15514 = !DILocation(line: 579, column: 77, scope: !15476)
!15515 = !DILocation(line: 579, column: 88, scope: !15476)
!15516 = !DILocation(line: 579, column: 93, scope: !15476)
!15517 = !DILocation(line: 579, column: 99, scope: !15476)
!15518 = !DILocation(line: 579, column: 104, scope: !15476)
!15519 = !DILocation(line: 579, column: 119, scope: !15476)
!15520 = !DILocation(line: 579, column: 124, scope: !15476)
!15521 = !DILocation(line: 579, column: 136, scope: !15476)
!15522 = !DILocation(line: 579, column: 141, scope: !15476)
!15523 = !DILocation(line: 579, column: 152, scope: !15476)
!15524 = !DILocation(line: 579, column: 157, scope: !15476)
!15525 = !DILocation(line: 579, column: 166, scope: !15476)
!15526 = !DILocation(line: 579, column: 171, scope: !15476)
!15527 = !DILocation(line: 579, column: 36, scope: !15476)
!15528 = !DILocation(line: 579, column: 3, scope: !15476)
!15529 = !DILocation(line: 579, column: 11, scope: !15476)
!15530 = !DILocation(line: 579, column: 18, scope: !15476)
!15531 = !DILocation(line: 580, column: 20, scope: !15476)
!15532 = !DILocation(line: 580, column: 25, scope: !15476)
!15533 = !DILocation(line: 580, column: 37, scope: !15476)
!15534 = !DILocation(line: 580, column: 48, scope: !15476)
!15535 = !DILocation(line: 580, column: 59, scope: !15476)
!15536 = !DILocation(line: 580, column: 70, scope: !15476)
!15537 = !DILocation(line: 580, column: 82, scope: !15476)
!15538 = !DILocation(line: 580, column: 80, scope: !15476)
!15539 = !DILocation(line: 580, column: 88, scope: !15476)
!15540 = !DILocation(line: 580, column: 93, scope: !15476)
!15541 = !DILocation(line: 580, column: 99, scope: !15476)
!15542 = !DILocation(line: 580, column: 104, scope: !15476)
!15543 = !DILocation(line: 580, column: 119, scope: !15476)
!15544 = !DILocation(line: 580, column: 124, scope: !15476)
!15545 = !DILocation(line: 580, column: 136, scope: !15476)
!15546 = !DILocation(line: 580, column: 141, scope: !15476)
!15547 = !DILocation(line: 580, column: 152, scope: !15476)
!15548 = !DILocation(line: 580, column: 157, scope: !15476)
!15549 = !DILocation(line: 580, column: 166, scope: !15476)
!15550 = !DILocation(line: 580, column: 171, scope: !15476)
!15551 = !DILocation(line: 580, column: 36, scope: !15476)
!15552 = !DILocation(line: 580, column: 3, scope: !15476)
!15553 = !DILocation(line: 580, column: 11, scope: !15476)
!15554 = !DILocation(line: 580, column: 18, scope: !15476)
!15555 = !DILocation(line: 582, column: 23, scope: !15476)
!15556 = !DILocation(line: 582, column: 28, scope: !15476)
!15557 = !DILocation(line: 582, column: 3, scope: !15476)
!15558 = !DILocation(line: 583, column: 6, scope: !15476)
!15559 = !DILocation(line: 584, column: 2, scope: !15476)
!15560 = !DILocation(line: 586, column: 2, scope: !15426)
!15561 = !DILocation(line: 586, column: 2, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 586, column: 2)
!15563 = !DILocation(line: 586, column: 2, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 586, column: 2)
!15565 = distinct !DILexicalBlock(scope: !15562, file: !3, line: 586, column: 2)
!15566 = !DILocation(line: 586, column: 2, scope: !15565)
!15567 = !DILocation(line: 586, column: 2, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15564, file: !3, line: 586, column: 2)
!15569 = !DILocation(line: 588, column: 9, scope: !15426)
!15570 = !DILocation(line: 588, column: 2, scope: !15426)
!15571 = distinct !DISubprogram(name: "mg_HTerrainTex", scope: !3, file: !3, line: 593, type: !15296, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15572 = !DILocalVariable(name: "tex", arg: 1, scope: !15571, file: !3, line: 593, type: !3402)
!15573 = !DILocation(line: 593, column: 34, scope: !15571)
!15574 = !DILocalVariable(name: "texvec", arg: 2, scope: !15571, file: !3, line: 593, type: !954)
!15575 = !DILocation(line: 593, column: 51, scope: !15571)
!15576 = !DILocalVariable(name: "texres", arg: 3, scope: !15571, file: !3, line: 593, type: !3576)
!15577 = !DILocation(line: 593, column: 73, scope: !15571)
!15578 = !DILocalVariable(name: "rv", scope: !15571, file: !3, line: 595, type: !92)
!15579 = !DILocation(line: 595, column: 6, scope: !15571)
!15580 = !DILocation(line: 597, column: 16, scope: !15571)
!15581 = !DILocation(line: 597, column: 21, scope: !15571)
!15582 = !DILocation(line: 597, column: 50, scope: !15571)
!15583 = !DILocation(line: 597, column: 61, scope: !15571)
!15584 = !DILocation(line: 597, column: 72, scope: !15571)
!15585 = !DILocation(line: 597, column: 83, scope: !15571)
!15586 = !DILocation(line: 597, column: 88, scope: !15571)
!15587 = !DILocation(line: 597, column: 94, scope: !15571)
!15588 = !DILocation(line: 597, column: 99, scope: !15571)
!15589 = !DILocation(line: 597, column: 114, scope: !15571)
!15590 = !DILocation(line: 597, column: 119, scope: !15571)
!15591 = !DILocation(line: 597, column: 131, scope: !15571)
!15592 = !DILocation(line: 597, column: 136, scope: !15571)
!15593 = !DILocation(line: 597, column: 147, scope: !15571)
!15594 = !DILocation(line: 597, column: 152, scope: !15571)
!15595 = !DILocation(line: 597, column: 33, scope: !15571)
!15596 = !DILocation(line: 597, column: 32, scope: !15571)
!15597 = !DILocation(line: 597, column: 2, scope: !15571)
!15598 = !DILocation(line: 597, column: 10, scope: !15571)
!15599 = !DILocation(line: 597, column: 14, scope: !15571)
!15600 = !DILocation(line: 599, column: 6, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 599, column: 6)
!15602 = !DILocation(line: 599, column: 14, scope: !15601)
!15603 = !DILocation(line: 599, column: 17, scope: !15601)
!15604 = !DILocation(line: 599, column: 6, scope: !15571)
!15605 = !DILocalVariable(name: "offs", scope: !15606, file: !3, line: 600, type: !91)
!15606 = distinct !DILexicalBlock(scope: !15601, file: !3, line: 599, column: 25)
!15607 = !DILocation(line: 600, column: 9, scope: !15606)
!15608 = !DILocation(line: 600, column: 15, scope: !15606)
!15609 = !DILocation(line: 600, column: 20, scope: !15606)
!15610 = !DILocation(line: 600, column: 26, scope: !15606)
!15611 = !DILocation(line: 600, column: 31, scope: !15606)
!15612 = !DILocation(line: 600, column: 25, scope: !15606)
!15613 = !DILocation(line: 603, column: 20, scope: !15606)
!15614 = !DILocation(line: 603, column: 25, scope: !15606)
!15615 = !DILocation(line: 603, column: 54, scope: !15606)
!15616 = !DILocation(line: 603, column: 66, scope: !15606)
!15617 = !DILocation(line: 603, column: 64, scope: !15606)
!15618 = !DILocation(line: 603, column: 72, scope: !15606)
!15619 = !DILocation(line: 603, column: 83, scope: !15606)
!15620 = !DILocation(line: 603, column: 94, scope: !15606)
!15621 = !DILocation(line: 603, column: 99, scope: !15606)
!15622 = !DILocation(line: 603, column: 105, scope: !15606)
!15623 = !DILocation(line: 603, column: 110, scope: !15606)
!15624 = !DILocation(line: 603, column: 125, scope: !15606)
!15625 = !DILocation(line: 603, column: 130, scope: !15606)
!15626 = !DILocation(line: 603, column: 142, scope: !15606)
!15627 = !DILocation(line: 603, column: 147, scope: !15606)
!15628 = !DILocation(line: 603, column: 158, scope: !15606)
!15629 = !DILocation(line: 603, column: 163, scope: !15606)
!15630 = !DILocation(line: 603, column: 37, scope: !15606)
!15631 = !DILocation(line: 603, column: 36, scope: !15606)
!15632 = !DILocation(line: 603, column: 3, scope: !15606)
!15633 = !DILocation(line: 603, column: 11, scope: !15606)
!15634 = !DILocation(line: 603, column: 18, scope: !15606)
!15635 = !DILocation(line: 604, column: 20, scope: !15606)
!15636 = !DILocation(line: 604, column: 25, scope: !15606)
!15637 = !DILocation(line: 604, column: 54, scope: !15606)
!15638 = !DILocation(line: 604, column: 65, scope: !15606)
!15639 = !DILocation(line: 604, column: 77, scope: !15606)
!15640 = !DILocation(line: 604, column: 75, scope: !15606)
!15641 = !DILocation(line: 604, column: 83, scope: !15606)
!15642 = !DILocation(line: 604, column: 94, scope: !15606)
!15643 = !DILocation(line: 604, column: 99, scope: !15606)
!15644 = !DILocation(line: 604, column: 105, scope: !15606)
!15645 = !DILocation(line: 604, column: 110, scope: !15606)
!15646 = !DILocation(line: 604, column: 125, scope: !15606)
!15647 = !DILocation(line: 604, column: 130, scope: !15606)
!15648 = !DILocation(line: 604, column: 142, scope: !15606)
!15649 = !DILocation(line: 604, column: 147, scope: !15606)
!15650 = !DILocation(line: 604, column: 158, scope: !15606)
!15651 = !DILocation(line: 604, column: 163, scope: !15606)
!15652 = !DILocation(line: 604, column: 37, scope: !15606)
!15653 = !DILocation(line: 604, column: 36, scope: !15606)
!15654 = !DILocation(line: 604, column: 3, scope: !15606)
!15655 = !DILocation(line: 604, column: 11, scope: !15606)
!15656 = !DILocation(line: 604, column: 18, scope: !15606)
!15657 = !DILocation(line: 605, column: 20, scope: !15606)
!15658 = !DILocation(line: 605, column: 25, scope: !15606)
!15659 = !DILocation(line: 605, column: 54, scope: !15606)
!15660 = !DILocation(line: 605, column: 65, scope: !15606)
!15661 = !DILocation(line: 605, column: 76, scope: !15606)
!15662 = !DILocation(line: 605, column: 88, scope: !15606)
!15663 = !DILocation(line: 605, column: 86, scope: !15606)
!15664 = !DILocation(line: 605, column: 94, scope: !15606)
!15665 = !DILocation(line: 605, column: 99, scope: !15606)
!15666 = !DILocation(line: 605, column: 105, scope: !15606)
!15667 = !DILocation(line: 605, column: 110, scope: !15606)
!15668 = !DILocation(line: 605, column: 125, scope: !15606)
!15669 = !DILocation(line: 605, column: 130, scope: !15606)
!15670 = !DILocation(line: 605, column: 142, scope: !15606)
!15671 = !DILocation(line: 605, column: 147, scope: !15606)
!15672 = !DILocation(line: 605, column: 158, scope: !15606)
!15673 = !DILocation(line: 605, column: 163, scope: !15606)
!15674 = !DILocation(line: 605, column: 37, scope: !15606)
!15675 = !DILocation(line: 605, column: 36, scope: !15606)
!15676 = !DILocation(line: 605, column: 3, scope: !15606)
!15677 = !DILocation(line: 605, column: 11, scope: !15606)
!15678 = !DILocation(line: 605, column: 18, scope: !15606)
!15679 = !DILocation(line: 607, column: 23, scope: !15606)
!15680 = !DILocation(line: 607, column: 28, scope: !15606)
!15681 = !DILocation(line: 607, column: 3, scope: !15606)
!15682 = !DILocation(line: 608, column: 6, scope: !15606)
!15683 = !DILocation(line: 609, column: 2, scope: !15606)
!15684 = !DILocation(line: 611, column: 2, scope: !15571)
!15685 = !DILocation(line: 611, column: 2, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 611, column: 2)
!15687 = !DILocation(line: 611, column: 2, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15689, file: !3, line: 611, column: 2)
!15689 = distinct !DILexicalBlock(scope: !15686, file: !3, line: 611, column: 2)
!15690 = !DILocation(line: 611, column: 2, scope: !15689)
!15691 = !DILocation(line: 611, column: 2, scope: !15692)
!15692 = distinct !DILexicalBlock(scope: !15688, file: !3, line: 611, column: 2)
!15693 = !DILocation(line: 613, column: 9, scope: !15571)
!15694 = !DILocation(line: 613, column: 2, scope: !15571)
!15695 = distinct !DISubprogram(name: "voronoiTex", scope: !3, file: !3, line: 647, type: !15296, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!15696 = !DILocalVariable(name: "tex", arg: 1, scope: !15695, file: !3, line: 647, type: !3402)
!15697 = !DILocation(line: 647, column: 30, scope: !15695)
!15698 = !DILocalVariable(name: "texvec", arg: 2, scope: !15695, file: !3, line: 647, type: !954)
!15699 = !DILocation(line: 647, column: 47, scope: !15695)
!15700 = !DILocalVariable(name: "texres", arg: 3, scope: !15695, file: !3, line: 647, type: !3576)
!15701 = !DILocation(line: 647, column: 69, scope: !15695)
!15702 = !DILocalVariable(name: "rv", scope: !15695, file: !3, line: 649, type: !92)
!15703 = !DILocation(line: 649, column: 6, scope: !15695)
!15704 = !DILocalVariable(name: "da", scope: !15695, file: !3, line: 650, type: !426)
!15705 = !DILocation(line: 650, column: 8, scope: !15695)
!15706 = !DILocalVariable(name: "pa", scope: !15695, file: !3, line: 650, type: !15707)
!15707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 384, elements: !15708)
!15708 = !{!15709}
!15709 = !DISubrange(count: 12)
!15710 = !DILocation(line: 650, column: 15, scope: !15695)
!15711 = !DILocalVariable(name: "aw1", scope: !15695, file: !3, line: 651, type: !91)
!15712 = !DILocation(line: 651, column: 8, scope: !15695)
!15713 = !DILocation(line: 651, column: 20, scope: !15695)
!15714 = !DILocation(line: 651, column: 25, scope: !15695)
!15715 = !DILocation(line: 651, column: 14, scope: !15695)
!15716 = !DILocalVariable(name: "aw2", scope: !15695, file: !3, line: 652, type: !91)
!15717 = !DILocation(line: 652, column: 8, scope: !15695)
!15718 = !DILocation(line: 652, column: 20, scope: !15695)
!15719 = !DILocation(line: 652, column: 25, scope: !15695)
!15720 = !DILocation(line: 652, column: 14, scope: !15695)
!15721 = !DILocalVariable(name: "aw3", scope: !15695, file: !3, line: 653, type: !91)
!15722 = !DILocation(line: 653, column: 8, scope: !15695)
!15723 = !DILocation(line: 653, column: 20, scope: !15695)
!15724 = !DILocation(line: 653, column: 25, scope: !15695)
!15725 = !DILocation(line: 653, column: 14, scope: !15695)
!15726 = !DILocalVariable(name: "aw4", scope: !15695, file: !3, line: 654, type: !91)
!15727 = !DILocation(line: 654, column: 8, scope: !15695)
!15728 = !DILocation(line: 654, column: 20, scope: !15695)
!15729 = !DILocation(line: 654, column: 25, scope: !15695)
!15730 = !DILocation(line: 654, column: 14, scope: !15695)
!15731 = !DILocalVariable(name: "sc", scope: !15695, file: !3, line: 655, type: !91)
!15732 = !DILocation(line: 655, column: 8, scope: !15695)
!15733 = !DILocation(line: 655, column: 14, scope: !15695)
!15734 = !DILocation(line: 655, column: 20, scope: !15695)
!15735 = !DILocation(line: 655, column: 18, scope: !15695)
!15736 = !DILocation(line: 655, column: 26, scope: !15695)
!15737 = !DILocation(line: 655, column: 24, scope: !15695)
!15738 = !DILocation(line: 655, column: 32, scope: !15695)
!15739 = !DILocation(line: 655, column: 30, scope: !15695)
!15740 = !DILocation(line: 656, column: 6, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 656, column: 6)
!15742 = !DILocation(line: 656, column: 8, scope: !15741)
!15743 = !DILocation(line: 656, column: 6, scope: !15695)
!15744 = !DILocation(line: 656, column: 21, scope: !15741)
!15745 = !DILocation(line: 656, column: 26, scope: !15741)
!15746 = !DILocation(line: 656, column: 38, scope: !15741)
!15747 = !DILocation(line: 656, column: 37, scope: !15741)
!15748 = !DILocation(line: 656, column: 18, scope: !15741)
!15749 = !DILocation(line: 656, column: 15, scope: !15741)
!15750 = !DILocation(line: 658, column: 10, scope: !15695)
!15751 = !DILocation(line: 658, column: 21, scope: !15695)
!15752 = !DILocation(line: 658, column: 32, scope: !15695)
!15753 = !DILocation(line: 658, column: 43, scope: !15695)
!15754 = !DILocation(line: 658, column: 47, scope: !15695)
!15755 = !DILocation(line: 658, column: 51, scope: !15695)
!15756 = !DILocation(line: 658, column: 56, scope: !15695)
!15757 = !DILocation(line: 658, column: 65, scope: !15695)
!15758 = !DILocation(line: 658, column: 70, scope: !15695)
!15759 = !DILocation(line: 658, column: 2, scope: !15695)
!15760 = !DILocation(line: 659, column: 16, scope: !15695)
!15761 = !DILocation(line: 659, column: 27, scope: !15695)
!15762 = !DILocation(line: 659, column: 32, scope: !15695)
!15763 = !DILocation(line: 659, column: 38, scope: !15695)
!15764 = !DILocation(line: 659, column: 37, scope: !15695)
!15765 = !DILocation(line: 659, column: 46, scope: !15695)
!15766 = !DILocation(line: 659, column: 51, scope: !15695)
!15767 = !DILocation(line: 659, column: 57, scope: !15695)
!15768 = !DILocation(line: 659, column: 56, scope: !15695)
!15769 = !DILocation(line: 659, column: 44, scope: !15695)
!15770 = !DILocation(line: 659, column: 65, scope: !15695)
!15771 = !DILocation(line: 659, column: 70, scope: !15695)
!15772 = !DILocation(line: 659, column: 76, scope: !15695)
!15773 = !DILocation(line: 659, column: 75, scope: !15695)
!15774 = !DILocation(line: 659, column: 63, scope: !15695)
!15775 = !DILocation(line: 659, column: 84, scope: !15695)
!15776 = !DILocation(line: 659, column: 89, scope: !15695)
!15777 = !DILocation(line: 659, column: 95, scope: !15695)
!15778 = !DILocation(line: 659, column: 94, scope: !15695)
!15779 = !DILocation(line: 659, column: 82, scope: !15695)
!15780 = !DILocation(line: 659, column: 21, scope: !15695)
!15781 = !DILocation(line: 659, column: 19, scope: !15695)
!15782 = !DILocation(line: 659, column: 2, scope: !15695)
!15783 = !DILocation(line: 659, column: 10, scope: !15695)
!15784 = !DILocation(line: 659, column: 14, scope: !15695)
!15785 = !DILocation(line: 661, column: 6, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 661, column: 6)
!15787 = !DILocation(line: 661, column: 11, scope: !15786)
!15788 = !DILocation(line: 661, column: 6, scope: !15695)
!15789 = !DILocalVariable(name: "ca", scope: !15790, file: !3, line: 662, type: !344)
!15790 = distinct !DILexicalBlock(scope: !15786, file: !3, line: 661, column: 23)
!15791 = !DILocation(line: 662, column: 9, scope: !15790)
!15792 = !DILocation(line: 663, column: 14, scope: !15790)
!15793 = !DILocation(line: 663, column: 21, scope: !15790)
!15794 = !DILocation(line: 663, column: 28, scope: !15790)
!15795 = !DILocation(line: 663, column: 35, scope: !15790)
!15796 = !DILocation(line: 663, column: 3, scope: !15790)
!15797 = !DILocation(line: 664, column: 16, scope: !15790)
!15798 = !DILocation(line: 664, column: 20, scope: !15790)
!15799 = !DILocation(line: 664, column: 19, scope: !15790)
!15800 = !DILocation(line: 664, column: 3, scope: !15790)
!15801 = !DILocation(line: 664, column: 11, scope: !15790)
!15802 = !DILocation(line: 664, column: 14, scope: !15790)
!15803 = !DILocation(line: 665, column: 16, scope: !15790)
!15804 = !DILocation(line: 665, column: 20, scope: !15790)
!15805 = !DILocation(line: 665, column: 19, scope: !15790)
!15806 = !DILocation(line: 665, column: 3, scope: !15790)
!15807 = !DILocation(line: 665, column: 11, scope: !15790)
!15808 = !DILocation(line: 665, column: 14, scope: !15790)
!15809 = !DILocation(line: 666, column: 16, scope: !15790)
!15810 = !DILocation(line: 666, column: 20, scope: !15790)
!15811 = !DILocation(line: 666, column: 19, scope: !15790)
!15812 = !DILocation(line: 666, column: 3, scope: !15790)
!15813 = !DILocation(line: 666, column: 11, scope: !15790)
!15814 = !DILocation(line: 666, column: 14, scope: !15790)
!15815 = !DILocation(line: 667, column: 14, scope: !15790)
!15816 = !DILocation(line: 667, column: 21, scope: !15790)
!15817 = !DILocation(line: 667, column: 28, scope: !15790)
!15818 = !DILocation(line: 667, column: 35, scope: !15790)
!15819 = !DILocation(line: 667, column: 3, scope: !15790)
!15820 = !DILocation(line: 668, column: 17, scope: !15790)
!15821 = !DILocation(line: 668, column: 21, scope: !15790)
!15822 = !DILocation(line: 668, column: 20, scope: !15790)
!15823 = !DILocation(line: 668, column: 3, scope: !15790)
!15824 = !DILocation(line: 668, column: 11, scope: !15790)
!15825 = !DILocation(line: 668, column: 14, scope: !15790)
!15826 = !DILocation(line: 669, column: 17, scope: !15790)
!15827 = !DILocation(line: 669, column: 21, scope: !15790)
!15828 = !DILocation(line: 669, column: 20, scope: !15790)
!15829 = !DILocation(line: 669, column: 3, scope: !15790)
!15830 = !DILocation(line: 669, column: 11, scope: !15790)
!15831 = !DILocation(line: 669, column: 14, scope: !15790)
!15832 = !DILocation(line: 670, column: 17, scope: !15790)
!15833 = !DILocation(line: 670, column: 21, scope: !15790)
!15834 = !DILocation(line: 670, column: 20, scope: !15790)
!15835 = !DILocation(line: 670, column: 3, scope: !15790)
!15836 = !DILocation(line: 670, column: 11, scope: !15790)
!15837 = !DILocation(line: 670, column: 14, scope: !15790)
!15838 = !DILocation(line: 671, column: 14, scope: !15790)
!15839 = !DILocation(line: 671, column: 21, scope: !15790)
!15840 = !DILocation(line: 671, column: 28, scope: !15790)
!15841 = !DILocation(line: 671, column: 35, scope: !15790)
!15842 = !DILocation(line: 671, column: 3, scope: !15790)
!15843 = !DILocation(line: 672, column: 17, scope: !15790)
!15844 = !DILocation(line: 672, column: 21, scope: !15790)
!15845 = !DILocation(line: 672, column: 20, scope: !15790)
!15846 = !DILocation(line: 672, column: 3, scope: !15790)
!15847 = !DILocation(line: 672, column: 11, scope: !15790)
!15848 = !DILocation(line: 672, column: 14, scope: !15790)
!15849 = !DILocation(line: 673, column: 17, scope: !15790)
!15850 = !DILocation(line: 673, column: 21, scope: !15790)
!15851 = !DILocation(line: 673, column: 20, scope: !15790)
!15852 = !DILocation(line: 673, column: 3, scope: !15790)
!15853 = !DILocation(line: 673, column: 11, scope: !15790)
!15854 = !DILocation(line: 673, column: 14, scope: !15790)
!15855 = !DILocation(line: 674, column: 17, scope: !15790)
!15856 = !DILocation(line: 674, column: 21, scope: !15790)
!15857 = !DILocation(line: 674, column: 20, scope: !15790)
!15858 = !DILocation(line: 674, column: 3, scope: !15790)
!15859 = !DILocation(line: 674, column: 11, scope: !15790)
!15860 = !DILocation(line: 674, column: 14, scope: !15790)
!15861 = !DILocation(line: 675, column: 14, scope: !15790)
!15862 = !DILocation(line: 675, column: 21, scope: !15790)
!15863 = !DILocation(line: 675, column: 29, scope: !15790)
!15864 = !DILocation(line: 675, column: 37, scope: !15790)
!15865 = !DILocation(line: 675, column: 3, scope: !15790)
!15866 = !DILocation(line: 676, column: 17, scope: !15790)
!15867 = !DILocation(line: 676, column: 21, scope: !15790)
!15868 = !DILocation(line: 676, column: 20, scope: !15790)
!15869 = !DILocation(line: 676, column: 3, scope: !15790)
!15870 = !DILocation(line: 676, column: 11, scope: !15790)
!15871 = !DILocation(line: 676, column: 14, scope: !15790)
!15872 = !DILocation(line: 677, column: 17, scope: !15790)
!15873 = !DILocation(line: 677, column: 21, scope: !15790)
!15874 = !DILocation(line: 677, column: 20, scope: !15790)
!15875 = !DILocation(line: 677, column: 3, scope: !15790)
!15876 = !DILocation(line: 677, column: 11, scope: !15790)
!15877 = !DILocation(line: 677, column: 14, scope: !15790)
!15878 = !DILocation(line: 678, column: 17, scope: !15790)
!15879 = !DILocation(line: 678, column: 21, scope: !15790)
!15880 = !DILocation(line: 678, column: 20, scope: !15790)
!15881 = !DILocation(line: 678, column: 3, scope: !15790)
!15882 = !DILocation(line: 678, column: 11, scope: !15790)
!15883 = !DILocation(line: 678, column: 14, scope: !15790)
!15884 = !DILocation(line: 679, column: 7, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 679, column: 7)
!15886 = !DILocation(line: 679, column: 12, scope: !15885)
!15887 = !DILocation(line: 679, column: 22, scope: !15885)
!15888 = !DILocation(line: 679, column: 7, scope: !15790)
!15889 = !DILocalVariable(name: "t1", scope: !15890, file: !3, line: 680, type: !91)
!15890 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 679, column: 27)
!15891 = !DILocation(line: 680, column: 10, scope: !15890)
!15892 = !DILocation(line: 680, column: 16, scope: !15890)
!15893 = !DILocation(line: 680, column: 22, scope: !15890)
!15894 = !DILocation(line: 680, column: 21, scope: !15890)
!15895 = !DILocation(line: 680, column: 28, scope: !15890)
!15896 = !DILocation(line: 681, column: 8, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15890, file: !3, line: 681, column: 8)
!15898 = !DILocation(line: 681, column: 10, scope: !15897)
!15899 = !DILocation(line: 681, column: 8, scope: !15890)
!15900 = !DILocation(line: 681, column: 16, scope: !15897)
!15901 = !DILocation(line: 681, column: 14, scope: !15897)
!15902 = !DILocation(line: 682, column: 8, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15890, file: !3, line: 682, column: 8)
!15904 = !DILocation(line: 682, column: 13, scope: !15903)
!15905 = !DILocation(line: 682, column: 23, scope: !15903)
!15906 = !DILocation(line: 682, column: 8, scope: !15890)
!15907 = !DILocation(line: 682, column: 32, scope: !15903)
!15908 = !DILocation(line: 682, column: 40, scope: !15903)
!15909 = !DILocation(line: 682, column: 30, scope: !15903)
!15910 = !DILocation(line: 682, column: 28, scope: !15903)
!15911 = !DILocation(line: 682, column: 54, scope: !15903)
!15912 = !DILocation(line: 682, column: 52, scope: !15903)
!15913 = !DILocation(line: 683, column: 18, scope: !15890)
!15914 = !DILocation(line: 683, column: 4, scope: !15890)
!15915 = !DILocation(line: 683, column: 12, scope: !15890)
!15916 = !DILocation(line: 683, column: 15, scope: !15890)
!15917 = !DILocation(line: 684, column: 18, scope: !15890)
!15918 = !DILocation(line: 684, column: 4, scope: !15890)
!15919 = !DILocation(line: 684, column: 12, scope: !15890)
!15920 = !DILocation(line: 684, column: 15, scope: !15890)
!15921 = !DILocation(line: 685, column: 18, scope: !15890)
!15922 = !DILocation(line: 685, column: 4, scope: !15890)
!15923 = !DILocation(line: 685, column: 12, scope: !15890)
!15924 = !DILocation(line: 685, column: 15, scope: !15890)
!15925 = !DILocation(line: 686, column: 3, scope: !15890)
!15926 = !DILocation(line: 688, column: 18, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 687, column: 8)
!15928 = !DILocation(line: 688, column: 4, scope: !15927)
!15929 = !DILocation(line: 688, column: 12, scope: !15927)
!15930 = !DILocation(line: 688, column: 15, scope: !15927)
!15931 = !DILocation(line: 689, column: 18, scope: !15927)
!15932 = !DILocation(line: 689, column: 4, scope: !15927)
!15933 = !DILocation(line: 689, column: 12, scope: !15927)
!15934 = !DILocation(line: 689, column: 15, scope: !15927)
!15935 = !DILocation(line: 690, column: 18, scope: !15927)
!15936 = !DILocation(line: 690, column: 4, scope: !15927)
!15937 = !DILocation(line: 690, column: 12, scope: !15927)
!15938 = !DILocation(line: 690, column: 15, scope: !15927)
!15939 = !DILocation(line: 692, column: 2, scope: !15790)
!15940 = !DILocation(line: 694, column: 6, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 694, column: 6)
!15942 = !DILocation(line: 694, column: 14, scope: !15941)
!15943 = !DILocation(line: 694, column: 17, scope: !15941)
!15944 = !DILocation(line: 694, column: 6, scope: !15695)
!15945 = !DILocalVariable(name: "offs", scope: !15946, file: !3, line: 695, type: !91)
!15946 = distinct !DILexicalBlock(scope: !15941, file: !3, line: 694, column: 25)
!15947 = !DILocation(line: 695, column: 9, scope: !15946)
!15948 = !DILocation(line: 695, column: 15, scope: !15946)
!15949 = !DILocation(line: 695, column: 20, scope: !15946)
!15950 = !DILocation(line: 695, column: 26, scope: !15946)
!15951 = !DILocation(line: 695, column: 31, scope: !15946)
!15952 = !DILocation(line: 695, column: 25, scope: !15946)
!15953 = !DILocation(line: 698, column: 11, scope: !15946)
!15954 = !DILocation(line: 698, column: 23, scope: !15946)
!15955 = !DILocation(line: 698, column: 21, scope: !15946)
!15956 = !DILocation(line: 698, column: 29, scope: !15946)
!15957 = !DILocation(line: 698, column: 40, scope: !15946)
!15958 = !DILocation(line: 698, column: 51, scope: !15946)
!15959 = !DILocation(line: 698, column: 55, scope: !15946)
!15960 = !DILocation(line: 698, column: 59, scope: !15946)
!15961 = !DILocation(line: 698, column: 64, scope: !15946)
!15962 = !DILocation(line: 698, column: 74, scope: !15946)
!15963 = !DILocation(line: 698, column: 79, scope: !15946)
!15964 = !DILocation(line: 698, column: 3, scope: !15946)
!15965 = !DILocation(line: 699, column: 20, scope: !15946)
!15966 = !DILocation(line: 699, column: 31, scope: !15946)
!15967 = !DILocation(line: 699, column: 36, scope: !15946)
!15968 = !DILocation(line: 699, column: 42, scope: !15946)
!15969 = !DILocation(line: 699, column: 41, scope: !15946)
!15970 = !DILocation(line: 699, column: 50, scope: !15946)
!15971 = !DILocation(line: 699, column: 55, scope: !15946)
!15972 = !DILocation(line: 699, column: 61, scope: !15946)
!15973 = !DILocation(line: 699, column: 60, scope: !15946)
!15974 = !DILocation(line: 699, column: 48, scope: !15946)
!15975 = !DILocation(line: 699, column: 69, scope: !15946)
!15976 = !DILocation(line: 699, column: 74, scope: !15946)
!15977 = !DILocation(line: 699, column: 80, scope: !15946)
!15978 = !DILocation(line: 699, column: 79, scope: !15946)
!15979 = !DILocation(line: 699, column: 67, scope: !15946)
!15980 = !DILocation(line: 699, column: 88, scope: !15946)
!15981 = !DILocation(line: 699, column: 93, scope: !15946)
!15982 = !DILocation(line: 699, column: 99, scope: !15946)
!15983 = !DILocation(line: 699, column: 98, scope: !15946)
!15984 = !DILocation(line: 699, column: 86, scope: !15946)
!15985 = !DILocation(line: 699, column: 25, scope: !15946)
!15986 = !DILocation(line: 699, column: 23, scope: !15946)
!15987 = !DILocation(line: 699, column: 3, scope: !15946)
!15988 = !DILocation(line: 699, column: 11, scope: !15946)
!15989 = !DILocation(line: 699, column: 18, scope: !15946)
!15990 = !DILocation(line: 700, column: 11, scope: !15946)
!15991 = !DILocation(line: 700, column: 22, scope: !15946)
!15992 = !DILocation(line: 700, column: 34, scope: !15946)
!15993 = !DILocation(line: 700, column: 32, scope: !15946)
!15994 = !DILocation(line: 700, column: 40, scope: !15946)
!15995 = !DILocation(line: 700, column: 51, scope: !15946)
!15996 = !DILocation(line: 700, column: 55, scope: !15946)
!15997 = !DILocation(line: 700, column: 59, scope: !15946)
!15998 = !DILocation(line: 700, column: 64, scope: !15946)
!15999 = !DILocation(line: 700, column: 74, scope: !15946)
!16000 = !DILocation(line: 700, column: 79, scope: !15946)
!16001 = !DILocation(line: 700, column: 3, scope: !15946)
!16002 = !DILocation(line: 701, column: 20, scope: !15946)
!16003 = !DILocation(line: 701, column: 31, scope: !15946)
!16004 = !DILocation(line: 701, column: 36, scope: !15946)
!16005 = !DILocation(line: 701, column: 42, scope: !15946)
!16006 = !DILocation(line: 701, column: 41, scope: !15946)
!16007 = !DILocation(line: 701, column: 50, scope: !15946)
!16008 = !DILocation(line: 701, column: 55, scope: !15946)
!16009 = !DILocation(line: 701, column: 61, scope: !15946)
!16010 = !DILocation(line: 701, column: 60, scope: !15946)
!16011 = !DILocation(line: 701, column: 48, scope: !15946)
!16012 = !DILocation(line: 701, column: 69, scope: !15946)
!16013 = !DILocation(line: 701, column: 74, scope: !15946)
!16014 = !DILocation(line: 701, column: 80, scope: !15946)
!16015 = !DILocation(line: 701, column: 79, scope: !15946)
!16016 = !DILocation(line: 701, column: 67, scope: !15946)
!16017 = !DILocation(line: 701, column: 88, scope: !15946)
!16018 = !DILocation(line: 701, column: 93, scope: !15946)
!16019 = !DILocation(line: 701, column: 99, scope: !15946)
!16020 = !DILocation(line: 701, column: 98, scope: !15946)
!16021 = !DILocation(line: 701, column: 86, scope: !15946)
!16022 = !DILocation(line: 701, column: 25, scope: !15946)
!16023 = !DILocation(line: 701, column: 23, scope: !15946)
!16024 = !DILocation(line: 701, column: 3, scope: !15946)
!16025 = !DILocation(line: 701, column: 11, scope: !15946)
!16026 = !DILocation(line: 701, column: 18, scope: !15946)
!16027 = !DILocation(line: 702, column: 11, scope: !15946)
!16028 = !DILocation(line: 702, column: 22, scope: !15946)
!16029 = !DILocation(line: 702, column: 33, scope: !15946)
!16030 = !DILocation(line: 702, column: 45, scope: !15946)
!16031 = !DILocation(line: 702, column: 43, scope: !15946)
!16032 = !DILocation(line: 702, column: 51, scope: !15946)
!16033 = !DILocation(line: 702, column: 55, scope: !15946)
!16034 = !DILocation(line: 702, column: 59, scope: !15946)
!16035 = !DILocation(line: 702, column: 64, scope: !15946)
!16036 = !DILocation(line: 702, column: 74, scope: !15946)
!16037 = !DILocation(line: 702, column: 79, scope: !15946)
!16038 = !DILocation(line: 702, column: 3, scope: !15946)
!16039 = !DILocation(line: 703, column: 20, scope: !15946)
!16040 = !DILocation(line: 703, column: 31, scope: !15946)
!16041 = !DILocation(line: 703, column: 36, scope: !15946)
!16042 = !DILocation(line: 703, column: 42, scope: !15946)
!16043 = !DILocation(line: 703, column: 41, scope: !15946)
!16044 = !DILocation(line: 703, column: 50, scope: !15946)
!16045 = !DILocation(line: 703, column: 55, scope: !15946)
!16046 = !DILocation(line: 703, column: 61, scope: !15946)
!16047 = !DILocation(line: 703, column: 60, scope: !15946)
!16048 = !DILocation(line: 703, column: 48, scope: !15946)
!16049 = !DILocation(line: 703, column: 69, scope: !15946)
!16050 = !DILocation(line: 703, column: 74, scope: !15946)
!16051 = !DILocation(line: 703, column: 80, scope: !15946)
!16052 = !DILocation(line: 703, column: 79, scope: !15946)
!16053 = !DILocation(line: 703, column: 67, scope: !15946)
!16054 = !DILocation(line: 703, column: 88, scope: !15946)
!16055 = !DILocation(line: 703, column: 93, scope: !15946)
!16056 = !DILocation(line: 703, column: 99, scope: !15946)
!16057 = !DILocation(line: 703, column: 98, scope: !15946)
!16058 = !DILocation(line: 703, column: 86, scope: !15946)
!16059 = !DILocation(line: 703, column: 25, scope: !15946)
!16060 = !DILocation(line: 703, column: 23, scope: !15946)
!16061 = !DILocation(line: 703, column: 3, scope: !15946)
!16062 = !DILocation(line: 703, column: 11, scope: !15946)
!16063 = !DILocation(line: 703, column: 18, scope: !15946)
!16064 = !DILocation(line: 705, column: 23, scope: !15946)
!16065 = !DILocation(line: 705, column: 28, scope: !15946)
!16066 = !DILocation(line: 705, column: 3, scope: !15946)
!16067 = !DILocation(line: 706, column: 6, scope: !15946)
!16068 = !DILocation(line: 707, column: 2, scope: !15946)
!16069 = !DILocation(line: 709, column: 6, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 709, column: 6)
!16071 = !DILocation(line: 709, column: 11, scope: !16070)
!16072 = !DILocation(line: 709, column: 6, scope: !15695)
!16073 = !DILocation(line: 710, column: 3, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16070, file: !3, line: 709, column: 23)
!16075 = !DILocation(line: 710, column: 3, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 710, column: 3)
!16077 = !DILocation(line: 710, column: 3, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 710, column: 3)
!16079 = distinct !DILexicalBlock(scope: !16076, file: !3, line: 710, column: 3)
!16080 = !DILocation(line: 710, column: 3, scope: !16079)
!16081 = !DILocation(line: 710, column: 3, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 710, column: 3)
!16083 = !DILocation(line: 710, column: 3, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 710, column: 3)
!16085 = !DILocation(line: 710, column: 3, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 710, column: 3)
!16087 = !DILocalVariable(name: "_hsv", scope: !16088, file: !3, line: 710, type: !344)
!16088 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 710, column: 3)
!16089 = !DILocation(line: 710, column: 3, scope: !16088)
!16090 = !DILocation(line: 711, column: 3, scope: !16074)
!16091 = !DILocation(line: 711, column: 11, scope: !16074)
!16092 = !DILocation(line: 711, column: 14, scope: !16074)
!16093 = !DILocation(line: 712, column: 11, scope: !16074)
!16094 = !DILocation(line: 712, column: 14, scope: !16074)
!16095 = !DILocation(line: 712, column: 10, scope: !16074)
!16096 = !DILocation(line: 712, column: 3, scope: !16074)
!16097 = !DILocation(line: 715, column: 2, scope: !15695)
!16098 = !DILocation(line: 715, column: 2, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 715, column: 2)
!16100 = !DILocation(line: 715, column: 2, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16102, file: !3, line: 715, column: 2)
!16102 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 715, column: 2)
!16103 = !DILocation(line: 715, column: 2, scope: !16102)
!16104 = !DILocation(line: 715, column: 2, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16101, file: !3, line: 715, column: 2)
!16106 = !DILocation(line: 717, column: 9, scope: !15695)
!16107 = !DILocation(line: 717, column: 2, scope: !15695)
!16108 = !DILocation(line: 719, column: 1, scope: !15695)
!16109 = distinct !DISubprogram(name: "mg_distNoiseTex", scope: !3, file: !3, line: 618, type: !15296, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16110 = !DILocalVariable(name: "tex", arg: 1, scope: !16109, file: !3, line: 618, type: !3402)
!16111 = !DILocation(line: 618, column: 35, scope: !16109)
!16112 = !DILocalVariable(name: "texvec", arg: 2, scope: !16109, file: !3, line: 618, type: !954)
!16113 = !DILocation(line: 618, column: 52, scope: !16109)
!16114 = !DILocalVariable(name: "texres", arg: 3, scope: !16109, file: !3, line: 618, type: !3576)
!16115 = !DILocation(line: 618, column: 74, scope: !16109)
!16116 = !DILocalVariable(name: "rv", scope: !16109, file: !3, line: 620, type: !92)
!16117 = !DILocation(line: 620, column: 6, scope: !16109)
!16118 = !DILocation(line: 622, column: 27, scope: !16109)
!16119 = !DILocation(line: 622, column: 38, scope: !16109)
!16120 = !DILocation(line: 622, column: 49, scope: !16109)
!16121 = !DILocation(line: 622, column: 60, scope: !16109)
!16122 = !DILocation(line: 622, column: 65, scope: !16109)
!16123 = !DILocation(line: 622, column: 78, scope: !16109)
!16124 = !DILocation(line: 622, column: 83, scope: !16109)
!16125 = !DILocation(line: 622, column: 95, scope: !16109)
!16126 = !DILocation(line: 622, column: 100, scope: !16109)
!16127 = !DILocation(line: 622, column: 16, scope: !16109)
!16128 = !DILocation(line: 622, column: 2, scope: !16109)
!16129 = !DILocation(line: 622, column: 10, scope: !16109)
!16130 = !DILocation(line: 622, column: 14, scope: !16109)
!16131 = !DILocation(line: 624, column: 6, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 624, column: 6)
!16133 = !DILocation(line: 624, column: 14, scope: !16132)
!16134 = !DILocation(line: 624, column: 17, scope: !16132)
!16135 = !DILocation(line: 624, column: 6, scope: !16109)
!16136 = !DILocalVariable(name: "offs", scope: !16137, file: !3, line: 625, type: !91)
!16137 = distinct !DILexicalBlock(scope: !16132, file: !3, line: 624, column: 25)
!16138 = !DILocation(line: 625, column: 9, scope: !16137)
!16139 = !DILocation(line: 625, column: 15, scope: !16137)
!16140 = !DILocation(line: 625, column: 20, scope: !16137)
!16141 = !DILocation(line: 625, column: 26, scope: !16137)
!16142 = !DILocation(line: 625, column: 31, scope: !16137)
!16143 = !DILocation(line: 625, column: 25, scope: !16137)
!16144 = !DILocation(line: 628, column: 31, scope: !16137)
!16145 = !DILocation(line: 628, column: 43, scope: !16137)
!16146 = !DILocation(line: 628, column: 41, scope: !16137)
!16147 = !DILocation(line: 628, column: 49, scope: !16137)
!16148 = !DILocation(line: 628, column: 60, scope: !16137)
!16149 = !DILocation(line: 628, column: 71, scope: !16137)
!16150 = !DILocation(line: 628, column: 76, scope: !16137)
!16151 = !DILocation(line: 628, column: 89, scope: !16137)
!16152 = !DILocation(line: 628, column: 94, scope: !16137)
!16153 = !DILocation(line: 628, column: 106, scope: !16137)
!16154 = !DILocation(line: 628, column: 111, scope: !16137)
!16155 = !DILocation(line: 628, column: 20, scope: !16137)
!16156 = !DILocation(line: 628, column: 3, scope: !16137)
!16157 = !DILocation(line: 628, column: 11, scope: !16137)
!16158 = !DILocation(line: 628, column: 18, scope: !16137)
!16159 = !DILocation(line: 629, column: 31, scope: !16137)
!16160 = !DILocation(line: 629, column: 42, scope: !16137)
!16161 = !DILocation(line: 629, column: 54, scope: !16137)
!16162 = !DILocation(line: 629, column: 52, scope: !16137)
!16163 = !DILocation(line: 629, column: 60, scope: !16137)
!16164 = !DILocation(line: 629, column: 71, scope: !16137)
!16165 = !DILocation(line: 629, column: 76, scope: !16137)
!16166 = !DILocation(line: 629, column: 89, scope: !16137)
!16167 = !DILocation(line: 629, column: 94, scope: !16137)
!16168 = !DILocation(line: 629, column: 106, scope: !16137)
!16169 = !DILocation(line: 629, column: 111, scope: !16137)
!16170 = !DILocation(line: 629, column: 20, scope: !16137)
!16171 = !DILocation(line: 629, column: 3, scope: !16137)
!16172 = !DILocation(line: 629, column: 11, scope: !16137)
!16173 = !DILocation(line: 629, column: 18, scope: !16137)
!16174 = !DILocation(line: 630, column: 31, scope: !16137)
!16175 = !DILocation(line: 630, column: 42, scope: !16137)
!16176 = !DILocation(line: 630, column: 53, scope: !16137)
!16177 = !DILocation(line: 630, column: 65, scope: !16137)
!16178 = !DILocation(line: 630, column: 63, scope: !16137)
!16179 = !DILocation(line: 630, column: 71, scope: !16137)
!16180 = !DILocation(line: 630, column: 76, scope: !16137)
!16181 = !DILocation(line: 630, column: 89, scope: !16137)
!16182 = !DILocation(line: 630, column: 94, scope: !16137)
!16183 = !DILocation(line: 630, column: 106, scope: !16137)
!16184 = !DILocation(line: 630, column: 111, scope: !16137)
!16185 = !DILocation(line: 630, column: 20, scope: !16137)
!16186 = !DILocation(line: 630, column: 3, scope: !16137)
!16187 = !DILocation(line: 630, column: 11, scope: !16137)
!16188 = !DILocation(line: 630, column: 18, scope: !16137)
!16189 = !DILocation(line: 632, column: 23, scope: !16137)
!16190 = !DILocation(line: 632, column: 28, scope: !16137)
!16191 = !DILocation(line: 632, column: 3, scope: !16137)
!16192 = !DILocation(line: 633, column: 6, scope: !16137)
!16193 = !DILocation(line: 634, column: 2, scope: !16137)
!16194 = !DILocation(line: 636, column: 2, scope: !16109)
!16195 = !DILocation(line: 636, column: 2, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 636, column: 2)
!16197 = !DILocation(line: 636, column: 2, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16199, file: !3, line: 636, column: 2)
!16199 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 636, column: 2)
!16200 = !DILocation(line: 636, column: 2, scope: !16199)
!16201 = !DILocation(line: 636, column: 2, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16198, file: !3, line: 636, column: 2)
!16203 = !DILocation(line: 639, column: 9, scope: !16109)
!16204 = !DILocation(line: 639, column: 2, scope: !16109)
!16205 = distinct !DISubprogram(name: "tex_normal_derivate", scope: !3, file: !3, line: 163, type: !16206, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16206 = !DISubroutineType(types: !16207)
!16207 = !{null, !3402, !3576}
!16208 = !DILocalVariable(name: "tex", arg: 1, scope: !16205, file: !3, line: 163, type: !3402)
!16209 = !DILocation(line: 163, column: 38, scope: !16205)
!16210 = !DILocalVariable(name: "texres", arg: 2, scope: !16205, file: !3, line: 163, type: !3576)
!16211 = !DILocation(line: 163, column: 54, scope: !16205)
!16212 = !DILocation(line: 165, column: 6, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16205, file: !3, line: 165, column: 6)
!16214 = !DILocation(line: 165, column: 11, scope: !16213)
!16215 = !DILocation(line: 165, column: 16, scope: !16213)
!16216 = !DILocation(line: 165, column: 6, scope: !16205)
!16217 = !DILocalVariable(name: "col", scope: !16218, file: !3, line: 166, type: !426)
!16218 = distinct !DILexicalBlock(scope: !16213, file: !3, line: 165, column: 33)
!16219 = !DILocation(line: 166, column: 9, scope: !16218)
!16220 = !DILocation(line: 167, column: 20, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16218, file: !3, line: 167, column: 7)
!16222 = !DILocation(line: 167, column: 25, scope: !16221)
!16223 = !DILocation(line: 167, column: 31, scope: !16221)
!16224 = !DILocation(line: 167, column: 39, scope: !16221)
!16225 = !DILocation(line: 167, column: 44, scope: !16221)
!16226 = !DILocation(line: 167, column: 7, scope: !16221)
!16227 = !DILocation(line: 167, column: 7, scope: !16218)
!16228 = !DILocalVariable(name: "fac0", scope: !16229, file: !3, line: 168, type: !91)
!16229 = distinct !DILexicalBlock(scope: !16221, file: !3, line: 167, column: 50)
!16230 = !DILocation(line: 168, column: 10, scope: !16229)
!16231 = !DILocalVariable(name: "fac1", scope: !16229, file: !3, line: 168, type: !91)
!16232 = !DILocation(line: 168, column: 16, scope: !16229)
!16233 = !DILocalVariable(name: "fac2", scope: !16229, file: !3, line: 168, type: !91)
!16234 = !DILocation(line: 168, column: 22, scope: !16229)
!16235 = !DILocalVariable(name: "fac3", scope: !16229, file: !3, line: 168, type: !91)
!16236 = !DILocation(line: 168, column: 28, scope: !16229)
!16237 = !DILocation(line: 170, column: 11, scope: !16229)
!16238 = !DILocation(line: 170, column: 18, scope: !16229)
!16239 = !DILocation(line: 170, column: 17, scope: !16229)
!16240 = !DILocation(line: 170, column: 25, scope: !16229)
!16241 = !DILocation(line: 170, column: 24, scope: !16229)
!16242 = !DILocation(line: 170, column: 8, scope: !16229)
!16243 = !DILocation(line: 171, column: 17, scope: !16229)
!16244 = !DILocation(line: 171, column: 22, scope: !16229)
!16245 = !DILocation(line: 171, column: 28, scope: !16229)
!16246 = !DILocation(line: 171, column: 36, scope: !16229)
!16247 = !DILocation(line: 171, column: 44, scope: !16229)
!16248 = !DILocation(line: 171, column: 4, scope: !16229)
!16249 = !DILocation(line: 172, column: 11, scope: !16229)
!16250 = !DILocation(line: 172, column: 18, scope: !16229)
!16251 = !DILocation(line: 172, column: 17, scope: !16229)
!16252 = !DILocation(line: 172, column: 25, scope: !16229)
!16253 = !DILocation(line: 172, column: 24, scope: !16229)
!16254 = !DILocation(line: 172, column: 8, scope: !16229)
!16255 = !DILocation(line: 173, column: 17, scope: !16229)
!16256 = !DILocation(line: 173, column: 22, scope: !16229)
!16257 = !DILocation(line: 173, column: 28, scope: !16229)
!16258 = !DILocation(line: 173, column: 36, scope: !16229)
!16259 = !DILocation(line: 173, column: 44, scope: !16229)
!16260 = !DILocation(line: 173, column: 4, scope: !16229)
!16261 = !DILocation(line: 174, column: 11, scope: !16229)
!16262 = !DILocation(line: 174, column: 18, scope: !16229)
!16263 = !DILocation(line: 174, column: 17, scope: !16229)
!16264 = !DILocation(line: 174, column: 25, scope: !16229)
!16265 = !DILocation(line: 174, column: 24, scope: !16229)
!16266 = !DILocation(line: 174, column: 8, scope: !16229)
!16267 = !DILocation(line: 175, column: 17, scope: !16229)
!16268 = !DILocation(line: 175, column: 22, scope: !16229)
!16269 = !DILocation(line: 175, column: 28, scope: !16229)
!16270 = !DILocation(line: 175, column: 36, scope: !16229)
!16271 = !DILocation(line: 175, column: 44, scope: !16229)
!16272 = !DILocation(line: 175, column: 4, scope: !16229)
!16273 = !DILocation(line: 176, column: 11, scope: !16229)
!16274 = !DILocation(line: 176, column: 18, scope: !16229)
!16275 = !DILocation(line: 176, column: 17, scope: !16229)
!16276 = !DILocation(line: 176, column: 25, scope: !16229)
!16277 = !DILocation(line: 176, column: 24, scope: !16229)
!16278 = !DILocation(line: 176, column: 8, scope: !16229)
!16279 = !DILocation(line: 178, column: 21, scope: !16229)
!16280 = !DILocation(line: 178, column: 28, scope: !16229)
!16281 = !DILocation(line: 178, column: 26, scope: !16229)
!16282 = !DILocation(line: 178, column: 34, scope: !16229)
!16283 = !DILocation(line: 178, column: 4, scope: !16229)
!16284 = !DILocation(line: 178, column: 12, scope: !16229)
!16285 = !DILocation(line: 178, column: 18, scope: !16229)
!16286 = !DILocation(line: 179, column: 21, scope: !16229)
!16287 = !DILocation(line: 179, column: 28, scope: !16229)
!16288 = !DILocation(line: 179, column: 26, scope: !16229)
!16289 = !DILocation(line: 179, column: 34, scope: !16229)
!16290 = !DILocation(line: 179, column: 4, scope: !16229)
!16291 = !DILocation(line: 179, column: 12, scope: !16229)
!16292 = !DILocation(line: 179, column: 18, scope: !16229)
!16293 = !DILocation(line: 180, column: 21, scope: !16229)
!16294 = !DILocation(line: 180, column: 28, scope: !16229)
!16295 = !DILocation(line: 180, column: 26, scope: !16229)
!16296 = !DILocation(line: 180, column: 34, scope: !16229)
!16297 = !DILocation(line: 180, column: 4, scope: !16229)
!16298 = !DILocation(line: 180, column: 12, scope: !16229)
!16299 = !DILocation(line: 180, column: 18, scope: !16229)
!16300 = !DILocation(line: 182, column: 4, scope: !16229)
!16301 = !DILocation(line: 184, column: 2, scope: !16218)
!16302 = !DILocation(line: 185, column: 18, scope: !16205)
!16303 = !DILocation(line: 185, column: 26, scope: !16205)
!16304 = !DILocation(line: 185, column: 32, scope: !16205)
!16305 = !DILocation(line: 185, column: 40, scope: !16205)
!16306 = !DILocation(line: 185, column: 30, scope: !16205)
!16307 = !DILocation(line: 185, column: 2, scope: !16205)
!16308 = !DILocation(line: 185, column: 10, scope: !16205)
!16309 = !DILocation(line: 185, column: 16, scope: !16205)
!16310 = !DILocation(line: 186, column: 18, scope: !16205)
!16311 = !DILocation(line: 186, column: 26, scope: !16205)
!16312 = !DILocation(line: 186, column: 32, scope: !16205)
!16313 = !DILocation(line: 186, column: 40, scope: !16205)
!16314 = !DILocation(line: 186, column: 30, scope: !16205)
!16315 = !DILocation(line: 186, column: 2, scope: !16205)
!16316 = !DILocation(line: 186, column: 10, scope: !16205)
!16317 = !DILocation(line: 186, column: 16, scope: !16205)
!16318 = !DILocation(line: 187, column: 18, scope: !16205)
!16319 = !DILocation(line: 187, column: 26, scope: !16205)
!16320 = !DILocation(line: 187, column: 32, scope: !16205)
!16321 = !DILocation(line: 187, column: 40, scope: !16205)
!16322 = !DILocation(line: 187, column: 30, scope: !16205)
!16323 = !DILocation(line: 187, column: 2, scope: !16205)
!16324 = !DILocation(line: 187, column: 10, scope: !16205)
!16325 = !DILocation(line: 187, column: 16, scope: !16205)
!16326 = !DILocation(line: 188, column: 1, scope: !16205)
!16327 = distinct !DISubprogram(name: "wood_int", scope: !3, file: !3, line: 308, type: !16328, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{!91, !3402, !91, !91, !91}
!16330 = !DILocalVariable(name: "tex", arg: 1, scope: !16327, file: !3, line: 308, type: !3402)
!16331 = !DILocation(line: 308, column: 28, scope: !16327)
!16332 = !DILocalVariable(name: "x", arg: 2, scope: !16327, file: !3, line: 308, type: !91)
!16333 = !DILocation(line: 308, column: 39, scope: !16327)
!16334 = !DILocalVariable(name: "y", arg: 3, scope: !16327, file: !3, line: 308, type: !91)
!16335 = !DILocation(line: 308, column: 48, scope: !16327)
!16336 = !DILocalVariable(name: "z", arg: 4, scope: !16327, file: !3, line: 308, type: !91)
!16337 = !DILocation(line: 308, column: 57, scope: !16327)
!16338 = !DILocalVariable(name: "wi", scope: !16327, file: !3, line: 310, type: !91)
!16339 = !DILocation(line: 310, column: 8, scope: !16327)
!16340 = !DILocalVariable(name: "wf", scope: !16327, file: !3, line: 311, type: !141)
!16341 = !DILocation(line: 311, column: 8, scope: !16327)
!16342 = !DILocation(line: 311, column: 13, scope: !16327)
!16343 = !DILocation(line: 311, column: 18, scope: !16327)
!16344 = !DILocalVariable(name: "wt", scope: !16327, file: !3, line: 312, type: !141)
!16345 = !DILocation(line: 312, column: 8, scope: !16327)
!16346 = !DILocation(line: 312, column: 13, scope: !16327)
!16347 = !DILocation(line: 312, column: 18, scope: !16327)
!16348 = !DILocalVariable(name: "waveform", scope: !16327, file: !3, line: 314, type: !16349)
!16349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16350, size: 192, elements: !345)
!16350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12185, size: 64)
!16351 = !DILocation(line: 314, column: 10, scope: !16327)
!16352 = !DILocation(line: 315, column: 2, scope: !16327)
!16353 = !DILocation(line: 315, column: 14, scope: !16327)
!16354 = !DILocation(line: 316, column: 2, scope: !16327)
!16355 = !DILocation(line: 316, column: 14, scope: !16327)
!16356 = !DILocation(line: 317, column: 2, scope: !16327)
!16357 = !DILocation(line: 317, column: 14, scope: !16327)
!16358 = !DILocation(line: 319, column: 7, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 319, column: 6)
!16360 = !DILocation(line: 319, column: 9, scope: !16359)
!16361 = !DILocation(line: 319, column: 19, scope: !16359)
!16362 = !DILocation(line: 319, column: 23, scope: !16359)
!16363 = !DILocation(line: 319, column: 25, scope: !16359)
!16364 = !DILocation(line: 319, column: 6, scope: !16327)
!16365 = !DILocation(line: 319, column: 38, scope: !16359)
!16366 = !DILocation(line: 319, column: 36, scope: !16359)
!16367 = !DILocation(line: 321, column: 6, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 321, column: 6)
!16369 = !DILocation(line: 321, column: 8, scope: !16368)
!16370 = !DILocation(line: 321, column: 6, scope: !16327)
!16371 = !DILocation(line: 322, column: 17, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16368, file: !3, line: 321, column: 20)
!16373 = !DILocation(line: 322, column: 8, scope: !16372)
!16374 = !DILocation(line: 322, column: 22, scope: !16372)
!16375 = !DILocation(line: 322, column: 26, scope: !16372)
!16376 = !DILocation(line: 322, column: 24, scope: !16372)
!16377 = !DILocation(line: 322, column: 30, scope: !16372)
!16378 = !DILocation(line: 322, column: 28, scope: !16372)
!16379 = !DILocation(line: 322, column: 32, scope: !16372)
!16380 = !DILocation(line: 322, column: 6, scope: !16372)
!16381 = !DILocation(line: 323, column: 2, scope: !16372)
!16382 = !DILocation(line: 324, column: 11, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16368, file: !3, line: 324, column: 11)
!16384 = !DILocation(line: 324, column: 13, scope: !16383)
!16385 = !DILocation(line: 324, column: 11, scope: !16368)
!16386 = !DILocation(line: 325, column: 17, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16383, file: !3, line: 324, column: 25)
!16388 = !DILocation(line: 325, column: 8, scope: !16387)
!16389 = !DILocation(line: 325, column: 27, scope: !16387)
!16390 = !DILocation(line: 325, column: 29, scope: !16387)
!16391 = !DILocation(line: 325, column: 28, scope: !16387)
!16392 = !DILocation(line: 325, column: 33, scope: !16387)
!16393 = !DILocation(line: 325, column: 35, scope: !16387)
!16394 = !DILocation(line: 325, column: 34, scope: !16387)
!16395 = !DILocation(line: 325, column: 31, scope: !16387)
!16396 = !DILocation(line: 325, column: 39, scope: !16387)
!16397 = !DILocation(line: 325, column: 41, scope: !16387)
!16398 = !DILocation(line: 325, column: 40, scope: !16387)
!16399 = !DILocation(line: 325, column: 37, scope: !16387)
!16400 = !DILocation(line: 325, column: 21, scope: !16387)
!16401 = !DILocation(line: 325, column: 43, scope: !16387)
!16402 = !DILocation(line: 325, column: 6, scope: !16387)
!16403 = !DILocation(line: 326, column: 2, scope: !16387)
!16404 = !DILocation(line: 327, column: 11, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16383, file: !3, line: 327, column: 11)
!16406 = !DILocation(line: 327, column: 13, scope: !16405)
!16407 = !DILocation(line: 327, column: 11, scope: !16383)
!16408 = !DILocation(line: 328, column: 8, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 327, column: 30)
!16410 = !DILocation(line: 328, column: 13, scope: !16409)
!16411 = !DILocation(line: 328, column: 31, scope: !16409)
!16412 = !DILocation(line: 328, column: 36, scope: !16409)
!16413 = !DILocation(line: 328, column: 47, scope: !16409)
!16414 = !DILocation(line: 328, column: 50, scope: !16409)
!16415 = !DILocation(line: 328, column: 53, scope: !16409)
!16416 = !DILocation(line: 328, column: 57, scope: !16409)
!16417 = !DILocation(line: 328, column: 62, scope: !16409)
!16418 = !DILocation(line: 328, column: 71, scope: !16409)
!16419 = !DILocation(line: 328, column: 89, scope: !16409)
!16420 = !DILocation(line: 328, column: 94, scope: !16409)
!16421 = !DILocation(line: 328, column: 20, scope: !16409)
!16422 = !DILocation(line: 328, column: 19, scope: !16409)
!16423 = !DILocation(line: 328, column: 6, scope: !16409)
!16424 = !DILocation(line: 329, column: 17, scope: !16409)
!16425 = !DILocation(line: 329, column: 8, scope: !16409)
!16426 = !DILocation(line: 329, column: 22, scope: !16409)
!16427 = !DILocation(line: 329, column: 26, scope: !16409)
!16428 = !DILocation(line: 329, column: 24, scope: !16409)
!16429 = !DILocation(line: 329, column: 30, scope: !16409)
!16430 = !DILocation(line: 329, column: 28, scope: !16409)
!16431 = !DILocation(line: 329, column: 32, scope: !16409)
!16432 = !DILocation(line: 329, column: 41, scope: !16409)
!16433 = !DILocation(line: 329, column: 39, scope: !16409)
!16434 = !DILocation(line: 329, column: 6, scope: !16409)
!16435 = !DILocation(line: 330, column: 2, scope: !16409)
!16436 = !DILocation(line: 331, column: 11, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 331, column: 11)
!16438 = !DILocation(line: 331, column: 13, scope: !16437)
!16439 = !DILocation(line: 331, column: 11, scope: !16405)
!16440 = !DILocation(line: 332, column: 8, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16437, file: !3, line: 331, column: 30)
!16442 = !DILocation(line: 332, column: 13, scope: !16441)
!16443 = !DILocation(line: 332, column: 31, scope: !16441)
!16444 = !DILocation(line: 332, column: 36, scope: !16441)
!16445 = !DILocation(line: 332, column: 47, scope: !16441)
!16446 = !DILocation(line: 332, column: 50, scope: !16441)
!16447 = !DILocation(line: 332, column: 53, scope: !16441)
!16448 = !DILocation(line: 332, column: 57, scope: !16441)
!16449 = !DILocation(line: 332, column: 62, scope: !16441)
!16450 = !DILocation(line: 332, column: 71, scope: !16441)
!16451 = !DILocation(line: 332, column: 89, scope: !16441)
!16452 = !DILocation(line: 332, column: 94, scope: !16441)
!16453 = !DILocation(line: 332, column: 20, scope: !16441)
!16454 = !DILocation(line: 332, column: 19, scope: !16441)
!16455 = !DILocation(line: 332, column: 6, scope: !16441)
!16456 = !DILocation(line: 333, column: 17, scope: !16441)
!16457 = !DILocation(line: 333, column: 8, scope: !16441)
!16458 = !DILocation(line: 333, column: 27, scope: !16441)
!16459 = !DILocation(line: 333, column: 29, scope: !16441)
!16460 = !DILocation(line: 333, column: 28, scope: !16441)
!16461 = !DILocation(line: 333, column: 33, scope: !16441)
!16462 = !DILocation(line: 333, column: 35, scope: !16441)
!16463 = !DILocation(line: 333, column: 34, scope: !16441)
!16464 = !DILocation(line: 333, column: 31, scope: !16441)
!16465 = !DILocation(line: 333, column: 39, scope: !16441)
!16466 = !DILocation(line: 333, column: 41, scope: !16441)
!16467 = !DILocation(line: 333, column: 40, scope: !16441)
!16468 = !DILocation(line: 333, column: 37, scope: !16441)
!16469 = !DILocation(line: 333, column: 21, scope: !16441)
!16470 = !DILocation(line: 333, column: 43, scope: !16441)
!16471 = !DILocation(line: 333, column: 52, scope: !16441)
!16472 = !DILocation(line: 333, column: 50, scope: !16441)
!16473 = !DILocation(line: 333, column: 6, scope: !16441)
!16474 = !DILocation(line: 334, column: 2, scope: !16441)
!16475 = !DILocation(line: 336, column: 9, scope: !16327)
!16476 = !DILocation(line: 336, column: 2, scope: !16327)
!16477 = distinct !DISubprogram(name: "tex_sin", scope: !3, file: !3, line: 278, type: !12185, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16478 = !DILocalVariable(name: "a", arg: 1, scope: !16477, file: !3, line: 278, type: !91)
!16479 = !DILocation(line: 278, column: 28, scope: !16477)
!16480 = !DILocation(line: 280, column: 23, scope: !16477)
!16481 = !DILocation(line: 280, column: 18, scope: !16477)
!16482 = !DILocation(line: 280, column: 16, scope: !16477)
!16483 = !DILocation(line: 280, column: 10, scope: !16477)
!16484 = !DILocation(line: 280, column: 6, scope: !16477)
!16485 = !DILocation(line: 280, column: 4, scope: !16477)
!16486 = !DILocation(line: 282, column: 9, scope: !16477)
!16487 = !DILocation(line: 282, column: 2, scope: !16477)
!16488 = distinct !DISubprogram(name: "tex_saw", scope: !3, file: !3, line: 286, type: !12185, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16489 = !DILocalVariable(name: "a", arg: 1, scope: !16488, file: !3, line: 286, type: !91)
!16490 = !DILocation(line: 286, column: 28, scope: !16488)
!16491 = !DILocalVariable(name: "b", scope: !16488, file: !3, line: 288, type: !765)
!16492 = !DILocation(line: 288, column: 14, scope: !16488)
!16493 = !DILocalVariable(name: "n", scope: !16488, file: !3, line: 290, type: !92)
!16494 = !DILocation(line: 290, column: 6, scope: !16488)
!16495 = !DILocation(line: 290, column: 16, scope: !16488)
!16496 = !DILocation(line: 290, column: 18, scope: !16488)
!16497 = !DILocation(line: 290, column: 10, scope: !16488)
!16498 = !DILocation(line: 291, column: 7, scope: !16488)
!16499 = !DILocation(line: 291, column: 8, scope: !16488)
!16500 = !DILocation(line: 291, column: 4, scope: !16488)
!16501 = !DILocation(line: 292, column: 6, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16488, file: !3, line: 292, column: 6)
!16503 = !DILocation(line: 292, column: 8, scope: !16502)
!16504 = !DILocation(line: 292, column: 6, scope: !16488)
!16505 = !DILocation(line: 292, column: 15, scope: !16502)
!16506 = !DILocation(line: 292, column: 13, scope: !16502)
!16507 = !DILocation(line: 293, column: 9, scope: !16488)
!16508 = !DILocation(line: 293, column: 11, scope: !16488)
!16509 = !DILocation(line: 293, column: 2, scope: !16488)
!16510 = distinct !DISubprogram(name: "tex_tri", scope: !3, file: !3, line: 297, type: !12185, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16511 = !DILocalVariable(name: "a", arg: 1, scope: !16510, file: !3, line: 297, type: !91)
!16512 = !DILocation(line: 297, column: 28, scope: !16510)
!16513 = !DILocalVariable(name: "b", scope: !16510, file: !3, line: 299, type: !765)
!16514 = !DILocation(line: 299, column: 14, scope: !16510)
!16515 = !DILocalVariable(name: "rmax", scope: !16510, file: !3, line: 300, type: !765)
!16516 = !DILocation(line: 300, column: 14, scope: !16510)
!16517 = !DILocation(line: 302, column: 32, scope: !16510)
!16518 = !DILocation(line: 302, column: 33, scope: !16510)
!16519 = !DILocation(line: 302, column: 43, scope: !16510)
!16520 = !DILocation(line: 302, column: 24, scope: !16510)
!16521 = !DILocation(line: 302, column: 53, scope: !16510)
!16522 = !DILocation(line: 302, column: 54, scope: !16510)
!16523 = !DILocation(line: 302, column: 50, scope: !16510)
!16524 = !DILocation(line: 302, column: 18, scope: !16510)
!16525 = !DILocation(line: 302, column: 17, scope: !16510)
!16526 = !DILocation(line: 302, column: 11, scope: !16510)
!16527 = !DILocation(line: 302, column: 4, scope: !16510)
!16528 = !DILocation(line: 304, column: 9, scope: !16510)
!16529 = !DILocation(line: 304, column: 2, scope: !16510)
!16530 = distinct !DISubprogram(name: "marble_int", scope: !3, file: !3, line: 360, type: !16328, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16531 = !DILocalVariable(name: "tex", arg: 1, scope: !16530, file: !3, line: 360, type: !3402)
!16532 = !DILocation(line: 360, column: 30, scope: !16530)
!16533 = !DILocalVariable(name: "x", arg: 2, scope: !16530, file: !3, line: 360, type: !91)
!16534 = !DILocation(line: 360, column: 41, scope: !16530)
!16535 = !DILocalVariable(name: "y", arg: 3, scope: !16530, file: !3, line: 360, type: !91)
!16536 = !DILocation(line: 360, column: 50, scope: !16530)
!16537 = !DILocalVariable(name: "z", arg: 4, scope: !16530, file: !3, line: 360, type: !91)
!16538 = !DILocation(line: 360, column: 59, scope: !16530)
!16539 = !DILocalVariable(name: "n", scope: !16530, file: !3, line: 362, type: !91)
!16540 = !DILocation(line: 362, column: 8, scope: !16530)
!16541 = !DILocalVariable(name: "mi", scope: !16530, file: !3, line: 362, type: !91)
!16542 = !DILocation(line: 362, column: 11, scope: !16530)
!16543 = !DILocalVariable(name: "wf", scope: !16530, file: !3, line: 363, type: !141)
!16544 = !DILocation(line: 363, column: 8, scope: !16530)
!16545 = !DILocation(line: 363, column: 13, scope: !16530)
!16546 = !DILocation(line: 363, column: 18, scope: !16530)
!16547 = !DILocalVariable(name: "mt", scope: !16530, file: !3, line: 364, type: !141)
!16548 = !DILocation(line: 364, column: 8, scope: !16530)
!16549 = !DILocation(line: 364, column: 13, scope: !16530)
!16550 = !DILocation(line: 364, column: 18, scope: !16530)
!16551 = !DILocalVariable(name: "waveform", scope: !16530, file: !3, line: 366, type: !16349)
!16552 = !DILocation(line: 366, column: 10, scope: !16530)
!16553 = !DILocation(line: 367, column: 2, scope: !16530)
!16554 = !DILocation(line: 367, column: 14, scope: !16530)
!16555 = !DILocation(line: 368, column: 2, scope: !16530)
!16556 = !DILocation(line: 368, column: 14, scope: !16530)
!16557 = !DILocation(line: 369, column: 2, scope: !16530)
!16558 = !DILocation(line: 369, column: 14, scope: !16530)
!16559 = !DILocation(line: 371, column: 7, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 371, column: 6)
!16561 = !DILocation(line: 371, column: 9, scope: !16560)
!16562 = !DILocation(line: 371, column: 19, scope: !16560)
!16563 = !DILocation(line: 371, column: 23, scope: !16560)
!16564 = !DILocation(line: 371, column: 25, scope: !16560)
!16565 = !DILocation(line: 371, column: 6, scope: !16530)
!16566 = !DILocation(line: 371, column: 38, scope: !16560)
!16567 = !DILocation(line: 371, column: 36, scope: !16560)
!16568 = !DILocation(line: 373, column: 14, scope: !16530)
!16569 = !DILocation(line: 373, column: 18, scope: !16530)
!16570 = !DILocation(line: 373, column: 16, scope: !16530)
!16571 = !DILocation(line: 373, column: 22, scope: !16530)
!16572 = !DILocation(line: 373, column: 20, scope: !16530)
!16573 = !DILocation(line: 373, column: 11, scope: !16530)
!16574 = !DILocation(line: 373, column: 4, scope: !16530)
!16575 = !DILocation(line: 375, column: 7, scope: !16530)
!16576 = !DILocation(line: 375, column: 11, scope: !16530)
!16577 = !DILocation(line: 375, column: 16, scope: !16530)
!16578 = !DILocation(line: 375, column: 41, scope: !16530)
!16579 = !DILocation(line: 375, column: 46, scope: !16530)
!16580 = !DILocation(line: 375, column: 57, scope: !16530)
!16581 = !DILocation(line: 375, column: 60, scope: !16530)
!16582 = !DILocation(line: 375, column: 63, scope: !16530)
!16583 = !DILocation(line: 375, column: 66, scope: !16530)
!16584 = !DILocation(line: 375, column: 71, scope: !16530)
!16585 = !DILocation(line: 375, column: 84, scope: !16530)
!16586 = !DILocation(line: 375, column: 89, scope: !16530)
!16587 = !DILocation(line: 375, column: 98, scope: !16530)
!16588 = !DILocation(line: 375, column: 117, scope: !16530)
!16589 = !DILocation(line: 375, column: 122, scope: !16530)
!16590 = !DILocation(line: 375, column: 25, scope: !16530)
!16591 = !DILocation(line: 375, column: 23, scope: !16530)
!16592 = !DILocation(line: 375, column: 9, scope: !16530)
!16593 = !DILocation(line: 375, column: 5, scope: !16530)
!16594 = !DILocation(line: 377, column: 6, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 377, column: 6)
!16596 = !DILocation(line: 377, column: 8, scope: !16595)
!16597 = !DILocation(line: 377, column: 6, scope: !16530)
!16598 = !DILocation(line: 378, column: 17, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16595, file: !3, line: 377, column: 20)
!16600 = !DILocation(line: 378, column: 8, scope: !16599)
!16601 = !DILocation(line: 378, column: 21, scope: !16599)
!16602 = !DILocation(line: 378, column: 6, scope: !16599)
!16603 = !DILocation(line: 379, column: 7, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16599, file: !3, line: 379, column: 7)
!16605 = !DILocation(line: 379, column: 9, scope: !16604)
!16606 = !DILocation(line: 379, column: 7, scope: !16599)
!16607 = !DILocation(line: 380, column: 15, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16604, file: !3, line: 379, column: 22)
!16609 = !DILocation(line: 380, column: 9, scope: !16608)
!16610 = !DILocation(line: 380, column: 7, scope: !16608)
!16611 = !DILocation(line: 381, column: 3, scope: !16608)
!16612 = !DILocation(line: 382, column: 12, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16604, file: !3, line: 382, column: 12)
!16614 = !DILocation(line: 382, column: 14, scope: !16613)
!16615 = !DILocation(line: 382, column: 12, scope: !16604)
!16616 = !DILocation(line: 383, column: 21, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16613, file: !3, line: 382, column: 29)
!16618 = !DILocation(line: 383, column: 15, scope: !16617)
!16619 = !DILocation(line: 383, column: 9, scope: !16617)
!16620 = !DILocation(line: 383, column: 7, scope: !16617)
!16621 = !DILocation(line: 384, column: 3, scope: !16617)
!16622 = !DILocation(line: 385, column: 2, scope: !16599)
!16623 = !DILocation(line: 387, column: 9, scope: !16530)
!16624 = !DILocation(line: 387, column: 2, scope: !16530)
!16625 = distinct !DISubprogram(name: "cubemap_ob", scope: !3, file: !3, line: 845, type: !16626, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{!92, !2935, !954, !91, !91, !91, !201, !201}
!16628 = !DILocalVariable(name: "ob", arg: 1, scope: !16625, file: !3, line: 845, type: !2935)
!16629 = !DILocation(line: 845, column: 31, scope: !16625)
!16630 = !DILocalVariable(name: "n", arg: 2, scope: !16625, file: !3, line: 845, type: !954)
!16631 = !DILocation(line: 845, column: 47, scope: !16625)
!16632 = !DILocalVariable(name: "x", arg: 3, scope: !16625, file: !3, line: 845, type: !91)
!16633 = !DILocation(line: 845, column: 59, scope: !16625)
!16634 = !DILocalVariable(name: "y", arg: 4, scope: !16625, file: !3, line: 845, type: !91)
!16635 = !DILocation(line: 845, column: 68, scope: !16625)
!16636 = !DILocalVariable(name: "z", arg: 5, scope: !16625, file: !3, line: 845, type: !91)
!16637 = !DILocation(line: 845, column: 77, scope: !16625)
!16638 = !DILocalVariable(name: "adr1", arg: 6, scope: !16625, file: !3, line: 845, type: !201)
!16639 = !DILocation(line: 845, column: 87, scope: !16625)
!16640 = !DILocalVariable(name: "adr2", arg: 7, scope: !16625, file: !3, line: 845, type: !201)
!16641 = !DILocation(line: 845, column: 100, scope: !16625)
!16642 = !DILocalVariable(name: "x1", scope: !16625, file: !3, line: 847, type: !91)
!16643 = !DILocation(line: 847, column: 8, scope: !16625)
!16644 = !DILocalVariable(name: "y1", scope: !16625, file: !3, line: 847, type: !91)
!16645 = !DILocation(line: 847, column: 12, scope: !16625)
!16646 = !DILocalVariable(name: "z1", scope: !16625, file: !3, line: 847, type: !91)
!16647 = !DILocation(line: 847, column: 16, scope: !16625)
!16648 = !DILocalVariable(name: "nor", scope: !16625, file: !3, line: 847, type: !344)
!16649 = !DILocation(line: 847, column: 20, scope: !16625)
!16650 = !DILocalVariable(name: "ret", scope: !16625, file: !3, line: 848, type: !92)
!16651 = !DILocation(line: 848, column: 6, scope: !16625)
!16652 = !DILocation(line: 850, column: 6, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16625, file: !3, line: 850, column: 6)
!16654 = !DILocation(line: 850, column: 7, scope: !16653)
!16655 = !DILocation(line: 850, column: 6, scope: !16625)
!16656 = !DILocation(line: 850, column: 15, scope: !16653)
!16657 = !DILocation(line: 852, column: 13, scope: !16625)
!16658 = !DILocation(line: 852, column: 18, scope: !16625)
!16659 = !DILocation(line: 852, column: 2, scope: !16625)
!16660 = !DILocation(line: 853, column: 6, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16625, file: !3, line: 853, column: 6)
!16662 = !DILocation(line: 853, column: 6, scope: !16625)
!16663 = !DILocation(line: 853, column: 25, scope: !16661)
!16664 = !DILocation(line: 853, column: 29, scope: !16661)
!16665 = !DILocation(line: 853, column: 35, scope: !16661)
!16666 = !DILocation(line: 853, column: 10, scope: !16661)
!16667 = !DILocation(line: 855, column: 13, scope: !16625)
!16668 = !DILocation(line: 855, column: 7, scope: !16625)
!16669 = !DILocation(line: 855, column: 5, scope: !16625)
!16670 = !DILocation(line: 856, column: 13, scope: !16625)
!16671 = !DILocation(line: 856, column: 7, scope: !16625)
!16672 = !DILocation(line: 856, column: 5, scope: !16625)
!16673 = !DILocation(line: 857, column: 13, scope: !16625)
!16674 = !DILocation(line: 857, column: 7, scope: !16625)
!16675 = !DILocation(line: 857, column: 5, scope: !16625)
!16676 = !DILocation(line: 859, column: 6, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16625, file: !3, line: 859, column: 6)
!16678 = !DILocation(line: 859, column: 10, scope: !16677)
!16679 = !DILocation(line: 859, column: 8, scope: !16677)
!16680 = !DILocation(line: 859, column: 13, scope: !16677)
!16681 = !DILocation(line: 859, column: 16, scope: !16677)
!16682 = !DILocation(line: 859, column: 20, scope: !16677)
!16683 = !DILocation(line: 859, column: 18, scope: !16677)
!16684 = !DILocation(line: 859, column: 6, scope: !16625)
!16685 = !DILocation(line: 860, column: 12, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 859, column: 24)
!16687 = !DILocation(line: 860, column: 14, scope: !16686)
!16688 = !DILocation(line: 860, column: 22, scope: !16686)
!16689 = !DILocation(line: 860, column: 4, scope: !16686)
!16690 = !DILocation(line: 860, column: 9, scope: !16686)
!16691 = !DILocation(line: 861, column: 12, scope: !16686)
!16692 = !DILocation(line: 861, column: 14, scope: !16686)
!16693 = !DILocation(line: 861, column: 22, scope: !16686)
!16694 = !DILocation(line: 861, column: 4, scope: !16686)
!16695 = !DILocation(line: 861, column: 9, scope: !16686)
!16696 = !DILocation(line: 862, column: 6, scope: !16686)
!16697 = !DILocation(line: 863, column: 2, scope: !16686)
!16698 = !DILocation(line: 864, column: 11, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 864, column: 11)
!16700 = !DILocation(line: 864, column: 15, scope: !16699)
!16701 = !DILocation(line: 864, column: 13, scope: !16699)
!16702 = !DILocation(line: 864, column: 18, scope: !16699)
!16703 = !DILocation(line: 864, column: 21, scope: !16699)
!16704 = !DILocation(line: 864, column: 25, scope: !16699)
!16705 = !DILocation(line: 864, column: 23, scope: !16699)
!16706 = !DILocation(line: 864, column: 11, scope: !16677)
!16707 = !DILocation(line: 865, column: 12, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16699, file: !3, line: 864, column: 29)
!16709 = !DILocation(line: 865, column: 14, scope: !16708)
!16710 = !DILocation(line: 865, column: 22, scope: !16708)
!16711 = !DILocation(line: 865, column: 4, scope: !16708)
!16712 = !DILocation(line: 865, column: 9, scope: !16708)
!16713 = !DILocation(line: 866, column: 12, scope: !16708)
!16714 = !DILocation(line: 866, column: 14, scope: !16708)
!16715 = !DILocation(line: 866, column: 22, scope: !16708)
!16716 = !DILocation(line: 866, column: 4, scope: !16708)
!16717 = !DILocation(line: 866, column: 9, scope: !16708)
!16718 = !DILocation(line: 867, column: 6, scope: !16708)
!16719 = !DILocation(line: 868, column: 2, scope: !16708)
!16720 = !DILocation(line: 870, column: 12, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16699, file: !3, line: 869, column: 7)
!16722 = !DILocation(line: 870, column: 14, scope: !16721)
!16723 = !DILocation(line: 870, column: 22, scope: !16721)
!16724 = !DILocation(line: 870, column: 4, scope: !16721)
!16725 = !DILocation(line: 870, column: 9, scope: !16721)
!16726 = !DILocation(line: 871, column: 12, scope: !16721)
!16727 = !DILocation(line: 871, column: 14, scope: !16721)
!16728 = !DILocation(line: 871, column: 22, scope: !16721)
!16729 = !DILocation(line: 871, column: 4, scope: !16721)
!16730 = !DILocation(line: 871, column: 9, scope: !16721)
!16731 = !DILocation(line: 872, column: 6, scope: !16721)
!16732 = !DILocation(line: 874, column: 9, scope: !16625)
!16733 = !DILocation(line: 874, column: 2, scope: !16625)
!16734 = !DILocation(line: 875, column: 1, scope: !16625)
!16735 = distinct !DISubprogram(name: "cubemap_glob", scope: !3, file: !3, line: 749, type: !16736, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{!92, !954, !91, !91, !91, !201, !201}
!16738 = !DILocalVariable(name: "n", arg: 1, scope: !16735, file: !3, line: 749, type: !954)
!16739 = !DILocation(line: 749, column: 37, scope: !16735)
!16740 = !DILocalVariable(name: "x", arg: 2, scope: !16735, file: !3, line: 749, type: !91)
!16741 = !DILocation(line: 749, column: 49, scope: !16735)
!16742 = !DILocalVariable(name: "y", arg: 3, scope: !16735, file: !3, line: 749, type: !91)
!16743 = !DILocation(line: 749, column: 58, scope: !16735)
!16744 = !DILocalVariable(name: "z", arg: 4, scope: !16735, file: !3, line: 749, type: !91)
!16745 = !DILocation(line: 749, column: 67, scope: !16735)
!16746 = !DILocalVariable(name: "adr1", arg: 5, scope: !16735, file: !3, line: 749, type: !201)
!16747 = !DILocation(line: 749, column: 77, scope: !16735)
!16748 = !DILocalVariable(name: "adr2", arg: 6, scope: !16735, file: !3, line: 749, type: !201)
!16749 = !DILocation(line: 749, column: 90, scope: !16735)
!16750 = !DILocalVariable(name: "x1", scope: !16735, file: !3, line: 751, type: !91)
!16751 = !DILocation(line: 751, column: 8, scope: !16735)
!16752 = !DILocalVariable(name: "y1", scope: !16735, file: !3, line: 751, type: !91)
!16753 = !DILocation(line: 751, column: 12, scope: !16735)
!16754 = !DILocalVariable(name: "z1", scope: !16735, file: !3, line: 751, type: !91)
!16755 = !DILocation(line: 751, column: 16, scope: !16735)
!16756 = !DILocalVariable(name: "nor", scope: !16735, file: !3, line: 751, type: !344)
!16757 = !DILocation(line: 751, column: 20, scope: !16735)
!16758 = !DILocalVariable(name: "ret", scope: !16735, file: !3, line: 752, type: !92)
!16759 = !DILocation(line: 752, column: 6, scope: !16735)
!16760 = !DILocation(line: 754, column: 6, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16735, file: !3, line: 754, column: 6)
!16762 = !DILocation(line: 754, column: 7, scope: !16761)
!16763 = !DILocation(line: 754, column: 6, scope: !16735)
!16764 = !DILocation(line: 755, column: 11, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16761, file: !3, line: 754, column: 15)
!16766 = !DILocation(line: 755, column: 3, scope: !16765)
!16767 = !DILocation(line: 755, column: 9, scope: !16765)
!16768 = !DILocation(line: 755, column: 22, scope: !16765)
!16769 = !DILocation(line: 755, column: 14, scope: !16765)
!16770 = !DILocation(line: 755, column: 20, scope: !16765)
!16771 = !DILocation(line: 755, column: 33, scope: !16765)
!16772 = !DILocation(line: 755, column: 25, scope: !16765)
!16773 = !DILocation(line: 755, column: 31, scope: !16765)
!16774 = !DILocation(line: 756, column: 2, scope: !16765)
!16775 = !DILocation(line: 758, column: 14, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16761, file: !3, line: 757, column: 7)
!16777 = !DILocation(line: 758, column: 19, scope: !16776)
!16778 = !DILocation(line: 758, column: 3, scope: !16776)
!16779 = !DILocation(line: 760, column: 28, scope: !16735)
!16780 = !DILocation(line: 760, column: 2, scope: !16735)
!16781 = !DILocation(line: 762, column: 13, scope: !16735)
!16782 = !DILocation(line: 762, column: 7, scope: !16735)
!16783 = !DILocation(line: 762, column: 5, scope: !16735)
!16784 = !DILocation(line: 763, column: 13, scope: !16735)
!16785 = !DILocation(line: 763, column: 7, scope: !16735)
!16786 = !DILocation(line: 763, column: 5, scope: !16735)
!16787 = !DILocation(line: 764, column: 13, scope: !16735)
!16788 = !DILocation(line: 764, column: 7, scope: !16735)
!16789 = !DILocation(line: 764, column: 5, scope: !16735)
!16790 = !DILocation(line: 766, column: 6, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16735, file: !3, line: 766, column: 6)
!16792 = !DILocation(line: 766, column: 10, scope: !16791)
!16793 = !DILocation(line: 766, column: 8, scope: !16791)
!16794 = !DILocation(line: 766, column: 13, scope: !16791)
!16795 = !DILocation(line: 766, column: 16, scope: !16791)
!16796 = !DILocation(line: 766, column: 20, scope: !16791)
!16797 = !DILocation(line: 766, column: 18, scope: !16791)
!16798 = !DILocation(line: 766, column: 6, scope: !16735)
!16799 = !DILocation(line: 767, column: 12, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16791, file: !3, line: 766, column: 24)
!16801 = !DILocation(line: 767, column: 14, scope: !16800)
!16802 = !DILocation(line: 767, column: 22, scope: !16800)
!16803 = !DILocation(line: 767, column: 4, scope: !16800)
!16804 = !DILocation(line: 767, column: 9, scope: !16800)
!16805 = !DILocation(line: 768, column: 12, scope: !16800)
!16806 = !DILocation(line: 768, column: 14, scope: !16800)
!16807 = !DILocation(line: 768, column: 22, scope: !16800)
!16808 = !DILocation(line: 768, column: 4, scope: !16800)
!16809 = !DILocation(line: 768, column: 9, scope: !16800)
!16810 = !DILocation(line: 769, column: 6, scope: !16800)
!16811 = !DILocation(line: 770, column: 2, scope: !16800)
!16812 = !DILocation(line: 771, column: 11, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16791, file: !3, line: 771, column: 11)
!16814 = !DILocation(line: 771, column: 15, scope: !16813)
!16815 = !DILocation(line: 771, column: 13, scope: !16813)
!16816 = !DILocation(line: 771, column: 18, scope: !16813)
!16817 = !DILocation(line: 771, column: 21, scope: !16813)
!16818 = !DILocation(line: 771, column: 25, scope: !16813)
!16819 = !DILocation(line: 771, column: 23, scope: !16813)
!16820 = !DILocation(line: 771, column: 11, scope: !16791)
!16821 = !DILocation(line: 772, column: 12, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 771, column: 29)
!16823 = !DILocation(line: 772, column: 14, scope: !16822)
!16824 = !DILocation(line: 772, column: 22, scope: !16822)
!16825 = !DILocation(line: 772, column: 4, scope: !16822)
!16826 = !DILocation(line: 772, column: 9, scope: !16822)
!16827 = !DILocation(line: 773, column: 12, scope: !16822)
!16828 = !DILocation(line: 773, column: 14, scope: !16822)
!16829 = !DILocation(line: 773, column: 22, scope: !16822)
!16830 = !DILocation(line: 773, column: 4, scope: !16822)
!16831 = !DILocation(line: 773, column: 9, scope: !16822)
!16832 = !DILocation(line: 774, column: 6, scope: !16822)
!16833 = !DILocation(line: 775, column: 2, scope: !16822)
!16834 = !DILocation(line: 777, column: 12, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 776, column: 7)
!16836 = !DILocation(line: 777, column: 14, scope: !16835)
!16837 = !DILocation(line: 777, column: 22, scope: !16835)
!16838 = !DILocation(line: 777, column: 4, scope: !16835)
!16839 = !DILocation(line: 777, column: 9, scope: !16835)
!16840 = !DILocation(line: 778, column: 12, scope: !16835)
!16841 = !DILocation(line: 778, column: 14, scope: !16835)
!16842 = !DILocation(line: 778, column: 22, scope: !16835)
!16843 = !DILocation(line: 778, column: 4, scope: !16835)
!16844 = !DILocation(line: 778, column: 9, scope: !16835)
!16845 = !DILocation(line: 779, column: 6, scope: !16835)
!16846 = !DILocation(line: 781, column: 9, scope: !16735)
!16847 = !DILocation(line: 781, column: 2, scope: !16735)
!16848 = distinct !DISubprogram(name: "cubemap", scope: !3, file: !3, line: 787, type: !16849, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!16849 = !DISubroutineType(types: !16850)
!16850 = !{!92, !3587, !10752, !954, !91, !91, !91, !201, !201}
!16851 = !DILocalVariable(name: "mtex", arg: 1, scope: !16848, file: !3, line: 787, type: !3587)
!16852 = !DILocation(line: 787, column: 26, scope: !16848)
!16853 = !DILocalVariable(name: "vlr", arg: 2, scope: !16848, file: !3, line: 787, type: !10752)
!16854 = !DILocation(line: 787, column: 41, scope: !16848)
!16855 = !DILocalVariable(name: "n", arg: 3, scope: !16848, file: !3, line: 787, type: !954)
!16856 = !DILocation(line: 787, column: 58, scope: !16848)
!16857 = !DILocalVariable(name: "x", arg: 4, scope: !16848, file: !3, line: 787, type: !91)
!16858 = !DILocation(line: 787, column: 70, scope: !16848)
!16859 = !DILocalVariable(name: "y", arg: 5, scope: !16848, file: !3, line: 787, type: !91)
!16860 = !DILocation(line: 787, column: 79, scope: !16848)
!16861 = !DILocalVariable(name: "z", arg: 6, scope: !16848, file: !3, line: 787, type: !91)
!16862 = !DILocation(line: 787, column: 88, scope: !16848)
!16863 = !DILocalVariable(name: "adr1", arg: 7, scope: !16848, file: !3, line: 787, type: !201)
!16864 = !DILocation(line: 787, column: 98, scope: !16848)
!16865 = !DILocalVariable(name: "adr2", arg: 8, scope: !16848, file: !3, line: 787, type: !201)
!16866 = !DILocation(line: 787, column: 111, scope: !16848)
!16867 = !DILocalVariable(name: "proj", scope: !16848, file: !3, line: 789, type: !919)
!16868 = !DILocation(line: 789, column: 6, scope: !16848)
!16869 = !DILocalVariable(name: "ret", scope: !16848, file: !3, line: 789, type: !92)
!16870 = !DILocation(line: 789, column: 52, scope: !16848)
!16871 = !DILocation(line: 791, column: 6, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16848, file: !3, line: 791, column: 6)
!16873 = !DILocation(line: 791, column: 6, scope: !16848)
!16874 = !DILocalVariable(name: "index", scope: !16875, file: !3, line: 792, type: !92)
!16875 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 791, column: 11)
!16876 = !DILocation(line: 792, column: 7, scope: !16875)
!16877 = !DILocation(line: 795, column: 8, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 795, column: 7)
!16879 = !DILocation(line: 795, column: 13, scope: !16878)
!16880 = !DILocation(line: 795, column: 18, scope: !16878)
!16881 = !DILocation(line: 795, column: 52, scope: !16878)
!16882 = !DILocation(line: 795, column: 7, scope: !16875)
!16883 = !DILocation(line: 797, column: 8, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16885, file: !3, line: 797, column: 8)
!16885 = distinct !DILexicalBlock(scope: !16878, file: !3, line: 795, column: 57)
!16886 = !DILocation(line: 797, column: 13, scope: !16884)
!16887 = !DILocation(line: 797, column: 16, scope: !16884)
!16888 = !DILocation(line: 797, column: 19, scope: !16884)
!16889 = !DILocation(line: 797, column: 24, scope: !16884)
!16890 = !DILocation(line: 797, column: 28, scope: !16884)
!16891 = !DILocation(line: 797, column: 8, scope: !16885)
!16892 = !DILocalVariable(name: "nor", scope: !16893, file: !3, line: 798, type: !344)
!16893 = distinct !DILexicalBlock(scope: !16884, file: !3, line: 797, column: 34)
!16894 = !DILocation(line: 798, column: 11, scope: !16893)
!16895 = !DILocation(line: 799, column: 19, scope: !16893)
!16896 = !DILocation(line: 799, column: 24, scope: !16893)
!16897 = !DILocation(line: 799, column: 29, scope: !16893)
!16898 = !DILocation(line: 799, column: 33, scope: !16893)
!16899 = !DILocation(line: 799, column: 39, scope: !16893)
!16900 = !DILocation(line: 799, column: 44, scope: !16893)
!16901 = !DILocation(line: 799, column: 48, scope: !16893)
!16902 = !DILocation(line: 799, column: 54, scope: !16893)
!16903 = !DILocation(line: 799, column: 59, scope: !16893)
!16904 = !DILocation(line: 799, column: 63, scope: !16893)
!16905 = !DILocation(line: 799, column: 5, scope: !16893)
!16906 = !DILocation(line: 801, column: 20, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16893, file: !3, line: 801, column: 14)
!16908 = !DILocation(line: 801, column: 14, scope: !16907)
!16909 = !DILocation(line: 801, column: 36, scope: !16907)
!16910 = !DILocation(line: 801, column: 30, scope: !16907)
!16911 = !DILocation(line: 801, column: 28, scope: !16907)
!16912 = !DILocation(line: 801, column: 44, scope: !16907)
!16913 = !DILocation(line: 801, column: 53, scope: !16907)
!16914 = !DILocation(line: 801, column: 47, scope: !16907)
!16915 = !DILocation(line: 801, column: 69, scope: !16907)
!16916 = !DILocation(line: 801, column: 63, scope: !16907)
!16917 = !DILocation(line: 801, column: 61, scope: !16907)
!16918 = !DILocation(line: 801, column: 14, scope: !16893)
!16919 = !DILocation(line: 801, column: 78, scope: !16907)
!16920 = !DILocation(line: 801, column: 83, scope: !16907)
!16921 = !DILocation(line: 801, column: 88, scope: !16907)
!16922 = !DILocation(line: 802, column: 20, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16907, file: !3, line: 802, column: 14)
!16924 = !DILocation(line: 802, column: 14, scope: !16923)
!16925 = !DILocation(line: 802, column: 36, scope: !16923)
!16926 = !DILocation(line: 802, column: 30, scope: !16923)
!16927 = !DILocation(line: 802, column: 28, scope: !16923)
!16928 = !DILocation(line: 802, column: 44, scope: !16923)
!16929 = !DILocation(line: 802, column: 53, scope: !16923)
!16930 = !DILocation(line: 802, column: 47, scope: !16923)
!16931 = !DILocation(line: 802, column: 69, scope: !16923)
!16932 = !DILocation(line: 802, column: 63, scope: !16923)
!16933 = !DILocation(line: 802, column: 61, scope: !16923)
!16934 = !DILocation(line: 802, column: 14, scope: !16907)
!16935 = !DILocation(line: 802, column: 78, scope: !16923)
!16936 = !DILocation(line: 802, column: 83, scope: !16923)
!16937 = !DILocation(line: 802, column: 88, scope: !16923)
!16938 = !DILocation(line: 803, column: 78, scope: !16923)
!16939 = !DILocation(line: 803, column: 83, scope: !16923)
!16940 = !DILocation(line: 803, column: 88, scope: !16923)
!16941 = !DILocation(line: 804, column: 4, scope: !16893)
!16942 = !DILocation(line: 805, column: 29, scope: !16884)
!16943 = !DILocation(line: 805, column: 32, scope: !16884)
!16944 = !DILocation(line: 805, column: 35, scope: !16884)
!16945 = !DILocation(line: 805, column: 38, scope: !16884)
!16946 = !DILocation(line: 805, column: 41, scope: !16884)
!16947 = !DILocation(line: 805, column: 47, scope: !16884)
!16948 = !DILocation(line: 805, column: 16, scope: !16884)
!16949 = !DILocation(line: 805, column: 9, scope: !16884)
!16950 = !DILocation(line: 806, column: 3, scope: !16885)
!16951 = !DILocation(line: 808, column: 7, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 808, column: 7)
!16953 = !DILocation(line: 808, column: 7, scope: !16875)
!16954 = !DILocation(line: 811, column: 18, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16952, file: !3, line: 808, column: 13)
!16956 = !DILocation(line: 811, column: 24, scope: !16955)
!16957 = !DILocation(line: 811, column: 12, scope: !16955)
!16958 = !DILocation(line: 811, column: 10, scope: !16955)
!16959 = !DILocation(line: 812, column: 9, scope: !16955)
!16960 = !DILocation(line: 812, column: 4, scope: !16955)
!16961 = !DILocation(line: 812, column: 15, scope: !16955)
!16962 = !DILocation(line: 814, column: 18, scope: !16955)
!16963 = !DILocation(line: 814, column: 24, scope: !16955)
!16964 = !DILocation(line: 814, column: 12, scope: !16955)
!16965 = !DILocation(line: 814, column: 10, scope: !16955)
!16966 = !DILocation(line: 815, column: 9, scope: !16955)
!16967 = !DILocation(line: 815, column: 4, scope: !16955)
!16968 = !DILocation(line: 815, column: 15, scope: !16955)
!16969 = !DILocation(line: 817, column: 18, scope: !16955)
!16970 = !DILocation(line: 817, column: 24, scope: !16955)
!16971 = !DILocation(line: 817, column: 12, scope: !16955)
!16972 = !DILocation(line: 817, column: 10, scope: !16955)
!16973 = !DILocation(line: 818, column: 9, scope: !16955)
!16974 = !DILocation(line: 818, column: 4, scope: !16955)
!16975 = !DILocation(line: 818, column: 15, scope: !16955)
!16976 = !DILocation(line: 819, column: 3, scope: !16955)
!16977 = !DILocation(line: 821, column: 7, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 821, column: 7)
!16979 = !DILocation(line: 821, column: 12, scope: !16978)
!16980 = !DILocation(line: 821, column: 19, scope: !16978)
!16981 = !DILocation(line: 821, column: 17, scope: !16978)
!16982 = !DILocation(line: 821, column: 7, scope: !16875)
!16983 = !DILocation(line: 822, column: 13, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 821, column: 28)
!16985 = !DILocation(line: 822, column: 15, scope: !16984)
!16986 = !DILocation(line: 822, column: 23, scope: !16984)
!16987 = !DILocation(line: 822, column: 5, scope: !16984)
!16988 = !DILocation(line: 822, column: 10, scope: !16984)
!16989 = !DILocation(line: 823, column: 13, scope: !16984)
!16990 = !DILocation(line: 823, column: 15, scope: !16984)
!16991 = !DILocation(line: 823, column: 23, scope: !16984)
!16992 = !DILocation(line: 823, column: 5, scope: !16984)
!16993 = !DILocation(line: 823, column: 10, scope: !16984)
!16994 = !DILocation(line: 824, column: 3, scope: !16984)
!16995 = !DILocation(line: 825, column: 12, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 825, column: 12)
!16997 = !DILocation(line: 825, column: 17, scope: !16996)
!16998 = !DILocation(line: 825, column: 24, scope: !16996)
!16999 = !DILocation(line: 825, column: 22, scope: !16996)
!17000 = !DILocation(line: 825, column: 12, scope: !16978)
!17001 = !DILocation(line: 826, column: 13, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16996, file: !3, line: 825, column: 33)
!17003 = !DILocation(line: 826, column: 15, scope: !17002)
!17004 = !DILocation(line: 826, column: 23, scope: !17002)
!17005 = !DILocation(line: 826, column: 5, scope: !17002)
!17006 = !DILocation(line: 826, column: 10, scope: !17002)
!17007 = !DILocation(line: 827, column: 13, scope: !17002)
!17008 = !DILocation(line: 827, column: 15, scope: !17002)
!17009 = !DILocation(line: 827, column: 23, scope: !17002)
!17010 = !DILocation(line: 827, column: 5, scope: !17002)
!17011 = !DILocation(line: 827, column: 10, scope: !17002)
!17012 = !DILocation(line: 828, column: 7, scope: !17002)
!17013 = !DILocation(line: 829, column: 3, scope: !17002)
!17014 = !DILocation(line: 831, column: 13, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !16996, file: !3, line: 830, column: 8)
!17016 = !DILocation(line: 831, column: 15, scope: !17015)
!17017 = !DILocation(line: 831, column: 23, scope: !17015)
!17018 = !DILocation(line: 831, column: 5, scope: !17015)
!17019 = !DILocation(line: 831, column: 10, scope: !17015)
!17020 = !DILocation(line: 832, column: 13, scope: !17015)
!17021 = !DILocation(line: 832, column: 15, scope: !17015)
!17022 = !DILocation(line: 832, column: 23, scope: !17015)
!17023 = !DILocation(line: 832, column: 5, scope: !17015)
!17024 = !DILocation(line: 832, column: 10, scope: !17015)
!17025 = !DILocation(line: 833, column: 7, scope: !17015)
!17026 = !DILocation(line: 835, column: 2, scope: !16875)
!17027 = !DILocation(line: 837, column: 23, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 836, column: 7)
!17029 = !DILocation(line: 837, column: 26, scope: !17028)
!17030 = !DILocation(line: 837, column: 29, scope: !17028)
!17031 = !DILocation(line: 837, column: 32, scope: !17028)
!17032 = !DILocation(line: 837, column: 35, scope: !17028)
!17033 = !DILocation(line: 837, column: 41, scope: !17028)
!17034 = !DILocation(line: 837, column: 10, scope: !17028)
!17035 = !DILocation(line: 837, column: 3, scope: !17028)
!17036 = !DILocation(line: 840, column: 9, scope: !16848)
!17037 = !DILocation(line: 840, column: 2, scope: !16848)
!17038 = !DILocation(line: 841, column: 1, scope: !16848)
!17039 = distinct !DISubprogram(name: "axis_dominant_v3", scope: !17040, file: !17040, line: 162, type: !17041, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3132)
!17040 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17041 = !DISubroutineType(types: !17042)
!17042 = !{null, !199, !199, !954}
!17043 = !DILocalVariable(name: "r_axis_a", arg: 1, scope: !17039, file: !17040, line: 162, type: !199)
!17044 = !DILocation(line: 162, column: 36, scope: !17039)
!17045 = !DILocalVariable(name: "r_axis_b", arg: 2, scope: !17039, file: !17040, line: 162, type: !199)
!17046 = !DILocation(line: 162, column: 51, scope: !17039)
!17047 = !DILocalVariable(name: "axis", arg: 3, scope: !17039, file: !17040, line: 162, type: !954)
!17048 = !DILocation(line: 162, column: 73, scope: !17039)
!17049 = !DILocalVariable(name: "xn", scope: !17039, file: !17040, line: 164, type: !765)
!17050 = !DILocation(line: 164, column: 14, scope: !17039)
!17051 = !DILocation(line: 164, column: 25, scope: !17039)
!17052 = !DILocation(line: 164, column: 19, scope: !17039)
!17053 = !DILocalVariable(name: "yn", scope: !17039, file: !17040, line: 165, type: !765)
!17054 = !DILocation(line: 165, column: 14, scope: !17039)
!17055 = !DILocation(line: 165, column: 25, scope: !17039)
!17056 = !DILocation(line: 165, column: 19, scope: !17039)
!17057 = !DILocalVariable(name: "zn", scope: !17039, file: !17040, line: 166, type: !765)
!17058 = !DILocation(line: 166, column: 14, scope: !17039)
!17059 = !DILocation(line: 166, column: 25, scope: !17039)
!17060 = !DILocation(line: 166, column: 19, scope: !17039)
!17061 = !DILocation(line: 168, column: 11, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17039, file: !17040, line: 168, column: 11)
!17063 = !DILocation(line: 168, column: 17, scope: !17062)
!17064 = !DILocation(line: 168, column: 14, scope: !17062)
!17065 = !DILocation(line: 168, column: 20, scope: !17062)
!17066 = !DILocation(line: 168, column: 23, scope: !17062)
!17067 = !DILocation(line: 168, column: 29, scope: !17062)
!17068 = !DILocation(line: 168, column: 26, scope: !17062)
!17069 = !DILocation(line: 168, column: 11, scope: !17039)
!17070 = !DILocation(line: 168, column: 36, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17062, file: !17040, line: 168, column: 33)
!17072 = !DILocation(line: 168, column: 45, scope: !17071)
!17073 = !DILocation(line: 168, column: 51, scope: !17071)
!17074 = !DILocation(line: 168, column: 60, scope: !17071)
!17075 = !DILocation(line: 168, column: 65, scope: !17071)
!17076 = !DILocation(line: 169, column: 11, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17062, file: !17040, line: 169, column: 11)
!17078 = !DILocation(line: 169, column: 17, scope: !17077)
!17079 = !DILocation(line: 169, column: 14, scope: !17077)
!17080 = !DILocation(line: 169, column: 20, scope: !17077)
!17081 = !DILocation(line: 169, column: 23, scope: !17077)
!17082 = !DILocation(line: 169, column: 29, scope: !17077)
!17083 = !DILocation(line: 169, column: 26, scope: !17077)
!17084 = !DILocation(line: 169, column: 11, scope: !17062)
!17085 = !DILocation(line: 169, column: 36, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17077, file: !17040, line: 169, column: 33)
!17087 = !DILocation(line: 169, column: 45, scope: !17086)
!17088 = !DILocation(line: 169, column: 51, scope: !17086)
!17089 = !DILocation(line: 169, column: 60, scope: !17086)
!17090 = !DILocation(line: 169, column: 65, scope: !17086)
!17091 = !DILocation(line: 170, column: 36, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17077, file: !17040, line: 170, column: 33)
!17093 = !DILocation(line: 170, column: 45, scope: !17092)
!17094 = !DILocation(line: 170, column: 51, scope: !17092)
!17095 = !DILocation(line: 170, column: 60, scope: !17092)
!17096 = !DILocation(line: 171, column: 1, scope: !17039)
