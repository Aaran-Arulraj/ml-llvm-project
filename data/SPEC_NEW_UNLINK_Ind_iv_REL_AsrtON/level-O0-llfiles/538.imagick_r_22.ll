; ModuleID = 'magick/resize.c'
source_filename = "magick/resize.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon = type { i32, i32 }
%struct.anon.0 = type { float (float, %struct._ResizeFilter*)*, double, double, double, double, i32 }
%struct._ResizeFilter = type { float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)*, float, float, float, float, [7 x float], i32, i32, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._PointInfo = type { double, double }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._ContributionInfo = type { float, i64 }
%struct._GeometryInfo = type { double, double, double, double, double }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@AcquireResizeFilter.mapping = internal constant [31 x %struct.anon] [%struct.anon { i32 0, i32 2 }, %struct.anon { i32 1, i32 2 }, %struct.anon { i32 2, i32 2 }, %struct.anon { i32 3, i32 2 }, %struct.anon { i32 4, i32 2 }, %struct.anon { i32 15, i32 5 }, %struct.anon { i32 15, i32 6 }, %struct.anon { i32 15, i32 7 }, %struct.anon { i32 8, i32 2 }, %struct.anon { i32 9, i32 2 }, %struct.anon { i32 10, i32 2 }, %struct.anon { i32 11, i32 2 }, %struct.anon { i32 12, i32 2 }, %struct.anon { i32 13, i32 2 }, %struct.anon { i32 14, i32 2 }, %struct.anon { i32 15, i32 2 }, %struct.anon { i32 15, i32 16 }, %struct.anon { i32 22, i32 17 }, %struct.anon { i32 15, i32 10 }, %struct.anon { i32 15, i32 19 }, %struct.anon { i32 15, i32 3 }, %struct.anon { i32 21, i32 2 }, %struct.anon { i32 22, i32 22 }, %struct.anon { i32 23, i32 23 }, %struct.anon { i32 24, i32 24 }, %struct.anon { i32 25, i32 25 }, %struct.anon { i32 26, i32 2 }, %struct.anon { i32 27, i32 2 }, %struct.anon { i32 22, i32 28 }, %struct.anon { i32 29, i32 2 }, %struct.anon { i32 30, i32 22 }], align 16, !dbg !0
@AcquireResizeFilter.filters = internal constant [31 x %struct.anon.0] [%struct.anon.0 { float (float, %struct._ResizeFilter*)* @Box, double 5.000000e-01, double 5.000000e-01, double 0.000000e+00, double 0.000000e+00, i32 0 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Box, double 0.000000e+00, double 5.000000e-01, double 0.000000e+00, double 0.000000e+00, i32 0 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Box, double 5.000000e-01, double 5.000000e-01, double 0.000000e+00, double 0.000000e+00, i32 0 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Triangle, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 1 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Hanning, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 3 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Hamming, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 4 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Blackman, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 5 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Gaussian, double 2.000000e+00, double 1.500000e+00, double 0.000000e+00, double 0.000000e+00, i32 6 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Quadratic, double 1.500000e+00, double 1.500000e+00, double 0.000000e+00, double 0.000000e+00, i32 7 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, double 5.000000e-01, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 0x3FF2492492492492, double 0x3FD5555555555555, double 0x3FD5555555555555, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Jinc, double 3.000000e+00, double 0x3FF383C4936E7CFB, double 0.000000e+00, double 0.000000e+00, i32 8 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Sinc, double 4.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 9 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 4.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Kaiser, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 11 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Welsh, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 12 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Bohman, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 13 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Triangle, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 1 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Lagrange, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 14 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 3.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 3.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 0x3FF2B27E986FB7A1, double 0x3FD834AFDABD7B9D, double 0x3FD3E5A812A14232, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 0x3FF1B1736377D6E3, double 0x3FD0C4D88475319A, double 0x3FD79D93BDC56733, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @Cosine, double 1.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 15 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @CubicBC, double 2.000000e+00, double 2.000000e+00, double 1.000000e+00, double 0.000000e+00, i32 2 }, %struct.anon.0 { float (float, %struct._ResizeFilter*)* @SincFast, double 3.000000e+00, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 10 }], align 16, !dbg !834
@AcquireResizeFilter.jinc_zeros = internal global [16 x double] [double 0x3FF383C4936E7CFB, double 0x4001DD7392B48691, double 0x4009E811F2D4FEC0, double 0x4010F6D92EF1230B, double 0x4014F897398D2A3D, double 0x4018F9C69B83031A, double 0x401CFAA254BE1A14, double 0x40207DA466F40EB9, double 0x40227DE5A5605E00, double 0x40247E1A296C3FD7, double 0x40267E4557CCE5B2, double 0x40287E6979A00AB2, double 0x402A7E8827691760, double 0x402C7EA28704F9D1, double 0x402E7EB9713F7348, double 0x40303F66C4C44E83], align 16, !dbg !848
@.str = private unnamed_addr constant [16 x i8] c"magick/resize.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"filter:filter\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"filter:window\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"filter:sigma\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"filter:alpha\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"filter:kaiser-beta\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"filter:kaiser-alpha\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"filter:lobes\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"filter:blur\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"filter:support\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"filter:win-support\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"filter:b\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"filter:c\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"filter:verbose\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.18 = private unnamed_addr constant [38 x i8] c"# Resampling Filter (for graphing)\0A#\0A\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"# filter = %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"# window = %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"# support = %.*g\0A\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"# window-support = %.*g\0A\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"# scale-blur = %.*g\0A\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"# gaussian-sigma = %.*g\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"# kaiser-beta = %.*g\0A\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"# practical-support = %.*g\0A\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"# B,C = %.*g,%.*g\0A\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"%5.2lf\09%.*g\0A\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"Resize/Image\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"DelegateLibrarySupportNotBuiltIn\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"`%s' (LQR)\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Magnify/Image\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"NegativeOrZeroImageSize\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"sample:offset\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"Sample/Image\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"Scale/Image\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"0x0+0+0\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"icc\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"icm\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"file://%s\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"Thumb::URI\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"%.20g\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"Thumb::MTime\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"Thumb::Size\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"image/%s\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"Thumb::Mimetype\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"software\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"Thumb::Image::Width\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"Thumb::Image::Height\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"Thumb::Document::Pages\00", align 1
@J1.Pone = internal constant [9 x double] [double 0x443F81C2E523683D, double 0xC40CEF86BDED9999, double 0x43C012D008C7BCEA, double 0xC35FE006C30BA161, double 0x42F088DAAD7AF759, double 0xC273407F5DC0C206, double 0x41E96E3A40C9A788, double 0xC151E9B261F60E0A, double 0x40A51A3ED3F64AC9], align 16, !dbg !853
@J1.Qone = internal constant [9 x double] [double 0x444F81C2E523683D, double 0x43E491E139AE7522, double 0x436B0DDF388A59F6, double 0x42E7AA6E7871A918, double 0x425E85BCB84A30F5, double 0x41CE372A2D2DE908, double 0x4136EA619851D3CA, double 0x40991BB9EE66133E, double 1.000000e+00], align 16, !dbg !863
@P1.Pone = internal constant [6 x double] [double 0x40E1331546F86645, double 0x40EEA4DB0C43C658, double 0x40DE9E7DA39BF79D, double 0x40B3797BB3646E7F, double 0x406A64E4B4E35797, double 0x3FF41D6010A865E8], align 16, !dbg !865
@P1.Qone = internal constant [6 x double] [double 0x40E1331546F86645, double 0x40EE9CCB1A4A81E9, double 0x40DE821A02293EF4, double 0x40B34265806168F6, double 0x4069627B08F1C66B, double 1.000000e+00], align 16, !dbg !871
@Q1.Pone = internal constant [6 x double] [double 0x4075F2CD95877EA5, double 0x408688503DDC68E8, double 0x407A9FCBFC4E8E2C, double 0x4054CC274093A456, double 0x401245CEC89DC00C, double 0x3FA2169069C535FB], align 16, !dbg !873
@Q1.Qone = internal constant [6 x double] [double 0x40BD43BCC75F5387, double 0x40CE1B16B30D93F2, double 0x40C1E01DA86532F5, double 0x409C4CBF2E6DF9FA, double 0x4059F4668A3ED3A5, double 1.000000e+00], align 16, !dbg !876
@.str.55 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ResizeFilter* @AcquireResizeFilter(%struct._Image* %image, i32 %filter, float %blur, i32 %cylindrical, %struct._ExceptionInfo* %exception) #0 !dbg !2 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %filter.addr = alloca i32, align 4
  %blur.addr = alloca float, align 4
  %cylindrical.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %artifact = alloca i8*, align 8
  %filter_type = alloca i32, align 4
  %window_type = alloca i32, align 4
  %B = alloca float, align 4
  %C = alloca float, align 4
  %value = alloca float, align 4
  %resize_filter = alloca %struct._ResizeFilter*, align 8
  %message = alloca i8*, align 8
  %exception4 = alloca %struct._ExceptionInfo, align 8
  %option = alloca i64, align 8
  %option49 = alloca i64, align 8
  %lobes = alloca i64, align 8
  %twoB = alloca double, align 8
  %support375 = alloca double, align 8
  %x = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !888, metadata !DIExpression()), !dbg !889
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !890, metadata !DIExpression()), !dbg !891
  store float %blur, float* %blur.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blur.addr, metadata !892, metadata !DIExpression()), !dbg !893
  store i32 %cylindrical, i32* %cylindrical.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cylindrical.addr, metadata !894, metadata !DIExpression()), !dbg !895
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !896, metadata !DIExpression()), !dbg !897
  call void @llvm.dbg.declare(metadata i8** %artifact, metadata !898, metadata !DIExpression()), !dbg !899
  call void @llvm.dbg.declare(metadata i32* %filter_type, metadata !900, metadata !DIExpression()), !dbg !901
  call void @llvm.dbg.declare(metadata i32* %window_type, metadata !902, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata float* %B, metadata !904, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.declare(metadata float* %C, metadata !906, metadata !DIExpression()), !dbg !907
  call void @llvm.dbg.declare(metadata float* %value, metadata !908, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter, metadata !910, metadata !DIExpression()), !dbg !911
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !912
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !914
  %1 = load i32, i32* %debug, align 8, !dbg !914
  %cmp = icmp ne i32 %1, 0, !dbg !915
  br i1 %cmp, label %if.then, label %if.end, !dbg !916

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !917
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !918
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !917
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 902, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !919
  br label %if.end, !dbg !920

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @AcquireMagickMemory(i64 80) #10, !dbg !921
  %3 = bitcast i8* %call1 to %struct._ResizeFilter*, !dbg !922
  store %struct._ResizeFilter* %3, %struct._ResizeFilter** %resize_filter, align 8, !dbg !923
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !924
  %5 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !925
  %cmp2 = icmp eq %struct._ResizeFilter* %5, null, !dbg !927
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !928

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %message, metadata !929, metadata !DIExpression()), !dbg !931
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception4, metadata !932, metadata !DIExpression()), !dbg !931
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception4), !dbg !931
  %call5 = call i32* @__errno_location() #11, !dbg !931
  %6 = load i32, i32* %call5, align 4, !dbg !931
  %call6 = call i8* @GetExceptionMessage(i32 %6), !dbg !931
  store i8* %call6, i8** %message, align 8, !dbg !931
  %7 = load i8*, i8** %message, align 8, !dbg !931
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 909, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %7), !dbg !931
  %8 = load i8*, i8** %message, align 8, !dbg !931
  %call8 = call i8* @DestroyString(i8* %8), !dbg !931
  store i8* %call8, i8** %message, align 8, !dbg !931
  call void @CatchException(%struct._ExceptionInfo* %exception4), !dbg !931
  %call9 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception4), !dbg !931
  call void @MagickCoreTerminus(), !dbg !931
  call void @_exit(i32 1) #12, !dbg !931
  unreachable, !dbg !931

if.end10:                                         ; preds = %if.end
  %9 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !933
  %10 = bitcast %struct._ResizeFilter* %9 to i8*, !dbg !933
  %call11 = call i8* @ResetMagickMemory(i8* %10, i32 0, i64 80), !dbg !934
  %11 = load i32, i32* %filter.addr, align 4, !dbg !935
  %idxprom = zext i32 %11 to i64, !dbg !936
  %arrayidx = getelementptr inbounds [31 x %struct.anon], [31 x %struct.anon]* @AcquireResizeFilter.mapping, i64 0, i64 %idxprom, !dbg !936
  %filter12 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !937
  %12 = load i32, i32* %filter12, align 8, !dbg !937
  store i32 %12, i32* %filter_type, align 4, !dbg !938
  %13 = load i32, i32* %filter.addr, align 4, !dbg !939
  %idxprom13 = zext i32 %13 to i64, !dbg !940
  %arrayidx14 = getelementptr inbounds [31 x %struct.anon], [31 x %struct.anon]* @AcquireResizeFilter.mapping, i64 0, i64 %idxprom13, !dbg !940
  %window = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 1, !dbg !941
  %14 = load i32, i32* %window, align 4, !dbg !941
  store i32 %14, i32* %window_type, align 4, !dbg !942
  %15 = load float, float* %blur.addr, align 4, !dbg !943
  %16 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !944
  %blur15 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %16, i32 0, i32 5, !dbg !945
  store float %15, float* %blur15, align 4, !dbg !946
  %17 = load i32, i32* %cylindrical.addr, align 4, !dbg !947
  %cmp16 = icmp ne i32 %17, 0, !dbg !949
  br i1 %cmp16, label %land.lhs.true, label %if.end21, !dbg !950

land.lhs.true:                                    ; preds = %if.end10
  %18 = load i32, i32* %filter_type, align 4, !dbg !951
  %cmp17 = icmp eq i32 %18, 15, !dbg !952
  br i1 %cmp17, label %land.lhs.true18, label %if.end21, !dbg !953

land.lhs.true18:                                  ; preds = %land.lhs.true
  %19 = load i32, i32* %filter.addr, align 4, !dbg !954
  %cmp19 = icmp ne i32 %19, 15, !dbg !955
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !956

if.then20:                                        ; preds = %land.lhs.true18
  store i32 13, i32* %filter_type, align 4, !dbg !957
  br label %if.end21, !dbg !958

if.end21:                                         ; preds = %if.then20, %land.lhs.true18, %land.lhs.true, %if.end10
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !959
  %call22 = call i8* @GetImageArtifact(%struct._Image* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)), !dbg !960
  store i8* %call22, i8** %artifact, align 8, !dbg !961
  %21 = load i8*, i8** %artifact, align 8, !dbg !962
  %cmp23 = icmp ne i8* %21, null, !dbg !964
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !965

if.then24:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i64* %option, metadata !966, metadata !DIExpression()), !dbg !968
  %22 = load i8*, i8** %artifact, align 8, !dbg !969
  %call25 = call i64 @ParseCommandOption(i32 25, i32 0, i8* %22), !dbg !970
  store i64 %call25, i64* %option, align 8, !dbg !971
  %23 = load i64, i64* %option, align 8, !dbg !972
  %cmp26 = icmp slt i64 0, %23, !dbg !974
  br i1 %cmp26, label %land.lhs.true27, label %if.end30, !dbg !975

land.lhs.true27:                                  ; preds = %if.then24
  %24 = load i64, i64* %option, align 8, !dbg !976
  %cmp28 = icmp slt i64 %24, 31, !dbg !977
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !978

if.then29:                                        ; preds = %land.lhs.true27
  %25 = load i64, i64* %option, align 8, !dbg !979
  %conv = trunc i64 %25 to i32, !dbg !981
  store i32 %conv, i32* %filter_type, align 4, !dbg !982
  store i32 2, i32* %window_type, align 4, !dbg !983
  br label %if.end30, !dbg !984

if.end30:                                         ; preds = %if.then29, %land.lhs.true27, %if.then24
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !985
  %call31 = call i8* @GetImageArtifact(%struct._Image* %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)), !dbg !986
  store i8* %call31, i8** %artifact, align 8, !dbg !987
  %27 = load i8*, i8** %artifact, align 8, !dbg !988
  %cmp32 = icmp ne i8* %27, null, !dbg !990
  br i1 %cmp32, label %if.then34, label %if.end44, !dbg !991

if.then34:                                        ; preds = %if.end30
  %28 = load i8*, i8** %artifact, align 8, !dbg !992
  %call35 = call i64 @ParseCommandOption(i32 25, i32 0, i8* %28), !dbg !994
  store i64 %call35, i64* %option, align 8, !dbg !995
  %29 = load i64, i64* %option, align 8, !dbg !996
  %cmp36 = icmp slt i64 0, %29, !dbg !998
  br i1 %cmp36, label %land.lhs.true38, label %if.end43, !dbg !999

land.lhs.true38:                                  ; preds = %if.then34
  %30 = load i64, i64* %option, align 8, !dbg !1000
  %cmp39 = icmp slt i64 %30, 31, !dbg !1001
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !1002

if.then41:                                        ; preds = %land.lhs.true38
  %31 = load i64, i64* %option, align 8, !dbg !1003
  %conv42 = trunc i64 %31 to i32, !dbg !1004
  store i32 %conv42, i32* %window_type, align 4, !dbg !1005
  br label %if.end43, !dbg !1006

if.end43:                                         ; preds = %if.then41, %land.lhs.true38, %if.then34
  br label %if.end44, !dbg !1007

if.end44:                                         ; preds = %if.end43, %if.end30
  br label %if.end62, !dbg !1008

if.else:                                          ; preds = %if.end21
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1009
  %call45 = call i8* @GetImageArtifact(%struct._Image* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)), !dbg !1011
  store i8* %call45, i8** %artifact, align 8, !dbg !1012
  %33 = load i8*, i8** %artifact, align 8, !dbg !1013
  %cmp46 = icmp ne i8* %33, null, !dbg !1015
  br i1 %cmp46, label %if.then48, label %if.end61, !dbg !1016

if.then48:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %option49, metadata !1017, metadata !DIExpression()), !dbg !1019
  %34 = load i8*, i8** %artifact, align 8, !dbg !1020
  %call50 = call i64 @ParseCommandOption(i32 25, i32 0, i8* %34), !dbg !1021
  store i64 %call50, i64* %option49, align 8, !dbg !1022
  %35 = load i64, i64* %option49, align 8, !dbg !1023
  %cmp51 = icmp slt i64 0, %35, !dbg !1025
  br i1 %cmp51, label %land.lhs.true53, label %if.end60, !dbg !1026

land.lhs.true53:                                  ; preds = %if.then48
  %36 = load i64, i64* %option49, align 8, !dbg !1027
  %cmp54 = icmp slt i64 %36, 31, !dbg !1028
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !1029

if.then56:                                        ; preds = %land.lhs.true53
  %37 = load i32, i32* %cylindrical.addr, align 4, !dbg !1030
  %cmp57 = icmp ne i32 %37, 0, !dbg !1032
  %38 = zext i1 %cmp57 to i64, !dbg !1030
  %cond = select i1 %cmp57, i32 13, i32 15, !dbg !1030
  store i32 %cond, i32* %filter_type, align 4, !dbg !1033
  %39 = load i64, i64* %option49, align 8, !dbg !1034
  %conv59 = trunc i64 %39 to i32, !dbg !1035
  store i32 %conv59, i32* %window_type, align 4, !dbg !1036
  br label %if.end60, !dbg !1037

if.end60:                                         ; preds = %if.then56, %land.lhs.true53, %if.then48
  br label %if.end61, !dbg !1038

if.end61:                                         ; preds = %if.end60, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end44
  %40 = load i32, i32* %filter_type, align 4, !dbg !1039
  %idxprom63 = zext i32 %40 to i64, !dbg !1040
  %arrayidx64 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom63, !dbg !1040
  %function = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx64, i32 0, i32 0, !dbg !1041
  %41 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %function, align 16, !dbg !1041
  %42 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1042
  %filter65 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %42, i32 0, i32 0, !dbg !1043
  store float (float, %struct._ResizeFilter*)* %41, float (float, %struct._ResizeFilter*)** %filter65, align 8, !dbg !1044
  %43 = load i32, i32* %filter_type, align 4, !dbg !1045
  %idxprom66 = zext i32 %43 to i64, !dbg !1046
  %arrayidx67 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom66, !dbg !1046
  %support = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx67, i32 0, i32 1, !dbg !1047
  %44 = load double, double* %support, align 8, !dbg !1047
  %conv68 = fptrunc double %44 to float, !dbg !1046
  %45 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1048
  %support69 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %45, i32 0, i32 2, !dbg !1049
  store float %conv68, float* %support69, align 8, !dbg !1050
  %46 = load i32, i32* %filter_type, align 4, !dbg !1051
  %idxprom70 = zext i32 %46 to i64, !dbg !1052
  %arrayidx71 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom70, !dbg !1052
  %weightingFunctionType = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx71, i32 0, i32 5, !dbg !1053
  %47 = load i32, i32* %weightingFunctionType, align 8, !dbg !1053
  %48 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1054
  %filterWeightingType = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %48, i32 0, i32 7, !dbg !1055
  store i32 %47, i32* %filterWeightingType, align 4, !dbg !1056
  %49 = load i32, i32* %window_type, align 4, !dbg !1057
  %idxprom72 = zext i32 %49 to i64, !dbg !1058
  %arrayidx73 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom72, !dbg !1058
  %function74 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx73, i32 0, i32 0, !dbg !1059
  %50 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %function74, align 16, !dbg !1059
  %51 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1060
  %window75 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %51, i32 0, i32 1, !dbg !1061
  store float (float, %struct._ResizeFilter*)* %50, float (float, %struct._ResizeFilter*)** %window75, align 8, !dbg !1062
  %52 = load i32, i32* %window_type, align 4, !dbg !1063
  %idxprom76 = zext i32 %52 to i64, !dbg !1064
  %arrayidx77 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom76, !dbg !1064
  %weightingFunctionType78 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx77, i32 0, i32 5, !dbg !1065
  %53 = load i32, i32* %weightingFunctionType78, align 8, !dbg !1065
  %54 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1066
  %windowWeightingType = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %54, i32 0, i32 8, !dbg !1067
  store i32 %53, i32* %windowWeightingType, align 8, !dbg !1068
  %55 = load i32, i32* %window_type, align 4, !dbg !1069
  %idxprom79 = zext i32 %55 to i64, !dbg !1070
  %arrayidx80 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom79, !dbg !1070
  %scale = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx80, i32 0, i32 2, !dbg !1071
  %56 = load double, double* %scale, align 16, !dbg !1071
  %conv81 = fptrunc double %56 to float, !dbg !1070
  %57 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1072
  %scale82 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %57, i32 0, i32 4, !dbg !1073
  store float %conv81, float* %scale82, align 8, !dbg !1074
  %58 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1075
  %signature = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %58, i32 0, i32 9, !dbg !1076
  store i64 2880220587, i64* %signature, align 8, !dbg !1077
  %59 = load i32, i32* %cylindrical.addr, align 4, !dbg !1078
  %cmp83 = icmp ne i32 %59, 0, !dbg !1080
  br i1 %cmp83, label %if.then85, label %if.end92, !dbg !1081

if.then85:                                        ; preds = %if.end62
  %60 = load i32, i32* %filter_type, align 4, !dbg !1082
  switch i32 %60, label %sw.default [
    i32 2, label %sw.bb
    i32 22, label %sw.bb87
    i32 23, label %sw.bb87
    i32 24, label %sw.bb87
    i32 25, label %sw.bb87
    i32 30, label %sw.bb87
  ], !dbg !1083

sw.bb:                                            ; preds = %if.then85
  %61 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1084
  %support86 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %61, i32 0, i32 2, !dbg !1086
  store float 0x3FE6A09E60000000, float* %support86, align 8, !dbg !1087
  br label %sw.epilog, !dbg !1088

sw.bb87:                                          ; preds = %if.then85, %if.then85, %if.then85, %if.then85, %if.then85
  %62 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** getelementptr inbounds ([31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 13, i32 0), align 16, !dbg !1089
  %63 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1090
  %filter88 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %63, i32 0, i32 0, !dbg !1091
  store float (float, %struct._ResizeFilter*)* %62, float (float, %struct._ResizeFilter*)** %filter88, align 8, !dbg !1092
  %64 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** getelementptr inbounds ([31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 13, i32 0), align 16, !dbg !1093
  %65 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1094
  %window89 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %65, i32 0, i32 1, !dbg !1095
  store float (float, %struct._ResizeFilter*)* %64, float (float, %struct._ResizeFilter*)** %window89, align 8, !dbg !1096
  %66 = load double, double* getelementptr inbounds ([31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 13, i32 2), align 16, !dbg !1097
  %conv90 = fptrunc double %66 to float, !dbg !1098
  %67 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1099
  %scale91 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %67, i32 0, i32 4, !dbg !1100
  store float %conv90, float* %scale91, align 8, !dbg !1101
  br label %sw.epilog, !dbg !1102

sw.default:                                       ; preds = %if.then85
  br label %sw.epilog, !dbg !1103

sw.epilog:                                        ; preds = %sw.default, %sw.bb87, %sw.bb
  br label %if.end92, !dbg !1104

if.end92:                                         ; preds = %sw.epilog, %if.end62
  %68 = load i32, i32* %filter_type, align 4, !dbg !1105
  switch i32 %68, label %sw.default98 [
    i32 23, label %sw.bb93
    i32 25, label %sw.bb95
  ], !dbg !1106

sw.bb93:                                          ; preds = %if.end92
  %69 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1107
  %blur94 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %69, i32 0, i32 5, !dbg !1109
  %70 = load float, float* %blur94, align 4, !dbg !1110
  %mul = fmul float %70, 0x3FEF6667A0000000, !dbg !1110
  store float %mul, float* %blur94, align 4, !dbg !1110
  br label %sw.epilog99, !dbg !1111

sw.bb95:                                          ; preds = %if.end92
  %71 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1112
  %blur96 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %71, i32 0, i32 5, !dbg !1113
  %72 = load float, float* %blur96, align 4, !dbg !1114
  %mul97 = fmul float %72, 0x3FEE8F5480000000, !dbg !1114
  store float %mul97, float* %blur96, align 4, !dbg !1114
  br label %sw.epilog99, !dbg !1115

sw.default98:                                     ; preds = %if.end92
  br label %sw.epilog99, !dbg !1116

sw.epilog99:                                      ; preds = %sw.default98, %sw.bb95, %sw.bb93
  %73 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1117
  %filter100 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %73, i32 0, i32 0, !dbg !1119
  %74 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter100, align 8, !dbg !1119
  %cmp101 = icmp eq float (float, %struct._ResizeFilter*)* %74, @Gaussian, !dbg !1120
  br i1 %cmp101, label %if.then106, label %lor.lhs.false, !dbg !1121

lor.lhs.false:                                    ; preds = %sw.epilog99
  %75 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1122
  %window103 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %75, i32 0, i32 1, !dbg !1123
  %76 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window103, align 8, !dbg !1123
  %cmp104 = icmp eq float (float, %struct._ResizeFilter*)* %76, @Gaussian, !dbg !1124
  br i1 %cmp104, label %if.then106, label %if.end141, !dbg !1125

if.then106:                                       ; preds = %lor.lhs.false, %sw.epilog99
  store float 5.000000e-01, float* %value, align 4, !dbg !1126
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1128
  %call107 = call i8* @GetImageArtifact(%struct._Image* %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)), !dbg !1129
  store i8* %call107, i8** %artifact, align 8, !dbg !1130
  %78 = load i8*, i8** %artifact, align 8, !dbg !1131
  %cmp108 = icmp ne i8* %78, null, !dbg !1133
  br i1 %cmp108, label %if.then110, label %if.end113, !dbg !1134

if.then110:                                       ; preds = %if.then106
  %79 = load i8*, i8** %artifact, align 8, !dbg !1135
  %call111 = call double @StringToDouble(i8* %79, i8** null), !dbg !1136
  %conv112 = fptrunc double %call111 to float, !dbg !1136
  store float %conv112, float* %value, align 4, !dbg !1137
  br label %if.end113, !dbg !1138

if.end113:                                        ; preds = %if.then110, %if.then106
  %80 = load float, float* %value, align 4, !dbg !1139
  %81 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1140
  %coefficient = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %81, i32 0, i32 6, !dbg !1141
  %arrayidx114 = getelementptr inbounds [7 x float], [7 x float]* %coefficient, i64 0, i64 0, !dbg !1140
  store float %80, float* %arrayidx114, align 8, !dbg !1142
  %82 = load float, float* %value, align 4, !dbg !1143
  %conv115 = fpext float %82 to double, !dbg !1143
  %mul116 = fmul double 2.000000e+00, %conv115, !dbg !1144
  %83 = load float, float* %value, align 4, !dbg !1145
  %conv117 = fpext float %83 to double, !dbg !1145
  %mul118 = fmul double %mul116, %conv117, !dbg !1146
  %call119 = call double @PerceptibleReciprocal(double %mul118), !dbg !1147
  %conv120 = fptrunc double %call119 to float, !dbg !1147
  %84 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1148
  %coefficient121 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %84, i32 0, i32 6, !dbg !1149
  %arrayidx122 = getelementptr inbounds [7 x float], [7 x float]* %coefficient121, i64 0, i64 1, !dbg !1148
  store float %conv120, float* %arrayidx122, align 4, !dbg !1150
  %85 = load float, float* %value, align 4, !dbg !1151
  %conv123 = fpext float %85 to double, !dbg !1151
  %mul124 = fmul double 0x401921FB54442D18, %conv123, !dbg !1152
  %86 = load float, float* %value, align 4, !dbg !1153
  %conv125 = fpext float %86 to double, !dbg !1153
  %mul126 = fmul double %mul124, %conv125, !dbg !1154
  %call127 = call double @PerceptibleReciprocal(double %mul126), !dbg !1155
  %conv128 = fptrunc double %call127 to float, !dbg !1155
  %87 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1156
  %coefficient129 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %87, i32 0, i32 6, !dbg !1157
  %arrayidx130 = getelementptr inbounds [7 x float], [7 x float]* %coefficient129, i64 0, i64 2, !dbg !1156
  store float %conv128, float* %arrayidx130, align 8, !dbg !1158
  %88 = load float, float* %value, align 4, !dbg !1159
  %conv131 = fpext float %88 to double, !dbg !1159
  %cmp132 = fcmp ogt double %conv131, 5.000000e-01, !dbg !1161
  br i1 %cmp132, label %if.then134, label %if.end140, !dbg !1162

if.then134:                                       ; preds = %if.end113
  %89 = load float, float* %value, align 4, !dbg !1163
  %conv135 = fpext float %89 to double, !dbg !1163
  %div = fdiv double %conv135, 5.000000e-01, !dbg !1164
  %90 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1165
  %support136 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %90, i32 0, i32 2, !dbg !1166
  %91 = load float, float* %support136, align 8, !dbg !1167
  %conv137 = fpext float %91 to double, !dbg !1167
  %mul138 = fmul double %conv137, %div, !dbg !1167
  %conv139 = fptrunc double %mul138 to float, !dbg !1167
  store float %conv139, float* %support136, align 8, !dbg !1167
  br label %if.end140, !dbg !1165

if.end140:                                        ; preds = %if.then134, %if.end113
  br label %if.end141, !dbg !1168

if.end141:                                        ; preds = %if.end140, %lor.lhs.false
  %92 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1169
  %filter142 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %92, i32 0, i32 0, !dbg !1171
  %93 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter142, align 8, !dbg !1171
  %cmp143 = icmp eq float (float, %struct._ResizeFilter*)* %93, @Kaiser, !dbg !1172
  br i1 %cmp143, label %if.then149, label %lor.lhs.false145, !dbg !1173

lor.lhs.false145:                                 ; preds = %if.end141
  %94 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1174
  %window146 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %94, i32 0, i32 1, !dbg !1175
  %95 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window146, align 8, !dbg !1175
  %cmp147 = icmp eq float (float, %struct._ResizeFilter*)* %95, @Kaiser, !dbg !1176
  br i1 %cmp147, label %if.then149, label %if.end180, !dbg !1177

if.then149:                                       ; preds = %lor.lhs.false145, %if.end141
  store float 6.500000e+00, float* %value, align 4, !dbg !1178
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1180
  %call150 = call i8* @GetImageArtifact(%struct._Image* %96, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)), !dbg !1181
  store i8* %call150, i8** %artifact, align 8, !dbg !1182
  %97 = load i8*, i8** %artifact, align 8, !dbg !1183
  %cmp151 = icmp ne i8* %97, null, !dbg !1185
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !1186

if.then153:                                       ; preds = %if.then149
  %98 = load i8*, i8** %artifact, align 8, !dbg !1187
  %call154 = call double @StringToDouble(i8* %98, i8** null), !dbg !1188
  %conv155 = fptrunc double %call154 to float, !dbg !1188
  store float %conv155, float* %value, align 4, !dbg !1189
  br label %if.end156, !dbg !1190

if.end156:                                        ; preds = %if.then153, %if.then149
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1191
  %call157 = call i8* @GetImageArtifact(%struct._Image* %99, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)), !dbg !1192
  store i8* %call157, i8** %artifact, align 8, !dbg !1193
  %100 = load i8*, i8** %artifact, align 8, !dbg !1194
  %cmp158 = icmp ne i8* %100, null, !dbg !1196
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !1197

if.then160:                                       ; preds = %if.end156
  %101 = load i8*, i8** %artifact, align 8, !dbg !1198
  %call161 = call double @StringToDouble(i8* %101, i8** null), !dbg !1199
  %conv162 = fptrunc double %call161 to float, !dbg !1199
  store float %conv162, float* %value, align 4, !dbg !1200
  br label %if.end163, !dbg !1201

if.end163:                                        ; preds = %if.then160, %if.end156
  %102 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1202
  %call164 = call i8* @GetImageArtifact(%struct._Image* %102, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)), !dbg !1203
  store i8* %call164, i8** %artifact, align 8, !dbg !1204
  %103 = load i8*, i8** %artifact, align 8, !dbg !1205
  %cmp165 = icmp ne i8* %103, null, !dbg !1207
  br i1 %cmp165, label %if.then167, label %if.end171, !dbg !1208

if.then167:                                       ; preds = %if.end163
  %104 = load i8*, i8** %artifact, align 8, !dbg !1209
  %call168 = call double @StringToDouble(i8* %104, i8** null), !dbg !1210
  %mul169 = fmul double %call168, 0x400921FB54442D18, !dbg !1211
  %conv170 = fptrunc double %mul169 to float, !dbg !1212
  store float %conv170, float* %value, align 4, !dbg !1213
  br label %if.end171, !dbg !1214

if.end171:                                        ; preds = %if.then167, %if.end163
  %105 = load float, float* %value, align 4, !dbg !1215
  %106 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1216
  %coefficient172 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %106, i32 0, i32 6, !dbg !1217
  %arrayidx173 = getelementptr inbounds [7 x float], [7 x float]* %coefficient172, i64 0, i64 0, !dbg !1216
  store float %105, float* %arrayidx173, align 8, !dbg !1218
  %107 = load float, float* %value, align 4, !dbg !1219
  %call174 = call float @I0(float %107), !dbg !1220
  %conv175 = fpext float %call174 to double, !dbg !1220
  %call176 = call double @PerceptibleReciprocal(double %conv175), !dbg !1221
  %conv177 = fptrunc double %call176 to float, !dbg !1221
  %108 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1222
  %coefficient178 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %108, i32 0, i32 6, !dbg !1223
  %arrayidx179 = getelementptr inbounds [7 x float], [7 x float]* %coefficient178, i64 0, i64 1, !dbg !1222
  store float %conv177, float* %arrayidx179, align 4, !dbg !1224
  br label %if.end180, !dbg !1225

if.end180:                                        ; preds = %if.end171, %lor.lhs.false145
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1226
  %call181 = call i8* @GetImageArtifact(%struct._Image* %109, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)), !dbg !1227
  store i8* %call181, i8** %artifact, align 8, !dbg !1228
  %110 = load i8*, i8** %artifact, align 8, !dbg !1229
  %cmp182 = icmp ne i8* %110, null, !dbg !1231
  br i1 %cmp182, label %if.then184, label %if.end192, !dbg !1232

if.then184:                                       ; preds = %if.end180
  call void @llvm.dbg.declare(metadata i64* %lobes, metadata !1233, metadata !DIExpression()), !dbg !1235
  %111 = load i8*, i8** %artifact, align 8, !dbg !1236
  %call185 = call i64 @StringToLong(i8* %111), !dbg !1237
  store i64 %call185, i64* %lobes, align 8, !dbg !1238
  %112 = load i64, i64* %lobes, align 8, !dbg !1239
  %cmp186 = icmp slt i64 %112, 1, !dbg !1241
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !1242

if.then188:                                       ; preds = %if.then184
  store i64 1, i64* %lobes, align 8, !dbg !1243
  br label %if.end189, !dbg !1244

if.end189:                                        ; preds = %if.then188, %if.then184
  %113 = load i64, i64* %lobes, align 8, !dbg !1245
  %conv190 = sitofp i64 %113 to float, !dbg !1246
  %114 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1247
  %support191 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %114, i32 0, i32 2, !dbg !1248
  store float %conv190, float* %support191, align 8, !dbg !1249
  br label %if.end192, !dbg !1250

if.end192:                                        ; preds = %if.end189, %if.end180
  %115 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1251
  %filter193 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %115, i32 0, i32 0, !dbg !1253
  %116 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter193, align 8, !dbg !1253
  %cmp194 = icmp eq float (float, %struct._ResizeFilter*)* %116, @Jinc, !dbg !1254
  br i1 %cmp194, label %if.then196, label %if.end223, !dbg !1255

if.then196:                                       ; preds = %if.end192
  %117 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1256
  %support197 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %117, i32 0, i32 2, !dbg !1259
  %118 = load float, float* %support197, align 8, !dbg !1259
  %cmp198 = fcmp ogt float %118, 1.600000e+01, !dbg !1260
  br i1 %cmp198, label %if.then200, label %if.else203, !dbg !1261

if.then200:                                       ; preds = %if.then196
  %119 = load double, double* getelementptr inbounds ([16 x double], [16 x double]* @AcquireResizeFilter.jinc_zeros, i64 0, i64 15), align 8, !dbg !1262
  %conv201 = fptrunc double %119 to float, !dbg !1262
  %120 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1263
  %support202 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %120, i32 0, i32 2, !dbg !1264
  store float %conv201, float* %support202, align 8, !dbg !1265
  br label %if.end209, !dbg !1263

if.else203:                                       ; preds = %if.then196
  %121 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1266
  %support204 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %121, i32 0, i32 2, !dbg !1267
  %122 = load float, float* %support204, align 8, !dbg !1267
  %conv205 = fptosi float %122 to i64, !dbg !1268
  %sub = sub nsw i64 %conv205, 1, !dbg !1269
  %arrayidx206 = getelementptr inbounds [16 x double], [16 x double]* @AcquireResizeFilter.jinc_zeros, i64 0, i64 %sub, !dbg !1270
  %123 = load double, double* %arrayidx206, align 8, !dbg !1270
  %conv207 = fptrunc double %123 to float, !dbg !1270
  %124 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1271
  %support208 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %124, i32 0, i32 2, !dbg !1272
  store float %conv207, float* %support208, align 8, !dbg !1273
  br label %if.end209

if.end209:                                        ; preds = %if.else203, %if.then200
  %125 = load i32, i32* %filter_type, align 4, !dbg !1274
  %cmp210 = icmp eq i32 %125, 30, !dbg !1276
  br i1 %cmp210, label %if.then212, label %if.end222, !dbg !1277

if.then212:                                       ; preds = %if.end209
  %126 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1278
  %support213 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %126, i32 0, i32 2, !dbg !1280
  %127 = load float, float* %support213, align 8, !dbg !1280
  %conv214 = fpext float %127 to double, !dbg !1278
  %128 = call double @llvm.floor.f64(double %conv214), !dbg !1281
  %129 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1282
  %support215 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %129, i32 0, i32 2, !dbg !1283
  %130 = load float, float* %support215, align 8, !dbg !1283
  %conv216 = fpext float %130 to double, !dbg !1282
  %div217 = fdiv double %128, %conv216, !dbg !1284
  %131 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1285
  %blur218 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %131, i32 0, i32 5, !dbg !1286
  %132 = load float, float* %blur218, align 4, !dbg !1287
  %conv219 = fpext float %132 to double, !dbg !1287
  %mul220 = fmul double %conv219, %div217, !dbg !1287
  %conv221 = fptrunc double %mul220 to float, !dbg !1287
  store float %conv221, float* %blur218, align 4, !dbg !1287
  br label %if.end222, !dbg !1288

if.end222:                                        ; preds = %if.then212, %if.end209
  br label %if.end223, !dbg !1289

if.end223:                                        ; preds = %if.end222, %if.end192
  %133 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1290
  %call224 = call i8* @GetImageArtifact(%struct._Image* %133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)), !dbg !1291
  store i8* %call224, i8** %artifact, align 8, !dbg !1292
  %134 = load i8*, i8** %artifact, align 8, !dbg !1293
  %cmp225 = icmp ne i8* %134, null, !dbg !1295
  br i1 %cmp225, label %if.then227, label %if.end233, !dbg !1296

if.then227:                                       ; preds = %if.end223
  %135 = load i8*, i8** %artifact, align 8, !dbg !1297
  %call228 = call double @StringToDouble(i8* %135, i8** null), !dbg !1298
  %136 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1299
  %blur229 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %136, i32 0, i32 5, !dbg !1300
  %137 = load float, float* %blur229, align 4, !dbg !1301
  %conv230 = fpext float %137 to double, !dbg !1301
  %mul231 = fmul double %conv230, %call228, !dbg !1301
  %conv232 = fptrunc double %mul231 to float, !dbg !1301
  store float %conv232, float* %blur229, align 4, !dbg !1301
  br label %if.end233, !dbg !1299

if.end233:                                        ; preds = %if.then227, %if.end223
  %138 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1302
  %blur234 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %138, i32 0, i32 5, !dbg !1304
  %139 = load float, float* %blur234, align 4, !dbg !1304
  %conv235 = fpext float %139 to double, !dbg !1302
  %cmp236 = fcmp olt double %conv235, 1.000000e-15, !dbg !1305
  br i1 %cmp236, label %if.then238, label %if.end240, !dbg !1306

if.then238:                                       ; preds = %if.end233
  %140 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1307
  %blur239 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %140, i32 0, i32 5, !dbg !1308
  store float 0x3CD203AFA0000000, float* %blur239, align 4, !dbg !1309
  br label %if.end240, !dbg !1307

if.end240:                                        ; preds = %if.then238, %if.end233
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1310
  %call241 = call i8* @GetImageArtifact(%struct._Image* %141, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)), !dbg !1311
  store i8* %call241, i8** %artifact, align 8, !dbg !1312
  %142 = load i8*, i8** %artifact, align 8, !dbg !1313
  %cmp242 = icmp ne i8* %142, null, !dbg !1315
  br i1 %cmp242, label %if.then244, label %if.end248, !dbg !1316

if.then244:                                       ; preds = %if.end240
  %143 = load i8*, i8** %artifact, align 8, !dbg !1317
  %call245 = call double @StringToDouble(i8* %143, i8** null), !dbg !1318
  %144 = call double @llvm.fabs.f64(double %call245), !dbg !1319
  %conv246 = fptrunc double %144 to float, !dbg !1319
  %145 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1320
  %support247 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %145, i32 0, i32 2, !dbg !1321
  store float %conv246, float* %support247, align 8, !dbg !1322
  br label %if.end248, !dbg !1320

if.end248:                                        ; preds = %if.then244, %if.end240
  %146 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1323
  %support249 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %146, i32 0, i32 2, !dbg !1324
  %147 = load float, float* %support249, align 8, !dbg !1324
  %148 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1325
  %window_support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %148, i32 0, i32 3, !dbg !1326
  store float %147, float* %window_support, align 4, !dbg !1327
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1328
  %call250 = call i8* @GetImageArtifact(%struct._Image* %149, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)), !dbg !1329
  store i8* %call250, i8** %artifact, align 8, !dbg !1330
  %150 = load i8*, i8** %artifact, align 8, !dbg !1331
  %cmp251 = icmp ne i8* %150, null, !dbg !1333
  br i1 %cmp251, label %if.then253, label %if.end257, !dbg !1334

if.then253:                                       ; preds = %if.end248
  %151 = load i8*, i8** %artifact, align 8, !dbg !1335
  %call254 = call double @StringToDouble(i8* %151, i8** null), !dbg !1336
  %152 = call double @llvm.fabs.f64(double %call254), !dbg !1337
  %conv255 = fptrunc double %152 to float, !dbg !1337
  %153 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1338
  %window_support256 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %153, i32 0, i32 3, !dbg !1339
  store float %conv255, float* %window_support256, align 4, !dbg !1340
  br label %if.end257, !dbg !1338

if.end257:                                        ; preds = %if.then253, %if.end248
  %154 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1341
  %window_support258 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %154, i32 0, i32 3, !dbg !1342
  %155 = load float, float* %window_support258, align 4, !dbg !1342
  %156 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1343
  %scale259 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %156, i32 0, i32 4, !dbg !1344
  %157 = load float, float* %scale259, align 8, !dbg !1345
  %div260 = fdiv float %157, %155, !dbg !1345
  store float %div260, float* %scale259, align 8, !dbg !1345
  store float 0.000000e+00, float* %B, align 4, !dbg !1346
  store float 0.000000e+00, float* %C, align 4, !dbg !1347
  %158 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1348
  %filter261 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %158, i32 0, i32 0, !dbg !1350
  %159 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter261, align 8, !dbg !1350
  %cmp262 = icmp eq float (float, %struct._ResizeFilter*)* %159, @CubicBC, !dbg !1351
  br i1 %cmp262, label %if.then268, label %lor.lhs.false264, !dbg !1352

lor.lhs.false264:                                 ; preds = %if.end257
  %160 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1353
  %window265 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %160, i32 0, i32 1, !dbg !1354
  %161 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window265, align 8, !dbg !1354
  %cmp266 = icmp eq float (float, %struct._ResizeFilter*)* %161, @CubicBC, !dbg !1355
  br i1 %cmp266, label %if.then268, label %if.end371, !dbg !1356

if.then268:                                       ; preds = %lor.lhs.false264, %if.end257
  %162 = load i32, i32* %filter_type, align 4, !dbg !1357
  %idxprom269 = zext i32 %162 to i64, !dbg !1359
  %arrayidx270 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom269, !dbg !1359
  %B271 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx270, i32 0, i32 3, !dbg !1360
  %163 = load double, double* %B271, align 8, !dbg !1360
  %conv272 = fptrunc double %163 to float, !dbg !1359
  store float %conv272, float* %B, align 4, !dbg !1361
  %164 = load i32, i32* %filter_type, align 4, !dbg !1362
  %idxprom273 = zext i32 %164 to i64, !dbg !1363
  %arrayidx274 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom273, !dbg !1363
  %C275 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx274, i32 0, i32 4, !dbg !1364
  %165 = load double, double* %C275, align 16, !dbg !1364
  %conv276 = fptrunc double %165 to float, !dbg !1363
  store float %conv276, float* %C, align 4, !dbg !1365
  %166 = load i32, i32* %window_type, align 4, !dbg !1366
  %idxprom277 = zext i32 %166 to i64, !dbg !1368
  %arrayidx278 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom277, !dbg !1368
  %function279 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx278, i32 0, i32 0, !dbg !1369
  %167 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %function279, align 16, !dbg !1369
  %cmp280 = icmp eq float (float, %struct._ResizeFilter*)* %167, @CubicBC, !dbg !1370
  br i1 %cmp280, label %if.then282, label %if.end291, !dbg !1371

if.then282:                                       ; preds = %if.then268
  %168 = load i32, i32* %window_type, align 4, !dbg !1372
  %idxprom283 = zext i32 %168 to i64, !dbg !1374
  %arrayidx284 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom283, !dbg !1374
  %B285 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx284, i32 0, i32 3, !dbg !1375
  %169 = load double, double* %B285, align 8, !dbg !1375
  %conv286 = fptrunc double %169 to float, !dbg !1374
  store float %conv286, float* %B, align 4, !dbg !1376
  %170 = load i32, i32* %window_type, align 4, !dbg !1377
  %idxprom287 = zext i32 %170 to i64, !dbg !1378
  %arrayidx288 = getelementptr inbounds [31 x %struct.anon.0], [31 x %struct.anon.0]* @AcquireResizeFilter.filters, i64 0, i64 %idxprom287, !dbg !1378
  %C289 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx288, i32 0, i32 4, !dbg !1379
  %171 = load double, double* %C289, align 16, !dbg !1379
  %conv290 = fptrunc double %171 to float, !dbg !1378
  store float %conv290, float* %C, align 4, !dbg !1380
  br label %if.end291, !dbg !1381

if.end291:                                        ; preds = %if.then282, %if.then268
  %172 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1382
  %call292 = call i8* @GetImageArtifact(%struct._Image* %172, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)), !dbg !1383
  store i8* %call292, i8** %artifact, align 8, !dbg !1384
  %173 = load i8*, i8** %artifact, align 8, !dbg !1385
  %cmp293 = icmp ne i8* %173, null, !dbg !1387
  br i1 %cmp293, label %if.then295, label %if.else309, !dbg !1388

if.then295:                                       ; preds = %if.end291
  %174 = load i8*, i8** %artifact, align 8, !dbg !1389
  %call296 = call double @StringToDouble(i8* %174, i8** null), !dbg !1391
  %conv297 = fptrunc double %call296 to float, !dbg !1391
  store float %conv297, float* %B, align 4, !dbg !1392
  %175 = load float, float* %B, align 4, !dbg !1393
  %conv298 = fpext float %175 to double, !dbg !1393
  %sub299 = fsub double 1.000000e+00, %conv298, !dbg !1394
  %div300 = fdiv double %sub299, 2.000000e+00, !dbg !1395
  %conv301 = fptrunc double %div300 to float, !dbg !1396
  store float %conv301, float* %C, align 4, !dbg !1397
  %176 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1398
  %call302 = call i8* @GetImageArtifact(%struct._Image* %176, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)), !dbg !1399
  store i8* %call302, i8** %artifact, align 8, !dbg !1400
  %177 = load i8*, i8** %artifact, align 8, !dbg !1401
  %cmp303 = icmp ne i8* %177, null, !dbg !1403
  br i1 %cmp303, label %if.then305, label %if.end308, !dbg !1404

if.then305:                                       ; preds = %if.then295
  %178 = load i8*, i8** %artifact, align 8, !dbg !1405
  %call306 = call double @StringToDouble(i8* %178, i8** null), !dbg !1406
  %conv307 = fptrunc double %call306 to float, !dbg !1406
  store float %conv307, float* %C, align 4, !dbg !1407
  br label %if.end308, !dbg !1408

if.end308:                                        ; preds = %if.then305, %if.then295
  br label %if.end321, !dbg !1409

if.else309:                                       ; preds = %if.end291
  %179 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1410
  %call310 = call i8* @GetImageArtifact(%struct._Image* %179, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)), !dbg !1412
  store i8* %call310, i8** %artifact, align 8, !dbg !1413
  %180 = load i8*, i8** %artifact, align 8, !dbg !1414
  %cmp311 = icmp ne i8* %180, null, !dbg !1416
  br i1 %cmp311, label %if.then313, label %if.end320, !dbg !1417

if.then313:                                       ; preds = %if.else309
  %181 = load i8*, i8** %artifact, align 8, !dbg !1418
  %call314 = call double @StringToDouble(i8* %181, i8** null), !dbg !1420
  %conv315 = fptrunc double %call314 to float, !dbg !1420
  store float %conv315, float* %C, align 4, !dbg !1421
  %182 = load float, float* %C, align 4, !dbg !1422
  %conv316 = fpext float %182 to double, !dbg !1422
  %mul317 = fmul double 2.000000e+00, %conv316, !dbg !1423
  %sub318 = fsub double 1.000000e+00, %mul317, !dbg !1424
  %conv319 = fptrunc double %sub318 to float, !dbg !1425
  store float %conv319, float* %B, align 4, !dbg !1426
  br label %if.end320, !dbg !1427

if.end320:                                        ; preds = %if.then313, %if.else309
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.end308
  call void @llvm.dbg.declare(metadata double* %twoB, metadata !1428, metadata !DIExpression()), !dbg !1430
  %183 = load float, float* %B, align 4, !dbg !1431
  %184 = load float, float* %B, align 4, !dbg !1432
  %add = fadd float %183, %184, !dbg !1433
  %conv322 = fpext float %add to double, !dbg !1431
  store double %conv322, double* %twoB, align 8, !dbg !1430
  %185 = load float, float* %B, align 4, !dbg !1434
  %conv323 = fpext float %185 to double, !dbg !1434
  %mul324 = fmul double 0x3FD5555555555555, %conv323, !dbg !1435
  %sub325 = fsub double 1.000000e+00, %mul324, !dbg !1436
  %conv326 = fptrunc double %sub325 to float, !dbg !1437
  %186 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1438
  %coefficient327 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %186, i32 0, i32 6, !dbg !1439
  %arrayidx328 = getelementptr inbounds [7 x float], [7 x float]* %coefficient327, i64 0, i64 0, !dbg !1438
  store float %conv326, float* %arrayidx328, align 8, !dbg !1440
  %187 = load double, double* %twoB, align 8, !dbg !1441
  %add329 = fadd double -3.000000e+00, %187, !dbg !1442
  %188 = load float, float* %C, align 4, !dbg !1443
  %conv330 = fpext float %188 to double, !dbg !1443
  %add331 = fadd double %add329, %conv330, !dbg !1444
  %conv332 = fptrunc double %add331 to float, !dbg !1445
  %189 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1446
  %coefficient333 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %189, i32 0, i32 6, !dbg !1447
  %arrayidx334 = getelementptr inbounds [7 x float], [7 x float]* %coefficient333, i64 0, i64 1, !dbg !1446
  store float %conv332, float* %arrayidx334, align 4, !dbg !1448
  %190 = load float, float* %B, align 4, !dbg !1449
  %conv335 = fpext float %190 to double, !dbg !1449
  %mul336 = fmul double 1.500000e+00, %conv335, !dbg !1450
  %sub337 = fsub double 2.000000e+00, %mul336, !dbg !1451
  %191 = load float, float* %C, align 4, !dbg !1452
  %conv338 = fpext float %191 to double, !dbg !1452
  %sub339 = fsub double %sub337, %conv338, !dbg !1453
  %conv340 = fptrunc double %sub339 to float, !dbg !1454
  %192 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1455
  %coefficient341 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %192, i32 0, i32 6, !dbg !1456
  %arrayidx342 = getelementptr inbounds [7 x float], [7 x float]* %coefficient341, i64 0, i64 2, !dbg !1455
  store float %conv340, float* %arrayidx342, align 8, !dbg !1457
  %193 = load float, float* %B, align 4, !dbg !1458
  %conv343 = fpext float %193 to double, !dbg !1458
  %mul344 = fmul double 0x3FF5555555555555, %conv343, !dbg !1459
  %194 = load float, float* %C, align 4, !dbg !1460
  %conv345 = fpext float %194 to double, !dbg !1460
  %mul346 = fmul double 4.000000e+00, %conv345, !dbg !1461
  %add347 = fadd double %mul344, %mul346, !dbg !1462
  %conv348 = fptrunc double %add347 to float, !dbg !1463
  %195 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1464
  %coefficient349 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %195, i32 0, i32 6, !dbg !1465
  %arrayidx350 = getelementptr inbounds [7 x float], [7 x float]* %coefficient349, i64 0, i64 3, !dbg !1464
  store float %conv348, float* %arrayidx350, align 4, !dbg !1466
  %196 = load float, float* %C, align 4, !dbg !1467
  %conv351 = fpext float %196 to double, !dbg !1467
  %mul352 = fmul double -8.000000e+00, %conv351, !dbg !1468
  %197 = load double, double* %twoB, align 8, !dbg !1469
  %sub353 = fsub double %mul352, %197, !dbg !1470
  %conv354 = fptrunc double %sub353 to float, !dbg !1471
  %198 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1472
  %coefficient355 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %198, i32 0, i32 6, !dbg !1473
  %arrayidx356 = getelementptr inbounds [7 x float], [7 x float]* %coefficient355, i64 0, i64 4, !dbg !1472
  store float %conv354, float* %arrayidx356, align 8, !dbg !1474
  %199 = load float, float* %B, align 4, !dbg !1475
  %conv357 = fpext float %199 to double, !dbg !1475
  %200 = load float, float* %C, align 4, !dbg !1476
  %conv358 = fpext float %200 to double, !dbg !1476
  %mul359 = fmul double 5.000000e+00, %conv358, !dbg !1477
  %add360 = fadd double %conv357, %mul359, !dbg !1478
  %conv361 = fptrunc double %add360 to float, !dbg !1475
  %201 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1479
  %coefficient362 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %201, i32 0, i32 6, !dbg !1480
  %arrayidx363 = getelementptr inbounds [7 x float], [7 x float]* %coefficient362, i64 0, i64 5, !dbg !1479
  store float %conv361, float* %arrayidx363, align 4, !dbg !1481
  %202 = load float, float* %B, align 4, !dbg !1482
  %conv364 = fpext float %202 to double, !dbg !1482
  %mul365 = fmul double 0xBFC5555555555555, %conv364, !dbg !1483
  %203 = load float, float* %C, align 4, !dbg !1484
  %conv366 = fpext float %203 to double, !dbg !1484
  %sub367 = fsub double %mul365, %conv366, !dbg !1485
  %conv368 = fptrunc double %sub367 to float, !dbg !1486
  %204 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1487
  %coefficient369 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %204, i32 0, i32 6, !dbg !1488
  %arrayidx370 = getelementptr inbounds [7 x float], [7 x float]* %coefficient369, i64 0, i64 6, !dbg !1487
  store float %conv368, float* %arrayidx370, align 8, !dbg !1489
  br label %if.end371, !dbg !1490

if.end371:                                        ; preds = %if.end321, %lor.lhs.false264
  %205 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1491
  %call372 = call i8* @GetImageArtifact(%struct._Image* %205, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)), !dbg !1492
  store i8* %call372, i8** %artifact, align 8, !dbg !1493
  %206 = load i8*, i8** %artifact, align 8, !dbg !1494
  %call373 = call i32 @IsMagickTrue(i8* %206), !dbg !1496
  %tobool = icmp ne i32 %call373, 0, !dbg !1496
  br i1 %tobool, label %if.then374, label %if.end496, !dbg !1497

if.then374:                                       ; preds = %if.end371
  call void @llvm.dbg.declare(metadata double* %support375, metadata !1498, metadata !DIExpression()), !dbg !1500
  call void @llvm.dbg.declare(metadata double* %x, metadata !1501, metadata !DIExpression()), !dbg !1502
  %207 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1503
  %filter376 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %207, i32 0, i32 0, !dbg !1505
  %208 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter376, align 8, !dbg !1505
  %cmp377 = icmp eq float (float, %struct._ResizeFilter*)* %208, @Box, !dbg !1506
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !1507

if.then379:                                       ; preds = %if.then374
  store i32 2, i32* %filter_type, align 4, !dbg !1508
  br label %if.end380, !dbg !1509

if.end380:                                        ; preds = %if.then379, %if.then374
  %209 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1510
  %filter381 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %209, i32 0, i32 0, !dbg !1512
  %210 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter381, align 8, !dbg !1512
  %cmp382 = icmp eq float (float, %struct._ResizeFilter*)* %210, @Sinc, !dbg !1513
  br i1 %cmp382, label %if.then384, label %if.end385, !dbg !1514

if.then384:                                       ; preds = %if.end380
  store i32 14, i32* %filter_type, align 4, !dbg !1515
  br label %if.end385, !dbg !1516

if.end385:                                        ; preds = %if.then384, %if.end380
  %211 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1517
  %filter386 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %211, i32 0, i32 0, !dbg !1519
  %212 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter386, align 8, !dbg !1519
  %cmp387 = icmp eq float (float, %struct._ResizeFilter*)* %212, @SincFast, !dbg !1520
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !1521

if.then389:                                       ; preds = %if.end385
  store i32 15, i32* %filter_type, align 4, !dbg !1522
  br label %if.end390, !dbg !1523

if.end390:                                        ; preds = %if.then389, %if.end385
  %213 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1524
  %filter391 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %213, i32 0, i32 0, !dbg !1526
  %214 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter391, align 8, !dbg !1526
  %cmp392 = icmp eq float (float, %struct._ResizeFilter*)* %214, @Jinc, !dbg !1527
  br i1 %cmp392, label %if.then394, label %if.end395, !dbg !1528

if.then394:                                       ; preds = %if.end390
  store i32 13, i32* %filter_type, align 4, !dbg !1529
  br label %if.end395, !dbg !1530

if.end395:                                        ; preds = %if.then394, %if.end390
  %215 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1531
  %filter396 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %215, i32 0, i32 0, !dbg !1533
  %216 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter396, align 8, !dbg !1533
  %cmp397 = icmp eq float (float, %struct._ResizeFilter*)* %216, @CubicBC, !dbg !1534
  br i1 %cmp397, label %if.then399, label %if.end400, !dbg !1535

if.then399:                                       ; preds = %if.end395
  store i32 10, i32* %filter_type, align 4, !dbg !1536
  br label %if.end400, !dbg !1537

if.end400:                                        ; preds = %if.then399, %if.end395
  %217 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1538
  %window401 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %217, i32 0, i32 1, !dbg !1540
  %218 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window401, align 8, !dbg !1540
  %cmp402 = icmp eq float (float, %struct._ResizeFilter*)* %218, @Box, !dbg !1541
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !1542

if.then404:                                       ; preds = %if.end400
  store i32 2, i32* %window_type, align 4, !dbg !1543
  br label %if.end405, !dbg !1544

if.end405:                                        ; preds = %if.then404, %if.end400
  %219 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1545
  %window406 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %219, i32 0, i32 1, !dbg !1547
  %220 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window406, align 8, !dbg !1547
  %cmp407 = icmp eq float (float, %struct._ResizeFilter*)* %220, @Sinc, !dbg !1548
  br i1 %cmp407, label %if.then409, label %if.end410, !dbg !1549

if.then409:                                       ; preds = %if.end405
  store i32 14, i32* %window_type, align 4, !dbg !1550
  br label %if.end410, !dbg !1551

if.end410:                                        ; preds = %if.then409, %if.end405
  %221 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1552
  %window411 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %221, i32 0, i32 1, !dbg !1554
  %222 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window411, align 8, !dbg !1554
  %cmp412 = icmp eq float (float, %struct._ResizeFilter*)* %222, @SincFast, !dbg !1555
  br i1 %cmp412, label %if.then414, label %if.end415, !dbg !1556

if.then414:                                       ; preds = %if.end410
  store i32 15, i32* %window_type, align 4, !dbg !1557
  br label %if.end415, !dbg !1558

if.end415:                                        ; preds = %if.then414, %if.end410
  %223 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1559
  %window416 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %223, i32 0, i32 1, !dbg !1561
  %224 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window416, align 8, !dbg !1561
  %cmp417 = icmp eq float (float, %struct._ResizeFilter*)* %224, @Jinc, !dbg !1562
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !1563

if.then419:                                       ; preds = %if.end415
  store i32 13, i32* %window_type, align 4, !dbg !1564
  br label %if.end420, !dbg !1565

if.end420:                                        ; preds = %if.then419, %if.end415
  %225 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1566
  %window421 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %225, i32 0, i32 1, !dbg !1568
  %226 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window421, align 8, !dbg !1568
  %cmp422 = icmp eq float (float, %struct._ResizeFilter*)* %226, @CubicBC, !dbg !1569
  br i1 %cmp422, label %if.then424, label %if.end425, !dbg !1570

if.then424:                                       ; preds = %if.end420
  store i32 10, i32* %window_type, align 4, !dbg !1571
  br label %if.end425, !dbg !1572

if.end425:                                        ; preds = %if.then424, %if.end420
  %227 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1573
  %call426 = call float @GetResizeFilterSupport(%struct._ResizeFilter* %227), !dbg !1574
  %conv427 = fpext float %call426 to double, !dbg !1574
  store double %conv427, double* %support375, align 8, !dbg !1575
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1576
  %call428 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %228, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)), !dbg !1577
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1578
  %230 = load i32, i32* %filter_type, align 4, !dbg !1579
  %conv429 = zext i32 %230 to i64, !dbg !1579
  %call430 = call i8* @CommandOptionToMnemonic(i32 25, i64 %conv429), !dbg !1580
  %call431 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %229, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %call430), !dbg !1581
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1582
  %232 = load i32, i32* %window_type, align 4, !dbg !1583
  %conv432 = zext i32 %232 to i64, !dbg !1583
  %call433 = call i8* @CommandOptionToMnemonic(i32 25, i64 %conv432), !dbg !1584
  %call434 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %231, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i8* %call433), !dbg !1585
  %233 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1586
  %call435 = call i32 @GetMagickPrecision(), !dbg !1587
  %234 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1588
  %support436 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %234, i32 0, i32 2, !dbg !1589
  %235 = load float, float* %support436, align 8, !dbg !1589
  %conv437 = fpext float %235 to double, !dbg !1590
  %call438 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %233, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i32 %call435, double %conv437), !dbg !1591
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1592
  %call439 = call i32 @GetMagickPrecision(), !dbg !1593
  %237 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1594
  %window_support440 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %237, i32 0, i32 3, !dbg !1595
  %238 = load float, float* %window_support440, align 4, !dbg !1595
  %conv441 = fpext float %238 to double, !dbg !1596
  %call442 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %236, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i32 %call439, double %conv441), !dbg !1597
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1598
  %call443 = call i32 @GetMagickPrecision(), !dbg !1599
  %240 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1600
  %blur444 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %240, i32 0, i32 5, !dbg !1601
  %241 = load float, float* %blur444, align 4, !dbg !1601
  %conv445 = fpext float %241 to double, !dbg !1602
  %call446 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %239, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 %call443, double %conv445), !dbg !1603
  %242 = load i32, i32* %filter_type, align 4, !dbg !1604
  %cmp447 = icmp eq i32 %242, 8, !dbg !1606
  br i1 %cmp447, label %if.then452, label %lor.lhs.false449, !dbg !1607

lor.lhs.false449:                                 ; preds = %if.end425
  %243 = load i32, i32* %window_type, align 4, !dbg !1608
  %cmp450 = icmp eq i32 %243, 8, !dbg !1609
  br i1 %cmp450, label %if.then452, label %if.end458, !dbg !1610

if.then452:                                       ; preds = %lor.lhs.false449, %if.end425
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1611
  %call453 = call i32 @GetMagickPrecision(), !dbg !1612
  %245 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1613
  %coefficient454 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %245, i32 0, i32 6, !dbg !1614
  %arrayidx455 = getelementptr inbounds [7 x float], [7 x float]* %coefficient454, i64 0, i64 0, !dbg !1613
  %246 = load float, float* %arrayidx455, align 8, !dbg !1613
  %conv456 = fpext float %246 to double, !dbg !1615
  %call457 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %244, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i64 0, i64 0), i32 %call453, double %conv456), !dbg !1616
  br label %if.end458, !dbg !1617

if.end458:                                        ; preds = %if.then452, %lor.lhs.false449
  %247 = load i32, i32* %filter_type, align 4, !dbg !1618
  %cmp459 = icmp eq i32 %247, 16, !dbg !1620
  br i1 %cmp459, label %if.then464, label %lor.lhs.false461, !dbg !1621

lor.lhs.false461:                                 ; preds = %if.end458
  %248 = load i32, i32* %window_type, align 4, !dbg !1622
  %cmp462 = icmp eq i32 %248, 16, !dbg !1623
  br i1 %cmp462, label %if.then464, label %if.end470, !dbg !1624

if.then464:                                       ; preds = %lor.lhs.false461, %if.end458
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1625
  %call465 = call i32 @GetMagickPrecision(), !dbg !1626
  %250 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1627
  %coefficient466 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %250, i32 0, i32 6, !dbg !1628
  %arrayidx467 = getelementptr inbounds [7 x float], [7 x float]* %coefficient466, i64 0, i64 0, !dbg !1627
  %251 = load float, float* %arrayidx467, align 8, !dbg !1627
  %conv468 = fpext float %251 to double, !dbg !1629
  %call469 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %249, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i32 %call465, double %conv468), !dbg !1630
  br label %if.end470, !dbg !1631

if.end470:                                        ; preds = %if.then464, %lor.lhs.false461
  %252 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1632
  %call471 = call i32 @GetMagickPrecision(), !dbg !1633
  %253 = load double, double* %support375, align 8, !dbg !1634
  %call472 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %252, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i32 %call471, double %253), !dbg !1635
  %254 = load i32, i32* %filter_type, align 4, !dbg !1636
  %cmp473 = icmp eq i32 %254, 10, !dbg !1638
  br i1 %cmp473, label %if.then478, label %lor.lhs.false475, !dbg !1639

lor.lhs.false475:                                 ; preds = %if.end470
  %255 = load i32, i32* %window_type, align 4, !dbg !1640
  %cmp476 = icmp eq i32 %255, 10, !dbg !1641
  br i1 %cmp476, label %if.then478, label %if.end484, !dbg !1642

if.then478:                                       ; preds = %lor.lhs.false475, %if.end470
  %256 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1643
  %call479 = call i32 @GetMagickPrecision(), !dbg !1644
  %257 = load float, float* %B, align 4, !dbg !1645
  %conv480 = fpext float %257 to double, !dbg !1646
  %call481 = call i32 @GetMagickPrecision(), !dbg !1647
  %258 = load float, float* %C, align 4, !dbg !1648
  %conv482 = fpext float %258 to double, !dbg !1649
  %call483 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %256, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0), i32 %call479, double %conv480, i32 %call481, double %conv482), !dbg !1650
  br label %if.end484, !dbg !1651

if.end484:                                        ; preds = %if.then478, %lor.lhs.false475
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1652
  %call485 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)), !dbg !1653
  store double 0.000000e+00, double* %x, align 8, !dbg !1654
  br label %for.cond, !dbg !1656

for.cond:                                         ; preds = %for.inc, %if.end484
  %260 = load double, double* %x, align 8, !dbg !1657
  %261 = load double, double* %support375, align 8, !dbg !1659
  %cmp486 = fcmp ole double %260, %261, !dbg !1660
  br i1 %cmp486, label %for.body, label %for.end, !dbg !1661

for.body:                                         ; preds = %for.cond
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1662
  %263 = load double, double* %x, align 8, !dbg !1663
  %call488 = call i32 @GetMagickPrecision(), !dbg !1664
  %264 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1665
  %265 = load double, double* %x, align 8, !dbg !1666
  %conv489 = fptrunc double %265 to float, !dbg !1666
  %call490 = call float @GetResizeFilterWeight(%struct._ResizeFilter* %264, float %conv489), !dbg !1667
  %conv491 = fpext float %call490 to double, !dbg !1668
  %call492 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %262, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), double %263, i32 %call488, double %conv491), !dbg !1669
  br label %for.inc, !dbg !1670

for.inc:                                          ; preds = %for.body
  %266 = load double, double* %x, align 8, !dbg !1671
  %add493 = fadd double %266, 0x3F847AE140000000, !dbg !1671
  store double %add493, double* %x, align 8, !dbg !1671
  br label %for.cond, !dbg !1672, !llvm.loop !1673

for.end:                                          ; preds = %for.cond
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1675
  %268 = load double, double* %support375, align 8, !dbg !1676
  %call494 = call i32 @GetMagickPrecision(), !dbg !1677
  %call495 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %267, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), double %268, i32 %call494, double 0.000000e+00), !dbg !1678
  br label %if.end496, !dbg !1679

if.end496:                                        ; preds = %for.end, %if.end371
  %269 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1680
  %call497 = call i32 @DeleteImageArtifact(%struct._Image* %269, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)), !dbg !1681
  %270 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !1682
  ret %struct._ResizeFilter* %270, !dbg !1683
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal float @Box(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1684 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1685, metadata !DIExpression()), !dbg !1686
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1687, metadata !DIExpression()), !dbg !1688
  ret float 1.000000e+00, !dbg !1689
}

; Function Attrs: noinline nounwind uwtable
define internal float @Triangle(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1690 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1691, metadata !DIExpression()), !dbg !1692
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1693, metadata !DIExpression()), !dbg !1694
  %0 = load float, float* %x.addr, align 4, !dbg !1695
  %conv = fpext float %0 to double, !dbg !1695
  %cmp = fcmp olt double %conv, 1.000000e+00, !dbg !1697
  br i1 %cmp, label %if.then, label %if.end, !dbg !1698

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !1699
  %conv2 = fpext float %1 to double, !dbg !1699
  %sub = fsub double 1.000000e+00, %conv2, !dbg !1700
  %conv3 = fptrunc double %sub to float, !dbg !1701
  store float %conv3, float* %retval, align 4, !dbg !1702
  br label %return, !dbg !1702

if.end:                                           ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !1703
  br label %return, !dbg !1703

return:                                           ; preds = %if.end, %if.then
  %2 = load float, float* %retval, align 4, !dbg !1704
  ret float %2, !dbg !1704
}

; Function Attrs: noinline nounwind uwtable
define internal float @CubicBC(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1705 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1706, metadata !DIExpression()), !dbg !1707
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1708, metadata !DIExpression()), !dbg !1709
  %0 = load float, float* %x.addr, align 4, !dbg !1710
  %conv = fpext float %0 to double, !dbg !1710
  %cmp = fcmp olt double %conv, 1.000000e+00, !dbg !1712
  br i1 %cmp, label %if.then, label %if.end, !dbg !1713

if.then:                                          ; preds = %entry
  %1 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1714
  %coefficient = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %1, i32 0, i32 6, !dbg !1715
  %arrayidx = getelementptr inbounds [7 x float], [7 x float]* %coefficient, i64 0, i64 0, !dbg !1714
  %2 = load float, float* %arrayidx, align 8, !dbg !1714
  %3 = load float, float* %x.addr, align 4, !dbg !1716
  %4 = load float, float* %x.addr, align 4, !dbg !1717
  %5 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1718
  %coefficient2 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %5, i32 0, i32 6, !dbg !1719
  %arrayidx3 = getelementptr inbounds [7 x float], [7 x float]* %coefficient2, i64 0, i64 1, !dbg !1718
  %6 = load float, float* %arrayidx3, align 4, !dbg !1718
  %7 = load float, float* %x.addr, align 4, !dbg !1720
  %8 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1721
  %coefficient4 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %8, i32 0, i32 6, !dbg !1722
  %arrayidx5 = getelementptr inbounds [7 x float], [7 x float]* %coefficient4, i64 0, i64 2, !dbg !1721
  %9 = load float, float* %arrayidx5, align 8, !dbg !1721
  %mul = fmul float %7, %9, !dbg !1723
  %add = fadd float %6, %mul, !dbg !1724
  %mul6 = fmul float %4, %add, !dbg !1725
  %mul7 = fmul float %3, %mul6, !dbg !1726
  %add8 = fadd float %2, %mul7, !dbg !1727
  store float %add8, float* %retval, align 4, !dbg !1728
  br label %return, !dbg !1728

if.end:                                           ; preds = %entry
  %10 = load float, float* %x.addr, align 4, !dbg !1729
  %conv9 = fpext float %10 to double, !dbg !1729
  %cmp10 = fcmp olt double %conv9, 2.000000e+00, !dbg !1731
  br i1 %cmp10, label %if.then12, label %if.end27, !dbg !1732

if.then12:                                        ; preds = %if.end
  %11 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1733
  %coefficient13 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %11, i32 0, i32 6, !dbg !1734
  %arrayidx14 = getelementptr inbounds [7 x float], [7 x float]* %coefficient13, i64 0, i64 3, !dbg !1733
  %12 = load float, float* %arrayidx14, align 4, !dbg !1733
  %13 = load float, float* %x.addr, align 4, !dbg !1735
  %14 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1736
  %coefficient15 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %14, i32 0, i32 6, !dbg !1737
  %arrayidx16 = getelementptr inbounds [7 x float], [7 x float]* %coefficient15, i64 0, i64 4, !dbg !1736
  %15 = load float, float* %arrayidx16, align 8, !dbg !1736
  %16 = load float, float* %x.addr, align 4, !dbg !1738
  %17 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1739
  %coefficient17 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %17, i32 0, i32 6, !dbg !1740
  %arrayidx18 = getelementptr inbounds [7 x float], [7 x float]* %coefficient17, i64 0, i64 5, !dbg !1739
  %18 = load float, float* %arrayidx18, align 4, !dbg !1739
  %19 = load float, float* %x.addr, align 4, !dbg !1741
  %20 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1742
  %coefficient19 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %20, i32 0, i32 6, !dbg !1743
  %arrayidx20 = getelementptr inbounds [7 x float], [7 x float]* %coefficient19, i64 0, i64 6, !dbg !1742
  %21 = load float, float* %arrayidx20, align 8, !dbg !1742
  %mul21 = fmul float %19, %21, !dbg !1744
  %add22 = fadd float %18, %mul21, !dbg !1745
  %mul23 = fmul float %16, %add22, !dbg !1746
  %add24 = fadd float %15, %mul23, !dbg !1747
  %mul25 = fmul float %13, %add24, !dbg !1748
  %add26 = fadd float %12, %mul25, !dbg !1749
  store float %add26, float* %retval, align 4, !dbg !1750
  br label %return, !dbg !1750

if.end27:                                         ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !1751
  br label %return, !dbg !1751

return:                                           ; preds = %if.end27, %if.then12, %if.then
  %22 = load float, float* %retval, align 4, !dbg !1752
  ret float %22, !dbg !1752
}

; Function Attrs: noinline nounwind uwtable
define internal float @Hanning(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1753 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %cosine = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1754, metadata !DIExpression()), !dbg !1755
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1756, metadata !DIExpression()), !dbg !1757
  call void @llvm.dbg.declare(metadata float* %cosine, metadata !1758, metadata !DIExpression()), !dbg !1759
  %0 = load float, float* %x.addr, align 4, !dbg !1760
  %conv = fpext float %0 to double, !dbg !1760
  %mul = fmul double 0x400921FB54442D18, %conv, !dbg !1761
  %call = call double @cos(double %mul) #13, !dbg !1762
  %conv1 = fptrunc double %call to float, !dbg !1762
  store float %conv1, float* %cosine, align 4, !dbg !1759
  %1 = load float, float* %cosine, align 4, !dbg !1763
  %conv2 = fpext float %1 to double, !dbg !1763
  %mul3 = fmul double 5.000000e-01, %conv2, !dbg !1764
  %add = fadd double 5.000000e-01, %mul3, !dbg !1765
  %conv4 = fptrunc double %add to float, !dbg !1766
  ret float %conv4, !dbg !1767
}

; Function Attrs: noinline nounwind uwtable
define internal float @Hamming(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1768 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %cosine = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1769, metadata !DIExpression()), !dbg !1770
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1771, metadata !DIExpression()), !dbg !1772
  call void @llvm.dbg.declare(metadata float* %cosine, metadata !1773, metadata !DIExpression()), !dbg !1774
  %0 = load float, float* %x.addr, align 4, !dbg !1775
  %conv = fpext float %0 to double, !dbg !1775
  %mul = fmul double 0x400921FB54442D18, %conv, !dbg !1776
  %call = call double @cos(double %mul) #13, !dbg !1777
  %conv1 = fptrunc double %call to float, !dbg !1777
  store float %conv1, float* %cosine, align 4, !dbg !1774
  %1 = load float, float* %cosine, align 4, !dbg !1778
  %conv2 = fpext float %1 to double, !dbg !1778
  %mul3 = fmul double 4.600000e-01, %conv2, !dbg !1779
  %add = fadd double 5.400000e-01, %mul3, !dbg !1780
  %conv4 = fptrunc double %add to float, !dbg !1781
  ret float %conv4, !dbg !1782
}

; Function Attrs: noinline nounwind uwtable
define internal float @Blackman(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1783 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %cosine = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1784, metadata !DIExpression()), !dbg !1785
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1786, metadata !DIExpression()), !dbg !1787
  call void @llvm.dbg.declare(metadata float* %cosine, metadata !1788, metadata !DIExpression()), !dbg !1789
  %0 = load float, float* %x.addr, align 4, !dbg !1790
  %conv = fpext float %0 to double, !dbg !1790
  %mul = fmul double 0x400921FB54442D18, %conv, !dbg !1791
  %call = call double @cos(double %mul) #13, !dbg !1792
  %conv1 = fptrunc double %call to float, !dbg !1792
  store float %conv1, float* %cosine, align 4, !dbg !1789
  %1 = load float, float* %cosine, align 4, !dbg !1793
  %conv2 = fpext float %1 to double, !dbg !1793
  %2 = load float, float* %cosine, align 4, !dbg !1794
  %conv3 = fpext float %2 to double, !dbg !1794
  %mul4 = fmul double %conv3, 1.600000e-01, !dbg !1795
  %add = fadd double 5.000000e-01, %mul4, !dbg !1796
  %mul5 = fmul double %conv2, %add, !dbg !1797
  %add6 = fadd double 3.400000e-01, %mul5, !dbg !1798
  %conv7 = fptrunc double %add6 to float, !dbg !1799
  ret float %conv7, !dbg !1800
}

; Function Attrs: noinline nounwind uwtable
define internal float @Gaussian(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1801 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1802, metadata !DIExpression()), !dbg !1803
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1804, metadata !DIExpression()), !dbg !1805
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1806
  %coefficient = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 6, !dbg !1807
  %arrayidx = getelementptr inbounds [7 x float], [7 x float]* %coefficient, i64 0, i64 1, !dbg !1806
  %1 = load float, float* %arrayidx, align 4, !dbg !1806
  %fneg = fneg float %1, !dbg !1808
  %2 = load float, float* %x.addr, align 4, !dbg !1809
  %mul = fmul float %fneg, %2, !dbg !1810
  %3 = load float, float* %x.addr, align 4, !dbg !1811
  %mul1 = fmul float %mul, %3, !dbg !1812
  %conv = fpext float %mul1 to double, !dbg !1813
  %call = call double @exp(double %conv) #13, !dbg !1814
  %conv2 = fptrunc double %call to float, !dbg !1815
  ret float %conv2, !dbg !1816
}

; Function Attrs: noinline nounwind uwtable
define internal float @Quadratic(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1817 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1818, metadata !DIExpression()), !dbg !1819
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1820, metadata !DIExpression()), !dbg !1821
  %0 = load float, float* %x.addr, align 4, !dbg !1822
  %conv = fpext float %0 to double, !dbg !1822
  %cmp = fcmp olt double %conv, 5.000000e-01, !dbg !1824
  br i1 %cmp, label %if.then, label %if.end, !dbg !1825

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !1826
  %2 = load float, float* %x.addr, align 4, !dbg !1827
  %mul = fmul float %1, %2, !dbg !1828
  %conv2 = fpext float %mul to double, !dbg !1826
  %sub = fsub double 7.500000e-01, %conv2, !dbg !1829
  %conv3 = fptrunc double %sub to float, !dbg !1830
  store float %conv3, float* %retval, align 4, !dbg !1831
  br label %return, !dbg !1831

if.end:                                           ; preds = %entry
  %3 = load float, float* %x.addr, align 4, !dbg !1832
  %conv4 = fpext float %3 to double, !dbg !1832
  %cmp5 = fcmp olt double %conv4, 1.500000e+00, !dbg !1834
  br i1 %cmp5, label %if.then7, label %if.end15, !dbg !1835

if.then7:                                         ; preds = %if.end
  %4 = load float, float* %x.addr, align 4, !dbg !1836
  %conv8 = fpext float %4 to double, !dbg !1836
  %sub9 = fsub double %conv8, 1.500000e+00, !dbg !1837
  %mul10 = fmul double 5.000000e-01, %sub9, !dbg !1838
  %5 = load float, float* %x.addr, align 4, !dbg !1839
  %conv11 = fpext float %5 to double, !dbg !1839
  %sub12 = fsub double %conv11, 1.500000e+00, !dbg !1840
  %mul13 = fmul double %mul10, %sub12, !dbg !1841
  %conv14 = fptrunc double %mul13 to float, !dbg !1842
  store float %conv14, float* %retval, align 4, !dbg !1843
  br label %return, !dbg !1843

if.end15:                                         ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !1844
  br label %return, !dbg !1844

return:                                           ; preds = %if.end15, %if.then7, %if.then
  %6 = load float, float* %retval, align 4, !dbg !1845
  ret float %6, !dbg !1845
}

; Function Attrs: noinline nounwind uwtable
define internal float @Jinc(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1846 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1847, metadata !DIExpression()), !dbg !1848
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1849, metadata !DIExpression()), !dbg !1850
  %0 = load float, float* %x.addr, align 4, !dbg !1851
  %conv = fpext float %0 to double, !dbg !1851
  %cmp = fcmp oeq double %conv, 0.000000e+00, !dbg !1853
  br i1 %cmp, label %if.then, label %if.end, !dbg !1854

if.then:                                          ; preds = %entry
  store float 0x3FF921FB60000000, float* %retval, align 4, !dbg !1855
  br label %return, !dbg !1855

if.end:                                           ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !1856
  %mul = fmul float 0x400921FB60000000, %1, !dbg !1857
  %call = call float @BesselOrderOne(float %mul), !dbg !1858
  %2 = load float, float* %x.addr, align 4, !dbg !1859
  %div = fdiv float %call, %2, !dbg !1860
  store float %div, float* %retval, align 4, !dbg !1861
  br label %return, !dbg !1861

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !1862
  ret float %3, !dbg !1862
}

; Function Attrs: noinline nounwind uwtable
define internal float @Sinc(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1863 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %alpha = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1864, metadata !DIExpression()), !dbg !1865
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1866, metadata !DIExpression()), !dbg !1867
  %0 = load float, float* %x.addr, align 4, !dbg !1868
  %conv = fpext float %0 to double, !dbg !1868
  %cmp = fcmp une double %conv, 0.000000e+00, !dbg !1870
  br i1 %cmp, label %if.then, label %if.end, !dbg !1871

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !1872, metadata !DIExpression()), !dbg !1874
  %1 = load float, float* %x.addr, align 4, !dbg !1875
  %conv2 = fpext float %1 to double, !dbg !1875
  %mul = fmul double 0x400921FB54442D18, %conv2, !dbg !1876
  %conv3 = fptrunc double %mul to float, !dbg !1877
  store float %conv3, float* %alpha, align 4, !dbg !1874
  %2 = load float, float* %alpha, align 4, !dbg !1878
  %conv4 = fpext float %2 to double, !dbg !1879
  %call = call double @sin(double %conv4) #13, !dbg !1880
  %3 = load float, float* %alpha, align 4, !dbg !1881
  %conv5 = fpext float %3 to double, !dbg !1881
  %div = fdiv double %call, %conv5, !dbg !1882
  %conv6 = fptrunc double %div to float, !dbg !1883
  store float %conv6, float* %retval, align 4, !dbg !1884
  br label %return, !dbg !1884

if.end:                                           ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !1885
  br label %return, !dbg !1885

return:                                           ; preds = %if.end, %if.then
  %4 = load float, float* %retval, align 4, !dbg !1886
  ret float %4, !dbg !1886
}

; Function Attrs: noinline nounwind uwtable
define internal float @SincFast(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1887 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %alpha = alloca float, align 4
  %xx = alloca float, align 4
  %c0 = alloca double, align 8
  %c1 = alloca double, align 8
  %c2 = alloca double, align 8
  %c3 = alloca double, align 8
  %c4 = alloca double, align 8
  %c5 = alloca double, align 8
  %c6 = alloca double, align 8
  %c7 = alloca double, align 8
  %c8 = alloca double, align 8
  %c9 = alloca double, align 8
  %p = alloca double, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1888, metadata !DIExpression()), !dbg !1889
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1890, metadata !DIExpression()), !dbg !1891
  %0 = load float, float* %x.addr, align 4, !dbg !1892
  %conv = fpext float %0 to double, !dbg !1892
  %cmp = fcmp ogt double %conv, 4.000000e+00, !dbg !1894
  br i1 %cmp, label %if.then, label %if.end, !dbg !1895

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !1896, metadata !DIExpression()), !dbg !1898
  %1 = load float, float* %x.addr, align 4, !dbg !1899
  %conv2 = fpext float %1 to double, !dbg !1899
  %mul = fmul double 0x400921FB54442D18, %conv2, !dbg !1900
  %conv3 = fptrunc double %mul to float, !dbg !1901
  store float %conv3, float* %alpha, align 4, !dbg !1898
  %2 = load float, float* %alpha, align 4, !dbg !1902
  %conv4 = fpext float %2 to double, !dbg !1903
  %call = call double @sin(double %conv4) #13, !dbg !1904
  %3 = load float, float* %alpha, align 4, !dbg !1905
  %conv5 = fpext float %3 to double, !dbg !1905
  %div = fdiv double %call, %conv5, !dbg !1906
  %conv6 = fptrunc double %div to float, !dbg !1907
  store float %conv6, float* %retval, align 4, !dbg !1908
  br label %return, !dbg !1908

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %xx, metadata !1909, metadata !DIExpression()), !dbg !1911
  %4 = load float, float* %x.addr, align 4, !dbg !1912
  %5 = load float, float* %x.addr, align 4, !dbg !1913
  %mul7 = fmul float %4, %5, !dbg !1914
  store float %mul7, float* %xx, align 4, !dbg !1911
  call void @llvm.dbg.declare(metadata double* %c0, metadata !1915, metadata !DIExpression()), !dbg !1916
  store double 0x3F5C71C712204843, double* %c0, align 8, !dbg !1916
  call void @llvm.dbg.declare(metadata double* %c1, metadata !1917, metadata !DIExpression()), !dbg !1918
  store double 0xBF392E7E30A21C51, double* %c1, align 8, !dbg !1918
  call void @llvm.dbg.declare(metadata double* %c2, metadata !1919, metadata !DIExpression()), !dbg !1920
  store double 0x3F04AAE0F2F31F28, double* %c2, align 8, !dbg !1920
  call void @llvm.dbg.declare(metadata double* %c3, metadata !1921, metadata !DIExpression()), !dbg !1922
  store double 0xBEC50D655760D6D4, double* %c3, align 8, !dbg !1922
  call void @llvm.dbg.declare(metadata double* %c4, metadata !1923, metadata !DIExpression()), !dbg !1924
  store double 0x3E7E09D9614D342A, double* %c4, align 8, !dbg !1924
  call void @llvm.dbg.declare(metadata double* %c5, metadata !1925, metadata !DIExpression()), !dbg !1926
  store double 0xBE300406665C46FB, double* %c5, align 8, !dbg !1926
  call void @llvm.dbg.declare(metadata double* %c6, metadata !1927, metadata !DIExpression()), !dbg !1928
  store double 0x3DDA532C7DACB935, double* %c6, align 8, !dbg !1928
  call void @llvm.dbg.declare(metadata double* %c7, metadata !1929, metadata !DIExpression()), !dbg !1930
  store double 0xBD80778FF9CFD451, double* %c7, align 8, !dbg !1930
  call void @llvm.dbg.declare(metadata double* %c8, metadata !1931, metadata !DIExpression()), !dbg !1932
  store double 0x3D1C8B574F3D493C, double* %c8, align 8, !dbg !1932
  call void @llvm.dbg.declare(metadata double* %c9, metadata !1933, metadata !DIExpression()), !dbg !1934
  store double 0xBCA98546B213E547, double* %c9, align 8, !dbg !1934
  call void @llvm.dbg.declare(metadata double* %p, metadata !1935, metadata !DIExpression()), !dbg !1936
  %6 = load float, float* %xx, align 4, !dbg !1937
  %conv8 = fpext float %6 to double, !dbg !1937
  %7 = load float, float* %xx, align 4, !dbg !1938
  %conv9 = fpext float %7 to double, !dbg !1938
  %8 = load float, float* %xx, align 4, !dbg !1939
  %conv10 = fpext float %8 to double, !dbg !1939
  %9 = load float, float* %xx, align 4, !dbg !1940
  %conv11 = fpext float %9 to double, !dbg !1940
  %10 = load float, float* %xx, align 4, !dbg !1941
  %conv12 = fpext float %10 to double, !dbg !1941
  %11 = load float, float* %xx, align 4, !dbg !1942
  %conv13 = fpext float %11 to double, !dbg !1942
  %12 = load float, float* %xx, align 4, !dbg !1943
  %conv14 = fpext float %12 to double, !dbg !1943
  %13 = load float, float* %xx, align 4, !dbg !1944
  %conv15 = fpext float %13 to double, !dbg !1944
  %14 = load float, float* %xx, align 4, !dbg !1945
  %conv16 = fpext float %14 to double, !dbg !1945
  %mul17 = fmul double %conv16, 0xBCA98546B213E547, !dbg !1946
  %add = fadd double 0x3D1C8B574F3D493C, %mul17, !dbg !1947
  %mul18 = fmul double %conv15, %add, !dbg !1948
  %add19 = fadd double 0xBD80778FF9CFD451, %mul18, !dbg !1949
  %mul20 = fmul double %conv14, %add19, !dbg !1950
  %add21 = fadd double 0x3DDA532C7DACB935, %mul20, !dbg !1951
  %mul22 = fmul double %conv13, %add21, !dbg !1952
  %add23 = fadd double 0xBE300406665C46FB, %mul22, !dbg !1953
  %mul24 = fmul double %conv12, %add23, !dbg !1954
  %add25 = fadd double 0x3E7E09D9614D342A, %mul24, !dbg !1955
  %mul26 = fmul double %conv11, %add25, !dbg !1956
  %add27 = fadd double 0xBEC50D655760D6D4, %mul26, !dbg !1957
  %mul28 = fmul double %conv10, %add27, !dbg !1958
  %add29 = fadd double 0x3F04AAE0F2F31F28, %mul28, !dbg !1959
  %mul30 = fmul double %conv9, %add29, !dbg !1960
  %add31 = fadd double 0xBF392E7E30A21C51, %mul30, !dbg !1961
  %mul32 = fmul double %conv8, %add31, !dbg !1962
  %add33 = fadd double 0x3F5C71C712204843, %mul32, !dbg !1963
  store double %add33, double* %p, align 8, !dbg !1936
  %15 = load float, float* %xx, align 4, !dbg !1964
  %conv34 = fpext float %15 to double, !dbg !1964
  %sub = fsub double %conv34, 1.000000e+00, !dbg !1965
  %16 = load float, float* %xx, align 4, !dbg !1966
  %conv35 = fpext float %16 to double, !dbg !1966
  %sub36 = fsub double %conv35, 4.000000e+00, !dbg !1967
  %mul37 = fmul double %sub, %sub36, !dbg !1968
  %17 = load float, float* %xx, align 4, !dbg !1969
  %conv38 = fpext float %17 to double, !dbg !1969
  %sub39 = fsub double %conv38, 9.000000e+00, !dbg !1970
  %mul40 = fmul double %mul37, %sub39, !dbg !1971
  %18 = load float, float* %xx, align 4, !dbg !1972
  %conv41 = fpext float %18 to double, !dbg !1972
  %sub42 = fsub double %conv41, 1.600000e+01, !dbg !1973
  %mul43 = fmul double %mul40, %sub42, !dbg !1974
  %19 = load double, double* %p, align 8, !dbg !1975
  %mul44 = fmul double %mul43, %19, !dbg !1976
  %conv45 = fptrunc double %mul44 to float, !dbg !1977
  store float %conv45, float* %retval, align 4, !dbg !1978
  br label %return, !dbg !1978

return:                                           ; preds = %if.end, %if.then
  %20 = load float, float* %retval, align 4, !dbg !1979
  ret float %20, !dbg !1979
}

; Function Attrs: noinline nounwind uwtable
define internal float @Kaiser(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1980 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1981, metadata !DIExpression()), !dbg !1982
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !1983, metadata !DIExpression()), !dbg !1984
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1985
  %coefficient = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 6, !dbg !1986
  %arrayidx = getelementptr inbounds [7 x float], [7 x float]* %coefficient, i64 0, i64 1, !dbg !1985
  %1 = load float, float* %arrayidx, align 4, !dbg !1985
  %2 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !1987
  %coefficient1 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %2, i32 0, i32 6, !dbg !1988
  %arrayidx2 = getelementptr inbounds [7 x float], [7 x float]* %coefficient1, i64 0, i64 0, !dbg !1987
  %3 = load float, float* %arrayidx2, align 8, !dbg !1987
  %conv = fpext float %3 to double, !dbg !1987
  %4 = load float, float* %x.addr, align 4, !dbg !1989
  %5 = load float, float* %x.addr, align 4, !dbg !1990
  %mul = fmul float %4, %5, !dbg !1991
  %conv3 = fpext float %mul to double, !dbg !1989
  %sub = fsub double 1.000000e+00, %conv3, !dbg !1992
  %call = call double @sqrt(double %sub) #13, !dbg !1993
  %mul4 = fmul double %conv, %call, !dbg !1994
  %conv5 = fptrunc double %mul4 to float, !dbg !1987
  %call6 = call float @I0(float %conv5), !dbg !1995
  %mul7 = fmul float %1, %call6, !dbg !1996
  ret float %mul7, !dbg !1997
}

; Function Attrs: noinline nounwind uwtable
define internal float @Welsh(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !1998 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1999, metadata !DIExpression()), !dbg !2000
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2001, metadata !DIExpression()), !dbg !2002
  %0 = load float, float* %x.addr, align 4, !dbg !2003
  %conv = fpext float %0 to double, !dbg !2003
  %cmp = fcmp olt double %conv, 1.000000e+00, !dbg !2005
  br i1 %cmp, label %if.then, label %if.end, !dbg !2006

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !2007
  %2 = load float, float* %x.addr, align 4, !dbg !2008
  %mul = fmul float %1, %2, !dbg !2009
  %conv2 = fpext float %mul to double, !dbg !2007
  %sub = fsub double 1.000000e+00, %conv2, !dbg !2010
  %conv3 = fptrunc double %sub to float, !dbg !2011
  store float %conv3, float* %retval, align 4, !dbg !2012
  br label %return, !dbg !2012

if.end:                                           ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !2013
  br label %return, !dbg !2013

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !2014
  ret float %3, !dbg !2014
}

; Function Attrs: noinline nounwind uwtable
define internal float @Bohman(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !2015 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %cosine = alloca double, align 8
  %sine = alloca double, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !2016, metadata !DIExpression()), !dbg !2017
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata double* %cosine, metadata !2020, metadata !DIExpression()), !dbg !2021
  %0 = load float, float* %x.addr, align 4, !dbg !2022
  %conv = fpext float %0 to double, !dbg !2022
  %mul = fmul double 0x400921FB54442D18, %conv, !dbg !2023
  %call = call double @cos(double %mul) #13, !dbg !2024
  store double %call, double* %cosine, align 8, !dbg !2021
  call void @llvm.dbg.declare(metadata double* %sine, metadata !2025, metadata !DIExpression()), !dbg !2026
  %1 = load double, double* %cosine, align 8, !dbg !2027
  %2 = load double, double* %cosine, align 8, !dbg !2028
  %mul1 = fmul double %1, %2, !dbg !2029
  %sub = fsub double 1.000000e+00, %mul1, !dbg !2030
  %call2 = call double @sqrt(double %sub) #13, !dbg !2031
  store double %call2, double* %sine, align 8, !dbg !2026
  %3 = load float, float* %x.addr, align 4, !dbg !2032
  %conv3 = fpext float %3 to double, !dbg !2032
  %sub4 = fsub double 1.000000e+00, %conv3, !dbg !2033
  %4 = load double, double* %cosine, align 8, !dbg !2034
  %mul5 = fmul double %sub4, %4, !dbg !2035
  %5 = load double, double* %sine, align 8, !dbg !2036
  %mul6 = fmul double 0x3FD45F306DC9C883, %5, !dbg !2037
  %add = fadd double %mul5, %mul6, !dbg !2038
  %conv7 = fptrunc double %add to float, !dbg !2039
  ret float %conv7, !dbg !2040
}

; Function Attrs: noinline nounwind uwtable
define internal float @Lagrange(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !2041 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %value = alloca float, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %order = alloca i64, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !2042, metadata !DIExpression()), !dbg !2043
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2044, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.declare(metadata float* %value, metadata !2046, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2050, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.declare(metadata i64* %order, metadata !2052, metadata !DIExpression()), !dbg !2053
  %0 = load float, float* %x.addr, align 4, !dbg !2054
  %1 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2056
  %support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %1, i32 0, i32 2, !dbg !2057
  %2 = load float, float* %support, align 8, !dbg !2057
  %cmp = fcmp ogt float %0, %2, !dbg !2058
  br i1 %cmp, label %if.then, label %if.end, !dbg !2059

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !2060
  br label %return, !dbg !2060

if.end:                                           ; preds = %entry
  %3 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2061
  %window_support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %3, i32 0, i32 3, !dbg !2062
  %4 = load float, float* %window_support, align 4, !dbg !2062
  %conv = fpext float %4 to double, !dbg !2061
  %mul = fmul double 2.000000e+00, %conv, !dbg !2063
  %conv1 = fptosi double %mul to i64, !dbg !2064
  store i64 %conv1, i64* %order, align 8, !dbg !2065
  %5 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2066
  %window_support2 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %5, i32 0, i32 3, !dbg !2067
  %6 = load float, float* %window_support2, align 4, !dbg !2067
  %7 = load float, float* %x.addr, align 4, !dbg !2068
  %add = fadd float %6, %7, !dbg !2069
  %conv3 = fptosi float %add to i64, !dbg !2070
  store i64 %conv3, i64* %n, align 8, !dbg !2071
  store float 1.000000e+00, float* %value, align 4, !dbg !2072
  store i64 0, i64* %i, align 8, !dbg !2073
  br label %for.cond, !dbg !2075

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i64, i64* %i, align 8, !dbg !2076
  %9 = load i64, i64* %order, align 8, !dbg !2078
  %cmp4 = icmp slt i64 %8, %9, !dbg !2079
  br i1 %cmp4, label %for.body, label %for.end, !dbg !2080

for.body:                                         ; preds = %for.cond
  %10 = load i64, i64* %i, align 8, !dbg !2081
  %11 = load i64, i64* %n, align 8, !dbg !2083
  %cmp6 = icmp ne i64 %10, %11, !dbg !2084
  br i1 %cmp6, label %if.then8, label %if.end14, !dbg !2085

if.then8:                                         ; preds = %for.body
  %12 = load i64, i64* %n, align 8, !dbg !2086
  %13 = load i64, i64* %i, align 8, !dbg !2087
  %sub = sub nsw i64 %12, %13, !dbg !2088
  %conv9 = sitofp i64 %sub to float, !dbg !2086
  %14 = load float, float* %x.addr, align 4, !dbg !2089
  %sub10 = fsub float %conv9, %14, !dbg !2090
  %15 = load i64, i64* %n, align 8, !dbg !2091
  %16 = load i64, i64* %i, align 8, !dbg !2092
  %sub11 = sub nsw i64 %15, %16, !dbg !2093
  %conv12 = sitofp i64 %sub11 to float, !dbg !2094
  %div = fdiv float %sub10, %conv12, !dbg !2095
  %17 = load float, float* %value, align 4, !dbg !2096
  %mul13 = fmul float %17, %div, !dbg !2096
  store float %mul13, float* %value, align 4, !dbg !2096
  br label %if.end14, !dbg !2097

if.end14:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !2083

for.inc:                                          ; preds = %if.end14
  %18 = load i64, i64* %i, align 8, !dbg !2098
  %inc = add nsw i64 %18, 1, !dbg !2098
  store i64 %inc, i64* %i, align 8, !dbg !2098
  br label %for.cond, !dbg !2099, !llvm.loop !2100

for.end:                                          ; preds = %for.cond
  %19 = load float, float* %value, align 4, !dbg !2102
  store float %19, float* %retval, align 4, !dbg !2103
  br label %return, !dbg !2103

return:                                           ; preds = %for.end, %if.then
  %20 = load float, float* %retval, align 4, !dbg !2104
  ret float %20, !dbg !2104
}

; Function Attrs: noinline nounwind uwtable
define internal float @Cosine(float %x, %struct._ResizeFilter* %resize_filter) #0 !dbg !2105 {
entry:
  %x.addr = alloca float, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !2106, metadata !DIExpression()), !dbg !2107
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  %0 = load float, float* %x.addr, align 4, !dbg !2110
  %conv = fpext float %0 to double, !dbg !2110
  %mul = fmul double 0x3FF921FB54442D18, %conv, !dbg !2111
  %call = call double @cos(double %mul) #13, !dbg !2112
  %conv1 = fptrunc double %call to float, !dbg !2113
  ret float %conv1, !dbg !2114
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #3

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local i8* @GetExceptionMessage(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

declare dso_local i8* @DestroyString(i8*) #2

declare dso_local void @CatchException(%struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @MagickCoreTerminus() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #2

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !2115 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !2121, metadata !DIExpression()), !dbg !2122
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !2123, metadata !DIExpression()), !dbg !2124
  %0 = load i8*, i8** %string.addr, align 8, !dbg !2125
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !2126
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !2127
  ret double %call, !dbg !2128
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !2129 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2133, metadata !DIExpression()), !dbg !2134
  call void @llvm.dbg.declare(metadata double* %sign, metadata !2135, metadata !DIExpression()), !dbg !2136
  %0 = load double, double* %x.addr, align 8, !dbg !2137
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !2138
  %1 = zext i1 %cmp to i64, !dbg !2137
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !2137
  store double %cond, double* %sign, align 8, !dbg !2139
  %2 = load double, double* %sign, align 8, !dbg !2140
  %3 = load double, double* %x.addr, align 8, !dbg !2142
  %mul = fmul double %2, %3, !dbg !2143
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !2144
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2145

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !2146
  %div = fdiv double 1.000000e+00, %4, !dbg !2147
  store double %div, double* %retval, align 8, !dbg !2148
  br label %return, !dbg !2148

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !2149
  %div2 = fdiv double %5, 1.000000e-15, !dbg !2150
  store double %div2, double* %retval, align 8, !dbg !2151
  br label %return, !dbg !2151

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !2152
  ret double %6, !dbg !2152
}

; Function Attrs: noinline nounwind uwtable
define internal float @I0(float %x) #0 !dbg !2153 {
entry:
  %x.addr = alloca float, align 4
  %sum = alloca float, align 4
  %t = alloca float, align 4
  %y = alloca float, align 4
  %i = alloca i64, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !2154, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.declare(metadata float* %sum, metadata !2156, metadata !DIExpression()), !dbg !2157
  call void @llvm.dbg.declare(metadata float* %t, metadata !2158, metadata !DIExpression()), !dbg !2159
  call void @llvm.dbg.declare(metadata float* %y, metadata !2160, metadata !DIExpression()), !dbg !2161
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2162, metadata !DIExpression()), !dbg !2163
  store float 1.000000e+00, float* %sum, align 4, !dbg !2164
  %0 = load float, float* %x.addr, align 4, !dbg !2165
  %1 = load float, float* %x.addr, align 4, !dbg !2166
  %mul = fmul float %0, %1, !dbg !2167
  %conv = fpext float %mul to double, !dbg !2165
  %div = fdiv double %conv, 4.000000e+00, !dbg !2168
  %conv1 = fptrunc double %div to float, !dbg !2165
  store float %conv1, float* %y, align 4, !dbg !2169
  %2 = load float, float* %y, align 4, !dbg !2170
  store float %2, float* %t, align 4, !dbg !2171
  store i64 2, i64* %i, align 8, !dbg !2172
  br label %for.cond, !dbg !2174

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load float, float* %t, align 4, !dbg !2175
  %conv2 = fpext float %3 to double, !dbg !2175
  %cmp = fcmp ogt double %conv2, 1.000000e-15, !dbg !2177
  br i1 %cmp, label %for.body, label %for.end, !dbg !2178

for.body:                                         ; preds = %for.cond
  %4 = load float, float* %t, align 4, !dbg !2179
  %5 = load float, float* %sum, align 4, !dbg !2181
  %add = fadd float %5, %4, !dbg !2181
  store float %add, float* %sum, align 4, !dbg !2181
  %6 = load float, float* %y, align 4, !dbg !2182
  %7 = load i64, i64* %i, align 8, !dbg !2183
  %conv4 = sitofp i64 %7 to float, !dbg !2184
  %8 = load i64, i64* %i, align 8, !dbg !2185
  %conv5 = sitofp i64 %8 to float, !dbg !2185
  %mul6 = fmul float %conv4, %conv5, !dbg !2186
  %div7 = fdiv float %6, %mul6, !dbg !2187
  %9 = load float, float* %t, align 4, !dbg !2188
  %mul8 = fmul float %9, %div7, !dbg !2188
  store float %mul8, float* %t, align 4, !dbg !2188
  br label %for.inc, !dbg !2189

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !2190
  %inc = add nsw i64 %10, 1, !dbg !2190
  store i64 %inc, i64* %i, align 8, !dbg !2190
  br label %for.cond, !dbg !2191, !llvm.loop !2192

for.end:                                          ; preds = %for.cond
  %11 = load float, float* %sum, align 4, !dbg !2194
  ret float %11, !dbg !2195
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @StringToLong(i8* noalias %value) #0 !dbg !2196 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !2199, metadata !DIExpression()), !dbg !2200
  %0 = load i8*, i8** %value.addr, align 8, !dbg !2201
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #13, !dbg !2202
  ret i64 %call, !dbg !2203
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

declare dso_local i32 @IsMagickTrue(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetResizeFilterSupport(%struct._ResizeFilter* %resize_filter) #0 !dbg !2204 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2207, metadata !DIExpression()), !dbg !2208
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2209
  %support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 2, !dbg !2210
  %1 = load float, float* %support, align 8, !dbg !2210
  %2 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2211
  %blur = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %2, i32 0, i32 5, !dbg !2212
  %3 = load float, float* %blur, align 4, !dbg !2212
  %mul = fmul float %1, %3, !dbg !2213
  ret float %mul, !dbg !2214
}

declare dso_local i64 @FormatLocaleFile(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i8* @CommandOptionToMnemonic(i32, i64) #2

declare dso_local i32 @GetMagickPrecision() #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetResizeFilterWeight(%struct._ResizeFilter* %resize_filter, float %x) #0 !dbg !2215 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %x.addr = alloca float, align 4
  %scale = alloca float, align 4
  %weight = alloca float, align 4
  %x_blur = alloca float, align 4
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2218, metadata !DIExpression()), !dbg !2219
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !2220, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.declare(metadata float* %scale, metadata !2222, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.declare(metadata float* %weight, metadata !2224, metadata !DIExpression()), !dbg !2225
  call void @llvm.dbg.declare(metadata float* %x_blur, metadata !2226, metadata !DIExpression()), !dbg !2227
  %0 = load float, float* %x.addr, align 4, !dbg !2228
  %conv = fpext float %0 to double, !dbg !2229
  %1 = call double @llvm.fabs.f64(double %conv), !dbg !2230
  %2 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2231
  %blur = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %2, i32 0, i32 5, !dbg !2232
  %3 = load float, float* %blur, align 4, !dbg !2232
  %conv1 = fpext float %3 to double, !dbg !2231
  %div = fdiv double %1, %conv1, !dbg !2233
  %conv2 = fptrunc double %div to float, !dbg !2230
  store float %conv2, float* %x_blur, align 4, !dbg !2234
  %4 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2235
  %window_support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %4, i32 0, i32 3, !dbg !2237
  %5 = load float, float* %window_support, align 4, !dbg !2237
  %conv3 = fpext float %5 to double, !dbg !2235
  %cmp = fcmp olt double %conv3, 1.000000e-15, !dbg !2238
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2239

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2240
  %window = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %6, i32 0, i32 1, !dbg !2241
  %7 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window, align 8, !dbg !2241
  %cmp5 = icmp eq float (float, %struct._ResizeFilter*)* %7, @Box, !dbg !2242
  br i1 %cmp5, label %if.then, label %if.else, !dbg !2243

if.then:                                          ; preds = %lor.lhs.false, %entry
  store float 1.000000e+00, float* %scale, align 4, !dbg !2244
  br label %if.end, !dbg !2245

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2246
  %scale7 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %8, i32 0, i32 4, !dbg !2248
  %9 = load float, float* %scale7, align 8, !dbg !2248
  store float %9, float* %scale, align 4, !dbg !2249
  %10 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2250
  %window8 = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %10, i32 0, i32 1, !dbg !2251
  %11 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %window8, align 8, !dbg !2251
  %12 = load float, float* %x_blur, align 4, !dbg !2252
  %13 = load float, float* %scale, align 4, !dbg !2253
  %mul = fmul float %12, %13, !dbg !2254
  %14 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2255
  %call = call float %11(float %mul, %struct._ResizeFilter* %14), !dbg !2250
  store float %call, float* %scale, align 4, !dbg !2256
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load float, float* %scale, align 4, !dbg !2257
  %16 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2258
  %filter = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %16, i32 0, i32 0, !dbg !2259
  %17 = load float (float, %struct._ResizeFilter*)*, float (float, %struct._ResizeFilter*)** %filter, align 8, !dbg !2259
  %18 = load float, float* %x_blur, align 4, !dbg !2260
  %19 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2261
  %call9 = call float %17(float %18, %struct._ResizeFilter* %19), !dbg !2258
  %mul10 = fmul float %15, %call9, !dbg !2262
  store float %mul10, float* %weight, align 4, !dbg !2263
  %20 = load float, float* %weight, align 4, !dbg !2264
  ret float %20, !dbg !2265
}

declare dso_local i32 @DeleteImageArtifact(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AdaptiveResizeImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !2266 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2270, metadata !DIExpression()), !dbg !2271
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !2272, metadata !DIExpression()), !dbg !2273
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !2274, metadata !DIExpression()), !dbg !2275
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2276, metadata !DIExpression()), !dbg !2277
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2278
  %1 = load i64, i64* %columns.addr, align 8, !dbg !2279
  %2 = load i64, i64* %rows.addr, align 8, !dbg !2280
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2281
  %call = call %struct._Image* @InterpolativeResizeImage(%struct._Image* %0, i64 %1, i64 %2, i32 6, %struct._ExceptionInfo* %3), !dbg !2282
  ret %struct._Image* %call, !dbg !2283
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @InterpolativeResizeImage(%struct._Image* %image, i64 %columns, i64 %rows, i32 %method, %struct._ExceptionInfo* %exception) #0 !dbg !2284 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %method.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %resize_view = alloca %struct._CacheView*, align 8
  %resize_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %scale = alloca %struct._PointInfo, align 8
  %y = alloca i64, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %offset = alloca %struct._PointInfo, align 8
  %resize_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x36 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2288, metadata !DIExpression()), !dbg !2289
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !2290, metadata !DIExpression()), !dbg !2291
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !2292, metadata !DIExpression()), !dbg !2293
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !2294, metadata !DIExpression()), !dbg !2295
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2296, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2298, metadata !DIExpression()), !dbg !2303
  call void @llvm.dbg.declare(metadata %struct._CacheView** %resize_view, metadata !2304, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2308, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2310, metadata !DIExpression()), !dbg !2311
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %scale, metadata !2312, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2320, metadata !DIExpression()), !dbg !2321
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2322
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2324
  %1 = load i32, i32* %debug, align 8, !dbg !2324
  %cmp = icmp ne i32 %1, 0, !dbg !2325
  br i1 %cmp, label %if.then, label %if.end, !dbg !2326

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2327
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2328
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2327
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1701, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2329
  br label %if.end, !dbg !2330

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !2331
  %cmp1 = icmp eq i64 %3, 0, !dbg !2333
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !2334

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %rows.addr, align 8, !dbg !2335
  %cmp2 = icmp eq i64 %4, 0, !dbg !2336
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2337

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2338
  br label %return, !dbg !2338

if.end4:                                          ; preds = %lor.lhs.false
  %5 = load i64, i64* %columns.addr, align 8, !dbg !2339
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2341
  %columns5 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !2342
  %7 = load i64, i64* %columns5, align 8, !dbg !2342
  %cmp6 = icmp eq i64 %5, %7, !dbg !2343
  br i1 %cmp6, label %land.lhs.true, label %if.end11, !dbg !2344

land.lhs.true:                                    ; preds = %if.end4
  %8 = load i64, i64* %rows.addr, align 8, !dbg !2345
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2346
  %rows7 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !2347
  %10 = load i64, i64* %rows7, align 8, !dbg !2347
  %cmp8 = icmp eq i64 %8, %10, !dbg !2348
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !2349

if.then9:                                         ; preds = %land.lhs.true
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2350
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2351
  %call10 = call %struct._Image* @CloneImage(%struct._Image* %11, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %12), !dbg !2352
  store %struct._Image* %call10, %struct._Image** %retval, align 8, !dbg !2353
  br label %return, !dbg !2353

if.end11:                                         ; preds = %land.lhs.true, %if.end4
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2354
  %14 = load i64, i64* %columns.addr, align 8, !dbg !2355
  %15 = load i64, i64* %rows.addr, align 8, !dbg !2356
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2357
  %call12 = call %struct._Image* @CloneImage(%struct._Image* %13, i64 %14, i64 %15, i32 1, %struct._ExceptionInfo* %16), !dbg !2358
  store %struct._Image* %call12, %struct._Image** %resize_image, align 8, !dbg !2359
  %17 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2360
  %cmp13 = icmp eq %struct._Image* %17, null, !dbg !2362
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2363

if.then14:                                        ; preds = %if.end11
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2364
  br label %return, !dbg !2364

if.end15:                                         ; preds = %if.end11
  %18 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2365
  %call16 = call i32 @SetImageStorageClass(%struct._Image* %18, i32 1), !dbg !2367
  %cmp17 = icmp eq i32 %call16, 0, !dbg !2368
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !2369

if.then18:                                        ; preds = %if.end15
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2370
  %20 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2372
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 58, !dbg !2373
  call void @InheritException(%struct._ExceptionInfo* %19, %struct._ExceptionInfo* %exception19), !dbg !2374
  %21 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2375
  %call20 = call %struct._Image* @DestroyImage(%struct._Image* %21), !dbg !2376
  store %struct._Image* %call20, %struct._Image** %resize_image, align 8, !dbg !2377
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2378
  br label %return, !dbg !2378

if.end21:                                         ; preds = %if.end15
  store i32 1, i32* %status, align 4, !dbg !2379
  store i64 0, i64* %progress, align 8, !dbg !2380
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2381
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2382
  %call22 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %22, %struct._ExceptionInfo* %23), !dbg !2383
  store %struct._CacheView* %call22, %struct._CacheView** %image_view, align 8, !dbg !2384
  %24 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2385
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2386
  %call23 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %24, %struct._ExceptionInfo* %25), !dbg !2387
  store %struct._CacheView* %call23, %struct._CacheView** %resize_view, align 8, !dbg !2388
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2389
  %columns24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !2390
  %27 = load i64, i64* %columns24, align 8, !dbg !2390
  %conv = uitofp i64 %27 to double, !dbg !2391
  %28 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2392
  %columns25 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !2393
  %29 = load i64, i64* %columns25, align 8, !dbg !2393
  %conv26 = uitofp i64 %29 to double, !dbg !2392
  %div = fdiv double %conv, %conv26, !dbg !2394
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !2395
  store double %div, double* %x, align 8, !dbg !2396
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2397
  %rows27 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !2398
  %31 = load i64, i64* %rows27, align 8, !dbg !2398
  %conv28 = uitofp i64 %31 to double, !dbg !2399
  %32 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2400
  %rows29 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 8, !dbg !2401
  %33 = load i64, i64* %rows29, align 8, !dbg !2401
  %conv30 = uitofp i64 %33 to double, !dbg !2400
  %div31 = fdiv double %conv28, %conv30, !dbg !2402
  %y32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !2403
  store double %div31, double* %y32, align 8, !dbg !2404
  store i64 0, i64* %y, align 8, !dbg !2405
  br label %for.cond, !dbg !2407

for.cond:                                         ; preds = %for.inc83, %if.end21
  %34 = load i64, i64* %y, align 8, !dbg !2408
  %35 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2410
  %rows33 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 8, !dbg !2411
  %36 = load i64, i64* %rows33, align 8, !dbg !2411
  %cmp34 = icmp slt i64 %34, %36, !dbg !2412
  br i1 %cmp34, label %for.body, label %for.end85, !dbg !2413

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2414, metadata !DIExpression()), !dbg !2416
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %offset, metadata !2417, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.declare(metadata i16** %resize_indexes, metadata !2419, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2422, metadata !DIExpression()), !dbg !2424
  call void @llvm.dbg.declare(metadata i64* %x36, metadata !2425, metadata !DIExpression()), !dbg !2426
  %37 = load i32, i32* %status, align 4, !dbg !2427
  %cmp37 = icmp eq i32 %37, 0, !dbg !2429
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !2430

if.then39:                                        ; preds = %for.body
  br label %for.inc83, !dbg !2431

if.end40:                                         ; preds = %for.body
  %38 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !2432
  %39 = load i64, i64* %y, align 8, !dbg !2433
  %40 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2434
  %columns41 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 7, !dbg !2435
  %41 = load i64, i64* %columns41, align 8, !dbg !2435
  %42 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2436
  %call42 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %38, i64 0, i64 %39, i64 %41, i64 1, %struct._ExceptionInfo* %42), !dbg !2437
  store %struct._PixelPacket* %call42, %struct._PixelPacket** %q, align 8, !dbg !2438
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2439
  %cmp43 = icmp eq %struct._PixelPacket* %43, null, !dbg !2441
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2442

if.then45:                                        ; preds = %if.end40
  br label %for.inc83, !dbg !2443

if.end46:                                         ; preds = %if.end40
  %44 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !2444
  %call47 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %44), !dbg !2445
  store i16* %call47, i16** %resize_indexes, align 8, !dbg !2446
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2447
  call void @GetMagickPixelPacket(%struct._Image* %45, %struct._MagickPixelPacket* %pixel), !dbg !2448
  %46 = load i64, i64* %y, align 8, !dbg !2449
  %conv48 = sitofp i64 %46 to float, !dbg !2450
  %conv49 = fpext float %conv48 to double, !dbg !2450
  %add = fadd double %conv49, 5.000000e-01, !dbg !2451
  %y50 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !2452
  %47 = load double, double* %y50, align 8, !dbg !2452
  %mul = fmul double %add, %47, !dbg !2453
  %sub = fsub double %mul, 5.000000e-01, !dbg !2454
  %y51 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !2455
  store double %sub, double* %y51, align 8, !dbg !2456
  store i64 0, i64* %x36, align 8, !dbg !2457
  br label %for.cond52, !dbg !2459

for.cond52:                                       ; preds = %for.inc, %if.end46
  %48 = load i64, i64* %x36, align 8, !dbg !2460
  %49 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2462
  %columns53 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 7, !dbg !2463
  %50 = load i64, i64* %columns53, align 8, !dbg !2463
  %cmp54 = icmp slt i64 %48, %50, !dbg !2464
  br i1 %cmp54, label %for.body56, label %for.end, !dbg !2465

for.body56:                                       ; preds = %for.cond52
  %51 = load i64, i64* %x36, align 8, !dbg !2466
  %conv57 = sitofp i64 %51 to float, !dbg !2468
  %conv58 = fpext float %conv57 to double, !dbg !2468
  %add59 = fadd double %conv58, 5.000000e-01, !dbg !2469
  %x60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !2470
  %52 = load double, double* %x60, align 8, !dbg !2470
  %mul61 = fmul double %add59, %52, !dbg !2471
  %sub62 = fsub double %mul61, 5.000000e-01, !dbg !2472
  %x63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !2473
  store double %sub62, double* %x63, align 8, !dbg !2474
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2475
  %54 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2476
  %55 = load i32, i32* %method.addr, align 4, !dbg !2477
  %x64 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !2478
  %56 = load double, double* %x64, align 8, !dbg !2478
  %y65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !2479
  %57 = load double, double* %y65, align 8, !dbg !2479
  %58 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2480
  %call66 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %53, %struct._CacheView* %54, i32 %55, double %56, double %57, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %58), !dbg !2481
  %59 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2482
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2483
  %61 = load i16*, i16** %resize_indexes, align 8, !dbg !2484
  %62 = load i64, i64* %x36, align 8, !dbg !2485
  %add.ptr = getelementptr inbounds i16, i16* %61, i64 %62, !dbg !2486
  call void @SetPixelPacket(%struct._Image* %59, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %60, i16* %add.ptr), !dbg !2487
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2488
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 1, !dbg !2488
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2488
  br label %for.inc, !dbg !2489

for.inc:                                          ; preds = %for.body56
  %64 = load i64, i64* %x36, align 8, !dbg !2490
  %inc = add nsw i64 %64, 1, !dbg !2490
  store i64 %inc, i64* %x36, align 8, !dbg !2490
  br label %for.cond52, !dbg !2491, !llvm.loop !2492

for.end:                                          ; preds = %for.cond52
  %65 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !2494
  %66 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2496
  %call67 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %65, %struct._ExceptionInfo* %66), !dbg !2497
  %cmp68 = icmp eq i32 %call67, 0, !dbg !2498
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2499

if.then70:                                        ; preds = %for.end
  br label %for.inc83, !dbg !2500

if.end71:                                         ; preds = %for.end
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2501
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 47, !dbg !2503
  %68 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2503
  %cmp72 = icmp ne i32 (i8*, i64, i64, i8*)* %68, null, !dbg !2504
  br i1 %cmp72, label %if.then74, label %if.end82, !dbg !2505

if.then74:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2506, metadata !DIExpression()), !dbg !2508
  %69 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2509
  %70 = load i64, i64* %progress, align 8, !dbg !2510
  %inc75 = add nsw i64 %70, 1, !dbg !2510
  store i64 %inc75, i64* %progress, align 8, !dbg !2510
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2511
  %rows76 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 8, !dbg !2512
  %72 = load i64, i64* %rows76, align 8, !dbg !2512
  %call77 = call i32 @SetImageProgress(%struct._Image* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i64 %70, i64 %72), !dbg !2513
  store i32 %call77, i32* %proceed, align 4, !dbg !2514
  %73 = load i32, i32* %proceed, align 4, !dbg !2515
  %cmp78 = icmp eq i32 %73, 0, !dbg !2517
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !2518

if.then80:                                        ; preds = %if.then74
  store i32 0, i32* %status, align 4, !dbg !2519
  br label %if.end81, !dbg !2520

if.end81:                                         ; preds = %if.then80, %if.then74
  br label %if.end82, !dbg !2521

if.end82:                                         ; preds = %if.end81, %if.end71
  br label %for.inc83, !dbg !2522

for.inc83:                                        ; preds = %if.end82, %if.then70, %if.then45, %if.then39
  %74 = load i64, i64* %y, align 8, !dbg !2523
  %inc84 = add nsw i64 %74, 1, !dbg !2523
  store i64 %inc84, i64* %y, align 8, !dbg !2523
  br label %for.cond, !dbg !2524, !llvm.loop !2525

for.end85:                                        ; preds = %for.cond
  %75 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !2527
  %call86 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %75), !dbg !2528
  store %struct._CacheView* %call86, %struct._CacheView** %resize_view, align 8, !dbg !2529
  %76 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2530
  %call87 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %76), !dbg !2531
  store %struct._CacheView* %call87, %struct._CacheView** %image_view, align 8, !dbg !2532
  %77 = load i32, i32* %status, align 4, !dbg !2533
  %cmp88 = icmp eq i32 %77, 0, !dbg !2535
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !2536

if.then90:                                        ; preds = %for.end85
  %78 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2537
  %call91 = call %struct._Image* @DestroyImage(%struct._Image* %78), !dbg !2538
  store %struct._Image* %call91, %struct._Image** %resize_image, align 8, !dbg !2539
  br label %if.end92, !dbg !2540

if.end92:                                         ; preds = %if.then90, %for.end85
  %79 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !2541
  store %struct._Image* %79, %struct._Image** %retval, align 8, !dbg !2542
  br label %return, !dbg !2542

return:                                           ; preds = %if.end92, %if.then18, %if.then14, %if.then9, %if.then3
  %80 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !2543
  ret %struct._Image* %80, !dbg !2543
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ResizeFilter* @DestroyResizeFilter(%struct._ResizeFilter* %resize_filter) #0 !dbg !2544 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2547, metadata !DIExpression()), !dbg !2548
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2549
  %signature = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 9, !dbg !2550
  store i64 -2880220588, i64* %signature, align 8, !dbg !2551
  %1 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2552
  %2 = bitcast %struct._ResizeFilter* %1 to i8*, !dbg !2552
  %call = call i8* @RelinquishMagickMemory(i8* %2), !dbg !2553
  %3 = bitcast i8* %call to %struct._ResizeFilter*, !dbg !2554
  store %struct._ResizeFilter* %3, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2555
  %4 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2556
  ret %struct._ResizeFilter* %4, !dbg !2557
}

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float* @GetResizeFilterCoefficient(%struct._ResizeFilter* %resize_filter) #0 !dbg !2558 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2561, metadata !DIExpression()), !dbg !2562
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2563
  %coefficient = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 6, !dbg !2564
  %arraydecay = getelementptr inbounds [7 x float], [7 x float]* %coefficient, i64 0, i64 0, !dbg !2563
  ret float* %arraydecay, !dbg !2565
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetResizeFilterBlur(%struct._ResizeFilter* %resize_filter) #0 !dbg !2566 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2567, metadata !DIExpression()), !dbg !2568
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2569
  %blur = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 5, !dbg !2570
  %1 = load float, float* %blur, align 4, !dbg !2570
  ret float %1, !dbg !2571
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetResizeFilterScale(%struct._ResizeFilter* %resize_filter) #0 !dbg !2572 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2573, metadata !DIExpression()), !dbg !2574
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2575
  %scale = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 4, !dbg !2576
  %1 = load float, float* %scale, align 8, !dbg !2576
  ret float %1, !dbg !2577
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetResizeFilterWindowSupport(%struct._ResizeFilter* %resize_filter) #0 !dbg !2578 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2579, metadata !DIExpression()), !dbg !2580
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2581
  %window_support = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 3, !dbg !2582
  %1 = load float, float* %window_support, align 4, !dbg !2582
  ret float %1, !dbg !2583
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetResizeFilterWeightingType(%struct._ResizeFilter* %resize_filter) #0 !dbg !2584 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2587, metadata !DIExpression()), !dbg !2588
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2589
  %filterWeightingType = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 7, !dbg !2590
  %1 = load i32, i32* %filterWeightingType, align 4, !dbg !2590
  ret i32 %1, !dbg !2591
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetResizeFilterWindowWeightingType(%struct._ResizeFilter* %resize_filter) #0 !dbg !2592 {
entry:
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !2593, metadata !DIExpression()), !dbg !2594
  %0 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !2595
  %windowWeightingType = getelementptr inbounds %struct._ResizeFilter, %struct._ResizeFilter* %0, i32 0, i32 8, !dbg !2596
  %1 = load i32, i32* %windowWeightingType, align 8, !dbg !2596
  ret i32 %1, !dbg !2597
}

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

declare dso_local i32 @InterpolateMagickPixelPacket(%struct._Image*, %struct._CacheView*, i32, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !2598 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2603, metadata !DIExpression()), !dbg !2604
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2605, metadata !DIExpression()), !dbg !2606
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !2607, metadata !DIExpression()), !dbg !2608
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !2609, metadata !DIExpression()), !dbg !2610
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2611
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !2611
  %1 = load float, float* %red, align 8, !dbg !2611
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !2611
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2611
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !2611
  store i16 %call, i16* %red1, align 2, !dbg !2611
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2612
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !2612
  %4 = load float, float* %green, align 4, !dbg !2612
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !2612
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2612
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !2612
  store i16 %call2, i16* %green3, align 2, !dbg !2612
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2613
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !2613
  %7 = load float, float* %blue, align 8, !dbg !2613
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !2613
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2613
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !2613
  store i16 %call4, i16* %blue5, align 2, !dbg !2613
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2614
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !2614
  %10 = load float, float* %opacity, align 4, !dbg !2614
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !2614
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2614
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !2614
  store i16 %call6, i16* %opacity7, align 2, !dbg !2614
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2615
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2617
  %13 = load i32, i32* %colorspace, align 4, !dbg !2617
  %cmp = icmp eq i32 %13, 12, !dbg !2618
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2619

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2620
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !2621
  %15 = load i32, i32* %storage_class, align 8, !dbg !2621
  %cmp8 = icmp eq i32 %15, 2, !dbg !2622
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !2623

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !2624
  %cmp9 = icmp ne i16* %16, null, !dbg !2624
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !2627

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2624
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !2624
  %18 = load float, float* %index11, align 8, !dbg !2624
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !2624
  %19 = load i16*, i16** %index.addr, align 8, !dbg !2624
  store i16 %call12, i16* %19, align 2, !dbg !2624
  br label %if.end, !dbg !2624

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !2627

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !2628
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !2629 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2637, metadata !DIExpression()), !dbg !2638
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !2639, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !2641, metadata !DIExpression()), !dbg !2642
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2643
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !2645
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2645
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !2646
  br i1 %cmp, label %if.then, label %if.end, !dbg !2647

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2648
  br label %return, !dbg !2648

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2649
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !2650
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2651
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2652
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2651
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !2653
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2654
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !2655
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !2655
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2656
  %6 = load i64, i64* %offset.addr, align 8, !dbg !2657
  %7 = load i64, i64* %extent.addr, align 8, !dbg !2658
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2659
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !2660
  %9 = load i8*, i8** %client_data, align 8, !dbg !2660
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !2654
  store i32 %call4, i32* %retval, align 4, !dbg !2661
  br label %return, !dbg !2661

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2662
  ret i32 %10, !dbg !2662
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @LiquidRescaleImage(%struct._Image* %image, i64 %columns, i64 %rows, double %delta_x, double %rigidity, %struct._ExceptionInfo* %exception) #0 !dbg !2663 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %delta_x.addr = alloca double, align 8
  %rigidity.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2666, metadata !DIExpression()), !dbg !2667
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !2668, metadata !DIExpression()), !dbg !2669
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  store double %delta_x, double* %delta_x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %delta_x.addr, metadata !2672, metadata !DIExpression()), !dbg !2673
  store double %rigidity, double* %rigidity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rigidity.addr, metadata !2674, metadata !DIExpression()), !dbg !2675
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2678
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2680
  %1 = load i32, i32* %debug, align 8, !dbg !2680
  %cmp = icmp ne i32 %1, 0, !dbg !2681
  br i1 %cmp, label %if.then, label %if.end, !dbg !2682

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2683
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2684
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2683
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1992, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2685
  br label %if.end, !dbg !2686

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2687
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2688
  %filename1 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 53, !dbg !2689
  %arraydecay2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename1, i64 0, i64 0, !dbg !2688
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1995, i32 420, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay2), !dbg !2690
  ret %struct._Image* null, !dbg !2691
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MagnifyImage(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !2692 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %magnify_view = alloca %struct._CacheView*, align 8
  %magnify_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %magnify_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %intensity = alloca [9 x float], align 16
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %r = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %r107 = alloca i16*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2695, metadata !DIExpression()), !dbg !2696
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2697, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2699, metadata !DIExpression()), !dbg !2700
  call void @llvm.dbg.declare(metadata %struct._CacheView** %magnify_view, metadata !2701, metadata !DIExpression()), !dbg !2702
  call void @llvm.dbg.declare(metadata %struct._Image** %magnify_image, metadata !2703, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2705, metadata !DIExpression()), !dbg !2706
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2707, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2709, metadata !DIExpression()), !dbg !2710
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2711
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2713
  %1 = load i32, i32* %debug, align 8, !dbg !2713
  %cmp = icmp ne i32 %1, 0, !dbg !2714
  br i1 %cmp, label %if.then, label %if.end, !dbg !2715

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2716
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2717
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2716
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2052, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2718
  br label %if.end, !dbg !2719

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2720
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2721
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !2722
  %5 = load i64, i64* %columns, align 8, !dbg !2722
  %mul = mul i64 2, %5, !dbg !2723
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2724
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !2725
  %7 = load i64, i64* %rows, align 8, !dbg !2725
  %mul1 = mul i64 2, %7, !dbg !2726
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2727
  %call2 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %mul, i64 %mul1, i32 1, %struct._ExceptionInfo* %8), !dbg !2728
  store %struct._Image* %call2, %struct._Image** %magnify_image, align 8, !dbg !2729
  %9 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2730
  %cmp3 = icmp eq %struct._Image* %9, null, !dbg !2732
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2733

if.then4:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2734
  br label %return, !dbg !2734

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %status, align 4, !dbg !2735
  store i64 0, i64* %progress, align 8, !dbg !2736
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2737
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2738
  %call6 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %10, %struct._ExceptionInfo* %11), !dbg !2739
  store %struct._CacheView* %call6, %struct._CacheView** %image_view, align 8, !dbg !2740
  %12 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2741
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2742
  %call7 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %12, %struct._ExceptionInfo* %13), !dbg !2743
  store %struct._CacheView* %call7, %struct._CacheView** %magnify_view, align 8, !dbg !2744
  store i64 0, i64* %y, align 8, !dbg !2745
  br label %for.cond, !dbg !2747

for.cond:                                         ; preds = %for.inc204, %if.end5
  %14 = load i64, i64* %y, align 8, !dbg !2748
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2750
  %rows8 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !2751
  %16 = load i64, i64* %rows8, align 8, !dbg !2751
  %cmp9 = icmp slt i64 %14, %16, !dbg !2752
  br i1 %cmp9, label %for.body, label %for.end206, !dbg !2753

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %magnify_indexes, metadata !2754, metadata !DIExpression()), !dbg !2756
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2759, metadata !DIExpression()), !dbg !2760
  %17 = load i32, i32* %status, align 4, !dbg !2761
  %cmp10 = icmp eq i32 %17, 0, !dbg !2763
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2764

if.then11:                                        ; preds = %for.body
  br label %for.inc204, !dbg !2765

if.end12:                                         ; preds = %for.body
  %18 = load %struct._CacheView*, %struct._CacheView** %magnify_view, align 8, !dbg !2766
  %19 = load i64, i64* %y, align 8, !dbg !2767
  %mul13 = mul nsw i64 2, %19, !dbg !2768
  %20 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2769
  %columns14 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 7, !dbg !2770
  %21 = load i64, i64* %columns14, align 8, !dbg !2770
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2771
  %call15 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %18, i64 0, i64 %mul13, i64 %21, i64 2, %struct._ExceptionInfo* %22), !dbg !2772
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %q, align 8, !dbg !2773
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2774
  %cmp16 = icmp eq %struct._PixelPacket* %23, null, !dbg !2776
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2777

if.then17:                                        ; preds = %if.end12
  store i32 0, i32* %status, align 4, !dbg !2778
  br label %for.inc204, !dbg !2780

if.end18:                                         ; preds = %if.end12
  %24 = load %struct._CacheView*, %struct._CacheView** %magnify_view, align 8, !dbg !2781
  %call19 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %24), !dbg !2782
  store i16* %call19, i16** %magnify_indexes, align 8, !dbg !2783
  store i64 0, i64* %x, align 8, !dbg !2784
  br label %for.cond20, !dbg !2786

for.cond20:                                       ; preds = %for.inc185, %if.end18
  %25 = load i64, i64* %x, align 8, !dbg !2787
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2789
  %columns21 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !2790
  %27 = load i64, i64* %columns21, align 8, !dbg !2790
  %cmp22 = icmp slt i64 %25, %27, !dbg !2791
  br i1 %cmp22, label %for.body23, label %for.end187, !dbg !2792

for.body23:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata [9 x float]* %intensity, metadata !2793, metadata !DIExpression()), !dbg !2796
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2797, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2800, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r, metadata !2803, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2805, metadata !DIExpression()), !dbg !2806
  %28 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2807
  %29 = load i64, i64* %x, align 8, !dbg !2808
  %sub = sub nsw i64 %29, 1, !dbg !2809
  %30 = load i64, i64* %y, align 8, !dbg !2810
  %sub24 = sub nsw i64 %30, 1, !dbg !2811
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2812
  %call25 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %28, i64 %sub, i64 %sub24, i64 3, i64 3, %struct._ExceptionInfo* %31), !dbg !2813
  store %struct._PixelPacket* %call25, %struct._PixelPacket** %p, align 8, !dbg !2814
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2815
  %cmp26 = icmp eq %struct._PixelPacket* %32, null, !dbg !2817
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !2818

if.then27:                                        ; preds = %for.body23
  store i32 0, i32* %status, align 4, !dbg !2819
  br label %for.inc185, !dbg !2821

if.end28:                                         ; preds = %for.body23
  %33 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2822
  %call29 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %33), !dbg !2823
  store i16* %call29, i16** %indexes, align 8, !dbg !2824
  store i64 0, i64* %i, align 8, !dbg !2825
  br label %for.cond30, !dbg !2827

for.cond30:                                       ; preds = %for.inc, %if.end28
  %34 = load i64, i64* %i, align 8, !dbg !2828
  %cmp31 = icmp slt i64 %34, 9, !dbg !2830
  br i1 %cmp31, label %for.body32, label %for.end, !dbg !2831

for.body32:                                       ; preds = %for.cond30
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2832
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2833
  %37 = load i64, i64* %i, align 8, !dbg !2834
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i64 %37, !dbg !2835
  %call33 = call float @GetPixelIntensity(%struct._Image* %35, %struct._PixelPacket* %add.ptr), !dbg !2836
  %38 = load i64, i64* %i, align 8, !dbg !2837
  %arrayidx = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 %38, !dbg !2838
  store float %call33, float* %arrayidx, align 4, !dbg !2839
  br label %for.inc, !dbg !2838

for.inc:                                          ; preds = %for.body32
  %39 = load i64, i64* %i, align 8, !dbg !2840
  %inc = add nsw i64 %39, 1, !dbg !2840
  store i64 %inc, i64* %i, align 8, !dbg !2840
  br label %for.cond30, !dbg !2841, !llvm.loop !2842

for.end:                                          ; preds = %for.cond30
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2844
  store %struct._PixelPacket* %40, %struct._PixelPacket** %r, align 8, !dbg !2845
  %arrayidx34 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2846
  %41 = load float, float* %arrayidx34, align 4, !dbg !2846
  %arrayidx35 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !2848
  %42 = load float, float* %arrayidx35, align 4, !dbg !2848
  %sub36 = fsub float %41, %42, !dbg !2849
  %conv = fpext float %sub36 to double, !dbg !2846
  %43 = call double @llvm.fabs.f64(double %conv), !dbg !2850
  %cmp37 = fcmp olt double %43, 1.000000e-15, !dbg !2851
  br i1 %cmp37, label %if.then45, label %lor.lhs.false, !dbg !2852

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx39 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !2853
  %44 = load float, float* %arrayidx39, align 4, !dbg !2853
  %arrayidx40 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !2854
  %45 = load float, float* %arrayidx40, align 4, !dbg !2854
  %sub41 = fsub float %44, %45, !dbg !2855
  %conv42 = fpext float %sub41 to double, !dbg !2853
  %46 = call double @llvm.fabs.f64(double %conv42), !dbg !2856
  %cmp43 = fcmp olt double %46, 1.000000e-15, !dbg !2857
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !2858

if.then45:                                        ; preds = %lor.lhs.false, %for.end
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2859
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2861
  %arrayidx46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i64 4, !dbg !2861
  %49 = bitcast %struct._PixelPacket* %47 to i8*, !dbg !2861
  %50 = bitcast %struct._PixelPacket* %arrayidx46 to i8*, !dbg !2861
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 2 %50, i64 8, i1 false), !dbg !2861
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2862
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 1, !dbg !2862
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %r, align 8, !dbg !2862
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2863
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2864
  %arrayidx47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i64 4, !dbg !2864
  %54 = bitcast %struct._PixelPacket* %52 to i8*, !dbg !2864
  %55 = bitcast %struct._PixelPacket* %arrayidx47 to i8*, !dbg !2864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %54, i8* align 2 %55, i64 8, i1 false), !dbg !2864
  %56 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2865
  %columns48 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 7, !dbg !2866
  %57 = load i64, i64* %columns48, align 8, !dbg !2866
  %sub49 = sub i64 %57, 1, !dbg !2867
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2868
  %add.ptr50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i64 %sub49, !dbg !2868
  store %struct._PixelPacket* %add.ptr50, %struct._PixelPacket** %r, align 8, !dbg !2868
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2869
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2870
  %arrayidx51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i64 4, !dbg !2870
  %61 = bitcast %struct._PixelPacket* %59 to i8*, !dbg !2870
  %62 = bitcast %struct._PixelPacket* %arrayidx51 to i8*, !dbg !2870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %61, i8* align 2 %62, i64 8, i1 false), !dbg !2870
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2871
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 1, !dbg !2871
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %r, align 8, !dbg !2871
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2872
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2873
  %arrayidx53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i64 4, !dbg !2873
  %66 = bitcast %struct._PixelPacket* %64 to i8*, !dbg !2873
  %67 = bitcast %struct._PixelPacket* %arrayidx53 to i8*, !dbg !2873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %66, i8* align 2 %67, i64 8, i1 false), !dbg !2873
  br label %if.end103, !dbg !2874

if.else:                                          ; preds = %lor.lhs.false
  %arrayidx54 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2875
  %68 = load float, float* %arrayidx54, align 4, !dbg !2875
  %arrayidx55 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !2878
  %69 = load float, float* %arrayidx55, align 4, !dbg !2878
  %sub56 = fsub float %68, %69, !dbg !2879
  %conv57 = fpext float %sub56 to double, !dbg !2875
  %70 = call double @llvm.fabs.f64(double %conv57), !dbg !2880
  %cmp58 = fcmp olt double %70, 1.000000e-15, !dbg !2881
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !2882

if.then60:                                        ; preds = %if.else
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2883
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2884
  %arrayidx61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i64 3, !dbg !2884
  %73 = bitcast %struct._PixelPacket* %71 to i8*, !dbg !2884
  %74 = bitcast %struct._PixelPacket* %arrayidx61 to i8*, !dbg !2884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 8, i1 false), !dbg !2884
  br label %if.end64, !dbg !2885

if.else62:                                        ; preds = %if.else
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2886
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2887
  %arrayidx63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i64 4, !dbg !2887
  %77 = bitcast %struct._PixelPacket* %75 to i8*, !dbg !2887
  %78 = bitcast %struct._PixelPacket* %arrayidx63 to i8*, !dbg !2887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %77, i8* align 2 %78, i64 8, i1 false), !dbg !2887
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then60
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2888
  %incdec.ptr65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 1, !dbg !2888
  store %struct._PixelPacket* %incdec.ptr65, %struct._PixelPacket** %r, align 8, !dbg !2888
  %arrayidx66 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2889
  %80 = load float, float* %arrayidx66, align 4, !dbg !2889
  %arrayidx67 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !2891
  %81 = load float, float* %arrayidx67, align 4, !dbg !2891
  %sub68 = fsub float %80, %81, !dbg !2892
  %conv69 = fpext float %sub68 to double, !dbg !2889
  %82 = call double @llvm.fabs.f64(double %conv69), !dbg !2893
  %cmp70 = fcmp olt double %82, 1.000000e-15, !dbg !2894
  br i1 %cmp70, label %if.then72, label %if.else74, !dbg !2895

if.then72:                                        ; preds = %if.end64
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2896
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2897
  %arrayidx73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i64 5, !dbg !2897
  %85 = bitcast %struct._PixelPacket* %83 to i8*, !dbg !2897
  %86 = bitcast %struct._PixelPacket* %arrayidx73 to i8*, !dbg !2897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %85, i8* align 2 %86, i64 8, i1 false), !dbg !2897
  br label %if.end76, !dbg !2898

if.else74:                                        ; preds = %if.end64
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2899
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2900
  %arrayidx75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i64 4, !dbg !2900
  %89 = bitcast %struct._PixelPacket* %87 to i8*, !dbg !2900
  %90 = bitcast %struct._PixelPacket* %arrayidx75 to i8*, !dbg !2900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %89, i8* align 2 %90, i64 8, i1 false), !dbg !2900
  br label %if.end76

if.end76:                                         ; preds = %if.else74, %if.then72
  %91 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2901
  %columns77 = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 7, !dbg !2902
  %92 = load i64, i64* %columns77, align 8, !dbg !2902
  %sub78 = sub i64 %92, 1, !dbg !2903
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2904
  %add.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i64 %sub78, !dbg !2904
  store %struct._PixelPacket* %add.ptr79, %struct._PixelPacket** %r, align 8, !dbg !2904
  %arrayidx80 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !2905
  %94 = load float, float* %arrayidx80, align 4, !dbg !2905
  %arrayidx81 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !2907
  %95 = load float, float* %arrayidx81, align 4, !dbg !2907
  %sub82 = fsub float %94, %95, !dbg !2908
  %conv83 = fpext float %sub82 to double, !dbg !2905
  %96 = call double @llvm.fabs.f64(double %conv83), !dbg !2909
  %cmp84 = fcmp olt double %96, 1.000000e-15, !dbg !2910
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !2911

if.then86:                                        ; preds = %if.end76
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2912
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2913
  %arrayidx87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i64 3, !dbg !2913
  %99 = bitcast %struct._PixelPacket* %97 to i8*, !dbg !2913
  %100 = bitcast %struct._PixelPacket* %arrayidx87 to i8*, !dbg !2913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %99, i8* align 2 %100, i64 8, i1 false), !dbg !2913
  br label %if.end90, !dbg !2914

if.else88:                                        ; preds = %if.end76
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2915
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2916
  %arrayidx89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i64 4, !dbg !2916
  %103 = bitcast %struct._PixelPacket* %101 to i8*, !dbg !2916
  %104 = bitcast %struct._PixelPacket* %arrayidx89 to i8*, !dbg !2916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %103, i8* align 2 %104, i64 8, i1 false), !dbg !2916
  br label %if.end90

if.end90:                                         ; preds = %if.else88, %if.then86
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2917
  %incdec.ptr91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 1, !dbg !2917
  store %struct._PixelPacket* %incdec.ptr91, %struct._PixelPacket** %r, align 8, !dbg !2917
  %arrayidx92 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !2918
  %106 = load float, float* %arrayidx92, align 4, !dbg !2918
  %arrayidx93 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !2920
  %107 = load float, float* %arrayidx93, align 4, !dbg !2920
  %sub94 = fsub float %106, %107, !dbg !2921
  %conv95 = fpext float %sub94 to double, !dbg !2918
  %108 = call double @llvm.fabs.f64(double %conv95), !dbg !2922
  %cmp96 = fcmp olt double %108, 1.000000e-15, !dbg !2923
  br i1 %cmp96, label %if.then98, label %if.else100, !dbg !2924

if.then98:                                        ; preds = %if.end90
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2925
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2926
  %arrayidx99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i64 5, !dbg !2926
  %111 = bitcast %struct._PixelPacket* %109 to i8*, !dbg !2926
  %112 = bitcast %struct._PixelPacket* %arrayidx99 to i8*, !dbg !2926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %111, i8* align 2 %112, i64 8, i1 false), !dbg !2926
  br label %if.end102, !dbg !2927

if.else100:                                       ; preds = %if.end90
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !2928
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2929
  %arrayidx101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i64 4, !dbg !2929
  %115 = bitcast %struct._PixelPacket* %113 to i8*, !dbg !2929
  %116 = bitcast %struct._PixelPacket* %arrayidx101 to i8*, !dbg !2929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %115, i8* align 2 %116, i64 8, i1 false), !dbg !2929
  br label %if.end102

if.end102:                                        ; preds = %if.else100, %if.then98
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then45
  %117 = load i16*, i16** %indexes, align 8, !dbg !2930
  %cmp104 = icmp ne i16* %117, null, !dbg !2932
  br i1 %cmp104, label %if.then106, label %if.end183, !dbg !2933

if.then106:                                       ; preds = %if.end103
  call void @llvm.dbg.declare(metadata i16** %r107, metadata !2934, metadata !DIExpression()), !dbg !2936
  %118 = load i16*, i16** %magnify_indexes, align 8, !dbg !2937
  store i16* %118, i16** %r107, align 8, !dbg !2938
  %arrayidx108 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2939
  %119 = load float, float* %arrayidx108, align 4, !dbg !2939
  %arrayidx109 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !2941
  %120 = load float, float* %arrayidx109, align 4, !dbg !2941
  %sub110 = fsub float %119, %120, !dbg !2942
  %conv111 = fpext float %sub110 to double, !dbg !2939
  %121 = call double @llvm.fabs.f64(double %conv111), !dbg !2943
  %cmp112 = fcmp olt double %121, 1.000000e-15, !dbg !2944
  br i1 %cmp112, label %if.then121, label %lor.lhs.false114, !dbg !2945

lor.lhs.false114:                                 ; preds = %if.then106
  %arrayidx115 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !2946
  %122 = load float, float* %arrayidx115, align 4, !dbg !2946
  %arrayidx116 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !2947
  %123 = load float, float* %arrayidx116, align 4, !dbg !2947
  %sub117 = fsub float %122, %123, !dbg !2948
  %conv118 = fpext float %sub117 to double, !dbg !2946
  %124 = call double @llvm.fabs.f64(double %conv118), !dbg !2949
  %cmp119 = fcmp olt double %124, 1.000000e-15, !dbg !2950
  br i1 %cmp119, label %if.then121, label %if.else131, !dbg !2951

if.then121:                                       ; preds = %lor.lhs.false114, %if.then106
  %125 = load i16*, i16** %indexes, align 8, !dbg !2952
  %arrayidx122 = getelementptr inbounds i16, i16* %125, i64 4, !dbg !2952
  %126 = load i16, i16* %arrayidx122, align 2, !dbg !2952
  %127 = load i16*, i16** %r107, align 8, !dbg !2954
  store i16 %126, i16* %127, align 2, !dbg !2955
  %128 = load i16*, i16** %r107, align 8, !dbg !2956
  %incdec.ptr123 = getelementptr inbounds i16, i16* %128, i32 1, !dbg !2956
  store i16* %incdec.ptr123, i16** %r107, align 8, !dbg !2956
  %129 = load i16*, i16** %indexes, align 8, !dbg !2957
  %arrayidx124 = getelementptr inbounds i16, i16* %129, i64 4, !dbg !2957
  %130 = load i16, i16* %arrayidx124, align 2, !dbg !2957
  %131 = load i16*, i16** %r107, align 8, !dbg !2958
  store i16 %130, i16* %131, align 2, !dbg !2959
  %132 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !2960
  %columns125 = getelementptr inbounds %struct._Image, %struct._Image* %132, i32 0, i32 7, !dbg !2961
  %133 = load i64, i64* %columns125, align 8, !dbg !2961
  %sub126 = sub i64 %133, 1, !dbg !2962
  %134 = load i16*, i16** %r107, align 8, !dbg !2963
  %add.ptr127 = getelementptr inbounds i16, i16* %134, i64 %sub126, !dbg !2963
  store i16* %add.ptr127, i16** %r107, align 8, !dbg !2963
  %135 = load i16*, i16** %indexes, align 8, !dbg !2964
  %arrayidx128 = getelementptr inbounds i16, i16* %135, i64 4, !dbg !2964
  %136 = load i16, i16* %arrayidx128, align 2, !dbg !2964
  %137 = load i16*, i16** %r107, align 8, !dbg !2965
  store i16 %136, i16* %137, align 2, !dbg !2966
  %138 = load i16*, i16** %r107, align 8, !dbg !2967
  %incdec.ptr129 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !2967
  store i16* %incdec.ptr129, i16** %r107, align 8, !dbg !2967
  %139 = load i16*, i16** %indexes, align 8, !dbg !2968
  %arrayidx130 = getelementptr inbounds i16, i16* %139, i64 4, !dbg !2968
  %140 = load i16, i16* %arrayidx130, align 2, !dbg !2968
  %141 = load i16*, i16** %r107, align 8, !dbg !2969
  store i16 %140, i16* %141, align 2, !dbg !2970
  br label %if.end181, !dbg !2971

if.else131:                                       ; preds = %lor.lhs.false114
  %arrayidx132 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2972
  %142 = load float, float* %arrayidx132, align 4, !dbg !2972
  %arrayidx133 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !2975
  %143 = load float, float* %arrayidx133, align 4, !dbg !2975
  %sub134 = fsub float %142, %143, !dbg !2976
  %conv135 = fpext float %sub134 to double, !dbg !2972
  %144 = call double @llvm.fabs.f64(double %conv135), !dbg !2977
  %cmp136 = fcmp olt double %144, 1.000000e-15, !dbg !2978
  br i1 %cmp136, label %if.then138, label %if.else140, !dbg !2979

if.then138:                                       ; preds = %if.else131
  %145 = load i16*, i16** %indexes, align 8, !dbg !2980
  %arrayidx139 = getelementptr inbounds i16, i16* %145, i64 3, !dbg !2980
  %146 = load i16, i16* %arrayidx139, align 2, !dbg !2980
  %147 = load i16*, i16** %r107, align 8, !dbg !2981
  store i16 %146, i16* %147, align 2, !dbg !2982
  br label %if.end142, !dbg !2983

if.else140:                                       ; preds = %if.else131
  %148 = load i16*, i16** %indexes, align 8, !dbg !2984
  %arrayidx141 = getelementptr inbounds i16, i16* %148, i64 4, !dbg !2984
  %149 = load i16, i16* %arrayidx141, align 2, !dbg !2984
  %150 = load i16*, i16** %r107, align 8, !dbg !2985
  store i16 %149, i16* %150, align 2, !dbg !2986
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then138
  %151 = load i16*, i16** %r107, align 8, !dbg !2987
  %incdec.ptr143 = getelementptr inbounds i16, i16* %151, i32 1, !dbg !2987
  store i16* %incdec.ptr143, i16** %r107, align 8, !dbg !2987
  %arrayidx144 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 1, !dbg !2988
  %152 = load float, float* %arrayidx144, align 4, !dbg !2988
  %arrayidx145 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !2990
  %153 = load float, float* %arrayidx145, align 4, !dbg !2990
  %sub146 = fsub float %152, %153, !dbg !2991
  %conv147 = fpext float %sub146 to double, !dbg !2988
  %154 = call double @llvm.fabs.f64(double %conv147), !dbg !2992
  %cmp148 = fcmp olt double %154, 1.000000e-15, !dbg !2993
  br i1 %cmp148, label %if.then150, label %if.else152, !dbg !2994

if.then150:                                       ; preds = %if.end142
  %155 = load i16*, i16** %indexes, align 8, !dbg !2995
  %arrayidx151 = getelementptr inbounds i16, i16* %155, i64 5, !dbg !2995
  %156 = load i16, i16* %arrayidx151, align 2, !dbg !2995
  %157 = load i16*, i16** %r107, align 8, !dbg !2996
  store i16 %156, i16* %157, align 2, !dbg !2997
  br label %if.end154, !dbg !2998

if.else152:                                       ; preds = %if.end142
  %158 = load i16*, i16** %indexes, align 8, !dbg !2999
  %arrayidx153 = getelementptr inbounds i16, i16* %158, i64 4, !dbg !2999
  %159 = load i16, i16* %arrayidx153, align 2, !dbg !2999
  %160 = load i16*, i16** %r107, align 8, !dbg !3000
  store i16 %159, i16* %160, align 2, !dbg !3001
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.then150
  %161 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !3002
  %columns155 = getelementptr inbounds %struct._Image, %struct._Image* %161, i32 0, i32 7, !dbg !3003
  %162 = load i64, i64* %columns155, align 8, !dbg !3003
  %sub156 = sub i64 %162, 1, !dbg !3004
  %163 = load i16*, i16** %r107, align 8, !dbg !3005
  %add.ptr157 = getelementptr inbounds i16, i16* %163, i64 %sub156, !dbg !3005
  store i16* %add.ptr157, i16** %r107, align 8, !dbg !3005
  %arrayidx158 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 3, !dbg !3006
  %164 = load float, float* %arrayidx158, align 4, !dbg !3006
  %arrayidx159 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !3008
  %165 = load float, float* %arrayidx159, align 4, !dbg !3008
  %sub160 = fsub float %164, %165, !dbg !3009
  %conv161 = fpext float %sub160 to double, !dbg !3006
  %166 = call double @llvm.fabs.f64(double %conv161), !dbg !3010
  %cmp162 = fcmp olt double %166, 1.000000e-15, !dbg !3011
  br i1 %cmp162, label %if.then164, label %if.else166, !dbg !3012

if.then164:                                       ; preds = %if.end154
  %167 = load i16*, i16** %indexes, align 8, !dbg !3013
  %arrayidx165 = getelementptr inbounds i16, i16* %167, i64 3, !dbg !3013
  %168 = load i16, i16* %arrayidx165, align 2, !dbg !3013
  %169 = load i16*, i16** %r107, align 8, !dbg !3014
  store i16 %168, i16* %169, align 2, !dbg !3015
  br label %if.end168, !dbg !3016

if.else166:                                       ; preds = %if.end154
  %170 = load i16*, i16** %indexes, align 8, !dbg !3017
  %arrayidx167 = getelementptr inbounds i16, i16* %170, i64 4, !dbg !3017
  %171 = load i16, i16* %arrayidx167, align 2, !dbg !3017
  %172 = load i16*, i16** %r107, align 8, !dbg !3018
  store i16 %171, i16* %172, align 2, !dbg !3019
  br label %if.end168

if.end168:                                        ; preds = %if.else166, %if.then164
  %173 = load i16*, i16** %r107, align 8, !dbg !3020
  %incdec.ptr169 = getelementptr inbounds i16, i16* %173, i32 1, !dbg !3020
  store i16* %incdec.ptr169, i16** %r107, align 8, !dbg !3020
  %arrayidx170 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 5, !dbg !3021
  %174 = load float, float* %arrayidx170, align 4, !dbg !3021
  %arrayidx171 = getelementptr inbounds [9 x float], [9 x float]* %intensity, i64 0, i64 7, !dbg !3023
  %175 = load float, float* %arrayidx171, align 4, !dbg !3023
  %sub172 = fsub float %174, %175, !dbg !3024
  %conv173 = fpext float %sub172 to double, !dbg !3021
  %176 = call double @llvm.fabs.f64(double %conv173), !dbg !3025
  %cmp174 = fcmp olt double %176, 1.000000e-15, !dbg !3026
  br i1 %cmp174, label %if.then176, label %if.else178, !dbg !3027

if.then176:                                       ; preds = %if.end168
  %177 = load i16*, i16** %indexes, align 8, !dbg !3028
  %arrayidx177 = getelementptr inbounds i16, i16* %177, i64 5, !dbg !3028
  %178 = load i16, i16* %arrayidx177, align 2, !dbg !3028
  %179 = load i16*, i16** %r107, align 8, !dbg !3029
  store i16 %178, i16* %179, align 2, !dbg !3030
  br label %if.end180, !dbg !3031

if.else178:                                       ; preds = %if.end168
  %180 = load i16*, i16** %indexes, align 8, !dbg !3032
  %arrayidx179 = getelementptr inbounds i16, i16* %180, i64 4, !dbg !3032
  %181 = load i16, i16* %arrayidx179, align 2, !dbg !3032
  %182 = load i16*, i16** %r107, align 8, !dbg !3033
  store i16 %181, i16* %182, align 2, !dbg !3034
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then176
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then121
  %183 = load i16*, i16** %magnify_indexes, align 8, !dbg !3035
  %add.ptr182 = getelementptr inbounds i16, i16* %183, i64 2, !dbg !3035
  store i16* %add.ptr182, i16** %magnify_indexes, align 8, !dbg !3035
  br label %if.end183, !dbg !3036

if.end183:                                        ; preds = %if.end181, %if.end103
  %184 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3037
  %add.ptr184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %184, i64 2, !dbg !3037
  store %struct._PixelPacket* %add.ptr184, %struct._PixelPacket** %q, align 8, !dbg !3037
  br label %for.inc185, !dbg !3038

for.inc185:                                       ; preds = %if.end183, %if.then27
  %185 = load i64, i64* %x, align 8, !dbg !3039
  %inc186 = add nsw i64 %185, 1, !dbg !3039
  store i64 %inc186, i64* %x, align 8, !dbg !3039
  br label %for.cond20, !dbg !3040, !llvm.loop !3041

for.end187:                                       ; preds = %for.cond20
  %186 = load %struct._CacheView*, %struct._CacheView** %magnify_view, align 8, !dbg !3043
  %187 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3045
  %call188 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %186, %struct._ExceptionInfo* %187), !dbg !3046
  %cmp189 = icmp eq i32 %call188, 0, !dbg !3047
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !3048

if.then191:                                       ; preds = %for.end187
  store i32 0, i32* %status, align 4, !dbg !3049
  br label %if.end192, !dbg !3050

if.end192:                                        ; preds = %if.then191, %for.end187
  %188 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3051
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %188, i32 0, i32 47, !dbg !3053
  %189 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3053
  %cmp193 = icmp ne i32 (i8*, i64, i64, i8*)* %189, null, !dbg !3054
  br i1 %cmp193, label %if.then195, label %if.end203, !dbg !3055

if.then195:                                       ; preds = %if.end192
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3056, metadata !DIExpression()), !dbg !3058
  %190 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3059
  %191 = load i64, i64* %progress, align 8, !dbg !3060
  %inc196 = add nsw i64 %191, 1, !dbg !3060
  store i64 %inc196, i64* %progress, align 8, !dbg !3060
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3061
  %rows197 = getelementptr inbounds %struct._Image, %struct._Image* %192, i32 0, i32 8, !dbg !3062
  %193 = load i64, i64* %rows197, align 8, !dbg !3062
  %call198 = call i32 @SetImageProgress(%struct._Image* %190, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i64 %191, i64 %193), !dbg !3063
  store i32 %call198, i32* %proceed, align 4, !dbg !3064
  %194 = load i32, i32* %proceed, align 4, !dbg !3065
  %cmp199 = icmp eq i32 %194, 0, !dbg !3067
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !3068

if.then201:                                       ; preds = %if.then195
  store i32 0, i32* %status, align 4, !dbg !3069
  br label %if.end202, !dbg !3070

if.end202:                                        ; preds = %if.then201, %if.then195
  br label %if.end203, !dbg !3071

if.end203:                                        ; preds = %if.end202, %if.end192
  br label %for.inc204, !dbg !3072

for.inc204:                                       ; preds = %if.end203, %if.then17, %if.then11
  %195 = load i64, i64* %y, align 8, !dbg !3073
  %inc205 = add nsw i64 %195, 1, !dbg !3073
  store i64 %inc205, i64* %y, align 8, !dbg !3073
  br label %for.cond, !dbg !3074, !llvm.loop !3075

for.end206:                                       ; preds = %for.cond
  %196 = load %struct._CacheView*, %struct._CacheView** %magnify_view, align 8, !dbg !3077
  %call207 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %196), !dbg !3078
  store %struct._CacheView* %call207, %struct._CacheView** %magnify_view, align 8, !dbg !3079
  %197 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3080
  %call208 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %197), !dbg !3081
  store %struct._CacheView* %call208, %struct._CacheView** %image_view, align 8, !dbg !3082
  %198 = load i32, i32* %status, align 4, !dbg !3083
  %cmp209 = icmp eq i32 %198, 0, !dbg !3085
  br i1 %cmp209, label %if.then211, label %if.end213, !dbg !3086

if.then211:                                       ; preds = %for.end206
  %199 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !3087
  %call212 = call %struct._Image* @DestroyImage(%struct._Image* %199), !dbg !3088
  store %struct._Image* %call212, %struct._Image** %magnify_image, align 8, !dbg !3089
  br label %if.end213, !dbg !3090

if.end213:                                        ; preds = %if.then211, %for.end206
  %200 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !3091
  store %struct._Image* %200, %struct._Image** %retval, align 8, !dbg !3092
  br label %return, !dbg !3092

return:                                           ; preds = %if.end213, %if.then4
  %201 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3093
  ret %struct._Image* %201, !dbg !3093
}

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MinifyImage(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !3094 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %minify_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3095, metadata !DIExpression()), !dbg !3096
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3097, metadata !DIExpression()), !dbg !3098
  call void @llvm.dbg.declare(metadata %struct._Image** %minify_image, metadata !3099, metadata !DIExpression()), !dbg !3100
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3101
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3103
  %1 = load i32, i32* %debug, align 8, !dbg !3103
  %cmp = icmp ne i32 %1, 0, !dbg !3104
  br i1 %cmp, label %if.then, label %if.end, !dbg !3105

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3106
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3107
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3106
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2267, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3108
  br label %if.end, !dbg !3109

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3110
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3111
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !3112
  %5 = load i64, i64* %columns, align 8, !dbg !3112
  %div = udiv i64 %5, 2, !dbg !3113
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3114
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !3115
  %7 = load i64, i64* %rows, align 8, !dbg !3115
  %div1 = udiv i64 %7, 2, !dbg !3116
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3117
  %call2 = call %struct._Image* @ResizeImage(%struct._Image* %3, i64 %div, i64 %div1, i32 29, double 1.000000e+00, %struct._ExceptionInfo* %8), !dbg !3118
  store %struct._Image* %call2, %struct._Image** %minify_image, align 8, !dbg !3119
  %9 = load %struct._Image*, %struct._Image** %minify_image, align 8, !dbg !3120
  ret %struct._Image* %9, !dbg !3121
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ResizeImage(%struct._Image* %image, i64 %columns, i64 %rows, i32 %filter, double %blur, %struct._ExceptionInfo* %exception) #0 !dbg !3122 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %filter.addr = alloca i32, align 4
  %blur.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %filter_type = alloca i32, align 4
  %filter_image = alloca %struct._Image*, align 8
  %resize_image = alloca %struct._Image*, align 8
  %offset = alloca i64, align 8
  %x_factor = alloca float, align 4
  %y_factor = alloca float, align 4
  %span = alloca i64, align 8
  %status = alloca i32, align 4
  %resize_filter = alloca %struct._ResizeFilter*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3125, metadata !DIExpression()), !dbg !3126
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !3127, metadata !DIExpression()), !dbg !3128
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !3131, metadata !DIExpression()), !dbg !3132
  store double %blur, double* %blur.addr, align 8
  call void @llvm.dbg.declare(metadata double* %blur.addr, metadata !3133, metadata !DIExpression()), !dbg !3134
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata i32* %filter_type, metadata !3137, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.declare(metadata %struct._Image** %filter_image, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata float* %x_factor, metadata !3145, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.declare(metadata float* %y_factor, metadata !3147, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.declare(metadata i64* %span, metadata !3149, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3151, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter, metadata !3154, metadata !DIExpression()), !dbg !3155
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3156
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3158
  %1 = load i32, i32* %debug, align 8, !dbg !3158
  %cmp = icmp ne i32 %1, 0, !dbg !3159
  br i1 %cmp, label %if.then, label %if.end, !dbg !3160

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3161
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3162
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3161
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2980, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3163
  br label %if.end, !dbg !3164

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !3165
  %cmp1 = icmp eq i64 %3, 0, !dbg !3167
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !3168

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %rows.addr, align 8, !dbg !3169
  %cmp2 = icmp eq i64 %4, 0, !dbg !3170
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !3171

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3172
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3172
  %filename4 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 53, !dbg !3172
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename4, i64 0, i64 0, !dbg !3172
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2984, i32 465, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay5), !dbg !3172
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3172
  br label %return, !dbg !3172

if.end7:                                          ; preds = %lor.lhs.false
  %7 = load i64, i64* %columns.addr, align 8, !dbg !3174
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3176
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !3177
  %9 = load i64, i64* %columns8, align 8, !dbg !3177
  %cmp9 = icmp eq i64 %7, %9, !dbg !3178
  br i1 %cmp9, label %land.lhs.true, label %if.end18, !dbg !3179

land.lhs.true:                                    ; preds = %if.end7
  %10 = load i64, i64* %rows.addr, align 8, !dbg !3180
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3181
  %rows10 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !3182
  %12 = load i64, i64* %rows10, align 8, !dbg !3182
  %cmp11 = icmp eq i64 %10, %12, !dbg !3183
  br i1 %cmp11, label %land.lhs.true12, label %if.end18, !dbg !3184

land.lhs.true12:                                  ; preds = %land.lhs.true
  %13 = load i32, i32* %filter.addr, align 4, !dbg !3185
  %cmp13 = icmp eq i32 %13, 0, !dbg !3186
  br i1 %cmp13, label %land.lhs.true14, label %if.end18, !dbg !3187

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %14 = load double, double* %blur.addr, align 8, !dbg !3188
  %cmp15 = fcmp oeq double %14, 1.000000e+00, !dbg !3189
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !3190

if.then16:                                        ; preds = %land.lhs.true14
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3191
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3192
  %call17 = call %struct._Image* @CloneImage(%struct._Image* %15, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %16), !dbg !3193
  store %struct._Image* %call17, %struct._Image** %retval, align 8, !dbg !3194
  br label %return, !dbg !3194

if.end18:                                         ; preds = %land.lhs.true14, %land.lhs.true12, %land.lhs.true, %if.end7
  %17 = load i64, i64* %columns.addr, align 8, !dbg !3195
  %conv = uitofp i64 %17 to float, !dbg !3196
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3197
  %columns19 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 7, !dbg !3198
  %19 = load i64, i64* %columns19, align 8, !dbg !3198
  %conv20 = uitofp i64 %19 to float, !dbg !3199
  %div = fdiv float %conv, %conv20, !dbg !3200
  store float %div, float* %x_factor, align 4, !dbg !3201
  %20 = load i64, i64* %rows.addr, align 8, !dbg !3202
  %conv21 = uitofp i64 %20 to float, !dbg !3203
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3204
  %rows22 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 8, !dbg !3205
  %22 = load i64, i64* %rows22, align 8, !dbg !3205
  %conv23 = uitofp i64 %22 to float, !dbg !3206
  %div24 = fdiv float %conv21, %conv23, !dbg !3207
  store float %div24, float* %y_factor, align 4, !dbg !3208
  store i32 22, i32* %filter_type, align 4, !dbg !3209
  %23 = load i32, i32* %filter.addr, align 4, !dbg !3210
  %cmp25 = icmp ne i32 %23, 0, !dbg !3212
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !3213

if.then27:                                        ; preds = %if.end18
  %24 = load i32, i32* %filter.addr, align 4, !dbg !3214
  store i32 %24, i32* %filter_type, align 4, !dbg !3215
  br label %if.end49, !dbg !3216

if.else:                                          ; preds = %if.end18
  %25 = load float, float* %x_factor, align 4, !dbg !3217
  %conv28 = fpext float %25 to double, !dbg !3217
  %cmp29 = fcmp oeq double %conv28, 1.000000e+00, !dbg !3219
  br i1 %cmp29, label %land.lhs.true31, label %if.else36, !dbg !3220

land.lhs.true31:                                  ; preds = %if.else
  %26 = load float, float* %y_factor, align 4, !dbg !3221
  %conv32 = fpext float %26 to double, !dbg !3221
  %cmp33 = fcmp oeq double %conv32, 1.000000e+00, !dbg !3222
  br i1 %cmp33, label %if.then35, label %if.else36, !dbg !3223

if.then35:                                        ; preds = %land.lhs.true31
  store i32 1, i32* %filter_type, align 4, !dbg !3224
  br label %if.end48, !dbg !3225

if.else36:                                        ; preds = %land.lhs.true31, %if.else
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3226
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 0, !dbg !3228
  %28 = load i32, i32* %storage_class, align 8, !dbg !3228
  %cmp37 = icmp eq i32 %28, 2, !dbg !3229
  br i1 %cmp37, label %if.then46, label %lor.lhs.false39, !dbg !3230

lor.lhs.false39:                                  ; preds = %if.else36
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3231
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 6, !dbg !3232
  %30 = load i32, i32* %matte, align 8, !dbg !3232
  %cmp40 = icmp ne i32 %30, 0, !dbg !3233
  br i1 %cmp40, label %if.then46, label %lor.lhs.false42, !dbg !3234

lor.lhs.false42:                                  ; preds = %lor.lhs.false39
  %31 = load float, float* %x_factor, align 4, !dbg !3235
  %32 = load float, float* %y_factor, align 4, !dbg !3236
  %mul = fmul float %31, %32, !dbg !3237
  %conv43 = fpext float %mul to double, !dbg !3238
  %cmp44 = fcmp ogt double %conv43, 1.000000e+00, !dbg !3239
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !3240

if.then46:                                        ; preds = %lor.lhs.false42, %lor.lhs.false39, %if.else36
  store i32 12, i32* %filter_type, align 4, !dbg !3241
  br label %if.end47, !dbg !3242

if.end47:                                         ; preds = %if.then46, %lor.lhs.false42
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then35
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then27
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3243
  %34 = load i32, i32* %filter_type, align 4, !dbg !3244
  %35 = load double, double* %blur.addr, align 8, !dbg !3245
  %conv50 = fptrunc double %35 to float, !dbg !3245
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3246
  %call51 = call %struct._ResizeFilter* @AcquireResizeFilter(%struct._Image* %33, i32 %34, float %conv50, i32 0, %struct._ExceptionInfo* %36), !dbg !3247
  store %struct._ResizeFilter* %call51, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3248
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3249
  %38 = load i64, i64* %columns.addr, align 8, !dbg !3250
  %39 = load i64, i64* %rows.addr, align 8, !dbg !3251
  %40 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3252
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3253
  %call52 = call %struct._Image* @AccelerateResizeImage(%struct._Image* %37, i64 %38, i64 %39, %struct._ResizeFilter* %40, %struct._ExceptionInfo* %41), !dbg !3254
  store %struct._Image* %call52, %struct._Image** %resize_image, align 8, !dbg !3255
  %42 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3256
  %cmp53 = icmp ne %struct._Image* %42, null, !dbg !3258
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !3259

if.then55:                                        ; preds = %if.end49
  %43 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3260
  %call56 = call %struct._ResizeFilter* @DestroyResizeFilter(%struct._ResizeFilter* %43), !dbg !3262
  store %struct._ResizeFilter* %call56, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3263
  %44 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3264
  store %struct._Image* %44, %struct._Image** %retval, align 8, !dbg !3265
  br label %return, !dbg !3265

if.end57:                                         ; preds = %if.end49
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3266
  %46 = load i64, i64* %columns.addr, align 8, !dbg !3267
  %47 = load i64, i64* %rows.addr, align 8, !dbg !3268
  %48 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3269
  %call58 = call %struct._Image* @CloneImage(%struct._Image* %45, i64 %46, i64 %47, i32 1, %struct._ExceptionInfo* %48), !dbg !3270
  store %struct._Image* %call58, %struct._Image** %resize_image, align 8, !dbg !3271
  %49 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3272
  %cmp59 = icmp eq %struct._Image* %49, null, !dbg !3274
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !3275

if.then61:                                        ; preds = %if.end57
  %50 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3276
  %call62 = call %struct._ResizeFilter* @DestroyResizeFilter(%struct._ResizeFilter* %50), !dbg !3278
  store %struct._ResizeFilter* %call62, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3279
  %51 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3280
  store %struct._Image* %51, %struct._Image** %retval, align 8, !dbg !3281
  br label %return, !dbg !3281

if.end63:                                         ; preds = %if.end57
  %52 = load float, float* %x_factor, align 4, !dbg !3282
  %53 = load float, float* %y_factor, align 4, !dbg !3284
  %cmp64 = fcmp ogt float %52, %53, !dbg !3285
  br i1 %cmp64, label %if.then66, label %if.else69, !dbg !3286

if.then66:                                        ; preds = %if.end63
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3287
  %55 = load i64, i64* %columns.addr, align 8, !dbg !3288
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3289
  %rows67 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 8, !dbg !3290
  %57 = load i64, i64* %rows67, align 8, !dbg !3290
  %58 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3291
  %call68 = call %struct._Image* @CloneImage(%struct._Image* %54, i64 %55, i64 %57, i32 1, %struct._ExceptionInfo* %58), !dbg !3292
  store %struct._Image* %call68, %struct._Image** %filter_image, align 8, !dbg !3293
  br label %if.end72, !dbg !3294

if.else69:                                        ; preds = %if.end63
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3295
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3296
  %columns70 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 7, !dbg !3297
  %61 = load i64, i64* %columns70, align 8, !dbg !3297
  %62 = load i64, i64* %rows.addr, align 8, !dbg !3298
  %63 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3299
  %call71 = call %struct._Image* @CloneImage(%struct._Image* %59, i64 %61, i64 %62, i32 1, %struct._ExceptionInfo* %63), !dbg !3300
  store %struct._Image* %call71, %struct._Image** %filter_image, align 8, !dbg !3301
  br label %if.end72

if.end72:                                         ; preds = %if.else69, %if.then66
  %64 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3302
  %cmp73 = icmp eq %struct._Image* %64, null, !dbg !3304
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !3305

if.then75:                                        ; preds = %if.end72
  %65 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3306
  %call76 = call %struct._ResizeFilter* @DestroyResizeFilter(%struct._ResizeFilter* %65), !dbg !3308
  store %struct._ResizeFilter* %call76, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3309
  %66 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3310
  %call77 = call %struct._Image* @DestroyImage(%struct._Image* %66), !dbg !3311
  store %struct._Image* %call77, %struct._Image** %retval, align 8, !dbg !3312
  br label %return, !dbg !3312

if.end78:                                         ; preds = %if.end72
  store i64 0, i64* %offset, align 8, !dbg !3313
  %67 = load float, float* %x_factor, align 4, !dbg !3314
  %68 = load float, float* %y_factor, align 4, !dbg !3316
  %cmp79 = fcmp ogt float %67, %68, !dbg !3317
  br i1 %cmp79, label %if.then81, label %if.else85, !dbg !3318

if.then81:                                        ; preds = %if.end78
  %69 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3319
  %columns82 = getelementptr inbounds %struct._Image, %struct._Image* %69, i32 0, i32 7, !dbg !3321
  %70 = load i64, i64* %columns82, align 8, !dbg !3321
  %71 = load i64, i64* %rows.addr, align 8, !dbg !3322
  %add = add i64 %70, %71, !dbg !3323
  store i64 %add, i64* %span, align 8, !dbg !3324
  %72 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3325
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3326
  %74 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3327
  %75 = load float, float* %x_factor, align 4, !dbg !3328
  %76 = load i64, i64* %span, align 8, !dbg !3329
  %77 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3330
  %call83 = call i32 @HorizontalFilter(%struct._ResizeFilter* %72, %struct._Image* %73, %struct._Image* %74, float %75, i64 %76, i64* %offset, %struct._ExceptionInfo* %77), !dbg !3331
  store i32 %call83, i32* %status, align 4, !dbg !3332
  %78 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3333
  %79 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3334
  %80 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3335
  %81 = load float, float* %y_factor, align 4, !dbg !3336
  %82 = load i64, i64* %span, align 8, !dbg !3337
  %83 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3338
  %call84 = call i32 @VerticalFilter(%struct._ResizeFilter* %78, %struct._Image* %79, %struct._Image* %80, float %81, i64 %82, i64* %offset, %struct._ExceptionInfo* %83), !dbg !3339
  %84 = load i32, i32* %status, align 4, !dbg !3340
  %and = and i32 %84, %call84, !dbg !3340
  store i32 %and, i32* %status, align 4, !dbg !3340
  br label %if.end91, !dbg !3341

if.else85:                                        ; preds = %if.end78
  %85 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3342
  %rows86 = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 8, !dbg !3344
  %86 = load i64, i64* %rows86, align 8, !dbg !3344
  %87 = load i64, i64* %columns.addr, align 8, !dbg !3345
  %add87 = add i64 %86, %87, !dbg !3346
  store i64 %add87, i64* %span, align 8, !dbg !3347
  %88 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3348
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3349
  %90 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3350
  %91 = load float, float* %y_factor, align 4, !dbg !3351
  %92 = load i64, i64* %span, align 8, !dbg !3352
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3353
  %call88 = call i32 @VerticalFilter(%struct._ResizeFilter* %88, %struct._Image* %89, %struct._Image* %90, float %91, i64 %92, i64* %offset, %struct._ExceptionInfo* %93), !dbg !3354
  store i32 %call88, i32* %status, align 4, !dbg !3355
  %94 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3356
  %95 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3357
  %96 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3358
  %97 = load float, float* %x_factor, align 4, !dbg !3359
  %98 = load i64, i64* %span, align 8, !dbg !3360
  %99 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3361
  %call89 = call i32 @HorizontalFilter(%struct._ResizeFilter* %94, %struct._Image* %95, %struct._Image* %96, float %97, i64 %98, i64* %offset, %struct._ExceptionInfo* %99), !dbg !3362
  %100 = load i32, i32* %status, align 4, !dbg !3363
  %and90 = and i32 %100, %call89, !dbg !3363
  store i32 %and90, i32* %status, align 4, !dbg !3363
  br label %if.end91

if.end91:                                         ; preds = %if.else85, %if.then81
  %101 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !3364
  %call92 = call %struct._Image* @DestroyImage(%struct._Image* %101), !dbg !3365
  store %struct._Image* %call92, %struct._Image** %filter_image, align 8, !dbg !3366
  %102 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3367
  %call93 = call %struct._ResizeFilter* @DestroyResizeFilter(%struct._ResizeFilter* %102), !dbg !3368
  store %struct._ResizeFilter* %call93, %struct._ResizeFilter** %resize_filter, align 8, !dbg !3369
  %103 = load i32, i32* %status, align 4, !dbg !3370
  %cmp94 = icmp eq i32 %103, 0, !dbg !3372
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !3373

if.then96:                                        ; preds = %if.end91
  %104 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3374
  %call97 = call %struct._Image* @DestroyImage(%struct._Image* %104), !dbg !3376
  store %struct._Image* %call97, %struct._Image** %resize_image, align 8, !dbg !3377
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !3378
  br label %return, !dbg !3378

if.end98:                                         ; preds = %if.end91
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3379
  %type = getelementptr inbounds %struct._Image, %struct._Image* %105, i32 0, i32 77, !dbg !3380
  %106 = load i32, i32* %type, align 8, !dbg !3380
  %107 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3381
  %type99 = getelementptr inbounds %struct._Image, %struct._Image* %107, i32 0, i32 77, !dbg !3382
  store i32 %106, i32* %type99, align 8, !dbg !3383
  %108 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !3384
  store %struct._Image* %108, %struct._Image** %retval, align 8, !dbg !3385
  br label %return, !dbg !3385

return:                                           ; preds = %if.end98, %if.then96, %if.then75, %if.then61, %if.then55, %if.then16, %if.then3
  %109 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3386
  ret %struct._Image* %109, !dbg !3386
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ResampleImage(%struct._Image* %image, double %x_resolution, double %y_resolution, i32 %filter, double %blur, %struct._ExceptionInfo* %exception) #0 !dbg !3387 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x_resolution.addr = alloca double, align 8
  %y_resolution.addr = alloca double, align 8
  %filter.addr = alloca i32, align 4
  %blur.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %resample_image = alloca %struct._Image*, align 8
  %height = alloca i64, align 8
  %width = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3390, metadata !DIExpression()), !dbg !3391
  store double %x_resolution, double* %x_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_resolution.addr, metadata !3392, metadata !DIExpression()), !dbg !3393
  store double %y_resolution, double* %y_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y_resolution.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store double %blur, double* %blur.addr, align 8
  call void @llvm.dbg.declare(metadata double* %blur.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3400, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.declare(metadata %struct._Image** %resample_image, metadata !3402, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.declare(metadata i64* %height, metadata !3404, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.declare(metadata i64* %width, metadata !3406, metadata !DIExpression()), !dbg !3407
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3408
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3410
  %1 = load i32, i32* %debug, align 8, !dbg !3410
  %cmp = icmp ne i32 %1, 0, !dbg !3411
  br i1 %cmp, label %if.then, label %if.end, !dbg !3412

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3413
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3414
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3413
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2328, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3415
  br label %if.end, !dbg !3416

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %x_resolution.addr, align 8, !dbg !3417
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3418
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !3419
  %5 = load i64, i64* %columns, align 8, !dbg !3419
  %conv = uitofp i64 %5 to double, !dbg !3418
  %mul = fmul double %3, %conv, !dbg !3420
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3421
  %x_resolution1 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 24, !dbg !3422
  %7 = load double, double* %x_resolution1, align 8, !dbg !3422
  %cmp2 = fcmp oeq double %7, 0.000000e+00, !dbg !3423
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3421

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !3421

cond.false:                                       ; preds = %if.end
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3424
  %x_resolution4 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 24, !dbg !3425
  %9 = load double, double* %x_resolution4, align 8, !dbg !3425
  br label %cond.end, !dbg !3421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 7.200000e+01, %cond.true ], [ %9, %cond.false ], !dbg !3421
  %div = fdiv double %mul, %cond, !dbg !3426
  %add = fadd double %div, 5.000000e-01, !dbg !3427
  %conv5 = fptoui double %add to i64, !dbg !3428
  store i64 %conv5, i64* %width, align 8, !dbg !3429
  %10 = load double, double* %y_resolution.addr, align 8, !dbg !3430
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3431
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !3432
  %12 = load i64, i64* %rows, align 8, !dbg !3432
  %conv6 = uitofp i64 %12 to double, !dbg !3431
  %mul7 = fmul double %10, %conv6, !dbg !3433
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3434
  %y_resolution8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 25, !dbg !3435
  %14 = load double, double* %y_resolution8, align 8, !dbg !3435
  %cmp9 = fcmp oeq double %14, 0.000000e+00, !dbg !3436
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !3434

cond.true11:                                      ; preds = %cond.end
  br label %cond.end14, !dbg !3434

cond.false12:                                     ; preds = %cond.end
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3437
  %y_resolution13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 25, !dbg !3438
  %16 = load double, double* %y_resolution13, align 8, !dbg !3438
  br label %cond.end14, !dbg !3434

cond.end14:                                       ; preds = %cond.false12, %cond.true11
  %cond15 = phi double [ 7.200000e+01, %cond.true11 ], [ %16, %cond.false12 ], !dbg !3434
  %div16 = fdiv double %mul7, %cond15, !dbg !3439
  %add17 = fadd double %div16, 5.000000e-01, !dbg !3440
  %conv18 = fptoui double %add17 to i64, !dbg !3441
  store i64 %conv18, i64* %height, align 8, !dbg !3442
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3443
  %18 = load i64, i64* %width, align 8, !dbg !3444
  %19 = load i64, i64* %height, align 8, !dbg !3445
  %20 = load i32, i32* %filter.addr, align 4, !dbg !3446
  %21 = load double, double* %blur.addr, align 8, !dbg !3447
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3448
  %call19 = call %struct._Image* @ResizeImage(%struct._Image* %17, i64 %18, i64 %19, i32 %20, double %21, %struct._ExceptionInfo* %22), !dbg !3449
  store %struct._Image* %call19, %struct._Image** %resample_image, align 8, !dbg !3450
  %23 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !3451
  %cmp20 = icmp ne %struct._Image* %23, null, !dbg !3453
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !3454

if.then22:                                        ; preds = %cond.end14
  %24 = load double, double* %x_resolution.addr, align 8, !dbg !3455
  %25 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !3457
  %x_resolution23 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 24, !dbg !3458
  store double %24, double* %x_resolution23, align 8, !dbg !3459
  %26 = load double, double* %y_resolution.addr, align 8, !dbg !3460
  %27 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !3461
  %y_resolution24 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 25, !dbg !3462
  store double %26, double* %y_resolution24, align 8, !dbg !3463
  br label %if.end25, !dbg !3464

if.end25:                                         ; preds = %if.then22, %cond.end14
  %28 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !3465
  ret %struct._Image* %28, !dbg !3466
}

declare dso_local %struct._Image* @AccelerateResizeImage(%struct._Image*, i64, i64, %struct._ResizeFilter*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @HorizontalFilter(%struct._ResizeFilter* %resize_filter, %struct._Image* %image, %struct._Image* %resize_image, float %x_factor, i64 %span, i64* %offset, %struct._ExceptionInfo* %exception) #0 !dbg !3467 {
entry:
  %retval = alloca i32, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %resize_image.addr = alloca %struct._Image*, align 8
  %x_factor.addr = alloca float, align 4
  %span.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %resize_view = alloca %struct._CacheView*, align 8
  %storage_class = alloca i32, align 4
  %contributions = alloca %struct._ContributionInfo**, align 8
  %status = alloca i32, align 4
  %zero = alloca %struct._MagickPixelPacket, align 8
  %scale = alloca float, align 4
  %support = alloca float, align 4
  %x = alloca i64, align 8
  %id = alloca i32, align 4
  %bisect = alloca float, align 4
  %density = alloca float, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %contribution = alloca %struct._ContributionInfo*, align 8
  %resize_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %y = alloca i64, align 8
  %n = alloca i64, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %i = alloca i64, align 8
  %pixel122 = alloca %struct._MagickPixelPacket, align 8
  %alpha = alloca float, align 4
  %i123 = alloca i64, align 8
  %j = alloca i64, align 8
  %gamma = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !3471, metadata !DIExpression()), !dbg !3472
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3473, metadata !DIExpression()), !dbg !3474
  store %struct._Image* %resize_image, %struct._Image** %resize_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image.addr, metadata !3475, metadata !DIExpression()), !dbg !3476
  store float %x_factor, float* %x_factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x_factor.addr, metadata !3477, metadata !DIExpression()), !dbg !3478
  store i64 %span, i64* %span.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %span.addr, metadata !3479, metadata !DIExpression()), !dbg !3480
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !3481, metadata !DIExpression()), !dbg !3482
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !3485, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.declare(metadata %struct._CacheView** %resize_view, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata i32* %storage_class, metadata !3489, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo*** %contributions, metadata !3491, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !3496, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.declare(metadata float* %scale, metadata !3498, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.declare(metadata float* %support, metadata !3500, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3502, metadata !DIExpression()), !dbg !3503
  %0 = load float, float* %x_factor.addr, align 4, !dbg !3504
  %conv = fpext float %0 to double, !dbg !3504
  %div = fdiv double 1.000000e+00, %conv, !dbg !3505
  %add = fadd double %div, 1.000000e-15, !dbg !3506
  %call = call double @MagickMax(double %add, double 1.000000e+00), !dbg !3507
  %conv1 = fptrunc double %call to float, !dbg !3507
  store float %conv1, float* %scale, align 4, !dbg !3508
  %1 = load float, float* %scale, align 4, !dbg !3509
  %2 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !3510
  %call2 = call float @GetResizeFilterSupport(%struct._ResizeFilter* %2), !dbg !3511
  %mul = fmul float %1, %call2, !dbg !3512
  store float %mul, float* %support, align 4, !dbg !3513
  %3 = load float, float* %support, align 4, !dbg !3514
  %conv3 = fpext float %3 to double, !dbg !3514
  %cmp = fcmp ogt double %conv3, 5.000000e-01, !dbg !3515
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3514

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3514

cond.false:                                       ; preds = %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3516
  %storage_class5 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 0, !dbg !3517
  %5 = load i32, i32* %storage_class5, align 8, !dbg !3517
  br label %cond.end, !dbg !3514

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %5, %cond.false ], !dbg !3514
  store i32 %cond, i32* %storage_class, align 4, !dbg !3518
  %6 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3519
  %7 = load i32, i32* %storage_class, align 4, !dbg !3521
  %call6 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 %7), !dbg !3522
  %cmp7 = icmp eq i32 %call6, 0, !dbg !3523
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3524

if.then:                                          ; preds = %cond.end
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3525
  %9 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3527
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 58, !dbg !3528
  call void @InheritException(%struct._ExceptionInfo* %8, %struct._ExceptionInfo* %exception9), !dbg !3529
  store i32 0, i32* %retval, align 4, !dbg !3530
  br label %return, !dbg !3530

if.end:                                           ; preds = %cond.end
  %10 = load float, float* %support, align 4, !dbg !3531
  %conv10 = fpext float %10 to double, !dbg !3531
  %cmp11 = fcmp olt double %conv10, 5.000000e-01, !dbg !3533
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !3534

if.then13:                                        ; preds = %if.end
  store float 5.000000e-01, float* %support, align 4, !dbg !3535
  store float 1.000000e+00, float* %scale, align 4, !dbg !3537
  br label %if.end14, !dbg !3538

if.end14:                                         ; preds = %if.then13, %if.end
  %11 = load float, float* %support, align 4, !dbg !3539
  %conv15 = fpext float %11 to double, !dbg !3539
  %mul16 = fmul double 2.000000e+00, %conv15, !dbg !3540
  %add17 = fadd double %mul16, 3.000000e+00, !dbg !3541
  %conv18 = fptoui double %add17 to i64, !dbg !3542
  %call19 = call %struct._ContributionInfo** @AcquireContributionThreadSet(i64 %conv18), !dbg !3543
  store %struct._ContributionInfo** %call19, %struct._ContributionInfo*** %contributions, align 8, !dbg !3544
  %12 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !3545
  %cmp20 = icmp eq %struct._ContributionInfo** %12, null, !dbg !3547
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !3548

if.then22:                                        ; preds = %if.end14
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3549
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3551
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 53, !dbg !3552
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3551
  %call23 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2504, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3553
  store i32 0, i32* %retval, align 4, !dbg !3554
  br label %return, !dbg !3554

if.end24:                                         ; preds = %if.end14
  store i32 1, i32* %status, align 4, !dbg !3555
  %15 = load float, float* %scale, align 4, !dbg !3556
  %conv25 = fpext float %15 to double, !dbg !3556
  %call26 = call double @PerceptibleReciprocal(double %conv25), !dbg !3557
  %conv27 = fptrunc double %call26 to float, !dbg !3557
  store float %conv27, float* %scale, align 4, !dbg !3558
  %16 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !3559
  %call28 = call i8* @ResetMagickMemory(i8* %16, i32 0, i64 56), !dbg !3560
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3561
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3562
  %call29 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %17, %struct._ExceptionInfo* %18), !dbg !3563
  store %struct._CacheView* %call29, %struct._CacheView** %image_view, align 8, !dbg !3564
  %19 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3565
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3566
  %call30 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %19, %struct._ExceptionInfo* %20), !dbg !3567
  store %struct._CacheView* %call30, %struct._CacheView** %resize_view, align 8, !dbg !3568
  store i64 0, i64* %x, align 8, !dbg !3569
  br label %for.cond, !dbg !3571

for.cond:                                         ; preds = %for.inc458, %if.end24
  %21 = load i64, i64* %x, align 8, !dbg !3572
  %22 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3574
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !3575
  %23 = load i64, i64* %columns, align 8, !dbg !3575
  %cmp31 = icmp slt i64 %21, %23, !dbg !3576
  br i1 %cmp31, label %for.body, label %for.end460, !dbg !3577

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !3578, metadata !DIExpression()), !dbg !3581
  %call33 = call i32 @GetOpenMPThreadId(), !dbg !3582
  store i32 %call33, i32* %id, align 4, !dbg !3581
  call void @llvm.dbg.declare(metadata float* %bisect, metadata !3583, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.declare(metadata float* %density, metadata !3585, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3587, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3589, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo** %contribution, metadata !3591, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.declare(metadata i16** %resize_indexes, metadata !3594, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !3596, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3598, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3600, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata i64* %start, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !3604, metadata !DIExpression()), !dbg !3605
  %24 = load i32, i32* %status, align 4, !dbg !3606
  %cmp34 = icmp eq i32 %24, 0, !dbg !3608
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3609

if.then36:                                        ; preds = %for.body
  br label %for.inc458, !dbg !3610

if.end37:                                         ; preds = %for.body
  %25 = load i64, i64* %x, align 8, !dbg !3611
  %conv38 = sitofp i64 %25 to double, !dbg !3611
  %add39 = fadd double %conv38, 5.000000e-01, !dbg !3612
  %conv40 = fptrunc double %add39 to float, !dbg !3613
  %26 = load float, float* %x_factor.addr, align 4, !dbg !3614
  %div41 = fdiv float %conv40, %26, !dbg !3615
  %conv42 = fpext float %div41 to double, !dbg !3613
  %add43 = fadd double %conv42, 1.000000e-15, !dbg !3616
  %conv44 = fptrunc double %add43 to float, !dbg !3613
  store float %conv44, float* %bisect, align 4, !dbg !3617
  %27 = load float, float* %bisect, align 4, !dbg !3618
  %28 = load float, float* %support, align 4, !dbg !3619
  %sub = fsub float %27, %28, !dbg !3620
  %conv45 = fpext float %sub to double, !dbg !3618
  %add46 = fadd double %conv45, 5.000000e-01, !dbg !3621
  %call47 = call double @MagickMax(double %add46, double 0.000000e+00), !dbg !3622
  %conv48 = fptosi double %call47 to i64, !dbg !3623
  store i64 %conv48, i64* %start, align 8, !dbg !3624
  %29 = load float, float* %bisect, align 4, !dbg !3625
  %30 = load float, float* %support, align 4, !dbg !3626
  %add49 = fadd float %29, %30, !dbg !3627
  %conv50 = fpext float %add49 to double, !dbg !3625
  %add51 = fadd double %conv50, 5.000000e-01, !dbg !3628
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3629
  %columns52 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 7, !dbg !3630
  %32 = load i64, i64* %columns52, align 8, !dbg !3630
  %conv53 = uitofp i64 %32 to double, !dbg !3631
  %call54 = call double @MagickMin(double %add51, double %conv53), !dbg !3632
  %conv55 = fptosi double %call54 to i64, !dbg !3633
  store i64 %conv55, i64* %stop, align 8, !dbg !3634
  store float 0.000000e+00, float* %density, align 4, !dbg !3635
  %33 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !3636
  %34 = load i32, i32* %id, align 4, !dbg !3637
  %idxprom = sext i32 %34 to i64, !dbg !3636
  %arrayidx = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %33, i64 %idxprom, !dbg !3636
  %35 = load %struct._ContributionInfo*, %struct._ContributionInfo** %arrayidx, align 8, !dbg !3636
  store %struct._ContributionInfo* %35, %struct._ContributionInfo** %contribution, align 8, !dbg !3638
  store i64 0, i64* %n, align 8, !dbg !3639
  br label %for.cond56, !dbg !3641

for.cond56:                                       ; preds = %for.inc, %if.end37
  %36 = load i64, i64* %n, align 8, !dbg !3642
  %37 = load i64, i64* %stop, align 8, !dbg !3644
  %38 = load i64, i64* %start, align 8, !dbg !3645
  %sub57 = sub nsw i64 %37, %38, !dbg !3646
  %cmp58 = icmp slt i64 %36, %sub57, !dbg !3647
  br i1 %cmp58, label %for.body60, label %for.end, !dbg !3648

for.body60:                                       ; preds = %for.cond56
  %39 = load i64, i64* %start, align 8, !dbg !3649
  %40 = load i64, i64* %n, align 8, !dbg !3651
  %add61 = add nsw i64 %39, %40, !dbg !3652
  %41 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3653
  %42 = load i64, i64* %n, align 8, !dbg !3654
  %arrayidx62 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %41, i64 %42, !dbg !3653
  %pixel = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx62, i32 0, i32 1, !dbg !3655
  store i64 %add61, i64* %pixel, align 8, !dbg !3656
  %43 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !3657
  %44 = load float, float* %scale, align 4, !dbg !3658
  %conv63 = fpext float %44 to double, !dbg !3658
  %45 = load i64, i64* %start, align 8, !dbg !3659
  %46 = load i64, i64* %n, align 8, !dbg !3660
  %add64 = add nsw i64 %45, %46, !dbg !3661
  %conv65 = sitofp i64 %add64 to float, !dbg !3662
  %47 = load float, float* %bisect, align 4, !dbg !3663
  %sub66 = fsub float %conv65, %47, !dbg !3664
  %conv67 = fpext float %sub66 to double, !dbg !3662
  %add68 = fadd double %conv67, 5.000000e-01, !dbg !3665
  %mul69 = fmul double %conv63, %add68, !dbg !3666
  %conv70 = fptrunc double %mul69 to float, !dbg !3658
  %call71 = call float @GetResizeFilterWeight(%struct._ResizeFilter* %43, float %conv70), !dbg !3667
  %48 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3668
  %49 = load i64, i64* %n, align 8, !dbg !3669
  %arrayidx72 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %48, i64 %49, !dbg !3668
  %weight = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx72, i32 0, i32 0, !dbg !3670
  store float %call71, float* %weight, align 8, !dbg !3671
  %50 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3672
  %51 = load i64, i64* %n, align 8, !dbg !3673
  %arrayidx73 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %50, i64 %51, !dbg !3672
  %weight74 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx73, i32 0, i32 0, !dbg !3674
  %52 = load float, float* %weight74, align 8, !dbg !3674
  %53 = load float, float* %density, align 4, !dbg !3675
  %add75 = fadd float %53, %52, !dbg !3675
  store float %add75, float* %density, align 4, !dbg !3675
  br label %for.inc, !dbg !3676

for.inc:                                          ; preds = %for.body60
  %54 = load i64, i64* %n, align 8, !dbg !3677
  %inc = add nsw i64 %54, 1, !dbg !3677
  store i64 %inc, i64* %n, align 8, !dbg !3677
  br label %for.cond56, !dbg !3678, !llvm.loop !3679

for.end:                                          ; preds = %for.cond56
  %55 = load float, float* %density, align 4, !dbg !3681
  %conv76 = fpext float %55 to double, !dbg !3681
  %cmp77 = fcmp une double %conv76, 0.000000e+00, !dbg !3683
  br i1 %cmp77, label %land.lhs.true, label %if.end96, !dbg !3684

land.lhs.true:                                    ; preds = %for.end
  %56 = load float, float* %density, align 4, !dbg !3685
  %conv79 = fpext float %56 to double, !dbg !3685
  %cmp80 = fcmp une double %conv79, 1.000000e+00, !dbg !3686
  br i1 %cmp80, label %if.then82, label %if.end96, !dbg !3687

if.then82:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3688, metadata !DIExpression()), !dbg !3690
  %57 = load float, float* %density, align 4, !dbg !3691
  %conv83 = fpext float %57 to double, !dbg !3691
  %call84 = call double @PerceptibleReciprocal(double %conv83), !dbg !3692
  %conv85 = fptrunc double %call84 to float, !dbg !3692
  store float %conv85, float* %density, align 4, !dbg !3693
  store i64 0, i64* %i, align 8, !dbg !3694
  br label %for.cond86, !dbg !3696

for.cond86:                                       ; preds = %for.inc93, %if.then82
  %58 = load i64, i64* %i, align 8, !dbg !3697
  %59 = load i64, i64* %n, align 8, !dbg !3699
  %cmp87 = icmp slt i64 %58, %59, !dbg !3700
  br i1 %cmp87, label %for.body89, label %for.end95, !dbg !3701

for.body89:                                       ; preds = %for.cond86
  %60 = load float, float* %density, align 4, !dbg !3702
  %61 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3703
  %62 = load i64, i64* %i, align 8, !dbg !3704
  %arrayidx90 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %61, i64 %62, !dbg !3703
  %weight91 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx90, i32 0, i32 0, !dbg !3705
  %63 = load float, float* %weight91, align 8, !dbg !3706
  %mul92 = fmul float %63, %60, !dbg !3706
  store float %mul92, float* %weight91, align 8, !dbg !3706
  br label %for.inc93, !dbg !3703

for.inc93:                                        ; preds = %for.body89
  %64 = load i64, i64* %i, align 8, !dbg !3707
  %inc94 = add nsw i64 %64, 1, !dbg !3707
  store i64 %inc94, i64* %i, align 8, !dbg !3707
  br label %for.cond86, !dbg !3708, !llvm.loop !3709

for.end95:                                        ; preds = %for.cond86
  br label %if.end96, !dbg !3711

if.end96:                                         ; preds = %for.end95, %land.lhs.true, %for.end
  %65 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3712
  %66 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3713
  %arrayidx97 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %66, i64 0, !dbg !3713
  %pixel98 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx97, i32 0, i32 1, !dbg !3714
  %67 = load i64, i64* %pixel98, align 8, !dbg !3714
  %68 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3715
  %69 = load i64, i64* %n, align 8, !dbg !3716
  %sub99 = sub nsw i64 %69, 1, !dbg !3717
  %arrayidx100 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %68, i64 %sub99, !dbg !3715
  %pixel101 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx100, i32 0, i32 1, !dbg !3718
  %70 = load i64, i64* %pixel101, align 8, !dbg !3718
  %71 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3719
  %arrayidx102 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %71, i64 0, !dbg !3719
  %pixel103 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx102, i32 0, i32 1, !dbg !3720
  %72 = load i64, i64* %pixel103, align 8, !dbg !3720
  %sub104 = sub nsw i64 %70, %72, !dbg !3721
  %add105 = add nsw i64 %sub104, 1, !dbg !3722
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3723
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 8, !dbg !3724
  %74 = load i64, i64* %rows, align 8, !dbg !3724
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3725
  %call106 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %65, i64 %67, i64 0, i64 %add105, i64 %74, %struct._ExceptionInfo* %75), !dbg !3726
  store %struct._PixelPacket* %call106, %struct._PixelPacket** %p, align 8, !dbg !3727
  %76 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !3728
  %77 = load i64, i64* %x, align 8, !dbg !3729
  %78 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3730
  %rows107 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 8, !dbg !3731
  %79 = load i64, i64* %rows107, align 8, !dbg !3731
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3732
  %call108 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %76, i64 %77, i64 0, i64 1, i64 %79, %struct._ExceptionInfo* %80), !dbg !3733
  store %struct._PixelPacket* %call108, %struct._PixelPacket** %q, align 8, !dbg !3734
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3735
  %cmp109 = icmp eq %struct._PixelPacket* %81, null, !dbg !3737
  br i1 %cmp109, label %if.then113, label %lor.lhs.false, !dbg !3738

lor.lhs.false:                                    ; preds = %if.end96
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3739
  %cmp111 = icmp eq %struct._PixelPacket* %82, null, !dbg !3740
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !3741

if.then113:                                       ; preds = %lor.lhs.false, %if.end96
  store i32 0, i32* %status, align 4, !dbg !3742
  br label %for.inc458, !dbg !3744

if.end114:                                        ; preds = %lor.lhs.false
  %83 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3745
  %call115 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %83), !dbg !3746
  store i16* %call115, i16** %indexes, align 8, !dbg !3747
  %84 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !3748
  %call116 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %84), !dbg !3749
  store i16* %call116, i16** %resize_indexes, align 8, !dbg !3750
  store i64 0, i64* %y, align 8, !dbg !3751
  br label %for.cond117, !dbg !3753

for.cond117:                                      ; preds = %for.inc440, %if.end114
  %85 = load i64, i64* %y, align 8, !dbg !3754
  %86 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3756
  %rows118 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 8, !dbg !3757
  %87 = load i64, i64* %rows118, align 8, !dbg !3757
  %cmp119 = icmp slt i64 %85, %87, !dbg !3758
  br i1 %cmp119, label %for.body121, label %for.end442, !dbg !3759

for.body121:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel122, metadata !3760, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !3763, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.declare(metadata i64* %i123, metadata !3765, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.declare(metadata i64* %j, metadata !3767, metadata !DIExpression()), !dbg !3768
  %88 = bitcast %struct._MagickPixelPacket* %pixel122 to i8*, !dbg !3769
  %89 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !3769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 56, i1 false), !dbg !3769
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3770
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 6, !dbg !3772
  %91 = load i32, i32* %matte, align 8, !dbg !3772
  %cmp124 = icmp eq i32 %91, 0, !dbg !3773
  br i1 %cmp124, label %if.then126, label %if.else, !dbg !3774

if.then126:                                       ; preds = %for.body121
  store i64 0, i64* %i123, align 8, !dbg !3775
  br label %for.cond127, !dbg !3778

for.cond127:                                      ; preds = %for.inc170, %if.then126
  %92 = load i64, i64* %i123, align 8, !dbg !3779
  %93 = load i64, i64* %n, align 8, !dbg !3781
  %cmp128 = icmp slt i64 %92, %93, !dbg !3782
  br i1 %cmp128, label %for.body130, label %for.end172, !dbg !3783

for.body130:                                      ; preds = %for.cond127
  %94 = load i64, i64* %y, align 8, !dbg !3784
  %95 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3786
  %96 = load i64, i64* %n, align 8, !dbg !3787
  %sub131 = sub nsw i64 %96, 1, !dbg !3788
  %arrayidx132 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %95, i64 %sub131, !dbg !3786
  %pixel133 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx132, i32 0, i32 1, !dbg !3789
  %97 = load i64, i64* %pixel133, align 8, !dbg !3789
  %98 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3790
  %arrayidx134 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %98, i64 0, !dbg !3790
  %pixel135 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx134, i32 0, i32 1, !dbg !3791
  %99 = load i64, i64* %pixel135, align 8, !dbg !3791
  %sub136 = sub nsw i64 %97, %99, !dbg !3792
  %add137 = add nsw i64 %sub136, 1, !dbg !3793
  %mul138 = mul nsw i64 %94, %add137, !dbg !3794
  %100 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3795
  %101 = load i64, i64* %i123, align 8, !dbg !3796
  %arrayidx139 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %100, i64 %101, !dbg !3795
  %pixel140 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx139, i32 0, i32 1, !dbg !3797
  %102 = load i64, i64* %pixel140, align 8, !dbg !3797
  %103 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3798
  %arrayidx141 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %103, i64 0, !dbg !3798
  %pixel142 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx141, i32 0, i32 1, !dbg !3799
  %104 = load i64, i64* %pixel142, align 8, !dbg !3799
  %sub143 = sub nsw i64 %102, %104, !dbg !3800
  %add144 = add nsw i64 %mul138, %sub143, !dbg !3801
  store i64 %add144, i64* %j, align 8, !dbg !3802
  %105 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3803
  %106 = load i64, i64* %i123, align 8, !dbg !3804
  %arrayidx145 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %105, i64 %106, !dbg !3803
  %weight146 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx145, i32 0, i32 0, !dbg !3805
  %107 = load float, float* %weight146, align 8, !dbg !3805
  store float %107, float* %alpha, align 4, !dbg !3806
  %108 = load float, float* %alpha, align 4, !dbg !3807
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3808
  %110 = load i64, i64* %j, align 8, !dbg !3808
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i64 %110, !dbg !3808
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr, i32 0, i32 2, !dbg !3808
  %111 = load i16, i16* %red, align 2, !dbg !3808
  %conv147 = zext i16 %111 to i32, !dbg !3808
  %conv148 = sitofp i32 %conv147 to float, !dbg !3808
  %mul149 = fmul float %108, %conv148, !dbg !3809
  %red150 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !3810
  %112 = load float, float* %red150, align 8, !dbg !3811
  %add151 = fadd float %112, %mul149, !dbg !3811
  store float %add151, float* %red150, align 8, !dbg !3811
  %113 = load float, float* %alpha, align 4, !dbg !3812
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3813
  %115 = load i64, i64* %j, align 8, !dbg !3813
  %add.ptr152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i64 %115, !dbg !3813
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr152, i32 0, i32 1, !dbg !3813
  %116 = load i16, i16* %green, align 2, !dbg !3813
  %conv153 = zext i16 %116 to i32, !dbg !3813
  %conv154 = sitofp i32 %conv153 to float, !dbg !3813
  %mul155 = fmul float %113, %conv154, !dbg !3814
  %green156 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !3815
  %117 = load float, float* %green156, align 4, !dbg !3816
  %add157 = fadd float %117, %mul155, !dbg !3816
  store float %add157, float* %green156, align 4, !dbg !3816
  %118 = load float, float* %alpha, align 4, !dbg !3817
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3818
  %120 = load i64, i64* %j, align 8, !dbg !3818
  %add.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i64 %120, !dbg !3818
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr158, i32 0, i32 0, !dbg !3818
  %121 = load i16, i16* %blue, align 2, !dbg !3818
  %conv159 = zext i16 %121 to i32, !dbg !3818
  %conv160 = sitofp i32 %conv159 to float, !dbg !3818
  %mul161 = fmul float %118, %conv160, !dbg !3819
  %blue162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !3820
  %122 = load float, float* %blue162, align 8, !dbg !3821
  %add163 = fadd float %122, %mul161, !dbg !3821
  store float %add163, float* %blue162, align 8, !dbg !3821
  %123 = load float, float* %alpha, align 4, !dbg !3822
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3823
  %125 = load i64, i64* %j, align 8, !dbg !3823
  %add.ptr164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i64 %125, !dbg !3823
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr164, i32 0, i32 3, !dbg !3823
  %126 = load i16, i16* %opacity, align 2, !dbg !3823
  %conv165 = zext i16 %126 to i32, !dbg !3823
  %conv166 = sitofp i32 %conv165 to float, !dbg !3823
  %mul167 = fmul float %123, %conv166, !dbg !3824
  %opacity168 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !3825
  %127 = load float, float* %opacity168, align 4, !dbg !3826
  %add169 = fadd float %127, %mul167, !dbg !3826
  store float %add169, float* %opacity168, align 4, !dbg !3826
  br label %for.inc170, !dbg !3827

for.inc170:                                       ; preds = %for.body130
  %128 = load i64, i64* %i123, align 8, !dbg !3828
  %inc171 = add nsw i64 %128, 1, !dbg !3828
  store i64 %inc171, i64* %i123, align 8, !dbg !3828
  br label %for.cond127, !dbg !3829, !llvm.loop !3830

for.end172:                                       ; preds = %for.cond127
  %red173 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !3832
  %129 = load float, float* %red173, align 8, !dbg !3832
  %call174 = call zeroext i16 @ClampToQuantum(float %129), !dbg !3832
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3832
  %red175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 2, !dbg !3832
  store i16 %call174, i16* %red175, align 2, !dbg !3832
  %green176 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !3833
  %131 = load float, float* %green176, align 4, !dbg !3833
  %call177 = call zeroext i16 @ClampToQuantum(float %131), !dbg !3833
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3833
  %green178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 1, !dbg !3833
  store i16 %call177, i16* %green178, align 2, !dbg !3833
  %blue179 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !3834
  %133 = load float, float* %blue179, align 8, !dbg !3834
  %call180 = call zeroext i16 @ClampToQuantum(float %133), !dbg !3834
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3834
  %blue181 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 0, !dbg !3834
  store i16 %call180, i16* %blue181, align 2, !dbg !3834
  %opacity182 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !3835
  %135 = load float, float* %opacity182, align 4, !dbg !3835
  %call183 = call zeroext i16 @ClampToQuantum(float %135), !dbg !3835
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3835
  %opacity184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 3, !dbg !3835
  store i16 %call183, i16* %opacity184, align 2, !dbg !3835
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3836
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 1, !dbg !3838
  %138 = load i32, i32* %colorspace, align 4, !dbg !3838
  %cmp185 = icmp eq i32 %138, 12, !dbg !3839
  br i1 %cmp185, label %land.lhs.true187, label %if.end235, !dbg !3840

land.lhs.true187:                                 ; preds = %for.end172
  %139 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3841
  %colorspace188 = getelementptr inbounds %struct._Image, %struct._Image* %139, i32 0, i32 1, !dbg !3842
  %140 = load i32, i32* %colorspace188, align 4, !dbg !3842
  %cmp189 = icmp eq i32 %140, 12, !dbg !3843
  br i1 %cmp189, label %if.then191, label %if.end235, !dbg !3844

if.then191:                                       ; preds = %land.lhs.true187
  store i64 0, i64* %i123, align 8, !dbg !3845
  br label %for.cond192, !dbg !3848

for.cond192:                                      ; preds = %for.inc224, %if.then191
  %141 = load i64, i64* %i123, align 8, !dbg !3849
  %142 = load i64, i64* %n, align 8, !dbg !3851
  %cmp193 = icmp slt i64 %141, %142, !dbg !3852
  br i1 %cmp193, label %for.body195, label %for.end226, !dbg !3853

for.body195:                                      ; preds = %for.cond192
  %143 = load i64, i64* %y, align 8, !dbg !3854
  %144 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3856
  %145 = load i64, i64* %n, align 8, !dbg !3857
  %sub196 = sub nsw i64 %145, 1, !dbg !3858
  %arrayidx197 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %144, i64 %sub196, !dbg !3856
  %pixel198 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx197, i32 0, i32 1, !dbg !3859
  %146 = load i64, i64* %pixel198, align 8, !dbg !3859
  %147 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3860
  %arrayidx199 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %147, i64 0, !dbg !3860
  %pixel200 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx199, i32 0, i32 1, !dbg !3861
  %148 = load i64, i64* %pixel200, align 8, !dbg !3861
  %sub201 = sub nsw i64 %146, %148, !dbg !3862
  %add202 = add nsw i64 %sub201, 1, !dbg !3863
  %mul203 = mul nsw i64 %143, %add202, !dbg !3864
  %149 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3865
  %150 = load i64, i64* %i123, align 8, !dbg !3866
  %arrayidx204 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %149, i64 %150, !dbg !3865
  %pixel205 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx204, i32 0, i32 1, !dbg !3867
  %151 = load i64, i64* %pixel205, align 8, !dbg !3867
  %152 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3868
  %arrayidx206 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %152, i64 0, !dbg !3868
  %pixel207 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx206, i32 0, i32 1, !dbg !3869
  %153 = load i64, i64* %pixel207, align 8, !dbg !3869
  %sub208 = sub nsw i64 %151, %153, !dbg !3870
  %add209 = add nsw i64 %mul203, %sub208, !dbg !3871
  store i64 %add209, i64* %j, align 8, !dbg !3872
  %154 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3873
  %155 = load i64, i64* %i123, align 8, !dbg !3874
  %arrayidx210 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %154, i64 %155, !dbg !3873
  %weight211 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx210, i32 0, i32 0, !dbg !3875
  %156 = load float, float* %weight211, align 8, !dbg !3875
  store float %156, float* %alpha, align 4, !dbg !3876
  %157 = load float, float* %alpha, align 4, !dbg !3877
  %158 = load i16*, i16** %indexes, align 8, !dbg !3878
  %159 = load i64, i64* %j, align 8, !dbg !3878
  %add.ptr212 = getelementptr inbounds i16, i16* %158, i64 %159, !dbg !3878
  %cmp213 = icmp eq i16* %add.ptr212, null, !dbg !3878
  br i1 %cmp213, label %cond.true215, label %cond.false216, !dbg !3878

cond.true215:                                     ; preds = %for.body195
  br label %cond.end219, !dbg !3878

cond.false216:                                    ; preds = %for.body195
  %160 = load i16*, i16** %indexes, align 8, !dbg !3878
  %161 = load i64, i64* %j, align 8, !dbg !3878
  %add.ptr217 = getelementptr inbounds i16, i16* %160, i64 %161, !dbg !3878
  %162 = load i16, i16* %add.ptr217, align 2, !dbg !3878
  %conv218 = zext i16 %162 to i32, !dbg !3878
  br label %cond.end219, !dbg !3878

cond.end219:                                      ; preds = %cond.false216, %cond.true215
  %cond220 = phi i32 [ 0, %cond.true215 ], [ %conv218, %cond.false216 ], !dbg !3878
  %conv221 = sitofp i32 %cond220 to float, !dbg !3878
  %mul222 = fmul float %157, %conv221, !dbg !3879
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !3880
  %163 = load float, float* %index, align 8, !dbg !3881
  %add223 = fadd float %163, %mul222, !dbg !3881
  store float %add223, float* %index, align 8, !dbg !3881
  br label %for.inc224, !dbg !3882

for.inc224:                                       ; preds = %cond.end219
  %164 = load i64, i64* %i123, align 8, !dbg !3883
  %inc225 = add nsw i64 %164, 1, !dbg !3883
  store i64 %inc225, i64* %i123, align 8, !dbg !3883
  br label %for.cond192, !dbg !3884, !llvm.loop !3885

for.end226:                                       ; preds = %for.cond192
  %165 = load i16*, i16** %resize_indexes, align 8, !dbg !3887
  %166 = load i64, i64* %y, align 8, !dbg !3887
  %add.ptr227 = getelementptr inbounds i16, i16* %165, i64 %166, !dbg !3887
  %cmp228 = icmp ne i16* %add.ptr227, null, !dbg !3887
  br i1 %cmp228, label %if.then230, label %if.end234, !dbg !3890

if.then230:                                       ; preds = %for.end226
  %index231 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !3887
  %167 = load float, float* %index231, align 8, !dbg !3887
  %call232 = call zeroext i16 @ClampToQuantum(float %167), !dbg !3887
  %168 = load i16*, i16** %resize_indexes, align 8, !dbg !3887
  %169 = load i64, i64* %y, align 8, !dbg !3887
  %add.ptr233 = getelementptr inbounds i16, i16* %168, i64 %169, !dbg !3887
  store i16 %call232, i16* %add.ptr233, align 2, !dbg !3887
  br label %if.end234, !dbg !3887

if.end234:                                        ; preds = %if.then230, %for.end226
  br label %if.end235, !dbg !3891

if.end235:                                        ; preds = %if.end234, %land.lhs.true187, %for.end172
  br label %if.end391, !dbg !3892

if.else:                                          ; preds = %for.body121
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3893, metadata !DIExpression()), !dbg !3895
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3896
  store i64 0, i64* %i123, align 8, !dbg !3897
  br label %for.cond236, !dbg !3899

for.cond236:                                      ; preds = %for.inc297, %if.else
  %170 = load i64, i64* %i123, align 8, !dbg !3900
  %171 = load i64, i64* %n, align 8, !dbg !3902
  %cmp237 = icmp slt i64 %170, %171, !dbg !3903
  br i1 %cmp237, label %for.body239, label %for.end299, !dbg !3904

for.body239:                                      ; preds = %for.cond236
  %172 = load i64, i64* %y, align 8, !dbg !3905
  %173 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3907
  %174 = load i64, i64* %n, align 8, !dbg !3908
  %sub240 = sub nsw i64 %174, 1, !dbg !3909
  %arrayidx241 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %173, i64 %sub240, !dbg !3907
  %pixel242 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx241, i32 0, i32 1, !dbg !3910
  %175 = load i64, i64* %pixel242, align 8, !dbg !3910
  %176 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3911
  %arrayidx243 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %176, i64 0, !dbg !3911
  %pixel244 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx243, i32 0, i32 1, !dbg !3912
  %177 = load i64, i64* %pixel244, align 8, !dbg !3912
  %sub245 = sub nsw i64 %175, %177, !dbg !3913
  %add246 = add nsw i64 %sub245, 1, !dbg !3914
  %mul247 = mul nsw i64 %172, %add246, !dbg !3915
  %178 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3916
  %179 = load i64, i64* %i123, align 8, !dbg !3917
  %arrayidx248 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %178, i64 %179, !dbg !3916
  %pixel249 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx248, i32 0, i32 1, !dbg !3918
  %180 = load i64, i64* %pixel249, align 8, !dbg !3918
  %181 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3919
  %arrayidx250 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %181, i64 0, !dbg !3919
  %pixel251 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx250, i32 0, i32 1, !dbg !3920
  %182 = load i64, i64* %pixel251, align 8, !dbg !3920
  %sub252 = sub nsw i64 %180, %182, !dbg !3921
  %add253 = add nsw i64 %mul247, %sub252, !dbg !3922
  store i64 %add253, i64* %j, align 8, !dbg !3923
  %183 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3924
  %184 = load i64, i64* %i123, align 8, !dbg !3925
  %arrayidx254 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %183, i64 %184, !dbg !3924
  %weight255 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx254, i32 0, i32 0, !dbg !3926
  %185 = load float, float* %weight255, align 8, !dbg !3926
  %conv256 = fpext float %185 to double, !dbg !3924
  %mul257 = fmul double %conv256, 0x3EF0001000100010, !dbg !3927
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3928
  %187 = load i64, i64* %j, align 8, !dbg !3928
  %add.ptr258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i64 %187, !dbg !3928
  %opacity259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr258, i32 0, i32 3, !dbg !3928
  %188 = load i16, i16* %opacity259, align 2, !dbg !3928
  %conv260 = zext i16 %188 to i32, !dbg !3928
  %sub261 = sub nsw i32 65535, %conv260, !dbg !3928
  %conv262 = sitofp i32 %sub261 to double, !dbg !3928
  %mul263 = fmul double %mul257, %conv262, !dbg !3929
  %conv264 = fptrunc double %mul263 to float, !dbg !3924
  store float %conv264, float* %alpha, align 4, !dbg !3930
  %189 = load float, float* %alpha, align 4, !dbg !3931
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3932
  %191 = load i64, i64* %j, align 8, !dbg !3932
  %add.ptr265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i64 %191, !dbg !3932
  %red266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr265, i32 0, i32 2, !dbg !3932
  %192 = load i16, i16* %red266, align 2, !dbg !3932
  %conv267 = zext i16 %192 to i32, !dbg !3932
  %conv268 = sitofp i32 %conv267 to float, !dbg !3932
  %mul269 = fmul float %189, %conv268, !dbg !3933
  %red270 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !3934
  %193 = load float, float* %red270, align 8, !dbg !3935
  %add271 = fadd float %193, %mul269, !dbg !3935
  store float %add271, float* %red270, align 8, !dbg !3935
  %194 = load float, float* %alpha, align 4, !dbg !3936
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3937
  %196 = load i64, i64* %j, align 8, !dbg !3937
  %add.ptr272 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i64 %196, !dbg !3937
  %green273 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr272, i32 0, i32 1, !dbg !3937
  %197 = load i16, i16* %green273, align 2, !dbg !3937
  %conv274 = zext i16 %197 to i32, !dbg !3937
  %conv275 = sitofp i32 %conv274 to float, !dbg !3937
  %mul276 = fmul float %194, %conv275, !dbg !3938
  %green277 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !3939
  %198 = load float, float* %green277, align 4, !dbg !3940
  %add278 = fadd float %198, %mul276, !dbg !3940
  store float %add278, float* %green277, align 4, !dbg !3940
  %199 = load float, float* %alpha, align 4, !dbg !3941
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3942
  %201 = load i64, i64* %j, align 8, !dbg !3942
  %add.ptr279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i64 %201, !dbg !3942
  %blue280 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr279, i32 0, i32 0, !dbg !3942
  %202 = load i16, i16* %blue280, align 2, !dbg !3942
  %conv281 = zext i16 %202 to i32, !dbg !3942
  %conv282 = sitofp i32 %conv281 to float, !dbg !3942
  %mul283 = fmul float %199, %conv282, !dbg !3943
  %blue284 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !3944
  %203 = load float, float* %blue284, align 8, !dbg !3945
  %add285 = fadd float %203, %mul283, !dbg !3945
  store float %add285, float* %blue284, align 8, !dbg !3945
  %204 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3946
  %205 = load i64, i64* %i123, align 8, !dbg !3947
  %arrayidx286 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %204, i64 %205, !dbg !3946
  %weight287 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx286, i32 0, i32 0, !dbg !3948
  %206 = load float, float* %weight287, align 8, !dbg !3948
  %207 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3949
  %208 = load i64, i64* %j, align 8, !dbg !3949
  %add.ptr288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %207, i64 %208, !dbg !3949
  %opacity289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr288, i32 0, i32 3, !dbg !3949
  %209 = load i16, i16* %opacity289, align 2, !dbg !3949
  %conv290 = zext i16 %209 to i32, !dbg !3949
  %conv291 = sitofp i32 %conv290 to float, !dbg !3949
  %mul292 = fmul float %206, %conv291, !dbg !3950
  %opacity293 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !3951
  %210 = load float, float* %opacity293, align 4, !dbg !3952
  %add294 = fadd float %210, %mul292, !dbg !3952
  store float %add294, float* %opacity293, align 4, !dbg !3952
  %211 = load float, float* %alpha, align 4, !dbg !3953
  %conv295 = fpext float %211 to double, !dbg !3953
  %212 = load double, double* %gamma, align 8, !dbg !3954
  %add296 = fadd double %212, %conv295, !dbg !3954
  store double %add296, double* %gamma, align 8, !dbg !3954
  br label %for.inc297, !dbg !3955

for.inc297:                                       ; preds = %for.body239
  %213 = load i64, i64* %i123, align 8, !dbg !3956
  %inc298 = add nsw i64 %213, 1, !dbg !3956
  store i64 %inc298, i64* %i123, align 8, !dbg !3956
  br label %for.cond236, !dbg !3957, !llvm.loop !3958

for.end299:                                       ; preds = %for.cond236
  %214 = load double, double* %gamma, align 8, !dbg !3960
  %cmp300 = fcmp olt double %214, 0.000000e+00, !dbg !3962
  br i1 %cmp300, label %if.then302, label %if.end303, !dbg !3963

if.then302:                                       ; preds = %for.end299
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3964
  br label %if.end303, !dbg !3965

if.end303:                                        ; preds = %if.then302, %for.end299
  %215 = load double, double* %gamma, align 8, !dbg !3966
  %call304 = call double @PerceptibleReciprocal(double %215), !dbg !3967
  store double %call304, double* %gamma, align 8, !dbg !3968
  %216 = load double, double* %gamma, align 8, !dbg !3969
  %red305 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !3969
  %217 = load float, float* %red305, align 8, !dbg !3969
  %conv306 = fpext float %217 to double, !dbg !3969
  %mul307 = fmul double %216, %conv306, !dbg !3969
  %conv308 = fptrunc double %mul307 to float, !dbg !3969
  %call309 = call zeroext i16 @ClampToQuantum(float %conv308), !dbg !3969
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3969
  %red310 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 0, i32 2, !dbg !3969
  store i16 %call309, i16* %red310, align 2, !dbg !3969
  %219 = load double, double* %gamma, align 8, !dbg !3970
  %green311 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !3970
  %220 = load float, float* %green311, align 4, !dbg !3970
  %conv312 = fpext float %220 to double, !dbg !3970
  %mul313 = fmul double %219, %conv312, !dbg !3970
  %conv314 = fptrunc double %mul313 to float, !dbg !3970
  %call315 = call zeroext i16 @ClampToQuantum(float %conv314), !dbg !3970
  %221 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3970
  %green316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %221, i32 0, i32 1, !dbg !3970
  store i16 %call315, i16* %green316, align 2, !dbg !3970
  %222 = load double, double* %gamma, align 8, !dbg !3971
  %blue317 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !3971
  %223 = load float, float* %blue317, align 8, !dbg !3971
  %conv318 = fpext float %223 to double, !dbg !3971
  %mul319 = fmul double %222, %conv318, !dbg !3971
  %conv320 = fptrunc double %mul319 to float, !dbg !3971
  %call321 = call zeroext i16 @ClampToQuantum(float %conv320), !dbg !3971
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3971
  %blue322 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i32 0, i32 0, !dbg !3971
  store i16 %call321, i16* %blue322, align 2, !dbg !3971
  %opacity323 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !3972
  %225 = load float, float* %opacity323, align 4, !dbg !3972
  %call324 = call zeroext i16 @ClampToQuantum(float %225), !dbg !3972
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3972
  %opacity325 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 0, i32 3, !dbg !3972
  store i16 %call324, i16* %opacity325, align 2, !dbg !3972
  %227 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3973
  %colorspace326 = getelementptr inbounds %struct._Image, %struct._Image* %227, i32 0, i32 1, !dbg !3975
  %228 = load i32, i32* %colorspace326, align 4, !dbg !3975
  %cmp327 = icmp eq i32 %228, 12, !dbg !3976
  br i1 %cmp327, label %land.lhs.true329, label %if.end390, !dbg !3977

land.lhs.true329:                                 ; preds = %if.end303
  %229 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !3978
  %colorspace330 = getelementptr inbounds %struct._Image, %struct._Image* %229, i32 0, i32 1, !dbg !3979
  %230 = load i32, i32* %colorspace330, align 4, !dbg !3979
  %cmp331 = icmp eq i32 %230, 12, !dbg !3980
  br i1 %cmp331, label %if.then333, label %if.end390, !dbg !3981

if.then333:                                       ; preds = %land.lhs.true329
  store i64 0, i64* %i123, align 8, !dbg !3982
  br label %for.cond334, !dbg !3985

for.cond334:                                      ; preds = %for.inc376, %if.then333
  %231 = load i64, i64* %i123, align 8, !dbg !3986
  %232 = load i64, i64* %n, align 8, !dbg !3988
  %cmp335 = icmp slt i64 %231, %232, !dbg !3989
  br i1 %cmp335, label %for.body337, label %for.end378, !dbg !3990

for.body337:                                      ; preds = %for.cond334
  %233 = load i64, i64* %y, align 8, !dbg !3991
  %234 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3993
  %235 = load i64, i64* %n, align 8, !dbg !3994
  %sub338 = sub nsw i64 %235, 1, !dbg !3995
  %arrayidx339 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %234, i64 %sub338, !dbg !3993
  %pixel340 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx339, i32 0, i32 1, !dbg !3996
  %236 = load i64, i64* %pixel340, align 8, !dbg !3996
  %237 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !3997
  %arrayidx341 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %237, i64 0, !dbg !3997
  %pixel342 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx341, i32 0, i32 1, !dbg !3998
  %238 = load i64, i64* %pixel342, align 8, !dbg !3998
  %sub343 = sub nsw i64 %236, %238, !dbg !3999
  %add344 = add nsw i64 %sub343, 1, !dbg !4000
  %mul345 = mul nsw i64 %233, %add344, !dbg !4001
  %239 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4002
  %240 = load i64, i64* %i123, align 8, !dbg !4003
  %arrayidx346 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %239, i64 %240, !dbg !4002
  %pixel347 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx346, i32 0, i32 1, !dbg !4004
  %241 = load i64, i64* %pixel347, align 8, !dbg !4004
  %242 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4005
  %arrayidx348 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %242, i64 0, !dbg !4005
  %pixel349 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx348, i32 0, i32 1, !dbg !4006
  %243 = load i64, i64* %pixel349, align 8, !dbg !4006
  %sub350 = sub nsw i64 %241, %243, !dbg !4007
  %add351 = add nsw i64 %mul345, %sub350, !dbg !4008
  store i64 %add351, i64* %j, align 8, !dbg !4009
  %244 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4010
  %245 = load i64, i64* %i123, align 8, !dbg !4011
  %arrayidx352 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %244, i64 %245, !dbg !4010
  %weight353 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx352, i32 0, i32 0, !dbg !4012
  %246 = load float, float* %weight353, align 8, !dbg !4012
  %conv354 = fpext float %246 to double, !dbg !4010
  %mul355 = fmul double %conv354, 0x3EF0001000100010, !dbg !4013
  %247 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4014
  %248 = load i64, i64* %j, align 8, !dbg !4014
  %add.ptr356 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %247, i64 %248, !dbg !4014
  %opacity357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr356, i32 0, i32 3, !dbg !4014
  %249 = load i16, i16* %opacity357, align 2, !dbg !4014
  %conv358 = zext i16 %249 to i32, !dbg !4014
  %sub359 = sub nsw i32 65535, %conv358, !dbg !4014
  %conv360 = sitofp i32 %sub359 to double, !dbg !4014
  %mul361 = fmul double %mul355, %conv360, !dbg !4015
  %conv362 = fptrunc double %mul361 to float, !dbg !4010
  store float %conv362, float* %alpha, align 4, !dbg !4016
  %250 = load float, float* %alpha, align 4, !dbg !4017
  %251 = load i16*, i16** %indexes, align 8, !dbg !4018
  %252 = load i64, i64* %j, align 8, !dbg !4018
  %add.ptr363 = getelementptr inbounds i16, i16* %251, i64 %252, !dbg !4018
  %cmp364 = icmp eq i16* %add.ptr363, null, !dbg !4018
  br i1 %cmp364, label %cond.true366, label %cond.false367, !dbg !4018

cond.true366:                                     ; preds = %for.body337
  br label %cond.end370, !dbg !4018

cond.false367:                                    ; preds = %for.body337
  %253 = load i16*, i16** %indexes, align 8, !dbg !4018
  %254 = load i64, i64* %j, align 8, !dbg !4018
  %add.ptr368 = getelementptr inbounds i16, i16* %253, i64 %254, !dbg !4018
  %255 = load i16, i16* %add.ptr368, align 2, !dbg !4018
  %conv369 = zext i16 %255 to i32, !dbg !4018
  br label %cond.end370, !dbg !4018

cond.end370:                                      ; preds = %cond.false367, %cond.true366
  %cond371 = phi i32 [ 0, %cond.true366 ], [ %conv369, %cond.false367 ], !dbg !4018
  %conv372 = sitofp i32 %cond371 to float, !dbg !4018
  %mul373 = fmul float %250, %conv372, !dbg !4019
  %index374 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4020
  %256 = load float, float* %index374, align 8, !dbg !4021
  %add375 = fadd float %256, %mul373, !dbg !4021
  store float %add375, float* %index374, align 8, !dbg !4021
  br label %for.inc376, !dbg !4022

for.inc376:                                       ; preds = %cond.end370
  %257 = load i64, i64* %i123, align 8, !dbg !4023
  %inc377 = add nsw i64 %257, 1, !dbg !4023
  store i64 %inc377, i64* %i123, align 8, !dbg !4023
  br label %for.cond334, !dbg !4024, !llvm.loop !4025

for.end378:                                       ; preds = %for.cond334
  %258 = load i16*, i16** %resize_indexes, align 8, !dbg !4027
  %259 = load i64, i64* %y, align 8, !dbg !4027
  %add.ptr379 = getelementptr inbounds i16, i16* %258, i64 %259, !dbg !4027
  %cmp380 = icmp ne i16* %add.ptr379, null, !dbg !4027
  br i1 %cmp380, label %if.then382, label %if.end389, !dbg !4030

if.then382:                                       ; preds = %for.end378
  %260 = load double, double* %gamma, align 8, !dbg !4027
  %index383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4027
  %261 = load float, float* %index383, align 8, !dbg !4027
  %conv384 = fpext float %261 to double, !dbg !4027
  %mul385 = fmul double %260, %conv384, !dbg !4027
  %conv386 = fptrunc double %mul385 to float, !dbg !4027
  %call387 = call zeroext i16 @ClampToQuantum(float %conv386), !dbg !4027
  %262 = load i16*, i16** %resize_indexes, align 8, !dbg !4027
  %263 = load i64, i64* %y, align 8, !dbg !4027
  %add.ptr388 = getelementptr inbounds i16, i16* %262, i64 %263, !dbg !4027
  store i16 %call387, i16* %add.ptr388, align 2, !dbg !4027
  br label %if.end389, !dbg !4027

if.end389:                                        ; preds = %if.then382, %for.end378
  br label %if.end390, !dbg !4031

if.end390:                                        ; preds = %if.end389, %land.lhs.true329, %if.end303
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end235
  %264 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4032
  %storage_class392 = getelementptr inbounds %struct._Image, %struct._Image* %264, i32 0, i32 0, !dbg !4034
  %265 = load i32, i32* %storage_class392, align 8, !dbg !4034
  %cmp393 = icmp eq i32 %265, 2, !dbg !4035
  br i1 %cmp393, label %land.lhs.true395, label %if.end439, !dbg !4036

land.lhs.true395:                                 ; preds = %if.end391
  %266 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4037
  %storage_class396 = getelementptr inbounds %struct._Image, %struct._Image* %266, i32 0, i32 0, !dbg !4038
  %267 = load i32, i32* %storage_class396, align 8, !dbg !4038
  %cmp397 = icmp eq i32 %267, 2, !dbg !4039
  br i1 %cmp397, label %if.then399, label %if.end439, !dbg !4040

if.then399:                                       ; preds = %land.lhs.true395
  %268 = load float, float* %bisect, align 4, !dbg !4041
  %conv400 = fpext float %268 to double, !dbg !4041
  %269 = load i64, i64* %start, align 8, !dbg !4043
  %conv401 = sitofp i64 %269 to double, !dbg !4044
  %call402 = call double @MagickMax(double %conv400, double %conv401), !dbg !4045
  %270 = load i64, i64* %stop, align 8, !dbg !4046
  %conv403 = sitofp i64 %270 to double, !dbg !4047
  %sub404 = fsub double %conv403, 1.000000e+00, !dbg !4048
  %call405 = call double @MagickMin(double %call402, double %sub404), !dbg !4049
  %add406 = fadd double %call405, 5.000000e-01, !dbg !4050
  %conv407 = fptosi double %add406 to i64, !dbg !4051
  store i64 %conv407, i64* %i123, align 8, !dbg !4052
  %271 = load i64, i64* %y, align 8, !dbg !4053
  %272 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4054
  %273 = load i64, i64* %n, align 8, !dbg !4055
  %sub408 = sub nsw i64 %273, 1, !dbg !4056
  %arrayidx409 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %272, i64 %sub408, !dbg !4054
  %pixel410 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx409, i32 0, i32 1, !dbg !4057
  %274 = load i64, i64* %pixel410, align 8, !dbg !4057
  %275 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4058
  %arrayidx411 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %275, i64 0, !dbg !4058
  %pixel412 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx411, i32 0, i32 1, !dbg !4059
  %276 = load i64, i64* %pixel412, align 8, !dbg !4059
  %sub413 = sub nsw i64 %274, %276, !dbg !4060
  %add414 = add nsw i64 %sub413, 1, !dbg !4061
  %mul415 = mul nsw i64 %271, %add414, !dbg !4062
  %277 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4063
  %278 = load i64, i64* %i123, align 8, !dbg !4064
  %279 = load i64, i64* %start, align 8, !dbg !4065
  %sub416 = sub nsw i64 %278, %279, !dbg !4066
  %arrayidx417 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %277, i64 %sub416, !dbg !4063
  %pixel418 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx417, i32 0, i32 1, !dbg !4067
  %280 = load i64, i64* %pixel418, align 8, !dbg !4067
  %281 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4068
  %arrayidx419 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %281, i64 0, !dbg !4068
  %pixel420 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx419, i32 0, i32 1, !dbg !4069
  %282 = load i64, i64* %pixel420, align 8, !dbg !4069
  %sub421 = sub nsw i64 %280, %282, !dbg !4070
  %add422 = add nsw i64 %mul415, %sub421, !dbg !4071
  store i64 %add422, i64* %j, align 8, !dbg !4072
  %283 = load i16*, i16** %resize_indexes, align 8, !dbg !4073
  %284 = load i64, i64* %y, align 8, !dbg !4073
  %add.ptr423 = getelementptr inbounds i16, i16* %283, i64 %284, !dbg !4073
  %cmp424 = icmp ne i16* %add.ptr423, null, !dbg !4073
  br i1 %cmp424, label %if.then426, label %if.end438, !dbg !4076

if.then426:                                       ; preds = %if.then399
  %285 = load i16*, i16** %indexes, align 8, !dbg !4073
  %286 = load i64, i64* %j, align 8, !dbg !4073
  %add.ptr427 = getelementptr inbounds i16, i16* %285, i64 %286, !dbg !4073
  %cmp428 = icmp eq i16* %add.ptr427, null, !dbg !4073
  br i1 %cmp428, label %cond.true430, label %cond.false431, !dbg !4073

cond.true430:                                     ; preds = %if.then426
  br label %cond.end434, !dbg !4073

cond.false431:                                    ; preds = %if.then426
  %287 = load i16*, i16** %indexes, align 8, !dbg !4073
  %288 = load i64, i64* %j, align 8, !dbg !4073
  %add.ptr432 = getelementptr inbounds i16, i16* %287, i64 %288, !dbg !4073
  %289 = load i16, i16* %add.ptr432, align 2, !dbg !4073
  %conv433 = zext i16 %289 to i32, !dbg !4073
  br label %cond.end434, !dbg !4073

cond.end434:                                      ; preds = %cond.false431, %cond.true430
  %cond435 = phi i32 [ 0, %cond.true430 ], [ %conv433, %cond.false431 ], !dbg !4073
  %conv436 = trunc i32 %cond435 to i16, !dbg !4073
  %290 = load i16*, i16** %resize_indexes, align 8, !dbg !4073
  %291 = load i64, i64* %y, align 8, !dbg !4073
  %add.ptr437 = getelementptr inbounds i16, i16* %290, i64 %291, !dbg !4073
  store i16 %conv436, i16* %add.ptr437, align 2, !dbg !4073
  br label %if.end438, !dbg !4073

if.end438:                                        ; preds = %cond.end434, %if.then399
  br label %if.end439, !dbg !4077

if.end439:                                        ; preds = %if.end438, %land.lhs.true395, %if.end391
  %292 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4078
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %292, i32 1, !dbg !4078
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !4078
  br label %for.inc440, !dbg !4079

for.inc440:                                       ; preds = %if.end439
  %293 = load i64, i64* %y, align 8, !dbg !4080
  %inc441 = add nsw i64 %293, 1, !dbg !4080
  store i64 %inc441, i64* %y, align 8, !dbg !4080
  br label %for.cond117, !dbg !4081, !llvm.loop !4082

for.end442:                                       ; preds = %for.cond117
  %294 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4084
  %295 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4086
  %call443 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %294, %struct._ExceptionInfo* %295), !dbg !4087
  %cmp444 = icmp eq i32 %call443, 0, !dbg !4088
  br i1 %cmp444, label %if.then446, label %if.end447, !dbg !4089

if.then446:                                       ; preds = %for.end442
  store i32 0, i32* %status, align 4, !dbg !4090
  br label %if.end447, !dbg !4091

if.end447:                                        ; preds = %if.then446, %for.end442
  %296 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4092
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %296, i32 0, i32 47, !dbg !4094
  %297 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4094
  %cmp448 = icmp ne i32 (i8*, i64, i64, i8*)* %297, null, !dbg !4095
  br i1 %cmp448, label %if.then450, label %if.end457, !dbg !4096

if.then450:                                       ; preds = %if.end447
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !4097, metadata !DIExpression()), !dbg !4099
  %298 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4100
  %299 = load i64*, i64** %offset.addr, align 8, !dbg !4101
  %300 = load i64, i64* %299, align 8, !dbg !4102
  %inc451 = add nsw i64 %300, 1, !dbg !4102
  store i64 %inc451, i64* %299, align 8, !dbg !4102
  %301 = load i64, i64* %span.addr, align 8, !dbg !4103
  %call452 = call i32 @SetImageProgress(%struct._Image* %298, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i64 %300, i64 %301), !dbg !4104
  store i32 %call452, i32* %proceed, align 4, !dbg !4105
  %302 = load i32, i32* %proceed, align 4, !dbg !4106
  %cmp453 = icmp eq i32 %302, 0, !dbg !4108
  br i1 %cmp453, label %if.then455, label %if.end456, !dbg !4109

if.then455:                                       ; preds = %if.then450
  store i32 0, i32* %status, align 4, !dbg !4110
  br label %if.end456, !dbg !4111

if.end456:                                        ; preds = %if.then455, %if.then450
  br label %if.end457, !dbg !4112

if.end457:                                        ; preds = %if.end456, %if.end447
  br label %for.inc458, !dbg !4113

for.inc458:                                       ; preds = %if.end457, %if.then113, %if.then36
  %303 = load i64, i64* %x, align 8, !dbg !4114
  %inc459 = add nsw i64 %303, 1, !dbg !4114
  store i64 %inc459, i64* %x, align 8, !dbg !4114
  br label %for.cond, !dbg !4115, !llvm.loop !4116

for.end460:                                       ; preds = %for.cond
  %304 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4118
  %call461 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %304), !dbg !4119
  store %struct._CacheView* %call461, %struct._CacheView** %resize_view, align 8, !dbg !4120
  %305 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4121
  %call462 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %305), !dbg !4122
  store %struct._CacheView* %call462, %struct._CacheView** %image_view, align 8, !dbg !4123
  %306 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !4124
  %call463 = call %struct._ContributionInfo** @DestroyContributionThreadSet(%struct._ContributionInfo** %306), !dbg !4125
  store %struct._ContributionInfo** %call463, %struct._ContributionInfo*** %contributions, align 8, !dbg !4126
  %307 = load i32, i32* %status, align 4, !dbg !4127
  store i32 %307, i32* %retval, align 4, !dbg !4128
  br label %return, !dbg !4128

return:                                           ; preds = %for.end460, %if.then22, %if.then
  %308 = load i32, i32* %retval, align 4, !dbg !4129
  ret i32 %308, !dbg !4129
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VerticalFilter(%struct._ResizeFilter* %resize_filter, %struct._Image* %image, %struct._Image* %resize_image, float %y_factor, i64 %span, i64* %offset, %struct._ExceptionInfo* %exception) #0 !dbg !4130 {
entry:
  %retval = alloca i32, align 4
  %resize_filter.addr = alloca %struct._ResizeFilter*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %resize_image.addr = alloca %struct._Image*, align 8
  %y_factor.addr = alloca float, align 4
  %span.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %resize_view = alloca %struct._CacheView*, align 8
  %storage_class = alloca i32, align 4
  %contributions = alloca %struct._ContributionInfo**, align 8
  %status = alloca i32, align 4
  %zero = alloca %struct._MagickPixelPacket, align 8
  %scale = alloca float, align 4
  %support = alloca float, align 4
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %bisect = alloca float, align 4
  %density = alloca float, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %contribution = alloca %struct._ContributionInfo*, align 8
  %resize_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %n = alloca i64, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %i = alloca i64, align 8
  %pixel122 = alloca %struct._MagickPixelPacket, align 8
  %alpha = alloca float, align 4
  %i123 = alloca i64, align 8
  %j = alloca i64, align 8
  %gamma = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._ResizeFilter* %resize_filter, %struct._ResizeFilter** %resize_filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ResizeFilter** %resize_filter.addr, metadata !4131, metadata !DIExpression()), !dbg !4132
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4133, metadata !DIExpression()), !dbg !4134
  store %struct._Image* %resize_image, %struct._Image** %resize_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  store float %y_factor, float* %y_factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y_factor.addr, metadata !4137, metadata !DIExpression()), !dbg !4138
  store i64 %span, i64* %span.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %span.addr, metadata !4139, metadata !DIExpression()), !dbg !4140
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !4141, metadata !DIExpression()), !dbg !4142
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4143, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !4145, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.declare(metadata %struct._CacheView** %resize_view, metadata !4147, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.declare(metadata i32* %storage_class, metadata !4149, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo*** %contributions, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4153, metadata !DIExpression()), !dbg !4154
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !4155, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.declare(metadata float* %scale, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata float* %support, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4161, metadata !DIExpression()), !dbg !4162
  %0 = load float, float* %y_factor.addr, align 4, !dbg !4163
  %conv = fpext float %0 to double, !dbg !4163
  %div = fdiv double 1.000000e+00, %conv, !dbg !4164
  %add = fadd double %div, 1.000000e-15, !dbg !4165
  %call = call double @MagickMax(double %add, double 1.000000e+00), !dbg !4166
  %conv1 = fptrunc double %call to float, !dbg !4166
  store float %conv1, float* %scale, align 4, !dbg !4167
  %1 = load float, float* %scale, align 4, !dbg !4168
  %2 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !4169
  %call2 = call float @GetResizeFilterSupport(%struct._ResizeFilter* %2), !dbg !4170
  %mul = fmul float %1, %call2, !dbg !4171
  store float %mul, float* %support, align 4, !dbg !4172
  %3 = load float, float* %support, align 4, !dbg !4173
  %conv3 = fpext float %3 to double, !dbg !4173
  %cmp = fcmp ogt double %conv3, 5.000000e-01, !dbg !4174
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4173

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4173

cond.false:                                       ; preds = %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4175
  %storage_class5 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 0, !dbg !4176
  %5 = load i32, i32* %storage_class5, align 8, !dbg !4176
  br label %cond.end, !dbg !4173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %5, %cond.false ], !dbg !4173
  store i32 %cond, i32* %storage_class, align 4, !dbg !4177
  %6 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4178
  %7 = load i32, i32* %storage_class, align 4, !dbg !4180
  %call6 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 %7), !dbg !4181
  %cmp7 = icmp eq i32 %call6, 0, !dbg !4182
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4183

if.then:                                          ; preds = %cond.end
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4184
  %9 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4186
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 58, !dbg !4187
  call void @InheritException(%struct._ExceptionInfo* %8, %struct._ExceptionInfo* %exception9), !dbg !4188
  store i32 0, i32* %retval, align 4, !dbg !4189
  br label %return, !dbg !4189

if.end:                                           ; preds = %cond.end
  %10 = load float, float* %support, align 4, !dbg !4190
  %conv10 = fpext float %10 to double, !dbg !4190
  %cmp11 = fcmp olt double %conv10, 5.000000e-01, !dbg !4192
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4193

if.then13:                                        ; preds = %if.end
  store float 5.000000e-01, float* %support, align 4, !dbg !4194
  store float 1.000000e+00, float* %scale, align 4, !dbg !4196
  br label %if.end14, !dbg !4197

if.end14:                                         ; preds = %if.then13, %if.end
  %11 = load float, float* %support, align 4, !dbg !4198
  %conv15 = fpext float %11 to double, !dbg !4198
  %mul16 = fmul double 2.000000e+00, %conv15, !dbg !4199
  %add17 = fadd double %mul16, 3.000000e+00, !dbg !4200
  %conv18 = fptoui double %add17 to i64, !dbg !4201
  %call19 = call %struct._ContributionInfo** @AcquireContributionThreadSet(i64 %conv18), !dbg !4202
  store %struct._ContributionInfo** %call19, %struct._ContributionInfo*** %contributions, align 8, !dbg !4203
  %12 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !4204
  %cmp20 = icmp eq %struct._ContributionInfo** %12, null, !dbg !4206
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4207

if.then22:                                        ; preds = %if.end14
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4208
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4210
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 53, !dbg !4211
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4210
  %call23 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2750, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !4212
  store i32 0, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

if.end24:                                         ; preds = %if.end14
  store i32 1, i32* %status, align 4, !dbg !4214
  %15 = load float, float* %scale, align 4, !dbg !4215
  %conv25 = fpext float %15 to double, !dbg !4215
  %call26 = call double @PerceptibleReciprocal(double %conv25), !dbg !4216
  %conv27 = fptrunc double %call26 to float, !dbg !4216
  store float %conv27, float* %scale, align 4, !dbg !4217
  %16 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !4218
  %call28 = call i8* @ResetMagickMemory(i8* %16, i32 0, i64 56), !dbg !4219
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4220
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4221
  %call29 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %17, %struct._ExceptionInfo* %18), !dbg !4222
  store %struct._CacheView* %call29, %struct._CacheView** %image_view, align 8, !dbg !4223
  %19 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4224
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4225
  %call30 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %19, %struct._ExceptionInfo* %20), !dbg !4226
  store %struct._CacheView* %call30, %struct._CacheView** %resize_view, align 8, !dbg !4227
  store i64 0, i64* %y, align 8, !dbg !4228
  br label %for.cond, !dbg !4230

for.cond:                                         ; preds = %for.inc428, %if.end24
  %21 = load i64, i64* %y, align 8, !dbg !4231
  %22 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4233
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 8, !dbg !4234
  %23 = load i64, i64* %rows, align 8, !dbg !4234
  %cmp31 = icmp slt i64 %21, %23, !dbg !4235
  br i1 %cmp31, label %for.body, label %for.end430, !dbg !4236

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !4237, metadata !DIExpression()), !dbg !4239
  %call33 = call i32 @GetOpenMPThreadId(), !dbg !4240
  store i32 %call33, i32* %id, align 4, !dbg !4239
  call void @llvm.dbg.declare(metadata float* %bisect, metadata !4241, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.declare(metadata float* %density, metadata !4243, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4245, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4247, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo** %contribution, metadata !4249, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.declare(metadata i16** %resize_indexes, metadata !4251, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !4253, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4255, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.declare(metadata i64* %n, metadata !4257, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.declare(metadata i64* %start, metadata !4259, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !4261, metadata !DIExpression()), !dbg !4262
  %24 = load i32, i32* %status, align 4, !dbg !4263
  %cmp34 = icmp eq i32 %24, 0, !dbg !4265
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !4266

if.then36:                                        ; preds = %for.body
  br label %for.inc428, !dbg !4267

if.end37:                                         ; preds = %for.body
  %25 = load i64, i64* %y, align 8, !dbg !4268
  %conv38 = sitofp i64 %25 to double, !dbg !4268
  %add39 = fadd double %conv38, 5.000000e-01, !dbg !4269
  %conv40 = fptrunc double %add39 to float, !dbg !4270
  %26 = load float, float* %y_factor.addr, align 4, !dbg !4271
  %div41 = fdiv float %conv40, %26, !dbg !4272
  %conv42 = fpext float %div41 to double, !dbg !4270
  %add43 = fadd double %conv42, 1.000000e-15, !dbg !4273
  %conv44 = fptrunc double %add43 to float, !dbg !4270
  store float %conv44, float* %bisect, align 4, !dbg !4274
  %27 = load float, float* %bisect, align 4, !dbg !4275
  %28 = load float, float* %support, align 4, !dbg !4276
  %sub = fsub float %27, %28, !dbg !4277
  %conv45 = fpext float %sub to double, !dbg !4275
  %add46 = fadd double %conv45, 5.000000e-01, !dbg !4278
  %call47 = call double @MagickMax(double %add46, double 0.000000e+00), !dbg !4279
  %conv48 = fptosi double %call47 to i64, !dbg !4280
  store i64 %conv48, i64* %start, align 8, !dbg !4281
  %29 = load float, float* %bisect, align 4, !dbg !4282
  %30 = load float, float* %support, align 4, !dbg !4283
  %add49 = fadd float %29, %30, !dbg !4284
  %conv50 = fpext float %add49 to double, !dbg !4282
  %add51 = fadd double %conv50, 5.000000e-01, !dbg !4285
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4286
  %rows52 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 8, !dbg !4287
  %32 = load i64, i64* %rows52, align 8, !dbg !4287
  %conv53 = uitofp i64 %32 to double, !dbg !4288
  %call54 = call double @MagickMin(double %add51, double %conv53), !dbg !4289
  %conv55 = fptosi double %call54 to i64, !dbg !4290
  store i64 %conv55, i64* %stop, align 8, !dbg !4291
  store float 0.000000e+00, float* %density, align 4, !dbg !4292
  %33 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !4293
  %34 = load i32, i32* %id, align 4, !dbg !4294
  %idxprom = sext i32 %34 to i64, !dbg !4293
  %arrayidx = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %33, i64 %idxprom, !dbg !4293
  %35 = load %struct._ContributionInfo*, %struct._ContributionInfo** %arrayidx, align 8, !dbg !4293
  store %struct._ContributionInfo* %35, %struct._ContributionInfo** %contribution, align 8, !dbg !4295
  store i64 0, i64* %n, align 8, !dbg !4296
  br label %for.cond56, !dbg !4298

for.cond56:                                       ; preds = %for.inc, %if.end37
  %36 = load i64, i64* %n, align 8, !dbg !4299
  %37 = load i64, i64* %stop, align 8, !dbg !4301
  %38 = load i64, i64* %start, align 8, !dbg !4302
  %sub57 = sub nsw i64 %37, %38, !dbg !4303
  %cmp58 = icmp slt i64 %36, %sub57, !dbg !4304
  br i1 %cmp58, label %for.body60, label %for.end, !dbg !4305

for.body60:                                       ; preds = %for.cond56
  %39 = load i64, i64* %start, align 8, !dbg !4306
  %40 = load i64, i64* %n, align 8, !dbg !4308
  %add61 = add nsw i64 %39, %40, !dbg !4309
  %41 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4310
  %42 = load i64, i64* %n, align 8, !dbg !4311
  %arrayidx62 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %41, i64 %42, !dbg !4310
  %pixel = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx62, i32 0, i32 1, !dbg !4312
  store i64 %add61, i64* %pixel, align 8, !dbg !4313
  %43 = load %struct._ResizeFilter*, %struct._ResizeFilter** %resize_filter.addr, align 8, !dbg !4314
  %44 = load float, float* %scale, align 4, !dbg !4315
  %conv63 = fpext float %44 to double, !dbg !4315
  %45 = load i64, i64* %start, align 8, !dbg !4316
  %46 = load i64, i64* %n, align 8, !dbg !4317
  %add64 = add nsw i64 %45, %46, !dbg !4318
  %conv65 = sitofp i64 %add64 to float, !dbg !4319
  %47 = load float, float* %bisect, align 4, !dbg !4320
  %sub66 = fsub float %conv65, %47, !dbg !4321
  %conv67 = fpext float %sub66 to double, !dbg !4319
  %add68 = fadd double %conv67, 5.000000e-01, !dbg !4322
  %mul69 = fmul double %conv63, %add68, !dbg !4323
  %conv70 = fptrunc double %mul69 to float, !dbg !4315
  %call71 = call float @GetResizeFilterWeight(%struct._ResizeFilter* %43, float %conv70), !dbg !4324
  %48 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4325
  %49 = load i64, i64* %n, align 8, !dbg !4326
  %arrayidx72 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %48, i64 %49, !dbg !4325
  %weight = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx72, i32 0, i32 0, !dbg !4327
  store float %call71, float* %weight, align 8, !dbg !4328
  %50 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4329
  %51 = load i64, i64* %n, align 8, !dbg !4330
  %arrayidx73 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %50, i64 %51, !dbg !4329
  %weight74 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx73, i32 0, i32 0, !dbg !4331
  %52 = load float, float* %weight74, align 8, !dbg !4331
  %53 = load float, float* %density, align 4, !dbg !4332
  %add75 = fadd float %53, %52, !dbg !4332
  store float %add75, float* %density, align 4, !dbg !4332
  br label %for.inc, !dbg !4333

for.inc:                                          ; preds = %for.body60
  %54 = load i64, i64* %n, align 8, !dbg !4334
  %inc = add nsw i64 %54, 1, !dbg !4334
  store i64 %inc, i64* %n, align 8, !dbg !4334
  br label %for.cond56, !dbg !4335, !llvm.loop !4336

for.end:                                          ; preds = %for.cond56
  %55 = load float, float* %density, align 4, !dbg !4338
  %conv76 = fpext float %55 to double, !dbg !4338
  %cmp77 = fcmp une double %conv76, 0.000000e+00, !dbg !4340
  br i1 %cmp77, label %land.lhs.true, label %if.end96, !dbg !4341

land.lhs.true:                                    ; preds = %for.end
  %56 = load float, float* %density, align 4, !dbg !4342
  %conv79 = fpext float %56 to double, !dbg !4342
  %cmp80 = fcmp une double %conv79, 1.000000e+00, !dbg !4343
  br i1 %cmp80, label %if.then82, label %if.end96, !dbg !4344

if.then82:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4345, metadata !DIExpression()), !dbg !4347
  %57 = load float, float* %density, align 4, !dbg !4348
  %conv83 = fpext float %57 to double, !dbg !4348
  %call84 = call double @PerceptibleReciprocal(double %conv83), !dbg !4349
  %conv85 = fptrunc double %call84 to float, !dbg !4349
  store float %conv85, float* %density, align 4, !dbg !4350
  store i64 0, i64* %i, align 8, !dbg !4351
  br label %for.cond86, !dbg !4353

for.cond86:                                       ; preds = %for.inc93, %if.then82
  %58 = load i64, i64* %i, align 8, !dbg !4354
  %59 = load i64, i64* %n, align 8, !dbg !4356
  %cmp87 = icmp slt i64 %58, %59, !dbg !4357
  br i1 %cmp87, label %for.body89, label %for.end95, !dbg !4358

for.body89:                                       ; preds = %for.cond86
  %60 = load float, float* %density, align 4, !dbg !4359
  %61 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4360
  %62 = load i64, i64* %i, align 8, !dbg !4361
  %arrayidx90 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %61, i64 %62, !dbg !4360
  %weight91 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx90, i32 0, i32 0, !dbg !4362
  %63 = load float, float* %weight91, align 8, !dbg !4363
  %mul92 = fmul float %63, %60, !dbg !4363
  store float %mul92, float* %weight91, align 8, !dbg !4363
  br label %for.inc93, !dbg !4360

for.inc93:                                        ; preds = %for.body89
  %64 = load i64, i64* %i, align 8, !dbg !4364
  %inc94 = add nsw i64 %64, 1, !dbg !4364
  store i64 %inc94, i64* %i, align 8, !dbg !4364
  br label %for.cond86, !dbg !4365, !llvm.loop !4366

for.end95:                                        ; preds = %for.cond86
  br label %if.end96, !dbg !4368

if.end96:                                         ; preds = %for.end95, %land.lhs.true, %for.end
  %65 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4369
  %66 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4370
  %arrayidx97 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %66, i64 0, !dbg !4370
  %pixel98 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx97, i32 0, i32 1, !dbg !4371
  %67 = load i64, i64* %pixel98, align 8, !dbg !4371
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4372
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 7, !dbg !4373
  %69 = load i64, i64* %columns, align 8, !dbg !4373
  %70 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4374
  %71 = load i64, i64* %n, align 8, !dbg !4375
  %sub99 = sub nsw i64 %71, 1, !dbg !4376
  %arrayidx100 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %70, i64 %sub99, !dbg !4374
  %pixel101 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx100, i32 0, i32 1, !dbg !4377
  %72 = load i64, i64* %pixel101, align 8, !dbg !4377
  %73 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4378
  %arrayidx102 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %73, i64 0, !dbg !4378
  %pixel103 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx102, i32 0, i32 1, !dbg !4379
  %74 = load i64, i64* %pixel103, align 8, !dbg !4379
  %sub104 = sub nsw i64 %72, %74, !dbg !4380
  %add105 = add nsw i64 %sub104, 1, !dbg !4381
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4382
  %call106 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %65, i64 0, i64 %67, i64 %69, i64 %add105, %struct._ExceptionInfo* %75), !dbg !4383
  store %struct._PixelPacket* %call106, %struct._PixelPacket** %p, align 8, !dbg !4384
  %76 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4385
  %77 = load i64, i64* %y, align 8, !dbg !4386
  %78 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4387
  %columns107 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 7, !dbg !4388
  %79 = load i64, i64* %columns107, align 8, !dbg !4388
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4389
  %call108 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %76, i64 0, i64 %77, i64 %79, i64 1, %struct._ExceptionInfo* %80), !dbg !4390
  store %struct._PixelPacket* %call108, %struct._PixelPacket** %q, align 8, !dbg !4391
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4392
  %cmp109 = icmp eq %struct._PixelPacket* %81, null, !dbg !4394
  br i1 %cmp109, label %if.then113, label %lor.lhs.false, !dbg !4395

lor.lhs.false:                                    ; preds = %if.end96
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4396
  %cmp111 = icmp eq %struct._PixelPacket* %82, null, !dbg !4397
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !4398

if.then113:                                       ; preds = %lor.lhs.false, %if.end96
  store i32 0, i32* %status, align 4, !dbg !4399
  br label %for.inc428, !dbg !4401

if.end114:                                        ; preds = %lor.lhs.false
  %83 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4402
  %call115 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %83), !dbg !4403
  store i16* %call115, i16** %indexes, align 8, !dbg !4404
  %84 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4405
  %call116 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %84), !dbg !4406
  store i16* %call116, i16** %resize_indexes, align 8, !dbg !4407
  store i64 0, i64* %x, align 8, !dbg !4408
  br label %for.cond117, !dbg !4410

for.cond117:                                      ; preds = %for.inc410, %if.end114
  %85 = load i64, i64* %x, align 8, !dbg !4411
  %86 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4413
  %columns118 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 7, !dbg !4414
  %87 = load i64, i64* %columns118, align 8, !dbg !4414
  %cmp119 = icmp slt i64 %85, %87, !dbg !4415
  br i1 %cmp119, label %for.body121, label %for.end412, !dbg !4416

for.body121:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel122, metadata !4417, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !4420, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.declare(metadata i64* %i123, metadata !4422, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4424, metadata !DIExpression()), !dbg !4425
  %88 = bitcast %struct._MagickPixelPacket* %pixel122 to i8*, !dbg !4426
  %89 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !4426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 56, i1 false), !dbg !4426
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4427
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 6, !dbg !4429
  %91 = load i32, i32* %matte, align 8, !dbg !4429
  %cmp124 = icmp eq i32 %91, 0, !dbg !4430
  br i1 %cmp124, label %if.then126, label %if.else, !dbg !4431

if.then126:                                       ; preds = %for.body121
  store i64 0, i64* %i123, align 8, !dbg !4432
  br label %for.cond127, !dbg !4435

for.cond127:                                      ; preds = %for.inc164, %if.then126
  %92 = load i64, i64* %i123, align 8, !dbg !4436
  %93 = load i64, i64* %n, align 8, !dbg !4438
  %cmp128 = icmp slt i64 %92, %93, !dbg !4439
  br i1 %cmp128, label %for.body130, label %for.end166, !dbg !4440

for.body130:                                      ; preds = %for.cond127
  %94 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4441
  %95 = load i64, i64* %i123, align 8, !dbg !4443
  %arrayidx131 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %94, i64 %95, !dbg !4441
  %pixel132 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx131, i32 0, i32 1, !dbg !4444
  %96 = load i64, i64* %pixel132, align 8, !dbg !4444
  %97 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4445
  %arrayidx133 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %97, i64 0, !dbg !4445
  %pixel134 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx133, i32 0, i32 1, !dbg !4446
  %98 = load i64, i64* %pixel134, align 8, !dbg !4446
  %sub135 = sub nsw i64 %96, %98, !dbg !4447
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4448
  %columns136 = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 7, !dbg !4449
  %100 = load i64, i64* %columns136, align 8, !dbg !4449
  %mul137 = mul i64 %sub135, %100, !dbg !4450
  %101 = load i64, i64* %x, align 8, !dbg !4451
  %add138 = add i64 %mul137, %101, !dbg !4452
  store i64 %add138, i64* %j, align 8, !dbg !4453
  %102 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4454
  %103 = load i64, i64* %i123, align 8, !dbg !4455
  %arrayidx139 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %102, i64 %103, !dbg !4454
  %weight140 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx139, i32 0, i32 0, !dbg !4456
  %104 = load float, float* %weight140, align 8, !dbg !4456
  store float %104, float* %alpha, align 4, !dbg !4457
  %105 = load float, float* %alpha, align 4, !dbg !4458
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4459
  %107 = load i64, i64* %j, align 8, !dbg !4459
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i64 %107, !dbg !4459
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr, i32 0, i32 2, !dbg !4459
  %108 = load i16, i16* %red, align 2, !dbg !4459
  %conv141 = zext i16 %108 to i32, !dbg !4459
  %conv142 = sitofp i32 %conv141 to float, !dbg !4459
  %mul143 = fmul float %105, %conv142, !dbg !4460
  %red144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !4461
  %109 = load float, float* %red144, align 8, !dbg !4462
  %add145 = fadd float %109, %mul143, !dbg !4462
  store float %add145, float* %red144, align 8, !dbg !4462
  %110 = load float, float* %alpha, align 4, !dbg !4463
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4464
  %112 = load i64, i64* %j, align 8, !dbg !4464
  %add.ptr146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i64 %112, !dbg !4464
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr146, i32 0, i32 1, !dbg !4464
  %113 = load i16, i16* %green, align 2, !dbg !4464
  %conv147 = zext i16 %113 to i32, !dbg !4464
  %conv148 = sitofp i32 %conv147 to float, !dbg !4464
  %mul149 = fmul float %110, %conv148, !dbg !4465
  %green150 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !4466
  %114 = load float, float* %green150, align 4, !dbg !4467
  %add151 = fadd float %114, %mul149, !dbg !4467
  store float %add151, float* %green150, align 4, !dbg !4467
  %115 = load float, float* %alpha, align 4, !dbg !4468
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4469
  %117 = load i64, i64* %j, align 8, !dbg !4469
  %add.ptr152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i64 %117, !dbg !4469
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr152, i32 0, i32 0, !dbg !4469
  %118 = load i16, i16* %blue, align 2, !dbg !4469
  %conv153 = zext i16 %118 to i32, !dbg !4469
  %conv154 = sitofp i32 %conv153 to float, !dbg !4469
  %mul155 = fmul float %115, %conv154, !dbg !4470
  %blue156 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !4471
  %119 = load float, float* %blue156, align 8, !dbg !4472
  %add157 = fadd float %119, %mul155, !dbg !4472
  store float %add157, float* %blue156, align 8, !dbg !4472
  %120 = load float, float* %alpha, align 4, !dbg !4473
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4474
  %122 = load i64, i64* %j, align 8, !dbg !4474
  %add.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i64 %122, !dbg !4474
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr158, i32 0, i32 3, !dbg !4474
  %123 = load i16, i16* %opacity, align 2, !dbg !4474
  %conv159 = zext i16 %123 to i32, !dbg !4474
  %conv160 = sitofp i32 %conv159 to float, !dbg !4474
  %mul161 = fmul float %120, %conv160, !dbg !4475
  %opacity162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !4476
  %124 = load float, float* %opacity162, align 4, !dbg !4477
  %add163 = fadd float %124, %mul161, !dbg !4477
  store float %add163, float* %opacity162, align 4, !dbg !4477
  br label %for.inc164, !dbg !4478

for.inc164:                                       ; preds = %for.body130
  %125 = load i64, i64* %i123, align 8, !dbg !4479
  %inc165 = add nsw i64 %125, 1, !dbg !4479
  store i64 %inc165, i64* %i123, align 8, !dbg !4479
  br label %for.cond127, !dbg !4480, !llvm.loop !4481

for.end166:                                       ; preds = %for.cond127
  %red167 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !4483
  %126 = load float, float* %red167, align 8, !dbg !4483
  %call168 = call zeroext i16 @ClampToQuantum(float %126), !dbg !4483
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4483
  %red169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 2, !dbg !4483
  store i16 %call168, i16* %red169, align 2, !dbg !4483
  %green170 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !4484
  %128 = load float, float* %green170, align 4, !dbg !4484
  %call171 = call zeroext i16 @ClampToQuantum(float %128), !dbg !4484
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4484
  %green172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 1, !dbg !4484
  store i16 %call171, i16* %green172, align 2, !dbg !4484
  %blue173 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !4485
  %130 = load float, float* %blue173, align 8, !dbg !4485
  %call174 = call zeroext i16 @ClampToQuantum(float %130), !dbg !4485
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4485
  %blue175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 0, !dbg !4485
  store i16 %call174, i16* %blue175, align 2, !dbg !4485
  %opacity176 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !4486
  %132 = load float, float* %opacity176, align 4, !dbg !4486
  %call177 = call zeroext i16 @ClampToQuantum(float %132), !dbg !4486
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4486
  %opacity178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 3, !dbg !4486
  store i16 %call177, i16* %opacity178, align 2, !dbg !4486
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4487
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %134, i32 0, i32 1, !dbg !4489
  %135 = load i32, i32* %colorspace, align 4, !dbg !4489
  %cmp179 = icmp eq i32 %135, 12, !dbg !4490
  br i1 %cmp179, label %land.lhs.true181, label %if.end223, !dbg !4491

land.lhs.true181:                                 ; preds = %for.end166
  %136 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4492
  %colorspace182 = getelementptr inbounds %struct._Image, %struct._Image* %136, i32 0, i32 1, !dbg !4493
  %137 = load i32, i32* %colorspace182, align 4, !dbg !4493
  %cmp183 = icmp eq i32 %137, 12, !dbg !4494
  br i1 %cmp183, label %if.then185, label %if.end223, !dbg !4495

if.then185:                                       ; preds = %land.lhs.true181
  store i64 0, i64* %i123, align 8, !dbg !4496
  br label %for.cond186, !dbg !4499

for.cond186:                                      ; preds = %for.inc212, %if.then185
  %138 = load i64, i64* %i123, align 8, !dbg !4500
  %139 = load i64, i64* %n, align 8, !dbg !4502
  %cmp187 = icmp slt i64 %138, %139, !dbg !4503
  br i1 %cmp187, label %for.body189, label %for.end214, !dbg !4504

for.body189:                                      ; preds = %for.cond186
  %140 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4505
  %141 = load i64, i64* %i123, align 8, !dbg !4507
  %arrayidx190 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %140, i64 %141, !dbg !4505
  %pixel191 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx190, i32 0, i32 1, !dbg !4508
  %142 = load i64, i64* %pixel191, align 8, !dbg !4508
  %143 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4509
  %arrayidx192 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %143, i64 0, !dbg !4509
  %pixel193 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx192, i32 0, i32 1, !dbg !4510
  %144 = load i64, i64* %pixel193, align 8, !dbg !4510
  %sub194 = sub nsw i64 %142, %144, !dbg !4511
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4512
  %columns195 = getelementptr inbounds %struct._Image, %struct._Image* %145, i32 0, i32 7, !dbg !4513
  %146 = load i64, i64* %columns195, align 8, !dbg !4513
  %mul196 = mul i64 %sub194, %146, !dbg !4514
  %147 = load i64, i64* %x, align 8, !dbg !4515
  %add197 = add i64 %mul196, %147, !dbg !4516
  store i64 %add197, i64* %j, align 8, !dbg !4517
  %148 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4518
  %149 = load i64, i64* %i123, align 8, !dbg !4519
  %arrayidx198 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %148, i64 %149, !dbg !4518
  %weight199 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx198, i32 0, i32 0, !dbg !4520
  %150 = load float, float* %weight199, align 8, !dbg !4520
  store float %150, float* %alpha, align 4, !dbg !4521
  %151 = load float, float* %alpha, align 4, !dbg !4522
  %152 = load i16*, i16** %indexes, align 8, !dbg !4523
  %153 = load i64, i64* %j, align 8, !dbg !4523
  %add.ptr200 = getelementptr inbounds i16, i16* %152, i64 %153, !dbg !4523
  %cmp201 = icmp eq i16* %add.ptr200, null, !dbg !4523
  br i1 %cmp201, label %cond.true203, label %cond.false204, !dbg !4523

cond.true203:                                     ; preds = %for.body189
  br label %cond.end207, !dbg !4523

cond.false204:                                    ; preds = %for.body189
  %154 = load i16*, i16** %indexes, align 8, !dbg !4523
  %155 = load i64, i64* %j, align 8, !dbg !4523
  %add.ptr205 = getelementptr inbounds i16, i16* %154, i64 %155, !dbg !4523
  %156 = load i16, i16* %add.ptr205, align 2, !dbg !4523
  %conv206 = zext i16 %156 to i32, !dbg !4523
  br label %cond.end207, !dbg !4523

cond.end207:                                      ; preds = %cond.false204, %cond.true203
  %cond208 = phi i32 [ 0, %cond.true203 ], [ %conv206, %cond.false204 ], !dbg !4523
  %conv209 = sitofp i32 %cond208 to float, !dbg !4523
  %mul210 = fmul float %151, %conv209, !dbg !4524
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4525
  %157 = load float, float* %index, align 8, !dbg !4526
  %add211 = fadd float %157, %mul210, !dbg !4526
  store float %add211, float* %index, align 8, !dbg !4526
  br label %for.inc212, !dbg !4527

for.inc212:                                       ; preds = %cond.end207
  %158 = load i64, i64* %i123, align 8, !dbg !4528
  %inc213 = add nsw i64 %158, 1, !dbg !4528
  store i64 %inc213, i64* %i123, align 8, !dbg !4528
  br label %for.cond186, !dbg !4529, !llvm.loop !4530

for.end214:                                       ; preds = %for.cond186
  %159 = load i16*, i16** %resize_indexes, align 8, !dbg !4532
  %160 = load i64, i64* %x, align 8, !dbg !4532
  %add.ptr215 = getelementptr inbounds i16, i16* %159, i64 %160, !dbg !4532
  %cmp216 = icmp ne i16* %add.ptr215, null, !dbg !4532
  br i1 %cmp216, label %if.then218, label %if.end222, !dbg !4535

if.then218:                                       ; preds = %for.end214
  %index219 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4532
  %161 = load float, float* %index219, align 8, !dbg !4532
  %call220 = call zeroext i16 @ClampToQuantum(float %161), !dbg !4532
  %162 = load i16*, i16** %resize_indexes, align 8, !dbg !4532
  %163 = load i64, i64* %x, align 8, !dbg !4532
  %add.ptr221 = getelementptr inbounds i16, i16* %162, i64 %163, !dbg !4532
  store i16 %call220, i16* %add.ptr221, align 2, !dbg !4532
  br label %if.end222, !dbg !4532

if.end222:                                        ; preds = %if.then218, %for.end214
  br label %if.end223, !dbg !4536

if.end223:                                        ; preds = %if.end222, %land.lhs.true181, %for.end166
  br label %if.end367, !dbg !4537

if.else:                                          ; preds = %for.body121
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4538, metadata !DIExpression()), !dbg !4540
  store double 0.000000e+00, double* %gamma, align 8, !dbg !4541
  store i64 0, i64* %i123, align 8, !dbg !4542
  br label %for.cond224, !dbg !4544

for.cond224:                                      ; preds = %for.inc279, %if.else
  %164 = load i64, i64* %i123, align 8, !dbg !4545
  %165 = load i64, i64* %n, align 8, !dbg !4547
  %cmp225 = icmp slt i64 %164, %165, !dbg !4548
  br i1 %cmp225, label %for.body227, label %for.end281, !dbg !4549

for.body227:                                      ; preds = %for.cond224
  %166 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4550
  %167 = load i64, i64* %i123, align 8, !dbg !4552
  %arrayidx228 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %166, i64 %167, !dbg !4550
  %pixel229 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx228, i32 0, i32 1, !dbg !4553
  %168 = load i64, i64* %pixel229, align 8, !dbg !4553
  %169 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4554
  %arrayidx230 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %169, i64 0, !dbg !4554
  %pixel231 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx230, i32 0, i32 1, !dbg !4555
  %170 = load i64, i64* %pixel231, align 8, !dbg !4555
  %sub232 = sub nsw i64 %168, %170, !dbg !4556
  %171 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4557
  %columns233 = getelementptr inbounds %struct._Image, %struct._Image* %171, i32 0, i32 7, !dbg !4558
  %172 = load i64, i64* %columns233, align 8, !dbg !4558
  %mul234 = mul i64 %sub232, %172, !dbg !4559
  %173 = load i64, i64* %x, align 8, !dbg !4560
  %add235 = add i64 %mul234, %173, !dbg !4561
  store i64 %add235, i64* %j, align 8, !dbg !4562
  %174 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4563
  %175 = load i64, i64* %i123, align 8, !dbg !4564
  %arrayidx236 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %174, i64 %175, !dbg !4563
  %weight237 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx236, i32 0, i32 0, !dbg !4565
  %176 = load float, float* %weight237, align 8, !dbg !4565
  %conv238 = fpext float %176 to double, !dbg !4563
  %mul239 = fmul double %conv238, 0x3EF0001000100010, !dbg !4566
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4567
  %178 = load i64, i64* %j, align 8, !dbg !4567
  %add.ptr240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i64 %178, !dbg !4567
  %opacity241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr240, i32 0, i32 3, !dbg !4567
  %179 = load i16, i16* %opacity241, align 2, !dbg !4567
  %conv242 = zext i16 %179 to i32, !dbg !4567
  %sub243 = sub nsw i32 65535, %conv242, !dbg !4567
  %conv244 = sitofp i32 %sub243 to double, !dbg !4567
  %mul245 = fmul double %mul239, %conv244, !dbg !4568
  %conv246 = fptrunc double %mul245 to float, !dbg !4563
  store float %conv246, float* %alpha, align 4, !dbg !4569
  %180 = load float, float* %alpha, align 4, !dbg !4570
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4571
  %182 = load i64, i64* %j, align 8, !dbg !4571
  %add.ptr247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i64 %182, !dbg !4571
  %red248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr247, i32 0, i32 2, !dbg !4571
  %183 = load i16, i16* %red248, align 2, !dbg !4571
  %conv249 = zext i16 %183 to i32, !dbg !4571
  %conv250 = sitofp i32 %conv249 to float, !dbg !4571
  %mul251 = fmul float %180, %conv250, !dbg !4572
  %red252 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !4573
  %184 = load float, float* %red252, align 8, !dbg !4574
  %add253 = fadd float %184, %mul251, !dbg !4574
  store float %add253, float* %red252, align 8, !dbg !4574
  %185 = load float, float* %alpha, align 4, !dbg !4575
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4576
  %187 = load i64, i64* %j, align 8, !dbg !4576
  %add.ptr254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i64 %187, !dbg !4576
  %green255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr254, i32 0, i32 1, !dbg !4576
  %188 = load i16, i16* %green255, align 2, !dbg !4576
  %conv256 = zext i16 %188 to i32, !dbg !4576
  %conv257 = sitofp i32 %conv256 to float, !dbg !4576
  %mul258 = fmul float %185, %conv257, !dbg !4577
  %green259 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !4578
  %189 = load float, float* %green259, align 4, !dbg !4579
  %add260 = fadd float %189, %mul258, !dbg !4579
  store float %add260, float* %green259, align 4, !dbg !4579
  %190 = load float, float* %alpha, align 4, !dbg !4580
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4581
  %192 = load i64, i64* %j, align 8, !dbg !4581
  %add.ptr261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i64 %192, !dbg !4581
  %blue262 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr261, i32 0, i32 0, !dbg !4581
  %193 = load i16, i16* %blue262, align 2, !dbg !4581
  %conv263 = zext i16 %193 to i32, !dbg !4581
  %conv264 = sitofp i32 %conv263 to float, !dbg !4581
  %mul265 = fmul float %190, %conv264, !dbg !4582
  %blue266 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !4583
  %194 = load float, float* %blue266, align 8, !dbg !4584
  %add267 = fadd float %194, %mul265, !dbg !4584
  store float %add267, float* %blue266, align 8, !dbg !4584
  %195 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4585
  %196 = load i64, i64* %i123, align 8, !dbg !4586
  %arrayidx268 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %195, i64 %196, !dbg !4585
  %weight269 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx268, i32 0, i32 0, !dbg !4587
  %197 = load float, float* %weight269, align 8, !dbg !4587
  %198 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4588
  %199 = load i64, i64* %j, align 8, !dbg !4588
  %add.ptr270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %198, i64 %199, !dbg !4588
  %opacity271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr270, i32 0, i32 3, !dbg !4588
  %200 = load i16, i16* %opacity271, align 2, !dbg !4588
  %conv272 = zext i16 %200 to i32, !dbg !4588
  %conv273 = sitofp i32 %conv272 to float, !dbg !4588
  %mul274 = fmul float %197, %conv273, !dbg !4589
  %opacity275 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !4590
  %201 = load float, float* %opacity275, align 4, !dbg !4591
  %add276 = fadd float %201, %mul274, !dbg !4591
  store float %add276, float* %opacity275, align 4, !dbg !4591
  %202 = load float, float* %alpha, align 4, !dbg !4592
  %conv277 = fpext float %202 to double, !dbg !4592
  %203 = load double, double* %gamma, align 8, !dbg !4593
  %add278 = fadd double %203, %conv277, !dbg !4593
  store double %add278, double* %gamma, align 8, !dbg !4593
  br label %for.inc279, !dbg !4594

for.inc279:                                       ; preds = %for.body227
  %204 = load i64, i64* %i123, align 8, !dbg !4595
  %inc280 = add nsw i64 %204, 1, !dbg !4595
  store i64 %inc280, i64* %i123, align 8, !dbg !4595
  br label %for.cond224, !dbg !4596, !llvm.loop !4597

for.end281:                                       ; preds = %for.cond224
  %205 = load double, double* %gamma, align 8, !dbg !4599
  %cmp282 = fcmp olt double %205, 0.000000e+00, !dbg !4601
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !4602

if.then284:                                       ; preds = %for.end281
  store double 0.000000e+00, double* %gamma, align 8, !dbg !4603
  br label %if.end285, !dbg !4604

if.end285:                                        ; preds = %if.then284, %for.end281
  %206 = load double, double* %gamma, align 8, !dbg !4605
  %call286 = call double @PerceptibleReciprocal(double %206), !dbg !4606
  store double %call286, double* %gamma, align 8, !dbg !4607
  %207 = load double, double* %gamma, align 8, !dbg !4608
  %red287 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 5, !dbg !4608
  %208 = load float, float* %red287, align 8, !dbg !4608
  %conv288 = fpext float %208 to double, !dbg !4608
  %mul289 = fmul double %207, %conv288, !dbg !4608
  %conv290 = fptrunc double %mul289 to float, !dbg !4608
  %call291 = call zeroext i16 @ClampToQuantum(float %conv290), !dbg !4608
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4608
  %red292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %209, i32 0, i32 2, !dbg !4608
  store i16 %call291, i16* %red292, align 2, !dbg !4608
  %210 = load double, double* %gamma, align 8, !dbg !4609
  %green293 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 6, !dbg !4609
  %211 = load float, float* %green293, align 4, !dbg !4609
  %conv294 = fpext float %211 to double, !dbg !4609
  %mul295 = fmul double %210, %conv294, !dbg !4609
  %conv296 = fptrunc double %mul295 to float, !dbg !4609
  %call297 = call zeroext i16 @ClampToQuantum(float %conv296), !dbg !4609
  %212 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4609
  %green298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %212, i32 0, i32 1, !dbg !4609
  store i16 %call297, i16* %green298, align 2, !dbg !4609
  %213 = load double, double* %gamma, align 8, !dbg !4610
  %blue299 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 7, !dbg !4610
  %214 = load float, float* %blue299, align 8, !dbg !4610
  %conv300 = fpext float %214 to double, !dbg !4610
  %mul301 = fmul double %213, %conv300, !dbg !4610
  %conv302 = fptrunc double %mul301 to float, !dbg !4610
  %call303 = call zeroext i16 @ClampToQuantum(float %conv302), !dbg !4610
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4610
  %blue304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i32 0, i32 0, !dbg !4610
  store i16 %call303, i16* %blue304, align 2, !dbg !4610
  %opacity305 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 8, !dbg !4611
  %216 = load float, float* %opacity305, align 4, !dbg !4611
  %call306 = call zeroext i16 @ClampToQuantum(float %216), !dbg !4611
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4611
  %opacity307 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 3, !dbg !4611
  store i16 %call306, i16* %opacity307, align 2, !dbg !4611
  %218 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4612
  %colorspace308 = getelementptr inbounds %struct._Image, %struct._Image* %218, i32 0, i32 1, !dbg !4614
  %219 = load i32, i32* %colorspace308, align 4, !dbg !4614
  %cmp309 = icmp eq i32 %219, 12, !dbg !4615
  br i1 %cmp309, label %land.lhs.true311, label %if.end366, !dbg !4616

land.lhs.true311:                                 ; preds = %if.end285
  %220 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4617
  %colorspace312 = getelementptr inbounds %struct._Image, %struct._Image* %220, i32 0, i32 1, !dbg !4618
  %221 = load i32, i32* %colorspace312, align 4, !dbg !4618
  %cmp313 = icmp eq i32 %221, 12, !dbg !4619
  br i1 %cmp313, label %if.then315, label %if.end366, !dbg !4620

if.then315:                                       ; preds = %land.lhs.true311
  store i64 0, i64* %i123, align 8, !dbg !4621
  br label %for.cond316, !dbg !4624

for.cond316:                                      ; preds = %for.inc352, %if.then315
  %222 = load i64, i64* %i123, align 8, !dbg !4625
  %223 = load i64, i64* %n, align 8, !dbg !4627
  %cmp317 = icmp slt i64 %222, %223, !dbg !4628
  br i1 %cmp317, label %for.body319, label %for.end354, !dbg !4629

for.body319:                                      ; preds = %for.cond316
  %224 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4630
  %225 = load i64, i64* %i123, align 8, !dbg !4632
  %arrayidx320 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %224, i64 %225, !dbg !4630
  %pixel321 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx320, i32 0, i32 1, !dbg !4633
  %226 = load i64, i64* %pixel321, align 8, !dbg !4633
  %227 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4634
  %arrayidx322 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %227, i64 0, !dbg !4634
  %pixel323 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx322, i32 0, i32 1, !dbg !4635
  %228 = load i64, i64* %pixel323, align 8, !dbg !4635
  %sub324 = sub nsw i64 %226, %228, !dbg !4636
  %229 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4637
  %columns325 = getelementptr inbounds %struct._Image, %struct._Image* %229, i32 0, i32 7, !dbg !4638
  %230 = load i64, i64* %columns325, align 8, !dbg !4638
  %mul326 = mul i64 %sub324, %230, !dbg !4639
  %231 = load i64, i64* %x, align 8, !dbg !4640
  %add327 = add i64 %mul326, %231, !dbg !4641
  store i64 %add327, i64* %j, align 8, !dbg !4642
  %232 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4643
  %233 = load i64, i64* %i123, align 8, !dbg !4644
  %arrayidx328 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %232, i64 %233, !dbg !4643
  %weight329 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx328, i32 0, i32 0, !dbg !4645
  %234 = load float, float* %weight329, align 8, !dbg !4645
  %conv330 = fpext float %234 to double, !dbg !4643
  %mul331 = fmul double %conv330, 0x3EF0001000100010, !dbg !4646
  %235 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4647
  %236 = load i64, i64* %j, align 8, !dbg !4647
  %add.ptr332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %235, i64 %236, !dbg !4647
  %opacity333 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr332, i32 0, i32 3, !dbg !4647
  %237 = load i16, i16* %opacity333, align 2, !dbg !4647
  %conv334 = zext i16 %237 to i32, !dbg !4647
  %sub335 = sub nsw i32 65535, %conv334, !dbg !4647
  %conv336 = sitofp i32 %sub335 to double, !dbg !4647
  %mul337 = fmul double %mul331, %conv336, !dbg !4648
  %conv338 = fptrunc double %mul337 to float, !dbg !4643
  store float %conv338, float* %alpha, align 4, !dbg !4649
  %238 = load float, float* %alpha, align 4, !dbg !4650
  %239 = load i16*, i16** %indexes, align 8, !dbg !4651
  %240 = load i64, i64* %j, align 8, !dbg !4651
  %add.ptr339 = getelementptr inbounds i16, i16* %239, i64 %240, !dbg !4651
  %cmp340 = icmp eq i16* %add.ptr339, null, !dbg !4651
  br i1 %cmp340, label %cond.true342, label %cond.false343, !dbg !4651

cond.true342:                                     ; preds = %for.body319
  br label %cond.end346, !dbg !4651

cond.false343:                                    ; preds = %for.body319
  %241 = load i16*, i16** %indexes, align 8, !dbg !4651
  %242 = load i64, i64* %j, align 8, !dbg !4651
  %add.ptr344 = getelementptr inbounds i16, i16* %241, i64 %242, !dbg !4651
  %243 = load i16, i16* %add.ptr344, align 2, !dbg !4651
  %conv345 = zext i16 %243 to i32, !dbg !4651
  br label %cond.end346, !dbg !4651

cond.end346:                                      ; preds = %cond.false343, %cond.true342
  %cond347 = phi i32 [ 0, %cond.true342 ], [ %conv345, %cond.false343 ], !dbg !4651
  %conv348 = sitofp i32 %cond347 to float, !dbg !4651
  %mul349 = fmul float %238, %conv348, !dbg !4652
  %index350 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4653
  %244 = load float, float* %index350, align 8, !dbg !4654
  %add351 = fadd float %244, %mul349, !dbg !4654
  store float %add351, float* %index350, align 8, !dbg !4654
  br label %for.inc352, !dbg !4655

for.inc352:                                       ; preds = %cond.end346
  %245 = load i64, i64* %i123, align 8, !dbg !4656
  %inc353 = add nsw i64 %245, 1, !dbg !4656
  store i64 %inc353, i64* %i123, align 8, !dbg !4656
  br label %for.cond316, !dbg !4657, !llvm.loop !4658

for.end354:                                       ; preds = %for.cond316
  %246 = load i16*, i16** %resize_indexes, align 8, !dbg !4660
  %247 = load i64, i64* %x, align 8, !dbg !4660
  %add.ptr355 = getelementptr inbounds i16, i16* %246, i64 %247, !dbg !4660
  %cmp356 = icmp ne i16* %add.ptr355, null, !dbg !4660
  br i1 %cmp356, label %if.then358, label %if.end365, !dbg !4663

if.then358:                                       ; preds = %for.end354
  %248 = load double, double* %gamma, align 8, !dbg !4660
  %index359 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel122, i32 0, i32 9, !dbg !4660
  %249 = load float, float* %index359, align 8, !dbg !4660
  %conv360 = fpext float %249 to double, !dbg !4660
  %mul361 = fmul double %248, %conv360, !dbg !4660
  %conv362 = fptrunc double %mul361 to float, !dbg !4660
  %call363 = call zeroext i16 @ClampToQuantum(float %conv362), !dbg !4660
  %250 = load i16*, i16** %resize_indexes, align 8, !dbg !4660
  %251 = load i64, i64* %x, align 8, !dbg !4660
  %add.ptr364 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !4660
  store i16 %call363, i16* %add.ptr364, align 2, !dbg !4660
  br label %if.end365, !dbg !4660

if.end365:                                        ; preds = %if.then358, %for.end354
  br label %if.end366, !dbg !4664

if.end366:                                        ; preds = %if.end365, %land.lhs.true311, %if.end285
  br label %if.end367

if.end367:                                        ; preds = %if.end366, %if.end223
  %252 = load %struct._Image*, %struct._Image** %resize_image.addr, align 8, !dbg !4665
  %storage_class368 = getelementptr inbounds %struct._Image, %struct._Image* %252, i32 0, i32 0, !dbg !4667
  %253 = load i32, i32* %storage_class368, align 8, !dbg !4667
  %cmp369 = icmp eq i32 %253, 2, !dbg !4668
  br i1 %cmp369, label %land.lhs.true371, label %if.end409, !dbg !4669

land.lhs.true371:                                 ; preds = %if.end367
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4670
  %storage_class372 = getelementptr inbounds %struct._Image, %struct._Image* %254, i32 0, i32 0, !dbg !4671
  %255 = load i32, i32* %storage_class372, align 8, !dbg !4671
  %cmp373 = icmp eq i32 %255, 2, !dbg !4672
  br i1 %cmp373, label %if.then375, label %if.end409, !dbg !4673

if.then375:                                       ; preds = %land.lhs.true371
  %256 = load float, float* %bisect, align 4, !dbg !4674
  %conv376 = fpext float %256 to double, !dbg !4674
  %257 = load i64, i64* %start, align 8, !dbg !4676
  %conv377 = sitofp i64 %257 to double, !dbg !4677
  %call378 = call double @MagickMax(double %conv376, double %conv377), !dbg !4678
  %258 = load i64, i64* %stop, align 8, !dbg !4679
  %conv379 = sitofp i64 %258 to double, !dbg !4680
  %sub380 = fsub double %conv379, 1.000000e+00, !dbg !4681
  %call381 = call double @MagickMin(double %call378, double %sub380), !dbg !4682
  %add382 = fadd double %call381, 5.000000e-01, !dbg !4683
  %conv383 = fptosi double %add382 to i64, !dbg !4684
  store i64 %conv383, i64* %i123, align 8, !dbg !4685
  %259 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4686
  %260 = load i64, i64* %i123, align 8, !dbg !4687
  %261 = load i64, i64* %start, align 8, !dbg !4688
  %sub384 = sub nsw i64 %260, %261, !dbg !4689
  %arrayidx385 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %259, i64 %sub384, !dbg !4686
  %pixel386 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx385, i32 0, i32 1, !dbg !4690
  %262 = load i64, i64* %pixel386, align 8, !dbg !4690
  %263 = load %struct._ContributionInfo*, %struct._ContributionInfo** %contribution, align 8, !dbg !4691
  %arrayidx387 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %263, i64 0, !dbg !4691
  %pixel388 = getelementptr inbounds %struct._ContributionInfo, %struct._ContributionInfo* %arrayidx387, i32 0, i32 1, !dbg !4692
  %264 = load i64, i64* %pixel388, align 8, !dbg !4692
  %sub389 = sub nsw i64 %262, %264, !dbg !4693
  %265 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4694
  %columns390 = getelementptr inbounds %struct._Image, %struct._Image* %265, i32 0, i32 7, !dbg !4695
  %266 = load i64, i64* %columns390, align 8, !dbg !4695
  %mul391 = mul i64 %sub389, %266, !dbg !4696
  %267 = load i64, i64* %x, align 8, !dbg !4697
  %add392 = add i64 %mul391, %267, !dbg !4698
  store i64 %add392, i64* %j, align 8, !dbg !4699
  %268 = load i16*, i16** %resize_indexes, align 8, !dbg !4700
  %269 = load i64, i64* %x, align 8, !dbg !4700
  %add.ptr393 = getelementptr inbounds i16, i16* %268, i64 %269, !dbg !4700
  %cmp394 = icmp ne i16* %add.ptr393, null, !dbg !4700
  br i1 %cmp394, label %if.then396, label %if.end408, !dbg !4703

if.then396:                                       ; preds = %if.then375
  %270 = load i16*, i16** %indexes, align 8, !dbg !4700
  %271 = load i64, i64* %j, align 8, !dbg !4700
  %add.ptr397 = getelementptr inbounds i16, i16* %270, i64 %271, !dbg !4700
  %cmp398 = icmp eq i16* %add.ptr397, null, !dbg !4700
  br i1 %cmp398, label %cond.true400, label %cond.false401, !dbg !4700

cond.true400:                                     ; preds = %if.then396
  br label %cond.end404, !dbg !4700

cond.false401:                                    ; preds = %if.then396
  %272 = load i16*, i16** %indexes, align 8, !dbg !4700
  %273 = load i64, i64* %j, align 8, !dbg !4700
  %add.ptr402 = getelementptr inbounds i16, i16* %272, i64 %273, !dbg !4700
  %274 = load i16, i16* %add.ptr402, align 2, !dbg !4700
  %conv403 = zext i16 %274 to i32, !dbg !4700
  br label %cond.end404, !dbg !4700

cond.end404:                                      ; preds = %cond.false401, %cond.true400
  %cond405 = phi i32 [ 0, %cond.true400 ], [ %conv403, %cond.false401 ], !dbg !4700
  %conv406 = trunc i32 %cond405 to i16, !dbg !4700
  %275 = load i16*, i16** %resize_indexes, align 8, !dbg !4700
  %276 = load i64, i64* %x, align 8, !dbg !4700
  %add.ptr407 = getelementptr inbounds i16, i16* %275, i64 %276, !dbg !4700
  store i16 %conv406, i16* %add.ptr407, align 2, !dbg !4700
  br label %if.end408, !dbg !4700

if.end408:                                        ; preds = %cond.end404, %if.then375
  br label %if.end409, !dbg !4704

if.end409:                                        ; preds = %if.end408, %land.lhs.true371, %if.end367
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4705
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 1, !dbg !4705
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !4705
  br label %for.inc410, !dbg !4706

for.inc410:                                       ; preds = %if.end409
  %278 = load i64, i64* %x, align 8, !dbg !4707
  %inc411 = add nsw i64 %278, 1, !dbg !4707
  store i64 %inc411, i64* %x, align 8, !dbg !4707
  br label %for.cond117, !dbg !4708, !llvm.loop !4709

for.end412:                                       ; preds = %for.cond117
  %279 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4711
  %280 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4713
  %call413 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %279, %struct._ExceptionInfo* %280), !dbg !4714
  %cmp414 = icmp eq i32 %call413, 0, !dbg !4715
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !4716

if.then416:                                       ; preds = %for.end412
  store i32 0, i32* %status, align 4, !dbg !4717
  br label %if.end417, !dbg !4718

if.end417:                                        ; preds = %if.then416, %for.end412
  %281 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4719
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %281, i32 0, i32 47, !dbg !4721
  %282 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4721
  %cmp418 = icmp ne i32 (i8*, i64, i64, i8*)* %282, null, !dbg !4722
  br i1 %cmp418, label %if.then420, label %if.end427, !dbg !4723

if.then420:                                       ; preds = %if.end417
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !4724, metadata !DIExpression()), !dbg !4726
  %283 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4727
  %284 = load i64*, i64** %offset.addr, align 8, !dbg !4728
  %285 = load i64, i64* %284, align 8, !dbg !4729
  %inc421 = add nsw i64 %285, 1, !dbg !4729
  store i64 %inc421, i64* %284, align 8, !dbg !4729
  %286 = load i64, i64* %span.addr, align 8, !dbg !4730
  %call422 = call i32 @SetImageProgress(%struct._Image* %283, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i64 %285, i64 %286), !dbg !4731
  store i32 %call422, i32* %proceed, align 4, !dbg !4732
  %287 = load i32, i32* %proceed, align 4, !dbg !4733
  %cmp423 = icmp eq i32 %287, 0, !dbg !4735
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !4736

if.then425:                                       ; preds = %if.then420
  store i32 0, i32* %status, align 4, !dbg !4737
  br label %if.end426, !dbg !4738

if.end426:                                        ; preds = %if.then425, %if.then420
  br label %if.end427, !dbg !4739

if.end427:                                        ; preds = %if.end426, %if.end417
  br label %for.inc428, !dbg !4740

for.inc428:                                       ; preds = %if.end427, %if.then113, %if.then36
  %288 = load i64, i64* %y, align 8, !dbg !4741
  %inc429 = add nsw i64 %288, 1, !dbg !4741
  store i64 %inc429, i64* %y, align 8, !dbg !4741
  br label %for.cond, !dbg !4742, !llvm.loop !4743

for.end430:                                       ; preds = %for.cond
  %289 = load %struct._CacheView*, %struct._CacheView** %resize_view, align 8, !dbg !4745
  %call431 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %289), !dbg !4746
  store %struct._CacheView* %call431, %struct._CacheView** %resize_view, align 8, !dbg !4747
  %290 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4748
  %call432 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %290), !dbg !4749
  store %struct._CacheView* %call432, %struct._CacheView** %image_view, align 8, !dbg !4750
  %291 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contributions, align 8, !dbg !4751
  %call433 = call %struct._ContributionInfo** @DestroyContributionThreadSet(%struct._ContributionInfo** %291), !dbg !4752
  store %struct._ContributionInfo** %call433, %struct._ContributionInfo*** %contributions, align 8, !dbg !4753
  %292 = load i32, i32* %status, align 4, !dbg !4754
  store i32 %292, i32* %retval, align 4, !dbg !4755
  br label %return, !dbg !4755

return:                                           ; preds = %for.end430, %if.then22, %if.then
  %293 = load i32, i32* %retval, align 4, !dbg !4756
  ret i32 %293, !dbg !4756
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SampleImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !4757 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %sample_view = alloca %struct._CacheView*, align 8
  %sample_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %x = alloca i64, align 8
  %x_offset = alloca i64*, align 8
  %y = alloca i64, align 8
  %sample_offset = alloca %struct._PointInfo, align 8
  %value = alloca i8*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %flags = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %sample_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x60 = alloca i64, align 8
  %y_offset = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !4760, metadata !DIExpression()), !dbg !4761
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !4762, metadata !DIExpression()), !dbg !4763
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata %struct._CacheView** %sample_view, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata %struct._Image** %sample_image, metadata !4770, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4772, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !4774, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4776, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.declare(metadata i64** %x_offset, metadata !4778, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4780, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %sample_offset, metadata !4782, metadata !DIExpression()), !dbg !4783
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4784
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4786
  %1 = load i32, i32* %debug, align 8, !dbg !4786
  %cmp = icmp ne i32 %1, 0, !dbg !4787
  br i1 %cmp, label %if.then, label %if.end, !dbg !4788

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4789
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4790
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4789
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3130, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4791
  br label %if.end, !dbg !4792

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !4793
  %cmp1 = icmp eq i64 %3, 0, !dbg !4795
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4796

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %rows.addr, align 8, !dbg !4797
  %cmp2 = icmp eq i64 %4, 0, !dbg !4798
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !4799

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4800
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4800
  %filename4 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 53, !dbg !4800
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename4, i64 0, i64 0, !dbg !4800
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3134, i32 465, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay5), !dbg !4800
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4800
  br label %return, !dbg !4800

if.end7:                                          ; preds = %lor.lhs.false
  %7 = load i64, i64* %columns.addr, align 8, !dbg !4802
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4804
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !4805
  %9 = load i64, i64* %columns8, align 8, !dbg !4805
  %cmp9 = icmp eq i64 %7, %9, !dbg !4806
  br i1 %cmp9, label %land.lhs.true, label %if.end14, !dbg !4807

land.lhs.true:                                    ; preds = %if.end7
  %10 = load i64, i64* %rows.addr, align 8, !dbg !4808
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4809
  %rows10 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !4810
  %12 = load i64, i64* %rows10, align 8, !dbg !4810
  %cmp11 = icmp eq i64 %10, %12, !dbg !4811
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !4812

if.then12:                                        ; preds = %land.lhs.true
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4813
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4814
  %call13 = call %struct._Image* @CloneImage(%struct._Image* %13, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %14), !dbg !4815
  store %struct._Image* %call13, %struct._Image** %retval, align 8, !dbg !4816
  br label %return, !dbg !4816

if.end14:                                         ; preds = %land.lhs.true, %if.end7
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4817
  %16 = load i64, i64* %columns.addr, align 8, !dbg !4818
  %17 = load i64, i64* %rows.addr, align 8, !dbg !4819
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4820
  %call15 = call %struct._Image* @CloneImage(%struct._Image* %15, i64 %16, i64 %17, i32 1, %struct._ExceptionInfo* %18), !dbg !4821
  store %struct._Image* %call15, %struct._Image** %sample_image, align 8, !dbg !4822
  %19 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4823
  %cmp16 = icmp eq %struct._Image* %19, null, !dbg !4825
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4826

if.then17:                                        ; preds = %if.end14
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4827
  br label %return, !dbg !4827

if.end18:                                         ; preds = %if.end14
  %y19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 1, !dbg !4828
  store double 0x3FDFFFFFFFFFFFEE, double* %y19, align 8, !dbg !4829
  %x20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 0, !dbg !4830
  store double 0x3FDFFFFFFFFFFFEE, double* %x20, align 8, !dbg !4831
  call void @llvm.dbg.declare(metadata i8** %value, metadata !4832, metadata !DIExpression()), !dbg !4834
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4835
  %call21 = call i8* @GetImageArtifact(%struct._Image* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0)), !dbg !4836
  store i8* %call21, i8** %value, align 8, !dbg !4837
  %21 = load i8*, i8** %value, align 8, !dbg !4838
  %cmp22 = icmp ne i8* %21, null, !dbg !4840
  br i1 %cmp22, label %if.then23, label %if.end34, !dbg !4841

if.then23:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !4842, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4853, metadata !DIExpression()), !dbg !4854
  %22 = load i8*, i8** %value, align 8, !dbg !4855
  %call24 = call i32 @ParseGeometry(i8* %22, %struct._GeometryInfo* %geometry_info), !dbg !4856
  %23 = load i8*, i8** %value, align 8, !dbg !4857
  %call25 = call i32 @ParseGeometry(i8* %23, %struct._GeometryInfo* %geometry_info), !dbg !4858
  store i32 %call25, i32* %flags, align 4, !dbg !4859
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !4860
  %24 = load double, double* %rho, align 8, !dbg !4860
  %div = fdiv double %24, 1.000000e+02, !dbg !4861
  %sub = fsub double %div, 1.000000e-15, !dbg !4862
  %y26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 1, !dbg !4863
  store double %sub, double* %y26, align 8, !dbg !4864
  %x27 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 0, !dbg !4865
  store double %sub, double* %x27, align 8, !dbg !4866
  %25 = load i32, i32* %flags, align 4, !dbg !4867
  %and = and i32 %25, 8, !dbg !4869
  %cmp28 = icmp ne i32 %and, 0, !dbg !4870
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !4871

if.then29:                                        ; preds = %if.then23
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !4872
  %26 = load double, double* %sigma, align 8, !dbg !4872
  %div30 = fdiv double %26, 1.000000e+02, !dbg !4873
  %sub31 = fsub double %div30, 1.000000e-15, !dbg !4874
  %y32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 1, !dbg !4875
  store double %sub31, double* %y32, align 8, !dbg !4876
  br label %if.end33, !dbg !4877

if.end33:                                         ; preds = %if.then29, %if.then23
  br label %if.end34, !dbg !4878

if.end34:                                         ; preds = %if.end33, %if.end18
  %27 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4879
  %columns35 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 7, !dbg !4880
  %28 = load i64, i64* %columns35, align 8, !dbg !4880
  %call36 = call i8* @AcquireQuantumMemory(i64 %28, i64 8) #14, !dbg !4881
  %29 = bitcast i8* %call36 to i64*, !dbg !4882
  store i64* %29, i64** %x_offset, align 8, !dbg !4883
  %30 = load i64*, i64** %x_offset, align 8, !dbg !4884
  %cmp37 = icmp eq i64* %30, null, !dbg !4886
  br i1 %cmp37, label %if.then38, label %if.end43, !dbg !4887

if.then38:                                        ; preds = %if.end34
  %31 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4888
  %call39 = call %struct._Image* @DestroyImage(%struct._Image* %31), !dbg !4890
  store %struct._Image* %call39, %struct._Image** %sample_image, align 8, !dbg !4891
  %32 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4892
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4892
  %filename40 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 53, !dbg !4892
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename40, i64 0, i64 0, !dbg !4892
  %call42 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3172, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay41), !dbg !4892
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4892
  br label %return, !dbg !4892

if.end43:                                         ; preds = %if.end34
  store i64 0, i64* %x, align 8, !dbg !4894
  br label %for.cond, !dbg !4896

for.cond:                                         ; preds = %for.inc, %if.end43
  %34 = load i64, i64* %x, align 8, !dbg !4897
  %35 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4899
  %columns44 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !4900
  %36 = load i64, i64* %columns44, align 8, !dbg !4900
  %cmp45 = icmp slt i64 %34, %36, !dbg !4901
  br i1 %cmp45, label %for.body, label %for.end, !dbg !4902

for.body:                                         ; preds = %for.cond
  %37 = load i64, i64* %x, align 8, !dbg !4903
  %conv = sitofp i64 %37 to double, !dbg !4904
  %x46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 0, !dbg !4905
  %38 = load double, double* %x46, align 8, !dbg !4905
  %add = fadd double %conv, %38, !dbg !4906
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4907
  %columns47 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 7, !dbg !4908
  %40 = load i64, i64* %columns47, align 8, !dbg !4908
  %conv48 = uitofp i64 %40 to double, !dbg !4907
  %mul = fmul double %add, %conv48, !dbg !4909
  %41 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4910
  %columns49 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 7, !dbg !4911
  %42 = load i64, i64* %columns49, align 8, !dbg !4911
  %conv50 = uitofp i64 %42 to double, !dbg !4910
  %div51 = fdiv double %mul, %conv50, !dbg !4912
  %conv52 = fptosi double %div51 to i64, !dbg !4913
  %43 = load i64*, i64** %x_offset, align 8, !dbg !4914
  %44 = load i64, i64* %x, align 8, !dbg !4915
  %arrayidx = getelementptr inbounds i64, i64* %43, i64 %44, !dbg !4914
  store i64 %conv52, i64* %arrayidx, align 8, !dbg !4916
  br label %for.inc, !dbg !4914

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %x, align 8, !dbg !4917
  %inc = add nsw i64 %45, 1, !dbg !4917
  store i64 %inc, i64* %x, align 8, !dbg !4917
  br label %for.cond, !dbg !4918, !llvm.loop !4919

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %status, align 4, !dbg !4921
  store i64 0, i64* %progress, align 8, !dbg !4922
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4923
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4924
  %call53 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %46, %struct._ExceptionInfo* %47), !dbg !4925
  store %struct._CacheView* %call53, %struct._CacheView** %image_view, align 8, !dbg !4926
  %48 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4927
  %49 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4928
  %call54 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %48, %struct._ExceptionInfo* %49), !dbg !4929
  store %struct._CacheView* %call54, %struct._CacheView** %sample_view, align 8, !dbg !4930
  store i64 0, i64* %y, align 8, !dbg !4931
  br label %for.cond55, !dbg !4933

for.cond55:                                       ; preds = %for.inc142, %for.end
  %50 = load i64, i64* %y, align 8, !dbg !4934
  %51 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4936
  %rows56 = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 8, !dbg !4937
  %52 = load i64, i64* %rows56, align 8, !dbg !4937
  %cmp57 = icmp slt i64 %50, %52, !dbg !4938
  br i1 %cmp57, label %for.body59, label %for.end144, !dbg !4939

for.body59:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4940, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4943, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata i16** %sample_indexes, metadata !4945, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !4947, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i64* %x60, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.declare(metadata i64* %y_offset, metadata !4951, metadata !DIExpression()), !dbg !4952
  %53 = load i32, i32* %status, align 4, !dbg !4953
  %cmp61 = icmp eq i32 %53, 0, !dbg !4955
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4956

if.then63:                                        ; preds = %for.body59
  br label %for.inc142, !dbg !4957

if.end64:                                         ; preds = %for.body59
  %54 = load i64, i64* %y, align 8, !dbg !4958
  %conv65 = sitofp i64 %54 to double, !dbg !4959
  %y66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %sample_offset, i32 0, i32 1, !dbg !4960
  %55 = load double, double* %y66, align 8, !dbg !4960
  %add67 = fadd double %conv65, %55, !dbg !4961
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4962
  %rows68 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 8, !dbg !4963
  %57 = load i64, i64* %rows68, align 8, !dbg !4963
  %conv69 = uitofp i64 %57 to double, !dbg !4962
  %mul70 = fmul double %add67, %conv69, !dbg !4964
  %58 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4965
  %rows71 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 8, !dbg !4966
  %59 = load i64, i64* %rows71, align 8, !dbg !4966
  %conv72 = uitofp i64 %59 to double, !dbg !4965
  %div73 = fdiv double %mul70, %conv72, !dbg !4967
  %conv74 = fptosi double %div73 to i64, !dbg !4968
  store i64 %conv74, i64* %y_offset, align 8, !dbg !4969
  %60 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4970
  %61 = load i64, i64* %y_offset, align 8, !dbg !4971
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4972
  %columns75 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 7, !dbg !4973
  %63 = load i64, i64* %columns75, align 8, !dbg !4973
  %64 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4974
  %call76 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %60, i64 0, i64 %61, i64 %63, i64 1, %struct._ExceptionInfo* %64), !dbg !4975
  store %struct._PixelPacket* %call76, %struct._PixelPacket** %p, align 8, !dbg !4976
  %65 = load %struct._CacheView*, %struct._CacheView** %sample_view, align 8, !dbg !4977
  %66 = load i64, i64* %y, align 8, !dbg !4978
  %67 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !4979
  %columns77 = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 7, !dbg !4980
  %68 = load i64, i64* %columns77, align 8, !dbg !4980
  %69 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4981
  %call78 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %65, i64 0, i64 %66, i64 %68, i64 1, %struct._ExceptionInfo* %69), !dbg !4982
  store %struct._PixelPacket* %call78, %struct._PixelPacket** %q, align 8, !dbg !4983
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4984
  %cmp79 = icmp eq %struct._PixelPacket* %70, null, !dbg !4986
  br i1 %cmp79, label %if.then84, label %lor.lhs.false81, !dbg !4987

lor.lhs.false81:                                  ; preds = %if.end64
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4988
  %cmp82 = icmp eq %struct._PixelPacket* %71, null, !dbg !4989
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !4990

if.then84:                                        ; preds = %lor.lhs.false81, %if.end64
  store i32 0, i32* %status, align 4, !dbg !4991
  br label %for.inc142, !dbg !4993

if.end85:                                         ; preds = %lor.lhs.false81
  %72 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4994
  %call86 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %72), !dbg !4995
  store i16* %call86, i16** %indexes, align 8, !dbg !4996
  %73 = load %struct._CacheView*, %struct._CacheView** %sample_view, align 8, !dbg !4997
  %call87 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %73), !dbg !4998
  store i16* %call87, i16** %sample_indexes, align 8, !dbg !4999
  store i64 0, i64* %x60, align 8, !dbg !5000
  br label %for.cond88, !dbg !5002

for.cond88:                                       ; preds = %for.inc95, %if.end85
  %74 = load i64, i64* %x60, align 8, !dbg !5003
  %75 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !5005
  %columns89 = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 7, !dbg !5006
  %76 = load i64, i64* %columns89, align 8, !dbg !5006
  %cmp90 = icmp slt i64 %74, %76, !dbg !5007
  br i1 %cmp90, label %for.body92, label %for.end97, !dbg !5008

for.body92:                                       ; preds = %for.cond88
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5009
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 1, !dbg !5009
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !5009
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5010
  %79 = load i64*, i64** %x_offset, align 8, !dbg !5011
  %80 = load i64, i64* %x60, align 8, !dbg !5012
  %arrayidx93 = getelementptr inbounds i64, i64* %79, i64 %80, !dbg !5011
  %81 = load i64, i64* %arrayidx93, align 8, !dbg !5011
  %arrayidx94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i64 %81, !dbg !5010
  %82 = bitcast %struct._PixelPacket* %77 to i8*, !dbg !5010
  %83 = bitcast %struct._PixelPacket* %arrayidx94 to i8*, !dbg !5010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %82, i8* align 2 %83, i64 8, i1 false), !dbg !5010
  br label %for.inc95, !dbg !5013

for.inc95:                                        ; preds = %for.body92
  %84 = load i64, i64* %x60, align 8, !dbg !5014
  %inc96 = add nsw i64 %84, 1, !dbg !5014
  store i64 %inc96, i64* %x60, align 8, !dbg !5014
  br label %for.cond88, !dbg !5015, !llvm.loop !5016

for.end97:                                        ; preds = %for.cond88
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5018
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 0, !dbg !5020
  %86 = load i32, i32* %storage_class, align 8, !dbg !5020
  %cmp98 = icmp eq i32 %86, 2, !dbg !5021
  br i1 %cmp98, label %if.then103, label %lor.lhs.false100, !dbg !5022

lor.lhs.false100:                                 ; preds = %for.end97
  %87 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5023
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %87, i32 0, i32 1, !dbg !5024
  %88 = load i32, i32* %colorspace, align 4, !dbg !5024
  %cmp101 = icmp eq i32 %88, 12, !dbg !5025
  br i1 %cmp101, label %if.then103, label %if.end125, !dbg !5026

if.then103:                                       ; preds = %lor.lhs.false100, %for.end97
  store i64 0, i64* %x60, align 8, !dbg !5027
  br label %for.cond104, !dbg !5029

for.cond104:                                      ; preds = %for.inc122, %if.then103
  %89 = load i64, i64* %x60, align 8, !dbg !5030
  %90 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !5032
  %columns105 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 7, !dbg !5033
  %91 = load i64, i64* %columns105, align 8, !dbg !5033
  %cmp106 = icmp slt i64 %89, %91, !dbg !5034
  br i1 %cmp106, label %for.body108, label %for.end124, !dbg !5035

for.body108:                                      ; preds = %for.cond104
  %92 = load i16*, i16** %sample_indexes, align 8, !dbg !5036
  %93 = load i64, i64* %x60, align 8, !dbg !5036
  %add.ptr = getelementptr inbounds i16, i16* %92, i64 %93, !dbg !5036
  %cmp109 = icmp ne i16* %add.ptr, null, !dbg !5036
  br i1 %cmp109, label %if.then111, label %if.end121, !dbg !5039

if.then111:                                       ; preds = %for.body108
  %94 = load i16*, i16** %indexes, align 8, !dbg !5036
  %95 = load i64*, i64** %x_offset, align 8, !dbg !5036
  %96 = load i64, i64* %x60, align 8, !dbg !5036
  %arrayidx112 = getelementptr inbounds i64, i64* %95, i64 %96, !dbg !5036
  %97 = load i64, i64* %arrayidx112, align 8, !dbg !5036
  %add.ptr113 = getelementptr inbounds i16, i16* %94, i64 %97, !dbg !5036
  %cmp114 = icmp eq i16* %add.ptr113, null, !dbg !5036
  br i1 %cmp114, label %cond.true, label %cond.false, !dbg !5036

cond.true:                                        ; preds = %if.then111
  br label %cond.end, !dbg !5036

cond.false:                                       ; preds = %if.then111
  %98 = load i16*, i16** %indexes, align 8, !dbg !5036
  %99 = load i64*, i64** %x_offset, align 8, !dbg !5036
  %100 = load i64, i64* %x60, align 8, !dbg !5036
  %arrayidx116 = getelementptr inbounds i64, i64* %99, i64 %100, !dbg !5036
  %101 = load i64, i64* %arrayidx116, align 8, !dbg !5036
  %add.ptr117 = getelementptr inbounds i16, i16* %98, i64 %101, !dbg !5036
  %102 = load i16, i16* %add.ptr117, align 2, !dbg !5036
  %conv118 = zext i16 %102 to i32, !dbg !5036
  br label %cond.end, !dbg !5036

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv118, %cond.false ], !dbg !5036
  %conv119 = trunc i32 %cond to i16, !dbg !5036
  %103 = load i16*, i16** %sample_indexes, align 8, !dbg !5036
  %104 = load i64, i64* %x60, align 8, !dbg !5036
  %add.ptr120 = getelementptr inbounds i16, i16* %103, i64 %104, !dbg !5036
  store i16 %conv119, i16* %add.ptr120, align 2, !dbg !5036
  br label %if.end121, !dbg !5036

if.end121:                                        ; preds = %cond.end, %for.body108
  br label %for.inc122, !dbg !5039

for.inc122:                                       ; preds = %if.end121
  %105 = load i64, i64* %x60, align 8, !dbg !5040
  %inc123 = add nsw i64 %105, 1, !dbg !5040
  store i64 %inc123, i64* %x60, align 8, !dbg !5040
  br label %for.cond104, !dbg !5041, !llvm.loop !5042

for.end124:                                       ; preds = %for.cond104
  br label %if.end125, !dbg !5043

if.end125:                                        ; preds = %for.end124, %lor.lhs.false100
  %106 = load %struct._CacheView*, %struct._CacheView** %sample_view, align 8, !dbg !5044
  %107 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5046
  %call126 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %106, %struct._ExceptionInfo* %107), !dbg !5047
  %cmp127 = icmp eq i32 %call126, 0, !dbg !5048
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !5049

if.then129:                                       ; preds = %if.end125
  store i32 0, i32* %status, align 4, !dbg !5050
  br label %if.end130, !dbg !5051

if.end130:                                        ; preds = %if.then129, %if.end125
  %108 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5052
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %108, i32 0, i32 47, !dbg !5054
  %109 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5054
  %cmp131 = icmp ne i32 (i8*, i64, i64, i8*)* %109, null, !dbg !5055
  br i1 %cmp131, label %if.then133, label %if.end141, !dbg !5056

if.then133:                                       ; preds = %if.end130
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5057, metadata !DIExpression()), !dbg !5059
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5060
  %111 = load i64, i64* %progress, align 8, !dbg !5061
  %inc134 = add nsw i64 %111, 1, !dbg !5061
  store i64 %inc134, i64* %progress, align 8, !dbg !5061
  %112 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5062
  %rows135 = getelementptr inbounds %struct._Image, %struct._Image* %112, i32 0, i32 8, !dbg !5063
  %113 = load i64, i64* %rows135, align 8, !dbg !5063
  %call136 = call i32 @SetImageProgress(%struct._Image* %110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i64 %111, i64 %113), !dbg !5064
  store i32 %call136, i32* %proceed, align 4, !dbg !5065
  %114 = load i32, i32* %proceed, align 4, !dbg !5066
  %cmp137 = icmp eq i32 %114, 0, !dbg !5068
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !5069

if.then139:                                       ; preds = %if.then133
  store i32 0, i32* %status, align 4, !dbg !5070
  br label %if.end140, !dbg !5071

if.end140:                                        ; preds = %if.then139, %if.then133
  br label %if.end141, !dbg !5072

if.end141:                                        ; preds = %if.end140, %if.end130
  br label %for.inc142, !dbg !5073

for.inc142:                                       ; preds = %if.end141, %if.then84, %if.then63
  %115 = load i64, i64* %y, align 8, !dbg !5074
  %inc143 = add nsw i64 %115, 1, !dbg !5074
  store i64 %inc143, i64* %y, align 8, !dbg !5074
  br label %for.cond55, !dbg !5075, !llvm.loop !5076

for.end144:                                       ; preds = %for.cond55
  %116 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5078
  %call145 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %116), !dbg !5079
  store %struct._CacheView* %call145, %struct._CacheView** %image_view, align 8, !dbg !5080
  %117 = load %struct._CacheView*, %struct._CacheView** %sample_view, align 8, !dbg !5081
  %call146 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %117), !dbg !5082
  store %struct._CacheView* %call146, %struct._CacheView** %sample_view, align 8, !dbg !5083
  %118 = load i64*, i64** %x_offset, align 8, !dbg !5084
  %119 = bitcast i64* %118 to i8*, !dbg !5084
  %call147 = call i8* @RelinquishMagickMemory(i8* %119), !dbg !5085
  %120 = bitcast i8* %call147 to i64*, !dbg !5086
  store i64* %120, i64** %x_offset, align 8, !dbg !5087
  %121 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5088
  %type = getelementptr inbounds %struct._Image, %struct._Image* %121, i32 0, i32 77, !dbg !5089
  %122 = load i32, i32* %type, align 8, !dbg !5089
  %123 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !5090
  %type148 = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 77, !dbg !5091
  store i32 %122, i32* %type148, align 8, !dbg !5092
  %124 = load i32, i32* %status, align 4, !dbg !5093
  %cmp149 = icmp eq i32 %124, 0, !dbg !5095
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !5096

if.then151:                                       ; preds = %for.end144
  %125 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !5097
  %call152 = call %struct._Image* @DestroyImage(%struct._Image* %125), !dbg !5098
  store %struct._Image* %call152, %struct._Image** %sample_image, align 8, !dbg !5099
  br label %if.end153, !dbg !5100

if.end153:                                        ; preds = %if.then151, %for.end144
  %126 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !5101
  store %struct._Image* %126, %struct._Image** %retval, align 8, !dbg !5102
  br label %return, !dbg !5102

return:                                           ; preds = %if.end153, %if.then38, %if.then17, %if.then12, %if.then3
  %127 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !5103
  ret %struct._Image* %127, !dbg !5103
}

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #7

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ScaleImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !5104 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %scale_view = alloca %struct._CacheView*, align 8
  %scale_image = alloca %struct._Image*, align 8
  %next_column = alloca i32, align 4
  %next_row = alloca i32, align 4
  %proceed = alloca i32, align 4
  %status = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %scale_scanline = alloca %struct._MagickPixelPacket*, align 8
  %scanline = alloca %struct._MagickPixelPacket*, align 8
  %x_vector = alloca %struct._MagickPixelPacket*, align 8
  %y_vector = alloca %struct._MagickPixelPacket*, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %alpha = alloca float, align 4
  %scale = alloca %struct._PointInfo, align 8
  %span = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  %number_rows = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %scale_indexes = alloca i16*, align 8
  %s = alloca %struct._MagickPixelPacket*, align 8
  %t = alloca %struct._MagickPixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5113, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.declare(metadata %struct._CacheView** %scale_view, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.declare(metadata %struct._Image** %scale_image, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata i32* %next_column, metadata !5119, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %next_row, metadata !5121, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5125, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !5127, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %scale_scanline, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %scanline, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %x_vector, metadata !5133, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %y_vector, metadata !5135, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %scale, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %span, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata i64* %number_rows, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5149, metadata !DIExpression()), !dbg !5150
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5151
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5153
  %1 = load i32, i32* %debug, align 8, !dbg !5153
  %cmp = icmp ne i32 %1, 0, !dbg !5154
  br i1 %cmp, label %if.then, label %if.end, !dbg !5155

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5156
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5157
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5156
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3331, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5158
  br label %if.end, !dbg !5159

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !5160
  %cmp1 = icmp eq i64 %3, 0, !dbg !5162
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !5163

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %rows.addr, align 8, !dbg !5164
  %cmp2 = icmp eq i64 %4, 0, !dbg !5165
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5166

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5167
  br label %return, !dbg !5167

if.end4:                                          ; preds = %lor.lhs.false
  %5 = load i64, i64* %columns.addr, align 8, !dbg !5168
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5170
  %columns5 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !5171
  %7 = load i64, i64* %columns5, align 8, !dbg !5171
  %cmp6 = icmp eq i64 %5, %7, !dbg !5172
  br i1 %cmp6, label %land.lhs.true, label %if.end11, !dbg !5173

land.lhs.true:                                    ; preds = %if.end4
  %8 = load i64, i64* %rows.addr, align 8, !dbg !5174
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5175
  %rows7 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !5176
  %10 = load i64, i64* %rows7, align 8, !dbg !5176
  %cmp8 = icmp eq i64 %8, %10, !dbg !5177
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5178

if.then9:                                         ; preds = %land.lhs.true
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5179
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5180
  %call10 = call %struct._Image* @CloneImage(%struct._Image* %11, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %12), !dbg !5181
  store %struct._Image* %call10, %struct._Image** %retval, align 8, !dbg !5182
  br label %return, !dbg !5182

if.end11:                                         ; preds = %land.lhs.true, %if.end4
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5183
  %14 = load i64, i64* %columns.addr, align 8, !dbg !5184
  %15 = load i64, i64* %rows.addr, align 8, !dbg !5185
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5186
  %call12 = call %struct._Image* @CloneImage(%struct._Image* %13, i64 %14, i64 %15, i32 1, %struct._ExceptionInfo* %16), !dbg !5187
  store %struct._Image* %call12, %struct._Image** %scale_image, align 8, !dbg !5188
  %17 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5189
  %cmp13 = icmp eq %struct._Image* %17, null, !dbg !5191
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5192

if.then14:                                        ; preds = %if.end11
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5193
  br label %return, !dbg !5193

if.end15:                                         ; preds = %if.end11
  %18 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5194
  %call16 = call i32 @SetImageStorageClass(%struct._Image* %18, i32 1), !dbg !5196
  %cmp17 = icmp eq i32 %call16, 0, !dbg !5197
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !5198

if.then18:                                        ; preds = %if.end15
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5199
  %20 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5201
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 58, !dbg !5202
  call void @InheritException(%struct._ExceptionInfo* %19, %struct._ExceptionInfo* %exception19), !dbg !5203
  %21 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5204
  %call20 = call %struct._Image* @DestroyImage(%struct._Image* %21), !dbg !5205
  store %struct._Image* %call20, %struct._Image** %scale_image, align 8, !dbg !5206
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5207
  br label %return, !dbg !5207

if.end21:                                         ; preds = %if.end15
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5208
  %columns22 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !5209
  %23 = load i64, i64* %columns22, align 8, !dbg !5209
  %call23 = call i8* @AcquireQuantumMemory(i64 %23, i64 56) #14, !dbg !5210
  %24 = bitcast i8* %call23 to %struct._MagickPixelPacket*, !dbg !5211
  store %struct._MagickPixelPacket* %24, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5212
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5213
  store %struct._MagickPixelPacket* %25, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5214
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5215
  %rows24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 8, !dbg !5217
  %27 = load i64, i64* %rows24, align 8, !dbg !5217
  %28 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5218
  %rows25 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 8, !dbg !5219
  %29 = load i64, i64* %rows25, align 8, !dbg !5219
  %cmp26 = icmp ne i64 %27, %29, !dbg !5220
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !5221

if.then27:                                        ; preds = %if.end21
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5222
  %columns28 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !5223
  %31 = load i64, i64* %columns28, align 8, !dbg !5223
  %call29 = call i8* @AcquireQuantumMemory(i64 %31, i64 56) #14, !dbg !5224
  %32 = bitcast i8* %call29 to %struct._MagickPixelPacket*, !dbg !5225
  store %struct._MagickPixelPacket* %32, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5226
  br label %if.end30, !dbg !5227

if.end30:                                         ; preds = %if.then27, %if.end21
  %33 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5228
  %columns31 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 7, !dbg !5229
  %34 = load i64, i64* %columns31, align 8, !dbg !5229
  %call32 = call i8* @AcquireQuantumMemory(i64 %34, i64 56) #14, !dbg !5230
  %35 = bitcast i8* %call32 to %struct._MagickPixelPacket*, !dbg !5231
  store %struct._MagickPixelPacket* %35, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !5232
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5233
  %columns33 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 7, !dbg !5234
  %37 = load i64, i64* %columns33, align 8, !dbg !5234
  %call34 = call i8* @AcquireQuantumMemory(i64 %37, i64 56) #14, !dbg !5235
  %38 = bitcast i8* %call34 to %struct._MagickPixelPacket*, !dbg !5236
  store %struct._MagickPixelPacket* %38, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5237
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5238
  %cmp35 = icmp eq %struct._MagickPixelPacket* %39, null, !dbg !5240
  br i1 %cmp35, label %if.then42, label %lor.lhs.false36, !dbg !5241

lor.lhs.false36:                                  ; preds = %if.end30
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !5242
  %cmp37 = icmp eq %struct._MagickPixelPacket* %40, null, !dbg !5243
  br i1 %cmp37, label %if.then42, label %lor.lhs.false38, !dbg !5244

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5245
  %cmp39 = icmp eq %struct._MagickPixelPacket* %41, null, !dbg !5246
  br i1 %cmp39, label %if.then42, label %lor.lhs.false40, !dbg !5247

lor.lhs.false40:                                  ; preds = %lor.lhs.false38
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5248
  %cmp41 = icmp eq %struct._MagickPixelPacket* %42, null, !dbg !5249
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !5250

if.then42:                                        ; preds = %lor.lhs.false40, %lor.lhs.false38, %lor.lhs.false36, %if.end30
  %43 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5251
  %call43 = call %struct._Image* @DestroyImage(%struct._Image* %43), !dbg !5253
  store %struct._Image* %call43, %struct._Image** %scale_image, align 8, !dbg !5254
  %44 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5255
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5255
  %filename44 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 53, !dbg !5255
  %arraydecay45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename44, i64 0, i64 0, !dbg !5255
  %call46 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3366, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay45), !dbg !5255
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !5255
  br label %return, !dbg !5255

if.end47:                                         ; preds = %lor.lhs.false40
  store i64 0, i64* %number_rows, align 8, !dbg !5257
  store i32 1, i32* %next_row, align 4, !dbg !5258
  %y48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5259
  store double 1.000000e+00, double* %y48, align 8, !dbg !5260
  %46 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5261
  %rows49 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 8, !dbg !5262
  %47 = load i64, i64* %rows49, align 8, !dbg !5262
  %conv = uitofp i64 %47 to double, !dbg !5263
  %48 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5264
  %rows50 = getelementptr inbounds %struct._Image, %struct._Image* %48, i32 0, i32 8, !dbg !5265
  %49 = load i64, i64* %rows50, align 8, !dbg !5265
  %conv51 = uitofp i64 %49 to double, !dbg !5266
  %div = fdiv double %conv, %conv51, !dbg !5267
  %y52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5268
  store double %div, double* %y52, align 8, !dbg !5269
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5270
  %51 = bitcast %struct._MagickPixelPacket* %50 to i8*, !dbg !5270
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5271
  %columns53 = getelementptr inbounds %struct._Image, %struct._Image* %52, i32 0, i32 7, !dbg !5272
  %53 = load i64, i64* %columns53, align 8, !dbg !5272
  %mul = mul i64 %53, 56, !dbg !5273
  %call54 = call i8* @ResetMagickMemory(i8* %51, i32 0, i64 %mul), !dbg !5274
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5275
  call void @GetMagickPixelPacket(%struct._Image* %54, %struct._MagickPixelPacket* %pixel), !dbg !5276
  %55 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !5277
  %call55 = call i8* @ResetMagickMemory(i8* %55, i32 0, i64 56), !dbg !5278
  store i64 0, i64* %i, align 8, !dbg !5279
  store i32 1, i32* %status, align 4, !dbg !5280
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5281
  %57 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5282
  %call56 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %56, %struct._ExceptionInfo* %57), !dbg !5283
  store %struct._CacheView* %call56, %struct._CacheView** %image_view, align 8, !dbg !5284
  %58 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5285
  %59 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5286
  %call57 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %58, %struct._ExceptionInfo* %59), !dbg !5287
  store %struct._CacheView* %call57, %struct._CacheView** %scale_view, align 8, !dbg !5288
  store i64 0, i64* %y, align 8, !dbg !5289
  br label %for.cond, !dbg !5291

for.cond:                                         ; preds = %for.inc856, %if.end47
  %60 = load i64, i64* %y, align 8, !dbg !5292
  %61 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5294
  %rows58 = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 8, !dbg !5295
  %62 = load i64, i64* %rows58, align 8, !dbg !5295
  %cmp59 = icmp slt i64 %60, %62, !dbg !5296
  br i1 %cmp59, label %for.body, label %for.end858, !dbg !5297

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !5298, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !5301, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.declare(metadata i16** %scale_indexes, metadata !5303, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %s, metadata !5305, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %t, metadata !5308, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5312, metadata !DIExpression()), !dbg !5313
  %63 = load i32, i32* %status, align 4, !dbg !5314
  %cmp61 = icmp eq i32 %63, 0, !dbg !5316
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !5317

if.then63:                                        ; preds = %for.body
  br label %for.end858, !dbg !5318

if.end64:                                         ; preds = %for.body
  %64 = load %struct._CacheView*, %struct._CacheView** %scale_view, align 8, !dbg !5319
  %65 = load i64, i64* %y, align 8, !dbg !5320
  %66 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5321
  %columns65 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 7, !dbg !5322
  %67 = load i64, i64* %columns65, align 8, !dbg !5322
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5323
  %call66 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %64, i64 0, i64 %65, i64 %67, i64 1, %struct._ExceptionInfo* %68), !dbg !5324
  store %struct._PixelPacket* %call66, %struct._PixelPacket** %q, align 8, !dbg !5325
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5326
  %cmp67 = icmp eq %struct._PixelPacket* %69, null, !dbg !5328
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !5329

if.then69:                                        ; preds = %if.end64
  store i32 0, i32* %status, align 4, !dbg !5330
  br label %for.end858, !dbg !5332

if.end70:                                         ; preds = %if.end64
  store float 1.000000e+00, float* %alpha, align 4, !dbg !5333
  %70 = load %struct._CacheView*, %struct._CacheView** %scale_view, align 8, !dbg !5334
  %call71 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %70), !dbg !5335
  store i16* %call71, i16** %scale_indexes, align 8, !dbg !5336
  %71 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5337
  %rows72 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 8, !dbg !5339
  %72 = load i64, i64* %rows72, align 8, !dbg !5339
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5340
  %rows73 = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 8, !dbg !5341
  %74 = load i64, i64* %rows73, align 8, !dbg !5341
  %cmp74 = icmp eq i64 %72, %74, !dbg !5342
  br i1 %cmp74, label %if.then76, label %if.else, !dbg !5343

if.then76:                                        ; preds = %if.end70
  %75 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5344
  %76 = load i64, i64* %i, align 8, !dbg !5346
  %inc = add nsw i64 %76, 1, !dbg !5346
  store i64 %inc, i64* %i, align 8, !dbg !5346
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5347
  %columns77 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 7, !dbg !5348
  %78 = load i64, i64* %columns77, align 8, !dbg !5348
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5349
  %call78 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %75, i64 0, i64 %76, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !5350
  store %struct._PixelPacket* %call78, %struct._PixelPacket** %p, align 8, !dbg !5351
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5352
  %cmp79 = icmp eq %struct._PixelPacket* %80, null, !dbg !5354
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !5355

if.then81:                                        ; preds = %if.then76
  store i32 0, i32* %status, align 4, !dbg !5356
  br label %for.end858, !dbg !5358

if.end82:                                         ; preds = %if.then76
  %81 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5359
  %call83 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %81), !dbg !5360
  store i16* %call83, i16** %indexes, align 8, !dbg !5361
  store i64 0, i64* %x, align 8, !dbg !5362
  br label %for.cond84, !dbg !5364

for.cond84:                                       ; preds = %for.inc, %if.end82
  %82 = load i64, i64* %x, align 8, !dbg !5365
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5367
  %columns85 = getelementptr inbounds %struct._Image, %struct._Image* %83, i32 0, i32 7, !dbg !5368
  %84 = load i64, i64* %columns85, align 8, !dbg !5368
  %cmp86 = icmp slt i64 %82, %84, !dbg !5369
  br i1 %cmp86, label %for.body88, label %for.end, !dbg !5370

for.body88:                                       ; preds = %for.cond84
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5371
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 6, !dbg !5374
  %86 = load i32, i32* %matte, align 8, !dbg !5374
  %cmp89 = icmp ne i32 %86, 0, !dbg !5375
  br i1 %cmp89, label %if.then91, label %if.end96, !dbg !5376

if.then91:                                        ; preds = %for.body88
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5377
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 3, !dbg !5377
  %88 = load i16, i16* %opacity, align 2, !dbg !5377
  %conv92 = zext i16 %88 to i32, !dbg !5377
  %sub = sub nsw i32 65535, %conv92, !dbg !5377
  %conv93 = sitofp i32 %sub to double, !dbg !5377
  %mul94 = fmul double 0x3EF0001000100010, %conv93, !dbg !5378
  %conv95 = fptrunc double %mul94 to float, !dbg !5379
  store float %conv95, float* %alpha, align 4, !dbg !5380
  br label %if.end96, !dbg !5381

if.end96:                                         ; preds = %if.then91, %for.body88
  %89 = load float, float* %alpha, align 4, !dbg !5382
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5383
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 0, i32 2, !dbg !5383
  %91 = load i16, i16* %red, align 2, !dbg !5383
  %conv97 = zext i16 %91 to i32, !dbg !5383
  %conv98 = sitofp i32 %conv97 to float, !dbg !5383
  %mul99 = fmul float %89, %conv98, !dbg !5384
  %92 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5385
  %93 = load i64, i64* %x, align 8, !dbg !5386
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %92, i64 %93, !dbg !5385
  %red100 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx, i32 0, i32 5, !dbg !5387
  store float %mul99, float* %red100, align 8, !dbg !5388
  %94 = load float, float* %alpha, align 4, !dbg !5389
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5390
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 1, !dbg !5390
  %96 = load i16, i16* %green, align 2, !dbg !5390
  %conv101 = zext i16 %96 to i32, !dbg !5390
  %conv102 = sitofp i32 %conv101 to float, !dbg !5390
  %mul103 = fmul float %94, %conv102, !dbg !5391
  %97 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5392
  %98 = load i64, i64* %x, align 8, !dbg !5393
  %arrayidx104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %97, i64 %98, !dbg !5392
  %green105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx104, i32 0, i32 6, !dbg !5394
  store float %mul103, float* %green105, align 4, !dbg !5395
  %99 = load float, float* %alpha, align 4, !dbg !5396
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5397
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 0, !dbg !5397
  %101 = load i16, i16* %blue, align 2, !dbg !5397
  %conv106 = zext i16 %101 to i32, !dbg !5397
  %conv107 = sitofp i32 %conv106 to float, !dbg !5397
  %mul108 = fmul float %99, %conv107, !dbg !5398
  %102 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5399
  %103 = load i64, i64* %x, align 8, !dbg !5400
  %arrayidx109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %102, i64 %103, !dbg !5399
  %blue110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx109, i32 0, i32 7, !dbg !5401
  store float %mul108, float* %blue110, align 8, !dbg !5402
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5403
  %matte111 = getelementptr inbounds %struct._Image, %struct._Image* %104, i32 0, i32 6, !dbg !5405
  %105 = load i32, i32* %matte111, align 8, !dbg !5405
  %cmp112 = icmp ne i32 %105, 0, !dbg !5406
  br i1 %cmp112, label %if.then114, label %if.end119, !dbg !5407

if.then114:                                       ; preds = %if.end96
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5408
  %opacity115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 3, !dbg !5408
  %107 = load i16, i16* %opacity115, align 2, !dbg !5408
  %conv116 = uitofp i16 %107 to float, !dbg !5409
  %108 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5410
  %109 = load i64, i64* %x, align 8, !dbg !5411
  %arrayidx117 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %108, i64 %109, !dbg !5410
  %opacity118 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx117, i32 0, i32 8, !dbg !5412
  store float %conv116, float* %opacity118, align 4, !dbg !5413
  br label %if.end119, !dbg !5410

if.end119:                                        ; preds = %if.then114, %if.end96
  %110 = load i16*, i16** %indexes, align 8, !dbg !5414
  %cmp120 = icmp ne i16* %110, null, !dbg !5416
  br i1 %cmp120, label %if.then122, label %if.end130, !dbg !5417

if.then122:                                       ; preds = %if.end119
  %111 = load float, float* %alpha, align 4, !dbg !5418
  %112 = load i16*, i16** %indexes, align 8, !dbg !5419
  %113 = load i64, i64* %x, align 8, !dbg !5419
  %add.ptr = getelementptr inbounds i16, i16* %112, i64 %113, !dbg !5419
  %cmp123 = icmp eq i16* %add.ptr, null, !dbg !5419
  br i1 %cmp123, label %cond.true, label %cond.false, !dbg !5419

cond.true:                                        ; preds = %if.then122
  br label %cond.end, !dbg !5419

cond.false:                                       ; preds = %if.then122
  %114 = load i16*, i16** %indexes, align 8, !dbg !5419
  %115 = load i64, i64* %x, align 8, !dbg !5419
  %add.ptr125 = getelementptr inbounds i16, i16* %114, i64 %115, !dbg !5419
  %116 = load i16, i16* %add.ptr125, align 2, !dbg !5419
  %conv126 = zext i16 %116 to i32, !dbg !5419
  br label %cond.end, !dbg !5419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv126, %cond.false ], !dbg !5419
  %conv127 = sitofp i32 %cond to float, !dbg !5419
  %mul128 = fmul float %111, %conv127, !dbg !5420
  %117 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5421
  %118 = load i64, i64* %x, align 8, !dbg !5422
  %arrayidx129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %117, i64 %118, !dbg !5421
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx129, i32 0, i32 9, !dbg !5423
  store float %mul128, float* %index, align 8, !dbg !5424
  br label %if.end130, !dbg !5421

if.end130:                                        ; preds = %cond.end, %if.end119
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5425
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 1, !dbg !5425
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !5425
  br label %for.inc, !dbg !5426

for.inc:                                          ; preds = %if.end130
  %120 = load i64, i64* %x, align 8, !dbg !5427
  %inc131 = add nsw i64 %120, 1, !dbg !5427
  store i64 %inc131, i64* %x, align 8, !dbg !5427
  br label %for.cond84, !dbg !5428, !llvm.loop !5429

for.end:                                          ; preds = %for.cond84
  br label %if.end481, !dbg !5431

if.else:                                          ; preds = %if.end70
  br label %while.cond, !dbg !5432

while.cond:                                       ; preds = %for.end282, %if.else
  %y132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5434
  %121 = load double, double* %y132, align 8, !dbg !5434
  %y133 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5435
  %122 = load double, double* %y133, align 8, !dbg !5435
  %cmp134 = fcmp olt double %121, %122, !dbg !5436
  br i1 %cmp134, label %while.body, label %while.end, !dbg !5432

while.body:                                       ; preds = %while.cond
  %123 = load i32, i32* %next_row, align 4, !dbg !5437
  %cmp136 = icmp ne i32 %123, 0, !dbg !5440
  br i1 %cmp136, label %land.lhs.true138, label %if.end216, !dbg !5441

land.lhs.true138:                                 ; preds = %while.body
  %124 = load i64, i64* %number_rows, align 8, !dbg !5442
  %125 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5443
  %rows139 = getelementptr inbounds %struct._Image, %struct._Image* %125, i32 0, i32 8, !dbg !5444
  %126 = load i64, i64* %rows139, align 8, !dbg !5444
  %cmp140 = icmp slt i64 %124, %126, !dbg !5445
  br i1 %cmp140, label %if.then142, label %if.end216, !dbg !5446

if.then142:                                       ; preds = %land.lhs.true138
  %127 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5447
  %128 = load i64, i64* %i, align 8, !dbg !5449
  %inc143 = add nsw i64 %128, 1, !dbg !5449
  store i64 %inc143, i64* %i, align 8, !dbg !5449
  %129 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5450
  %columns144 = getelementptr inbounds %struct._Image, %struct._Image* %129, i32 0, i32 7, !dbg !5451
  %130 = load i64, i64* %columns144, align 8, !dbg !5451
  %131 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5452
  %call145 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %127, i64 0, i64 %128, i64 %130, i64 1, %struct._ExceptionInfo* %131), !dbg !5453
  store %struct._PixelPacket* %call145, %struct._PixelPacket** %p, align 8, !dbg !5454
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5455
  %cmp146 = icmp eq %struct._PixelPacket* %132, null, !dbg !5457
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !5458

if.then148:                                       ; preds = %if.then142
  store i32 0, i32* %status, align 4, !dbg !5459
  br label %while.end, !dbg !5461

if.end149:                                        ; preds = %if.then142
  %133 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5462
  %call150 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %133), !dbg !5463
  store i16* %call150, i16** %indexes, align 8, !dbg !5464
  store i64 0, i64* %x, align 8, !dbg !5465
  br label %for.cond151, !dbg !5467

for.cond151:                                      ; preds = %for.inc212, %if.end149
  %134 = load i64, i64* %x, align 8, !dbg !5468
  %135 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5470
  %columns152 = getelementptr inbounds %struct._Image, %struct._Image* %135, i32 0, i32 7, !dbg !5471
  %136 = load i64, i64* %columns152, align 8, !dbg !5471
  %cmp153 = icmp slt i64 %134, %136, !dbg !5472
  br i1 %cmp153, label %for.body155, label %for.end214, !dbg !5473

for.body155:                                      ; preds = %for.cond151
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5474
  %matte156 = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 6, !dbg !5477
  %138 = load i32, i32* %matte156, align 8, !dbg !5477
  %cmp157 = icmp ne i32 %138, 0, !dbg !5478
  br i1 %cmp157, label %if.then159, label %if.end166, !dbg !5479

if.then159:                                       ; preds = %for.body155
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5480
  %opacity160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 3, !dbg !5480
  %140 = load i16, i16* %opacity160, align 2, !dbg !5480
  %conv161 = zext i16 %140 to i32, !dbg !5480
  %sub162 = sub nsw i32 65535, %conv161, !dbg !5480
  %conv163 = sitofp i32 %sub162 to double, !dbg !5480
  %mul164 = fmul double 0x3EF0001000100010, %conv163, !dbg !5481
  %conv165 = fptrunc double %mul164 to float, !dbg !5482
  store float %conv165, float* %alpha, align 4, !dbg !5483
  br label %if.end166, !dbg !5484

if.end166:                                        ; preds = %if.then159, %for.body155
  %141 = load float, float* %alpha, align 4, !dbg !5485
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5486
  %red167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 0, i32 2, !dbg !5486
  %143 = load i16, i16* %red167, align 2, !dbg !5486
  %conv168 = zext i16 %143 to i32, !dbg !5486
  %conv169 = sitofp i32 %conv168 to float, !dbg !5486
  %mul170 = fmul float %141, %conv169, !dbg !5487
  %144 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5488
  %145 = load i64, i64* %x, align 8, !dbg !5489
  %arrayidx171 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %144, i64 %145, !dbg !5488
  %red172 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx171, i32 0, i32 5, !dbg !5490
  store float %mul170, float* %red172, align 8, !dbg !5491
  %146 = load float, float* %alpha, align 4, !dbg !5492
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5493
  %green173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i32 0, i32 1, !dbg !5493
  %148 = load i16, i16* %green173, align 2, !dbg !5493
  %conv174 = zext i16 %148 to i32, !dbg !5493
  %conv175 = sitofp i32 %conv174 to float, !dbg !5493
  %mul176 = fmul float %146, %conv175, !dbg !5494
  %149 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5495
  %150 = load i64, i64* %x, align 8, !dbg !5496
  %arrayidx177 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %149, i64 %150, !dbg !5495
  %green178 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx177, i32 0, i32 6, !dbg !5497
  store float %mul176, float* %green178, align 4, !dbg !5498
  %151 = load float, float* %alpha, align 4, !dbg !5499
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5500
  %blue179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 0, !dbg !5500
  %153 = load i16, i16* %blue179, align 2, !dbg !5500
  %conv180 = zext i16 %153 to i32, !dbg !5500
  %conv181 = sitofp i32 %conv180 to float, !dbg !5500
  %mul182 = fmul float %151, %conv181, !dbg !5501
  %154 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5502
  %155 = load i64, i64* %x, align 8, !dbg !5503
  %arrayidx183 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %154, i64 %155, !dbg !5502
  %blue184 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx183, i32 0, i32 7, !dbg !5504
  store float %mul182, float* %blue184, align 8, !dbg !5505
  %156 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5506
  %matte185 = getelementptr inbounds %struct._Image, %struct._Image* %156, i32 0, i32 6, !dbg !5508
  %157 = load i32, i32* %matte185, align 8, !dbg !5508
  %cmp186 = icmp ne i32 %157, 0, !dbg !5509
  br i1 %cmp186, label %if.then188, label %if.end193, !dbg !5510

if.then188:                                       ; preds = %if.end166
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5511
  %opacity189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 0, i32 3, !dbg !5511
  %159 = load i16, i16* %opacity189, align 2, !dbg !5511
  %conv190 = uitofp i16 %159 to float, !dbg !5512
  %160 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5513
  %161 = load i64, i64* %x, align 8, !dbg !5514
  %arrayidx191 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %160, i64 %161, !dbg !5513
  %opacity192 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx191, i32 0, i32 8, !dbg !5515
  store float %conv190, float* %opacity192, align 4, !dbg !5516
  br label %if.end193, !dbg !5513

if.end193:                                        ; preds = %if.then188, %if.end166
  %162 = load i16*, i16** %indexes, align 8, !dbg !5517
  %cmp194 = icmp ne i16* %162, null, !dbg !5519
  br i1 %cmp194, label %if.then196, label %if.end210, !dbg !5520

if.then196:                                       ; preds = %if.end193
  %163 = load float, float* %alpha, align 4, !dbg !5521
  %164 = load i16*, i16** %indexes, align 8, !dbg !5522
  %165 = load i64, i64* %x, align 8, !dbg !5522
  %add.ptr197 = getelementptr inbounds i16, i16* %164, i64 %165, !dbg !5522
  %cmp198 = icmp eq i16* %add.ptr197, null, !dbg !5522
  br i1 %cmp198, label %cond.true200, label %cond.false201, !dbg !5522

cond.true200:                                     ; preds = %if.then196
  br label %cond.end204, !dbg !5522

cond.false201:                                    ; preds = %if.then196
  %166 = load i16*, i16** %indexes, align 8, !dbg !5522
  %167 = load i64, i64* %x, align 8, !dbg !5522
  %add.ptr202 = getelementptr inbounds i16, i16* %166, i64 %167, !dbg !5522
  %168 = load i16, i16* %add.ptr202, align 2, !dbg !5522
  %conv203 = zext i16 %168 to i32, !dbg !5522
  br label %cond.end204, !dbg !5522

cond.end204:                                      ; preds = %cond.false201, %cond.true200
  %cond205 = phi i32 [ 0, %cond.true200 ], [ %conv203, %cond.false201 ], !dbg !5522
  %conv206 = sitofp i32 %cond205 to float, !dbg !5522
  %mul207 = fmul float %163, %conv206, !dbg !5523
  %169 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5524
  %170 = load i64, i64* %x, align 8, !dbg !5525
  %arrayidx208 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %169, i64 %170, !dbg !5524
  %index209 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx208, i32 0, i32 9, !dbg !5526
  store float %mul207, float* %index209, align 8, !dbg !5527
  br label %if.end210, !dbg !5524

if.end210:                                        ; preds = %cond.end204, %if.end193
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5528
  %incdec.ptr211 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 1, !dbg !5528
  store %struct._PixelPacket* %incdec.ptr211, %struct._PixelPacket** %p, align 8, !dbg !5528
  br label %for.inc212, !dbg !5529

for.inc212:                                       ; preds = %if.end210
  %172 = load i64, i64* %x, align 8, !dbg !5530
  %inc213 = add nsw i64 %172, 1, !dbg !5530
  store i64 %inc213, i64* %x, align 8, !dbg !5530
  br label %for.cond151, !dbg !5531, !llvm.loop !5532

for.end214:                                       ; preds = %for.cond151
  %173 = load i64, i64* %number_rows, align 8, !dbg !5534
  %inc215 = add nsw i64 %173, 1, !dbg !5534
  store i64 %inc215, i64* %number_rows, align 8, !dbg !5534
  br label %if.end216, !dbg !5535

if.end216:                                        ; preds = %for.end214, %land.lhs.true138, %while.body
  store i64 0, i64* %x, align 8, !dbg !5536
  br label %for.cond217, !dbg !5538

for.cond217:                                      ; preds = %for.inc280, %if.end216
  %174 = load i64, i64* %x, align 8, !dbg !5539
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5541
  %columns218 = getelementptr inbounds %struct._Image, %struct._Image* %175, i32 0, i32 7, !dbg !5542
  %176 = load i64, i64* %columns218, align 8, !dbg !5542
  %cmp219 = icmp slt i64 %174, %176, !dbg !5543
  br i1 %cmp219, label %for.body221, label %for.end282, !dbg !5544

for.body221:                                      ; preds = %for.cond217
  %y222 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5545
  %177 = load double, double* %y222, align 8, !dbg !5545
  %178 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5547
  %179 = load i64, i64* %x, align 8, !dbg !5548
  %arrayidx223 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %178, i64 %179, !dbg !5547
  %red224 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx223, i32 0, i32 5, !dbg !5549
  %180 = load float, float* %red224, align 8, !dbg !5549
  %conv225 = fpext float %180 to double, !dbg !5547
  %mul226 = fmul double %177, %conv225, !dbg !5550
  %181 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5551
  %182 = load i64, i64* %x, align 8, !dbg !5552
  %arrayidx227 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %181, i64 %182, !dbg !5551
  %red228 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx227, i32 0, i32 5, !dbg !5553
  %183 = load float, float* %red228, align 8, !dbg !5554
  %conv229 = fpext float %183 to double, !dbg !5554
  %add = fadd double %conv229, %mul226, !dbg !5554
  %conv230 = fptrunc double %add to float, !dbg !5554
  store float %conv230, float* %red228, align 8, !dbg !5554
  %y231 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5555
  %184 = load double, double* %y231, align 8, !dbg !5555
  %185 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5556
  %186 = load i64, i64* %x, align 8, !dbg !5557
  %arrayidx232 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %185, i64 %186, !dbg !5556
  %green233 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx232, i32 0, i32 6, !dbg !5558
  %187 = load float, float* %green233, align 4, !dbg !5558
  %conv234 = fpext float %187 to double, !dbg !5556
  %mul235 = fmul double %184, %conv234, !dbg !5559
  %188 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5560
  %189 = load i64, i64* %x, align 8, !dbg !5561
  %arrayidx236 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %188, i64 %189, !dbg !5560
  %green237 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx236, i32 0, i32 6, !dbg !5562
  %190 = load float, float* %green237, align 4, !dbg !5563
  %conv238 = fpext float %190 to double, !dbg !5563
  %add239 = fadd double %conv238, %mul235, !dbg !5563
  %conv240 = fptrunc double %add239 to float, !dbg !5563
  store float %conv240, float* %green237, align 4, !dbg !5563
  %y241 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5564
  %191 = load double, double* %y241, align 8, !dbg !5564
  %192 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5565
  %193 = load i64, i64* %x, align 8, !dbg !5566
  %arrayidx242 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %192, i64 %193, !dbg !5565
  %blue243 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx242, i32 0, i32 7, !dbg !5567
  %194 = load float, float* %blue243, align 8, !dbg !5567
  %conv244 = fpext float %194 to double, !dbg !5565
  %mul245 = fmul double %191, %conv244, !dbg !5568
  %195 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5569
  %196 = load i64, i64* %x, align 8, !dbg !5570
  %arrayidx246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %195, i64 %196, !dbg !5569
  %blue247 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx246, i32 0, i32 7, !dbg !5571
  %197 = load float, float* %blue247, align 8, !dbg !5572
  %conv248 = fpext float %197 to double, !dbg !5572
  %add249 = fadd double %conv248, %mul245, !dbg !5572
  %conv250 = fptrunc double %add249 to float, !dbg !5572
  store float %conv250, float* %blue247, align 8, !dbg !5572
  %198 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5573
  %matte251 = getelementptr inbounds %struct._Image, %struct._Image* %198, i32 0, i32 6, !dbg !5575
  %199 = load i32, i32* %matte251, align 8, !dbg !5575
  %cmp252 = icmp ne i32 %199, 0, !dbg !5576
  br i1 %cmp252, label %if.then254, label %if.end265, !dbg !5577

if.then254:                                       ; preds = %for.body221
  %y255 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5578
  %200 = load double, double* %y255, align 8, !dbg !5578
  %201 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5579
  %202 = load i64, i64* %x, align 8, !dbg !5580
  %arrayidx256 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %201, i64 %202, !dbg !5579
  %opacity257 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx256, i32 0, i32 8, !dbg !5581
  %203 = load float, float* %opacity257, align 4, !dbg !5581
  %conv258 = fpext float %203 to double, !dbg !5579
  %mul259 = fmul double %200, %conv258, !dbg !5582
  %204 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5583
  %205 = load i64, i64* %x, align 8, !dbg !5584
  %arrayidx260 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %204, i64 %205, !dbg !5583
  %opacity261 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx260, i32 0, i32 8, !dbg !5585
  %206 = load float, float* %opacity261, align 4, !dbg !5586
  %conv262 = fpext float %206 to double, !dbg !5586
  %add263 = fadd double %conv262, %mul259, !dbg !5586
  %conv264 = fptrunc double %add263 to float, !dbg !5586
  store float %conv264, float* %opacity261, align 4, !dbg !5586
  br label %if.end265, !dbg !5583

if.end265:                                        ; preds = %if.then254, %for.body221
  %207 = load i16*, i16** %scale_indexes, align 8, !dbg !5587
  %cmp266 = icmp ne i16* %207, null, !dbg !5589
  br i1 %cmp266, label %if.then268, label %if.end279, !dbg !5590

if.then268:                                       ; preds = %if.end265
  %y269 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5591
  %208 = load double, double* %y269, align 8, !dbg !5591
  %209 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5592
  %210 = load i64, i64* %x, align 8, !dbg !5593
  %arrayidx270 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %209, i64 %210, !dbg !5592
  %index271 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx270, i32 0, i32 9, !dbg !5594
  %211 = load float, float* %index271, align 8, !dbg !5594
  %conv272 = fpext float %211 to double, !dbg !5592
  %mul273 = fmul double %208, %conv272, !dbg !5595
  %212 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5596
  %213 = load i64, i64* %x, align 8, !dbg !5597
  %arrayidx274 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %212, i64 %213, !dbg !5596
  %index275 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx274, i32 0, i32 9, !dbg !5598
  %214 = load float, float* %index275, align 8, !dbg !5599
  %conv276 = fpext float %214 to double, !dbg !5599
  %add277 = fadd double %conv276, %mul273, !dbg !5599
  %conv278 = fptrunc double %add277 to float, !dbg !5599
  store float %conv278, float* %index275, align 8, !dbg !5599
  br label %if.end279, !dbg !5596

if.end279:                                        ; preds = %if.then268, %if.end265
  br label %for.inc280, !dbg !5600

for.inc280:                                       ; preds = %if.end279
  %215 = load i64, i64* %x, align 8, !dbg !5601
  %inc281 = add nsw i64 %215, 1, !dbg !5601
  store i64 %inc281, i64* %x, align 8, !dbg !5601
  br label %for.cond217, !dbg !5602, !llvm.loop !5603

for.end282:                                       ; preds = %for.cond217
  %y283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5605
  %216 = load double, double* %y283, align 8, !dbg !5605
  %y284 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5606
  %217 = load double, double* %y284, align 8, !dbg !5607
  %sub285 = fsub double %217, %216, !dbg !5607
  store double %sub285, double* %y284, align 8, !dbg !5607
  %218 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5608
  %rows286 = getelementptr inbounds %struct._Image, %struct._Image* %218, i32 0, i32 8, !dbg !5609
  %219 = load i64, i64* %rows286, align 8, !dbg !5609
  %conv287 = uitofp i64 %219 to double, !dbg !5610
  %220 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5611
  %rows288 = getelementptr inbounds %struct._Image, %struct._Image* %220, i32 0, i32 8, !dbg !5612
  %221 = load i64, i64* %rows288, align 8, !dbg !5612
  %conv289 = uitofp i64 %221 to double, !dbg !5613
  %div290 = fdiv double %conv287, %conv289, !dbg !5614
  %y291 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5615
  store double %div290, double* %y291, align 8, !dbg !5616
  store i32 1, i32* %next_row, align 4, !dbg !5617
  br label %while.cond, !dbg !5432, !llvm.loop !5618

while.end:                                        ; preds = %if.then148, %while.cond
  %222 = load i32, i32* %next_row, align 4, !dbg !5620
  %cmp292 = icmp ne i32 %222, 0, !dbg !5622
  br i1 %cmp292, label %land.lhs.true294, label %if.end372, !dbg !5623

land.lhs.true294:                                 ; preds = %while.end
  %223 = load i64, i64* %number_rows, align 8, !dbg !5624
  %224 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5625
  %rows295 = getelementptr inbounds %struct._Image, %struct._Image* %224, i32 0, i32 8, !dbg !5626
  %225 = load i64, i64* %rows295, align 8, !dbg !5626
  %cmp296 = icmp slt i64 %223, %225, !dbg !5627
  br i1 %cmp296, label %if.then298, label %if.end372, !dbg !5628

if.then298:                                       ; preds = %land.lhs.true294
  %226 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5629
  %227 = load i64, i64* %i, align 8, !dbg !5631
  %inc299 = add nsw i64 %227, 1, !dbg !5631
  store i64 %inc299, i64* %i, align 8, !dbg !5631
  %228 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5632
  %columns300 = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 7, !dbg !5633
  %229 = load i64, i64* %columns300, align 8, !dbg !5633
  %230 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5634
  %call301 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %226, i64 0, i64 %227, i64 %229, i64 1, %struct._ExceptionInfo* %230), !dbg !5635
  store %struct._PixelPacket* %call301, %struct._PixelPacket** %p, align 8, !dbg !5636
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5637
  %cmp302 = icmp eq %struct._PixelPacket* %231, null, !dbg !5639
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !5640

if.then304:                                       ; preds = %if.then298
  store i32 0, i32* %status, align 4, !dbg !5641
  br label %for.end858, !dbg !5643

if.end305:                                        ; preds = %if.then298
  %232 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5644
  %call306 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %232), !dbg !5645
  store i16* %call306, i16** %indexes, align 8, !dbg !5646
  store i64 0, i64* %x, align 8, !dbg !5647
  br label %for.cond307, !dbg !5649

for.cond307:                                      ; preds = %for.inc368, %if.end305
  %233 = load i64, i64* %x, align 8, !dbg !5650
  %234 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5652
  %columns308 = getelementptr inbounds %struct._Image, %struct._Image* %234, i32 0, i32 7, !dbg !5653
  %235 = load i64, i64* %columns308, align 8, !dbg !5653
  %cmp309 = icmp slt i64 %233, %235, !dbg !5654
  br i1 %cmp309, label %for.body311, label %for.end370, !dbg !5655

for.body311:                                      ; preds = %for.cond307
  %236 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5656
  %matte312 = getelementptr inbounds %struct._Image, %struct._Image* %236, i32 0, i32 6, !dbg !5659
  %237 = load i32, i32* %matte312, align 8, !dbg !5659
  %cmp313 = icmp ne i32 %237, 0, !dbg !5660
  br i1 %cmp313, label %if.then315, label %if.end322, !dbg !5661

if.then315:                                       ; preds = %for.body311
  %238 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5662
  %opacity316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %238, i32 0, i32 3, !dbg !5662
  %239 = load i16, i16* %opacity316, align 2, !dbg !5662
  %conv317 = zext i16 %239 to i32, !dbg !5662
  %sub318 = sub nsw i32 65535, %conv317, !dbg !5662
  %conv319 = sitofp i32 %sub318 to double, !dbg !5662
  %mul320 = fmul double 0x3EF0001000100010, %conv319, !dbg !5663
  %conv321 = fptrunc double %mul320 to float, !dbg !5664
  store float %conv321, float* %alpha, align 4, !dbg !5665
  br label %if.end322, !dbg !5666

if.end322:                                        ; preds = %if.then315, %for.body311
  %240 = load float, float* %alpha, align 4, !dbg !5667
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5668
  %red323 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 0, i32 2, !dbg !5668
  %242 = load i16, i16* %red323, align 2, !dbg !5668
  %conv324 = zext i16 %242 to i32, !dbg !5668
  %conv325 = sitofp i32 %conv324 to float, !dbg !5668
  %mul326 = fmul float %240, %conv325, !dbg !5669
  %243 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5670
  %244 = load i64, i64* %x, align 8, !dbg !5671
  %arrayidx327 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %243, i64 %244, !dbg !5670
  %red328 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx327, i32 0, i32 5, !dbg !5672
  store float %mul326, float* %red328, align 8, !dbg !5673
  %245 = load float, float* %alpha, align 4, !dbg !5674
  %246 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5675
  %green329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %246, i32 0, i32 1, !dbg !5675
  %247 = load i16, i16* %green329, align 2, !dbg !5675
  %conv330 = zext i16 %247 to i32, !dbg !5675
  %conv331 = sitofp i32 %conv330 to float, !dbg !5675
  %mul332 = fmul float %245, %conv331, !dbg !5676
  %248 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5677
  %249 = load i64, i64* %x, align 8, !dbg !5678
  %arrayidx333 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %248, i64 %249, !dbg !5677
  %green334 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx333, i32 0, i32 6, !dbg !5679
  store float %mul332, float* %green334, align 4, !dbg !5680
  %250 = load float, float* %alpha, align 4, !dbg !5681
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5682
  %blue335 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 0, !dbg !5682
  %252 = load i16, i16* %blue335, align 2, !dbg !5682
  %conv336 = zext i16 %252 to i32, !dbg !5682
  %conv337 = sitofp i32 %conv336 to float, !dbg !5682
  %mul338 = fmul float %250, %conv337, !dbg !5683
  %253 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5684
  %254 = load i64, i64* %x, align 8, !dbg !5685
  %arrayidx339 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %253, i64 %254, !dbg !5684
  %blue340 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx339, i32 0, i32 7, !dbg !5686
  store float %mul338, float* %blue340, align 8, !dbg !5687
  %255 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5688
  %matte341 = getelementptr inbounds %struct._Image, %struct._Image* %255, i32 0, i32 6, !dbg !5690
  %256 = load i32, i32* %matte341, align 8, !dbg !5690
  %cmp342 = icmp ne i32 %256, 0, !dbg !5691
  br i1 %cmp342, label %if.then344, label %if.end349, !dbg !5692

if.then344:                                       ; preds = %if.end322
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5693
  %opacity345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 0, i32 3, !dbg !5693
  %258 = load i16, i16* %opacity345, align 2, !dbg !5693
  %conv346 = uitofp i16 %258 to float, !dbg !5694
  %259 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5695
  %260 = load i64, i64* %x, align 8, !dbg !5696
  %arrayidx347 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %259, i64 %260, !dbg !5695
  %opacity348 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx347, i32 0, i32 8, !dbg !5697
  store float %conv346, float* %opacity348, align 4, !dbg !5698
  br label %if.end349, !dbg !5695

if.end349:                                        ; preds = %if.then344, %if.end322
  %261 = load i16*, i16** %indexes, align 8, !dbg !5699
  %cmp350 = icmp ne i16* %261, null, !dbg !5701
  br i1 %cmp350, label %if.then352, label %if.end366, !dbg !5702

if.then352:                                       ; preds = %if.end349
  %262 = load float, float* %alpha, align 4, !dbg !5703
  %263 = load i16*, i16** %indexes, align 8, !dbg !5704
  %264 = load i64, i64* %x, align 8, !dbg !5704
  %add.ptr353 = getelementptr inbounds i16, i16* %263, i64 %264, !dbg !5704
  %cmp354 = icmp eq i16* %add.ptr353, null, !dbg !5704
  br i1 %cmp354, label %cond.true356, label %cond.false357, !dbg !5704

cond.true356:                                     ; preds = %if.then352
  br label %cond.end360, !dbg !5704

cond.false357:                                    ; preds = %if.then352
  %265 = load i16*, i16** %indexes, align 8, !dbg !5704
  %266 = load i64, i64* %x, align 8, !dbg !5704
  %add.ptr358 = getelementptr inbounds i16, i16* %265, i64 %266, !dbg !5704
  %267 = load i16, i16* %add.ptr358, align 2, !dbg !5704
  %conv359 = zext i16 %267 to i32, !dbg !5704
  br label %cond.end360, !dbg !5704

cond.end360:                                      ; preds = %cond.false357, %cond.true356
  %cond361 = phi i32 [ 0, %cond.true356 ], [ %conv359, %cond.false357 ], !dbg !5704
  %conv362 = sitofp i32 %cond361 to float, !dbg !5704
  %mul363 = fmul float %262, %conv362, !dbg !5705
  %268 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5706
  %269 = load i64, i64* %x, align 8, !dbg !5707
  %arrayidx364 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %268, i64 %269, !dbg !5706
  %index365 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx364, i32 0, i32 9, !dbg !5708
  store float %mul363, float* %index365, align 8, !dbg !5709
  br label %if.end366, !dbg !5706

if.end366:                                        ; preds = %cond.end360, %if.end349
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5710
  %incdec.ptr367 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i32 1, !dbg !5710
  store %struct._PixelPacket* %incdec.ptr367, %struct._PixelPacket** %p, align 8, !dbg !5710
  br label %for.inc368, !dbg !5711

for.inc368:                                       ; preds = %if.end366
  %271 = load i64, i64* %x, align 8, !dbg !5712
  %inc369 = add nsw i64 %271, 1, !dbg !5712
  store i64 %inc369, i64* %x, align 8, !dbg !5712
  br label %for.cond307, !dbg !5713, !llvm.loop !5714

for.end370:                                       ; preds = %for.cond307
  %272 = load i64, i64* %number_rows, align 8, !dbg !5716
  %inc371 = add nsw i64 %272, 1, !dbg !5716
  store i64 %inc371, i64* %number_rows, align 8, !dbg !5716
  store i32 0, i32* %next_row, align 4, !dbg !5717
  br label %if.end372, !dbg !5718

if.end372:                                        ; preds = %for.end370, %land.lhs.true294, %while.end
  %273 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5719
  store %struct._MagickPixelPacket* %273, %struct._MagickPixelPacket** %s, align 8, !dbg !5720
  store i64 0, i64* %x, align 8, !dbg !5721
  br label %for.cond373, !dbg !5723

for.cond373:                                      ; preds = %for.inc463, %if.end372
  %274 = load i64, i64* %x, align 8, !dbg !5724
  %275 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5726
  %columns374 = getelementptr inbounds %struct._Image, %struct._Image* %275, i32 0, i32 7, !dbg !5727
  %276 = load i64, i64* %columns374, align 8, !dbg !5727
  %cmp375 = icmp slt i64 %274, %276, !dbg !5728
  br i1 %cmp375, label %for.body377, label %for.end465, !dbg !5729

for.body377:                                      ; preds = %for.cond373
  %277 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5730
  %278 = load i64, i64* %x, align 8, !dbg !5732
  %arrayidx378 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %277, i64 %278, !dbg !5730
  %red379 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx378, i32 0, i32 5, !dbg !5733
  %279 = load float, float* %red379, align 8, !dbg !5733
  %conv380 = fpext float %279 to double, !dbg !5730
  %y381 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5734
  %280 = load double, double* %y381, align 8, !dbg !5734
  %281 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5735
  %282 = load i64, i64* %x, align 8, !dbg !5736
  %arrayidx382 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %281, i64 %282, !dbg !5735
  %red383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx382, i32 0, i32 5, !dbg !5737
  %283 = load float, float* %red383, align 8, !dbg !5737
  %conv384 = fpext float %283 to double, !dbg !5735
  %mul385 = fmul double %280, %conv384, !dbg !5738
  %add386 = fadd double %conv380, %mul385, !dbg !5739
  %conv387 = fptrunc double %add386 to float, !dbg !5730
  %red388 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5740
  store float %conv387, float* %red388, align 8, !dbg !5741
  %284 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5742
  %285 = load i64, i64* %x, align 8, !dbg !5743
  %arrayidx389 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %284, i64 %285, !dbg !5742
  %green390 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx389, i32 0, i32 6, !dbg !5744
  %286 = load float, float* %green390, align 4, !dbg !5744
  %conv391 = fpext float %286 to double, !dbg !5742
  %y392 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5745
  %287 = load double, double* %y392, align 8, !dbg !5745
  %288 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5746
  %289 = load i64, i64* %x, align 8, !dbg !5747
  %arrayidx393 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %288, i64 %289, !dbg !5746
  %green394 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx393, i32 0, i32 6, !dbg !5748
  %290 = load float, float* %green394, align 4, !dbg !5748
  %conv395 = fpext float %290 to double, !dbg !5746
  %mul396 = fmul double %287, %conv395, !dbg !5749
  %add397 = fadd double %conv391, %mul396, !dbg !5750
  %conv398 = fptrunc double %add397 to float, !dbg !5742
  %green399 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5751
  store float %conv398, float* %green399, align 4, !dbg !5752
  %291 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5753
  %292 = load i64, i64* %x, align 8, !dbg !5754
  %arrayidx400 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %291, i64 %292, !dbg !5753
  %blue401 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx400, i32 0, i32 7, !dbg !5755
  %293 = load float, float* %blue401, align 8, !dbg !5755
  %conv402 = fpext float %293 to double, !dbg !5753
  %y403 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5756
  %294 = load double, double* %y403, align 8, !dbg !5756
  %295 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5757
  %296 = load i64, i64* %x, align 8, !dbg !5758
  %arrayidx404 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %295, i64 %296, !dbg !5757
  %blue405 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx404, i32 0, i32 7, !dbg !5759
  %297 = load float, float* %blue405, align 8, !dbg !5759
  %conv406 = fpext float %297 to double, !dbg !5757
  %mul407 = fmul double %294, %conv406, !dbg !5760
  %add408 = fadd double %conv402, %mul407, !dbg !5761
  %conv409 = fptrunc double %add408 to float, !dbg !5753
  %blue410 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5762
  store float %conv409, float* %blue410, align 8, !dbg !5763
  %298 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5764
  %matte411 = getelementptr inbounds %struct._Image, %struct._Image* %298, i32 0, i32 6, !dbg !5766
  %299 = load i32, i32* %matte411, align 8, !dbg !5766
  %cmp412 = icmp ne i32 %299, 0, !dbg !5767
  br i1 %cmp412, label %if.then414, label %if.end426, !dbg !5768

if.then414:                                       ; preds = %for.body377
  %300 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5769
  %301 = load i64, i64* %x, align 8, !dbg !5770
  %arrayidx415 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %300, i64 %301, !dbg !5769
  %opacity416 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx415, i32 0, i32 8, !dbg !5771
  %302 = load float, float* %opacity416, align 4, !dbg !5771
  %conv417 = fpext float %302 to double, !dbg !5769
  %y418 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5772
  %303 = load double, double* %y418, align 8, !dbg !5772
  %304 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5773
  %305 = load i64, i64* %x, align 8, !dbg !5774
  %arrayidx419 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %304, i64 %305, !dbg !5773
  %opacity420 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx419, i32 0, i32 8, !dbg !5775
  %306 = load float, float* %opacity420, align 4, !dbg !5775
  %conv421 = fpext float %306 to double, !dbg !5773
  %mul422 = fmul double %303, %conv421, !dbg !5776
  %add423 = fadd double %conv417, %mul422, !dbg !5777
  %conv424 = fptrunc double %add423 to float, !dbg !5769
  %opacity425 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5778
  store float %conv424, float* %opacity425, align 4, !dbg !5779
  br label %if.end426, !dbg !5780

if.end426:                                        ; preds = %if.then414, %for.body377
  %307 = load i16*, i16** %scale_indexes, align 8, !dbg !5781
  %cmp427 = icmp ne i16* %307, null, !dbg !5783
  br i1 %cmp427, label %if.then429, label %if.end441, !dbg !5784

if.then429:                                       ; preds = %if.end426
  %308 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5785
  %309 = load i64, i64* %x, align 8, !dbg !5786
  %arrayidx430 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %308, i64 %309, !dbg !5785
  %index431 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx430, i32 0, i32 9, !dbg !5787
  %310 = load float, float* %index431, align 8, !dbg !5787
  %conv432 = fpext float %310 to double, !dbg !5785
  %y433 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5788
  %311 = load double, double* %y433, align 8, !dbg !5788
  %312 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !5789
  %313 = load i64, i64* %x, align 8, !dbg !5790
  %arrayidx434 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %312, i64 %313, !dbg !5789
  %index435 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx434, i32 0, i32 9, !dbg !5791
  %314 = load float, float* %index435, align 8, !dbg !5791
  %conv436 = fpext float %314 to double, !dbg !5789
  %mul437 = fmul double %311, %conv436, !dbg !5792
  %add438 = fadd double %conv432, %mul437, !dbg !5793
  %conv439 = fptrunc double %add438 to float, !dbg !5785
  %index440 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5794
  store float %conv439, float* %index440, align 8, !dbg !5795
  br label %if.end441, !dbg !5796

if.end441:                                        ; preds = %if.then429, %if.end426
  %red442 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5797
  %315 = load float, float* %red442, align 8, !dbg !5797
  %316 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5798
  %red443 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %316, i32 0, i32 5, !dbg !5799
  store float %315, float* %red443, align 8, !dbg !5800
  %green444 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5801
  %317 = load float, float* %green444, align 4, !dbg !5801
  %318 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5802
  %green445 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %318, i32 0, i32 6, !dbg !5803
  store float %317, float* %green445, align 4, !dbg !5804
  %blue446 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5805
  %319 = load float, float* %blue446, align 8, !dbg !5805
  %320 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5806
  %blue447 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %320, i32 0, i32 7, !dbg !5807
  store float %319, float* %blue447, align 8, !dbg !5808
  %321 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5809
  %matte448 = getelementptr inbounds %struct._Image, %struct._Image* %321, i32 0, i32 6, !dbg !5811
  %322 = load i32, i32* %matte448, align 8, !dbg !5811
  %cmp449 = icmp ne i32 %322, 0, !dbg !5812
  br i1 %cmp449, label %if.then451, label %if.end454, !dbg !5813

if.then451:                                       ; preds = %if.end441
  %opacity452 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5814
  %323 = load float, float* %opacity452, align 4, !dbg !5814
  %324 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5815
  %opacity453 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %324, i32 0, i32 8, !dbg !5816
  store float %323, float* %opacity453, align 4, !dbg !5817
  br label %if.end454, !dbg !5815

if.end454:                                        ; preds = %if.then451, %if.end441
  %325 = load i16*, i16** %scale_indexes, align 8, !dbg !5818
  %cmp455 = icmp ne i16* %325, null, !dbg !5820
  br i1 %cmp455, label %if.then457, label %if.end460, !dbg !5821

if.then457:                                       ; preds = %if.end454
  %index458 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5822
  %326 = load float, float* %index458, align 8, !dbg !5822
  %327 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5823
  %index459 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %327, i32 0, i32 9, !dbg !5824
  store float %326, float* %index459, align 8, !dbg !5825
  br label %if.end460, !dbg !5823

if.end460:                                        ; preds = %if.then457, %if.end454
  %328 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5826
  %incdec.ptr461 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %328, i32 1, !dbg !5826
  store %struct._MagickPixelPacket* %incdec.ptr461, %struct._MagickPixelPacket** %s, align 8, !dbg !5826
  %329 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !5827
  %330 = load i64, i64* %x, align 8, !dbg !5828
  %arrayidx462 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %329, i64 %330, !dbg !5827
  %331 = bitcast %struct._MagickPixelPacket* %arrayidx462 to i8*, !dbg !5829
  %332 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !5829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %331, i8* align 8 %332, i64 56, i1 false), !dbg !5829
  br label %for.inc463, !dbg !5830

for.inc463:                                       ; preds = %if.end460
  %333 = load i64, i64* %x, align 8, !dbg !5831
  %inc464 = add nsw i64 %333, 1, !dbg !5831
  store i64 %inc464, i64* %x, align 8, !dbg !5831
  br label %for.cond373, !dbg !5832, !llvm.loop !5833

for.end465:                                       ; preds = %for.cond373
  %y466 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5835
  %334 = load double, double* %y466, align 8, !dbg !5835
  %y467 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5836
  %335 = load double, double* %y467, align 8, !dbg !5837
  %sub468 = fsub double %335, %334, !dbg !5837
  store double %sub468, double* %y467, align 8, !dbg !5837
  %y469 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5838
  %336 = load double, double* %y469, align 8, !dbg !5838
  %cmp470 = fcmp ole double %336, 0.000000e+00, !dbg !5840
  br i1 %cmp470, label %if.then472, label %if.end479, !dbg !5841

if.then472:                                       ; preds = %for.end465
  %337 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5842
  %rows473 = getelementptr inbounds %struct._Image, %struct._Image* %337, i32 0, i32 8, !dbg !5844
  %338 = load i64, i64* %rows473, align 8, !dbg !5844
  %conv474 = uitofp i64 %338 to double, !dbg !5845
  %339 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5846
  %rows475 = getelementptr inbounds %struct._Image, %struct._Image* %339, i32 0, i32 8, !dbg !5847
  %340 = load i64, i64* %rows475, align 8, !dbg !5847
  %conv476 = uitofp i64 %340 to double, !dbg !5848
  %div477 = fdiv double %conv474, %conv476, !dbg !5849
  %y478 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 1, !dbg !5850
  store double %div477, double* %y478, align 8, !dbg !5851
  store i32 1, i32* %next_row, align 4, !dbg !5852
  br label %if.end479, !dbg !5853

if.end479:                                        ; preds = %if.then472, %for.end465
  %y480 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 1, !dbg !5854
  store double 1.000000e+00, double* %y480, align 8, !dbg !5855
  br label %if.end481

if.end481:                                        ; preds = %if.end479, %for.end
  %341 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5856
  %columns482 = getelementptr inbounds %struct._Image, %struct._Image* %341, i32 0, i32 7, !dbg !5858
  %342 = load i64, i64* %columns482, align 8, !dbg !5858
  %343 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5859
  %columns483 = getelementptr inbounds %struct._Image, %struct._Image* %343, i32 0, i32 7, !dbg !5860
  %344 = load i64, i64* %columns483, align 8, !dbg !5860
  %cmp484 = icmp eq i64 %342, %344, !dbg !5861
  br i1 %cmp484, label %if.then486, label %if.else543, !dbg !5862

if.then486:                                       ; preds = %if.end481
  %345 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5863
  store %struct._MagickPixelPacket* %345, %struct._MagickPixelPacket** %s, align 8, !dbg !5865
  store i64 0, i64* %x, align 8, !dbg !5866
  br label %for.cond487, !dbg !5868

for.cond487:                                      ; preds = %for.inc540, %if.then486
  %346 = load i64, i64* %x, align 8, !dbg !5869
  %347 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5871
  %columns488 = getelementptr inbounds %struct._Image, %struct._Image* %347, i32 0, i32 7, !dbg !5872
  %348 = load i64, i64* %columns488, align 8, !dbg !5872
  %cmp489 = icmp slt i64 %346, %348, !dbg !5873
  br i1 %cmp489, label %for.body491, label %for.end542, !dbg !5874

for.body491:                                      ; preds = %for.cond487
  %349 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5875
  %matte492 = getelementptr inbounds %struct._Image, %struct._Image* %349, i32 0, i32 6, !dbg !5878
  %350 = load i32, i32* %matte492, align 8, !dbg !5878
  %cmp493 = icmp ne i32 %350, 0, !dbg !5879
  br i1 %cmp493, label %if.then495, label %if.end501, !dbg !5880

if.then495:                                       ; preds = %for.body491
  %351 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5881
  %opacity496 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %351, i32 0, i32 8, !dbg !5882
  %352 = load float, float* %opacity496, align 4, !dbg !5882
  %sub497 = fsub float 6.553500e+04, %352, !dbg !5883
  %conv498 = fpext float %sub497 to double, !dbg !5884
  %mul499 = fmul double 0x3EF0001000100010, %conv498, !dbg !5885
  %conv500 = fptrunc double %mul499 to float, !dbg !5886
  store float %conv500, float* %alpha, align 4, !dbg !5887
  br label %if.end501, !dbg !5888

if.end501:                                        ; preds = %if.then495, %for.body491
  %353 = load float, float* %alpha, align 4, !dbg !5889
  %conv502 = fpext float %353 to double, !dbg !5889
  %call503 = call double @PerceptibleReciprocal(double %conv502), !dbg !5890
  %conv504 = fptrunc double %call503 to float, !dbg !5890
  store float %conv504, float* %alpha, align 4, !dbg !5891
  %354 = load float, float* %alpha, align 4, !dbg !5892
  %355 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5892
  %red505 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %355, i32 0, i32 5, !dbg !5892
  %356 = load float, float* %red505, align 8, !dbg !5892
  %mul506 = fmul float %354, %356, !dbg !5892
  %call507 = call zeroext i16 @ClampToQuantum(float %mul506), !dbg !5892
  %357 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5892
  %red508 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %357, i32 0, i32 2, !dbg !5892
  store i16 %call507, i16* %red508, align 2, !dbg !5892
  %358 = load float, float* %alpha, align 4, !dbg !5893
  %359 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5893
  %green509 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %359, i32 0, i32 6, !dbg !5893
  %360 = load float, float* %green509, align 4, !dbg !5893
  %mul510 = fmul float %358, %360, !dbg !5893
  %call511 = call zeroext i16 @ClampToQuantum(float %mul510), !dbg !5893
  %361 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5893
  %green512 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %361, i32 0, i32 1, !dbg !5893
  store i16 %call511, i16* %green512, align 2, !dbg !5893
  %362 = load float, float* %alpha, align 4, !dbg !5894
  %363 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5894
  %blue513 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %363, i32 0, i32 7, !dbg !5894
  %364 = load float, float* %blue513, align 8, !dbg !5894
  %mul514 = fmul float %362, %364, !dbg !5894
  %call515 = call zeroext i16 @ClampToQuantum(float %mul514), !dbg !5894
  %365 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5894
  %blue516 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %365, i32 0, i32 0, !dbg !5894
  store i16 %call515, i16* %blue516, align 2, !dbg !5894
  %366 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5895
  %matte517 = getelementptr inbounds %struct._Image, %struct._Image* %366, i32 0, i32 6, !dbg !5897
  %367 = load i32, i32* %matte517, align 8, !dbg !5897
  %cmp518 = icmp ne i32 %367, 0, !dbg !5898
  br i1 %cmp518, label %if.then520, label %if.end524, !dbg !5899

if.then520:                                       ; preds = %if.end501
  %368 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5900
  %opacity521 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %368, i32 0, i32 8, !dbg !5900
  %369 = load float, float* %opacity521, align 4, !dbg !5900
  %call522 = call zeroext i16 @ClampToQuantum(float %369), !dbg !5900
  %370 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5900
  %opacity523 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %370, i32 0, i32 3, !dbg !5900
  store i16 %call522, i16* %opacity523, align 2, !dbg !5900
  br label %if.end524, !dbg !5900

if.end524:                                        ; preds = %if.then520, %if.end501
  %371 = load i16*, i16** %scale_indexes, align 8, !dbg !5901
  %cmp525 = icmp ne i16* %371, null, !dbg !5903
  br i1 %cmp525, label %if.then527, label %if.end537, !dbg !5904

if.then527:                                       ; preds = %if.end524
  %372 = load i16*, i16** %scale_indexes, align 8, !dbg !5905
  %373 = load i64, i64* %x, align 8, !dbg !5905
  %add.ptr528 = getelementptr inbounds i16, i16* %372, i64 %373, !dbg !5905
  %cmp529 = icmp ne i16* %add.ptr528, null, !dbg !5905
  br i1 %cmp529, label %if.then531, label %if.end536, !dbg !5908

if.then531:                                       ; preds = %if.then527
  %374 = load float, float* %alpha, align 4, !dbg !5905
  %375 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5905
  %index532 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %375, i32 0, i32 9, !dbg !5905
  %376 = load float, float* %index532, align 8, !dbg !5905
  %mul533 = fmul float %374, %376, !dbg !5905
  %call534 = call zeroext i16 @ClampToQuantum(float %mul533), !dbg !5905
  %377 = load i16*, i16** %scale_indexes, align 8, !dbg !5905
  %378 = load i64, i64* %x, align 8, !dbg !5905
  %add.ptr535 = getelementptr inbounds i16, i16* %377, i64 %378, !dbg !5905
  store i16 %call534, i16* %add.ptr535, align 2, !dbg !5905
  br label %if.end536, !dbg !5905

if.end536:                                        ; preds = %if.then531, %if.then527
  br label %if.end537, !dbg !5908

if.end537:                                        ; preds = %if.end536, %if.end524
  %379 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5909
  %incdec.ptr538 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %379, i32 1, !dbg !5909
  store %struct._PixelPacket* %incdec.ptr538, %struct._PixelPacket** %q, align 8, !dbg !5909
  %380 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5910
  %incdec.ptr539 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %380, i32 1, !dbg !5910
  store %struct._MagickPixelPacket* %incdec.ptr539, %struct._MagickPixelPacket** %s, align 8, !dbg !5910
  br label %for.inc540, !dbg !5911

for.inc540:                                       ; preds = %if.end537
  %381 = load i64, i64* %x, align 8, !dbg !5912
  %inc541 = add nsw i64 %381, 1, !dbg !5912
  store i64 %inc541, i64* %x, align 8, !dbg !5912
  br label %for.cond487, !dbg !5913, !llvm.loop !5914

for.end542:                                       ; preds = %for.cond487
  br label %if.end844, !dbg !5916

if.else543:                                       ; preds = %if.end481
  %382 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !5917
  %383 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !5917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* align 8 %383, i64 56, i1 false), !dbg !5917
  store i32 0, i32* %next_column, align 4, !dbg !5919
  %x544 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5920
  store double 1.000000e+00, double* %x544, align 8, !dbg !5921
  %384 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scanline, align 8, !dbg !5922
  store %struct._MagickPixelPacket* %384, %struct._MagickPixelPacket** %s, align 8, !dbg !5923
  %385 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !5924
  store %struct._MagickPixelPacket* %385, %struct._MagickPixelPacket** %t, align 8, !dbg !5925
  store i64 0, i64* %x, align 8, !dbg !5926
  br label %for.cond545, !dbg !5928

for.cond545:                                      ; preds = %for.inc703, %if.else543
  %386 = load i64, i64* %x, align 8, !dbg !5929
  %387 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5931
  %columns546 = getelementptr inbounds %struct._Image, %struct._Image* %387, i32 0, i32 7, !dbg !5932
  %388 = load i64, i64* %columns546, align 8, !dbg !5932
  %cmp547 = icmp slt i64 %386, %388, !dbg !5933
  br i1 %cmp547, label %for.body549, label %for.end705, !dbg !5934

for.body549:                                      ; preds = %for.cond545
  %389 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !5935
  %columns550 = getelementptr inbounds %struct._Image, %struct._Image* %389, i32 0, i32 7, !dbg !5937
  %390 = load i64, i64* %columns550, align 8, !dbg !5937
  %conv551 = uitofp i64 %390 to double, !dbg !5938
  %391 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5939
  %columns552 = getelementptr inbounds %struct._Image, %struct._Image* %391, i32 0, i32 7, !dbg !5940
  %392 = load i64, i64* %columns552, align 8, !dbg !5940
  %conv553 = uitofp i64 %392 to double, !dbg !5941
  %div554 = fdiv double %conv551, %conv553, !dbg !5942
  %x555 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !5943
  store double %div554, double* %x555, align 8, !dbg !5944
  br label %while.cond556, !dbg !5945

while.cond556:                                    ; preds = %if.end634, %for.body549
  %x557 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !5946
  %393 = load double, double* %x557, align 8, !dbg !5946
  %x558 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5947
  %394 = load double, double* %x558, align 8, !dbg !5947
  %cmp559 = fcmp oge double %393, %394, !dbg !5948
  br i1 %cmp559, label %while.body561, label %while.end639, !dbg !5945

while.body561:                                    ; preds = %while.cond556
  %395 = load i32, i32* %next_column, align 4, !dbg !5949
  %cmp562 = icmp ne i32 %395, 0, !dbg !5952
  br i1 %cmp562, label %if.then564, label %if.end566, !dbg !5953

if.then564:                                       ; preds = %while.body561
  %396 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !5954
  %397 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !5954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %396, i8* align 8 %397, i64 56, i1 false), !dbg !5954
  %398 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !5956
  %incdec.ptr565 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %398, i32 1, !dbg !5956
  store %struct._MagickPixelPacket* %incdec.ptr565, %struct._MagickPixelPacket** %t, align 8, !dbg !5956
  br label %if.end566, !dbg !5957

if.end566:                                        ; preds = %if.then564, %while.body561
  %x567 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5958
  %399 = load double, double* %x567, align 8, !dbg !5958
  %400 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5959
  %red568 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %400, i32 0, i32 5, !dbg !5960
  %401 = load float, float* %red568, align 8, !dbg !5960
  %conv569 = fpext float %401 to double, !dbg !5959
  %mul570 = fmul double %399, %conv569, !dbg !5961
  %red571 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5962
  %402 = load float, float* %red571, align 8, !dbg !5963
  %conv572 = fpext float %402 to double, !dbg !5963
  %add573 = fadd double %conv572, %mul570, !dbg !5963
  %conv574 = fptrunc double %add573 to float, !dbg !5963
  store float %conv574, float* %red571, align 8, !dbg !5963
  %x575 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5964
  %403 = load double, double* %x575, align 8, !dbg !5964
  %404 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5965
  %green576 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %404, i32 0, i32 6, !dbg !5966
  %405 = load float, float* %green576, align 4, !dbg !5966
  %conv577 = fpext float %405 to double, !dbg !5965
  %mul578 = fmul double %403, %conv577, !dbg !5967
  %green579 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5968
  %406 = load float, float* %green579, align 4, !dbg !5969
  %conv580 = fpext float %406 to double, !dbg !5969
  %add581 = fadd double %conv580, %mul578, !dbg !5969
  %conv582 = fptrunc double %add581 to float, !dbg !5969
  store float %conv582, float* %green579, align 4, !dbg !5969
  %x583 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5970
  %407 = load double, double* %x583, align 8, !dbg !5970
  %408 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5971
  %blue584 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %408, i32 0, i32 7, !dbg !5972
  %409 = load float, float* %blue584, align 8, !dbg !5972
  %conv585 = fpext float %409 to double, !dbg !5971
  %mul586 = fmul double %407, %conv585, !dbg !5973
  %blue587 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5974
  %410 = load float, float* %blue587, align 8, !dbg !5975
  %conv588 = fpext float %410 to double, !dbg !5975
  %add589 = fadd double %conv588, %mul586, !dbg !5975
  %conv590 = fptrunc double %add589 to float, !dbg !5975
  store float %conv590, float* %blue587, align 8, !dbg !5975
  %411 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5976
  %matte591 = getelementptr inbounds %struct._Image, %struct._Image* %411, i32 0, i32 6, !dbg !5978
  %412 = load i32, i32* %matte591, align 8, !dbg !5978
  %cmp592 = icmp ne i32 %412, 0, !dbg !5979
  br i1 %cmp592, label %if.then594, label %if.end603, !dbg !5980

if.then594:                                       ; preds = %if.end566
  %x595 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5981
  %413 = load double, double* %x595, align 8, !dbg !5981
  %414 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5982
  %opacity596 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %414, i32 0, i32 8, !dbg !5983
  %415 = load float, float* %opacity596, align 4, !dbg !5983
  %conv597 = fpext float %415 to double, !dbg !5982
  %mul598 = fmul double %413, %conv597, !dbg !5984
  %opacity599 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5985
  %416 = load float, float* %opacity599, align 4, !dbg !5986
  %conv600 = fpext float %416 to double, !dbg !5986
  %add601 = fadd double %conv600, %mul598, !dbg !5986
  %conv602 = fptrunc double %add601 to float, !dbg !5986
  store float %conv602, float* %opacity599, align 4, !dbg !5986
  br label %if.end603, !dbg !5987

if.end603:                                        ; preds = %if.then594, %if.end566
  %417 = load i16*, i16** %scale_indexes, align 8, !dbg !5988
  %cmp604 = icmp ne i16* %417, null, !dbg !5990
  br i1 %cmp604, label %if.then606, label %if.end615, !dbg !5991

if.then606:                                       ; preds = %if.end603
  %x607 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !5992
  %418 = load double, double* %x607, align 8, !dbg !5992
  %419 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !5993
  %index608 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %419, i32 0, i32 9, !dbg !5994
  %420 = load float, float* %index608, align 8, !dbg !5994
  %conv609 = fpext float %420 to double, !dbg !5993
  %mul610 = fmul double %418, %conv609, !dbg !5995
  %index611 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5996
  %421 = load float, float* %index611, align 8, !dbg !5997
  %conv612 = fpext float %421 to double, !dbg !5997
  %add613 = fadd double %conv612, %mul610, !dbg !5997
  %conv614 = fptrunc double %add613 to float, !dbg !5997
  store float %conv614, float* %index611, align 8, !dbg !5997
  br label %if.end615, !dbg !5998

if.end615:                                        ; preds = %if.then606, %if.end603
  %red616 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5999
  %422 = load float, float* %red616, align 8, !dbg !5999
  %423 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6000
  %red617 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %423, i32 0, i32 5, !dbg !6001
  store float %422, float* %red617, align 8, !dbg !6002
  %green618 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !6003
  %424 = load float, float* %green618, align 4, !dbg !6003
  %425 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6004
  %green619 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %425, i32 0, i32 6, !dbg !6005
  store float %424, float* %green619, align 4, !dbg !6006
  %blue620 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !6007
  %426 = load float, float* %blue620, align 8, !dbg !6007
  %427 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6008
  %blue621 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %427, i32 0, i32 7, !dbg !6009
  store float %426, float* %blue621, align 8, !dbg !6010
  %428 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6011
  %matte622 = getelementptr inbounds %struct._Image, %struct._Image* %428, i32 0, i32 6, !dbg !6013
  %429 = load i32, i32* %matte622, align 8, !dbg !6013
  %cmp623 = icmp ne i32 %429, 0, !dbg !6014
  br i1 %cmp623, label %if.then625, label %if.end628, !dbg !6015

if.then625:                                       ; preds = %if.end615
  %opacity626 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !6016
  %430 = load float, float* %opacity626, align 4, !dbg !6016
  %431 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6017
  %opacity627 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %431, i32 0, i32 8, !dbg !6018
  store float %430, float* %opacity627, align 4, !dbg !6019
  br label %if.end628, !dbg !6017

if.end628:                                        ; preds = %if.then625, %if.end615
  %432 = load i16*, i16** %scale_indexes, align 8, !dbg !6020
  %cmp629 = icmp ne i16* %432, null, !dbg !6022
  br i1 %cmp629, label %if.then631, label %if.end634, !dbg !6023

if.then631:                                       ; preds = %if.end628
  %index632 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !6024
  %433 = load float, float* %index632, align 8, !dbg !6024
  %434 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6025
  %index633 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %434, i32 0, i32 9, !dbg !6026
  store float %433, float* %index633, align 8, !dbg !6027
  br label %if.end634, !dbg !6025

if.end634:                                        ; preds = %if.then631, %if.end628
  %x635 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6028
  %435 = load double, double* %x635, align 8, !dbg !6028
  %x636 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6029
  %436 = load double, double* %x636, align 8, !dbg !6030
  %sub637 = fsub double %436, %435, !dbg !6030
  store double %sub637, double* %x636, align 8, !dbg !6030
  %x638 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6031
  store double 1.000000e+00, double* %x638, align 8, !dbg !6032
  store i32 1, i32* %next_column, align 4, !dbg !6033
  br label %while.cond556, !dbg !5945, !llvm.loop !6034

while.end639:                                     ; preds = %while.cond556
  %x640 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6036
  %437 = load double, double* %x640, align 8, !dbg !6036
  %cmp641 = fcmp ogt double %437, 0.000000e+00, !dbg !6038
  br i1 %cmp641, label %if.then643, label %if.end701, !dbg !6039

if.then643:                                       ; preds = %while.end639
  %438 = load i32, i32* %next_column, align 4, !dbg !6040
  %cmp644 = icmp ne i32 %438, 0, !dbg !6043
  br i1 %cmp644, label %if.then646, label %if.end648, !dbg !6044

if.then646:                                       ; preds = %if.then643
  %439 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !6045
  %440 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %439, i8* align 8 %440, i64 56, i1 false), !dbg !6045
  store i32 0, i32* %next_column, align 4, !dbg !6047
  %441 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6048
  %incdec.ptr647 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %441, i32 1, !dbg !6048
  store %struct._MagickPixelPacket* %incdec.ptr647, %struct._MagickPixelPacket** %t, align 8, !dbg !6048
  br label %if.end648, !dbg !6049

if.end648:                                        ; preds = %if.then646, %if.then643
  %x649 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6050
  %442 = load double, double* %x649, align 8, !dbg !6050
  %443 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6051
  %red650 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %443, i32 0, i32 5, !dbg !6052
  %444 = load float, float* %red650, align 8, !dbg !6052
  %conv651 = fpext float %444 to double, !dbg !6051
  %mul652 = fmul double %442, %conv651, !dbg !6053
  %red653 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !6054
  %445 = load float, float* %red653, align 8, !dbg !6055
  %conv654 = fpext float %445 to double, !dbg !6055
  %add655 = fadd double %conv654, %mul652, !dbg !6055
  %conv656 = fptrunc double %add655 to float, !dbg !6055
  store float %conv656, float* %red653, align 8, !dbg !6055
  %x657 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6056
  %446 = load double, double* %x657, align 8, !dbg !6056
  %447 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6057
  %green658 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %447, i32 0, i32 6, !dbg !6058
  %448 = load float, float* %green658, align 4, !dbg !6058
  %conv659 = fpext float %448 to double, !dbg !6057
  %mul660 = fmul double %446, %conv659, !dbg !6059
  %green661 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !6060
  %449 = load float, float* %green661, align 4, !dbg !6061
  %conv662 = fpext float %449 to double, !dbg !6061
  %add663 = fadd double %conv662, %mul660, !dbg !6061
  %conv664 = fptrunc double %add663 to float, !dbg !6061
  store float %conv664, float* %green661, align 4, !dbg !6061
  %x665 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6062
  %450 = load double, double* %x665, align 8, !dbg !6062
  %451 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6063
  %blue666 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %451, i32 0, i32 7, !dbg !6064
  %452 = load float, float* %blue666, align 8, !dbg !6064
  %conv667 = fpext float %452 to double, !dbg !6063
  %mul668 = fmul double %450, %conv667, !dbg !6065
  %blue669 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !6066
  %453 = load float, float* %blue669, align 8, !dbg !6067
  %conv670 = fpext float %453 to double, !dbg !6067
  %add671 = fadd double %conv670, %mul668, !dbg !6067
  %conv672 = fptrunc double %add671 to float, !dbg !6067
  store float %conv672, float* %blue669, align 8, !dbg !6067
  %454 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6068
  %matte673 = getelementptr inbounds %struct._Image, %struct._Image* %454, i32 0, i32 6, !dbg !6070
  %455 = load i32, i32* %matte673, align 8, !dbg !6070
  %cmp674 = icmp ne i32 %455, 0, !dbg !6071
  br i1 %cmp674, label %if.then676, label %if.end685, !dbg !6072

if.then676:                                       ; preds = %if.end648
  %x677 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6073
  %456 = load double, double* %x677, align 8, !dbg !6073
  %457 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6074
  %opacity678 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %457, i32 0, i32 8, !dbg !6075
  %458 = load float, float* %opacity678, align 4, !dbg !6075
  %conv679 = fpext float %458 to double, !dbg !6074
  %mul680 = fmul double %456, %conv679, !dbg !6076
  %opacity681 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !6077
  %459 = load float, float* %opacity681, align 4, !dbg !6078
  %conv682 = fpext float %459 to double, !dbg !6078
  %add683 = fadd double %conv682, %mul680, !dbg !6078
  %conv684 = fptrunc double %add683 to float, !dbg !6078
  store float %conv684, float* %opacity681, align 4, !dbg !6078
  br label %if.end685, !dbg !6079

if.end685:                                        ; preds = %if.then676, %if.end648
  %460 = load i16*, i16** %scale_indexes, align 8, !dbg !6080
  %cmp686 = icmp ne i16* %460, null, !dbg !6082
  br i1 %cmp686, label %if.then688, label %if.end697, !dbg !6083

if.then688:                                       ; preds = %if.end685
  %x689 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6084
  %461 = load double, double* %x689, align 8, !dbg !6084
  %462 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6085
  %index690 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %462, i32 0, i32 9, !dbg !6086
  %463 = load float, float* %index690, align 8, !dbg !6086
  %conv691 = fpext float %463 to double, !dbg !6085
  %mul692 = fmul double %461, %conv691, !dbg !6087
  %index693 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !6088
  %464 = load float, float* %index693, align 8, !dbg !6089
  %conv694 = fpext float %464 to double, !dbg !6089
  %add695 = fadd double %conv694, %mul692, !dbg !6089
  %conv696 = fptrunc double %add695 to float, !dbg !6089
  store float %conv696, float* %index693, align 8, !dbg !6089
  br label %if.end697, !dbg !6090

if.end697:                                        ; preds = %if.then688, %if.end685
  %x698 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %scale, i32 0, i32 0, !dbg !6091
  %465 = load double, double* %x698, align 8, !dbg !6091
  %x699 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6092
  %466 = load double, double* %x699, align 8, !dbg !6093
  %sub700 = fsub double %466, %465, !dbg !6093
  store double %sub700, double* %x699, align 8, !dbg !6093
  br label %if.end701, !dbg !6094

if.end701:                                        ; preds = %if.end697, %while.end639
  %467 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6095
  %incdec.ptr702 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %467, i32 1, !dbg !6095
  store %struct._MagickPixelPacket* %incdec.ptr702, %struct._MagickPixelPacket** %s, align 8, !dbg !6095
  br label %for.inc703, !dbg !6096

for.inc703:                                       ; preds = %if.end701
  %468 = load i64, i64* %x, align 8, !dbg !6097
  %inc704 = add nsw i64 %468, 1, !dbg !6097
  store i64 %inc704, i64* %x, align 8, !dbg !6097
  br label %for.cond545, !dbg !6098, !llvm.loop !6099

for.end705:                                       ; preds = %for.cond545
  %x706 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6101
  %469 = load double, double* %x706, align 8, !dbg !6101
  %cmp707 = fcmp ogt double %469, 0.000000e+00, !dbg !6103
  br i1 %cmp707, label %if.then709, label %if.end760, !dbg !6104

if.then709:                                       ; preds = %for.end705
  %470 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6105
  %incdec.ptr710 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %470, i32 -1, !dbg !6105
  store %struct._MagickPixelPacket* %incdec.ptr710, %struct._MagickPixelPacket** %s, align 8, !dbg !6105
  %x711 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6107
  %471 = load double, double* %x711, align 8, !dbg !6107
  %472 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6108
  %red712 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %472, i32 0, i32 5, !dbg !6109
  %473 = load float, float* %red712, align 8, !dbg !6109
  %conv713 = fpext float %473 to double, !dbg !6108
  %mul714 = fmul double %471, %conv713, !dbg !6110
  %red715 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !6111
  %474 = load float, float* %red715, align 8, !dbg !6112
  %conv716 = fpext float %474 to double, !dbg !6112
  %add717 = fadd double %conv716, %mul714, !dbg !6112
  %conv718 = fptrunc double %add717 to float, !dbg !6112
  store float %conv718, float* %red715, align 8, !dbg !6112
  %x719 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6113
  %475 = load double, double* %x719, align 8, !dbg !6113
  %476 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6114
  %green720 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %476, i32 0, i32 6, !dbg !6115
  %477 = load float, float* %green720, align 4, !dbg !6115
  %conv721 = fpext float %477 to double, !dbg !6114
  %mul722 = fmul double %475, %conv721, !dbg !6116
  %green723 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !6117
  %478 = load float, float* %green723, align 4, !dbg !6118
  %conv724 = fpext float %478 to double, !dbg !6118
  %add725 = fadd double %conv724, %mul722, !dbg !6118
  %conv726 = fptrunc double %add725 to float, !dbg !6118
  store float %conv726, float* %green723, align 4, !dbg !6118
  %x727 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6119
  %479 = load double, double* %x727, align 8, !dbg !6119
  %480 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6120
  %blue728 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %480, i32 0, i32 7, !dbg !6121
  %481 = load float, float* %blue728, align 8, !dbg !6121
  %conv729 = fpext float %481 to double, !dbg !6120
  %mul730 = fmul double %479, %conv729, !dbg !6122
  %blue731 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !6123
  %482 = load float, float* %blue731, align 8, !dbg !6124
  %conv732 = fpext float %482 to double, !dbg !6124
  %add733 = fadd double %conv732, %mul730, !dbg !6124
  %conv734 = fptrunc double %add733 to float, !dbg !6124
  store float %conv734, float* %blue731, align 8, !dbg !6124
  %483 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6125
  %matte735 = getelementptr inbounds %struct._Image, %struct._Image* %483, i32 0, i32 6, !dbg !6127
  %484 = load i32, i32* %matte735, align 8, !dbg !6127
  %cmp736 = icmp ne i32 %484, 0, !dbg !6128
  br i1 %cmp736, label %if.then738, label %if.end747, !dbg !6129

if.then738:                                       ; preds = %if.then709
  %x739 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6130
  %485 = load double, double* %x739, align 8, !dbg !6130
  %486 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6131
  %opacity740 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %486, i32 0, i32 8, !dbg !6132
  %487 = load float, float* %opacity740, align 4, !dbg !6132
  %conv741 = fpext float %487 to double, !dbg !6131
  %mul742 = fmul double %485, %conv741, !dbg !6133
  %opacity743 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !6134
  %488 = load float, float* %opacity743, align 4, !dbg !6135
  %conv744 = fpext float %488 to double, !dbg !6135
  %add745 = fadd double %conv744, %mul742, !dbg !6135
  %conv746 = fptrunc double %add745 to float, !dbg !6135
  store float %conv746, float* %opacity743, align 4, !dbg !6135
  br label %if.end747, !dbg !6136

if.end747:                                        ; preds = %if.then738, %if.then709
  %489 = load i16*, i16** %scale_indexes, align 8, !dbg !6137
  %cmp748 = icmp ne i16* %489, null, !dbg !6139
  br i1 %cmp748, label %if.then750, label %if.end759, !dbg !6140

if.then750:                                       ; preds = %if.end747
  %x751 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %span, i32 0, i32 0, !dbg !6141
  %490 = load double, double* %x751, align 8, !dbg !6141
  %491 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %s, align 8, !dbg !6142
  %index752 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %491, i32 0, i32 9, !dbg !6143
  %492 = load float, float* %index752, align 8, !dbg !6143
  %conv753 = fpext float %492 to double, !dbg !6142
  %mul754 = fmul double %490, %conv753, !dbg !6144
  %index755 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !6145
  %493 = load float, float* %index755, align 8, !dbg !6146
  %conv756 = fpext float %493 to double, !dbg !6146
  %add757 = fadd double %conv756, %mul754, !dbg !6146
  %conv758 = fptrunc double %add757 to float, !dbg !6146
  store float %conv758, float* %index755, align 8, !dbg !6146
  br label %if.end759, !dbg !6147

if.end759:                                        ; preds = %if.then750, %if.end747
  br label %if.end760, !dbg !6148

if.end760:                                        ; preds = %if.end759, %for.end705
  %494 = load i32, i32* %next_column, align 4, !dbg !6149
  %cmp761 = icmp eq i32 %494, 0, !dbg !6151
  br i1 %cmp761, label %land.lhs.true763, label %if.end787, !dbg !6152

land.lhs.true763:                                 ; preds = %if.end760
  %495 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6153
  %496 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !6154
  %sub.ptr.lhs.cast = ptrtoint %struct._MagickPixelPacket* %495 to i64, !dbg !6155
  %sub.ptr.rhs.cast = ptrtoint %struct._MagickPixelPacket* %496 to i64, !dbg !6155
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6155
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 56, !dbg !6155
  %497 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6156
  %columns764 = getelementptr inbounds %struct._Image, %struct._Image* %497, i32 0, i32 7, !dbg !6157
  %498 = load i64, i64* %columns764, align 8, !dbg !6157
  %cmp765 = icmp slt i64 %sub.ptr.div, %498, !dbg !6158
  br i1 %cmp765, label %if.then767, label %if.end787, !dbg !6159

if.then767:                                       ; preds = %land.lhs.true763
  %red768 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !6160
  %499 = load float, float* %red768, align 8, !dbg !6160
  %500 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6162
  %red769 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %500, i32 0, i32 5, !dbg !6163
  store float %499, float* %red769, align 8, !dbg !6164
  %green770 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !6165
  %501 = load float, float* %green770, align 4, !dbg !6165
  %502 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6166
  %green771 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %502, i32 0, i32 6, !dbg !6167
  store float %501, float* %green771, align 4, !dbg !6168
  %blue772 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !6169
  %503 = load float, float* %blue772, align 8, !dbg !6169
  %504 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6170
  %blue773 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %504, i32 0, i32 7, !dbg !6171
  store float %503, float* %blue773, align 8, !dbg !6172
  %505 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6173
  %matte774 = getelementptr inbounds %struct._Image, %struct._Image* %505, i32 0, i32 6, !dbg !6175
  %506 = load i32, i32* %matte774, align 8, !dbg !6175
  %cmp775 = icmp ne i32 %506, 0, !dbg !6176
  br i1 %cmp775, label %if.then777, label %if.end780, !dbg !6177

if.then777:                                       ; preds = %if.then767
  %opacity778 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !6178
  %507 = load float, float* %opacity778, align 4, !dbg !6178
  %508 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6179
  %opacity779 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %508, i32 0, i32 8, !dbg !6180
  store float %507, float* %opacity779, align 4, !dbg !6181
  br label %if.end780, !dbg !6179

if.end780:                                        ; preds = %if.then777, %if.then767
  %509 = load i16*, i16** %scale_indexes, align 8, !dbg !6182
  %cmp781 = icmp ne i16* %509, null, !dbg !6184
  br i1 %cmp781, label %if.then783, label %if.end786, !dbg !6185

if.then783:                                       ; preds = %if.end780
  %index784 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !6186
  %510 = load float, float* %index784, align 8, !dbg !6186
  %511 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6187
  %index785 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %511, i32 0, i32 9, !dbg !6188
  store float %510, float* %index785, align 8, !dbg !6189
  br label %if.end786, !dbg !6187

if.end786:                                        ; preds = %if.then783, %if.end780
  br label %if.end787, !dbg !6190

if.end787:                                        ; preds = %if.end786, %land.lhs.true763, %if.end760
  %512 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !6191
  store %struct._MagickPixelPacket* %512, %struct._MagickPixelPacket** %t, align 8, !dbg !6192
  store i64 0, i64* %x, align 8, !dbg !6193
  br label %for.cond788, !dbg !6195

for.cond788:                                      ; preds = %for.inc841, %if.end787
  %513 = load i64, i64* %x, align 8, !dbg !6196
  %514 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6198
  %columns789 = getelementptr inbounds %struct._Image, %struct._Image* %514, i32 0, i32 7, !dbg !6199
  %515 = load i64, i64* %columns789, align 8, !dbg !6199
  %cmp790 = icmp slt i64 %513, %515, !dbg !6200
  br i1 %cmp790, label %for.body792, label %for.end843, !dbg !6201

for.body792:                                      ; preds = %for.cond788
  %516 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6202
  %matte793 = getelementptr inbounds %struct._Image, %struct._Image* %516, i32 0, i32 6, !dbg !6205
  %517 = load i32, i32* %matte793, align 8, !dbg !6205
  %cmp794 = icmp ne i32 %517, 0, !dbg !6206
  br i1 %cmp794, label %if.then796, label %if.end802, !dbg !6207

if.then796:                                       ; preds = %for.body792
  %518 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6208
  %opacity797 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %518, i32 0, i32 8, !dbg !6209
  %519 = load float, float* %opacity797, align 4, !dbg !6209
  %sub798 = fsub float 6.553500e+04, %519, !dbg !6210
  %conv799 = fpext float %sub798 to double, !dbg !6211
  %mul800 = fmul double 0x3EF0001000100010, %conv799, !dbg !6212
  %conv801 = fptrunc double %mul800 to float, !dbg !6213
  store float %conv801, float* %alpha, align 4, !dbg !6214
  br label %if.end802, !dbg !6215

if.end802:                                        ; preds = %if.then796, %for.body792
  %520 = load float, float* %alpha, align 4, !dbg !6216
  %conv803 = fpext float %520 to double, !dbg !6216
  %call804 = call double @PerceptibleReciprocal(double %conv803), !dbg !6217
  %conv805 = fptrunc double %call804 to float, !dbg !6217
  store float %conv805, float* %alpha, align 4, !dbg !6218
  %521 = load float, float* %alpha, align 4, !dbg !6219
  %522 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6219
  %red806 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %522, i32 0, i32 5, !dbg !6219
  %523 = load float, float* %red806, align 8, !dbg !6219
  %mul807 = fmul float %521, %523, !dbg !6219
  %call808 = call zeroext i16 @ClampToQuantum(float %mul807), !dbg !6219
  %524 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6219
  %red809 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %524, i32 0, i32 2, !dbg !6219
  store i16 %call808, i16* %red809, align 2, !dbg !6219
  %525 = load float, float* %alpha, align 4, !dbg !6220
  %526 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6220
  %green810 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %526, i32 0, i32 6, !dbg !6220
  %527 = load float, float* %green810, align 4, !dbg !6220
  %mul811 = fmul float %525, %527, !dbg !6220
  %call812 = call zeroext i16 @ClampToQuantum(float %mul811), !dbg !6220
  %528 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6220
  %green813 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %528, i32 0, i32 1, !dbg !6220
  store i16 %call812, i16* %green813, align 2, !dbg !6220
  %529 = load float, float* %alpha, align 4, !dbg !6221
  %530 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6221
  %blue814 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %530, i32 0, i32 7, !dbg !6221
  %531 = load float, float* %blue814, align 8, !dbg !6221
  %mul815 = fmul float %529, %531, !dbg !6221
  %call816 = call zeroext i16 @ClampToQuantum(float %mul815), !dbg !6221
  %532 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6221
  %blue817 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %532, i32 0, i32 0, !dbg !6221
  store i16 %call816, i16* %blue817, align 2, !dbg !6221
  %533 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6222
  %matte818 = getelementptr inbounds %struct._Image, %struct._Image* %533, i32 0, i32 6, !dbg !6224
  %534 = load i32, i32* %matte818, align 8, !dbg !6224
  %cmp819 = icmp ne i32 %534, 0, !dbg !6225
  br i1 %cmp819, label %if.then821, label %if.end825, !dbg !6226

if.then821:                                       ; preds = %if.end802
  %535 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6227
  %opacity822 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %535, i32 0, i32 8, !dbg !6227
  %536 = load float, float* %opacity822, align 4, !dbg !6227
  %call823 = call zeroext i16 @ClampToQuantum(float %536), !dbg !6227
  %537 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6227
  %opacity824 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %537, i32 0, i32 3, !dbg !6227
  store i16 %call823, i16* %opacity824, align 2, !dbg !6227
  br label %if.end825, !dbg !6227

if.end825:                                        ; preds = %if.then821, %if.end802
  %538 = load i16*, i16** %scale_indexes, align 8, !dbg !6228
  %cmp826 = icmp ne i16* %538, null, !dbg !6230
  br i1 %cmp826, label %if.then828, label %if.end838, !dbg !6231

if.then828:                                       ; preds = %if.end825
  %539 = load i16*, i16** %scale_indexes, align 8, !dbg !6232
  %540 = load i64, i64* %x, align 8, !dbg !6232
  %add.ptr829 = getelementptr inbounds i16, i16* %539, i64 %540, !dbg !6232
  %cmp830 = icmp ne i16* %add.ptr829, null, !dbg !6232
  br i1 %cmp830, label %if.then832, label %if.end837, !dbg !6235

if.then832:                                       ; preds = %if.then828
  %541 = load float, float* %alpha, align 4, !dbg !6232
  %542 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6232
  %index833 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %542, i32 0, i32 9, !dbg !6232
  %543 = load float, float* %index833, align 8, !dbg !6232
  %mul834 = fmul float %541, %543, !dbg !6232
  %call835 = call zeroext i16 @ClampToQuantum(float %mul834), !dbg !6232
  %544 = load i16*, i16** %scale_indexes, align 8, !dbg !6232
  %545 = load i64, i64* %x, align 8, !dbg !6232
  %add.ptr836 = getelementptr inbounds i16, i16* %544, i64 %545, !dbg !6232
  store i16 %call835, i16* %add.ptr836, align 2, !dbg !6232
  br label %if.end837, !dbg !6232

if.end837:                                        ; preds = %if.then832, %if.then828
  br label %if.end838, !dbg !6235

if.end838:                                        ; preds = %if.end837, %if.end825
  %546 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %t, align 8, !dbg !6236
  %incdec.ptr839 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %546, i32 1, !dbg !6236
  store %struct._MagickPixelPacket* %incdec.ptr839, %struct._MagickPixelPacket** %t, align 8, !dbg !6236
  %547 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6237
  %incdec.ptr840 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %547, i32 1, !dbg !6237
  store %struct._PixelPacket* %incdec.ptr840, %struct._PixelPacket** %q, align 8, !dbg !6237
  br label %for.inc841, !dbg !6238

for.inc841:                                       ; preds = %if.end838
  %548 = load i64, i64* %x, align 8, !dbg !6239
  %inc842 = add nsw i64 %548, 1, !dbg !6239
  store i64 %inc842, i64* %x, align 8, !dbg !6239
  br label %for.cond788, !dbg !6240, !llvm.loop !6241

for.end843:                                       ; preds = %for.cond788
  br label %if.end844

if.end844:                                        ; preds = %for.end843, %for.end542
  %549 = load %struct._CacheView*, %struct._CacheView** %scale_view, align 8, !dbg !6243
  %550 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6245
  %call845 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %549, %struct._ExceptionInfo* %550), !dbg !6246
  %cmp846 = icmp eq i32 %call845, 0, !dbg !6247
  br i1 %cmp846, label %if.then848, label %if.end849, !dbg !6248

if.then848:                                       ; preds = %if.end844
  store i32 0, i32* %status, align 4, !dbg !6249
  br label %for.end858, !dbg !6251

if.end849:                                        ; preds = %if.end844
  %551 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6252
  %552 = load i64, i64* %y, align 8, !dbg !6253
  %553 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6254
  %rows850 = getelementptr inbounds %struct._Image, %struct._Image* %553, i32 0, i32 8, !dbg !6255
  %554 = load i64, i64* %rows850, align 8, !dbg !6255
  %call851 = call i32 @SetImageProgress(%struct._Image* %551, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i64 %552, i64 %554), !dbg !6256
  store i32 %call851, i32* %proceed, align 4, !dbg !6257
  %555 = load i32, i32* %proceed, align 4, !dbg !6258
  %cmp852 = icmp eq i32 %555, 0, !dbg !6260
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !6261

if.then854:                                       ; preds = %if.end849
  store i32 0, i32* %status, align 4, !dbg !6262
  br label %for.end858, !dbg !6264

if.end855:                                        ; preds = %if.end849
  br label %for.inc856, !dbg !6265

for.inc856:                                       ; preds = %if.end855
  %556 = load i64, i64* %y, align 8, !dbg !6266
  %inc857 = add nsw i64 %556, 1, !dbg !6266
  store i64 %inc857, i64* %y, align 8, !dbg !6266
  br label %for.cond, !dbg !6267, !llvm.loop !6268

for.end858:                                       ; preds = %if.then854, %if.then848, %if.then304, %if.then81, %if.then69, %if.then63, %for.cond
  %557 = load %struct._CacheView*, %struct._CacheView** %scale_view, align 8, !dbg !6270
  %call859 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %557), !dbg !6271
  store %struct._CacheView* %call859, %struct._CacheView** %scale_view, align 8, !dbg !6272
  %558 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6273
  %call860 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %558), !dbg !6274
  store %struct._CacheView* %call860, %struct._CacheView** %image_view, align 8, !dbg !6275
  %559 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !6276
  %560 = bitcast %struct._MagickPixelPacket* %559 to i8*, !dbg !6276
  %call861 = call i8* @RelinquishMagickMemory(i8* %560), !dbg !6277
  %561 = bitcast i8* %call861 to %struct._MagickPixelPacket*, !dbg !6278
  store %struct._MagickPixelPacket* %561, %struct._MagickPixelPacket** %y_vector, align 8, !dbg !6279
  %562 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !6280
  %563 = bitcast %struct._MagickPixelPacket* %562 to i8*, !dbg !6280
  %call862 = call i8* @RelinquishMagickMemory(i8* %563), !dbg !6281
  %564 = bitcast i8* %call862 to %struct._MagickPixelPacket*, !dbg !6282
  store %struct._MagickPixelPacket* %564, %struct._MagickPixelPacket** %scale_scanline, align 8, !dbg !6283
  %565 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6284
  %rows863 = getelementptr inbounds %struct._Image, %struct._Image* %565, i32 0, i32 8, !dbg !6286
  %566 = load i64, i64* %rows863, align 8, !dbg !6286
  %567 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6287
  %rows864 = getelementptr inbounds %struct._Image, %struct._Image* %567, i32 0, i32 8, !dbg !6288
  %568 = load i64, i64* %rows864, align 8, !dbg !6288
  %cmp865 = icmp ne i64 %566, %568, !dbg !6289
  br i1 %cmp865, label %if.then867, label %if.end869, !dbg !6290

if.then867:                                       ; preds = %for.end858
  %569 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %scanline, align 8, !dbg !6291
  %570 = bitcast %struct._MagickPixelPacket* %569 to i8*, !dbg !6291
  %call868 = call i8* @RelinquishMagickMemory(i8* %570), !dbg !6292
  %571 = bitcast i8* %call868 to %struct._MagickPixelPacket*, !dbg !6293
  store %struct._MagickPixelPacket* %571, %struct._MagickPixelPacket** %scanline, align 8, !dbg !6294
  br label %if.end869, !dbg !6295

if.end869:                                        ; preds = %if.then867, %for.end858
  %572 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !6296
  %573 = bitcast %struct._MagickPixelPacket* %572 to i8*, !dbg !6296
  %call870 = call i8* @RelinquishMagickMemory(i8* %573), !dbg !6297
  %574 = bitcast i8* %call870 to %struct._MagickPixelPacket*, !dbg !6298
  store %struct._MagickPixelPacket* %574, %struct._MagickPixelPacket** %x_vector, align 8, !dbg !6299
  %575 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6300
  %type = getelementptr inbounds %struct._Image, %struct._Image* %575, i32 0, i32 77, !dbg !6301
  %576 = load i32, i32* %type, align 8, !dbg !6301
  %577 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6302
  %type871 = getelementptr inbounds %struct._Image, %struct._Image* %577, i32 0, i32 77, !dbg !6303
  store i32 %576, i32* %type871, align 8, !dbg !6304
  %578 = load i32, i32* %status, align 4, !dbg !6305
  %cmp872 = icmp eq i32 %578, 0, !dbg !6307
  br i1 %cmp872, label %if.then874, label %if.end876, !dbg !6308

if.then874:                                       ; preds = %if.end869
  %579 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6309
  %call875 = call %struct._Image* @DestroyImage(%struct._Image* %579), !dbg !6310
  store %struct._Image* %call875, %struct._Image** %scale_image, align 8, !dbg !6311
  br label %if.end876, !dbg !6312

if.end876:                                        ; preds = %if.then874, %if.end869
  %580 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !6313
  store %struct._Image* %580, %struct._Image** %retval, align 8, !dbg !6314
  br label %return, !dbg !6314

return:                                           ; preds = %if.end876, %if.then42, %if.then18, %if.then14, %if.then9, %if.then3
  %581 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !6315
  ret %struct._Image* %581, !dbg !6315
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !6316 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = load float, float* %value.addr, align 4, !dbg !6321
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !6323
  br i1 %cmp, label %if.then, label %if.end, !dbg !6324

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !6325
  br label %return, !dbg !6325

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !6326
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !6328
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6329

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !6330
  br label %return, !dbg !6330

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !6331
  %add = fadd float %2, 5.000000e-01, !dbg !6332
  %conv = fptoui float %add to i16, !dbg !6333
  store i16 %conv, i16* %retval, align 2, !dbg !6334
  br label %return, !dbg !6334

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !6335
  ret i16 %3, !dbg !6335
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ThumbnailImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !6336 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %value = alloca [4096 x i8], align 16
  %name = alloca i8*, align 8
  %thumbnail_image = alloca %struct._Image*, align 8
  %x_factor = alloca float, align 4
  %y_factor = alloca float, align 4
  %version = alloca i64, align 8
  %attributes = alloca %struct.stat, align 8
  %sample_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata [4096 x i8]* %value, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6347, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.declare(metadata %struct._Image** %thumbnail_image, metadata !6349, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata float* %x_factor, metadata !6351, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.declare(metadata float* %y_factor, metadata !6353, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.declare(metadata i64* %version, metadata !6355, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.declare(metadata %struct.stat* %attributes, metadata !6357, metadata !DIExpression()), !dbg !6394
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6395
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6397
  %1 = load i32, i32* %debug, align 8, !dbg !6397
  %cmp = icmp ne i32 %1, 0, !dbg !6398
  br i1 %cmp, label %if.then, label %if.end, !dbg !6399

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6400
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6401
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6400
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3759, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6402
  br label %if.end, !dbg !6403

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !6404
  %conv = uitofp i64 %3 to float, !dbg !6405
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6406
  %columns1 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !6407
  %5 = load i64, i64* %columns1, align 8, !dbg !6407
  %conv2 = uitofp i64 %5 to float, !dbg !6408
  %div = fdiv float %conv, %conv2, !dbg !6409
  store float %div, float* %x_factor, align 4, !dbg !6410
  %6 = load i64, i64* %rows.addr, align 8, !dbg !6411
  %conv3 = uitofp i64 %6 to float, !dbg !6412
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6413
  %rows4 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !6414
  %8 = load i64, i64* %rows4, align 8, !dbg !6414
  %conv5 = uitofp i64 %8 to float, !dbg !6415
  %div6 = fdiv float %conv3, %conv5, !dbg !6416
  store float %div6, float* %y_factor, align 4, !dbg !6417
  %9 = load float, float* %x_factor, align 4, !dbg !6418
  %10 = load float, float* %y_factor, align 4, !dbg !6420
  %mul = fmul float %9, %10, !dbg !6421
  %conv7 = fpext float %mul to double, !dbg !6422
  %cmp8 = fcmp ogt double %conv7, 1.000000e-01, !dbg !6423
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !6424

if.then10:                                        ; preds = %if.end
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6425
  %12 = load i64, i64* %columns.addr, align 8, !dbg !6426
  %13 = load i64, i64* %rows.addr, align 8, !dbg !6427
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6428
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 32, !dbg !6429
  %15 = load i32, i32* %filter, align 8, !dbg !6429
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6430
  %blur = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 30, !dbg !6431
  %17 = load double, double* %blur, align 8, !dbg !6431
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6432
  %call11 = call %struct._Image* @ResizeImage(%struct._Image* %11, i64 %12, i64 %13, i32 %15, double %17, %struct._ExceptionInfo* %18), !dbg !6433
  store %struct._Image* %call11, %struct._Image** %thumbnail_image, align 8, !dbg !6434
  br label %if.end35, !dbg !6435

if.else:                                          ; preds = %if.end
  %19 = load i64, i64* %columns.addr, align 8, !dbg !6436
  %mul12 = mul i64 5, %19, !dbg !6438
  %cmp13 = icmp ult i64 %mul12, 128, !dbg !6439
  br i1 %cmp13, label %if.then18, label %lor.lhs.false, !dbg !6440

lor.lhs.false:                                    ; preds = %if.else
  %20 = load i64, i64* %rows.addr, align 8, !dbg !6441
  %mul15 = mul i64 5, %20, !dbg !6442
  %cmp16 = icmp ult i64 %mul15, 128, !dbg !6443
  br i1 %cmp16, label %if.then18, label %if.else22, !dbg !6444

if.then18:                                        ; preds = %lor.lhs.false, %if.else
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6445
  %22 = load i64, i64* %columns.addr, align 8, !dbg !6446
  %23 = load i64, i64* %rows.addr, align 8, !dbg !6447
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6448
  %filter19 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 32, !dbg !6449
  %25 = load i32, i32* %filter19, align 8, !dbg !6449
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6450
  %blur20 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 30, !dbg !6451
  %27 = load double, double* %blur20, align 8, !dbg !6451
  %28 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6452
  %call21 = call %struct._Image* @ResizeImage(%struct._Image* %21, i64 %22, i64 %23, i32 %25, double %27, %struct._ExceptionInfo* %28), !dbg !6453
  store %struct._Image* %call21, %struct._Image** %thumbnail_image, align 8, !dbg !6454
  br label %if.end34, !dbg !6455

if.else22:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct._Image** %sample_image, metadata !6456, metadata !DIExpression()), !dbg !6458
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6459
  %30 = load i64, i64* %columns.addr, align 8, !dbg !6460
  %mul23 = mul i64 5, %30, !dbg !6461
  %31 = load i64, i64* %rows.addr, align 8, !dbg !6462
  %mul24 = mul i64 5, %31, !dbg !6463
  %32 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6464
  %call25 = call %struct._Image* @SampleImage(%struct._Image* %29, i64 %mul23, i64 %mul24, %struct._ExceptionInfo* %32), !dbg !6465
  store %struct._Image* %call25, %struct._Image** %sample_image, align 8, !dbg !6466
  %33 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !6467
  %cmp26 = icmp eq %struct._Image* %33, null, !dbg !6469
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6470

if.then28:                                        ; preds = %if.else22
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !6471
  br label %return, !dbg !6471

if.end29:                                         ; preds = %if.else22
  %34 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !6472
  %35 = load i64, i64* %columns.addr, align 8, !dbg !6473
  %36 = load i64, i64* %rows.addr, align 8, !dbg !6474
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6475
  %filter30 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 32, !dbg !6476
  %38 = load i32, i32* %filter30, align 8, !dbg !6476
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6477
  %blur31 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 30, !dbg !6478
  %40 = load double, double* %blur31, align 8, !dbg !6478
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6479
  %call32 = call %struct._Image* @ResizeImage(%struct._Image* %34, i64 %35, i64 %36, i32 %38, double %40, %struct._ExceptionInfo* %41), !dbg !6480
  store %struct._Image* %call32, %struct._Image** %thumbnail_image, align 8, !dbg !6481
  %42 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !6482
  %call33 = call %struct._Image* @DestroyImage(%struct._Image* %42), !dbg !6483
  store %struct._Image* %call33, %struct._Image** %sample_image, align 8, !dbg !6484
  br label %if.end34

if.end34:                                         ; preds = %if.end29, %if.then18
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then10
  %43 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6485
  %cmp36 = icmp eq %struct._Image* %43, null, !dbg !6487
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !6488

if.then38:                                        ; preds = %if.end35
  %44 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6489
  store %struct._Image* %44, %struct._Image** %retval, align 8, !dbg !6490
  br label %return, !dbg !6490

if.end39:                                         ; preds = %if.end35
  %45 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6491
  %page = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 26, !dbg !6492
  %call40 = call i32 @ParseAbsoluteGeometry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), %struct._RectangleInfo* %page), !dbg !6493
  %46 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6494
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 6, !dbg !6496
  %47 = load i32, i32* %matte, align 8, !dbg !6496
  %cmp41 = icmp eq i32 %47, 0, !dbg !6497
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !6498

if.then43:                                        ; preds = %if.end39
  %48 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6499
  %call44 = call i32 @SetImageAlphaChannel(%struct._Image* %48, i32 6), !dbg !6500
  br label %if.end45, !dbg !6501

if.end45:                                         ; preds = %if.then43, %if.end39
  %49 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6502
  %depth = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 9, !dbg !6503
  store i64 8, i64* %depth, align 8, !dbg !6504
  %50 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6505
  %interlace = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 33, !dbg !6506
  store i32 1, i32* %interlace, align 4, !dbg !6507
  %51 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6508
  call void @ResetImageProfileIterator(%struct._Image* %51), !dbg !6509
  %52 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6510
  %call46 = call i8* @GetNextImageProfile(%struct._Image* %52), !dbg !6512
  store i8* %call46, i8** %name, align 8, !dbg !6513
  br label %for.cond, !dbg !6514

for.cond:                                         ; preds = %if.end57, %if.end45
  %53 = load i8*, i8** %name, align 8, !dbg !6515
  %cmp47 = icmp ne i8* %53, null, !dbg !6517
  br i1 %cmp47, label %for.body, label %for.end, !dbg !6518

for.body:                                         ; preds = %for.cond
  %54 = load i8*, i8** %name, align 8, !dbg !6519
  %call49 = call i32 @LocaleCompare(i8* %54, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0)), !dbg !6522
  %cmp50 = icmp ne i32 %call49, 0, !dbg !6523
  br i1 %cmp50, label %land.lhs.true, label %if.end57, !dbg !6524

land.lhs.true:                                    ; preds = %for.body
  %55 = load i8*, i8** %name, align 8, !dbg !6525
  %call52 = call i32 @LocaleCompare(i8* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)), !dbg !6526
  %cmp53 = icmp ne i32 %call52, 0, !dbg !6527
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !6528

if.then55:                                        ; preds = %land.lhs.true
  %56 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6529
  %57 = load i8*, i8** %name, align 8, !dbg !6531
  %call56 = call i32 @DeleteImageProfile(%struct._Image* %56, i8* %57), !dbg !6532
  %58 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6533
  call void @ResetImageProfileIterator(%struct._Image* %58), !dbg !6534
  br label %if.end57, !dbg !6535

if.end57:                                         ; preds = %if.then55, %land.lhs.true, %for.body
  %59 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6536
  %call58 = call i8* @GetNextImageProfile(%struct._Image* %59), !dbg !6537
  store i8* %call58, i8** %name, align 8, !dbg !6538
  br label %for.cond, !dbg !6539, !llvm.loop !6540

for.end:                                          ; preds = %for.cond
  %60 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6542
  %call59 = call i32 @DeleteImageProperty(%struct._Image* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0)), !dbg !6543
  %arraydecay60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6544
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6545
  %magick_filename = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 54, !dbg !6546
  %arraydecay61 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick_filename, i64 0, i64 0, !dbg !6545
  %call62 = call i64 @CopyMagickString(i8* %arraydecay60, i8* %arraydecay61, i64 4096), !dbg !6547
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6548
  %magick_filename63 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 54, !dbg !6550
  %arraydecay64 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick_filename63, i64 0, i64 0, !dbg !6548
  %call65 = call i8* @strstr(i8* %arraydecay64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #15, !dbg !6551
  %cmp66 = icmp eq i8* %call65, null, !dbg !6552
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !6553

if.then68:                                        ; preds = %for.end
  %arraydecay69 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6554
  %63 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6555
  %magick_filename70 = getelementptr inbounds %struct._Image, %struct._Image* %63, i32 0, i32 54, !dbg !6556
  %arraydecay71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick_filename70, i64 0, i64 0, !dbg !6555
  %call72 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay69, i64 4096, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay71), !dbg !6557
  br label %if.end73, !dbg !6558

if.end73:                                         ; preds = %if.then68, %for.end
  %64 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6559
  %arraydecay74 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6560
  %call75 = call i32 @SetImageProperty(%struct._Image* %64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay74), !dbg !6561
  %arraydecay76 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6562
  %65 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6563
  %magick_filename77 = getelementptr inbounds %struct._Image, %struct._Image* %65, i32 0, i32 54, !dbg !6564
  %arraydecay78 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick_filename77, i64 0, i64 0, !dbg !6563
  %call79 = call i64 @CopyMagickString(i8* %arraydecay76, i8* %arraydecay78, i64 4096), !dbg !6565
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6566
  %filename80 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 53, !dbg !6568
  %arraydecay81 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename80, i64 0, i64 0, !dbg !6566
  %67 = bitcast %struct.stat* %attributes to i8*, !dbg !6569
  %call82 = call i32 @GetPathAttributes(i8* %arraydecay81, i8* %67), !dbg !6570
  %cmp83 = icmp ne i32 %call82, 0, !dbg !6571
  br i1 %cmp83, label %if.then85, label %if.end91, !dbg !6572

if.then85:                                        ; preds = %if.end73
  %arraydecay86 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6573
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %attributes, i32 0, i32 12, !dbg !6575
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !6575
  %68 = load i64, i64* %tv_sec, align 8, !dbg !6575
  %conv87 = sitofp i64 %68 to double, !dbg !6576
  %call88 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay86, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), double %conv87), !dbg !6577
  %69 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6578
  %arraydecay89 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6579
  %call90 = call i32 @SetImageProperty(%struct._Image* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay89), !dbg !6580
  br label %if.end91, !dbg !6581

if.end91:                                         ; preds = %if.then85, %if.end73
  %arraydecay92 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6582
  %st_mtim93 = getelementptr inbounds %struct.stat, %struct.stat* %attributes, i32 0, i32 12, !dbg !6583
  %tv_sec94 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim93, i32 0, i32 0, !dbg !6583
  %70 = load i64, i64* %tv_sec94, align 8, !dbg !6583
  %conv95 = sitofp i64 %70 to double, !dbg !6584
  %call96 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay92, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), double %conv95), !dbg !6585
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6586
  %call97 = call i64 @GetBlobSize(%struct._Image* %71), !dbg !6587
  %arraydecay98 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6588
  %call99 = call i64 @FormatMagickSize(i64 %call97, i32 0, i8* %arraydecay98), !dbg !6589
  %arraydecay100 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6590
  %call101 = call i64 @ConcatenateMagickString(i8* %arraydecay100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i64 0, i64 0), i64 4096), !dbg !6591
  %72 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6592
  %arraydecay102 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6593
  %call103 = call i32 @SetImageProperty(%struct._Image* %72, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0), i8* %arraydecay102), !dbg !6594
  %arraydecay104 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6595
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6596
  %magick = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 55, !dbg !6597
  %arraydecay105 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick, i64 0, i64 0, !dbg !6596
  %call106 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay104, i64 4096, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i8* %arraydecay105), !dbg !6598
  %arraydecay107 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6599
  call void @LocaleLower(i8* %arraydecay107), !dbg !6600
  %74 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6601
  %arraydecay108 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6602
  %call109 = call i32 @SetImageProperty(%struct._Image* %74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay108), !dbg !6603
  %75 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6604
  %call110 = call i8* @GetMagickVersion(i64* %version), !dbg !6605
  %call111 = call i32 @SetImageProperty(%struct._Image* %75, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* %call110), !dbg !6606
  %arraydecay112 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6607
  %76 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6608
  %magick_columns = getelementptr inbounds %struct._Image, %struct._Image* %76, i32 0, i32 56, !dbg !6609
  %77 = load i64, i64* %magick_columns, align 8, !dbg !6609
  %conv113 = uitofp i64 %77 to double, !dbg !6610
  %call114 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay112, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), double %conv113), !dbg !6611
  %78 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6612
  %arraydecay115 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6613
  %call116 = call i32 @SetImageProperty(%struct._Image* %78, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay115), !dbg !6614
  %arraydecay117 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6615
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6616
  %magick_rows = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 57, !dbg !6617
  %80 = load i64, i64* %magick_rows, align 8, !dbg !6617
  %conv118 = uitofp i64 %80 to double, !dbg !6618
  %call119 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay117, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), double %conv118), !dbg !6619
  %81 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6620
  %arraydecay120 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6621
  %call121 = call i32 @SetImageProperty(%struct._Image* %81, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), i8* %arraydecay120), !dbg !6622
  %arraydecay122 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6623
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6624
  %call123 = call i64 @GetImageListLength(%struct._Image* %82), !dbg !6625
  %conv124 = uitofp i64 %call123 to double, !dbg !6626
  %call125 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay122, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), double %conv124), !dbg !6627
  %83 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6628
  %arraydecay126 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !6629
  %call127 = call i32 @SetImageProperty(%struct._Image* %83, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0), i8* %arraydecay126), !dbg !6630
  %84 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !6631
  store %struct._Image* %84, %struct._Image** %retval, align 8, !dbg !6632
  br label %return, !dbg !6632

return:                                           ; preds = %if.end91, %if.then38, %if.then28
  %85 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !6633
  ret %struct._Image* %85, !dbg !6633
}

declare dso_local i32 @ParseAbsoluteGeometry(i8*, %struct._RectangleInfo*) #2

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

declare dso_local void @ResetImageProfileIterator(%struct._Image*) #2

declare dso_local i8* @GetNextImageProfile(%struct._Image*) #2

declare dso_local i32 @LocaleCompare(i8*, i8*) #2

declare dso_local i32 @DeleteImageProfile(%struct._Image*, i8*) #2

declare dso_local i32 @DeleteImageProperty(%struct._Image*, i8*) #2

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #8

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

declare dso_local i32 @SetImageProperty(%struct._Image*, i8*, i8*) #2

declare dso_local i32 @GetPathAttributes(i8*, i8*) #2

declare dso_local i64 @FormatMagickSize(i64, i32, i8*) #2

declare dso_local i64 @GetBlobSize(%struct._Image*) #2

declare dso_local i64 @ConcatenateMagickString(i8*, i8*, i64) #2

declare dso_local void @LocaleLower(i8*) #2

declare dso_local i8* @GetMagickVersion(i64*) #2

declare dso_local i64 @GetImageListLength(%struct._Image*) #2

; Function Attrs: nounwind
declare dso_local double @cos(double) #9

; Function Attrs: nounwind
declare dso_local double @exp(double) #9

; Function Attrs: noinline nounwind uwtable
define internal float @BesselOrderOne(float %x) #0 !dbg !6634 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %p = alloca float, align 4
  %q = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata float* %p, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata float* %q, metadata !6639, metadata !DIExpression()), !dbg !6640
  %0 = load float, float* %x.addr, align 4, !dbg !6641
  %conv = fpext float %0 to double, !dbg !6641
  %cmp = fcmp oeq double %conv, 0.000000e+00, !dbg !6643
  br i1 %cmp, label %if.then, label %if.end, !dbg !6644

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !6645
  br label %return, !dbg !6645

if.end:                                           ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !6646
  store float %1, float* %p, align 4, !dbg !6647
  %2 = load float, float* %x.addr, align 4, !dbg !6648
  %conv2 = fpext float %2 to double, !dbg !6648
  %cmp3 = fcmp olt double %conv2, 0.000000e+00, !dbg !6650
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !6651

if.then5:                                         ; preds = %if.end
  %3 = load float, float* %x.addr, align 4, !dbg !6652
  %fneg = fneg float %3, !dbg !6653
  store float %fneg, float* %x.addr, align 4, !dbg !6654
  br label %if.end6, !dbg !6655

if.end6:                                          ; preds = %if.then5, %if.end
  %4 = load float, float* %x.addr, align 4, !dbg !6656
  %conv7 = fpext float %4 to double, !dbg !6656
  %cmp8 = fcmp olt double %conv7, 8.000000e+00, !dbg !6658
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6659

if.then10:                                        ; preds = %if.end6
  %5 = load float, float* %p, align 4, !dbg !6660
  %6 = load float, float* %x.addr, align 4, !dbg !6661
  %call = call float @J1(float %6), !dbg !6662
  %mul = fmul float %5, %call, !dbg !6663
  store float %mul, float* %retval, align 4, !dbg !6664
  br label %return, !dbg !6664

if.end11:                                         ; preds = %if.end6
  %7 = load float, float* %x.addr, align 4, !dbg !6665
  %conv12 = fpext float %7 to double, !dbg !6665
  %mul13 = fmul double 0x400921FB54442D18, %conv12, !dbg !6666
  %div = fdiv double 2.000000e+00, %mul13, !dbg !6667
  %call14 = call double @sqrt(double %div) #13, !dbg !6668
  %8 = load float, float* %x.addr, align 4, !dbg !6669
  %call15 = call float @P1(float %8), !dbg !6670
  %conv16 = fpext float %call15 to double, !dbg !6670
  %call17 = call double @sqrt(double 2.000000e+00) #13, !dbg !6671
  %div18 = fdiv double 1.000000e+00, %call17, !dbg !6672
  %9 = load float, float* %x.addr, align 4, !dbg !6673
  %conv19 = fpext float %9 to double, !dbg !6674
  %call20 = call double @sin(double %conv19) #13, !dbg !6675
  %10 = load float, float* %x.addr, align 4, !dbg !6676
  %conv21 = fpext float %10 to double, !dbg !6677
  %call22 = call double @cos(double %conv21) #13, !dbg !6678
  %sub = fsub double %call20, %call22, !dbg !6679
  %mul23 = fmul double %div18, %sub, !dbg !6680
  %mul24 = fmul double %conv16, %mul23, !dbg !6681
  %11 = load float, float* %x.addr, align 4, !dbg !6682
  %conv25 = fpext float %11 to double, !dbg !6682
  %div26 = fdiv double 8.000000e+00, %conv25, !dbg !6683
  %12 = load float, float* %x.addr, align 4, !dbg !6684
  %call27 = call float @Q1(float %12), !dbg !6685
  %conv28 = fpext float %call27 to double, !dbg !6685
  %mul29 = fmul double %div26, %conv28, !dbg !6686
  %call30 = call double @sqrt(double 2.000000e+00) #13, !dbg !6687
  %div31 = fdiv double -1.000000e+00, %call30, !dbg !6688
  %13 = load float, float* %x.addr, align 4, !dbg !6689
  %conv32 = fpext float %13 to double, !dbg !6690
  %call33 = call double @sin(double %conv32) #13, !dbg !6691
  %14 = load float, float* %x.addr, align 4, !dbg !6692
  %conv34 = fpext float %14 to double, !dbg !6693
  %call35 = call double @cos(double %conv34) #13, !dbg !6694
  %add = fadd double %call33, %call35, !dbg !6695
  %mul36 = fmul double %div31, %add, !dbg !6696
  %mul37 = fmul double %mul29, %mul36, !dbg !6697
  %sub38 = fsub double %mul24, %mul37, !dbg !6698
  %mul39 = fmul double %call14, %sub38, !dbg !6699
  %conv40 = fptrunc double %mul39 to float, !dbg !6668
  store float %conv40, float* %q, align 4, !dbg !6700
  %15 = load float, float* %p, align 4, !dbg !6701
  %conv41 = fpext float %15 to double, !dbg !6701
  %cmp42 = fcmp olt double %conv41, 0.000000e+00, !dbg !6703
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !6704

if.then44:                                        ; preds = %if.end11
  %16 = load float, float* %q, align 4, !dbg !6705
  %fneg45 = fneg float %16, !dbg !6706
  store float %fneg45, float* %q, align 4, !dbg !6707
  br label %if.end46, !dbg !6708

if.end46:                                         ; preds = %if.then44, %if.end11
  %17 = load float, float* %q, align 4, !dbg !6709
  store float %17, float* %retval, align 4, !dbg !6710
  br label %return, !dbg !6710

return:                                           ; preds = %if.end46, %if.then10, %if.then
  %18 = load float, float* %retval, align 4, !dbg !6711
  ret float %18, !dbg !6711
}

; Function Attrs: noinline nounwind uwtable
define internal float @J1(float %x) #0 !dbg !855 {
entry:
  %x.addr = alloca float, align 4
  %p = alloca float, align 4
  %q = alloca float, align 4
  %i = alloca i64, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata float* %p, metadata !6714, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.declare(metadata float* %q, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6718, metadata !DIExpression()), !dbg !6719
  %0 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @J1.Pone, i64 0, i64 8), align 16, !dbg !6720
  %conv = fptrunc double %0 to float, !dbg !6720
  store float %conv, float* %p, align 4, !dbg !6721
  %1 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @J1.Qone, i64 0, i64 8), align 16, !dbg !6722
  %conv1 = fptrunc double %1 to float, !dbg !6722
  store float %conv1, float* %q, align 4, !dbg !6723
  store i64 7, i64* %i, align 8, !dbg !6724
  br label %for.cond, !dbg !6726

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !6727
  %cmp = icmp sge i64 %2, 0, !dbg !6729
  br i1 %cmp, label %for.body, label %for.end, !dbg !6730

for.body:                                         ; preds = %for.cond
  %3 = load float, float* %p, align 4, !dbg !6731
  %4 = load float, float* %x.addr, align 4, !dbg !6733
  %mul = fmul float %3, %4, !dbg !6734
  %5 = load float, float* %x.addr, align 4, !dbg !6735
  %mul3 = fmul float %mul, %5, !dbg !6736
  %conv4 = fpext float %mul3 to double, !dbg !6731
  %6 = load i64, i64* %i, align 8, !dbg !6737
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* @J1.Pone, i64 0, i64 %6, !dbg !6738
  %7 = load double, double* %arrayidx, align 8, !dbg !6738
  %add = fadd double %conv4, %7, !dbg !6739
  %conv5 = fptrunc double %add to float, !dbg !6731
  store float %conv5, float* %p, align 4, !dbg !6740
  %8 = load float, float* %q, align 4, !dbg !6741
  %9 = load float, float* %x.addr, align 4, !dbg !6742
  %mul6 = fmul float %8, %9, !dbg !6743
  %10 = load float, float* %x.addr, align 4, !dbg !6744
  %mul7 = fmul float %mul6, %10, !dbg !6745
  %conv8 = fpext float %mul7 to double, !dbg !6741
  %11 = load i64, i64* %i, align 8, !dbg !6746
  %arrayidx9 = getelementptr inbounds [9 x double], [9 x double]* @J1.Qone, i64 0, i64 %11, !dbg !6747
  %12 = load double, double* %arrayidx9, align 8, !dbg !6747
  %add10 = fadd double %conv8, %12, !dbg !6748
  %conv11 = fptrunc double %add10 to float, !dbg !6741
  store float %conv11, float* %q, align 4, !dbg !6749
  br label %for.inc, !dbg !6750

for.inc:                                          ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !6751
  %dec = add nsw i64 %13, -1, !dbg !6751
  store i64 %dec, i64* %i, align 8, !dbg !6751
  br label %for.cond, !dbg !6752, !llvm.loop !6753

for.end:                                          ; preds = %for.cond
  %14 = load float, float* %p, align 4, !dbg !6755
  %15 = load float, float* %q, align 4, !dbg !6756
  %div = fdiv float %14, %15, !dbg !6757
  ret float %div, !dbg !6758
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #9

; Function Attrs: noinline nounwind uwtable
define internal float @P1(float %x) #0 !dbg !867 {
entry:
  %x.addr = alloca float, align 4
  %p = alloca float, align 4
  %q = alloca float, align 4
  %i = alloca i64, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6759, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.declare(metadata float* %p, metadata !6761, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.declare(metadata float* %q, metadata !6763, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6765, metadata !DIExpression()), !dbg !6766
  %0 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @P1.Pone, i64 0, i64 5), align 8, !dbg !6767
  %conv = fptrunc double %0 to float, !dbg !6767
  store float %conv, float* %p, align 4, !dbg !6768
  %1 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @P1.Qone, i64 0, i64 5), align 8, !dbg !6769
  %conv1 = fptrunc double %1 to float, !dbg !6769
  store float %conv1, float* %q, align 4, !dbg !6770
  store i64 4, i64* %i, align 8, !dbg !6771
  br label %for.cond, !dbg !6773

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !6774
  %cmp = icmp sge i64 %2, 0, !dbg !6776
  br i1 %cmp, label %for.body, label %for.end, !dbg !6777

for.body:                                         ; preds = %for.cond
  %3 = load float, float* %p, align 4, !dbg !6778
  %conv3 = fpext float %3 to double, !dbg !6778
  %4 = load float, float* %x.addr, align 4, !dbg !6780
  %conv4 = fpext float %4 to double, !dbg !6780
  %div = fdiv double 8.000000e+00, %conv4, !dbg !6781
  %mul = fmul double %conv3, %div, !dbg !6782
  %5 = load float, float* %x.addr, align 4, !dbg !6783
  %conv5 = fpext float %5 to double, !dbg !6783
  %div6 = fdiv double 8.000000e+00, %conv5, !dbg !6784
  %mul7 = fmul double %mul, %div6, !dbg !6785
  %6 = load i64, i64* %i, align 8, !dbg !6786
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @P1.Pone, i64 0, i64 %6, !dbg !6787
  %7 = load double, double* %arrayidx, align 8, !dbg !6787
  %add = fadd double %mul7, %7, !dbg !6788
  %conv8 = fptrunc double %add to float, !dbg !6778
  store float %conv8, float* %p, align 4, !dbg !6789
  %8 = load float, float* %q, align 4, !dbg !6790
  %conv9 = fpext float %8 to double, !dbg !6790
  %9 = load float, float* %x.addr, align 4, !dbg !6791
  %conv10 = fpext float %9 to double, !dbg !6791
  %div11 = fdiv double 8.000000e+00, %conv10, !dbg !6792
  %mul12 = fmul double %conv9, %div11, !dbg !6793
  %10 = load float, float* %x.addr, align 4, !dbg !6794
  %conv13 = fpext float %10 to double, !dbg !6794
  %div14 = fdiv double 8.000000e+00, %conv13, !dbg !6795
  %mul15 = fmul double %mul12, %div14, !dbg !6796
  %11 = load i64, i64* %i, align 8, !dbg !6797
  %arrayidx16 = getelementptr inbounds [6 x double], [6 x double]* @P1.Qone, i64 0, i64 %11, !dbg !6798
  %12 = load double, double* %arrayidx16, align 8, !dbg !6798
  %add17 = fadd double %mul15, %12, !dbg !6799
  %conv18 = fptrunc double %add17 to float, !dbg !6790
  store float %conv18, float* %q, align 4, !dbg !6800
  br label %for.inc, !dbg !6801

for.inc:                                          ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !6802
  %dec = add nsw i64 %13, -1, !dbg !6802
  store i64 %dec, i64* %i, align 8, !dbg !6802
  br label %for.cond, !dbg !6803, !llvm.loop !6804

for.end:                                          ; preds = %for.cond
  %14 = load float, float* %p, align 4, !dbg !6806
  %15 = load float, float* %q, align 4, !dbg !6807
  %div19 = fdiv float %14, %15, !dbg !6808
  ret float %div19, !dbg !6809
}

; Function Attrs: nounwind
declare dso_local double @sin(double) #9

; Function Attrs: noinline nounwind uwtable
define internal float @Q1(float %x) #0 !dbg !875 {
entry:
  %x.addr = alloca float, align 4
  %p = alloca float, align 4
  %q = alloca float, align 4
  %i = alloca i64, align 8
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6810, metadata !DIExpression()), !dbg !6811
  call void @llvm.dbg.declare(metadata float* %p, metadata !6812, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.declare(metadata float* %q, metadata !6814, metadata !DIExpression()), !dbg !6815
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6816, metadata !DIExpression()), !dbg !6817
  %0 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @Q1.Pone, i64 0, i64 5), align 8, !dbg !6818
  %conv = fptrunc double %0 to float, !dbg !6818
  store float %conv, float* %p, align 4, !dbg !6819
  %1 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @Q1.Qone, i64 0, i64 5), align 8, !dbg !6820
  %conv1 = fptrunc double %1 to float, !dbg !6820
  store float %conv1, float* %q, align 4, !dbg !6821
  store i64 4, i64* %i, align 8, !dbg !6822
  br label %for.cond, !dbg !6824

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !6825
  %cmp = icmp sge i64 %2, 0, !dbg !6827
  br i1 %cmp, label %for.body, label %for.end, !dbg !6828

for.body:                                         ; preds = %for.cond
  %3 = load float, float* %p, align 4, !dbg !6829
  %conv3 = fpext float %3 to double, !dbg !6829
  %4 = load float, float* %x.addr, align 4, !dbg !6831
  %conv4 = fpext float %4 to double, !dbg !6831
  %div = fdiv double 8.000000e+00, %conv4, !dbg !6832
  %mul = fmul double %conv3, %div, !dbg !6833
  %5 = load float, float* %x.addr, align 4, !dbg !6834
  %conv5 = fpext float %5 to double, !dbg !6834
  %div6 = fdiv double 8.000000e+00, %conv5, !dbg !6835
  %mul7 = fmul double %mul, %div6, !dbg !6836
  %6 = load i64, i64* %i, align 8, !dbg !6837
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @Q1.Pone, i64 0, i64 %6, !dbg !6838
  %7 = load double, double* %arrayidx, align 8, !dbg !6838
  %add = fadd double %mul7, %7, !dbg !6839
  %conv8 = fptrunc double %add to float, !dbg !6829
  store float %conv8, float* %p, align 4, !dbg !6840
  %8 = load float, float* %q, align 4, !dbg !6841
  %conv9 = fpext float %8 to double, !dbg !6841
  %9 = load float, float* %x.addr, align 4, !dbg !6842
  %conv10 = fpext float %9 to double, !dbg !6842
  %div11 = fdiv double 8.000000e+00, %conv10, !dbg !6843
  %mul12 = fmul double %conv9, %div11, !dbg !6844
  %10 = load float, float* %x.addr, align 4, !dbg !6845
  %conv13 = fpext float %10 to double, !dbg !6845
  %div14 = fdiv double 8.000000e+00, %conv13, !dbg !6846
  %mul15 = fmul double %mul12, %div14, !dbg !6847
  %11 = load i64, i64* %i, align 8, !dbg !6848
  %arrayidx16 = getelementptr inbounds [6 x double], [6 x double]* @Q1.Qone, i64 0, i64 %11, !dbg !6849
  %12 = load double, double* %arrayidx16, align 8, !dbg !6849
  %add17 = fadd double %mul15, %12, !dbg !6850
  %conv18 = fptrunc double %add17 to float, !dbg !6841
  store float %conv18, float* %q, align 4, !dbg !6851
  br label %for.inc, !dbg !6852

for.inc:                                          ; preds = %for.body
  %13 = load i64, i64* %i, align 8, !dbg !6853
  %dec = add nsw i64 %13, -1, !dbg !6853
  store i64 %dec, i64* %i, align 8, !dbg !6853
  br label %for.cond, !dbg !6854, !llvm.loop !6855

for.end:                                          ; preds = %for.cond
  %14 = load float, float* %p, align 4, !dbg !6857
  %15 = load float, float* %q, align 4, !dbg !6858
  %div19 = fdiv float %14, %15, !dbg !6859
  ret float %div19, !dbg !6860
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #2

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #9

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !6861 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  %0 = load double, double* %x.addr, align 8, !dbg !6868
  %1 = load double, double* %y.addr, align 8, !dbg !6870
  %cmp = fcmp ogt double %0, %1, !dbg !6871
  br i1 %cmp, label %if.then, label %if.end, !dbg !6872

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6873
  store double %2, double* %retval, align 8, !dbg !6874
  br label %return, !dbg !6874

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6875
  store double %3, double* %retval, align 8, !dbg !6876
  br label %return, !dbg !6876

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !6877
  ret double %4, !dbg !6877
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ContributionInfo** @AcquireContributionThreadSet(i64 %count) #0 !dbg !6878 {
entry:
  %retval = alloca %struct._ContributionInfo**, align 8
  %count.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %contribution = alloca %struct._ContributionInfo**, align 8
  %number_threads = alloca i64, align 8
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo*** %contribution, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !6887, metadata !DIExpression()), !dbg !6888
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6889
  store i64 %call, i64* %number_threads, align 8, !dbg !6890
  %0 = load i64, i64* %number_threads, align 8, !dbg !6891
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #14, !dbg !6892
  %1 = bitcast i8* %call1 to %struct._ContributionInfo**, !dbg !6893
  store %struct._ContributionInfo** %1, %struct._ContributionInfo*** %contribution, align 8, !dbg !6894
  %2 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6895
  %cmp = icmp eq %struct._ContributionInfo** %2, null, !dbg !6897
  br i1 %cmp, label %if.then, label %if.end, !dbg !6898

if.then:                                          ; preds = %entry
  store %struct._ContributionInfo** null, %struct._ContributionInfo*** %retval, align 8, !dbg !6899
  br label %return, !dbg !6899

if.end:                                           ; preds = %entry
  %3 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6900
  %4 = bitcast %struct._ContributionInfo** %3 to i8*, !dbg !6900
  %5 = load i64, i64* %number_threads, align 8, !dbg !6901
  %mul = mul i64 %5, 8, !dbg !6902
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !6903
  store i64 0, i64* %i, align 8, !dbg !6904
  br label %for.cond, !dbg !6906

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !6907
  %7 = load i64, i64* %number_threads, align 8, !dbg !6909
  %cmp3 = icmp slt i64 %6, %7, !dbg !6910
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6911

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %count.addr, align 8, !dbg !6912
  %call4 = call i8* @AcquireAlignedMemory(i64 %8, i64 16) #14, !dbg !6912
  %9 = bitcast i8* %call4 to %struct._ContributionInfo*, !dbg !6914
  %10 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6915
  %11 = load i64, i64* %i, align 8, !dbg !6916
  %arrayidx = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %10, i64 %11, !dbg !6915
  store %struct._ContributionInfo* %9, %struct._ContributionInfo** %arrayidx, align 8, !dbg !6917
  %12 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6918
  %13 = load i64, i64* %i, align 8, !dbg !6920
  %arrayidx5 = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %12, i64 %13, !dbg !6918
  %14 = load %struct._ContributionInfo*, %struct._ContributionInfo** %arrayidx5, align 8, !dbg !6918
  %cmp6 = icmp eq %struct._ContributionInfo* %14, null, !dbg !6921
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6922

if.then7:                                         ; preds = %for.body
  %15 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6923
  %call8 = call %struct._ContributionInfo** @DestroyContributionThreadSet(%struct._ContributionInfo** %15), !dbg !6924
  store %struct._ContributionInfo** %call8, %struct._ContributionInfo*** %retval, align 8, !dbg !6925
  br label %return, !dbg !6925

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !6926

for.inc:                                          ; preds = %if.end9
  %16 = load i64, i64* %i, align 8, !dbg !6927
  %inc = add nsw i64 %16, 1, !dbg !6927
  store i64 %inc, i64* %i, align 8, !dbg !6927
  br label %for.cond, !dbg !6928, !llvm.loop !6929

for.end:                                          ; preds = %for.cond
  %17 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution, align 8, !dbg !6931
  store %struct._ContributionInfo** %17, %struct._ContributionInfo*** %retval, align 8, !dbg !6932
  br label %return, !dbg !6932

return:                                           ; preds = %for.end, %if.then7, %if.then
  %18 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %retval, align 8, !dbg !6933
  ret %struct._ContributionInfo** %18, !dbg !6933
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !6934 {
entry:
  ret i32 0, !dbg !6938
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !6939 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  %0 = load double, double* %x.addr, align 8, !dbg !6944
  %1 = load double, double* %y.addr, align 8, !dbg !6946
  %cmp = fcmp olt double %0, %1, !dbg !6947
  br i1 %cmp, label %if.then, label %if.end, !dbg !6948

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6949
  store double %2, double* %retval, align 8, !dbg !6950
  br label %return, !dbg !6950

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6951
  store double %3, double* %retval, align 8, !dbg !6952
  br label %return, !dbg !6952

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !6953
  ret double %4, !dbg !6953
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._ContributionInfo** @DestroyContributionThreadSet(%struct._ContributionInfo** %contribution) #0 !dbg !6954 {
entry:
  %contribution.addr = alloca %struct._ContributionInfo**, align 8
  %i = alloca i64, align 8
  store %struct._ContributionInfo** %contribution, %struct._ContributionInfo*** %contribution.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ContributionInfo*** %contribution.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6959, metadata !DIExpression()), !dbg !6960
  store i64 0, i64* %i, align 8, !dbg !6961
  br label %for.cond, !dbg !6963

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !6964
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !6966
  %cmp = icmp slt i64 %0, %call, !dbg !6967
  br i1 %cmp, label %for.body, label %for.end, !dbg !6968

for.body:                                         ; preds = %for.cond
  %1 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6969
  %2 = load i64, i64* %i, align 8, !dbg !6971
  %arrayidx = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %1, i64 %2, !dbg !6969
  %3 = load %struct._ContributionInfo*, %struct._ContributionInfo** %arrayidx, align 8, !dbg !6969
  %cmp1 = icmp ne %struct._ContributionInfo* %3, null, !dbg !6972
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6973

if.then:                                          ; preds = %for.body
  %4 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6974
  %5 = load i64, i64* %i, align 8, !dbg !6975
  %arrayidx2 = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %4, i64 %5, !dbg !6974
  %6 = load %struct._ContributionInfo*, %struct._ContributionInfo** %arrayidx2, align 8, !dbg !6974
  %7 = bitcast %struct._ContributionInfo* %6 to i8*, !dbg !6974
  %call3 = call i8* @RelinquishAlignedMemory(i8* %7), !dbg !6976
  %8 = bitcast i8* %call3 to %struct._ContributionInfo*, !dbg !6977
  %9 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6978
  %10 = load i64, i64* %i, align 8, !dbg !6979
  %arrayidx4 = getelementptr inbounds %struct._ContributionInfo*, %struct._ContributionInfo** %9, i64 %10, !dbg !6978
  store %struct._ContributionInfo* %8, %struct._ContributionInfo** %arrayidx4, align 8, !dbg !6980
  br label %if.end, !dbg !6978

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6981

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !6982
  %inc = add nsw i64 %11, 1, !dbg !6982
  store i64 %inc, i64* %i, align 8, !dbg !6982
  br label %for.cond, !dbg !6983, !llvm.loop !6984

for.end:                                          ; preds = %for.cond
  %12 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6986
  %13 = bitcast %struct._ContributionInfo** %12 to i8*, !dbg !6986
  %call5 = call i8* @RelinquishMagickMemory(i8* %13), !dbg !6987
  %14 = bitcast i8* %call5 to %struct._ContributionInfo**, !dbg !6988
  store %struct._ContributionInfo** %14, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6989
  %15 = load %struct._ContributionInfo**, %struct._ContributionInfo*** %contribution.addr, align 8, !dbg !6990
  ret %struct._ContributionInfo** %15, !dbg !6991
}

declare dso_local i64 @GetMagickResourceLimit(i32) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #7

declare dso_local i8* @RelinquishAlignedMemory(i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { allocsize(0) }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn }
attributes #13 = { nounwind }
attributes #14 = { allocsize(0,1) }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!644}
!llvm.module.flags = !{!884, !885, !886}
!llvm.ident = !{!887}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mapping", scope: !2, file: !3, line: 765, type: !878, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "AcquireResizeFilter", scope: !3, file: !3, line: 728, type: !4, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!3 = !DIFile(filename: "magick/resize.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !58, !641, !18, !642, !643}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResizeFilter", file: !8, line: 26, baseType: !9)
!8 = !DIFile(filename: "./magick/resize.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ResizeFilter", file: !3, line: 87, size: 640, elements: !10)
!10 = !{!11, !21, !22, !23, !24, !25, !26, !30, !53, !54}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !9, file: !3, line: 90, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DISubroutineType(types: !14)
!14 = !{!15, !18, !19}
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !16, line: 78, baseType: !17)
!16 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!17 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!18 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !9, file: !3, line: 91, baseType: !12, size: 64, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "support", scope: !9, file: !3, line: 92, baseType: !15, size: 32, offset: 128)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "window_support", scope: !9, file: !3, line: 93, baseType: !15, size: 32, offset: 160)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !9, file: !3, line: 94, baseType: !15, size: 32, offset: 192)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !9, file: !3, line: 95, baseType: !15, size: 32, offset: 224)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "coefficient", scope: !9, file: !3, line: 96, baseType: !27, size: 224, offset: 256)
!27 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 224, elements: !28)
!28 = !{!29}
!29 = !DISubrange(count: 7)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "filterWeightingType", scope: !9, file: !3, line: 99, baseType: !31, size: 32, offset: 480)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResizeWeightingFunctionType", file: !32, line: 44, baseType: !33)
!32 = !DIFile(filename: "./magick/resize-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !32, line: 25, baseType: !34, size: 32, elements: !35)
!34 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52}
!36 = !DIEnumerator(name: "BoxWeightingFunction", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "TriangleWeightingFunction", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "CubicBCWeightingFunction", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "HanningWeightingFunction", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "HammingWeightingFunction", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "BlackmanWeightingFunction", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "GaussianWeightingFunction", value: 6, isUnsigned: true)
!43 = !DIEnumerator(name: "QuadraticWeightingFunction", value: 7, isUnsigned: true)
!44 = !DIEnumerator(name: "JincWeightingFunction", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "SincWeightingFunction", value: 9, isUnsigned: true)
!46 = !DIEnumerator(name: "SincFastWeightingFunction", value: 10, isUnsigned: true)
!47 = !DIEnumerator(name: "KaiserWeightingFunction", value: 11, isUnsigned: true)
!48 = !DIEnumerator(name: "WelshWeightingFunction", value: 12, isUnsigned: true)
!49 = !DIEnumerator(name: "BohmanWeightingFunction", value: 13, isUnsigned: true)
!50 = !DIEnumerator(name: "LagrangeWeightingFunction", value: 14, isUnsigned: true)
!51 = !DIEnumerator(name: "CosineWeightingFunction", value: 15, isUnsigned: true)
!52 = !DIEnumerator(name: "LastWeightingFunction", value: 16, isUnsigned: true)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "windowWeightingType", scope: !9, file: !3, line: 100, baseType: !31, size: 32, offset: 512)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !9, file: !3, line: 103, baseType: !55, size: 64, offset: 576)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !16, line: 221, baseType: !61)
!61 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !62, line: 150, size: 105920, elements: !63)
!62 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!63 = !{!64, !71, !110, !137, !138, !151, !157, !158, !159, !160, !161, !162, !174, !175, !176, !177, !179, !193, !203, !205, !212, !215, !216, !217, !223, !224, !225, !234, !235, !236, !237, !238, !239, !276, !288, !296, !312, !385, !395, !397, !398, !399, !400, !401, !402, !403, !411, !432, !446, !447, !448, !449, !453, !457, !461, !462, !463, !464, !465, !556, !557, !559, !560, !570, !571, !573, !574, !575, !576, !577, !578, !596, !597, !598, !599, !600, !601, !602, !618, !619, !620, !621, !622, !626, !640}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !61, file: !62, line: 153, baseType: !65, size: 32)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !16, line: 209, baseType: !66)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 204, baseType: !34, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !61, file: !62, line: 156, baseType: !72, size: 32, offset: 32)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !73, line: 61, baseType: !74)
!73 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 25, baseType: !34, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109}
!76 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!80 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!81 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!82 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!83 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!84 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!85 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!86 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!87 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!88 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!89 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!90 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!91 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!92 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!93 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!94 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!95 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!96 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!97 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!98 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!99 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!100 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!101 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!102 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!103 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!104 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!105 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!106 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!107 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!108 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!109 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !61, file: !62, line: 159, baseType: !111, size: 32, offset: 64)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !112, line: 49, baseType: !113)
!112 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !112, line: 25, baseType: !34, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136}
!115 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!126 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!127 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!128 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!129 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!130 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!131 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!132 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!133 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!134 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!135 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!136 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !61, file: !62, line: 162, baseType: !55, size: 64, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !61, file: !62, line: 165, baseType: !139, size: 32, offset: 192)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !62, line: 86, baseType: !140)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 75, baseType: !34, size: 32, elements: !141)
!141 = !{!142, !143, !144, !145, !146, !147, !148, !149, !150}
!142 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!147 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!148 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!149 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!150 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !61, file: !62, line: 168, baseType: !152, size: 32, offset: 224)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !16, line: 215, baseType: !153)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 211, baseType: !34, size: 32, elements: !154)
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !61, file: !62, line: 169, baseType: !152, size: 32, offset: 256)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !61, file: !62, line: 172, baseType: !55, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !61, file: !62, line: 173, baseType: !55, size: 64, offset: 384)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !61, file: !62, line: 174, baseType: !55, size: 64, offset: 448)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !61, file: !62, line: 175, baseType: !55, size: 64, offset: 512)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !61, file: !62, line: 178, baseType: !163, size: 64, offset: 576)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !165, line: 148, baseType: !166)
!165 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !165, line: 131, size: 64, elements: !167)
!167 = !{!168, !171, !172, !173}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !166, file: !165, line: 143, baseType: !169, size: 16)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !16, line: 93, baseType: !170)
!170 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !166, file: !165, line: 144, baseType: !169, size: 16, offset: 16)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !166, file: !165, line: 145, baseType: !169, size: 16, offset: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !166, file: !165, line: 146, baseType: !169, size: 16, offset: 48)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !61, file: !62, line: 179, baseType: !164, size: 64, offset: 640)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !61, file: !62, line: 180, baseType: !164, size: 64, offset: 704)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !61, file: !62, line: 181, baseType: !164, size: 64, offset: 768)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !61, file: !62, line: 184, baseType: !178, size: 64, offset: 832)
!178 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !61, file: !62, line: 187, baseType: !180, size: 768, offset: 896)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !62, line: 128, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !62, line: 121, size: 768, elements: !182)
!182 = !{!183, !190, !191, !192}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !181, file: !62, line: 124, baseType: !184, size: 192)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !62, line: 101, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !62, line: 95, size: 192, elements: !186)
!186 = !{!187, !188, !189}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !185, file: !62, line: 98, baseType: !178, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !185, file: !62, line: 99, baseType: !178, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !185, file: !62, line: 100, baseType: !178, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !181, file: !62, line: 125, baseType: !184, size: 192, offset: 192)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !181, file: !62, line: 126, baseType: !184, size: 192, offset: 384)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !181, file: !62, line: 127, baseType: !184, size: 192, offset: 576)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !61, file: !62, line: 190, baseType: !194, size: 32, offset: 1664)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !195, line: 49, baseType: !196)
!195 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !195, line: 42, baseType: !34, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !61, file: !62, line: 193, baseType: !204, size: 64, offset: 1728)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !61, file: !62, line: 196, baseType: !206, size: 32, offset: 1792)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !62, line: 93, baseType: !207)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 88, baseType: !34, size: 32, elements: !208)
!208 = !{!209, !210, !211}
!209 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !61, file: !62, line: 199, baseType: !213, size: 64, offset: 1856)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !61, file: !62, line: 200, baseType: !213, size: 64, offset: 1920)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !61, file: !62, line: 201, baseType: !213, size: 64, offset: 1984)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !61, file: !62, line: 204, baseType: !218, size: 64, offset: 2048)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !219, line: 77, baseType: !220)
!219 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !221, line: 193, baseType: !222)
!221 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!222 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !61, file: !62, line: 207, baseType: !178, size: 64, offset: 2112)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !61, file: !62, line: 208, baseType: !178, size: 64, offset: 2176)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !61, file: !62, line: 211, baseType: !226, size: 256, offset: 2240)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !227, line: 130, baseType: !228)
!227 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !227, line: 121, size: 256, elements: !229)
!229 = !{!230, !231, !232, !233}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !228, file: !227, line: 124, baseType: !55, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !228, file: !227, line: 125, baseType: !55, size: 64, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !228, file: !227, line: 128, baseType: !218, size: 64, offset: 128)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !228, file: !227, line: 129, baseType: !218, size: 64, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !61, file: !62, line: 212, baseType: !226, size: 256, offset: 2496)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !61, file: !62, line: 213, baseType: !226, size: 256, offset: 2752)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !61, file: !62, line: 216, baseType: !178, size: 64, offset: 3008)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !61, file: !62, line: 217, baseType: !178, size: 64, offset: 3072)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !61, file: !62, line: 218, baseType: !178, size: 64, offset: 3136)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !61, file: !62, line: 221, baseType: !240, size: 32, offset: 3200)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !241, line: 66, baseType: !242)
!241 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !241, line: 32, baseType: !34, size: 32, elements: !243)
!243 = !{!244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275}
!244 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!247 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!248 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!249 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!250 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!251 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!252 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!253 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!254 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!255 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!256 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!257 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!258 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!259 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!260 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!261 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!262 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!263 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!264 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!265 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!266 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!267 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!268 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!269 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!270 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!271 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!272 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!273 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!274 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!275 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !61, file: !62, line: 224, baseType: !277, size: 32, offset: 3232)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !62, line: 73, baseType: !278)
!278 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 63, baseType: !34, size: 32, elements: !279)
!279 = !{!280, !281, !282, !283, !284, !285, !286, !287}
!280 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!284 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!285 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!286 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!287 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !61, file: !62, line: 227, baseType: !289, size: 32, offset: 3264)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !290, line: 35, baseType: !291)
!290 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!291 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !290, line: 30, baseType: !34, size: 32, elements: !292)
!292 = !{!293, !294, !295}
!293 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!294 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!295 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !61, file: !62, line: 230, baseType: !297, size: 32, offset: 3296)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !227, line: 91, baseType: !298)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !227, line: 77, baseType: !34, size: 32, elements: !299)
!299 = !{!300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311}
!300 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!301 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!302 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!303 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!304 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!305 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!306 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!307 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!308 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!309 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!310 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!311 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !61, file: !62, line: 233, baseType: !313, size: 32, offset: 3328)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !314, line: 99, baseType: !315)
!314 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!315 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !314, line: 25, baseType: !34, size: 32, elements: !316)
!316 = !{!317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384}
!317 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!319 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!320 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!321 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!322 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!323 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!324 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!325 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!326 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!327 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!328 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!329 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!330 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!331 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!332 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!333 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!334 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!335 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!336 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!337 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!338 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!339 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!340 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!341 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!342 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!343 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!344 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!345 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!346 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!347 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!348 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!349 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!350 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!351 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!352 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!353 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!354 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!355 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!356 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!357 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!358 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!359 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!360 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!361 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!362 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!363 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!364 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!365 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!366 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!367 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!368 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!369 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!370 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!371 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!372 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!373 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!374 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!375 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!376 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!377 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!378 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!379 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!380 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!381 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!382 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!383 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!384 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !61, file: !62, line: 236, baseType: !386, size: 32, offset: 3360)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !387, line: 32, baseType: !388)
!387 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !387, line: 25, baseType: !34, size: 32, elements: !389)
!389 = !{!390, !391, !392, !393, !394}
!390 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!391 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !61, file: !62, line: 239, baseType: !396, size: 64, offset: 3392)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !61, file: !62, line: 242, baseType: !55, size: 64, offset: 3456)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !61, file: !62, line: 243, baseType: !55, size: 64, offset: 3520)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !61, file: !62, line: 246, baseType: !218, size: 64, offset: 3584)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !61, file: !62, line: 249, baseType: !55, size: 64, offset: 3648)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !61, file: !62, line: 250, baseType: !55, size: 64, offset: 3712)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !61, file: !62, line: 253, baseType: !218, size: 64, offset: 3776)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !61, file: !62, line: 256, baseType: !404, size: 192, offset: 3840)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !405, line: 68, baseType: !406)
!405 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !405, line: 62, size: 192, elements: !407)
!407 = !{!408, !409, !410}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !406, file: !405, line: 65, baseType: !178, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !406, file: !405, line: 66, baseType: !178, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !406, file: !405, line: 67, baseType: !178, size: 64, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !61, file: !62, line: 259, baseType: !412, size: 512, offset: 4032)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !413, line: 51, baseType: !414)
!413 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !413, line: 40, size: 512, elements: !415)
!415 = !{!416, !423, !424, !431}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !414, file: !413, line: 43, baseType: !417, size: 192)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !413, line: 38, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !413, line: 32, size: 192, elements: !419)
!419 = !{!420, !421, !422}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !418, file: !413, line: 35, baseType: !178, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !418, file: !413, line: 36, baseType: !178, size: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !418, file: !413, line: 37, baseType: !178, size: 64, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !414, file: !413, line: 44, baseType: !417, size: 192, offset: 192)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !414, file: !413, line: 47, baseType: !425, size: 32, offset: 384)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !413, line: 30, baseType: !426)
!426 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 25, baseType: !34, size: 32, elements: !427)
!427 = !{!428, !429, !430}
!428 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!429 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!430 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !414, file: !413, line: 50, baseType: !55, size: 64, offset: 448)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !61, file: !62, line: 262, baseType: !433, size: 64, offset: 4544)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !434, line: 26, baseType: !435)
!434 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!152, !438, !440, !443, !204}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !16, line: 150, baseType: !442)
!442 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !16, line: 151, baseType: !445)
!445 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !61, file: !62, line: 265, baseType: !204, size: 64, offset: 4608)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !61, file: !62, line: 266, baseType: !204, size: 64, offset: 4672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !61, file: !62, line: 267, baseType: !204, size: 64, offset: 4736)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !61, file: !62, line: 270, baseType: !450, size: 64, offset: 4800)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !112, line: 52, baseType: !452)
!452 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !112, line: 51, flags: DIFlagFwdDecl)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !61, file: !62, line: 273, baseType: !454, size: 64, offset: 4864)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !16, line: 217, baseType: !456)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !16, line: 217, flags: DIFlagFwdDecl)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !61, file: !62, line: 276, baseType: !458, size: 32768, offset: 4928)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 32768, elements: !459)
!459 = !{!460}
!460 = !DISubrange(count: 4096)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !61, file: !62, line: 277, baseType: !458, size: 32768, offset: 37696)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !61, file: !62, line: 278, baseType: !458, size: 32768, offset: 70464)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !61, file: !62, line: 281, baseType: !55, size: 64, offset: 103232)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !61, file: !62, line: 282, baseType: !55, size: 64, offset: 103296)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !61, file: !62, line: 285, baseType: !466, size: 448, offset: 103360)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !16, line: 219, baseType: !467)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !468, line: 102, size: 448, elements: !469)
!468 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!469 = !{!470, !544, !546, !547, !548, !549, !550, !555}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !467, file: !468, line: 105, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !468, line: 100, baseType: !472)
!472 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !468, line: 28, baseType: !34, size: 32, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!474 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!475 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!476 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!477 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!478 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!479 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!480 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!481 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!482 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!483 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!484 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!485 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!486 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!487 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!488 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!489 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!490 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!491 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!492 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!493 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!494 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!495 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!496 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!497 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!498 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!499 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!500 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!501 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!502 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!503 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!504 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!505 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!506 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!507 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!508 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!509 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!510 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!511 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!512 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!513 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!514 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!515 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!516 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!517 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!518 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!519 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!520 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!521 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!522 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!523 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!524 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!525 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!526 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!527 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!528 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!529 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!530 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!531 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!532 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!533 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!534 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!535 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!536 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!537 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!538 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!539 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!540 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!541 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!542 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!543 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !467, file: !468, line: 108, baseType: !545, size: 32, offset: 32)
!545 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !467, file: !468, line: 111, baseType: !213, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !467, file: !468, line: 112, baseType: !213, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !467, file: !468, line: 115, baseType: !204, size: 64, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !467, file: !468, line: 118, baseType: !152, size: 32, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !467, file: !468, line: 121, baseType: !551, size: 64, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !553, line: 26, baseType: !554)
!553 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !553, line: 25, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !467, file: !468, line: 124, baseType: !55, size: 64, offset: 384)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !61, file: !62, line: 288, baseType: !152, size: 32, offset: 103808)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !61, file: !62, line: 291, baseType: !558, size: 64, offset: 103872)
!558 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !218)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !61, file: !62, line: 294, baseType: !551, size: 64, offset: 103936)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !61, file: !62, line: 297, baseType: !561, size: 256, offset: 104000)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !195, line: 40, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !195, line: 27, size: 256, elements: !563)
!563 = !{!564, !565, !566, !569}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !562, file: !195, line: 30, baseType: !213, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !562, file: !195, line: 33, baseType: !55, size: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !562, file: !195, line: 36, baseType: !567, size: 64, offset: 128)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !562, file: !195, line: 39, baseType: !55, size: 64, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !61, file: !62, line: 298, baseType: !561, size: 256, offset: 104256)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !61, file: !62, line: 299, baseType: !572, size: 64, offset: 104512)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !61, file: !62, line: 302, baseType: !55, size: 64, offset: 104576)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !61, file: !62, line: 305, baseType: !55, size: 64, offset: 104640)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !61, file: !62, line: 308, baseType: !396, size: 64, offset: 104704)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !61, file: !62, line: 309, baseType: !396, size: 64, offset: 104768)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !61, file: !62, line: 310, baseType: !396, size: 64, offset: 104832)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !61, file: !62, line: 313, baseType: !579, size: 32, offset: 104896)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !165, line: 47, baseType: !580)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !165, line: 31, baseType: !34, size: 32, elements: !581)
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!582 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!583 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!585 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!586 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!587 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!588 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!589 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!590 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!591 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!592 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!593 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!594 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!595 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !61, file: !62, line: 316, baseType: !152, size: 32, offset: 104928)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !61, file: !62, line: 319, baseType: !164, size: 64, offset: 104960)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !61, file: !62, line: 322, baseType: !396, size: 64, offset: 105024)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !61, file: !62, line: 325, baseType: !226, size: 256, offset: 105088)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !61, file: !62, line: 328, baseType: !204, size: 64, offset: 105344)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !61, file: !62, line: 329, baseType: !204, size: 64, offset: 105408)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !61, file: !62, line: 332, baseType: !603, size: 32, offset: 105472)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !62, line: 61, baseType: !604)
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 47, baseType: !34, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617}
!606 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!608 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!609 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!610 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!611 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!612 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!613 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!614 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!615 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!616 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!617 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !61, file: !62, line: 335, baseType: !152, size: 32, offset: 105504)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !61, file: !62, line: 338, baseType: !444, size: 64, offset: 105536)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !61, file: !62, line: 341, baseType: !152, size: 32, offset: 105600)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !61, file: !62, line: 344, baseType: !55, size: 64, offset: 105664)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !61, file: !62, line: 347, baseType: !623, size: 64, offset: 105728)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !624, line: 7, baseType: !625)
!624 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !221, line: 160, baseType: !222)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !61, file: !62, line: 350, baseType: !627, size: 32, offset: 105792)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !165, line: 79, baseType: !628)
!628 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !165, line: 67, baseType: !34, size: 32, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !635, !636, !637, !638, !639}
!630 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!631 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!632 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!633 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!634 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!635 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!636 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!637 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!638 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!639 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !61, file: !62, line: 353, baseType: !55, size: 64, offset: 105856)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !645, retainedTypes: !801, globals: !833, splitDebugInlining: false, nameTableKind: None)
!645 = !{!33, !66, !74, !113, !140, !153, !196, !207, !242, !278, !291, !298, !315, !388, !426, !472, !580, !604, !628, !646, !671, !746, !774, !789}
!646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 34, baseType: !34, size: 32, elements: !648)
!647 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!649 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!650 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!651 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!652 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!653 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!654 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!655 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!656 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!657 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!658 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!659 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!660 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!661 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!662 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!663 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!664 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!665 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!666 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!667 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!668 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!669 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!670 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!671 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 25, baseType: !545, size: 32, elements: !673)
!672 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745}
!674 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!675 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!676 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!677 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!678 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!679 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!680 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!681 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!682 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!683 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!684 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!685 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!686 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!687 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!688 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!689 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!690 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!691 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!692 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!693 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!694 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!695 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!696 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!697 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!698 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!699 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!700 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!701 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!702 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!703 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!704 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!705 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!706 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!707 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!708 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!709 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!710 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!711 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!712 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!713 = !DIEnumerator(name: "MagickListOptions", value: 38)
!714 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!715 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!716 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!717 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!718 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!719 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!720 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!721 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!722 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!723 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!724 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!725 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!726 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!727 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!728 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!729 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!730 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!731 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!732 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!733 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!734 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!735 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!736 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!737 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!738 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!739 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!740 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!741 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!742 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!743 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!744 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!745 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!746 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !227, line: 25, baseType: !34, size: 32, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773}
!748 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!749 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!750 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!751 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!752 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!753 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!754 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!755 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!756 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!757 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!758 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!759 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!760 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!761 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!762 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!763 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!764 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!765 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!766 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!767 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!768 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!769 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!770 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!771 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!772 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!773 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!774 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 30, baseType: !34, size: 32, elements: !775)
!775 = !{!776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788}
!776 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!777 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!778 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!779 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!780 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!781 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!782 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!783 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!784 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!785 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!786 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!787 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!788 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!789 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !790, line: 25, baseType: !34, size: 32, elements: !791)
!790 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800}
!792 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!793 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!794 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!795 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!796 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!797 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!798 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!799 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!800 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!801 = !{!57, !6, !204, !545, !438, !240, !15, !802, !218, !222, !178, !803, !804, !163, !433, !805, !807, !55, !444, !213, !810, !811, !809, !812, !169, !441, !826, !827}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !165, line: 129, baseType: !169)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !165, line: 127, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !165, line: 104, size: 448, elements: !815)
!815 = !{!816, !817, !818, !819, !820, !821, !822, !823, !824, !825}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !814, file: !165, line: 107, baseType: !65, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !814, file: !165, line: 110, baseType: !72, size: 32, offset: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !814, file: !165, line: 113, baseType: !152, size: 32, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !814, file: !165, line: 116, baseType: !178, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !814, file: !165, line: 119, baseType: !55, size: 64, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !814, file: !165, line: 122, baseType: !15, size: 32, offset: 256)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !814, file: !165, line: 123, baseType: !15, size: 32, offset: 288)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !814, file: !165, line: 124, baseType: !15, size: 32, offset: 320)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !814, file: !165, line: 125, baseType: !15, size: 32, offset: 352)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !814, file: !165, line: 126, baseType: !15, size: 32, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContributionInfo", file: !3, line: 2394, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ContributionInfo", file: !3, line: 2387, size: 128, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !829, file: !3, line: 2390, baseType: !15, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !829, file: !3, line: 2393, baseType: !218, size: 64, offset: 64)
!833 = !{!0, !834, !848, !853, !863, !865, !871, !873, !876}
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "filters", scope: !2, file: !3, line: 821, type: !836, isLocal: true, isDefinition: true)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 11904, elements: !846)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2, file: !3, line: 810, size: 384, elements: !839)
!839 = !{!840, !841, !842, !843, !844, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !838, file: !3, line: 813, baseType: !12, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "support", scope: !838, file: !3, line: 816, baseType: !178, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !838, file: !3, line: 817, baseType: !178, size: 64, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !838, file: !3, line: 819, baseType: !178, size: 64, offset: 192)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !838, file: !3, line: 819, baseType: !178, size: 64, offset: 256)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "weightingFunctionType", scope: !838, file: !3, line: 820, baseType: !31, size: 32, offset: 320)
!846 = !{!847}
!847 = !DISubrange(count: 31)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "jinc_zeros", scope: !2, file: !3, line: 876, type: !850, isLocal: true, isDefinition: true)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 1024, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 16)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "Pone", scope: !855, file: !3, line: 1337, type: !859, isLocal: true, isDefinition: true)
!855 = distinct !DISubprogram(name: "J1", scope: !3, file: !3, line: 1327, type: !856, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!856 = !DISubroutineType(types: !857)
!857 = !{!15, !15}
!858 = !{}
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 576, elements: !861)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!861 = !{!862}
!862 = !DISubrange(count: 9)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "Qone", scope: !855, file: !3, line: 1349, type: !859, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "Pone", scope: !867, file: !3, line: 1383, type: !868, isLocal: true, isDefinition: true)
!867 = distinct !DISubprogram(name: "P1", scope: !3, file: !3, line: 1373, type: !856, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 384, elements: !869)
!869 = !{!870}
!870 = !DISubrange(count: 6)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "Qone", scope: !867, file: !3, line: 1392, type: !868, isLocal: true, isDefinition: true)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "Pone", scope: !875, file: !3, line: 1423, type: !868, isLocal: true, isDefinition: true)
!875 = distinct !DISubprogram(name: "Q1", scope: !3, file: !3, line: 1413, type: !856, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "Qone", scope: !875, file: !3, line: 1432, type: !868, isLocal: true, isDefinition: true)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 1984, elements: !846)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2, file: !3, line: 760, size: 64, elements: !881)
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !880, file: !3, line: 763, baseType: !240, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !880, file: !3, line: 764, baseType: !240, size: 32, offset: 32)
!884 = !{i32 7, !"Dwarf Version", i32 4}
!885 = !{i32 2, !"Debug Info Version", i32 3}
!886 = !{i32 1, !"wchar_size", i32 4}
!887 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!888 = !DILocalVariable(name: "image", arg: 1, scope: !2, file: !3, line: 728, type: !58)
!889 = !DILocation(line: 728, column: 61, scope: !2)
!890 = !DILocalVariable(name: "filter", arg: 2, scope: !2, file: !3, line: 729, type: !641)
!891 = !DILocation(line: 729, column: 21, scope: !2)
!892 = !DILocalVariable(name: "blur", arg: 3, scope: !2, file: !3, line: 729, type: !18)
!893 = !DILocation(line: 729, column: 49, scope: !2)
!894 = !DILocalVariable(name: "cylindrical", arg: 4, scope: !2, file: !3, line: 730, type: !642)
!895 = !DILocation(line: 730, column: 27, scope: !2)
!896 = !DILocalVariable(name: "exception", arg: 5, scope: !2, file: !3, line: 730, type: !643)
!897 = !DILocation(line: 730, column: 54, scope: !2)
!898 = !DILocalVariable(name: "artifact", scope: !2, file: !3, line: 733, type: !438)
!899 = !DILocation(line: 733, column: 6, scope: !2)
!900 = !DILocalVariable(name: "filter_type", scope: !2, file: !3, line: 736, type: !240)
!901 = !DILocation(line: 736, column: 5, scope: !2)
!902 = !DILocalVariable(name: "window_type", scope: !2, file: !3, line: 737, type: !240)
!903 = !DILocation(line: 737, column: 5, scope: !2)
!904 = !DILocalVariable(name: "B", scope: !2, file: !3, line: 740, type: !15)
!905 = !DILocation(line: 740, column: 5, scope: !2)
!906 = !DILocalVariable(name: "C", scope: !2, file: !3, line: 741, type: !15)
!907 = !DILocation(line: 741, column: 5, scope: !2)
!908 = !DILocalVariable(name: "value", scope: !2, file: !3, line: 742, type: !15)
!909 = !DILocation(line: 742, column: 5, scope: !2)
!910 = !DILocalVariable(name: "resize_filter", scope: !2, file: !3, line: 745, type: !6)
!911 = !DILocation(line: 745, column: 6, scope: !2)
!912 = !DILocation(line: 901, column: 7, scope: !913)
!913 = distinct !DILexicalBlock(scope: !2, file: !3, line: 901, column: 7)
!914 = !DILocation(line: 901, column: 14, scope: !913)
!915 = !DILocation(line: 901, column: 20, scope: !913)
!916 = !DILocation(line: 901, column: 7, scope: !2)
!917 = !DILocation(line: 902, column: 61, scope: !913)
!918 = !DILocation(line: 902, column: 68, scope: !913)
!919 = !DILocation(line: 902, column: 12, scope: !913)
!920 = !DILocation(line: 902, column: 5, scope: !913)
!921 = !DILocation(line: 906, column: 34, scope: !2)
!922 = !DILocation(line: 906, column: 17, scope: !2)
!923 = !DILocation(line: 906, column: 16, scope: !2)
!924 = !DILocation(line: 907, column: 10, scope: !2)
!925 = !DILocation(line: 908, column: 7, scope: !926)
!926 = distinct !DILexicalBlock(scope: !2, file: !3, line: 908, column: 7)
!927 = !DILocation(line: 908, column: 21, scope: !926)
!928 = !DILocation(line: 908, column: 7, scope: !2)
!929 = !DILocalVariable(name: "message", scope: !930, file: !3, line: 909, type: !213)
!930 = distinct !DILexicalBlock(scope: !926, file: !3, line: 909, column: 5)
!931 = !DILocation(line: 909, column: 5, scope: !930)
!932 = !DILocalVariable(name: "exception", scope: !930, file: !3, line: 909, type: !466)
!933 = !DILocation(line: 910, column: 28, scope: !2)
!934 = !DILocation(line: 910, column: 10, scope: !2)
!935 = !DILocation(line: 914, column: 23, scope: !2)
!936 = !DILocation(line: 914, column: 15, scope: !2)
!937 = !DILocation(line: 914, column: 31, scope: !2)
!938 = !DILocation(line: 914, column: 14, scope: !2)
!939 = !DILocation(line: 915, column: 23, scope: !2)
!940 = !DILocation(line: 915, column: 15, scope: !2)
!941 = !DILocation(line: 915, column: 31, scope: !2)
!942 = !DILocation(line: 915, column: 14, scope: !2)
!943 = !DILocation(line: 916, column: 25, scope: !2)
!944 = !DILocation(line: 916, column: 3, scope: !2)
!945 = !DILocation(line: 916, column: 18, scope: !2)
!946 = !DILocation(line: 916, column: 23, scope: !2)
!947 = !DILocation(line: 918, column: 7, scope: !948)
!948 = distinct !DILexicalBlock(scope: !2, file: !3, line: 918, column: 7)
!949 = !DILocation(line: 918, column: 19, scope: !948)
!950 = !DILocation(line: 918, column: 34, scope: !948)
!951 = !DILocation(line: 918, column: 37, scope: !948)
!952 = !DILocation(line: 918, column: 49, scope: !948)
!953 = !DILocation(line: 919, column: 8, scope: !948)
!954 = !DILocation(line: 919, column: 11, scope: !948)
!955 = !DILocation(line: 919, column: 18, scope: !948)
!956 = !DILocation(line: 918, column: 7, scope: !2)
!957 = !DILocation(line: 920, column: 16, scope: !948)
!958 = !DILocation(line: 920, column: 5, scope: !948)
!959 = !DILocation(line: 923, column: 29, scope: !2)
!960 = !DILocation(line: 923, column: 12, scope: !2)
!961 = !DILocation(line: 923, column: 11, scope: !2)
!962 = !DILocation(line: 924, column: 7, scope: !963)
!963 = distinct !DILexicalBlock(scope: !2, file: !3, line: 924, column: 7)
!964 = !DILocation(line: 924, column: 16, scope: !963)
!965 = !DILocation(line: 924, column: 7, scope: !2)
!966 = !DILocalVariable(name: "option", scope: !967, file: !3, line: 927, type: !218)
!967 = distinct !DILexicalBlock(scope: !963, file: !3, line: 925, column: 5)
!968 = !DILocation(line: 927, column: 9, scope: !967)
!969 = !DILocation(line: 929, column: 65, scope: !967)
!970 = !DILocation(line: 929, column: 14, scope: !967)
!971 = !DILocation(line: 929, column: 13, scope: !967)
!972 = !DILocation(line: 930, column: 30, scope: !973)
!973 = distinct !DILexicalBlock(scope: !967, file: !3, line: 930, column: 11)
!974 = !DILocation(line: 930, column: 28, scope: !973)
!975 = !DILocation(line: 930, column: 38, scope: !973)
!976 = !DILocation(line: 930, column: 42, scope: !973)
!977 = !DILocation(line: 930, column: 49, scope: !973)
!978 = !DILocation(line: 930, column: 11, scope: !967)
!979 = !DILocation(line: 932, column: 37, scope: !980)
!980 = distinct !DILexicalBlock(scope: !973, file: !3, line: 931, column: 9)
!981 = !DILocation(line: 932, column: 23, scope: !980)
!982 = !DILocation(line: 932, column: 22, scope: !980)
!983 = !DILocation(line: 933, column: 22, scope: !980)
!984 = !DILocation(line: 934, column: 9, scope: !980)
!985 = !DILocation(line: 936, column: 33, scope: !967)
!986 = !DILocation(line: 936, column: 16, scope: !967)
!987 = !DILocation(line: 936, column: 15, scope: !967)
!988 = !DILocation(line: 937, column: 11, scope: !989)
!989 = distinct !DILexicalBlock(scope: !967, file: !3, line: 937, column: 11)
!990 = !DILocation(line: 937, column: 20, scope: !989)
!991 = !DILocation(line: 937, column: 11, scope: !967)
!992 = !DILocation(line: 939, column: 69, scope: !993)
!993 = distinct !DILexicalBlock(scope: !989, file: !3, line: 938, column: 9)
!994 = !DILocation(line: 939, column: 18, scope: !993)
!995 = !DILocation(line: 939, column: 17, scope: !993)
!996 = !DILocation(line: 940, column: 34, scope: !997)
!997 = distinct !DILexicalBlock(scope: !993, file: !3, line: 940, column: 15)
!998 = !DILocation(line: 940, column: 32, scope: !997)
!999 = !DILocation(line: 940, column: 42, scope: !997)
!1000 = !DILocation(line: 940, column: 46, scope: !997)
!1001 = !DILocation(line: 940, column: 53, scope: !997)
!1002 = !DILocation(line: 940, column: 15, scope: !993)
!1003 = !DILocation(line: 941, column: 39, scope: !997)
!1004 = !DILocation(line: 941, column: 25, scope: !997)
!1005 = !DILocation(line: 941, column: 24, scope: !997)
!1006 = !DILocation(line: 941, column: 13, scope: !997)
!1007 = !DILocation(line: 942, column: 9, scope: !993)
!1008 = !DILocation(line: 943, column: 5, scope: !967)
!1009 = !DILocation(line: 947, column: 33, scope: !1010)
!1010 = distinct !DILexicalBlock(scope: !963, file: !3, line: 945, column: 5)
!1011 = !DILocation(line: 947, column: 16, scope: !1010)
!1012 = !DILocation(line: 947, column: 15, scope: !1010)
!1013 = !DILocation(line: 948, column: 11, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 948, column: 11)
!1015 = !DILocation(line: 948, column: 20, scope: !1014)
!1016 = !DILocation(line: 948, column: 11, scope: !1010)
!1017 = !DILocalVariable(name: "option", scope: !1018, file: !3, line: 951, type: !218)
!1018 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 949, column: 9)
!1019 = !DILocation(line: 951, column: 13, scope: !1018)
!1020 = !DILocation(line: 953, column: 69, scope: !1018)
!1021 = !DILocation(line: 953, column: 18, scope: !1018)
!1022 = !DILocation(line: 953, column: 17, scope: !1018)
!1023 = !DILocation(line: 954, column: 34, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !1018, file: !3, line: 954, column: 15)
!1025 = !DILocation(line: 954, column: 32, scope: !1024)
!1026 = !DILocation(line: 954, column: 42, scope: !1024)
!1027 = !DILocation(line: 954, column: 46, scope: !1024)
!1028 = !DILocation(line: 954, column: 53, scope: !1024)
!1029 = !DILocation(line: 954, column: 15, scope: !1018)
!1030 = !DILocation(line: 956, column: 27, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1024, file: !3, line: 955, column: 13)
!1032 = !DILocation(line: 956, column: 39, scope: !1031)
!1033 = !DILocation(line: 956, column: 26, scope: !1031)
!1034 = !DILocation(line: 958, column: 41, scope: !1031)
!1035 = !DILocation(line: 958, column: 27, scope: !1031)
!1036 = !DILocation(line: 958, column: 26, scope: !1031)
!1037 = !DILocation(line: 959, column: 13, scope: !1031)
!1038 = !DILocation(line: 960, column: 9, scope: !1018)
!1039 = !DILocation(line: 964, column: 33, scope: !2)
!1040 = !DILocation(line: 964, column: 25, scope: !2)
!1041 = !DILocation(line: 964, column: 46, scope: !2)
!1042 = !DILocation(line: 964, column: 3, scope: !2)
!1043 = !DILocation(line: 964, column: 18, scope: !2)
!1044 = !DILocation(line: 964, column: 24, scope: !2)
!1045 = !DILocation(line: 965, column: 34, scope: !2)
!1046 = !DILocation(line: 965, column: 26, scope: !2)
!1047 = !DILocation(line: 965, column: 47, scope: !2)
!1048 = !DILocation(line: 965, column: 3, scope: !2)
!1049 = !DILocation(line: 965, column: 18, scope: !2)
!1050 = !DILocation(line: 965, column: 25, scope: !2)
!1051 = !DILocation(line: 966, column: 46, scope: !2)
!1052 = !DILocation(line: 966, column: 38, scope: !2)
!1053 = !DILocation(line: 966, column: 59, scope: !2)
!1054 = !DILocation(line: 966, column: 3, scope: !2)
!1055 = !DILocation(line: 966, column: 18, scope: !2)
!1056 = !DILocation(line: 966, column: 37, scope: !2)
!1057 = !DILocation(line: 967, column: 33, scope: !2)
!1058 = !DILocation(line: 967, column: 25, scope: !2)
!1059 = !DILocation(line: 967, column: 46, scope: !2)
!1060 = !DILocation(line: 967, column: 3, scope: !2)
!1061 = !DILocation(line: 967, column: 18, scope: !2)
!1062 = !DILocation(line: 967, column: 24, scope: !2)
!1063 = !DILocation(line: 968, column: 46, scope: !2)
!1064 = !DILocation(line: 968, column: 38, scope: !2)
!1065 = !DILocation(line: 968, column: 59, scope: !2)
!1066 = !DILocation(line: 968, column: 3, scope: !2)
!1067 = !DILocation(line: 968, column: 18, scope: !2)
!1068 = !DILocation(line: 968, column: 37, scope: !2)
!1069 = !DILocation(line: 969, column: 32, scope: !2)
!1070 = !DILocation(line: 969, column: 24, scope: !2)
!1071 = !DILocation(line: 969, column: 45, scope: !2)
!1072 = !DILocation(line: 969, column: 3, scope: !2)
!1073 = !DILocation(line: 969, column: 18, scope: !2)
!1074 = !DILocation(line: 969, column: 23, scope: !2)
!1075 = !DILocation(line: 970, column: 3, scope: !2)
!1076 = !DILocation(line: 970, column: 18, scope: !2)
!1077 = !DILocation(line: 970, column: 27, scope: !2)
!1078 = !DILocation(line: 973, column: 7, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !2, file: !3, line: 973, column: 7)
!1080 = !DILocation(line: 973, column: 19, scope: !1079)
!1081 = !DILocation(line: 973, column: 7, scope: !2)
!1082 = !DILocation(line: 974, column: 13, scope: !1079)
!1083 = !DILocation(line: 974, column: 5, scope: !1079)
!1084 = !DILocation(line: 978, column: 9, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 975, column: 5)
!1086 = !DILocation(line: 978, column: 24, scope: !1085)
!1087 = !DILocation(line: 978, column: 31, scope: !1085)
!1088 = !DILocation(line: 979, column: 9, scope: !1085)
!1089 = !DILocation(line: 985, column: 51, scope: !1085)
!1090 = !DILocation(line: 985, column: 9, scope: !1085)
!1091 = !DILocation(line: 985, column: 24, scope: !1085)
!1092 = !DILocation(line: 985, column: 30, scope: !1085)
!1093 = !DILocation(line: 986, column: 51, scope: !1085)
!1094 = !DILocation(line: 986, column: 9, scope: !1085)
!1095 = !DILocation(line: 986, column: 24, scope: !1085)
!1096 = !DILocation(line: 986, column: 30, scope: !1085)
!1097 = !DILocation(line: 987, column: 50, scope: !1085)
!1098 = !DILocation(line: 987, column: 30, scope: !1085)
!1099 = !DILocation(line: 987, column: 9, scope: !1085)
!1100 = !DILocation(line: 987, column: 24, scope: !1085)
!1101 = !DILocation(line: 987, column: 29, scope: !1085)
!1102 = !DILocation(line: 989, column: 9, scope: !1085)
!1103 = !DILocation(line: 991, column: 9, scope: !1085)
!1104 = !DILocation(line: 992, column: 5, scope: !1085)
!1105 = !DILocation(line: 994, column: 11, scope: !2)
!1106 = !DILocation(line: 994, column: 3, scope: !2)
!1107 = !DILocation(line: 997, column: 7, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !2, file: !3, line: 995, column: 3)
!1109 = !DILocation(line: 997, column: 22, scope: !1108)
!1110 = !DILocation(line: 997, column: 27, scope: !1108)
!1111 = !DILocation(line: 998, column: 7, scope: !1108)
!1112 = !DILocation(line: 1000, column: 7, scope: !1108)
!1113 = !DILocation(line: 1000, column: 22, scope: !1108)
!1114 = !DILocation(line: 1000, column: 27, scope: !1108)
!1115 = !DILocation(line: 1001, column: 7, scope: !1108)
!1116 = !DILocation(line: 1004, column: 7, scope: !1108)
!1117 = !DILocation(line: 1012, column: 8, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1012, column: 7)
!1119 = !DILocation(line: 1012, column: 23, scope: !1118)
!1120 = !DILocation(line: 1012, column: 30, scope: !1118)
!1121 = !DILocation(line: 1012, column: 43, scope: !1118)
!1122 = !DILocation(line: 1013, column: 8, scope: !1118)
!1123 = !DILocation(line: 1013, column: 23, scope: !1118)
!1124 = !DILocation(line: 1013, column: 30, scope: !1118)
!1125 = !DILocation(line: 1012, column: 7, scope: !2)
!1126 = !DILocation(line: 1014, column: 10, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 1013, column: 45)
!1128 = !DILocation(line: 1015, column: 31, scope: !1127)
!1129 = !DILocation(line: 1015, column: 14, scope: !1127)
!1130 = !DILocation(line: 1015, column: 13, scope: !1127)
!1131 = !DILocation(line: 1016, column: 9, scope: !1132)
!1132 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 1016, column: 9)
!1133 = !DILocation(line: 1016, column: 18, scope: !1132)
!1134 = !DILocation(line: 1016, column: 9, scope: !1127)
!1135 = !DILocation(line: 1017, column: 28, scope: !1132)
!1136 = !DILocation(line: 1017, column: 13, scope: !1132)
!1137 = !DILocation(line: 1017, column: 12, scope: !1132)
!1138 = !DILocation(line: 1017, column: 7, scope: !1132)
!1139 = !DILocation(line: 1019, column: 35, scope: !1127)
!1140 = !DILocation(line: 1019, column: 5, scope: !1127)
!1141 = !DILocation(line: 1019, column: 20, scope: !1127)
!1142 = !DILocation(line: 1019, column: 34, scope: !1127)
!1143 = !DILocation(line: 1020, column: 61, scope: !1127)
!1144 = !DILocation(line: 1020, column: 60, scope: !1127)
!1145 = !DILocation(line: 1020, column: 67, scope: !1127)
!1146 = !DILocation(line: 1020, column: 66, scope: !1127)
!1147 = !DILocation(line: 1020, column: 35, scope: !1127)
!1148 = !DILocation(line: 1020, column: 5, scope: !1127)
!1149 = !DILocation(line: 1020, column: 20, scope: !1127)
!1150 = !DILocation(line: 1020, column: 34, scope: !1127)
!1151 = !DILocation(line: 1021, column: 67, scope: !1127)
!1152 = !DILocation(line: 1021, column: 66, scope: !1127)
!1153 = !DILocation(line: 1021, column: 73, scope: !1127)
!1154 = !DILocation(line: 1021, column: 72, scope: !1127)
!1155 = !DILocation(line: 1021, column: 35, scope: !1127)
!1156 = !DILocation(line: 1021, column: 5, scope: !1127)
!1157 = !DILocation(line: 1021, column: 20, scope: !1127)
!1158 = !DILocation(line: 1021, column: 34, scope: !1127)
!1159 = !DILocation(line: 1023, column: 10, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 1023, column: 10)
!1161 = !DILocation(line: 1023, column: 16, scope: !1160)
!1162 = !DILocation(line: 1023, column: 10, scope: !1127)
!1163 = !DILocation(line: 1024, column: 33, scope: !1160)
!1164 = !DILocation(line: 1024, column: 38, scope: !1160)
!1165 = !DILocation(line: 1024, column: 7, scope: !1160)
!1166 = !DILocation(line: 1024, column: 22, scope: !1160)
!1167 = !DILocation(line: 1024, column: 30, scope: !1160)
!1168 = !DILocation(line: 1025, column: 3, scope: !1127)
!1169 = !DILocation(line: 1028, column: 8, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1028, column: 7)
!1171 = !DILocation(line: 1028, column: 23, scope: !1170)
!1172 = !DILocation(line: 1028, column: 30, scope: !1170)
!1173 = !DILocation(line: 1028, column: 41, scope: !1170)
!1174 = !DILocation(line: 1029, column: 8, scope: !1170)
!1175 = !DILocation(line: 1029, column: 23, scope: !1170)
!1176 = !DILocation(line: 1029, column: 30, scope: !1170)
!1177 = !DILocation(line: 1028, column: 7, scope: !2)
!1178 = !DILocation(line: 1030, column: 10, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1170, file: !3, line: 1029, column: 43)
!1180 = !DILocation(line: 1031, column: 31, scope: !1179)
!1181 = !DILocation(line: 1031, column: 14, scope: !1179)
!1182 = !DILocation(line: 1031, column: 13, scope: !1179)
!1183 = !DILocation(line: 1032, column: 9, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 1032, column: 9)
!1185 = !DILocation(line: 1032, column: 18, scope: !1184)
!1186 = !DILocation(line: 1032, column: 9, scope: !1179)
!1187 = !DILocation(line: 1033, column: 28, scope: !1184)
!1188 = !DILocation(line: 1033, column: 13, scope: !1184)
!1189 = !DILocation(line: 1033, column: 12, scope: !1184)
!1190 = !DILocation(line: 1033, column: 7, scope: !1184)
!1191 = !DILocation(line: 1034, column: 31, scope: !1179)
!1192 = !DILocation(line: 1034, column: 14, scope: !1179)
!1193 = !DILocation(line: 1034, column: 13, scope: !1179)
!1194 = !DILocation(line: 1035, column: 9, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 1035, column: 9)
!1196 = !DILocation(line: 1035, column: 18, scope: !1195)
!1197 = !DILocation(line: 1035, column: 9, scope: !1179)
!1198 = !DILocation(line: 1036, column: 28, scope: !1195)
!1199 = !DILocation(line: 1036, column: 13, scope: !1195)
!1200 = !DILocation(line: 1036, column: 12, scope: !1195)
!1201 = !DILocation(line: 1036, column: 7, scope: !1195)
!1202 = !DILocation(line: 1037, column: 31, scope: !1179)
!1203 = !DILocation(line: 1037, column: 14, scope: !1179)
!1204 = !DILocation(line: 1037, column: 13, scope: !1179)
!1205 = !DILocation(line: 1038, column: 9, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 1038, column: 9)
!1207 = !DILocation(line: 1038, column: 18, scope: !1206)
!1208 = !DILocation(line: 1038, column: 9, scope: !1179)
!1209 = !DILocation(line: 1039, column: 46, scope: !1206)
!1210 = !DILocation(line: 1039, column: 31, scope: !1206)
!1211 = !DILocation(line: 1039, column: 70, scope: !1206)
!1212 = !DILocation(line: 1039, column: 13, scope: !1206)
!1213 = !DILocation(line: 1039, column: 12, scope: !1206)
!1214 = !DILocation(line: 1039, column: 7, scope: !1206)
!1215 = !DILocation(line: 1041, column: 35, scope: !1179)
!1216 = !DILocation(line: 1041, column: 5, scope: !1179)
!1217 = !DILocation(line: 1041, column: 20, scope: !1179)
!1218 = !DILocation(line: 1041, column: 34, scope: !1179)
!1219 = !DILocation(line: 1042, column: 60, scope: !1179)
!1220 = !DILocation(line: 1042, column: 57, scope: !1179)
!1221 = !DILocation(line: 1042, column: 35, scope: !1179)
!1222 = !DILocation(line: 1042, column: 5, scope: !1179)
!1223 = !DILocation(line: 1042, column: 20, scope: !1179)
!1224 = !DILocation(line: 1042, column: 34, scope: !1179)
!1225 = !DILocation(line: 1043, column: 3, scope: !1179)
!1226 = !DILocation(line: 1046, column: 29, scope: !2)
!1227 = !DILocation(line: 1046, column: 12, scope: !2)
!1228 = !DILocation(line: 1046, column: 11, scope: !2)
!1229 = !DILocation(line: 1047, column: 7, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1047, column: 7)
!1231 = !DILocation(line: 1047, column: 16, scope: !1230)
!1232 = !DILocation(line: 1047, column: 7, scope: !2)
!1233 = !DILocalVariable(name: "lobes", scope: !1234, file: !3, line: 1050, type: !218)
!1234 = distinct !DILexicalBlock(scope: !1230, file: !3, line: 1048, column: 5)
!1235 = !DILocation(line: 1050, column: 9, scope: !1234)
!1236 = !DILocation(line: 1052, column: 36, scope: !1234)
!1237 = !DILocation(line: 1052, column: 23, scope: !1234)
!1238 = !DILocation(line: 1052, column: 12, scope: !1234)
!1239 = !DILocation(line: 1053, column: 11, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1234, file: !3, line: 1053, column: 11)
!1241 = !DILocation(line: 1053, column: 17, scope: !1240)
!1242 = !DILocation(line: 1053, column: 11, scope: !1234)
!1243 = !DILocation(line: 1054, column: 14, scope: !1240)
!1244 = !DILocation(line: 1054, column: 9, scope: !1240)
!1245 = !DILocation(line: 1055, column: 47, scope: !1234)
!1246 = !DILocation(line: 1055, column: 30, scope: !1234)
!1247 = !DILocation(line: 1055, column: 7, scope: !1234)
!1248 = !DILocation(line: 1055, column: 22, scope: !1234)
!1249 = !DILocation(line: 1055, column: 29, scope: !1234)
!1250 = !DILocation(line: 1056, column: 5, scope: !1234)
!1251 = !DILocation(line: 1058, column: 7, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1058, column: 7)
!1253 = !DILocation(line: 1058, column: 22, scope: !1252)
!1254 = !DILocation(line: 1058, column: 29, scope: !1252)
!1255 = !DILocation(line: 1058, column: 7, scope: !2)
!1256 = !DILocation(line: 1060, column: 11, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1258, file: !3, line: 1060, column: 11)
!1258 = distinct !DILexicalBlock(scope: !1252, file: !3, line: 1059, column: 5)
!1259 = !DILocation(line: 1060, column: 26, scope: !1257)
!1260 = !DILocation(line: 1060, column: 34, scope: !1257)
!1261 = !DILocation(line: 1060, column: 11, scope: !1258)
!1262 = !DILocation(line: 1061, column: 32, scope: !1257)
!1263 = !DILocation(line: 1061, column: 9, scope: !1257)
!1264 = !DILocation(line: 1061, column: 24, scope: !1257)
!1265 = !DILocation(line: 1061, column: 31, scope: !1257)
!1266 = !DILocation(line: 1063, column: 50, scope: !1257)
!1267 = !DILocation(line: 1063, column: 65, scope: !1257)
!1268 = !DILocation(line: 1063, column: 44, scope: !1257)
!1269 = !DILocation(line: 1063, column: 73, scope: !1257)
!1270 = !DILocation(line: 1063, column: 32, scope: !1257)
!1271 = !DILocation(line: 1063, column: 9, scope: !1257)
!1272 = !DILocation(line: 1063, column: 24, scope: !1257)
!1273 = !DILocation(line: 1063, column: 31, scope: !1257)
!1274 = !DILocation(line: 1066, column: 11, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1258, file: !3, line: 1066, column: 11)
!1276 = !DILocation(line: 1066, column: 23, scope: !1275)
!1277 = !DILocation(line: 1066, column: 11, scope: !1258)
!1278 = !DILocation(line: 1068, column: 38, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1275, file: !3, line: 1067, column: 7)
!1280 = !DILocation(line: 1068, column: 53, scope: !1279)
!1281 = !DILocation(line: 1068, column: 32, scope: !1279)
!1282 = !DILocation(line: 1069, column: 40, scope: !1279)
!1283 = !DILocation(line: 1069, column: 55, scope: !1279)
!1284 = !DILocation(line: 1068, column: 61, scope: !1279)
!1285 = !DILocation(line: 1068, column: 9, scope: !1279)
!1286 = !DILocation(line: 1068, column: 24, scope: !1279)
!1287 = !DILocation(line: 1068, column: 29, scope: !1279)
!1288 = !DILocation(line: 1070, column: 7, scope: !1279)
!1289 = !DILocation(line: 1071, column: 5, scope: !1258)
!1290 = !DILocation(line: 1073, column: 29, scope: !2)
!1291 = !DILocation(line: 1073, column: 12, scope: !2)
!1292 = !DILocation(line: 1073, column: 11, scope: !2)
!1293 = !DILocation(line: 1074, column: 7, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1074, column: 7)
!1295 = !DILocation(line: 1074, column: 16, scope: !1294)
!1296 = !DILocation(line: 1074, column: 7, scope: !2)
!1297 = !DILocation(line: 1075, column: 41, scope: !1294)
!1298 = !DILocation(line: 1075, column: 26, scope: !1294)
!1299 = !DILocation(line: 1075, column: 5, scope: !1294)
!1300 = !DILocation(line: 1075, column: 20, scope: !1294)
!1301 = !DILocation(line: 1075, column: 24, scope: !1294)
!1302 = !DILocation(line: 1076, column: 7, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1076, column: 7)
!1304 = !DILocation(line: 1076, column: 22, scope: !1303)
!1305 = !DILocation(line: 1076, column: 27, scope: !1303)
!1306 = !DILocation(line: 1076, column: 7, scope: !2)
!1307 = !DILocation(line: 1077, column: 5, scope: !1303)
!1308 = !DILocation(line: 1077, column: 20, scope: !1303)
!1309 = !DILocation(line: 1077, column: 24, scope: !1303)
!1310 = !DILocation(line: 1080, column: 29, scope: !2)
!1311 = !DILocation(line: 1080, column: 12, scope: !2)
!1312 = !DILocation(line: 1080, column: 11, scope: !2)
!1313 = !DILocation(line: 1081, column: 7, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1081, column: 7)
!1315 = !DILocation(line: 1081, column: 16, scope: !1314)
!1316 = !DILocation(line: 1081, column: 7, scope: !2)
!1317 = !DILocation(line: 1082, column: 48, scope: !1314)
!1318 = !DILocation(line: 1082, column: 33, scope: !1314)
!1319 = !DILocation(line: 1082, column: 28, scope: !1314)
!1320 = !DILocation(line: 1082, column: 5, scope: !1314)
!1321 = !DILocation(line: 1082, column: 20, scope: !1314)
!1322 = !DILocation(line: 1082, column: 27, scope: !1314)
!1323 = !DILocation(line: 1088, column: 33, scope: !2)
!1324 = !DILocation(line: 1088, column: 48, scope: !2)
!1325 = !DILocation(line: 1088, column: 3, scope: !2)
!1326 = !DILocation(line: 1088, column: 18, scope: !2)
!1327 = !DILocation(line: 1088, column: 32, scope: !2)
!1328 = !DILocation(line: 1089, column: 29, scope: !2)
!1329 = !DILocation(line: 1089, column: 12, scope: !2)
!1330 = !DILocation(line: 1089, column: 11, scope: !2)
!1331 = !DILocation(line: 1090, column: 7, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1090, column: 7)
!1333 = !DILocation(line: 1090, column: 16, scope: !1332)
!1334 = !DILocation(line: 1090, column: 7, scope: !2)
!1335 = !DILocation(line: 1091, column: 55, scope: !1332)
!1336 = !DILocation(line: 1091, column: 40, scope: !1332)
!1337 = !DILocation(line: 1091, column: 35, scope: !1332)
!1338 = !DILocation(line: 1091, column: 5, scope: !1332)
!1339 = !DILocation(line: 1091, column: 20, scope: !1332)
!1340 = !DILocation(line: 1091, column: 34, scope: !1332)
!1341 = !DILocation(line: 1096, column: 25, scope: !2)
!1342 = !DILocation(line: 1096, column: 40, scope: !2)
!1343 = !DILocation(line: 1096, column: 3, scope: !2)
!1344 = !DILocation(line: 1096, column: 18, scope: !2)
!1345 = !DILocation(line: 1096, column: 23, scope: !2)
!1346 = !DILocation(line: 1101, column: 4, scope: !2)
!1347 = !DILocation(line: 1102, column: 4, scope: !2)
!1348 = !DILocation(line: 1103, column: 8, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1103, column: 7)
!1350 = !DILocation(line: 1103, column: 23, scope: !1349)
!1351 = !DILocation(line: 1103, column: 30, scope: !1349)
!1352 = !DILocation(line: 1103, column: 42, scope: !1349)
!1353 = !DILocation(line: 1104, column: 8, scope: !1349)
!1354 = !DILocation(line: 1104, column: 23, scope: !1349)
!1355 = !DILocation(line: 1104, column: 30, scope: !1349)
!1356 = !DILocation(line: 1103, column: 7, scope: !2)
!1357 = !DILocation(line: 1106, column: 17, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1349, file: !3, line: 1105, column: 5)
!1359 = !DILocation(line: 1106, column: 9, scope: !1358)
!1360 = !DILocation(line: 1106, column: 30, scope: !1358)
!1361 = !DILocation(line: 1106, column: 8, scope: !1358)
!1362 = !DILocation(line: 1107, column: 17, scope: !1358)
!1363 = !DILocation(line: 1107, column: 9, scope: !1358)
!1364 = !DILocation(line: 1107, column: 30, scope: !1358)
!1365 = !DILocation(line: 1107, column: 8, scope: !1358)
!1366 = !DILocation(line: 1108, column: 19, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1358, file: !3, line: 1108, column: 11)
!1368 = !DILocation(line: 1108, column: 11, scope: !1367)
!1369 = !DILocation(line: 1108, column: 32, scope: !1367)
!1370 = !DILocation(line: 1108, column: 41, scope: !1367)
!1371 = !DILocation(line: 1108, column: 11, scope: !1358)
!1372 = !DILocation(line: 1110, column: 21, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 1109, column: 9)
!1374 = !DILocation(line: 1110, column: 13, scope: !1373)
!1375 = !DILocation(line: 1110, column: 34, scope: !1373)
!1376 = !DILocation(line: 1110, column: 12, scope: !1373)
!1377 = !DILocation(line: 1111, column: 21, scope: !1373)
!1378 = !DILocation(line: 1111, column: 13, scope: !1373)
!1379 = !DILocation(line: 1111, column: 34, scope: !1373)
!1380 = !DILocation(line: 1111, column: 12, scope: !1373)
!1381 = !DILocation(line: 1112, column: 9, scope: !1373)
!1382 = !DILocation(line: 1113, column: 33, scope: !1358)
!1383 = !DILocation(line: 1113, column: 16, scope: !1358)
!1384 = !DILocation(line: 1113, column: 15, scope: !1358)
!1385 = !DILocation(line: 1114, column: 11, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1358, file: !3, line: 1114, column: 11)
!1387 = !DILocation(line: 1114, column: 20, scope: !1386)
!1388 = !DILocation(line: 1114, column: 11, scope: !1358)
!1389 = !DILocation(line: 1116, column: 28, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1386, file: !3, line: 1115, column: 9)
!1391 = !DILocation(line: 1116, column: 13, scope: !1390)
!1392 = !DILocation(line: 1116, column: 12, scope: !1390)
!1393 = !DILocation(line: 1117, column: 18, scope: !1390)
!1394 = !DILocation(line: 1117, column: 17, scope: !1390)
!1395 = !DILocation(line: 1117, column: 20, scope: !1390)
!1396 = !DILocation(line: 1117, column: 13, scope: !1390)
!1397 = !DILocation(line: 1117, column: 12, scope: !1390)
!1398 = !DILocation(line: 1118, column: 37, scope: !1390)
!1399 = !DILocation(line: 1118, column: 20, scope: !1390)
!1400 = !DILocation(line: 1118, column: 19, scope: !1390)
!1401 = !DILocation(line: 1119, column: 15, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 1119, column: 15)
!1403 = !DILocation(line: 1119, column: 24, scope: !1402)
!1404 = !DILocation(line: 1119, column: 15, scope: !1390)
!1405 = !DILocation(line: 1120, column: 30, scope: !1402)
!1406 = !DILocation(line: 1120, column: 15, scope: !1402)
!1407 = !DILocation(line: 1120, column: 14, scope: !1402)
!1408 = !DILocation(line: 1120, column: 13, scope: !1402)
!1409 = !DILocation(line: 1121, column: 9, scope: !1390)
!1410 = !DILocation(line: 1124, column: 37, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1386, file: !3, line: 1123, column: 9)
!1412 = !DILocation(line: 1124, column: 20, scope: !1411)
!1413 = !DILocation(line: 1124, column: 19, scope: !1411)
!1414 = !DILocation(line: 1125, column: 15, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 1125, column: 15)
!1416 = !DILocation(line: 1125, column: 24, scope: !1415)
!1417 = !DILocation(line: 1125, column: 15, scope: !1411)
!1418 = !DILocation(line: 1127, column: 32, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1415, file: !3, line: 1126, column: 13)
!1420 = !DILocation(line: 1127, column: 17, scope: !1419)
!1421 = !DILocation(line: 1127, column: 16, scope: !1419)
!1422 = !DILocation(line: 1128, column: 25, scope: !1419)
!1423 = !DILocation(line: 1128, column: 24, scope: !1419)
!1424 = !DILocation(line: 1128, column: 20, scope: !1419)
!1425 = !DILocation(line: 1128, column: 17, scope: !1419)
!1426 = !DILocation(line: 1128, column: 16, scope: !1419)
!1427 = !DILocation(line: 1129, column: 13, scope: !1419)
!1428 = !DILocalVariable(name: "twoB", scope: !1429, file: !3, line: 1133, type: !860)
!1429 = distinct !DILexicalBlock(scope: !1358, file: !3, line: 1132, column: 7)
!1430 = !DILocation(line: 1133, column: 22, scope: !1429)
!1431 = !DILocation(line: 1133, column: 29, scope: !1429)
!1432 = !DILocation(line: 1133, column: 31, scope: !1429)
!1433 = !DILocation(line: 1133, column: 30, scope: !1429)
!1434 = !DILocation(line: 1134, column: 53, scope: !1429)
!1435 = !DILocation(line: 1134, column: 52, scope: !1429)
!1436 = !DILocation(line: 1134, column: 42, scope: !1429)
!1437 = !DILocation(line: 1134, column: 39, scope: !1429)
!1438 = !DILocation(line: 1134, column: 9, scope: !1429)
!1439 = !DILocation(line: 1134, column: 24, scope: !1429)
!1440 = !DILocation(line: 1134, column: 38, scope: !1429)
!1441 = !DILocation(line: 1135, column: 44, scope: !1429)
!1442 = !DILocation(line: 1135, column: 43, scope: !1429)
!1443 = !DILocation(line: 1135, column: 49, scope: !1429)
!1444 = !DILocation(line: 1135, column: 48, scope: !1429)
!1445 = !DILocation(line: 1135, column: 39, scope: !1429)
!1446 = !DILocation(line: 1135, column: 9, scope: !1429)
!1447 = !DILocation(line: 1135, column: 24, scope: !1429)
!1448 = !DILocation(line: 1135, column: 38, scope: !1429)
!1449 = !DILocation(line: 1136, column: 47, scope: !1429)
!1450 = !DILocation(line: 1136, column: 46, scope: !1429)
!1451 = !DILocation(line: 1136, column: 42, scope: !1429)
!1452 = !DILocation(line: 1136, column: 49, scope: !1429)
!1453 = !DILocation(line: 1136, column: 48, scope: !1429)
!1454 = !DILocation(line: 1136, column: 39, scope: !1429)
!1455 = !DILocation(line: 1136, column: 9, scope: !1429)
!1456 = !DILocation(line: 1136, column: 24, scope: !1429)
!1457 = !DILocation(line: 1136, column: 38, scope: !1429)
!1458 = !DILocation(line: 1137, column: 49, scope: !1429)
!1459 = !DILocation(line: 1137, column: 48, scope: !1429)
!1460 = !DILocation(line: 1137, column: 55, scope: !1429)
!1461 = !DILocation(line: 1137, column: 54, scope: !1429)
!1462 = !DILocation(line: 1137, column: 50, scope: !1429)
!1463 = !DILocation(line: 1137, column: 39, scope: !1429)
!1464 = !DILocation(line: 1137, column: 9, scope: !1429)
!1465 = !DILocation(line: 1137, column: 24, scope: !1429)
!1466 = !DILocation(line: 1137, column: 38, scope: !1429)
!1467 = !DILocation(line: 1138, column: 44, scope: !1429)
!1468 = !DILocation(line: 1138, column: 43, scope: !1429)
!1469 = !DILocation(line: 1138, column: 46, scope: !1429)
!1470 = !DILocation(line: 1138, column: 45, scope: !1429)
!1471 = !DILocation(line: 1138, column: 39, scope: !1429)
!1472 = !DILocation(line: 1138, column: 9, scope: !1429)
!1473 = !DILocation(line: 1138, column: 24, scope: !1429)
!1474 = !DILocation(line: 1138, column: 38, scope: !1429)
!1475 = !DILocation(line: 1139, column: 39, scope: !1429)
!1476 = !DILocation(line: 1139, column: 45, scope: !1429)
!1477 = !DILocation(line: 1139, column: 44, scope: !1429)
!1478 = !DILocation(line: 1139, column: 40, scope: !1429)
!1479 = !DILocation(line: 1139, column: 9, scope: !1429)
!1480 = !DILocation(line: 1139, column: 24, scope: !1429)
!1481 = !DILocation(line: 1139, column: 38, scope: !1429)
!1482 = !DILocation(line: 1140, column: 50, scope: !1429)
!1483 = !DILocation(line: 1140, column: 49, scope: !1429)
!1484 = !DILocation(line: 1140, column: 52, scope: !1429)
!1485 = !DILocation(line: 1140, column: 51, scope: !1429)
!1486 = !DILocation(line: 1140, column: 39, scope: !1429)
!1487 = !DILocation(line: 1140, column: 9, scope: !1429)
!1488 = !DILocation(line: 1140, column: 24, scope: !1429)
!1489 = !DILocation(line: 1140, column: 38, scope: !1429)
!1490 = !DILocation(line: 1142, column: 5, scope: !1358)
!1491 = !DILocation(line: 1151, column: 31, scope: !2)
!1492 = !DILocation(line: 1151, column: 14, scope: !2)
!1493 = !DILocation(line: 1151, column: 13, scope: !2)
!1494 = !DILocation(line: 1152, column: 22, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1152, column: 9)
!1496 = !DILocation(line: 1152, column: 9, scope: !1495)
!1497 = !DILocation(line: 1152, column: 9, scope: !2)
!1498 = !DILocalVariable(name: "support", scope: !1499, file: !3, line: 1155, type: !178)
!1499 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 1153, column: 7)
!1500 = !DILocation(line: 1155, column: 11, scope: !1499)
!1501 = !DILocalVariable(name: "x", scope: !1499, file: !3, line: 1156, type: !178)
!1502 = !DILocation(line: 1156, column: 11, scope: !1499)
!1503 = !DILocation(line: 1164, column: 13, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1164, column: 13)
!1505 = !DILocation(line: 1164, column: 28, scope: !1504)
!1506 = !DILocation(line: 1164, column: 35, scope: !1504)
!1507 = !DILocation(line: 1164, column: 13, scope: !1499)
!1508 = !DILocation(line: 1164, column: 60, scope: !1504)
!1509 = !DILocation(line: 1164, column: 49, scope: !1504)
!1510 = !DILocation(line: 1165, column: 13, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1165, column: 13)
!1512 = !DILocation(line: 1165, column: 28, scope: !1511)
!1513 = !DILocation(line: 1165, column: 35, scope: !1511)
!1514 = !DILocation(line: 1165, column: 13, scope: !1499)
!1515 = !DILocation(line: 1165, column: 60, scope: !1511)
!1516 = !DILocation(line: 1165, column: 49, scope: !1511)
!1517 = !DILocation(line: 1166, column: 13, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1166, column: 13)
!1519 = !DILocation(line: 1166, column: 28, scope: !1518)
!1520 = !DILocation(line: 1166, column: 35, scope: !1518)
!1521 = !DILocation(line: 1166, column: 13, scope: !1499)
!1522 = !DILocation(line: 1166, column: 60, scope: !1518)
!1523 = !DILocation(line: 1166, column: 49, scope: !1518)
!1524 = !DILocation(line: 1167, column: 13, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1167, column: 13)
!1526 = !DILocation(line: 1167, column: 28, scope: !1525)
!1527 = !DILocation(line: 1167, column: 35, scope: !1525)
!1528 = !DILocation(line: 1167, column: 13, scope: !1499)
!1529 = !DILocation(line: 1167, column: 60, scope: !1525)
!1530 = !DILocation(line: 1167, column: 49, scope: !1525)
!1531 = !DILocation(line: 1168, column: 13, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1168, column: 13)
!1533 = !DILocation(line: 1168, column: 28, scope: !1532)
!1534 = !DILocation(line: 1168, column: 35, scope: !1532)
!1535 = !DILocation(line: 1168, column: 13, scope: !1499)
!1536 = !DILocation(line: 1168, column: 60, scope: !1532)
!1537 = !DILocation(line: 1168, column: 49, scope: !1532)
!1538 = !DILocation(line: 1169, column: 13, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1169, column: 13)
!1540 = !DILocation(line: 1169, column: 28, scope: !1539)
!1541 = !DILocation(line: 1169, column: 35, scope: !1539)
!1542 = !DILocation(line: 1169, column: 13, scope: !1499)
!1543 = !DILocation(line: 1169, column: 60, scope: !1539)
!1544 = !DILocation(line: 1169, column: 49, scope: !1539)
!1545 = !DILocation(line: 1170, column: 13, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1170, column: 13)
!1547 = !DILocation(line: 1170, column: 28, scope: !1546)
!1548 = !DILocation(line: 1170, column: 35, scope: !1546)
!1549 = !DILocation(line: 1170, column: 13, scope: !1499)
!1550 = !DILocation(line: 1170, column: 60, scope: !1546)
!1551 = !DILocation(line: 1170, column: 49, scope: !1546)
!1552 = !DILocation(line: 1171, column: 13, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1171, column: 13)
!1554 = !DILocation(line: 1171, column: 28, scope: !1553)
!1555 = !DILocation(line: 1171, column: 35, scope: !1553)
!1556 = !DILocation(line: 1171, column: 13, scope: !1499)
!1557 = !DILocation(line: 1171, column: 60, scope: !1553)
!1558 = !DILocation(line: 1171, column: 49, scope: !1553)
!1559 = !DILocation(line: 1172, column: 13, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1172, column: 13)
!1561 = !DILocation(line: 1172, column: 28, scope: !1560)
!1562 = !DILocation(line: 1172, column: 35, scope: !1560)
!1563 = !DILocation(line: 1172, column: 13, scope: !1499)
!1564 = !DILocation(line: 1172, column: 60, scope: !1560)
!1565 = !DILocation(line: 1172, column: 49, scope: !1560)
!1566 = !DILocation(line: 1173, column: 13, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1173, column: 13)
!1568 = !DILocation(line: 1173, column: 28, scope: !1567)
!1569 = !DILocation(line: 1173, column: 35, scope: !1567)
!1570 = !DILocation(line: 1173, column: 13, scope: !1499)
!1571 = !DILocation(line: 1173, column: 60, scope: !1567)
!1572 = !DILocation(line: 1173, column: 49, scope: !1567)
!1573 = !DILocation(line: 1177, column: 40, scope: !1499)
!1574 = !DILocation(line: 1177, column: 17, scope: !1499)
!1575 = !DILocation(line: 1177, column: 16, scope: !1499)
!1576 = !DILocation(line: 1178, column: 33, scope: !1499)
!1577 = !DILocation(line: 1178, column: 16, scope: !1499)
!1578 = !DILocation(line: 1179, column: 33, scope: !1499)
!1579 = !DILocation(line: 1180, column: 58, scope: !1499)
!1580 = !DILocation(line: 1180, column: 14, scope: !1499)
!1581 = !DILocation(line: 1179, column: 16, scope: !1499)
!1582 = !DILocation(line: 1181, column: 33, scope: !1499)
!1583 = !DILocation(line: 1182, column: 58, scope: !1499)
!1584 = !DILocation(line: 1182, column: 14, scope: !1499)
!1585 = !DILocation(line: 1181, column: 16, scope: !1499)
!1586 = !DILocation(line: 1183, column: 33, scope: !1499)
!1587 = !DILocation(line: 1184, column: 14, scope: !1499)
!1588 = !DILocation(line: 1184, column: 44, scope: !1499)
!1589 = !DILocation(line: 1184, column: 59, scope: !1499)
!1590 = !DILocation(line: 1184, column: 35, scope: !1499)
!1591 = !DILocation(line: 1183, column: 16, scope: !1499)
!1592 = !DILocation(line: 1185, column: 33, scope: !1499)
!1593 = !DILocation(line: 1186, column: 14, scope: !1499)
!1594 = !DILocation(line: 1186, column: 44, scope: !1499)
!1595 = !DILocation(line: 1186, column: 59, scope: !1499)
!1596 = !DILocation(line: 1186, column: 35, scope: !1499)
!1597 = !DILocation(line: 1185, column: 16, scope: !1499)
!1598 = !DILocation(line: 1187, column: 33, scope: !1499)
!1599 = !DILocation(line: 1188, column: 14, scope: !1499)
!1600 = !DILocation(line: 1188, column: 44, scope: !1499)
!1601 = !DILocation(line: 1188, column: 59, scope: !1499)
!1602 = !DILocation(line: 1188, column: 36, scope: !1499)
!1603 = !DILocation(line: 1187, column: 16, scope: !1499)
!1604 = !DILocation(line: 1189, column: 14, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1189, column: 14)
!1606 = !DILocation(line: 1189, column: 26, scope: !1605)
!1607 = !DILocation(line: 1189, column: 44, scope: !1605)
!1608 = !DILocation(line: 1189, column: 47, scope: !1605)
!1609 = !DILocation(line: 1189, column: 59, scope: !1605)
!1610 = !DILocation(line: 1189, column: 14, scope: !1499)
!1611 = !DILocation(line: 1190, column: 35, scope: !1605)
!1612 = !DILocation(line: 1191, column: 16, scope: !1605)
!1613 = !DILocation(line: 1191, column: 46, scope: !1605)
!1614 = !DILocation(line: 1191, column: 61, scope: !1605)
!1615 = !DILocation(line: 1191, column: 38, scope: !1605)
!1616 = !DILocation(line: 1190, column: 18, scope: !1605)
!1617 = !DILocation(line: 1190, column: 11, scope: !1605)
!1618 = !DILocation(line: 1192, column: 14, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1192, column: 14)
!1620 = !DILocation(line: 1192, column: 26, scope: !1619)
!1621 = !DILocation(line: 1192, column: 42, scope: !1619)
!1622 = !DILocation(line: 1192, column: 45, scope: !1619)
!1623 = !DILocation(line: 1192, column: 57, scope: !1619)
!1624 = !DILocation(line: 1192, column: 14, scope: !1499)
!1625 = !DILocation(line: 1193, column: 35, scope: !1619)
!1626 = !DILocation(line: 1194, column: 16, scope: !1619)
!1627 = !DILocation(line: 1195, column: 24, scope: !1619)
!1628 = !DILocation(line: 1195, column: 39, scope: !1619)
!1629 = !DILocation(line: 1195, column: 16, scope: !1619)
!1630 = !DILocation(line: 1193, column: 18, scope: !1619)
!1631 = !DILocation(line: 1193, column: 11, scope: !1619)
!1632 = !DILocation(line: 1196, column: 33, scope: !1499)
!1633 = !DILocation(line: 1197, column: 14, scope: !1499)
!1634 = !DILocation(line: 1197, column: 44, scope: !1499)
!1635 = !DILocation(line: 1196, column: 16, scope: !1499)
!1636 = !DILocation(line: 1198, column: 14, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1198, column: 14)
!1638 = !DILocation(line: 1198, column: 26, scope: !1637)
!1639 = !DILocation(line: 1198, column: 41, scope: !1637)
!1640 = !DILocation(line: 1198, column: 44, scope: !1637)
!1641 = !DILocation(line: 1198, column: 56, scope: !1637)
!1642 = !DILocation(line: 1198, column: 14, scope: !1499)
!1643 = !DILocation(line: 1199, column: 35, scope: !1637)
!1644 = !DILocation(line: 1200, column: 16, scope: !1637)
!1645 = !DILocation(line: 1200, column: 45, scope: !1637)
!1646 = !DILocation(line: 1200, column: 37, scope: !1637)
!1647 = !DILocation(line: 1200, column: 48, scope: !1637)
!1648 = !DILocation(line: 1200, column: 77, scope: !1637)
!1649 = !DILocation(line: 1200, column: 69, scope: !1637)
!1650 = !DILocation(line: 1199, column: 18, scope: !1637)
!1651 = !DILocation(line: 1199, column: 11, scope: !1637)
!1652 = !DILocation(line: 1201, column: 33, scope: !1499)
!1653 = !DILocation(line: 1201, column: 16, scope: !1499)
!1654 = !DILocation(line: 1206, column: 15, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 1206, column: 9)
!1656 = !DILocation(line: 1206, column: 14, scope: !1655)
!1657 = !DILocation(line: 1206, column: 21, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1655, file: !3, line: 1206, column: 9)
!1659 = !DILocation(line: 1206, column: 26, scope: !1658)
!1660 = !DILocation(line: 1206, column: 23, scope: !1658)
!1661 = !DILocation(line: 1206, column: 9, scope: !1655)
!1662 = !DILocation(line: 1207, column: 35, scope: !1658)
!1663 = !DILocation(line: 1207, column: 59, scope: !1658)
!1664 = !DILocation(line: 1207, column: 61, scope: !1658)
!1665 = !DILocation(line: 1208, column: 44, scope: !1658)
!1666 = !DILocation(line: 1208, column: 58, scope: !1658)
!1667 = !DILocation(line: 1208, column: 22, scope: !1658)
!1668 = !DILocation(line: 1208, column: 13, scope: !1658)
!1669 = !DILocation(line: 1207, column: 18, scope: !1658)
!1670 = !DILocation(line: 1207, column: 11, scope: !1658)
!1671 = !DILocation(line: 1206, column: 36, scope: !1658)
!1672 = !DILocation(line: 1206, column: 9, scope: !1658)
!1673 = distinct !{!1673, !1661, !1674}
!1674 = !DILocation(line: 1208, column: 60, scope: !1655)
!1675 = !DILocation(line: 1210, column: 33, scope: !1499)
!1676 = !DILocation(line: 1210, column: 57, scope: !1499)
!1677 = !DILocation(line: 1211, column: 11, scope: !1499)
!1678 = !DILocation(line: 1210, column: 16, scope: !1499)
!1679 = !DILocation(line: 1212, column: 7, scope: !1499)
!1680 = !DILocation(line: 1214, column: 42, scope: !2)
!1681 = !DILocation(line: 1214, column: 12, scope: !2)
!1682 = !DILocation(line: 1218, column: 10, scope: !2)
!1683 = !DILocation(line: 1218, column: 3, scope: !2)
!1684 = distinct !DISubprogram(name: "Box", scope: !3, file: !3, line: 184, type: !13, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1685 = !DILocalVariable(name: "x", arg: 1, scope: !1684, file: !3, line: 184, type: !18)
!1686 = !DILocation(line: 184, column: 48, scope: !1684)
!1687 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1684, file: !3, line: 185, type: !19)
!1688 = !DILocation(line: 185, column: 23, scope: !1684)
!1689 = !DILocation(line: 195, column: 3, scope: !1684)
!1690 = distinct !DISubprogram(name: "Triangle", scope: !3, file: !3, line: 514, type: !13, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1691 = !DILocalVariable(name: "x", arg: 1, scope: !1690, file: !3, line: 514, type: !18)
!1692 = !DILocation(line: 514, column: 53, scope: !1690)
!1693 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1690, file: !3, line: 515, type: !19)
!1694 = !DILocation(line: 515, column: 23, scope: !1690)
!1695 = !DILocation(line: 524, column: 7, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1690, file: !3, line: 524, column: 7)
!1697 = !DILocation(line: 524, column: 9, scope: !1696)
!1698 = !DILocation(line: 524, column: 7, scope: !1690)
!1699 = !DILocation(line: 525, column: 16, scope: !1696)
!1700 = !DILocation(line: 525, column: 15, scope: !1696)
!1701 = !DILocation(line: 525, column: 11, scope: !1696)
!1702 = !DILocation(line: 525, column: 5, scope: !1696)
!1703 = !DILocation(line: 526, column: 3, scope: !1690)
!1704 = !DILocation(line: 527, column: 1, scope: !1690)
!1705 = distinct !DISubprogram(name: "CubicBC", scope: !3, file: !3, line: 210, type: !13, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1706 = !DILocalVariable(name: "x", arg: 1, scope: !1705, file: !3, line: 210, type: !18)
!1707 = !DILocation(line: 210, column: 52, scope: !1705)
!1708 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1705, file: !3, line: 211, type: !19)
!1709 = !DILocation(line: 211, column: 23, scope: !1705)
!1710 = !DILocation(line: 242, column: 7, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1705, file: !3, line: 242, column: 7)
!1712 = !DILocation(line: 242, column: 9, scope: !1711)
!1713 = !DILocation(line: 242, column: 7, scope: !1705)
!1714 = !DILocation(line: 243, column: 12, scope: !1711)
!1715 = !DILocation(line: 243, column: 27, scope: !1711)
!1716 = !DILocation(line: 243, column: 42, scope: !1711)
!1717 = !DILocation(line: 243, column: 45, scope: !1711)
!1718 = !DILocation(line: 244, column: 8, scope: !1711)
!1719 = !DILocation(line: 244, column: 23, scope: !1711)
!1720 = !DILocation(line: 244, column: 38, scope: !1711)
!1721 = !DILocation(line: 244, column: 40, scope: !1711)
!1722 = !DILocation(line: 244, column: 55, scope: !1711)
!1723 = !DILocation(line: 244, column: 39, scope: !1711)
!1724 = !DILocation(line: 244, column: 37, scope: !1711)
!1725 = !DILocation(line: 243, column: 46, scope: !1711)
!1726 = !DILocation(line: 243, column: 43, scope: !1711)
!1727 = !DILocation(line: 243, column: 41, scope: !1711)
!1728 = !DILocation(line: 243, column: 5, scope: !1711)
!1729 = !DILocation(line: 245, column: 7, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1705, file: !3, line: 245, column: 7)
!1731 = !DILocation(line: 245, column: 9, scope: !1730)
!1732 = !DILocation(line: 245, column: 7, scope: !1705)
!1733 = !DILocation(line: 246, column: 12, scope: !1730)
!1734 = !DILocation(line: 246, column: 27, scope: !1730)
!1735 = !DILocation(line: 246, column: 42, scope: !1730)
!1736 = !DILocation(line: 246, column: 45, scope: !1730)
!1737 = !DILocation(line: 246, column: 60, scope: !1730)
!1738 = !DILocation(line: 246, column: 75, scope: !1730)
!1739 = !DILocation(line: 247, column: 8, scope: !1730)
!1740 = !DILocation(line: 247, column: 23, scope: !1730)
!1741 = !DILocation(line: 247, column: 38, scope: !1730)
!1742 = !DILocation(line: 247, column: 40, scope: !1730)
!1743 = !DILocation(line: 247, column: 55, scope: !1730)
!1744 = !DILocation(line: 247, column: 39, scope: !1730)
!1745 = !DILocation(line: 247, column: 37, scope: !1730)
!1746 = !DILocation(line: 246, column: 76, scope: !1730)
!1747 = !DILocation(line: 246, column: 74, scope: !1730)
!1748 = !DILocation(line: 246, column: 43, scope: !1730)
!1749 = !DILocation(line: 246, column: 41, scope: !1730)
!1750 = !DILocation(line: 246, column: 5, scope: !1730)
!1751 = !DILocation(line: 248, column: 3, scope: !1705)
!1752 = !DILocation(line: 249, column: 1, scope: !1705)
!1753 = distinct !DISubprogram(name: "Hanning", scope: !3, file: !3, line: 287, type: !13, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1754 = !DILocalVariable(name: "x", arg: 1, scope: !1753, file: !3, line: 287, type: !18)
!1755 = !DILocation(line: 287, column: 52, scope: !1753)
!1756 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1753, file: !3, line: 288, type: !19)
!1757 = !DILocation(line: 288, column: 23, scope: !1753)
!1758 = !DILocalVariable(name: "cosine", scope: !1753, file: !3, line: 294, type: !18)
!1759 = !DILocation(line: 294, column: 24, scope: !1753)
!1760 = !DILocation(line: 294, column: 54, scope: !1753)
!1761 = !DILocation(line: 294, column: 53, scope: !1753)
!1762 = !DILocation(line: 294, column: 31, scope: !1753)
!1763 = !DILocation(line: 298, column: 18, scope: !1753)
!1764 = !DILocation(line: 298, column: 17, scope: !1753)
!1765 = !DILocation(line: 298, column: 13, scope: !1753)
!1766 = !DILocation(line: 298, column: 9, scope: !1753)
!1767 = !DILocation(line: 298, column: 3, scope: !1753)
!1768 = distinct !DISubprogram(name: "Hamming", scope: !3, file: !3, line: 301, type: !13, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1769 = !DILocalVariable(name: "x", arg: 1, scope: !1768, file: !3, line: 301, type: !18)
!1770 = !DILocation(line: 301, column: 52, scope: !1768)
!1771 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1768, file: !3, line: 302, type: !19)
!1772 = !DILocation(line: 302, column: 23, scope: !1768)
!1773 = !DILocalVariable(name: "cosine", scope: !1768, file: !3, line: 308, type: !18)
!1774 = !DILocation(line: 308, column: 24, scope: !1768)
!1775 = !DILocation(line: 308, column: 54, scope: !1768)
!1776 = !DILocation(line: 308, column: 53, scope: !1768)
!1777 = !DILocation(line: 308, column: 31, scope: !1768)
!1778 = !DILocation(line: 312, column: 20, scope: !1768)
!1779 = !DILocation(line: 312, column: 19, scope: !1768)
!1780 = !DILocation(line: 312, column: 14, scope: !1768)
!1781 = !DILocation(line: 312, column: 9, scope: !1768)
!1782 = !DILocation(line: 312, column: 3, scope: !1768)
!1783 = distinct !DISubprogram(name: "Blackman", scope: !3, file: !3, line: 148, type: !13, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1784 = !DILocalVariable(name: "x", arg: 1, scope: !1783, file: !3, line: 148, type: !18)
!1785 = !DILocation(line: 148, column: 53, scope: !1783)
!1786 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1783, file: !3, line: 149, type: !19)
!1787 = !DILocation(line: 149, column: 23, scope: !1783)
!1788 = !DILocalVariable(name: "cosine", scope: !1783, file: !3, line: 158, type: !18)
!1789 = !DILocation(line: 158, column: 24, scope: !1783)
!1790 = !DILocation(line: 158, column: 54, scope: !1783)
!1791 = !DILocation(line: 158, column: 53, scope: !1783)
!1792 = !DILocation(line: 158, column: 31, scope: !1783)
!1793 = !DILocation(line: 162, column: 15, scope: !1783)
!1794 = !DILocation(line: 162, column: 27, scope: !1783)
!1795 = !DILocation(line: 162, column: 33, scope: !1783)
!1796 = !DILocation(line: 162, column: 26, scope: !1783)
!1797 = !DILocation(line: 162, column: 21, scope: !1783)
!1798 = !DILocation(line: 162, column: 14, scope: !1783)
!1799 = !DILocation(line: 162, column: 9, scope: !1783)
!1800 = !DILocation(line: 162, column: 3, scope: !1783)
!1801 = distinct !DISubprogram(name: "Gaussian", scope: !3, file: !3, line: 251, type: !13, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1802 = !DILocalVariable(name: "x", arg: 1, scope: !1801, file: !3, line: 251, type: !18)
!1803 = !DILocation(line: 251, column: 53, scope: !1801)
!1804 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1801, file: !3, line: 252, type: !19)
!1805 = !DILocation(line: 252, column: 23, scope: !1801)
!1806 = !DILocation(line: 284, column: 24, scope: !1801)
!1807 = !DILocation(line: 284, column: 39, scope: !1801)
!1808 = !DILocation(line: 284, column: 23, scope: !1801)
!1809 = !DILocation(line: 284, column: 54, scope: !1801)
!1810 = !DILocation(line: 284, column: 53, scope: !1801)
!1811 = !DILocation(line: 284, column: 56, scope: !1801)
!1812 = !DILocation(line: 284, column: 55, scope: !1801)
!1813 = !DILocation(line: 284, column: 14, scope: !1801)
!1814 = !DILocation(line: 284, column: 10, scope: !1801)
!1815 = !DILocation(line: 284, column: 9, scope: !1801)
!1816 = !DILocation(line: 284, column: 3, scope: !1801)
!1817 = distinct !DISubprogram(name: "Quadratic", scope: !3, file: !3, line: 386, type: !13, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1818 = !DILocalVariable(name: "x", arg: 1, scope: !1817, file: !3, line: 386, type: !18)
!1819 = !DILocation(line: 386, column: 54, scope: !1817)
!1820 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1817, file: !3, line: 387, type: !19)
!1821 = !DILocation(line: 387, column: 23, scope: !1817)
!1822 = !DILocation(line: 394, column: 7, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 394, column: 7)
!1824 = !DILocation(line: 394, column: 9, scope: !1823)
!1825 = !DILocation(line: 394, column: 7, scope: !1817)
!1826 = !DILocation(line: 395, column: 17, scope: !1823)
!1827 = !DILocation(line: 395, column: 19, scope: !1823)
!1828 = !DILocation(line: 395, column: 18, scope: !1823)
!1829 = !DILocation(line: 395, column: 16, scope: !1823)
!1830 = !DILocation(line: 395, column: 11, scope: !1823)
!1831 = !DILocation(line: 395, column: 5, scope: !1823)
!1832 = !DILocation(line: 396, column: 7, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 396, column: 7)
!1834 = !DILocation(line: 396, column: 9, scope: !1833)
!1835 = !DILocation(line: 396, column: 7, scope: !1817)
!1836 = !DILocation(line: 397, column: 17, scope: !1833)
!1837 = !DILocation(line: 397, column: 18, scope: !1833)
!1838 = !DILocation(line: 397, column: 15, scope: !1833)
!1839 = !DILocation(line: 397, column: 25, scope: !1833)
!1840 = !DILocation(line: 397, column: 26, scope: !1833)
!1841 = !DILocation(line: 397, column: 23, scope: !1833)
!1842 = !DILocation(line: 397, column: 11, scope: !1833)
!1843 = !DILocation(line: 397, column: 5, scope: !1833)
!1844 = !DILocation(line: 398, column: 3, scope: !1817)
!1845 = !DILocation(line: 399, column: 1, scope: !1817)
!1846 = distinct !DISubprogram(name: "Jinc", scope: !3, file: !3, line: 315, type: !13, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1847 = !DILocalVariable(name: "x", arg: 1, scope: !1846, file: !3, line: 315, type: !18)
!1848 = !DILocation(line: 315, column: 49, scope: !1846)
!1849 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1846, file: !3, line: 316, type: !19)
!1850 = !DILocation(line: 316, column: 23, scope: !1846)
!1851 = !DILocation(line: 328, column: 7, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 328, column: 7)
!1853 = !DILocation(line: 328, column: 9, scope: !1852)
!1854 = !DILocation(line: 328, column: 7, scope: !1846)
!1855 = !DILocation(line: 329, column: 5, scope: !1852)
!1856 = !DILocation(line: 330, column: 51, scope: !1846)
!1857 = !DILocation(line: 330, column: 50, scope: !1846)
!1858 = !DILocation(line: 330, column: 10, scope: !1846)
!1859 = !DILocation(line: 330, column: 54, scope: !1846)
!1860 = !DILocation(line: 330, column: 53, scope: !1846)
!1861 = !DILocation(line: 330, column: 3, scope: !1846)
!1862 = !DILocation(line: 331, column: 1, scope: !1846)
!1863 = distinct !DISubprogram(name: "Sinc", scope: !3, file: !3, line: 401, type: !13, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1864 = !DILocalVariable(name: "x", arg: 1, scope: !1863, file: !3, line: 401, type: !18)
!1865 = !DILocation(line: 401, column: 49, scope: !1863)
!1866 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1863, file: !3, line: 402, type: !19)
!1867 = !DILocation(line: 402, column: 23, scope: !1863)
!1868 = !DILocation(line: 410, column: 7, scope: !1869)
!1869 = distinct !DILexicalBlock(scope: !1863, file: !3, line: 410, column: 7)
!1870 = !DILocation(line: 410, column: 9, scope: !1869)
!1871 = !DILocation(line: 410, column: 7, scope: !1863)
!1872 = !DILocalVariable(name: "alpha", scope: !1873, file: !3, line: 412, type: !18)
!1873 = distinct !DILexicalBlock(scope: !1869, file: !3, line: 411, column: 5)
!1874 = !DILocation(line: 412, column: 28, scope: !1873)
!1875 = !DILocation(line: 412, column: 61, scope: !1873)
!1876 = !DILocation(line: 412, column: 60, scope: !1873)
!1877 = !DILocation(line: 412, column: 34, scope: !1873)
!1878 = !DILocation(line: 413, column: 27, scope: !1873)
!1879 = !DILocation(line: 413, column: 18, scope: !1873)
!1880 = !DILocation(line: 413, column: 14, scope: !1873)
!1881 = !DILocation(line: 413, column: 34, scope: !1873)
!1882 = !DILocation(line: 413, column: 33, scope: !1873)
!1883 = !DILocation(line: 413, column: 13, scope: !1873)
!1884 = !DILocation(line: 413, column: 7, scope: !1873)
!1885 = !DILocation(line: 415, column: 3, scope: !1863)
!1886 = !DILocation(line: 416, column: 1, scope: !1863)
!1887 = distinct !DISubprogram(name: "SincFast", scope: !3, file: !3, line: 418, type: !13, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1888 = !DILocalVariable(name: "x", arg: 1, scope: !1887, file: !3, line: 418, type: !18)
!1889 = !DILocation(line: 418, column: 53, scope: !1887)
!1890 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1887, file: !3, line: 419, type: !19)
!1891 = !DILocation(line: 419, column: 23, scope: !1887)
!1892 = !DILocation(line: 447, column: 7, scope: !1893)
!1893 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 447, column: 7)
!1894 = !DILocation(line: 447, column: 9, scope: !1893)
!1895 = !DILocation(line: 447, column: 7, scope: !1887)
!1896 = !DILocalVariable(name: "alpha", scope: !1897, file: !3, line: 449, type: !18)
!1897 = distinct !DILexicalBlock(scope: !1893, file: !3, line: 448, column: 5)
!1898 = !DILocation(line: 449, column: 28, scope: !1897)
!1899 = !DILocation(line: 449, column: 61, scope: !1897)
!1900 = !DILocation(line: 449, column: 60, scope: !1897)
!1901 = !DILocation(line: 449, column: 34, scope: !1897)
!1902 = !DILocation(line: 450, column: 27, scope: !1897)
!1903 = !DILocation(line: 450, column: 18, scope: !1897)
!1904 = !DILocation(line: 450, column: 14, scope: !1897)
!1905 = !DILocation(line: 450, column: 34, scope: !1897)
!1906 = !DILocation(line: 450, column: 33, scope: !1897)
!1907 = !DILocation(line: 450, column: 13, scope: !1897)
!1908 = !DILocation(line: 450, column: 7, scope: !1897)
!1909 = !DILocalVariable(name: "xx", scope: !1910, file: !3, line: 456, type: !18)
!1910 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 452, column: 3)
!1911 = !DILocation(line: 456, column: 26, scope: !1910)
!1912 = !DILocation(line: 456, column: 31, scope: !1910)
!1913 = !DILocation(line: 456, column: 33, scope: !1910)
!1914 = !DILocation(line: 456, column: 32, scope: !1910)
!1915 = !DILocalVariable(name: "c0", scope: !1910, file: !3, line: 476, type: !860)
!1916 = !DILocation(line: 476, column: 18, scope: !1910)
!1917 = !DILocalVariable(name: "c1", scope: !1910, file: !3, line: 477, type: !860)
!1918 = !DILocation(line: 477, column: 18, scope: !1910)
!1919 = !DILocalVariable(name: "c2", scope: !1910, file: !3, line: 478, type: !860)
!1920 = !DILocation(line: 478, column: 18, scope: !1910)
!1921 = !DILocalVariable(name: "c3", scope: !1910, file: !3, line: 479, type: !860)
!1922 = !DILocation(line: 479, column: 18, scope: !1910)
!1923 = !DILocalVariable(name: "c4", scope: !1910, file: !3, line: 480, type: !860)
!1924 = !DILocation(line: 480, column: 18, scope: !1910)
!1925 = !DILocalVariable(name: "c5", scope: !1910, file: !3, line: 481, type: !860)
!1926 = !DILocation(line: 481, column: 18, scope: !1910)
!1927 = !DILocalVariable(name: "c6", scope: !1910, file: !3, line: 482, type: !860)
!1928 = !DILocation(line: 482, column: 18, scope: !1910)
!1929 = !DILocalVariable(name: "c7", scope: !1910, file: !3, line: 483, type: !860)
!1930 = !DILocation(line: 483, column: 18, scope: !1910)
!1931 = !DILocalVariable(name: "c8", scope: !1910, file: !3, line: 484, type: !860)
!1932 = !DILocation(line: 484, column: 18, scope: !1910)
!1933 = !DILocalVariable(name: "c9", scope: !1910, file: !3, line: 485, type: !860)
!1934 = !DILocation(line: 485, column: 18, scope: !1910)
!1935 = !DILocalVariable(name: "p", scope: !1910, file: !3, line: 486, type: !860)
!1936 = !DILocation(line: 486, column: 18, scope: !1910)
!1937 = !DILocation(line: 487, column: 10, scope: !1910)
!1938 = !DILocation(line: 487, column: 17, scope: !1910)
!1939 = !DILocation(line: 487, column: 24, scope: !1910)
!1940 = !DILocation(line: 487, column: 31, scope: !1910)
!1941 = !DILocation(line: 487, column: 38, scope: !1910)
!1942 = !DILocation(line: 487, column: 45, scope: !1910)
!1943 = !DILocation(line: 487, column: 52, scope: !1910)
!1944 = !DILocation(line: 487, column: 59, scope: !1910)
!1945 = !DILocation(line: 487, column: 66, scope: !1910)
!1946 = !DILocation(line: 487, column: 68, scope: !1910)
!1947 = !DILocation(line: 487, column: 65, scope: !1910)
!1948 = !DILocation(line: 487, column: 61, scope: !1910)
!1949 = !DILocation(line: 487, column: 58, scope: !1910)
!1950 = !DILocation(line: 487, column: 54, scope: !1910)
!1951 = !DILocation(line: 487, column: 51, scope: !1910)
!1952 = !DILocation(line: 487, column: 47, scope: !1910)
!1953 = !DILocation(line: 487, column: 44, scope: !1910)
!1954 = !DILocation(line: 487, column: 40, scope: !1910)
!1955 = !DILocation(line: 487, column: 37, scope: !1910)
!1956 = !DILocation(line: 487, column: 33, scope: !1910)
!1957 = !DILocation(line: 487, column: 30, scope: !1910)
!1958 = !DILocation(line: 487, column: 26, scope: !1910)
!1959 = !DILocation(line: 487, column: 23, scope: !1910)
!1960 = !DILocation(line: 487, column: 19, scope: !1910)
!1961 = !DILocation(line: 487, column: 16, scope: !1910)
!1962 = !DILocation(line: 487, column: 12, scope: !1910)
!1963 = !DILocation(line: 487, column: 9, scope: !1910)
!1964 = !DILocation(line: 488, column: 13, scope: !1910)
!1965 = !DILocation(line: 488, column: 15, scope: !1910)
!1966 = !DILocation(line: 488, column: 22, scope: !1910)
!1967 = !DILocation(line: 488, column: 24, scope: !1910)
!1968 = !DILocation(line: 488, column: 20, scope: !1910)
!1969 = !DILocation(line: 488, column: 31, scope: !1910)
!1970 = !DILocation(line: 488, column: 33, scope: !1910)
!1971 = !DILocation(line: 488, column: 29, scope: !1910)
!1972 = !DILocation(line: 488, column: 40, scope: !1910)
!1973 = !DILocation(line: 488, column: 42, scope: !1910)
!1974 = !DILocation(line: 488, column: 38, scope: !1910)
!1975 = !DILocation(line: 488, column: 49, scope: !1910)
!1976 = !DILocation(line: 488, column: 48, scope: !1910)
!1977 = !DILocation(line: 488, column: 11, scope: !1910)
!1978 = !DILocation(line: 488, column: 5, scope: !1910)
!1979 = !DILocation(line: 512, column: 1, scope: !1887)
!1980 = distinct !DISubprogram(name: "Kaiser", scope: !3, file: !3, line: 333, type: !13, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1981 = !DILocalVariable(name: "x", arg: 1, scope: !1980, file: !3, line: 333, type: !18)
!1982 = !DILocation(line: 333, column: 51, scope: !1980)
!1983 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1980, file: !3, line: 334, type: !19)
!1984 = !DILocation(line: 334, column: 23, scope: !1980)
!1985 = !DILocation(line: 348, column: 10, scope: !1980)
!1986 = !DILocation(line: 348, column: 25, scope: !1980)
!1987 = !DILocation(line: 348, column: 43, scope: !1980)
!1988 = !DILocation(line: 348, column: 58, scope: !1980)
!1989 = !DILocation(line: 349, column: 24, scope: !1980)
!1990 = !DILocation(line: 349, column: 26, scope: !1980)
!1991 = !DILocation(line: 349, column: 25, scope: !1980)
!1992 = !DILocation(line: 349, column: 23, scope: !1980)
!1993 = !DILocation(line: 349, column: 5, scope: !1980)
!1994 = !DILocation(line: 348, column: 72, scope: !1980)
!1995 = !DILocation(line: 348, column: 40, scope: !1980)
!1996 = !DILocation(line: 348, column: 39, scope: !1980)
!1997 = !DILocation(line: 348, column: 3, scope: !1980)
!1998 = distinct !DISubprogram(name: "Welsh", scope: !3, file: !3, line: 529, type: !13, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!1999 = !DILocalVariable(name: "x", arg: 1, scope: !1998, file: !3, line: 529, type: !18)
!2000 = !DILocation(line: 529, column: 50, scope: !1998)
!2001 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !1998, file: !3, line: 530, type: !19)
!2002 = !DILocation(line: 530, column: 23, scope: !1998)
!2003 = !DILocation(line: 537, column: 7, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 537, column: 7)
!2005 = !DILocation(line: 537, column: 9, scope: !2004)
!2006 = !DILocation(line: 537, column: 7, scope: !1998)
!2007 = !DILocation(line: 538, column: 16, scope: !2004)
!2008 = !DILocation(line: 538, column: 18, scope: !2004)
!2009 = !DILocation(line: 538, column: 17, scope: !2004)
!2010 = !DILocation(line: 538, column: 15, scope: !2004)
!2011 = !DILocation(line: 538, column: 11, scope: !2004)
!2012 = !DILocation(line: 538, column: 5, scope: !2004)
!2013 = !DILocation(line: 539, column: 3, scope: !1998)
!2014 = !DILocation(line: 540, column: 1, scope: !1998)
!2015 = distinct !DISubprogram(name: "Bohman", scope: !3, file: !3, line: 165, type: !13, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2016 = !DILocalVariable(name: "x", arg: 1, scope: !2015, file: !3, line: 165, type: !18)
!2017 = !DILocation(line: 165, column: 51, scope: !2015)
!2018 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !2015, file: !3, line: 166, type: !19)
!2019 = !DILocation(line: 166, column: 23, scope: !2015)
!2020 = !DILocalVariable(name: "cosine", scope: !2015, file: !3, line: 176, type: !860)
!2021 = !DILocation(line: 176, column: 16, scope: !2015)
!2022 = !DILocation(line: 176, column: 46, scope: !2015)
!2023 = !DILocation(line: 176, column: 45, scope: !2015)
!2024 = !DILocation(line: 176, column: 23, scope: !2015)
!2025 = !DILocalVariable(name: "sine", scope: !2015, file: !3, line: 177, type: !860)
!2026 = !DILocation(line: 177, column: 16, scope: !2015)
!2027 = !DILocation(line: 177, column: 30, scope: !2015)
!2028 = !DILocation(line: 177, column: 37, scope: !2015)
!2029 = !DILocation(line: 177, column: 36, scope: !2015)
!2030 = !DILocation(line: 177, column: 29, scope: !2015)
!2031 = !DILocation(line: 177, column: 21, scope: !2015)
!2032 = !DILocation(line: 181, column: 33, scope: !2015)
!2033 = !DILocation(line: 181, column: 32, scope: !2015)
!2034 = !DILocation(line: 181, column: 36, scope: !2015)
!2035 = !DILocation(line: 181, column: 35, scope: !2015)
!2036 = !DILocation(line: 181, column: 58, scope: !2015)
!2037 = !DILocation(line: 181, column: 57, scope: !2015)
!2038 = !DILocation(line: 181, column: 42, scope: !2015)
!2039 = !DILocation(line: 181, column: 10, scope: !2015)
!2040 = !DILocation(line: 181, column: 3, scope: !2015)
!2041 = distinct !DISubprogram(name: "Lagrange", scope: !3, file: !3, line: 352, type: !13, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2042 = !DILocalVariable(name: "x", arg: 1, scope: !2041, file: !3, line: 352, type: !18)
!2043 = !DILocation(line: 352, column: 53, scope: !2041)
!2044 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !2041, file: !3, line: 353, type: !19)
!2045 = !DILocation(line: 353, column: 23, scope: !2041)
!2046 = !DILocalVariable(name: "value", scope: !2041, file: !3, line: 356, type: !15)
!2047 = !DILocation(line: 356, column: 5, scope: !2041)
!2048 = !DILocalVariable(name: "i", scope: !2041, file: !3, line: 359, type: !218)
!2049 = !DILocation(line: 359, column: 5, scope: !2041)
!2050 = !DILocalVariable(name: "n", scope: !2041, file: !3, line: 362, type: !218)
!2051 = !DILocation(line: 362, column: 5, scope: !2041)
!2052 = !DILocalVariable(name: "order", scope: !2041, file: !3, line: 363, type: !218)
!2053 = !DILocation(line: 363, column: 5, scope: !2041)
!2054 = !DILocation(line: 375, column: 7, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 375, column: 7)
!2056 = !DILocation(line: 375, column: 11, scope: !2055)
!2057 = !DILocation(line: 375, column: 26, scope: !2055)
!2058 = !DILocation(line: 375, column: 9, scope: !2055)
!2059 = !DILocation(line: 375, column: 7, scope: !2041)
!2060 = !DILocation(line: 376, column: 5, scope: !2055)
!2061 = !DILocation(line: 377, column: 24, scope: !2041)
!2062 = !DILocation(line: 377, column: 39, scope: !2041)
!2063 = !DILocation(line: 377, column: 23, scope: !2041)
!2064 = !DILocation(line: 377, column: 9, scope: !2041)
!2065 = !DILocation(line: 377, column: 8, scope: !2041)
!2066 = !DILocation(line: 378, column: 16, scope: !2041)
!2067 = !DILocation(line: 378, column: 31, scope: !2041)
!2068 = !DILocation(line: 378, column: 46, scope: !2041)
!2069 = !DILocation(line: 378, column: 45, scope: !2041)
!2070 = !DILocation(line: 378, column: 5, scope: !2041)
!2071 = !DILocation(line: 378, column: 4, scope: !2041)
!2072 = !DILocation(line: 379, column: 8, scope: !2041)
!2073 = !DILocation(line: 380, column: 9, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 380, column: 3)
!2075 = !DILocation(line: 380, column: 8, scope: !2074)
!2076 = !DILocation(line: 380, column: 13, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2074, file: !3, line: 380, column: 3)
!2078 = !DILocation(line: 380, column: 17, scope: !2077)
!2079 = !DILocation(line: 380, column: 15, scope: !2077)
!2080 = !DILocation(line: 380, column: 3, scope: !2074)
!2081 = !DILocation(line: 381, column: 9, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2077, file: !3, line: 381, column: 9)
!2083 = !DILocation(line: 381, column: 14, scope: !2082)
!2084 = !DILocation(line: 381, column: 11, scope: !2082)
!2085 = !DILocation(line: 381, column: 9, scope: !2077)
!2086 = !DILocation(line: 382, column: 15, scope: !2082)
!2087 = !DILocation(line: 382, column: 17, scope: !2082)
!2088 = !DILocation(line: 382, column: 16, scope: !2082)
!2089 = !DILocation(line: 382, column: 19, scope: !2082)
!2090 = !DILocation(line: 382, column: 18, scope: !2082)
!2091 = !DILocation(line: 382, column: 23, scope: !2082)
!2092 = !DILocation(line: 382, column: 25, scope: !2082)
!2093 = !DILocation(line: 382, column: 24, scope: !2082)
!2094 = !DILocation(line: 382, column: 22, scope: !2082)
!2095 = !DILocation(line: 382, column: 21, scope: !2082)
!2096 = !DILocation(line: 382, column: 12, scope: !2082)
!2097 = !DILocation(line: 382, column: 7, scope: !2082)
!2098 = !DILocation(line: 380, column: 25, scope: !2077)
!2099 = !DILocation(line: 380, column: 3, scope: !2077)
!2100 = distinct !{!2100, !2080, !2101}
!2101 = !DILocation(line: 382, column: 26, scope: !2074)
!2102 = !DILocation(line: 383, column: 10, scope: !2041)
!2103 = !DILocation(line: 383, column: 3, scope: !2041)
!2104 = !DILocation(line: 384, column: 1, scope: !2041)
!2105 = distinct !DISubprogram(name: "Cosine", scope: !3, file: !3, line: 198, type: !13, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2106 = !DILocalVariable(name: "x", arg: 1, scope: !2105, file: !3, line: 198, type: !18)
!2107 = !DILocation(line: 198, column: 51, scope: !2105)
!2108 = !DILocalVariable(name: "resize_filter", arg: 2, scope: !2105, file: !3, line: 199, type: !19)
!2109 = !DILocation(line: 199, column: 23, scope: !2105)
!2110 = !DILocation(line: 207, column: 50, scope: !2105)
!2111 = !DILocation(line: 207, column: 49, scope: !2105)
!2112 = !DILocation(line: 207, column: 26, scope: !2105)
!2113 = !DILocation(line: 207, column: 10, scope: !2105)
!2114 = !DILocation(line: 207, column: 3, scope: !2105)
!2115 = distinct !DISubprogram(name: "StringToDouble", scope: !2116, file: !2116, line: 42, type: !2117, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2116 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!178, !2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !438)
!2120 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !802)
!2121 = !DILocalVariable(name: "string", arg: 1, scope: !2115, file: !2116, line: 42, type: !2119)
!2122 = !DILocation(line: 42, column: 58, scope: !2115)
!2123 = !DILocalVariable(name: "sentinal", arg: 2, scope: !2115, file: !2116, line: 43, type: !2120)
!2124 = !DILocation(line: 43, column: 19, scope: !2115)
!2125 = !DILocation(line: 45, column: 31, scope: !2115)
!2126 = !DILocation(line: 45, column: 38, scope: !2115)
!2127 = !DILocation(line: 45, column: 10, scope: !2115)
!2128 = !DILocation(line: 45, column: 3, scope: !2115)
!2129 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !2130, file: !2130, line: 78, type: !2131, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2130 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!178, !860}
!2133 = !DILocalVariable(name: "x", arg: 1, scope: !2129, file: !2130, line: 78, type: !860)
!2134 = !DILocation(line: 78, column: 57, scope: !2129)
!2135 = !DILocalVariable(name: "sign", scope: !2129, file: !2130, line: 81, type: !178)
!2136 = !DILocation(line: 81, column: 5, scope: !2129)
!2137 = !DILocation(line: 86, column: 8, scope: !2129)
!2138 = !DILocation(line: 86, column: 10, scope: !2129)
!2139 = !DILocation(line: 86, column: 7, scope: !2129)
!2140 = !DILocation(line: 87, column: 8, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2129, file: !2130, line: 87, column: 7)
!2142 = !DILocation(line: 87, column: 13, scope: !2141)
!2143 = !DILocation(line: 87, column: 12, scope: !2141)
!2144 = !DILocation(line: 87, column: 16, scope: !2141)
!2145 = !DILocation(line: 87, column: 7, scope: !2129)
!2146 = !DILocation(line: 88, column: 16, scope: !2141)
!2147 = !DILocation(line: 88, column: 15, scope: !2141)
!2148 = !DILocation(line: 88, column: 5, scope: !2141)
!2149 = !DILocation(line: 89, column: 10, scope: !2129)
!2150 = !DILocation(line: 89, column: 14, scope: !2129)
!2151 = !DILocation(line: 89, column: 3, scope: !2129)
!2152 = !DILocation(line: 90, column: 1, scope: !2129)
!2153 = distinct !DISubprogram(name: "I0", scope: !3, file: !3, line: 1302, type: !856, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2154 = !DILocalVariable(name: "x", arg: 1, scope: !2153, file: !3, line: 1302, type: !15)
!2155 = !DILocation(line: 1302, column: 41, scope: !2153)
!2156 = !DILocalVariable(name: "sum", scope: !2153, file: !3, line: 1305, type: !15)
!2157 = !DILocation(line: 1305, column: 5, scope: !2153)
!2158 = !DILocalVariable(name: "t", scope: !2153, file: !3, line: 1306, type: !15)
!2159 = !DILocation(line: 1306, column: 5, scope: !2153)
!2160 = !DILocalVariable(name: "y", scope: !2153, file: !3, line: 1307, type: !15)
!2161 = !DILocation(line: 1307, column: 5, scope: !2153)
!2162 = !DILocalVariable(name: "i", scope: !2153, file: !3, line: 1310, type: !218)
!2163 = !DILocation(line: 1310, column: 5, scope: !2153)
!2164 = !DILocation(line: 1315, column: 6, scope: !2153)
!2165 = !DILocation(line: 1316, column: 5, scope: !2153)
!2166 = !DILocation(line: 1316, column: 7, scope: !2153)
!2167 = !DILocation(line: 1316, column: 6, scope: !2153)
!2168 = !DILocation(line: 1316, column: 8, scope: !2153)
!2169 = !DILocation(line: 1316, column: 4, scope: !2153)
!2170 = !DILocation(line: 1317, column: 5, scope: !2153)
!2171 = !DILocation(line: 1317, column: 4, scope: !2153)
!2172 = !DILocation(line: 1318, column: 9, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2153, file: !3, line: 1318, column: 3)
!2174 = !DILocation(line: 1318, column: 8, scope: !2173)
!2175 = !DILocation(line: 1318, column: 13, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 1318, column: 3)
!2177 = !DILocation(line: 1318, column: 15, scope: !2176)
!2178 = !DILocation(line: 1318, column: 3, scope: !2173)
!2179 = !DILocation(line: 1320, column: 10, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 1319, column: 3)
!2181 = !DILocation(line: 1320, column: 8, scope: !2180)
!2182 = !DILocation(line: 1321, column: 8, scope: !2180)
!2183 = !DILocation(line: 1321, column: 28, scope: !2180)
!2184 = !DILocation(line: 1321, column: 11, scope: !2180)
!2185 = !DILocation(line: 1321, column: 30, scope: !2180)
!2186 = !DILocation(line: 1321, column: 29, scope: !2180)
!2187 = !DILocation(line: 1321, column: 9, scope: !2180)
!2188 = !DILocation(line: 1321, column: 6, scope: !2180)
!2189 = !DILocation(line: 1322, column: 3, scope: !2180)
!2190 = !DILocation(line: 1318, column: 33, scope: !2176)
!2191 = !DILocation(line: 1318, column: 3, scope: !2176)
!2192 = distinct !{!2192, !2178, !2193}
!2193 = !DILocation(line: 1322, column: 3, scope: !2173)
!2194 = !DILocation(line: 1323, column: 10, scope: !2153)
!2195 = !DILocation(line: 1323, column: 3, scope: !2153)
!2196 = distinct !DISubprogram(name: "StringToLong", scope: !2116, file: !2116, line: 68, type: !2197, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!222, !2119}
!2199 = !DILocalVariable(name: "value", arg: 1, scope: !2196, file: !2116, line: 68, type: !2119)
!2200 = !DILocation(line: 68, column: 54, scope: !2196)
!2201 = !DILocation(line: 70, column: 17, scope: !2196)
!2202 = !DILocation(line: 70, column: 10, scope: !2196)
!2203 = !DILocation(line: 70, column: 3, scope: !2196)
!2204 = distinct !DISubprogram(name: "GetResizeFilterSupport", scope: !3, file: !3, line: 1576, type: !2205, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!15, !19}
!2207 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2204, file: !3, line: 1577, type: !19)
!2208 = !DILocation(line: 1577, column: 23, scope: !2204)
!2209 = !DILocation(line: 1581, column: 10, scope: !2204)
!2210 = !DILocation(line: 1581, column: 25, scope: !2204)
!2211 = !DILocation(line: 1581, column: 33, scope: !2204)
!2212 = !DILocation(line: 1581, column: 48, scope: !2204)
!2213 = !DILocation(line: 1581, column: 32, scope: !2204)
!2214 = !DILocation(line: 1581, column: 3, scope: !2204)
!2215 = distinct !DISubprogram(name: "GetResizeFilterWeight", scope: !3, file: !3, line: 1611, type: !2216, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!15, !19, !18}
!2218 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2215, file: !3, line: 1612, type: !19)
!2219 = !DILocation(line: 1612, column: 23, scope: !2215)
!2220 = !DILocalVariable(name: "x", arg: 2, scope: !2215, file: !3, line: 1612, type: !18)
!2221 = !DILocation(line: 1612, column: 58, scope: !2215)
!2222 = !DILocalVariable(name: "scale", scope: !2215, file: !3, line: 1615, type: !15)
!2223 = !DILocation(line: 1615, column: 5, scope: !2215)
!2224 = !DILocalVariable(name: "weight", scope: !2215, file: !3, line: 1616, type: !15)
!2225 = !DILocation(line: 1616, column: 5, scope: !2215)
!2226 = !DILocalVariable(name: "x_blur", scope: !2215, file: !3, line: 1617, type: !15)
!2227 = !DILocation(line: 1617, column: 5, scope: !2215)
!2228 = !DILocation(line: 1624, column: 24, scope: !2215)
!2229 = !DILocation(line: 1624, column: 15, scope: !2215)
!2230 = !DILocation(line: 1624, column: 10, scope: !2215)
!2231 = !DILocation(line: 1624, column: 27, scope: !2215)
!2232 = !DILocation(line: 1624, column: 42, scope: !2215)
!2233 = !DILocation(line: 1624, column: 26, scope: !2215)
!2234 = !DILocation(line: 1624, column: 9, scope: !2215)
!2235 = !DILocation(line: 1625, column: 8, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 1625, column: 7)
!2237 = !DILocation(line: 1625, column: 23, scope: !2236)
!2238 = !DILocation(line: 1625, column: 38, scope: !2236)
!2239 = !DILocation(line: 1625, column: 55, scope: !2236)
!2240 = !DILocation(line: 1626, column: 8, scope: !2236)
!2241 = !DILocation(line: 1626, column: 23, scope: !2236)
!2242 = !DILocation(line: 1626, column: 30, scope: !2236)
!2243 = !DILocation(line: 1625, column: 7, scope: !2215)
!2244 = !DILocation(line: 1627, column: 10, scope: !2236)
!2245 = !DILocation(line: 1627, column: 5, scope: !2236)
!2246 = !DILocation(line: 1630, column: 13, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 1629, column: 5)
!2248 = !DILocation(line: 1630, column: 28, scope: !2247)
!2249 = !DILocation(line: 1630, column: 12, scope: !2247)
!2250 = !DILocation(line: 1631, column: 13, scope: !2247)
!2251 = !DILocation(line: 1631, column: 28, scope: !2247)
!2252 = !DILocation(line: 1631, column: 35, scope: !2247)
!2253 = !DILocation(line: 1631, column: 42, scope: !2247)
!2254 = !DILocation(line: 1631, column: 41, scope: !2247)
!2255 = !DILocation(line: 1631, column: 48, scope: !2247)
!2256 = !DILocation(line: 1631, column: 12, scope: !2247)
!2257 = !DILocation(line: 1633, column: 10, scope: !2215)
!2258 = !DILocation(line: 1633, column: 16, scope: !2215)
!2259 = !DILocation(line: 1633, column: 31, scope: !2215)
!2260 = !DILocation(line: 1633, column: 38, scope: !2215)
!2261 = !DILocation(line: 1633, column: 45, scope: !2215)
!2262 = !DILocation(line: 1633, column: 15, scope: !2215)
!2263 = !DILocation(line: 1633, column: 9, scope: !2215)
!2264 = !DILocation(line: 1634, column: 10, scope: !2215)
!2265 = !DILocation(line: 1634, column: 3, scope: !2215)
!2266 = distinct !DISubprogram(name: "AdaptiveResizeImage", scope: !3, file: !3, line: 1255, type: !2267, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!803, !58, !2269, !2269, !643}
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!2270 = !DILocalVariable(name: "image", arg: 1, scope: !2266, file: !3, line: 1255, type: !58)
!2271 = !DILocation(line: 1255, column: 54, scope: !2266)
!2272 = !DILocalVariable(name: "columns", arg: 2, scope: !2266, file: !3, line: 1256, type: !2269)
!2273 = !DILocation(line: 1256, column: 16, scope: !2266)
!2274 = !DILocalVariable(name: "rows", arg: 3, scope: !2266, file: !3, line: 1256, type: !2269)
!2275 = !DILocation(line: 1256, column: 37, scope: !2266)
!2276 = !DILocalVariable(name: "exception", arg: 4, scope: !2266, file: !3, line: 1256, type: !643)
!2277 = !DILocation(line: 1256, column: 57, scope: !2266)
!2278 = !DILocation(line: 1258, column: 35, scope: !2266)
!2279 = !DILocation(line: 1258, column: 41, scope: !2266)
!2280 = !DILocation(line: 1258, column: 49, scope: !2266)
!2281 = !DILocation(line: 1259, column: 5, scope: !2266)
!2282 = !DILocation(line: 1258, column: 10, scope: !2266)
!2283 = !DILocation(line: 1258, column: 3, scope: !2266)
!2284 = distinct !DISubprogram(name: "InterpolativeResizeImage", scope: !3, file: !3, line: 1670, type: !2285, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!803, !58, !2269, !2269, !2287, !643}
!2287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!2288 = !DILocalVariable(name: "image", arg: 1, scope: !2284, file: !3, line: 1670, type: !58)
!2289 = !DILocation(line: 1670, column: 59, scope: !2284)
!2290 = !DILocalVariable(name: "columns", arg: 2, scope: !2284, file: !3, line: 1671, type: !2269)
!2291 = !DILocation(line: 1671, column: 16, scope: !2284)
!2292 = !DILocalVariable(name: "rows", arg: 3, scope: !2284, file: !3, line: 1671, type: !2269)
!2293 = !DILocation(line: 1671, column: 37, scope: !2284)
!2294 = !DILocalVariable(name: "method", arg: 4, scope: !2284, file: !3, line: 1671, type: !2287)
!2295 = !DILocation(line: 1671, column: 71, scope: !2284)
!2296 = !DILocalVariable(name: "exception", arg: 5, scope: !2284, file: !3, line: 1672, type: !643)
!2297 = !DILocation(line: 1672, column: 18, scope: !2284)
!2298 = !DILocalVariable(name: "image_view", scope: !2284, file: !3, line: 1677, type: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !2301, line: 50, baseType: !2302)
!2301 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2302 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !165, line: 160, flags: DIFlagFwdDecl)
!2303 = !DILocation(line: 1677, column: 6, scope: !2284)
!2304 = !DILocalVariable(name: "resize_view", scope: !2284, file: !3, line: 1678, type: !2299)
!2305 = !DILocation(line: 1678, column: 6, scope: !2284)
!2306 = !DILocalVariable(name: "resize_image", scope: !2284, file: !3, line: 1681, type: !803)
!2307 = !DILocation(line: 1681, column: 6, scope: !2284)
!2308 = !DILocalVariable(name: "status", scope: !2284, file: !3, line: 1684, type: !152)
!2309 = !DILocation(line: 1684, column: 5, scope: !2284)
!2310 = !DILocalVariable(name: "progress", scope: !2284, file: !3, line: 1687, type: !441)
!2311 = !DILocation(line: 1687, column: 5, scope: !2284)
!2312 = !DILocalVariable(name: "scale", scope: !2284, file: !3, line: 1690, type: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !2314, line: 142, baseType: !2315)
!2314 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !2314, line: 137, size: 128, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2315, file: !2314, line: 140, baseType: !178, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2315, file: !2314, line: 141, baseType: !178, size: 64, offset: 64)
!2319 = !DILocation(line: 1690, column: 5, scope: !2284)
!2320 = !DILocalVariable(name: "y", scope: !2284, file: !3, line: 1693, type: !218)
!2321 = !DILocation(line: 1693, column: 5, scope: !2284)
!2322 = !DILocation(line: 1700, column: 7, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1700, column: 7)
!2324 = !DILocation(line: 1700, column: 14, scope: !2323)
!2325 = !DILocation(line: 1700, column: 20, scope: !2323)
!2326 = !DILocation(line: 1700, column: 7, scope: !2284)
!2327 = !DILocation(line: 1701, column: 61, scope: !2323)
!2328 = !DILocation(line: 1701, column: 68, scope: !2323)
!2329 = !DILocation(line: 1701, column: 12, scope: !2323)
!2330 = !DILocation(line: 1701, column: 5, scope: !2323)
!2331 = !DILocation(line: 1704, column: 8, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1704, column: 7)
!2333 = !DILocation(line: 1704, column: 16, scope: !2332)
!2334 = !DILocation(line: 1704, column: 22, scope: !2332)
!2335 = !DILocation(line: 1704, column: 26, scope: !2332)
!2336 = !DILocation(line: 1704, column: 31, scope: !2332)
!2337 = !DILocation(line: 1704, column: 7, scope: !2284)
!2338 = !DILocation(line: 1705, column: 5, scope: !2332)
!2339 = !DILocation(line: 1706, column: 8, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1706, column: 7)
!2341 = !DILocation(line: 1706, column: 19, scope: !2340)
!2342 = !DILocation(line: 1706, column: 26, scope: !2340)
!2343 = !DILocation(line: 1706, column: 16, scope: !2340)
!2344 = !DILocation(line: 1706, column: 35, scope: !2340)
!2345 = !DILocation(line: 1706, column: 39, scope: !2340)
!2346 = !DILocation(line: 1706, column: 47, scope: !2340)
!2347 = !DILocation(line: 1706, column: 54, scope: !2340)
!2348 = !DILocation(line: 1706, column: 44, scope: !2340)
!2349 = !DILocation(line: 1706, column: 7, scope: !2284)
!2350 = !DILocation(line: 1707, column: 23, scope: !2340)
!2351 = !DILocation(line: 1707, column: 44, scope: !2340)
!2352 = !DILocation(line: 1707, column: 12, scope: !2340)
!2353 = !DILocation(line: 1707, column: 5, scope: !2340)
!2354 = !DILocation(line: 1708, column: 27, scope: !2284)
!2355 = !DILocation(line: 1708, column: 33, scope: !2284)
!2356 = !DILocation(line: 1708, column: 41, scope: !2284)
!2357 = !DILocation(line: 1708, column: 57, scope: !2284)
!2358 = !DILocation(line: 1708, column: 16, scope: !2284)
!2359 = !DILocation(line: 1708, column: 15, scope: !2284)
!2360 = !DILocation(line: 1709, column: 7, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1709, column: 7)
!2362 = !DILocation(line: 1709, column: 20, scope: !2361)
!2363 = !DILocation(line: 1709, column: 7, scope: !2284)
!2364 = !DILocation(line: 1710, column: 5, scope: !2361)
!2365 = !DILocation(line: 1711, column: 28, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1711, column: 7)
!2367 = !DILocation(line: 1711, column: 7, scope: !2366)
!2368 = !DILocation(line: 1711, column: 54, scope: !2366)
!2369 = !DILocation(line: 1711, column: 7, scope: !2284)
!2370 = !DILocation(line: 1713, column: 24, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 1712, column: 5)
!2372 = !DILocation(line: 1713, column: 35, scope: !2371)
!2373 = !DILocation(line: 1713, column: 49, scope: !2371)
!2374 = !DILocation(line: 1713, column: 7, scope: !2371)
!2375 = !DILocation(line: 1714, column: 33, scope: !2371)
!2376 = !DILocation(line: 1714, column: 20, scope: !2371)
!2377 = !DILocation(line: 1714, column: 19, scope: !2371)
!2378 = !DILocation(line: 1715, column: 7, scope: !2371)
!2379 = !DILocation(line: 1717, column: 9, scope: !2284)
!2380 = !DILocation(line: 1718, column: 11, scope: !2284)
!2381 = !DILocation(line: 1719, column: 38, scope: !2284)
!2382 = !DILocation(line: 1719, column: 44, scope: !2284)
!2383 = !DILocation(line: 1719, column: 14, scope: !2284)
!2384 = !DILocation(line: 1719, column: 13, scope: !2284)
!2385 = !DILocation(line: 1720, column: 41, scope: !2284)
!2386 = !DILocation(line: 1720, column: 54, scope: !2284)
!2387 = !DILocation(line: 1720, column: 15, scope: !2284)
!2388 = !DILocation(line: 1720, column: 14, scope: !2284)
!2389 = !DILocation(line: 1721, column: 20, scope: !2284)
!2390 = !DILocation(line: 1721, column: 27, scope: !2284)
!2391 = !DILocation(line: 1721, column: 11, scope: !2284)
!2392 = !DILocation(line: 1721, column: 35, scope: !2284)
!2393 = !DILocation(line: 1721, column: 49, scope: !2284)
!2394 = !DILocation(line: 1721, column: 34, scope: !2284)
!2395 = !DILocation(line: 1721, column: 9, scope: !2284)
!2396 = !DILocation(line: 1721, column: 10, scope: !2284)
!2397 = !DILocation(line: 1722, column: 20, scope: !2284)
!2398 = !DILocation(line: 1722, column: 27, scope: !2284)
!2399 = !DILocation(line: 1722, column: 11, scope: !2284)
!2400 = !DILocation(line: 1722, column: 32, scope: !2284)
!2401 = !DILocation(line: 1722, column: 46, scope: !2284)
!2402 = !DILocation(line: 1722, column: 31, scope: !2284)
!2403 = !DILocation(line: 1722, column: 9, scope: !2284)
!2404 = !DILocation(line: 1722, column: 10, scope: !2284)
!2405 = !DILocation(line: 1727, column: 9, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1727, column: 3)
!2407 = !DILocation(line: 1727, column: 8, scope: !2406)
!2408 = !DILocation(line: 1727, column: 13, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 1727, column: 3)
!2410 = !DILocation(line: 1727, column: 27, scope: !2409)
!2411 = !DILocation(line: 1727, column: 41, scope: !2409)
!2412 = !DILocation(line: 1727, column: 15, scope: !2409)
!2413 = !DILocation(line: 1727, column: 3, scope: !2406)
!2414 = !DILocalVariable(name: "pixel", scope: !2415, file: !3, line: 1730, type: !813)
!2415 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 1728, column: 3)
!2416 = !DILocation(line: 1730, column: 7, scope: !2415)
!2417 = !DILocalVariable(name: "offset", scope: !2415, file: !3, line: 1733, type: !2313)
!2418 = !DILocation(line: 1733, column: 7, scope: !2415)
!2419 = !DILocalVariable(name: "resize_indexes", scope: !2415, file: !3, line: 1736, type: !2420)
!2420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !811)
!2421 = !DILocation(line: 1736, column: 17, scope: !2415)
!2422 = !DILocalVariable(name: "q", scope: !2415, file: !3, line: 1739, type: !2423)
!2423 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !163)
!2424 = !DILocation(line: 1739, column: 17, scope: !2415)
!2425 = !DILocalVariable(name: "x", scope: !2415, file: !3, line: 1742, type: !218)
!2426 = !DILocation(line: 1742, column: 7, scope: !2415)
!2427 = !DILocation(line: 1744, column: 9, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 1744, column: 9)
!2429 = !DILocation(line: 1744, column: 16, scope: !2428)
!2430 = !DILocation(line: 1744, column: 9, scope: !2415)
!2431 = !DILocation(line: 1745, column: 7, scope: !2428)
!2432 = !DILocation(line: 1746, column: 37, scope: !2415)
!2433 = !DILocation(line: 1746, column: 51, scope: !2415)
!2434 = !DILocation(line: 1746, column: 53, scope: !2415)
!2435 = !DILocation(line: 1746, column: 67, scope: !2415)
!2436 = !DILocation(line: 1747, column: 7, scope: !2415)
!2437 = !DILocation(line: 1746, column: 7, scope: !2415)
!2438 = !DILocation(line: 1746, column: 6, scope: !2415)
!2439 = !DILocation(line: 1748, column: 9, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 1748, column: 9)
!2441 = !DILocation(line: 1748, column: 11, scope: !2440)
!2442 = !DILocation(line: 1748, column: 9, scope: !2415)
!2443 = !DILocation(line: 1749, column: 7, scope: !2440)
!2444 = !DILocation(line: 1750, column: 52, scope: !2415)
!2445 = !DILocation(line: 1750, column: 20, scope: !2415)
!2446 = !DILocation(line: 1750, column: 19, scope: !2415)
!2447 = !DILocation(line: 1751, column: 26, scope: !2415)
!2448 = !DILocation(line: 1751, column: 5, scope: !2415)
!2449 = !DILocation(line: 1752, column: 32, scope: !2415)
!2450 = !DILocation(line: 1752, column: 15, scope: !2415)
!2451 = !DILocation(line: 1752, column: 33, scope: !2415)
!2452 = !DILocation(line: 1752, column: 45, scope: !2415)
!2453 = !DILocation(line: 1752, column: 38, scope: !2415)
!2454 = !DILocation(line: 1752, column: 46, scope: !2415)
!2455 = !DILocation(line: 1752, column: 12, scope: !2415)
!2456 = !DILocation(line: 1752, column: 13, scope: !2415)
!2457 = !DILocation(line: 1753, column: 11, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 1753, column: 5)
!2459 = !DILocation(line: 1753, column: 10, scope: !2458)
!2460 = !DILocation(line: 1753, column: 15, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 1753, column: 5)
!2462 = !DILocation(line: 1753, column: 29, scope: !2461)
!2463 = !DILocation(line: 1753, column: 43, scope: !2461)
!2464 = !DILocation(line: 1753, column: 17, scope: !2461)
!2465 = !DILocation(line: 1753, column: 5, scope: !2458)
!2466 = !DILocation(line: 1755, column: 34, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2461, file: !3, line: 1754, column: 5)
!2468 = !DILocation(line: 1755, column: 17, scope: !2467)
!2469 = !DILocation(line: 1755, column: 35, scope: !2467)
!2470 = !DILocation(line: 1755, column: 47, scope: !2467)
!2471 = !DILocation(line: 1755, column: 40, scope: !2467)
!2472 = !DILocation(line: 1755, column: 48, scope: !2467)
!2473 = !DILocation(line: 1755, column: 14, scope: !2467)
!2474 = !DILocation(line: 1755, column: 15, scope: !2467)
!2475 = !DILocation(line: 1756, column: 43, scope: !2467)
!2476 = !DILocation(line: 1756, column: 49, scope: !2467)
!2477 = !DILocation(line: 1756, column: 60, scope: !2467)
!2478 = !DILocation(line: 1756, column: 74, scope: !2467)
!2479 = !DILocation(line: 1757, column: 16, scope: !2467)
!2480 = !DILocation(line: 1757, column: 25, scope: !2467)
!2481 = !DILocation(line: 1756, column: 14, scope: !2467)
!2482 = !DILocation(line: 1758, column: 22, scope: !2467)
!2483 = !DILocation(line: 1758, column: 42, scope: !2467)
!2484 = !DILocation(line: 1758, column: 44, scope: !2467)
!2485 = !DILocation(line: 1758, column: 59, scope: !2467)
!2486 = !DILocation(line: 1758, column: 58, scope: !2467)
!2487 = !DILocation(line: 1758, column: 7, scope: !2467)
!2488 = !DILocation(line: 1759, column: 8, scope: !2467)
!2489 = !DILocation(line: 1760, column: 5, scope: !2467)
!2490 = !DILocation(line: 1753, column: 53, scope: !2461)
!2491 = !DILocation(line: 1753, column: 5, scope: !2461)
!2492 = distinct !{!2492, !2465, !2493}
!2493 = !DILocation(line: 1760, column: 5, scope: !2458)
!2494 = !DILocation(line: 1761, column: 38, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 1761, column: 9)
!2496 = !DILocation(line: 1761, column: 50, scope: !2495)
!2497 = !DILocation(line: 1761, column: 9, scope: !2495)
!2498 = !DILocation(line: 1761, column: 61, scope: !2495)
!2499 = !DILocation(line: 1761, column: 9, scope: !2415)
!2500 = !DILocation(line: 1762, column: 7, scope: !2495)
!2501 = !DILocation(line: 1763, column: 9, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 1763, column: 9)
!2503 = !DILocation(line: 1763, column: 16, scope: !2502)
!2504 = !DILocation(line: 1763, column: 33, scope: !2502)
!2505 = !DILocation(line: 1763, column: 9, scope: !2415)
!2506 = !DILocalVariable(name: "proceed", scope: !2507, file: !3, line: 1766, type: !152)
!2507 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 1764, column: 7)
!2508 = !DILocation(line: 1766, column: 11, scope: !2507)
!2509 = !DILocation(line: 1771, column: 34, scope: !2507)
!2510 = !DILocation(line: 1771, column: 76, scope: !2507)
!2511 = !DILocation(line: 1772, column: 11, scope: !2507)
!2512 = !DILocation(line: 1772, column: 18, scope: !2507)
!2513 = !DILocation(line: 1771, column: 17, scope: !2507)
!2514 = !DILocation(line: 1771, column: 16, scope: !2507)
!2515 = !DILocation(line: 1773, column: 13, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 1773, column: 13)
!2517 = !DILocation(line: 1773, column: 21, scope: !2516)
!2518 = !DILocation(line: 1773, column: 13, scope: !2507)
!2519 = !DILocation(line: 1774, column: 17, scope: !2516)
!2520 = !DILocation(line: 1774, column: 11, scope: !2516)
!2521 = !DILocation(line: 1775, column: 7, scope: !2507)
!2522 = !DILocation(line: 1776, column: 3, scope: !2415)
!2523 = !DILocation(line: 1727, column: 48, scope: !2409)
!2524 = !DILocation(line: 1727, column: 3, scope: !2409)
!2525 = distinct !{!2525, !2413, !2526}
!2526 = !DILocation(line: 1776, column: 3, scope: !2406)
!2527 = !DILocation(line: 1777, column: 32, scope: !2284)
!2528 = !DILocation(line: 1777, column: 15, scope: !2284)
!2529 = !DILocation(line: 1777, column: 14, scope: !2284)
!2530 = !DILocation(line: 1778, column: 31, scope: !2284)
!2531 = !DILocation(line: 1778, column: 14, scope: !2284)
!2532 = !DILocation(line: 1778, column: 13, scope: !2284)
!2533 = !DILocation(line: 1779, column: 7, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2284, file: !3, line: 1779, column: 7)
!2535 = !DILocation(line: 1779, column: 14, scope: !2534)
!2536 = !DILocation(line: 1779, column: 7, scope: !2284)
!2537 = !DILocation(line: 1780, column: 31, scope: !2534)
!2538 = !DILocation(line: 1780, column: 18, scope: !2534)
!2539 = !DILocation(line: 1780, column: 17, scope: !2534)
!2540 = !DILocation(line: 1780, column: 5, scope: !2534)
!2541 = !DILocation(line: 1781, column: 10, scope: !2284)
!2542 = !DILocation(line: 1781, column: 3, scope: !2284)
!2543 = !DILocation(line: 1782, column: 1, scope: !2284)
!2544 = distinct !DISubprogram(name: "DestroyResizeFilter", scope: !3, file: !3, line: 1495, type: !2545, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!6, !6}
!2547 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2544, file: !3, line: 1495, type: !6)
!2548 = !DILocation(line: 1495, column: 62, scope: !2544)
!2549 = !DILocation(line: 1499, column: 3, scope: !2544)
!2550 = !DILocation(line: 1499, column: 18, scope: !2544)
!2551 = !DILocation(line: 1499, column: 27, scope: !2544)
!2552 = !DILocation(line: 1500, column: 57, scope: !2544)
!2553 = !DILocation(line: 1500, column: 34, scope: !2544)
!2554 = !DILocation(line: 1500, column: 17, scope: !2544)
!2555 = !DILocation(line: 1500, column: 16, scope: !2544)
!2556 = !DILocation(line: 1501, column: 10, scope: !2544)
!2557 = !DILocation(line: 1501, column: 3, scope: !2544)
!2558 = distinct !DISubprogram(name: "GetResizeFilterCoefficient", scope: !3, file: !3, line: 1528, type: !2559, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!804, !19}
!2561 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2558, file: !3, line: 1529, type: !19)
!2562 = !DILocation(line: 1529, column: 23, scope: !2558)
!2563 = !DILocation(line: 1533, column: 29, scope: !2558)
!2564 = !DILocation(line: 1533, column: 44, scope: !2558)
!2565 = !DILocation(line: 1533, column: 3, scope: !2558)
!2566 = distinct !DISubprogram(name: "GetResizeFilterBlur", scope: !3, file: !3, line: 1536, type: !2205, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2567 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2566, file: !3, line: 1537, type: !19)
!2568 = !DILocation(line: 1537, column: 23, scope: !2566)
!2569 = !DILocation(line: 1541, column: 10, scope: !2566)
!2570 = !DILocation(line: 1541, column: 25, scope: !2566)
!2571 = !DILocation(line: 1541, column: 3, scope: !2566)
!2572 = distinct !DISubprogram(name: "GetResizeFilterScale", scope: !3, file: !3, line: 1544, type: !2205, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2573 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2572, file: !3, line: 1545, type: !19)
!2574 = !DILocation(line: 1545, column: 23, scope: !2572)
!2575 = !DILocation(line: 1549, column: 10, scope: !2572)
!2576 = !DILocation(line: 1549, column: 25, scope: !2572)
!2577 = !DILocation(line: 1549, column: 3, scope: !2572)
!2578 = distinct !DISubprogram(name: "GetResizeFilterWindowSupport", scope: !3, file: !3, line: 1552, type: !2205, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2579 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2578, file: !3, line: 1553, type: !19)
!2580 = !DILocation(line: 1553, column: 23, scope: !2578)
!2581 = !DILocation(line: 1557, column: 10, scope: !2578)
!2582 = !DILocation(line: 1557, column: 25, scope: !2578)
!2583 = !DILocation(line: 1557, column: 3, scope: !2578)
!2584 = distinct !DISubprogram(name: "GetResizeFilterWeightingType", scope: !3, file: !3, line: 1560, type: !2585, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{!31, !19}
!2587 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2584, file: !3, line: 1561, type: !19)
!2588 = !DILocation(line: 1561, column: 23, scope: !2584)
!2589 = !DILocation(line: 1565, column: 10, scope: !2584)
!2590 = !DILocation(line: 1565, column: 25, scope: !2584)
!2591 = !DILocation(line: 1565, column: 3, scope: !2584)
!2592 = distinct !DISubprogram(name: "GetResizeFilterWindowWeightingType", scope: !3, file: !3, line: 1568, type: !2585, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2593 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !2592, file: !3, line: 1569, type: !19)
!2594 = !DILocation(line: 1569, column: 23, scope: !2592)
!2595 = !DILocation(line: 1573, column: 10, scope: !2592)
!2596 = !DILocation(line: 1573, column: 25, scope: !2592)
!2597 = !DILocation(line: 1573, column: 3, scope: !2592)
!2598 = distinct !DISubprogram(name: "SetPixelPacket", scope: !2130, file: !2130, line: 117, type: !2599, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{null, !58, !2601, !163, !811}
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!2603 = !DILocalVariable(name: "image", arg: 1, scope: !2598, file: !2130, line: 117, type: !58)
!2604 = !DILocation(line: 117, column: 48, scope: !2598)
!2605 = !DILocalVariable(name: "pixel", arg: 2, scope: !2598, file: !2130, line: 118, type: !2601)
!2606 = !DILocation(line: 118, column: 28, scope: !2598)
!2607 = !DILocalVariable(name: "color", arg: 3, scope: !2598, file: !2130, line: 118, type: !163)
!2608 = !DILocation(line: 118, column: 47, scope: !2598)
!2609 = !DILocalVariable(name: "index", arg: 4, scope: !2598, file: !2130, line: 118, type: !811)
!2610 = !DILocation(line: 118, column: 66, scope: !2598)
!2611 = !DILocation(line: 120, column: 3, scope: !2598)
!2612 = !DILocation(line: 121, column: 3, scope: !2598)
!2613 = !DILocation(line: 122, column: 3, scope: !2598)
!2614 = !DILocation(line: 123, column: 3, scope: !2598)
!2615 = !DILocation(line: 124, column: 8, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2598, file: !2130, line: 124, column: 7)
!2617 = !DILocation(line: 124, column: 15, scope: !2616)
!2618 = !DILocation(line: 124, column: 26, scope: !2616)
!2619 = !DILocation(line: 124, column: 45, scope: !2616)
!2620 = !DILocation(line: 125, column: 8, scope: !2616)
!2621 = !DILocation(line: 125, column: 15, scope: !2616)
!2622 = !DILocation(line: 125, column: 29, scope: !2616)
!2623 = !DILocation(line: 124, column: 7, scope: !2598)
!2624 = !DILocation(line: 126, column: 5, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2626, file: !2130, line: 126, column: 5)
!2626 = distinct !DILexicalBlock(scope: !2616, file: !2130, line: 126, column: 5)
!2627 = !DILocation(line: 126, column: 5, scope: !2626)
!2628 = !DILocation(line: 127, column: 1, scope: !2598)
!2629 = distinct !DISubprogram(name: "SetImageProgress", scope: !2630, file: !2630, line: 27, type: !2631, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2630 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!152, !58, !438, !440, !443}
!2633 = !DILocalVariable(name: "image", arg: 1, scope: !2629, file: !2630, line: 27, type: !58)
!2634 = !DILocation(line: 27, column: 63, scope: !2629)
!2635 = !DILocalVariable(name: "tag", arg: 2, scope: !2629, file: !2630, line: 28, type: !438)
!2636 = !DILocation(line: 28, column: 15, scope: !2629)
!2637 = !DILocalVariable(name: "offset", arg: 3, scope: !2629, file: !2630, line: 28, type: !440)
!2638 = !DILocation(line: 28, column: 42, scope: !2629)
!2639 = !DILocalVariable(name: "extent", arg: 4, scope: !2629, file: !2630, line: 28, type: !443)
!2640 = !DILocation(line: 28, column: 70, scope: !2629)
!2641 = !DILocalVariable(name: "message", scope: !2629, file: !2630, line: 31, type: !458)
!2642 = !DILocation(line: 31, column: 5, scope: !2629)
!2643 = !DILocation(line: 33, column: 7, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2629, file: !2630, line: 33, column: 7)
!2645 = !DILocation(line: 33, column: 14, scope: !2644)
!2646 = !DILocation(line: 33, column: 31, scope: !2644)
!2647 = !DILocation(line: 33, column: 7, scope: !2629)
!2648 = !DILocation(line: 34, column: 5, scope: !2644)
!2649 = !DILocation(line: 35, column: 29, scope: !2629)
!2650 = !DILocation(line: 35, column: 59, scope: !2629)
!2651 = !DILocation(line: 35, column: 63, scope: !2629)
!2652 = !DILocation(line: 35, column: 70, scope: !2629)
!2653 = !DILocation(line: 35, column: 10, scope: !2629)
!2654 = !DILocation(line: 36, column: 10, scope: !2629)
!2655 = !DILocation(line: 36, column: 17, scope: !2629)
!2656 = !DILocation(line: 36, column: 34, scope: !2629)
!2657 = !DILocation(line: 36, column: 42, scope: !2629)
!2658 = !DILocation(line: 36, column: 49, scope: !2629)
!2659 = !DILocation(line: 36, column: 56, scope: !2629)
!2660 = !DILocation(line: 36, column: 63, scope: !2629)
!2661 = !DILocation(line: 36, column: 3, scope: !2629)
!2662 = !DILocation(line: 37, column: 1, scope: !2629)
!2663 = distinct !DISubprogram(name: "LiquidRescaleImage", scope: !3, file: !3, line: 1984, type: !2664, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!803, !58, !2269, !2269, !860, !860, !643}
!2666 = !DILocalVariable(name: "image", arg: 1, scope: !2663, file: !3, line: 1984, type: !58)
!2667 = !DILocation(line: 1984, column: 53, scope: !2663)
!2668 = !DILocalVariable(name: "columns", arg: 2, scope: !2663, file: !3, line: 1985, type: !2269)
!2669 = !DILocation(line: 1985, column: 16, scope: !2663)
!2670 = !DILocalVariable(name: "rows", arg: 3, scope: !2663, file: !3, line: 1985, type: !2269)
!2671 = !DILocation(line: 1985, column: 52, scope: !2663)
!2672 = !DILocalVariable(name: "delta_x", arg: 4, scope: !2663, file: !3, line: 1986, type: !860)
!2673 = !DILocation(line: 1986, column: 16, scope: !2663)
!2674 = !DILocalVariable(name: "rigidity", arg: 5, scope: !2663, file: !3, line: 1986, type: !860)
!2675 = !DILocation(line: 1986, column: 52, scope: !2663)
!2676 = !DILocalVariable(name: "exception", arg: 6, scope: !2663, file: !3, line: 1987, type: !643)
!2677 = !DILocation(line: 1987, column: 18, scope: !2663)
!2678 = !DILocation(line: 1991, column: 7, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 1991, column: 7)
!2680 = !DILocation(line: 1991, column: 14, scope: !2679)
!2681 = !DILocation(line: 1991, column: 20, scope: !2679)
!2682 = !DILocation(line: 1991, column: 7, scope: !2663)
!2683 = !DILocation(line: 1992, column: 61, scope: !2679)
!2684 = !DILocation(line: 1992, column: 68, scope: !2679)
!2685 = !DILocation(line: 1992, column: 12, scope: !2679)
!2686 = !DILocation(line: 1992, column: 5, scope: !2679)
!2687 = !DILocation(line: 1995, column: 31, scope: !2663)
!2688 = !DILocation(line: 1996, column: 53, scope: !2663)
!2689 = !DILocation(line: 1996, column: 60, scope: !2663)
!2690 = !DILocation(line: 1995, column: 10, scope: !2663)
!2691 = !DILocation(line: 1997, column: 3, scope: !2663)
!2692 = distinct !DISubprogram(name: "MagnifyImage", scope: !3, file: !3, line: 2026, type: !2693, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!803, !58, !643}
!2695 = !DILocalVariable(name: "image", arg: 1, scope: !2692, file: !3, line: 2026, type: !58)
!2696 = !DILocation(line: 2026, column: 47, scope: !2692)
!2697 = !DILocalVariable(name: "exception", arg: 2, scope: !2692, file: !3, line: 2026, type: !643)
!2698 = !DILocation(line: 2026, column: 68, scope: !2692)
!2699 = !DILocalVariable(name: "image_view", scope: !2692, file: !3, line: 2031, type: !2299)
!2700 = !DILocation(line: 2031, column: 6, scope: !2692)
!2701 = !DILocalVariable(name: "magnify_view", scope: !2692, file: !3, line: 2032, type: !2299)
!2702 = !DILocation(line: 2032, column: 6, scope: !2692)
!2703 = !DILocalVariable(name: "magnify_image", scope: !2692, file: !3, line: 2035, type: !803)
!2704 = !DILocation(line: 2035, column: 6, scope: !2692)
!2705 = !DILocalVariable(name: "status", scope: !2692, file: !3, line: 2038, type: !152)
!2706 = !DILocation(line: 2038, column: 5, scope: !2692)
!2707 = !DILocalVariable(name: "progress", scope: !2692, file: !3, line: 2041, type: !441)
!2708 = !DILocation(line: 2041, column: 5, scope: !2692)
!2709 = !DILocalVariable(name: "y", scope: !2692, file: !3, line: 2044, type: !218)
!2710 = !DILocation(line: 2044, column: 5, scope: !2692)
!2711 = !DILocation(line: 2051, column: 7, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 2051, column: 7)
!2713 = !DILocation(line: 2051, column: 14, scope: !2712)
!2714 = !DILocation(line: 2051, column: 20, scope: !2712)
!2715 = !DILocation(line: 2051, column: 7, scope: !2692)
!2716 = !DILocation(line: 2052, column: 61, scope: !2712)
!2717 = !DILocation(line: 2052, column: 68, scope: !2712)
!2718 = !DILocation(line: 2052, column: 12, scope: !2712)
!2719 = !DILocation(line: 2052, column: 5, scope: !2712)
!2720 = !DILocation(line: 2055, column: 28, scope: !2692)
!2721 = !DILocation(line: 2055, column: 36, scope: !2692)
!2722 = !DILocation(line: 2055, column: 43, scope: !2692)
!2723 = !DILocation(line: 2055, column: 35, scope: !2692)
!2724 = !DILocation(line: 2055, column: 53, scope: !2692)
!2725 = !DILocation(line: 2055, column: 60, scope: !2692)
!2726 = !DILocation(line: 2055, column: 52, scope: !2692)
!2727 = !DILocation(line: 2056, column: 5, scope: !2692)
!2728 = !DILocation(line: 2055, column: 17, scope: !2692)
!2729 = !DILocation(line: 2055, column: 16, scope: !2692)
!2730 = !DILocation(line: 2057, column: 7, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 2057, column: 7)
!2732 = !DILocation(line: 2057, column: 21, scope: !2731)
!2733 = !DILocation(line: 2057, column: 7, scope: !2692)
!2734 = !DILocation(line: 2058, column: 5, scope: !2731)
!2735 = !DILocation(line: 2062, column: 9, scope: !2692)
!2736 = !DILocation(line: 2063, column: 11, scope: !2692)
!2737 = !DILocation(line: 2064, column: 38, scope: !2692)
!2738 = !DILocation(line: 2064, column: 44, scope: !2692)
!2739 = !DILocation(line: 2064, column: 14, scope: !2692)
!2740 = !DILocation(line: 2064, column: 13, scope: !2692)
!2741 = !DILocation(line: 2065, column: 42, scope: !2692)
!2742 = !DILocation(line: 2065, column: 56, scope: !2692)
!2743 = !DILocation(line: 2065, column: 16, scope: !2692)
!2744 = !DILocation(line: 2065, column: 15, scope: !2692)
!2745 = !DILocation(line: 2070, column: 9, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 2070, column: 3)
!2747 = !DILocation(line: 2070, column: 8, scope: !2746)
!2748 = !DILocation(line: 2070, column: 13, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2070, column: 3)
!2750 = !DILocation(line: 2070, column: 27, scope: !2749)
!2751 = !DILocation(line: 2070, column: 34, scope: !2749)
!2752 = !DILocation(line: 2070, column: 15, scope: !2749)
!2753 = !DILocation(line: 2070, column: 3, scope: !2746)
!2754 = !DILocalVariable(name: "magnify_indexes", scope: !2755, file: !3, line: 2073, type: !2420)
!2755 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 2071, column: 3)
!2756 = !DILocation(line: 2073, column: 17, scope: !2755)
!2757 = !DILocalVariable(name: "q", scope: !2755, file: !3, line: 2076, type: !2423)
!2758 = !DILocation(line: 2076, column: 17, scope: !2755)
!2759 = !DILocalVariable(name: "x", scope: !2755, file: !3, line: 2079, type: !218)
!2760 = !DILocation(line: 2079, column: 7, scope: !2755)
!2761 = !DILocation(line: 2081, column: 9, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2081, column: 9)
!2763 = !DILocation(line: 2081, column: 16, scope: !2762)
!2764 = !DILocation(line: 2081, column: 9, scope: !2755)
!2765 = !DILocation(line: 2082, column: 7, scope: !2762)
!2766 = !DILocation(line: 2083, column: 37, scope: !2755)
!2767 = !DILocation(line: 2083, column: 54, scope: !2755)
!2768 = !DILocation(line: 2083, column: 53, scope: !2755)
!2769 = !DILocation(line: 2083, column: 56, scope: !2755)
!2770 = !DILocation(line: 2083, column: 71, scope: !2755)
!2771 = !DILocation(line: 2084, column: 7, scope: !2755)
!2772 = !DILocation(line: 2083, column: 7, scope: !2755)
!2773 = !DILocation(line: 2083, column: 6, scope: !2755)
!2774 = !DILocation(line: 2085, column: 9, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2085, column: 9)
!2776 = !DILocation(line: 2085, column: 11, scope: !2775)
!2777 = !DILocation(line: 2085, column: 9, scope: !2755)
!2778 = !DILocation(line: 2087, column: 15, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 2086, column: 7)
!2780 = !DILocation(line: 2088, column: 9, scope: !2779)
!2781 = !DILocation(line: 2090, column: 53, scope: !2755)
!2782 = !DILocation(line: 2090, column: 21, scope: !2755)
!2783 = !DILocation(line: 2090, column: 20, scope: !2755)
!2784 = !DILocation(line: 2091, column: 11, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2091, column: 5)
!2786 = !DILocation(line: 2091, column: 10, scope: !2785)
!2787 = !DILocation(line: 2091, column: 15, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 2091, column: 5)
!2789 = !DILocation(line: 2091, column: 29, scope: !2788)
!2790 = !DILocation(line: 2091, column: 36, scope: !2788)
!2791 = !DILocation(line: 2091, column: 17, scope: !2788)
!2792 = !DILocation(line: 2091, column: 5, scope: !2785)
!2793 = !DILocalVariable(name: "intensity", scope: !2794, file: !3, line: 2094, type: !2795)
!2794 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 2092, column: 5)
!2795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 288, elements: !861)
!2796 = !DILocation(line: 2094, column: 9, scope: !2794)
!2797 = !DILocalVariable(name: "indexes", scope: !2794, file: !3, line: 2097, type: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !807)
!2799 = !DILocation(line: 2097, column: 19, scope: !2794)
!2800 = !DILocalVariable(name: "p", scope: !2794, file: !3, line: 2100, type: !2801)
!2801 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !805)
!2802 = !DILocation(line: 2100, column: 19, scope: !2794)
!2803 = !DILocalVariable(name: "r", scope: !2794, file: !3, line: 2103, type: !2423)
!2804 = !DILocation(line: 2103, column: 19, scope: !2794)
!2805 = !DILocalVariable(name: "i", scope: !2794, file: !3, line: 2106, type: !218)
!2806 = !DILocation(line: 2106, column: 9, scope: !2794)
!2807 = !DILocation(line: 2111, column: 35, scope: !2794)
!2808 = !DILocation(line: 2111, column: 46, scope: !2794)
!2809 = !DILocation(line: 2111, column: 47, scope: !2794)
!2810 = !DILocation(line: 2111, column: 50, scope: !2794)
!2811 = !DILocation(line: 2111, column: 51, scope: !2794)
!2812 = !DILocation(line: 2111, column: 58, scope: !2794)
!2813 = !DILocation(line: 2111, column: 9, scope: !2794)
!2814 = !DILocation(line: 2111, column: 8, scope: !2794)
!2815 = !DILocation(line: 2112, column: 11, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2112, column: 11)
!2817 = !DILocation(line: 2112, column: 13, scope: !2816)
!2818 = !DILocation(line: 2112, column: 11, scope: !2794)
!2819 = !DILocation(line: 2114, column: 17, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 2113, column: 9)
!2821 = !DILocation(line: 2115, column: 11, scope: !2820)
!2822 = !DILocation(line: 2117, column: 45, scope: !2794)
!2823 = !DILocation(line: 2117, column: 15, scope: !2794)
!2824 = !DILocation(line: 2117, column: 14, scope: !2794)
!2825 = !DILocation(line: 2118, column: 13, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2118, column: 7)
!2827 = !DILocation(line: 2118, column: 12, scope: !2826)
!2828 = !DILocation(line: 2118, column: 17, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 2118, column: 7)
!2830 = !DILocation(line: 2118, column: 19, scope: !2829)
!2831 = !DILocation(line: 2118, column: 7, scope: !2826)
!2832 = !DILocation(line: 2119, column: 40, scope: !2829)
!2833 = !DILocation(line: 2119, column: 46, scope: !2829)
!2834 = !DILocation(line: 2119, column: 48, scope: !2829)
!2835 = !DILocation(line: 2119, column: 47, scope: !2829)
!2836 = !DILocation(line: 2119, column: 22, scope: !2829)
!2837 = !DILocation(line: 2119, column: 19, scope: !2829)
!2838 = !DILocation(line: 2119, column: 9, scope: !2829)
!2839 = !DILocation(line: 2119, column: 21, scope: !2829)
!2840 = !DILocation(line: 2118, column: 25, scope: !2829)
!2841 = !DILocation(line: 2118, column: 7, scope: !2829)
!2842 = distinct !{!2842, !2831, !2843}
!2843 = !DILocation(line: 2119, column: 49, scope: !2826)
!2844 = !DILocation(line: 2120, column: 9, scope: !2794)
!2845 = !DILocation(line: 2120, column: 8, scope: !2794)
!2846 = !DILocation(line: 2121, column: 17, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2121, column: 11)
!2848 = !DILocation(line: 2121, column: 30, scope: !2847)
!2849 = !DILocation(line: 2121, column: 29, scope: !2847)
!2850 = !DILocation(line: 2121, column: 12, scope: !2847)
!2851 = !DILocation(line: 2121, column: 44, scope: !2847)
!2852 = !DILocation(line: 2121, column: 61, scope: !2847)
!2853 = !DILocation(line: 2122, column: 17, scope: !2847)
!2854 = !DILocation(line: 2122, column: 30, scope: !2847)
!2855 = !DILocation(line: 2122, column: 29, scope: !2847)
!2856 = !DILocation(line: 2122, column: 12, scope: !2847)
!2857 = !DILocation(line: 2122, column: 44, scope: !2847)
!2858 = !DILocation(line: 2121, column: 11, scope: !2794)
!2859 = !DILocation(line: 2127, column: 12, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2123, column: 9)
!2861 = !DILocation(line: 2127, column: 14, scope: !2860)
!2862 = !DILocation(line: 2128, column: 12, scope: !2860)
!2863 = !DILocation(line: 2129, column: 12, scope: !2860)
!2864 = !DILocation(line: 2129, column: 14, scope: !2860)
!2865 = !DILocation(line: 2130, column: 15, scope: !2860)
!2866 = !DILocation(line: 2130, column: 30, scope: !2860)
!2867 = !DILocation(line: 2130, column: 37, scope: !2860)
!2868 = !DILocation(line: 2130, column: 12, scope: !2860)
!2869 = !DILocation(line: 2131, column: 12, scope: !2860)
!2870 = !DILocation(line: 2131, column: 14, scope: !2860)
!2871 = !DILocation(line: 2132, column: 12, scope: !2860)
!2872 = !DILocation(line: 2133, column: 12, scope: !2860)
!2873 = !DILocation(line: 2133, column: 14, scope: !2860)
!2874 = !DILocation(line: 2134, column: 9, scope: !2860)
!2875 = !DILocation(line: 2140, column: 20, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2140, column: 15)
!2877 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2136, column: 9)
!2878 = !DILocation(line: 2140, column: 33, scope: !2876)
!2879 = !DILocation(line: 2140, column: 32, scope: !2876)
!2880 = !DILocation(line: 2140, column: 15, scope: !2876)
!2881 = !DILocation(line: 2140, column: 47, scope: !2876)
!2882 = !DILocation(line: 2140, column: 15, scope: !2877)
!2883 = !DILocation(line: 2141, column: 14, scope: !2876)
!2884 = !DILocation(line: 2141, column: 16, scope: !2876)
!2885 = !DILocation(line: 2141, column: 13, scope: !2876)
!2886 = !DILocation(line: 2143, column: 14, scope: !2876)
!2887 = !DILocation(line: 2143, column: 16, scope: !2876)
!2888 = !DILocation(line: 2144, column: 12, scope: !2877)
!2889 = !DILocation(line: 2145, column: 20, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2145, column: 15)
!2891 = !DILocation(line: 2145, column: 33, scope: !2890)
!2892 = !DILocation(line: 2145, column: 32, scope: !2890)
!2893 = !DILocation(line: 2145, column: 15, scope: !2890)
!2894 = !DILocation(line: 2145, column: 47, scope: !2890)
!2895 = !DILocation(line: 2145, column: 15, scope: !2877)
!2896 = !DILocation(line: 2146, column: 14, scope: !2890)
!2897 = !DILocation(line: 2146, column: 16, scope: !2890)
!2898 = !DILocation(line: 2146, column: 13, scope: !2890)
!2899 = !DILocation(line: 2148, column: 14, scope: !2890)
!2900 = !DILocation(line: 2148, column: 16, scope: !2890)
!2901 = !DILocation(line: 2149, column: 15, scope: !2877)
!2902 = !DILocation(line: 2149, column: 30, scope: !2877)
!2903 = !DILocation(line: 2149, column: 37, scope: !2877)
!2904 = !DILocation(line: 2149, column: 12, scope: !2877)
!2905 = !DILocation(line: 2150, column: 20, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2150, column: 15)
!2907 = !DILocation(line: 2150, column: 33, scope: !2906)
!2908 = !DILocation(line: 2150, column: 32, scope: !2906)
!2909 = !DILocation(line: 2150, column: 15, scope: !2906)
!2910 = !DILocation(line: 2150, column: 47, scope: !2906)
!2911 = !DILocation(line: 2150, column: 15, scope: !2877)
!2912 = !DILocation(line: 2151, column: 14, scope: !2906)
!2913 = !DILocation(line: 2151, column: 16, scope: !2906)
!2914 = !DILocation(line: 2151, column: 13, scope: !2906)
!2915 = !DILocation(line: 2153, column: 14, scope: !2906)
!2916 = !DILocation(line: 2153, column: 16, scope: !2906)
!2917 = !DILocation(line: 2154, column: 12, scope: !2877)
!2918 = !DILocation(line: 2155, column: 20, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2155, column: 15)
!2920 = !DILocation(line: 2155, column: 33, scope: !2919)
!2921 = !DILocation(line: 2155, column: 32, scope: !2919)
!2922 = !DILocation(line: 2155, column: 15, scope: !2919)
!2923 = !DILocation(line: 2155, column: 47, scope: !2919)
!2924 = !DILocation(line: 2155, column: 15, scope: !2877)
!2925 = !DILocation(line: 2156, column: 14, scope: !2919)
!2926 = !DILocation(line: 2156, column: 16, scope: !2919)
!2927 = !DILocation(line: 2156, column: 13, scope: !2919)
!2928 = !DILocation(line: 2158, column: 14, scope: !2919)
!2929 = !DILocation(line: 2158, column: 16, scope: !2919)
!2930 = !DILocation(line: 2160, column: 11, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2160, column: 11)
!2932 = !DILocation(line: 2160, column: 19, scope: !2931)
!2933 = !DILocation(line: 2160, column: 11, scope: !2794)
!2934 = !DILocalVariable(name: "r", scope: !2935, file: !3, line: 2163, type: !811)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 2161, column: 9)
!2936 = !DILocation(line: 2163, column: 14, scope: !2935)
!2937 = !DILocation(line: 2168, column: 13, scope: !2935)
!2938 = !DILocation(line: 2168, column: 12, scope: !2935)
!2939 = !DILocation(line: 2169, column: 21, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 2169, column: 15)
!2941 = !DILocation(line: 2169, column: 34, scope: !2940)
!2942 = !DILocation(line: 2169, column: 33, scope: !2940)
!2943 = !DILocation(line: 2169, column: 16, scope: !2940)
!2944 = !DILocation(line: 2169, column: 48, scope: !2940)
!2945 = !DILocation(line: 2169, column: 65, scope: !2940)
!2946 = !DILocation(line: 2170, column: 21, scope: !2940)
!2947 = !DILocation(line: 2170, column: 34, scope: !2940)
!2948 = !DILocation(line: 2170, column: 33, scope: !2940)
!2949 = !DILocation(line: 2170, column: 16, scope: !2940)
!2950 = !DILocation(line: 2170, column: 48, scope: !2940)
!2951 = !DILocation(line: 2169, column: 15, scope: !2935)
!2952 = !DILocation(line: 2175, column: 18, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 2171, column: 13)
!2954 = !DILocation(line: 2175, column: 16, scope: !2953)
!2955 = !DILocation(line: 2175, column: 17, scope: !2953)
!2956 = !DILocation(line: 2176, column: 16, scope: !2953)
!2957 = !DILocation(line: 2177, column: 18, scope: !2953)
!2958 = !DILocation(line: 2177, column: 16, scope: !2953)
!2959 = !DILocation(line: 2177, column: 17, scope: !2953)
!2960 = !DILocation(line: 2178, column: 19, scope: !2953)
!2961 = !DILocation(line: 2178, column: 34, scope: !2953)
!2962 = !DILocation(line: 2178, column: 41, scope: !2953)
!2963 = !DILocation(line: 2178, column: 16, scope: !2953)
!2964 = !DILocation(line: 2179, column: 18, scope: !2953)
!2965 = !DILocation(line: 2179, column: 16, scope: !2953)
!2966 = !DILocation(line: 2179, column: 17, scope: !2953)
!2967 = !DILocation(line: 2180, column: 16, scope: !2953)
!2968 = !DILocation(line: 2181, column: 18, scope: !2953)
!2969 = !DILocation(line: 2181, column: 16, scope: !2953)
!2970 = !DILocation(line: 2181, column: 17, scope: !2953)
!2971 = !DILocation(line: 2182, column: 13, scope: !2953)
!2972 = !DILocation(line: 2188, column: 24, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2188, column: 19)
!2974 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 2184, column: 13)
!2975 = !DILocation(line: 2188, column: 37, scope: !2973)
!2976 = !DILocation(line: 2188, column: 36, scope: !2973)
!2977 = !DILocation(line: 2188, column: 19, scope: !2973)
!2978 = !DILocation(line: 2188, column: 51, scope: !2973)
!2979 = !DILocation(line: 2188, column: 19, scope: !2974)
!2980 = !DILocation(line: 2189, column: 20, scope: !2973)
!2981 = !DILocation(line: 2189, column: 18, scope: !2973)
!2982 = !DILocation(line: 2189, column: 19, scope: !2973)
!2983 = !DILocation(line: 2189, column: 17, scope: !2973)
!2984 = !DILocation(line: 2191, column: 20, scope: !2973)
!2985 = !DILocation(line: 2191, column: 18, scope: !2973)
!2986 = !DILocation(line: 2191, column: 19, scope: !2973)
!2987 = !DILocation(line: 2192, column: 16, scope: !2974)
!2988 = !DILocation(line: 2193, column: 24, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2193, column: 19)
!2990 = !DILocation(line: 2193, column: 37, scope: !2989)
!2991 = !DILocation(line: 2193, column: 36, scope: !2989)
!2992 = !DILocation(line: 2193, column: 19, scope: !2989)
!2993 = !DILocation(line: 2193, column: 51, scope: !2989)
!2994 = !DILocation(line: 2193, column: 19, scope: !2974)
!2995 = !DILocation(line: 2194, column: 20, scope: !2989)
!2996 = !DILocation(line: 2194, column: 18, scope: !2989)
!2997 = !DILocation(line: 2194, column: 19, scope: !2989)
!2998 = !DILocation(line: 2194, column: 17, scope: !2989)
!2999 = !DILocation(line: 2196, column: 20, scope: !2989)
!3000 = !DILocation(line: 2196, column: 18, scope: !2989)
!3001 = !DILocation(line: 2196, column: 19, scope: !2989)
!3002 = !DILocation(line: 2197, column: 19, scope: !2974)
!3003 = !DILocation(line: 2197, column: 34, scope: !2974)
!3004 = !DILocation(line: 2197, column: 41, scope: !2974)
!3005 = !DILocation(line: 2197, column: 16, scope: !2974)
!3006 = !DILocation(line: 2198, column: 24, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2198, column: 19)
!3008 = !DILocation(line: 2198, column: 37, scope: !3007)
!3009 = !DILocation(line: 2198, column: 36, scope: !3007)
!3010 = !DILocation(line: 2198, column: 19, scope: !3007)
!3011 = !DILocation(line: 2198, column: 51, scope: !3007)
!3012 = !DILocation(line: 2198, column: 19, scope: !2974)
!3013 = !DILocation(line: 2199, column: 20, scope: !3007)
!3014 = !DILocation(line: 2199, column: 18, scope: !3007)
!3015 = !DILocation(line: 2199, column: 19, scope: !3007)
!3016 = !DILocation(line: 2199, column: 17, scope: !3007)
!3017 = !DILocation(line: 2201, column: 20, scope: !3007)
!3018 = !DILocation(line: 2201, column: 18, scope: !3007)
!3019 = !DILocation(line: 2201, column: 19, scope: !3007)
!3020 = !DILocation(line: 2202, column: 16, scope: !2974)
!3021 = !DILocation(line: 2203, column: 24, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2203, column: 19)
!3023 = !DILocation(line: 2203, column: 37, scope: !3022)
!3024 = !DILocation(line: 2203, column: 36, scope: !3022)
!3025 = !DILocation(line: 2203, column: 19, scope: !3022)
!3026 = !DILocation(line: 2203, column: 51, scope: !3022)
!3027 = !DILocation(line: 2203, column: 19, scope: !2974)
!3028 = !DILocation(line: 2204, column: 20, scope: !3022)
!3029 = !DILocation(line: 2204, column: 18, scope: !3022)
!3030 = !DILocation(line: 2204, column: 19, scope: !3022)
!3031 = !DILocation(line: 2204, column: 17, scope: !3022)
!3032 = !DILocation(line: 2206, column: 20, scope: !3022)
!3033 = !DILocation(line: 2206, column: 18, scope: !3022)
!3034 = !DILocation(line: 2206, column: 19, scope: !3022)
!3035 = !DILocation(line: 2208, column: 26, scope: !2935)
!3036 = !DILocation(line: 2209, column: 9, scope: !2935)
!3037 = !DILocation(line: 2210, column: 8, scope: !2794)
!3038 = !DILocation(line: 2211, column: 5, scope: !2794)
!3039 = !DILocation(line: 2091, column: 46, scope: !2788)
!3040 = !DILocation(line: 2091, column: 5, scope: !2788)
!3041 = distinct !{!3041, !2792, !3042}
!3042 = !DILocation(line: 2211, column: 5, scope: !2785)
!3043 = !DILocation(line: 2212, column: 38, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2212, column: 9)
!3045 = !DILocation(line: 2212, column: 51, scope: !3044)
!3046 = !DILocation(line: 2212, column: 9, scope: !3044)
!3047 = !DILocation(line: 2212, column: 62, scope: !3044)
!3048 = !DILocation(line: 2212, column: 9, scope: !2755)
!3049 = !DILocation(line: 2213, column: 13, scope: !3044)
!3050 = !DILocation(line: 2213, column: 7, scope: !3044)
!3051 = !DILocation(line: 2214, column: 9, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2214, column: 9)
!3053 = !DILocation(line: 2214, column: 16, scope: !3052)
!3054 = !DILocation(line: 2214, column: 33, scope: !3052)
!3055 = !DILocation(line: 2214, column: 9, scope: !2755)
!3056 = !DILocalVariable(name: "proceed", scope: !3057, file: !3, line: 2217, type: !152)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 2215, column: 7)
!3058 = !DILocation(line: 2217, column: 11, scope: !3057)
!3059 = !DILocation(line: 2222, column: 34, scope: !3057)
!3060 = !DILocation(line: 2222, column: 64, scope: !3057)
!3061 = !DILocation(line: 2222, column: 67, scope: !3057)
!3062 = !DILocation(line: 2222, column: 74, scope: !3057)
!3063 = !DILocation(line: 2222, column: 17, scope: !3057)
!3064 = !DILocation(line: 2222, column: 16, scope: !3057)
!3065 = !DILocation(line: 2223, column: 13, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 2223, column: 13)
!3067 = !DILocation(line: 2223, column: 21, scope: !3066)
!3068 = !DILocation(line: 2223, column: 13, scope: !3057)
!3069 = !DILocation(line: 2224, column: 17, scope: !3066)
!3070 = !DILocation(line: 2224, column: 11, scope: !3066)
!3071 = !DILocation(line: 2225, column: 7, scope: !3057)
!3072 = !DILocation(line: 2226, column: 3, scope: !2755)
!3073 = !DILocation(line: 2070, column: 41, scope: !2749)
!3074 = !DILocation(line: 2070, column: 3, scope: !2749)
!3075 = distinct !{!3075, !2753, !3076}
!3076 = !DILocation(line: 2226, column: 3, scope: !2746)
!3077 = !DILocation(line: 2227, column: 33, scope: !2692)
!3078 = !DILocation(line: 2227, column: 16, scope: !2692)
!3079 = !DILocation(line: 2227, column: 15, scope: !2692)
!3080 = !DILocation(line: 2228, column: 31, scope: !2692)
!3081 = !DILocation(line: 2228, column: 14, scope: !2692)
!3082 = !DILocation(line: 2228, column: 13, scope: !2692)
!3083 = !DILocation(line: 2229, column: 7, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 2229, column: 7)
!3085 = !DILocation(line: 2229, column: 14, scope: !3084)
!3086 = !DILocation(line: 2229, column: 7, scope: !2692)
!3087 = !DILocation(line: 2230, column: 32, scope: !3084)
!3088 = !DILocation(line: 2230, column: 19, scope: !3084)
!3089 = !DILocation(line: 2230, column: 18, scope: !3084)
!3090 = !DILocation(line: 2230, column: 5, scope: !3084)
!3091 = !DILocation(line: 2231, column: 10, scope: !2692)
!3092 = !DILocation(line: 2231, column: 3, scope: !2692)
!3093 = !DILocation(line: 2232, column: 1, scope: !2692)
!3094 = distinct !DISubprogram(name: "MinifyImage", scope: !3, file: !3, line: 2259, type: !2693, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!3095 = !DILocalVariable(name: "image", arg: 1, scope: !3094, file: !3, line: 2259, type: !58)
!3096 = !DILocation(line: 2259, column: 46, scope: !3094)
!3097 = !DILocalVariable(name: "exception", arg: 2, scope: !3094, file: !3, line: 2259, type: !643)
!3098 = !DILocation(line: 2259, column: 67, scope: !3094)
!3099 = !DILocalVariable(name: "minify_image", scope: !3094, file: !3, line: 2262, type: !803)
!3100 = !DILocation(line: 2262, column: 6, scope: !3094)
!3101 = !DILocation(line: 2266, column: 7, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 2266, column: 7)
!3103 = !DILocation(line: 2266, column: 14, scope: !3102)
!3104 = !DILocation(line: 2266, column: 20, scope: !3102)
!3105 = !DILocation(line: 2266, column: 7, scope: !3094)
!3106 = !DILocation(line: 2267, column: 61, scope: !3102)
!3107 = !DILocation(line: 2267, column: 68, scope: !3102)
!3108 = !DILocation(line: 2267, column: 12, scope: !3102)
!3109 = !DILocation(line: 2267, column: 5, scope: !3102)
!3110 = !DILocation(line: 2270, column: 28, scope: !3094)
!3111 = !DILocation(line: 2270, column: 34, scope: !3094)
!3112 = !DILocation(line: 2270, column: 41, scope: !3094)
!3113 = !DILocation(line: 2270, column: 48, scope: !3094)
!3114 = !DILocation(line: 2270, column: 51, scope: !3094)
!3115 = !DILocation(line: 2270, column: 58, scope: !3094)
!3116 = !DILocation(line: 2270, column: 62, scope: !3094)
!3117 = !DILocation(line: 2271, column: 9, scope: !3094)
!3118 = !DILocation(line: 2270, column: 16, scope: !3094)
!3119 = !DILocation(line: 2270, column: 15, scope: !3094)
!3120 = !DILocation(line: 2272, column: 10, scope: !3094)
!3121 = !DILocation(line: 2272, column: 3, scope: !3094)
!3122 = distinct !DISubprogram(name: "ResizeImage", scope: !3, file: !3, line: 2947, type: !3123, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{!803, !58, !2269, !2269, !641, !860, !643}
!3125 = !DILocalVariable(name: "image", arg: 1, scope: !3122, file: !3, line: 2947, type: !58)
!3126 = !DILocation(line: 2947, column: 46, scope: !3122)
!3127 = !DILocalVariable(name: "columns", arg: 2, scope: !3122, file: !3, line: 2947, type: !2269)
!3128 = !DILocation(line: 2947, column: 65, scope: !3122)
!3129 = !DILocalVariable(name: "rows", arg: 3, scope: !3122, file: !3, line: 2948, type: !2269)
!3130 = !DILocation(line: 2948, column: 16, scope: !3122)
!3131 = !DILocalVariable(name: "filter", arg: 4, scope: !3122, file: !3, line: 2948, type: !641)
!3132 = !DILocation(line: 2948, column: 39, scope: !3122)
!3133 = !DILocalVariable(name: "blur", arg: 5, scope: !3122, file: !3, line: 2948, type: !860)
!3134 = !DILocation(line: 2948, column: 59, scope: !3122)
!3135 = !DILocalVariable(name: "exception", arg: 6, scope: !3122, file: !3, line: 2949, type: !643)
!3136 = !DILocation(line: 2949, column: 18, scope: !3122)
!3137 = !DILocalVariable(name: "filter_type", scope: !3122, file: !3, line: 2952, type: !240)
!3138 = !DILocation(line: 2952, column: 5, scope: !3122)
!3139 = !DILocalVariable(name: "filter_image", scope: !3122, file: !3, line: 2955, type: !803)
!3140 = !DILocation(line: 2955, column: 6, scope: !3122)
!3141 = !DILocalVariable(name: "resize_image", scope: !3122, file: !3, line: 2956, type: !803)
!3142 = !DILocation(line: 2956, column: 6, scope: !3122)
!3143 = !DILocalVariable(name: "offset", scope: !3122, file: !3, line: 2959, type: !441)
!3144 = !DILocation(line: 2959, column: 5, scope: !3122)
!3145 = !DILocalVariable(name: "x_factor", scope: !3122, file: !3, line: 2962, type: !15)
!3146 = !DILocation(line: 2962, column: 5, scope: !3122)
!3147 = !DILocalVariable(name: "y_factor", scope: !3122, file: !3, line: 2963, type: !15)
!3148 = !DILocation(line: 2963, column: 5, scope: !3122)
!3149 = !DILocalVariable(name: "span", scope: !3122, file: !3, line: 2966, type: !444)
!3150 = !DILocation(line: 2966, column: 5, scope: !3122)
!3151 = !DILocalVariable(name: "status", scope: !3122, file: !3, line: 2969, type: !3152)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !16, line: 147, baseType: !34)
!3153 = !DILocation(line: 2969, column: 5, scope: !3122)
!3154 = !DILocalVariable(name: "resize_filter", scope: !3122, file: !3, line: 2972, type: !6)
!3155 = !DILocation(line: 2972, column: 6, scope: !3122)
!3156 = !DILocation(line: 2979, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2979, column: 7)
!3158 = !DILocation(line: 2979, column: 14, scope: !3157)
!3159 = !DILocation(line: 2979, column: 20, scope: !3157)
!3160 = !DILocation(line: 2979, column: 7, scope: !3122)
!3161 = !DILocation(line: 2980, column: 61, scope: !3157)
!3162 = !DILocation(line: 2980, column: 68, scope: !3157)
!3163 = !DILocation(line: 2980, column: 12, scope: !3157)
!3164 = !DILocation(line: 2980, column: 5, scope: !3157)
!3165 = !DILocation(line: 2983, column: 8, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2983, column: 7)
!3167 = !DILocation(line: 2983, column: 16, scope: !3166)
!3168 = !DILocation(line: 2983, column: 22, scope: !3166)
!3169 = !DILocation(line: 2983, column: 26, scope: !3166)
!3170 = !DILocation(line: 2983, column: 31, scope: !3166)
!3171 = !DILocation(line: 2983, column: 7, scope: !3122)
!3172 = !DILocation(line: 2984, column: 5, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 2984, column: 5)
!3174 = !DILocation(line: 2985, column: 8, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2985, column: 7)
!3176 = !DILocation(line: 2985, column: 19, scope: !3175)
!3177 = !DILocation(line: 2985, column: 26, scope: !3175)
!3178 = !DILocation(line: 2985, column: 16, scope: !3175)
!3179 = !DILocation(line: 2985, column: 35, scope: !3175)
!3180 = !DILocation(line: 2985, column: 39, scope: !3175)
!3181 = !DILocation(line: 2985, column: 47, scope: !3175)
!3182 = !DILocation(line: 2985, column: 54, scope: !3175)
!3183 = !DILocation(line: 2985, column: 44, scope: !3175)
!3184 = !DILocation(line: 2985, column: 60, scope: !3175)
!3185 = !DILocation(line: 2986, column: 8, scope: !3175)
!3186 = !DILocation(line: 2986, column: 15, scope: !3175)
!3187 = !DILocation(line: 2986, column: 35, scope: !3175)
!3188 = !DILocation(line: 2986, column: 39, scope: !3175)
!3189 = !DILocation(line: 2986, column: 44, scope: !3175)
!3190 = !DILocation(line: 2985, column: 7, scope: !3122)
!3191 = !DILocation(line: 2987, column: 23, scope: !3175)
!3192 = !DILocation(line: 2987, column: 44, scope: !3175)
!3193 = !DILocation(line: 2987, column: 12, scope: !3175)
!3194 = !DILocation(line: 2987, column: 5, scope: !3175)
!3195 = !DILocation(line: 2992, column: 29, scope: !3122)
!3196 = !DILocation(line: 2992, column: 12, scope: !3122)
!3197 = !DILocation(line: 2992, column: 54, scope: !3122)
!3198 = !DILocation(line: 2992, column: 61, scope: !3122)
!3199 = !DILocation(line: 2992, column: 37, scope: !3122)
!3200 = !DILocation(line: 2992, column: 36, scope: !3122)
!3201 = !DILocation(line: 2992, column: 11, scope: !3122)
!3202 = !DILocation(line: 2993, column: 29, scope: !3122)
!3203 = !DILocation(line: 2993, column: 12, scope: !3122)
!3204 = !DILocation(line: 2993, column: 51, scope: !3122)
!3205 = !DILocation(line: 2993, column: 58, scope: !3122)
!3206 = !DILocation(line: 2993, column: 34, scope: !3122)
!3207 = !DILocation(line: 2993, column: 33, scope: !3122)
!3208 = !DILocation(line: 2993, column: 11, scope: !3122)
!3209 = !DILocation(line: 2995, column: 14, scope: !3122)
!3210 = !DILocation(line: 2996, column: 7, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2996, column: 7)
!3212 = !DILocation(line: 2996, column: 14, scope: !3211)
!3213 = !DILocation(line: 2996, column: 7, scope: !3122)
!3214 = !DILocation(line: 2997, column: 17, scope: !3211)
!3215 = !DILocation(line: 2997, column: 16, scope: !3211)
!3216 = !DILocation(line: 2997, column: 5, scope: !3211)
!3217 = !DILocation(line: 2999, column: 10, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 2999, column: 9)
!3219 = !DILocation(line: 2999, column: 19, scope: !3218)
!3220 = !DILocation(line: 2999, column: 27, scope: !3218)
!3221 = !DILocation(line: 2999, column: 31, scope: !3218)
!3222 = !DILocation(line: 2999, column: 40, scope: !3218)
!3223 = !DILocation(line: 2999, column: 9, scope: !3211)
!3224 = !DILocation(line: 3000, column: 18, scope: !3218)
!3225 = !DILocation(line: 3000, column: 7, scope: !3218)
!3226 = !DILocation(line: 3002, column: 12, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 3002, column: 11)
!3228 = !DILocation(line: 3002, column: 19, scope: !3227)
!3229 = !DILocation(line: 3002, column: 33, scope: !3227)
!3230 = !DILocation(line: 3002, column: 49, scope: !3227)
!3231 = !DILocation(line: 3003, column: 12, scope: !3227)
!3232 = !DILocation(line: 3003, column: 19, scope: !3227)
!3233 = !DILocation(line: 3003, column: 25, scope: !3227)
!3234 = !DILocation(line: 3003, column: 41, scope: !3227)
!3235 = !DILocation(line: 3003, column: 46, scope: !3227)
!3236 = !DILocation(line: 3003, column: 55, scope: !3227)
!3237 = !DILocation(line: 3003, column: 54, scope: !3227)
!3238 = !DILocation(line: 3003, column: 45, scope: !3227)
!3239 = !DILocation(line: 3003, column: 65, scope: !3227)
!3240 = !DILocation(line: 3002, column: 11, scope: !3218)
!3241 = !DILocation(line: 3004, column: 20, scope: !3227)
!3242 = !DILocation(line: 3004, column: 9, scope: !3227)
!3243 = !DILocation(line: 3005, column: 37, scope: !3122)
!3244 = !DILocation(line: 3005, column: 43, scope: !3122)
!3245 = !DILocation(line: 3005, column: 55, scope: !3122)
!3246 = !DILocation(line: 3005, column: 72, scope: !3122)
!3247 = !DILocation(line: 3005, column: 17, scope: !3122)
!3248 = !DILocation(line: 3005, column: 16, scope: !3122)
!3249 = !DILocation(line: 3007, column: 40, scope: !3122)
!3250 = !DILocation(line: 3007, column: 46, scope: !3122)
!3251 = !DILocation(line: 3007, column: 54, scope: !3122)
!3252 = !DILocation(line: 3007, column: 59, scope: !3122)
!3253 = !DILocation(line: 3007, column: 73, scope: !3122)
!3254 = !DILocation(line: 3007, column: 18, scope: !3122)
!3255 = !DILocation(line: 3007, column: 16, scope: !3122)
!3256 = !DILocation(line: 3008, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3008, column: 7)
!3258 = !DILocation(line: 3008, column: 20, scope: !3257)
!3259 = !DILocation(line: 3008, column: 7, scope: !3122)
!3260 = !DILocation(line: 3010, column: 39, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 3009, column: 3)
!3262 = !DILocation(line: 3010, column: 19, scope: !3261)
!3263 = !DILocation(line: 3010, column: 18, scope: !3261)
!3264 = !DILocation(line: 3011, column: 12, scope: !3261)
!3265 = !DILocation(line: 3011, column: 5, scope: !3261)
!3266 = !DILocation(line: 3014, column: 27, scope: !3122)
!3267 = !DILocation(line: 3014, column: 33, scope: !3122)
!3268 = !DILocation(line: 3014, column: 41, scope: !3122)
!3269 = !DILocation(line: 3014, column: 57, scope: !3122)
!3270 = !DILocation(line: 3014, column: 16, scope: !3122)
!3271 = !DILocation(line: 3014, column: 15, scope: !3122)
!3272 = !DILocation(line: 3015, column: 7, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3015, column: 7)
!3274 = !DILocation(line: 3015, column: 20, scope: !3273)
!3275 = !DILocation(line: 3015, column: 7, scope: !3122)
!3276 = !DILocation(line: 3017, column: 39, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 3016, column: 3)
!3278 = !DILocation(line: 3017, column: 19, scope: !3277)
!3279 = !DILocation(line: 3017, column: 18, scope: !3277)
!3280 = !DILocation(line: 3018, column: 12, scope: !3277)
!3281 = !DILocation(line: 3018, column: 5, scope: !3277)
!3282 = !DILocation(line: 3021, column: 7, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3021, column: 7)
!3284 = !DILocation(line: 3021, column: 18, scope: !3283)
!3285 = !DILocation(line: 3021, column: 16, scope: !3283)
!3286 = !DILocation(line: 3021, column: 7, scope: !3122)
!3287 = !DILocation(line: 3022, column: 29, scope: !3283)
!3288 = !DILocation(line: 3022, column: 35, scope: !3283)
!3289 = !DILocation(line: 3022, column: 43, scope: !3283)
!3290 = !DILocation(line: 3022, column: 50, scope: !3283)
!3291 = !DILocation(line: 3022, column: 66, scope: !3283)
!3292 = !DILocation(line: 3022, column: 18, scope: !3283)
!3293 = !DILocation(line: 3022, column: 17, scope: !3283)
!3294 = !DILocation(line: 3022, column: 5, scope: !3283)
!3295 = !DILocation(line: 3024, column: 29, scope: !3283)
!3296 = !DILocation(line: 3024, column: 35, scope: !3283)
!3297 = !DILocation(line: 3024, column: 42, scope: !3283)
!3298 = !DILocation(line: 3024, column: 50, scope: !3283)
!3299 = !DILocation(line: 3024, column: 66, scope: !3283)
!3300 = !DILocation(line: 3024, column: 18, scope: !3283)
!3301 = !DILocation(line: 3024, column: 17, scope: !3283)
!3302 = !DILocation(line: 3025, column: 7, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3025, column: 7)
!3304 = !DILocation(line: 3025, column: 20, scope: !3303)
!3305 = !DILocation(line: 3025, column: 7, scope: !3122)
!3306 = !DILocation(line: 3027, column: 39, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 3026, column: 3)
!3308 = !DILocation(line: 3027, column: 19, scope: !3307)
!3309 = !DILocation(line: 3027, column: 18, scope: !3307)
!3310 = !DILocation(line: 3028, column: 25, scope: !3307)
!3311 = !DILocation(line: 3028, column: 12, scope: !3307)
!3312 = !DILocation(line: 3028, column: 5, scope: !3307)
!3313 = !DILocation(line: 3034, column: 9, scope: !3122)
!3314 = !DILocation(line: 3035, column: 7, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3035, column: 7)
!3316 = !DILocation(line: 3035, column: 18, scope: !3315)
!3317 = !DILocation(line: 3035, column: 16, scope: !3315)
!3318 = !DILocation(line: 3035, column: 7, scope: !3122)
!3319 = !DILocation(line: 3037, column: 30, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 3036, column: 5)
!3321 = !DILocation(line: 3037, column: 44, scope: !3320)
!3322 = !DILocation(line: 3037, column: 52, scope: !3320)
!3323 = !DILocation(line: 3037, column: 51, scope: !3320)
!3324 = !DILocation(line: 3037, column: 11, scope: !3320)
!3325 = !DILocation(line: 3038, column: 31, scope: !3320)
!3326 = !DILocation(line: 3038, column: 45, scope: !3320)
!3327 = !DILocation(line: 3038, column: 51, scope: !3320)
!3328 = !DILocation(line: 3038, column: 64, scope: !3320)
!3329 = !DILocation(line: 3038, column: 73, scope: !3320)
!3330 = !DILocation(line: 3039, column: 17, scope: !3320)
!3331 = !DILocation(line: 3038, column: 14, scope: !3320)
!3332 = !DILocation(line: 3038, column: 13, scope: !3320)
!3333 = !DILocation(line: 3040, column: 30, scope: !3320)
!3334 = !DILocation(line: 3040, column: 44, scope: !3320)
!3335 = !DILocation(line: 3040, column: 57, scope: !3320)
!3336 = !DILocation(line: 3040, column: 70, scope: !3320)
!3337 = !DILocation(line: 3041, column: 9, scope: !3320)
!3338 = !DILocation(line: 3041, column: 22, scope: !3320)
!3339 = !DILocation(line: 3040, column: 15, scope: !3320)
!3340 = !DILocation(line: 3040, column: 13, scope: !3320)
!3341 = !DILocation(line: 3042, column: 5, scope: !3320)
!3342 = !DILocation(line: 3045, column: 30, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 3044, column: 5)
!3344 = !DILocation(line: 3045, column: 44, scope: !3343)
!3345 = !DILocation(line: 3045, column: 49, scope: !3343)
!3346 = !DILocation(line: 3045, column: 48, scope: !3343)
!3347 = !DILocation(line: 3045, column: 11, scope: !3343)
!3348 = !DILocation(line: 3046, column: 29, scope: !3343)
!3349 = !DILocation(line: 3046, column: 43, scope: !3343)
!3350 = !DILocation(line: 3046, column: 49, scope: !3343)
!3351 = !DILocation(line: 3046, column: 62, scope: !3343)
!3352 = !DILocation(line: 3046, column: 71, scope: !3343)
!3353 = !DILocation(line: 3047, column: 17, scope: !3343)
!3354 = !DILocation(line: 3046, column: 14, scope: !3343)
!3355 = !DILocation(line: 3046, column: 13, scope: !3343)
!3356 = !DILocation(line: 3048, column: 32, scope: !3343)
!3357 = !DILocation(line: 3048, column: 46, scope: !3343)
!3358 = !DILocation(line: 3048, column: 59, scope: !3343)
!3359 = !DILocation(line: 3048, column: 72, scope: !3343)
!3360 = !DILocation(line: 3049, column: 9, scope: !3343)
!3361 = !DILocation(line: 3049, column: 22, scope: !3343)
!3362 = !DILocation(line: 3048, column: 15, scope: !3343)
!3363 = !DILocation(line: 3048, column: 13, scope: !3343)
!3364 = !DILocation(line: 3054, column: 29, scope: !3122)
!3365 = !DILocation(line: 3054, column: 16, scope: !3122)
!3366 = !DILocation(line: 3054, column: 15, scope: !3122)
!3367 = !DILocation(line: 3055, column: 37, scope: !3122)
!3368 = !DILocation(line: 3055, column: 17, scope: !3122)
!3369 = !DILocation(line: 3055, column: 16, scope: !3122)
!3370 = !DILocation(line: 3056, column: 7, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 3056, column: 7)
!3372 = !DILocation(line: 3056, column: 14, scope: !3371)
!3373 = !DILocation(line: 3056, column: 7, scope: !3122)
!3374 = !DILocation(line: 3058, column: 33, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 3057, column: 5)
!3376 = !DILocation(line: 3058, column: 20, scope: !3375)
!3377 = !DILocation(line: 3058, column: 19, scope: !3375)
!3378 = !DILocation(line: 3059, column: 7, scope: !3375)
!3379 = !DILocation(line: 3061, column: 22, scope: !3122)
!3380 = !DILocation(line: 3061, column: 29, scope: !3122)
!3381 = !DILocation(line: 3061, column: 3, scope: !3122)
!3382 = !DILocation(line: 3061, column: 17, scope: !3122)
!3383 = !DILocation(line: 3061, column: 21, scope: !3122)
!3384 = !DILocation(line: 3062, column: 10, scope: !3122)
!3385 = !DILocation(line: 3062, column: 3, scope: !3122)
!3386 = !DILocation(line: 3063, column: 1, scope: !3122)
!3387 = distinct !DISubprogram(name: "ResampleImage", scope: !3, file: !3, line: 2309, type: !3388, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!803, !58, !860, !860, !641, !860, !643}
!3390 = !DILocalVariable(name: "image", arg: 1, scope: !3387, file: !3, line: 2309, type: !58)
!3391 = !DILocation(line: 2309, column: 48, scope: !3387)
!3392 = !DILocalVariable(name: "x_resolution", arg: 2, scope: !3387, file: !3, line: 2309, type: !860)
!3393 = !DILocation(line: 2309, column: 67, scope: !3387)
!3394 = !DILocalVariable(name: "y_resolution", arg: 3, scope: !3387, file: !3, line: 2310, type: !860)
!3395 = !DILocation(line: 2310, column: 16, scope: !3387)
!3396 = !DILocalVariable(name: "filter", arg: 4, scope: !3387, file: !3, line: 2310, type: !641)
!3397 = !DILocation(line: 2310, column: 47, scope: !3387)
!3398 = !DILocalVariable(name: "blur", arg: 5, scope: !3387, file: !3, line: 2310, type: !860)
!3399 = !DILocation(line: 2310, column: 67, scope: !3387)
!3400 = !DILocalVariable(name: "exception", arg: 6, scope: !3387, file: !3, line: 2311, type: !643)
!3401 = !DILocation(line: 2311, column: 18, scope: !3387)
!3402 = !DILocalVariable(name: "resample_image", scope: !3387, file: !3, line: 2316, type: !803)
!3403 = !DILocation(line: 2316, column: 6, scope: !3387)
!3404 = !DILocalVariable(name: "height", scope: !3387, file: !3, line: 2319, type: !55)
!3405 = !DILocation(line: 2319, column: 5, scope: !3387)
!3406 = !DILocalVariable(name: "width", scope: !3387, file: !3, line: 2320, type: !55)
!3407 = !DILocation(line: 2320, column: 5, scope: !3387)
!3408 = !DILocation(line: 2327, column: 7, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 2327, column: 7)
!3410 = !DILocation(line: 2327, column: 14, scope: !3409)
!3411 = !DILocation(line: 2327, column: 20, scope: !3409)
!3412 = !DILocation(line: 2327, column: 7, scope: !3387)
!3413 = !DILocation(line: 2328, column: 61, scope: !3409)
!3414 = !DILocation(line: 2328, column: 68, scope: !3409)
!3415 = !DILocation(line: 2328, column: 12, scope: !3409)
!3416 = !DILocation(line: 2328, column: 5, scope: !3409)
!3417 = !DILocation(line: 2331, column: 19, scope: !3387)
!3418 = !DILocation(line: 2331, column: 32, scope: !3387)
!3419 = !DILocation(line: 2331, column: 39, scope: !3387)
!3420 = !DILocation(line: 2331, column: 31, scope: !3387)
!3421 = !DILocation(line: 2331, column: 48, scope: !3387)
!3422 = !DILocation(line: 2331, column: 55, scope: !3387)
!3423 = !DILocation(line: 2331, column: 68, scope: !3387)
!3424 = !DILocation(line: 2332, column: 12, scope: !3387)
!3425 = !DILocation(line: 2332, column: 19, scope: !3387)
!3426 = !DILocation(line: 2331, column: 46, scope: !3387)
!3427 = !DILocation(line: 2332, column: 32, scope: !3387)
!3428 = !DILocation(line: 2331, column: 9, scope: !3387)
!3429 = !DILocation(line: 2331, column: 8, scope: !3387)
!3430 = !DILocation(line: 2333, column: 20, scope: !3387)
!3431 = !DILocation(line: 2333, column: 33, scope: !3387)
!3432 = !DILocation(line: 2333, column: 40, scope: !3387)
!3433 = !DILocation(line: 2333, column: 32, scope: !3387)
!3434 = !DILocation(line: 2333, column: 46, scope: !3387)
!3435 = !DILocation(line: 2333, column: 53, scope: !3387)
!3436 = !DILocation(line: 2333, column: 66, scope: !3387)
!3437 = !DILocation(line: 2334, column: 12, scope: !3387)
!3438 = !DILocation(line: 2334, column: 19, scope: !3387)
!3439 = !DILocation(line: 2333, column: 44, scope: !3387)
!3440 = !DILocation(line: 2334, column: 32, scope: !3387)
!3441 = !DILocation(line: 2333, column: 10, scope: !3387)
!3442 = !DILocation(line: 2333, column: 9, scope: !3387)
!3443 = !DILocation(line: 2335, column: 30, scope: !3387)
!3444 = !DILocation(line: 2335, column: 36, scope: !3387)
!3445 = !DILocation(line: 2335, column: 42, scope: !3387)
!3446 = !DILocation(line: 2335, column: 49, scope: !3387)
!3447 = !DILocation(line: 2335, column: 56, scope: !3387)
!3448 = !DILocation(line: 2335, column: 61, scope: !3387)
!3449 = !DILocation(line: 2335, column: 18, scope: !3387)
!3450 = !DILocation(line: 2335, column: 17, scope: !3387)
!3451 = !DILocation(line: 2336, column: 7, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 2336, column: 7)
!3453 = !DILocation(line: 2336, column: 22, scope: !3452)
!3454 = !DILocation(line: 2336, column: 7, scope: !3387)
!3455 = !DILocation(line: 2338, column: 36, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 2337, column: 5)
!3457 = !DILocation(line: 2338, column: 7, scope: !3456)
!3458 = !DILocation(line: 2338, column: 23, scope: !3456)
!3459 = !DILocation(line: 2338, column: 35, scope: !3456)
!3460 = !DILocation(line: 2339, column: 36, scope: !3456)
!3461 = !DILocation(line: 2339, column: 7, scope: !3456)
!3462 = !DILocation(line: 2339, column: 23, scope: !3456)
!3463 = !DILocation(line: 2339, column: 35, scope: !3456)
!3464 = !DILocation(line: 2340, column: 5, scope: !3456)
!3465 = !DILocation(line: 2341, column: 10, scope: !3387)
!3466 = !DILocation(line: 2341, column: 3, scope: !3387)
!3467 = distinct !DISubprogram(name: "HorizontalFilter", scope: !3, file: !3, line: 2452, type: !3468, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!152, !19, !58, !803, !18, !443, !3470, !643}
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!3471 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !3467, file: !3, line: 2452, type: !19)
!3472 = !DILocation(line: 2452, column: 63, scope: !3467)
!3473 = !DILocalVariable(name: "image", arg: 2, scope: !3467, file: !3, line: 2453, type: !58)
!3474 = !DILocation(line: 2453, column: 16, scope: !3467)
!3475 = !DILocalVariable(name: "resize_image", arg: 3, scope: !3467, file: !3, line: 2453, type: !803)
!3476 = !DILocation(line: 2453, column: 29, scope: !3467)
!3477 = !DILocalVariable(name: "x_factor", arg: 4, scope: !3467, file: !3, line: 2453, type: !18)
!3478 = !DILocation(line: 2453, column: 63, scope: !3467)
!3479 = !DILocalVariable(name: "span", arg: 5, scope: !3467, file: !3, line: 2454, type: !443)
!3480 = !DILocation(line: 2454, column: 24, scope: !3467)
!3481 = !DILocalVariable(name: "offset", arg: 6, scope: !3467, file: !3, line: 2454, type: !3470)
!3482 = !DILocation(line: 2454, column: 47, scope: !3467)
!3483 = !DILocalVariable(name: "exception", arg: 7, scope: !3467, file: !3, line: 2454, type: !643)
!3484 = !DILocation(line: 2454, column: 69, scope: !3467)
!3485 = !DILocalVariable(name: "image_view", scope: !3467, file: !3, line: 2459, type: !2299)
!3486 = !DILocation(line: 2459, column: 6, scope: !3467)
!3487 = !DILocalVariable(name: "resize_view", scope: !3467, file: !3, line: 2460, type: !2299)
!3488 = !DILocation(line: 2460, column: 6, scope: !3467)
!3489 = !DILocalVariable(name: "storage_class", scope: !3467, file: !3, line: 2463, type: !65)
!3490 = !DILocation(line: 2463, column: 5, scope: !3467)
!3491 = !DILocalVariable(name: "contributions", scope: !3467, file: !3, line: 2466, type: !3492)
!3492 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !826)
!3493 = !DILocation(line: 2466, column: 16, scope: !3467)
!3494 = !DILocalVariable(name: "status", scope: !3467, file: !3, line: 2469, type: !152)
!3495 = !DILocation(line: 2469, column: 5, scope: !3467)
!3496 = !DILocalVariable(name: "zero", scope: !3467, file: !3, line: 2472, type: !813)
!3497 = !DILocation(line: 2472, column: 5, scope: !3467)
!3498 = !DILocalVariable(name: "scale", scope: !3467, file: !3, line: 2475, type: !15)
!3499 = !DILocation(line: 2475, column: 5, scope: !3467)
!3500 = !DILocalVariable(name: "support", scope: !3467, file: !3, line: 2476, type: !15)
!3501 = !DILocation(line: 2476, column: 5, scope: !3467)
!3502 = !DILocalVariable(name: "x", scope: !3467, file: !3, line: 2479, type: !218)
!3503 = !DILocation(line: 2479, column: 5, scope: !3467)
!3504 = !DILocation(line: 2484, column: 23, scope: !3467)
!3505 = !DILocation(line: 2484, column: 22, scope: !3467)
!3506 = !DILocation(line: 2484, column: 31, scope: !3467)
!3507 = !DILocation(line: 2484, column: 9, scope: !3467)
!3508 = !DILocation(line: 2484, column: 8, scope: !3467)
!3509 = !DILocation(line: 2485, column: 11, scope: !3467)
!3510 = !DILocation(line: 2485, column: 40, scope: !3467)
!3511 = !DILocation(line: 2485, column: 17, scope: !3467)
!3512 = !DILocation(line: 2485, column: 16, scope: !3467)
!3513 = !DILocation(line: 2485, column: 10, scope: !3467)
!3514 = !DILocation(line: 2486, column: 17, scope: !3467)
!3515 = !DILocation(line: 2486, column: 25, scope: !3467)
!3516 = !DILocation(line: 2486, column: 47, scope: !3467)
!3517 = !DILocation(line: 2486, column: 54, scope: !3467)
!3518 = !DILocation(line: 2486, column: 16, scope: !3467)
!3519 = !DILocation(line: 2487, column: 28, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 2487, column: 7)
!3521 = !DILocation(line: 2487, column: 41, scope: !3520)
!3522 = !DILocation(line: 2487, column: 7, scope: !3520)
!3523 = !DILocation(line: 2487, column: 56, scope: !3520)
!3524 = !DILocation(line: 2487, column: 7, scope: !3467)
!3525 = !DILocation(line: 2489, column: 24, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2488, column: 5)
!3527 = !DILocation(line: 2489, column: 35, scope: !3526)
!3528 = !DILocation(line: 2489, column: 49, scope: !3526)
!3529 = !DILocation(line: 2489, column: 7, scope: !3526)
!3530 = !DILocation(line: 2490, column: 7, scope: !3526)
!3531 = !DILocation(line: 2492, column: 7, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 2492, column: 7)
!3533 = !DILocation(line: 2492, column: 15, scope: !3532)
!3534 = !DILocation(line: 2492, column: 7, scope: !3467)
!3535 = !DILocation(line: 2498, column: 14, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 2493, column: 5)
!3537 = !DILocation(line: 2499, column: 12, scope: !3536)
!3538 = !DILocation(line: 2500, column: 5, scope: !3536)
!3539 = !DILocation(line: 2501, column: 60, scope: !3467)
!3540 = !DILocation(line: 2501, column: 59, scope: !3467)
!3541 = !DILocation(line: 2501, column: 67, scope: !3467)
!3542 = !DILocation(line: 2501, column: 46, scope: !3467)
!3543 = !DILocation(line: 2501, column: 17, scope: !3467)
!3544 = !DILocation(line: 2501, column: 16, scope: !3467)
!3545 = !DILocation(line: 2502, column: 7, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 2502, column: 7)
!3547 = !DILocation(line: 2502, column: 21, scope: !3546)
!3548 = !DILocation(line: 2502, column: 7, scope: !3467)
!3549 = !DILocation(line: 2504, column: 35, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 2503, column: 5)
!3551 = !DILocation(line: 2505, column: 60, scope: !3550)
!3552 = !DILocation(line: 2505, column: 67, scope: !3550)
!3553 = !DILocation(line: 2504, column: 14, scope: !3550)
!3554 = !DILocation(line: 2506, column: 7, scope: !3550)
!3555 = !DILocation(line: 2508, column: 9, scope: !3467)
!3556 = !DILocation(line: 2509, column: 31, scope: !3467)
!3557 = !DILocation(line: 2509, column: 9, scope: !3467)
!3558 = !DILocation(line: 2509, column: 8, scope: !3467)
!3559 = !DILocation(line: 2510, column: 28, scope: !3467)
!3560 = !DILocation(line: 2510, column: 10, scope: !3467)
!3561 = !DILocation(line: 2511, column: 38, scope: !3467)
!3562 = !DILocation(line: 2511, column: 44, scope: !3467)
!3563 = !DILocation(line: 2511, column: 14, scope: !3467)
!3564 = !DILocation(line: 2511, column: 13, scope: !3467)
!3565 = !DILocation(line: 2512, column: 41, scope: !3467)
!3566 = !DILocation(line: 2512, column: 54, scope: !3467)
!3567 = !DILocation(line: 2512, column: 15, scope: !3467)
!3568 = !DILocation(line: 2512, column: 14, scope: !3467)
!3569 = !DILocation(line: 2517, column: 9, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 2517, column: 3)
!3571 = !DILocation(line: 2517, column: 8, scope: !3570)
!3572 = !DILocation(line: 2517, column: 13, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 2517, column: 3)
!3574 = !DILocation(line: 2517, column: 27, scope: !3573)
!3575 = !DILocation(line: 2517, column: 41, scope: !3573)
!3576 = !DILocation(line: 2517, column: 15, scope: !3573)
!3577 = !DILocation(line: 2517, column: 3, scope: !3570)
!3578 = !DILocalVariable(name: "id", scope: !3579, file: !3, line: 2520, type: !3580)
!3579 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2518, column: 3)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!3581 = !DILocation(line: 2520, column: 7, scope: !3579)
!3582 = !DILocation(line: 2520, column: 12, scope: !3579)
!3583 = !DILocalVariable(name: "bisect", scope: !3579, file: !3, line: 2523, type: !15)
!3584 = !DILocation(line: 2523, column: 7, scope: !3579)
!3585 = !DILocalVariable(name: "density", scope: !3579, file: !3, line: 2524, type: !15)
!3586 = !DILocation(line: 2524, column: 7, scope: !3579)
!3587 = !DILocalVariable(name: "indexes", scope: !3579, file: !3, line: 2527, type: !2798)
!3588 = !DILocation(line: 2527, column: 17, scope: !3579)
!3589 = !DILocalVariable(name: "p", scope: !3579, file: !3, line: 2530, type: !2801)
!3590 = !DILocation(line: 2530, column: 17, scope: !3579)
!3591 = !DILocalVariable(name: "contribution", scope: !3579, file: !3, line: 2533, type: !3592)
!3592 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !827)
!3593 = !DILocation(line: 2533, column: 17, scope: !3579)
!3594 = !DILocalVariable(name: "resize_indexes", scope: !3579, file: !3, line: 2536, type: !2420)
!3595 = !DILocation(line: 2536, column: 17, scope: !3579)
!3596 = !DILocalVariable(name: "q", scope: !3579, file: !3, line: 2539, type: !2423)
!3597 = !DILocation(line: 2539, column: 17, scope: !3579)
!3598 = !DILocalVariable(name: "y", scope: !3579, file: !3, line: 2542, type: !218)
!3599 = !DILocation(line: 2542, column: 7, scope: !3579)
!3600 = !DILocalVariable(name: "n", scope: !3579, file: !3, line: 2545, type: !218)
!3601 = !DILocation(line: 2545, column: 7, scope: !3579)
!3602 = !DILocalVariable(name: "start", scope: !3579, file: !3, line: 2546, type: !218)
!3603 = !DILocation(line: 2546, column: 7, scope: !3579)
!3604 = !DILocalVariable(name: "stop", scope: !3579, file: !3, line: 2547, type: !218)
!3605 = !DILocation(line: 2547, column: 7, scope: !3579)
!3606 = !DILocation(line: 2549, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2549, column: 9)
!3608 = !DILocation(line: 2549, column: 16, scope: !3607)
!3609 = !DILocation(line: 2549, column: 9, scope: !3579)
!3610 = !DILocation(line: 2550, column: 7, scope: !3607)
!3611 = !DILocation(line: 2551, column: 30, scope: !3579)
!3612 = !DILocation(line: 2551, column: 31, scope: !3579)
!3613 = !DILocation(line: 2551, column: 12, scope: !3579)
!3614 = !DILocation(line: 2551, column: 37, scope: !3579)
!3615 = !DILocation(line: 2551, column: 36, scope: !3579)
!3616 = !DILocation(line: 2551, column: 45, scope: !3579)
!3617 = !DILocation(line: 2551, column: 11, scope: !3579)
!3618 = !DILocation(line: 2552, column: 31, scope: !3579)
!3619 = !DILocation(line: 2552, column: 38, scope: !3579)
!3620 = !DILocation(line: 2552, column: 37, scope: !3579)
!3621 = !DILocation(line: 2552, column: 45, scope: !3579)
!3622 = !DILocation(line: 2552, column: 21, scope: !3579)
!3623 = !DILocation(line: 2552, column: 11, scope: !3579)
!3624 = !DILocation(line: 2552, column: 10, scope: !3579)
!3625 = !DILocation(line: 2553, column: 30, scope: !3579)
!3626 = !DILocation(line: 2553, column: 37, scope: !3579)
!3627 = !DILocation(line: 2553, column: 36, scope: !3579)
!3628 = !DILocation(line: 2553, column: 44, scope: !3579)
!3629 = !DILocation(line: 2553, column: 58, scope: !3579)
!3630 = !DILocation(line: 2553, column: 65, scope: !3579)
!3631 = !DILocation(line: 2553, column: 49, scope: !3579)
!3632 = !DILocation(line: 2553, column: 20, scope: !3579)
!3633 = !DILocation(line: 2553, column: 10, scope: !3579)
!3634 = !DILocation(line: 2553, column: 9, scope: !3579)
!3635 = !DILocation(line: 2554, column: 12, scope: !3579)
!3636 = !DILocation(line: 2555, column: 18, scope: !3579)
!3637 = !DILocation(line: 2555, column: 32, scope: !3579)
!3638 = !DILocation(line: 2555, column: 17, scope: !3579)
!3639 = !DILocation(line: 2556, column: 11, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2556, column: 5)
!3641 = !DILocation(line: 2556, column: 10, scope: !3640)
!3642 = !DILocation(line: 2556, column: 15, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2556, column: 5)
!3644 = !DILocation(line: 2556, column: 20, scope: !3643)
!3645 = !DILocation(line: 2556, column: 25, scope: !3643)
!3646 = !DILocation(line: 2556, column: 24, scope: !3643)
!3647 = !DILocation(line: 2556, column: 17, scope: !3643)
!3648 = !DILocation(line: 2556, column: 5, scope: !3640)
!3649 = !DILocation(line: 2558, column: 29, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 2557, column: 5)
!3651 = !DILocation(line: 2558, column: 35, scope: !3650)
!3652 = !DILocation(line: 2558, column: 34, scope: !3650)
!3653 = !DILocation(line: 2558, column: 7, scope: !3650)
!3654 = !DILocation(line: 2558, column: 20, scope: !3650)
!3655 = !DILocation(line: 2558, column: 23, scope: !3650)
!3656 = !DILocation(line: 2558, column: 28, scope: !3650)
!3657 = !DILocation(line: 2559, column: 52, scope: !3650)
!3658 = !DILocation(line: 2559, column: 66, scope: !3650)
!3659 = !DILocation(line: 2560, column: 28, scope: !3650)
!3660 = !DILocation(line: 2560, column: 34, scope: !3650)
!3661 = !DILocation(line: 2560, column: 33, scope: !3650)
!3662 = !DILocation(line: 2560, column: 10, scope: !3650)
!3663 = !DILocation(line: 2560, column: 37, scope: !3650)
!3664 = !DILocation(line: 2560, column: 36, scope: !3650)
!3665 = !DILocation(line: 2560, column: 43, scope: !3650)
!3666 = !DILocation(line: 2559, column: 71, scope: !3650)
!3667 = !DILocation(line: 2559, column: 30, scope: !3650)
!3668 = !DILocation(line: 2559, column: 7, scope: !3650)
!3669 = !DILocation(line: 2559, column: 20, scope: !3650)
!3670 = !DILocation(line: 2559, column: 23, scope: !3650)
!3671 = !DILocation(line: 2559, column: 29, scope: !3650)
!3672 = !DILocation(line: 2561, column: 16, scope: !3650)
!3673 = !DILocation(line: 2561, column: 29, scope: !3650)
!3674 = !DILocation(line: 2561, column: 32, scope: !3650)
!3675 = !DILocation(line: 2561, column: 14, scope: !3650)
!3676 = !DILocation(line: 2562, column: 5, scope: !3650)
!3677 = !DILocation(line: 2556, column: 34, scope: !3643)
!3678 = !DILocation(line: 2556, column: 5, scope: !3643)
!3679 = distinct !{!3679, !3648, !3680}
!3680 = !DILocation(line: 2562, column: 5, scope: !3640)
!3681 = !DILocation(line: 2563, column: 10, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2563, column: 9)
!3683 = !DILocation(line: 2563, column: 18, scope: !3682)
!3684 = !DILocation(line: 2563, column: 26, scope: !3682)
!3685 = !DILocation(line: 2563, column: 30, scope: !3682)
!3686 = !DILocation(line: 2563, column: 38, scope: !3682)
!3687 = !DILocation(line: 2563, column: 9, scope: !3579)
!3688 = !DILocalVariable(name: "i", scope: !3689, file: !3, line: 2566, type: !218)
!3689 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 2564, column: 7)
!3690 = !DILocation(line: 2566, column: 11, scope: !3689)
!3691 = !DILocation(line: 2571, column: 39, scope: !3689)
!3692 = !DILocation(line: 2571, column: 17, scope: !3689)
!3693 = !DILocation(line: 2571, column: 16, scope: !3689)
!3694 = !DILocation(line: 2572, column: 15, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 2572, column: 9)
!3696 = !DILocation(line: 2572, column: 14, scope: !3695)
!3697 = !DILocation(line: 2572, column: 19, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 2572, column: 9)
!3699 = !DILocation(line: 2572, column: 23, scope: !3698)
!3700 = !DILocation(line: 2572, column: 21, scope: !3698)
!3701 = !DILocation(line: 2572, column: 9, scope: !3695)
!3702 = !DILocation(line: 2573, column: 35, scope: !3698)
!3703 = !DILocation(line: 2573, column: 11, scope: !3698)
!3704 = !DILocation(line: 2573, column: 24, scope: !3698)
!3705 = !DILocation(line: 2573, column: 27, scope: !3698)
!3706 = !DILocation(line: 2573, column: 33, scope: !3698)
!3707 = !DILocation(line: 2572, column: 27, scope: !3698)
!3708 = !DILocation(line: 2572, column: 9, scope: !3698)
!3709 = distinct !{!3709, !3701, !3710}
!3710 = !DILocation(line: 2573, column: 35, scope: !3695)
!3711 = !DILocation(line: 2574, column: 7, scope: !3689)
!3712 = !DILocation(line: 2575, column: 33, scope: !3579)
!3713 = !DILocation(line: 2575, column: 44, scope: !3579)
!3714 = !DILocation(line: 2575, column: 60, scope: !3579)
!3715 = !DILocation(line: 2576, column: 8, scope: !3579)
!3716 = !DILocation(line: 2576, column: 21, scope: !3579)
!3717 = !DILocation(line: 2576, column: 22, scope: !3579)
!3718 = !DILocation(line: 2576, column: 26, scope: !3579)
!3719 = !DILocation(line: 2576, column: 32, scope: !3579)
!3720 = !DILocation(line: 2576, column: 48, scope: !3579)
!3721 = !DILocation(line: 2576, column: 31, scope: !3579)
!3722 = !DILocation(line: 2576, column: 53, scope: !3579)
!3723 = !DILocation(line: 2576, column: 57, scope: !3579)
!3724 = !DILocation(line: 2576, column: 64, scope: !3579)
!3725 = !DILocation(line: 2576, column: 69, scope: !3579)
!3726 = !DILocation(line: 2575, column: 7, scope: !3579)
!3727 = !DILocation(line: 2575, column: 6, scope: !3579)
!3728 = !DILocation(line: 2577, column: 37, scope: !3579)
!3729 = !DILocation(line: 2577, column: 49, scope: !3579)
!3730 = !DILocation(line: 2577, column: 55, scope: !3579)
!3731 = !DILocation(line: 2577, column: 69, scope: !3579)
!3732 = !DILocation(line: 2578, column: 7, scope: !3579)
!3733 = !DILocation(line: 2577, column: 7, scope: !3579)
!3734 = !DILocation(line: 2577, column: 6, scope: !3579)
!3735 = !DILocation(line: 2579, column: 10, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2579, column: 9)
!3737 = !DILocation(line: 2579, column: 12, scope: !3736)
!3738 = !DILocation(line: 2579, column: 43, scope: !3736)
!3739 = !DILocation(line: 2579, column: 47, scope: !3736)
!3740 = !DILocation(line: 2579, column: 49, scope: !3736)
!3741 = !DILocation(line: 2579, column: 9, scope: !3579)
!3742 = !DILocation(line: 2581, column: 15, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 2580, column: 7)
!3744 = !DILocation(line: 2582, column: 9, scope: !3743)
!3745 = !DILocation(line: 2584, column: 43, scope: !3579)
!3746 = !DILocation(line: 2584, column: 13, scope: !3579)
!3747 = !DILocation(line: 2584, column: 12, scope: !3579)
!3748 = !DILocation(line: 2585, column: 52, scope: !3579)
!3749 = !DILocation(line: 2585, column: 20, scope: !3579)
!3750 = !DILocation(line: 2585, column: 19, scope: !3579)
!3751 = !DILocation(line: 2586, column: 11, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2586, column: 5)
!3753 = !DILocation(line: 2586, column: 10, scope: !3752)
!3754 = !DILocation(line: 2586, column: 15, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 2586, column: 5)
!3756 = !DILocation(line: 2586, column: 29, scope: !3755)
!3757 = !DILocation(line: 2586, column: 43, scope: !3755)
!3758 = !DILocation(line: 2586, column: 17, scope: !3755)
!3759 = !DILocation(line: 2586, column: 5, scope: !3752)
!3760 = !DILocalVariable(name: "pixel", scope: !3761, file: !3, line: 2589, type: !813)
!3761 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 2587, column: 5)
!3762 = !DILocation(line: 2589, column: 9, scope: !3761)
!3763 = !DILocalVariable(name: "alpha", scope: !3761, file: !3, line: 2592, type: !15)
!3764 = !DILocation(line: 2592, column: 9, scope: !3761)
!3765 = !DILocalVariable(name: "i", scope: !3761, file: !3, line: 2595, type: !218)
!3766 = !DILocation(line: 2595, column: 9, scope: !3761)
!3767 = !DILocalVariable(name: "j", scope: !3761, file: !3, line: 2598, type: !218)
!3768 = !DILocation(line: 2598, column: 9, scope: !3761)
!3769 = !DILocation(line: 2600, column: 13, scope: !3761)
!3770 = !DILocation(line: 2601, column: 11, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 2601, column: 11)
!3772 = !DILocation(line: 2601, column: 18, scope: !3771)
!3773 = !DILocation(line: 2601, column: 24, scope: !3771)
!3774 = !DILocation(line: 2601, column: 11, scope: !3761)
!3775 = !DILocation(line: 2603, column: 17, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 2603, column: 11)
!3777 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 2602, column: 9)
!3778 = !DILocation(line: 2603, column: 16, scope: !3776)
!3779 = !DILocation(line: 2603, column: 21, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 2603, column: 11)
!3781 = !DILocation(line: 2603, column: 25, scope: !3780)
!3782 = !DILocation(line: 2603, column: 23, scope: !3780)
!3783 = !DILocation(line: 2603, column: 11, scope: !3776)
!3784 = !DILocation(line: 2605, column: 15, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2604, column: 11)
!3786 = !DILocation(line: 2605, column: 18, scope: !3785)
!3787 = !DILocation(line: 2605, column: 31, scope: !3785)
!3788 = !DILocation(line: 2605, column: 32, scope: !3785)
!3789 = !DILocation(line: 2605, column: 36, scope: !3785)
!3790 = !DILocation(line: 2605, column: 42, scope: !3785)
!3791 = !DILocation(line: 2605, column: 58, scope: !3785)
!3792 = !DILocation(line: 2605, column: 41, scope: !3785)
!3793 = !DILocation(line: 2605, column: 63, scope: !3785)
!3794 = !DILocation(line: 2605, column: 16, scope: !3785)
!3795 = !DILocation(line: 2606, column: 16, scope: !3785)
!3796 = !DILocation(line: 2606, column: 29, scope: !3785)
!3797 = !DILocation(line: 2606, column: 32, scope: !3785)
!3798 = !DILocation(line: 2606, column: 38, scope: !3785)
!3799 = !DILocation(line: 2606, column: 54, scope: !3785)
!3800 = !DILocation(line: 2606, column: 37, scope: !3785)
!3801 = !DILocation(line: 2605, column: 66, scope: !3785)
!3802 = !DILocation(line: 2605, column: 14, scope: !3785)
!3803 = !DILocation(line: 2607, column: 19, scope: !3785)
!3804 = !DILocation(line: 2607, column: 32, scope: !3785)
!3805 = !DILocation(line: 2607, column: 35, scope: !3785)
!3806 = !DILocation(line: 2607, column: 18, scope: !3785)
!3807 = !DILocation(line: 2608, column: 24, scope: !3785)
!3808 = !DILocation(line: 2608, column: 30, scope: !3785)
!3809 = !DILocation(line: 2608, column: 29, scope: !3785)
!3810 = !DILocation(line: 2608, column: 19, scope: !3785)
!3811 = !DILocation(line: 2608, column: 22, scope: !3785)
!3812 = !DILocation(line: 2609, column: 26, scope: !3785)
!3813 = !DILocation(line: 2609, column: 32, scope: !3785)
!3814 = !DILocation(line: 2609, column: 31, scope: !3785)
!3815 = !DILocation(line: 2609, column: 19, scope: !3785)
!3816 = !DILocation(line: 2609, column: 24, scope: !3785)
!3817 = !DILocation(line: 2610, column: 25, scope: !3785)
!3818 = !DILocation(line: 2610, column: 31, scope: !3785)
!3819 = !DILocation(line: 2610, column: 30, scope: !3785)
!3820 = !DILocation(line: 2610, column: 19, scope: !3785)
!3821 = !DILocation(line: 2610, column: 23, scope: !3785)
!3822 = !DILocation(line: 2611, column: 28, scope: !3785)
!3823 = !DILocation(line: 2611, column: 34, scope: !3785)
!3824 = !DILocation(line: 2611, column: 33, scope: !3785)
!3825 = !DILocation(line: 2611, column: 19, scope: !3785)
!3826 = !DILocation(line: 2611, column: 26, scope: !3785)
!3827 = !DILocation(line: 2612, column: 11, scope: !3785)
!3828 = !DILocation(line: 2603, column: 29, scope: !3780)
!3829 = !DILocation(line: 2603, column: 11, scope: !3780)
!3830 = distinct !{!3830, !3783, !3831}
!3831 = !DILocation(line: 2612, column: 11, scope: !3776)
!3832 = !DILocation(line: 2613, column: 11, scope: !3777)
!3833 = !DILocation(line: 2614, column: 11, scope: !3777)
!3834 = !DILocation(line: 2615, column: 11, scope: !3777)
!3835 = !DILocation(line: 2616, column: 11, scope: !3777)
!3836 = !DILocation(line: 2617, column: 16, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 2617, column: 15)
!3838 = !DILocation(line: 2617, column: 23, scope: !3837)
!3839 = !DILocation(line: 2617, column: 34, scope: !3837)
!3840 = !DILocation(line: 2617, column: 53, scope: !3837)
!3841 = !DILocation(line: 2618, column: 16, scope: !3837)
!3842 = !DILocation(line: 2618, column: 30, scope: !3837)
!3843 = !DILocation(line: 2618, column: 41, scope: !3837)
!3844 = !DILocation(line: 2617, column: 15, scope: !3777)
!3845 = !DILocation(line: 2620, column: 21, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 2620, column: 15)
!3847 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 2619, column: 13)
!3848 = !DILocation(line: 2620, column: 20, scope: !3846)
!3849 = !DILocation(line: 2620, column: 25, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 2620, column: 15)
!3851 = !DILocation(line: 2620, column: 29, scope: !3850)
!3852 = !DILocation(line: 2620, column: 27, scope: !3850)
!3853 = !DILocation(line: 2620, column: 15, scope: !3846)
!3854 = !DILocation(line: 2622, column: 19, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 2621, column: 15)
!3856 = !DILocation(line: 2622, column: 22, scope: !3855)
!3857 = !DILocation(line: 2622, column: 35, scope: !3855)
!3858 = !DILocation(line: 2622, column: 36, scope: !3855)
!3859 = !DILocation(line: 2622, column: 40, scope: !3855)
!3860 = !DILocation(line: 2622, column: 46, scope: !3855)
!3861 = !DILocation(line: 2622, column: 62, scope: !3855)
!3862 = !DILocation(line: 2622, column: 45, scope: !3855)
!3863 = !DILocation(line: 2622, column: 67, scope: !3855)
!3864 = !DILocation(line: 2622, column: 20, scope: !3855)
!3865 = !DILocation(line: 2623, column: 20, scope: !3855)
!3866 = !DILocation(line: 2623, column: 33, scope: !3855)
!3867 = !DILocation(line: 2623, column: 36, scope: !3855)
!3868 = !DILocation(line: 2623, column: 42, scope: !3855)
!3869 = !DILocation(line: 2623, column: 58, scope: !3855)
!3870 = !DILocation(line: 2623, column: 41, scope: !3855)
!3871 = !DILocation(line: 2622, column: 70, scope: !3855)
!3872 = !DILocation(line: 2622, column: 18, scope: !3855)
!3873 = !DILocation(line: 2624, column: 23, scope: !3855)
!3874 = !DILocation(line: 2624, column: 36, scope: !3855)
!3875 = !DILocation(line: 2624, column: 39, scope: !3855)
!3876 = !DILocation(line: 2624, column: 22, scope: !3855)
!3877 = !DILocation(line: 2625, column: 30, scope: !3855)
!3878 = !DILocation(line: 2625, column: 36, scope: !3855)
!3879 = !DILocation(line: 2625, column: 35, scope: !3855)
!3880 = !DILocation(line: 2625, column: 23, scope: !3855)
!3881 = !DILocation(line: 2625, column: 28, scope: !3855)
!3882 = !DILocation(line: 2626, column: 15, scope: !3855)
!3883 = !DILocation(line: 2620, column: 33, scope: !3850)
!3884 = !DILocation(line: 2620, column: 15, scope: !3850)
!3885 = distinct !{!3885, !3853, !3886}
!3886 = !DILocation(line: 2626, column: 15, scope: !3846)
!3887 = !DILocation(line: 2627, column: 15, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 2627, column: 15)
!3889 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 2627, column: 15)
!3890 = !DILocation(line: 2627, column: 15, scope: !3889)
!3891 = !DILocation(line: 2628, column: 13, scope: !3847)
!3892 = !DILocation(line: 2629, column: 9, scope: !3777)
!3893 = !DILocalVariable(name: "gamma", scope: !3894, file: !3, line: 2633, type: !178)
!3894 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 2631, column: 9)
!3895 = !DILocation(line: 2633, column: 13, scope: !3894)
!3896 = !DILocation(line: 2635, column: 16, scope: !3894)
!3897 = !DILocation(line: 2636, column: 17, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2636, column: 11)
!3899 = !DILocation(line: 2636, column: 16, scope: !3898)
!3900 = !DILocation(line: 2636, column: 21, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 2636, column: 11)
!3902 = !DILocation(line: 2636, column: 25, scope: !3901)
!3903 = !DILocation(line: 2636, column: 23, scope: !3901)
!3904 = !DILocation(line: 2636, column: 11, scope: !3898)
!3905 = !DILocation(line: 2638, column: 15, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 2637, column: 11)
!3907 = !DILocation(line: 2638, column: 18, scope: !3906)
!3908 = !DILocation(line: 2638, column: 31, scope: !3906)
!3909 = !DILocation(line: 2638, column: 32, scope: !3906)
!3910 = !DILocation(line: 2638, column: 36, scope: !3906)
!3911 = !DILocation(line: 2638, column: 42, scope: !3906)
!3912 = !DILocation(line: 2638, column: 58, scope: !3906)
!3913 = !DILocation(line: 2638, column: 41, scope: !3906)
!3914 = !DILocation(line: 2638, column: 63, scope: !3906)
!3915 = !DILocation(line: 2638, column: 16, scope: !3906)
!3916 = !DILocation(line: 2639, column: 16, scope: !3906)
!3917 = !DILocation(line: 2639, column: 29, scope: !3906)
!3918 = !DILocation(line: 2639, column: 32, scope: !3906)
!3919 = !DILocation(line: 2639, column: 38, scope: !3906)
!3920 = !DILocation(line: 2639, column: 54, scope: !3906)
!3921 = !DILocation(line: 2639, column: 37, scope: !3906)
!3922 = !DILocation(line: 2638, column: 66, scope: !3906)
!3923 = !DILocation(line: 2638, column: 14, scope: !3906)
!3924 = !DILocation(line: 2640, column: 19, scope: !3906)
!3925 = !DILocation(line: 2640, column: 32, scope: !3906)
!3926 = !DILocation(line: 2640, column: 35, scope: !3906)
!3927 = !DILocation(line: 2640, column: 41, scope: !3906)
!3928 = !DILocation(line: 2640, column: 55, scope: !3906)
!3929 = !DILocation(line: 2640, column: 54, scope: !3906)
!3930 = !DILocation(line: 2640, column: 18, scope: !3906)
!3931 = !DILocation(line: 2641, column: 24, scope: !3906)
!3932 = !DILocation(line: 2641, column: 30, scope: !3906)
!3933 = !DILocation(line: 2641, column: 29, scope: !3906)
!3934 = !DILocation(line: 2641, column: 19, scope: !3906)
!3935 = !DILocation(line: 2641, column: 22, scope: !3906)
!3936 = !DILocation(line: 2642, column: 26, scope: !3906)
!3937 = !DILocation(line: 2642, column: 32, scope: !3906)
!3938 = !DILocation(line: 2642, column: 31, scope: !3906)
!3939 = !DILocation(line: 2642, column: 19, scope: !3906)
!3940 = !DILocation(line: 2642, column: 24, scope: !3906)
!3941 = !DILocation(line: 2643, column: 25, scope: !3906)
!3942 = !DILocation(line: 2643, column: 31, scope: !3906)
!3943 = !DILocation(line: 2643, column: 30, scope: !3906)
!3944 = !DILocation(line: 2643, column: 19, scope: !3906)
!3945 = !DILocation(line: 2643, column: 23, scope: !3906)
!3946 = !DILocation(line: 2644, column: 28, scope: !3906)
!3947 = !DILocation(line: 2644, column: 41, scope: !3906)
!3948 = !DILocation(line: 2644, column: 44, scope: !3906)
!3949 = !DILocation(line: 2644, column: 51, scope: !3906)
!3950 = !DILocation(line: 2644, column: 50, scope: !3906)
!3951 = !DILocation(line: 2644, column: 19, scope: !3906)
!3952 = !DILocation(line: 2644, column: 26, scope: !3906)
!3953 = !DILocation(line: 2645, column: 20, scope: !3906)
!3954 = !DILocation(line: 2645, column: 18, scope: !3906)
!3955 = !DILocation(line: 2646, column: 11, scope: !3906)
!3956 = !DILocation(line: 2636, column: 29, scope: !3901)
!3957 = !DILocation(line: 2636, column: 11, scope: !3901)
!3958 = distinct !{!3958, !3904, !3959}
!3959 = !DILocation(line: 2646, column: 11, scope: !3898)
!3960 = !DILocation(line: 2648, column: 15, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2648, column: 15)
!3962 = !DILocation(line: 2648, column: 21, scope: !3961)
!3963 = !DILocation(line: 2648, column: 15, scope: !3894)
!3964 = !DILocation(line: 2648, column: 34, scope: !3961)
!3965 = !DILocation(line: 2648, column: 28, scope: !3961)
!3966 = !DILocation(line: 2650, column: 39, scope: !3894)
!3967 = !DILocation(line: 2650, column: 17, scope: !3894)
!3968 = !DILocation(line: 2650, column: 16, scope: !3894)
!3969 = !DILocation(line: 2651, column: 11, scope: !3894)
!3970 = !DILocation(line: 2652, column: 11, scope: !3894)
!3971 = !DILocation(line: 2653, column: 11, scope: !3894)
!3972 = !DILocation(line: 2654, column: 11, scope: !3894)
!3973 = !DILocation(line: 2655, column: 16, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 2655, column: 15)
!3975 = !DILocation(line: 2655, column: 23, scope: !3974)
!3976 = !DILocation(line: 2655, column: 34, scope: !3974)
!3977 = !DILocation(line: 2655, column: 53, scope: !3974)
!3978 = !DILocation(line: 2656, column: 16, scope: !3974)
!3979 = !DILocation(line: 2656, column: 30, scope: !3974)
!3980 = !DILocation(line: 2656, column: 41, scope: !3974)
!3981 = !DILocation(line: 2655, column: 15, scope: !3894)
!3982 = !DILocation(line: 2658, column: 21, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 2658, column: 15)
!3984 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 2657, column: 13)
!3985 = !DILocation(line: 2658, column: 20, scope: !3983)
!3986 = !DILocation(line: 2658, column: 25, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 2658, column: 15)
!3988 = !DILocation(line: 2658, column: 29, scope: !3987)
!3989 = !DILocation(line: 2658, column: 27, scope: !3987)
!3990 = !DILocation(line: 2658, column: 15, scope: !3983)
!3991 = !DILocation(line: 2660, column: 19, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 2659, column: 15)
!3993 = !DILocation(line: 2660, column: 22, scope: !3992)
!3994 = !DILocation(line: 2660, column: 35, scope: !3992)
!3995 = !DILocation(line: 2660, column: 36, scope: !3992)
!3996 = !DILocation(line: 2660, column: 40, scope: !3992)
!3997 = !DILocation(line: 2660, column: 46, scope: !3992)
!3998 = !DILocation(line: 2660, column: 62, scope: !3992)
!3999 = !DILocation(line: 2660, column: 45, scope: !3992)
!4000 = !DILocation(line: 2660, column: 67, scope: !3992)
!4001 = !DILocation(line: 2660, column: 20, scope: !3992)
!4002 = !DILocation(line: 2661, column: 20, scope: !3992)
!4003 = !DILocation(line: 2661, column: 33, scope: !3992)
!4004 = !DILocation(line: 2661, column: 36, scope: !3992)
!4005 = !DILocation(line: 2661, column: 42, scope: !3992)
!4006 = !DILocation(line: 2661, column: 58, scope: !3992)
!4007 = !DILocation(line: 2661, column: 41, scope: !3992)
!4008 = !DILocation(line: 2660, column: 70, scope: !3992)
!4009 = !DILocation(line: 2660, column: 18, scope: !3992)
!4010 = !DILocation(line: 2662, column: 23, scope: !3992)
!4011 = !DILocation(line: 2662, column: 36, scope: !3992)
!4012 = !DILocation(line: 2662, column: 39, scope: !3992)
!4013 = !DILocation(line: 2662, column: 45, scope: !3992)
!4014 = !DILocation(line: 2662, column: 59, scope: !3992)
!4015 = !DILocation(line: 2662, column: 58, scope: !3992)
!4016 = !DILocation(line: 2662, column: 22, scope: !3992)
!4017 = !DILocation(line: 2663, column: 30, scope: !3992)
!4018 = !DILocation(line: 2663, column: 36, scope: !3992)
!4019 = !DILocation(line: 2663, column: 35, scope: !3992)
!4020 = !DILocation(line: 2663, column: 23, scope: !3992)
!4021 = !DILocation(line: 2663, column: 28, scope: !3992)
!4022 = !DILocation(line: 2664, column: 15, scope: !3992)
!4023 = !DILocation(line: 2658, column: 33, scope: !3987)
!4024 = !DILocation(line: 2658, column: 15, scope: !3987)
!4025 = distinct !{!4025, !3990, !4026}
!4026 = !DILocation(line: 2664, column: 15, scope: !3983)
!4027 = !DILocation(line: 2665, column: 15, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2665, column: 15)
!4029 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 2665, column: 15)
!4030 = !DILocation(line: 2665, column: 15, scope: !4029)
!4031 = !DILocation(line: 2666, column: 13, scope: !3984)
!4032 = !DILocation(line: 2668, column: 12, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 2668, column: 11)
!4034 = !DILocation(line: 2668, column: 26, scope: !4033)
!4035 = !DILocation(line: 2668, column: 40, scope: !4033)
!4036 = !DILocation(line: 2668, column: 56, scope: !4033)
!4037 = !DILocation(line: 2669, column: 12, scope: !4033)
!4038 = !DILocation(line: 2669, column: 19, scope: !4033)
!4039 = !DILocation(line: 2669, column: 33, scope: !4033)
!4040 = !DILocation(line: 2668, column: 11, scope: !3761)
!4041 = !DILocation(line: 2671, column: 44, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 2670, column: 9)
!4043 = !DILocation(line: 2671, column: 60, scope: !4042)
!4044 = !DILocation(line: 2671, column: 51, scope: !4042)
!4045 = !DILocation(line: 2671, column: 34, scope: !4042)
!4046 = !DILocation(line: 2671, column: 76, scope: !4042)
!4047 = !DILocation(line: 2671, column: 67, scope: !4042)
!4048 = !DILocation(line: 2671, column: 80, scope: !4042)
!4049 = !DILocation(line: 2671, column: 24, scope: !4042)
!4050 = !DILocation(line: 2672, column: 17, scope: !4042)
!4051 = !DILocation(line: 2671, column: 13, scope: !4042)
!4052 = !DILocation(line: 2671, column: 12, scope: !4042)
!4053 = !DILocation(line: 2673, column: 13, scope: !4042)
!4054 = !DILocation(line: 2673, column: 16, scope: !4042)
!4055 = !DILocation(line: 2673, column: 29, scope: !4042)
!4056 = !DILocation(line: 2673, column: 30, scope: !4042)
!4057 = !DILocation(line: 2673, column: 34, scope: !4042)
!4058 = !DILocation(line: 2673, column: 40, scope: !4042)
!4059 = !DILocation(line: 2673, column: 56, scope: !4042)
!4060 = !DILocation(line: 2673, column: 39, scope: !4042)
!4061 = !DILocation(line: 2673, column: 61, scope: !4042)
!4062 = !DILocation(line: 2673, column: 14, scope: !4042)
!4063 = !DILocation(line: 2674, column: 14, scope: !4042)
!4064 = !DILocation(line: 2674, column: 27, scope: !4042)
!4065 = !DILocation(line: 2674, column: 29, scope: !4042)
!4066 = !DILocation(line: 2674, column: 28, scope: !4042)
!4067 = !DILocation(line: 2674, column: 36, scope: !4042)
!4068 = !DILocation(line: 2674, column: 42, scope: !4042)
!4069 = !DILocation(line: 2674, column: 58, scope: !4042)
!4070 = !DILocation(line: 2674, column: 41, scope: !4042)
!4071 = !DILocation(line: 2673, column: 64, scope: !4042)
!4072 = !DILocation(line: 2673, column: 12, scope: !4042)
!4073 = !DILocation(line: 2675, column: 11, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 2675, column: 11)
!4075 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 2675, column: 11)
!4076 = !DILocation(line: 2675, column: 11, scope: !4075)
!4077 = !DILocation(line: 2676, column: 9, scope: !4042)
!4078 = !DILocation(line: 2677, column: 8, scope: !3761)
!4079 = !DILocation(line: 2678, column: 5, scope: !3761)
!4080 = !DILocation(line: 2586, column: 50, scope: !3755)
!4081 = !DILocation(line: 2586, column: 5, scope: !3755)
!4082 = distinct !{!4082, !3759, !4083}
!4083 = !DILocation(line: 2678, column: 5, scope: !3752)
!4084 = !DILocation(line: 2679, column: 38, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2679, column: 9)
!4086 = !DILocation(line: 2679, column: 50, scope: !4085)
!4087 = !DILocation(line: 2679, column: 9, scope: !4085)
!4088 = !DILocation(line: 2679, column: 61, scope: !4085)
!4089 = !DILocation(line: 2679, column: 9, scope: !3579)
!4090 = !DILocation(line: 2680, column: 13, scope: !4085)
!4091 = !DILocation(line: 2680, column: 7, scope: !4085)
!4092 = !DILocation(line: 2681, column: 9, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2681, column: 9)
!4094 = !DILocation(line: 2681, column: 16, scope: !4093)
!4095 = !DILocation(line: 2681, column: 33, scope: !4093)
!4096 = !DILocation(line: 2681, column: 9, scope: !3579)
!4097 = !DILocalVariable(name: "proceed", scope: !4098, file: !3, line: 2684, type: !152)
!4098 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 2682, column: 7)
!4099 = !DILocation(line: 2684, column: 11, scope: !4098)
!4100 = !DILocation(line: 2689, column: 34, scope: !4098)
!4101 = !DILocation(line: 2689, column: 57, scope: !4098)
!4102 = !DILocation(line: 2689, column: 64, scope: !4098)
!4103 = !DILocation(line: 2689, column: 67, scope: !4098)
!4104 = !DILocation(line: 2689, column: 17, scope: !4098)
!4105 = !DILocation(line: 2689, column: 16, scope: !4098)
!4106 = !DILocation(line: 2690, column: 13, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 2690, column: 13)
!4108 = !DILocation(line: 2690, column: 21, scope: !4107)
!4109 = !DILocation(line: 2690, column: 13, scope: !4098)
!4110 = !DILocation(line: 2691, column: 17, scope: !4107)
!4111 = !DILocation(line: 2691, column: 11, scope: !4107)
!4112 = !DILocation(line: 2692, column: 7, scope: !4098)
!4113 = !DILocation(line: 2693, column: 3, scope: !3579)
!4114 = !DILocation(line: 2517, column: 51, scope: !3573)
!4115 = !DILocation(line: 2517, column: 3, scope: !3573)
!4116 = distinct !{!4116, !3577, !4117}
!4117 = !DILocation(line: 2693, column: 3, scope: !3570)
!4118 = !DILocation(line: 2694, column: 32, scope: !3467)
!4119 = !DILocation(line: 2694, column: 15, scope: !3467)
!4120 = !DILocation(line: 2694, column: 14, scope: !3467)
!4121 = !DILocation(line: 2695, column: 31, scope: !3467)
!4122 = !DILocation(line: 2695, column: 14, scope: !3467)
!4123 = !DILocation(line: 2695, column: 13, scope: !3467)
!4124 = !DILocation(line: 2696, column: 46, scope: !3467)
!4125 = !DILocation(line: 2696, column: 17, scope: !3467)
!4126 = !DILocation(line: 2696, column: 16, scope: !3467)
!4127 = !DILocation(line: 2697, column: 10, scope: !3467)
!4128 = !DILocation(line: 2697, column: 3, scope: !3467)
!4129 = !DILocation(line: 2698, column: 1, scope: !3467)
!4130 = distinct !DISubprogram(name: "VerticalFilter", scope: !3, file: !3, line: 2700, type: !3468, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!4131 = !DILocalVariable(name: "resize_filter", arg: 1, scope: !4130, file: !3, line: 2700, type: !19)
!4132 = !DILocation(line: 2700, column: 61, scope: !4130)
!4133 = !DILocalVariable(name: "image", arg: 2, scope: !4130, file: !3, line: 2701, type: !58)
!4134 = !DILocation(line: 2701, column: 16, scope: !4130)
!4135 = !DILocalVariable(name: "resize_image", arg: 3, scope: !4130, file: !3, line: 2701, type: !803)
!4136 = !DILocation(line: 2701, column: 29, scope: !4130)
!4137 = !DILocalVariable(name: "y_factor", arg: 4, scope: !4130, file: !3, line: 2701, type: !18)
!4138 = !DILocation(line: 2701, column: 63, scope: !4130)
!4139 = !DILocalVariable(name: "span", arg: 5, scope: !4130, file: !3, line: 2702, type: !443)
!4140 = !DILocation(line: 2702, column: 24, scope: !4130)
!4141 = !DILocalVariable(name: "offset", arg: 6, scope: !4130, file: !3, line: 2702, type: !3470)
!4142 = !DILocation(line: 2702, column: 47, scope: !4130)
!4143 = !DILocalVariable(name: "exception", arg: 7, scope: !4130, file: !3, line: 2702, type: !643)
!4144 = !DILocation(line: 2702, column: 69, scope: !4130)
!4145 = !DILocalVariable(name: "image_view", scope: !4130, file: !3, line: 2705, type: !2299)
!4146 = !DILocation(line: 2705, column: 6, scope: !4130)
!4147 = !DILocalVariable(name: "resize_view", scope: !4130, file: !3, line: 2706, type: !2299)
!4148 = !DILocation(line: 2706, column: 6, scope: !4130)
!4149 = !DILocalVariable(name: "storage_class", scope: !4130, file: !3, line: 2709, type: !65)
!4150 = !DILocation(line: 2709, column: 5, scope: !4130)
!4151 = !DILocalVariable(name: "contributions", scope: !4130, file: !3, line: 2712, type: !3492)
!4152 = !DILocation(line: 2712, column: 16, scope: !4130)
!4153 = !DILocalVariable(name: "status", scope: !4130, file: !3, line: 2715, type: !152)
!4154 = !DILocation(line: 2715, column: 5, scope: !4130)
!4155 = !DILocalVariable(name: "zero", scope: !4130, file: !3, line: 2718, type: !813)
!4156 = !DILocation(line: 2718, column: 5, scope: !4130)
!4157 = !DILocalVariable(name: "scale", scope: !4130, file: !3, line: 2721, type: !15)
!4158 = !DILocation(line: 2721, column: 5, scope: !4130)
!4159 = !DILocalVariable(name: "support", scope: !4130, file: !3, line: 2722, type: !15)
!4160 = !DILocation(line: 2722, column: 5, scope: !4130)
!4161 = !DILocalVariable(name: "y", scope: !4130, file: !3, line: 2725, type: !218)
!4162 = !DILocation(line: 2725, column: 5, scope: !4130)
!4163 = !DILocation(line: 2730, column: 23, scope: !4130)
!4164 = !DILocation(line: 2730, column: 22, scope: !4130)
!4165 = !DILocation(line: 2730, column: 31, scope: !4130)
!4166 = !DILocation(line: 2730, column: 9, scope: !4130)
!4167 = !DILocation(line: 2730, column: 8, scope: !4130)
!4168 = !DILocation(line: 2731, column: 11, scope: !4130)
!4169 = !DILocation(line: 2731, column: 40, scope: !4130)
!4170 = !DILocation(line: 2731, column: 17, scope: !4130)
!4171 = !DILocation(line: 2731, column: 16, scope: !4130)
!4172 = !DILocation(line: 2731, column: 10, scope: !4130)
!4173 = !DILocation(line: 2732, column: 17, scope: !4130)
!4174 = !DILocation(line: 2732, column: 25, scope: !4130)
!4175 = !DILocation(line: 2732, column: 47, scope: !4130)
!4176 = !DILocation(line: 2732, column: 54, scope: !4130)
!4177 = !DILocation(line: 2732, column: 16, scope: !4130)
!4178 = !DILocation(line: 2733, column: 28, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2733, column: 7)
!4180 = !DILocation(line: 2733, column: 41, scope: !4179)
!4181 = !DILocation(line: 2733, column: 7, scope: !4179)
!4182 = !DILocation(line: 2733, column: 56, scope: !4179)
!4183 = !DILocation(line: 2733, column: 7, scope: !4130)
!4184 = !DILocation(line: 2735, column: 24, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 2734, column: 5)
!4186 = !DILocation(line: 2735, column: 35, scope: !4185)
!4187 = !DILocation(line: 2735, column: 49, scope: !4185)
!4188 = !DILocation(line: 2735, column: 7, scope: !4185)
!4189 = !DILocation(line: 2736, column: 7, scope: !4185)
!4190 = !DILocation(line: 2738, column: 7, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2738, column: 7)
!4192 = !DILocation(line: 2738, column: 15, scope: !4191)
!4193 = !DILocation(line: 2738, column: 7, scope: !4130)
!4194 = !DILocation(line: 2744, column: 14, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 2739, column: 5)
!4196 = !DILocation(line: 2745, column: 12, scope: !4195)
!4197 = !DILocation(line: 2746, column: 5, scope: !4195)
!4198 = !DILocation(line: 2747, column: 60, scope: !4130)
!4199 = !DILocation(line: 2747, column: 59, scope: !4130)
!4200 = !DILocation(line: 2747, column: 67, scope: !4130)
!4201 = !DILocation(line: 2747, column: 46, scope: !4130)
!4202 = !DILocation(line: 2747, column: 17, scope: !4130)
!4203 = !DILocation(line: 2747, column: 16, scope: !4130)
!4204 = !DILocation(line: 2748, column: 7, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2748, column: 7)
!4206 = !DILocation(line: 2748, column: 21, scope: !4205)
!4207 = !DILocation(line: 2748, column: 7, scope: !4130)
!4208 = !DILocation(line: 2750, column: 35, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 2749, column: 5)
!4210 = !DILocation(line: 2751, column: 60, scope: !4209)
!4211 = !DILocation(line: 2751, column: 67, scope: !4209)
!4212 = !DILocation(line: 2750, column: 14, scope: !4209)
!4213 = !DILocation(line: 2752, column: 7, scope: !4209)
!4214 = !DILocation(line: 2754, column: 9, scope: !4130)
!4215 = !DILocation(line: 2755, column: 31, scope: !4130)
!4216 = !DILocation(line: 2755, column: 9, scope: !4130)
!4217 = !DILocation(line: 2755, column: 8, scope: !4130)
!4218 = !DILocation(line: 2756, column: 28, scope: !4130)
!4219 = !DILocation(line: 2756, column: 10, scope: !4130)
!4220 = !DILocation(line: 2757, column: 38, scope: !4130)
!4221 = !DILocation(line: 2757, column: 44, scope: !4130)
!4222 = !DILocation(line: 2757, column: 14, scope: !4130)
!4223 = !DILocation(line: 2757, column: 13, scope: !4130)
!4224 = !DILocation(line: 2758, column: 41, scope: !4130)
!4225 = !DILocation(line: 2758, column: 54, scope: !4130)
!4226 = !DILocation(line: 2758, column: 15, scope: !4130)
!4227 = !DILocation(line: 2758, column: 14, scope: !4130)
!4228 = !DILocation(line: 2763, column: 9, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 2763, column: 3)
!4230 = !DILocation(line: 2763, column: 8, scope: !4229)
!4231 = !DILocation(line: 2763, column: 13, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 2763, column: 3)
!4233 = !DILocation(line: 2763, column: 27, scope: !4232)
!4234 = !DILocation(line: 2763, column: 41, scope: !4232)
!4235 = !DILocation(line: 2763, column: 15, scope: !4232)
!4236 = !DILocation(line: 2763, column: 3, scope: !4229)
!4237 = !DILocalVariable(name: "id", scope: !4238, file: !3, line: 2766, type: !3580)
!4238 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2764, column: 3)
!4239 = !DILocation(line: 2766, column: 7, scope: !4238)
!4240 = !DILocation(line: 2766, column: 12, scope: !4238)
!4241 = !DILocalVariable(name: "bisect", scope: !4238, file: !3, line: 2769, type: !15)
!4242 = !DILocation(line: 2769, column: 7, scope: !4238)
!4243 = !DILocalVariable(name: "density", scope: !4238, file: !3, line: 2770, type: !15)
!4244 = !DILocation(line: 2770, column: 7, scope: !4238)
!4245 = !DILocalVariable(name: "indexes", scope: !4238, file: !3, line: 2773, type: !2798)
!4246 = !DILocation(line: 2773, column: 17, scope: !4238)
!4247 = !DILocalVariable(name: "p", scope: !4238, file: !3, line: 2776, type: !2801)
!4248 = !DILocation(line: 2776, column: 17, scope: !4238)
!4249 = !DILocalVariable(name: "contribution", scope: !4238, file: !3, line: 2779, type: !3592)
!4250 = !DILocation(line: 2779, column: 17, scope: !4238)
!4251 = !DILocalVariable(name: "resize_indexes", scope: !4238, file: !3, line: 2782, type: !2420)
!4252 = !DILocation(line: 2782, column: 17, scope: !4238)
!4253 = !DILocalVariable(name: "q", scope: !4238, file: !3, line: 2785, type: !2423)
!4254 = !DILocation(line: 2785, column: 17, scope: !4238)
!4255 = !DILocalVariable(name: "x", scope: !4238, file: !3, line: 2788, type: !218)
!4256 = !DILocation(line: 2788, column: 7, scope: !4238)
!4257 = !DILocalVariable(name: "n", scope: !4238, file: !3, line: 2791, type: !218)
!4258 = !DILocation(line: 2791, column: 7, scope: !4238)
!4259 = !DILocalVariable(name: "start", scope: !4238, file: !3, line: 2792, type: !218)
!4260 = !DILocation(line: 2792, column: 7, scope: !4238)
!4261 = !DILocalVariable(name: "stop", scope: !4238, file: !3, line: 2793, type: !218)
!4262 = !DILocation(line: 2793, column: 7, scope: !4238)
!4263 = !DILocation(line: 2795, column: 9, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2795, column: 9)
!4265 = !DILocation(line: 2795, column: 16, scope: !4264)
!4266 = !DILocation(line: 2795, column: 9, scope: !4238)
!4267 = !DILocation(line: 2796, column: 7, scope: !4264)
!4268 = !DILocation(line: 2797, column: 30, scope: !4238)
!4269 = !DILocation(line: 2797, column: 31, scope: !4238)
!4270 = !DILocation(line: 2797, column: 12, scope: !4238)
!4271 = !DILocation(line: 2797, column: 37, scope: !4238)
!4272 = !DILocation(line: 2797, column: 36, scope: !4238)
!4273 = !DILocation(line: 2797, column: 45, scope: !4238)
!4274 = !DILocation(line: 2797, column: 11, scope: !4238)
!4275 = !DILocation(line: 2798, column: 31, scope: !4238)
!4276 = !DILocation(line: 2798, column: 38, scope: !4238)
!4277 = !DILocation(line: 2798, column: 37, scope: !4238)
!4278 = !DILocation(line: 2798, column: 45, scope: !4238)
!4279 = !DILocation(line: 2798, column: 21, scope: !4238)
!4280 = !DILocation(line: 2798, column: 11, scope: !4238)
!4281 = !DILocation(line: 2798, column: 10, scope: !4238)
!4282 = !DILocation(line: 2799, column: 30, scope: !4238)
!4283 = !DILocation(line: 2799, column: 37, scope: !4238)
!4284 = !DILocation(line: 2799, column: 36, scope: !4238)
!4285 = !DILocation(line: 2799, column: 44, scope: !4238)
!4286 = !DILocation(line: 2799, column: 58, scope: !4238)
!4287 = !DILocation(line: 2799, column: 65, scope: !4238)
!4288 = !DILocation(line: 2799, column: 49, scope: !4238)
!4289 = !DILocation(line: 2799, column: 20, scope: !4238)
!4290 = !DILocation(line: 2799, column: 10, scope: !4238)
!4291 = !DILocation(line: 2799, column: 9, scope: !4238)
!4292 = !DILocation(line: 2800, column: 12, scope: !4238)
!4293 = !DILocation(line: 2801, column: 18, scope: !4238)
!4294 = !DILocation(line: 2801, column: 32, scope: !4238)
!4295 = !DILocation(line: 2801, column: 17, scope: !4238)
!4296 = !DILocation(line: 2802, column: 11, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2802, column: 5)
!4298 = !DILocation(line: 2802, column: 10, scope: !4297)
!4299 = !DILocation(line: 2802, column: 15, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2802, column: 5)
!4301 = !DILocation(line: 2802, column: 20, scope: !4300)
!4302 = !DILocation(line: 2802, column: 25, scope: !4300)
!4303 = !DILocation(line: 2802, column: 24, scope: !4300)
!4304 = !DILocation(line: 2802, column: 17, scope: !4300)
!4305 = !DILocation(line: 2802, column: 5, scope: !4297)
!4306 = !DILocation(line: 2804, column: 29, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 2803, column: 5)
!4308 = !DILocation(line: 2804, column: 35, scope: !4307)
!4309 = !DILocation(line: 2804, column: 34, scope: !4307)
!4310 = !DILocation(line: 2804, column: 7, scope: !4307)
!4311 = !DILocation(line: 2804, column: 20, scope: !4307)
!4312 = !DILocation(line: 2804, column: 23, scope: !4307)
!4313 = !DILocation(line: 2804, column: 28, scope: !4307)
!4314 = !DILocation(line: 2805, column: 52, scope: !4307)
!4315 = !DILocation(line: 2805, column: 66, scope: !4307)
!4316 = !DILocation(line: 2806, column: 28, scope: !4307)
!4317 = !DILocation(line: 2806, column: 34, scope: !4307)
!4318 = !DILocation(line: 2806, column: 33, scope: !4307)
!4319 = !DILocation(line: 2806, column: 10, scope: !4307)
!4320 = !DILocation(line: 2806, column: 37, scope: !4307)
!4321 = !DILocation(line: 2806, column: 36, scope: !4307)
!4322 = !DILocation(line: 2806, column: 43, scope: !4307)
!4323 = !DILocation(line: 2805, column: 71, scope: !4307)
!4324 = !DILocation(line: 2805, column: 30, scope: !4307)
!4325 = !DILocation(line: 2805, column: 7, scope: !4307)
!4326 = !DILocation(line: 2805, column: 20, scope: !4307)
!4327 = !DILocation(line: 2805, column: 23, scope: !4307)
!4328 = !DILocation(line: 2805, column: 29, scope: !4307)
!4329 = !DILocation(line: 2807, column: 16, scope: !4307)
!4330 = !DILocation(line: 2807, column: 29, scope: !4307)
!4331 = !DILocation(line: 2807, column: 32, scope: !4307)
!4332 = !DILocation(line: 2807, column: 14, scope: !4307)
!4333 = !DILocation(line: 2808, column: 5, scope: !4307)
!4334 = !DILocation(line: 2802, column: 34, scope: !4300)
!4335 = !DILocation(line: 2802, column: 5, scope: !4300)
!4336 = distinct !{!4336, !4305, !4337}
!4337 = !DILocation(line: 2808, column: 5, scope: !4297)
!4338 = !DILocation(line: 2809, column: 10, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2809, column: 9)
!4340 = !DILocation(line: 2809, column: 18, scope: !4339)
!4341 = !DILocation(line: 2809, column: 26, scope: !4339)
!4342 = !DILocation(line: 2809, column: 30, scope: !4339)
!4343 = !DILocation(line: 2809, column: 38, scope: !4339)
!4344 = !DILocation(line: 2809, column: 9, scope: !4238)
!4345 = !DILocalVariable(name: "i", scope: !4346, file: !3, line: 2812, type: !218)
!4346 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 2810, column: 7)
!4347 = !DILocation(line: 2812, column: 11, scope: !4346)
!4348 = !DILocation(line: 2817, column: 39, scope: !4346)
!4349 = !DILocation(line: 2817, column: 17, scope: !4346)
!4350 = !DILocation(line: 2817, column: 16, scope: !4346)
!4351 = !DILocation(line: 2818, column: 15, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 2818, column: 9)
!4353 = !DILocation(line: 2818, column: 14, scope: !4352)
!4354 = !DILocation(line: 2818, column: 19, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 2818, column: 9)
!4356 = !DILocation(line: 2818, column: 23, scope: !4355)
!4357 = !DILocation(line: 2818, column: 21, scope: !4355)
!4358 = !DILocation(line: 2818, column: 9, scope: !4352)
!4359 = !DILocation(line: 2819, column: 35, scope: !4355)
!4360 = !DILocation(line: 2819, column: 11, scope: !4355)
!4361 = !DILocation(line: 2819, column: 24, scope: !4355)
!4362 = !DILocation(line: 2819, column: 27, scope: !4355)
!4363 = !DILocation(line: 2819, column: 33, scope: !4355)
!4364 = !DILocation(line: 2818, column: 27, scope: !4355)
!4365 = !DILocation(line: 2818, column: 9, scope: !4355)
!4366 = distinct !{!4366, !4358, !4367}
!4367 = !DILocation(line: 2819, column: 35, scope: !4352)
!4368 = !DILocation(line: 2820, column: 7, scope: !4346)
!4369 = !DILocation(line: 2821, column: 33, scope: !4238)
!4370 = !DILocation(line: 2821, column: 46, scope: !4238)
!4371 = !DILocation(line: 2821, column: 62, scope: !4238)
!4372 = !DILocation(line: 2822, column: 7, scope: !4238)
!4373 = !DILocation(line: 2822, column: 14, scope: !4238)
!4374 = !DILocation(line: 2822, column: 32, scope: !4238)
!4375 = !DILocation(line: 2822, column: 45, scope: !4238)
!4376 = !DILocation(line: 2822, column: 46, scope: !4238)
!4377 = !DILocation(line: 2822, column: 50, scope: !4238)
!4378 = !DILocation(line: 2822, column: 56, scope: !4238)
!4379 = !DILocation(line: 2822, column: 72, scope: !4238)
!4380 = !DILocation(line: 2822, column: 55, scope: !4238)
!4381 = !DILocation(line: 2822, column: 77, scope: !4238)
!4382 = !DILocation(line: 2823, column: 7, scope: !4238)
!4383 = !DILocation(line: 2821, column: 7, scope: !4238)
!4384 = !DILocation(line: 2821, column: 6, scope: !4238)
!4385 = !DILocation(line: 2824, column: 37, scope: !4238)
!4386 = !DILocation(line: 2824, column: 51, scope: !4238)
!4387 = !DILocation(line: 2824, column: 53, scope: !4238)
!4388 = !DILocation(line: 2824, column: 67, scope: !4238)
!4389 = !DILocation(line: 2825, column: 7, scope: !4238)
!4390 = !DILocation(line: 2824, column: 7, scope: !4238)
!4391 = !DILocation(line: 2824, column: 6, scope: !4238)
!4392 = !DILocation(line: 2826, column: 10, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2826, column: 9)
!4394 = !DILocation(line: 2826, column: 12, scope: !4393)
!4395 = !DILocation(line: 2826, column: 43, scope: !4393)
!4396 = !DILocation(line: 2826, column: 47, scope: !4393)
!4397 = !DILocation(line: 2826, column: 49, scope: !4393)
!4398 = !DILocation(line: 2826, column: 9, scope: !4238)
!4399 = !DILocation(line: 2828, column: 15, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 2827, column: 7)
!4401 = !DILocation(line: 2829, column: 9, scope: !4400)
!4402 = !DILocation(line: 2831, column: 43, scope: !4238)
!4403 = !DILocation(line: 2831, column: 13, scope: !4238)
!4404 = !DILocation(line: 2831, column: 12, scope: !4238)
!4405 = !DILocation(line: 2832, column: 52, scope: !4238)
!4406 = !DILocation(line: 2832, column: 20, scope: !4238)
!4407 = !DILocation(line: 2832, column: 19, scope: !4238)
!4408 = !DILocation(line: 2833, column: 11, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2833, column: 5)
!4410 = !DILocation(line: 2833, column: 10, scope: !4409)
!4411 = !DILocation(line: 2833, column: 15, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2833, column: 5)
!4413 = !DILocation(line: 2833, column: 29, scope: !4412)
!4414 = !DILocation(line: 2833, column: 43, scope: !4412)
!4415 = !DILocation(line: 2833, column: 17, scope: !4412)
!4416 = !DILocation(line: 2833, column: 5, scope: !4409)
!4417 = !DILocalVariable(name: "pixel", scope: !4418, file: !3, line: 2836, type: !813)
!4418 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2834, column: 5)
!4419 = !DILocation(line: 2836, column: 9, scope: !4418)
!4420 = !DILocalVariable(name: "alpha", scope: !4418, file: !3, line: 2839, type: !15)
!4421 = !DILocation(line: 2839, column: 9, scope: !4418)
!4422 = !DILocalVariable(name: "i", scope: !4418, file: !3, line: 2842, type: !218)
!4423 = !DILocation(line: 2842, column: 9, scope: !4418)
!4424 = !DILocalVariable(name: "j", scope: !4418, file: !3, line: 2845, type: !218)
!4425 = !DILocation(line: 2845, column: 9, scope: !4418)
!4426 = !DILocation(line: 2847, column: 13, scope: !4418)
!4427 = !DILocation(line: 2848, column: 11, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 2848, column: 11)
!4429 = !DILocation(line: 2848, column: 18, scope: !4428)
!4430 = !DILocation(line: 2848, column: 24, scope: !4428)
!4431 = !DILocation(line: 2848, column: 11, scope: !4418)
!4432 = !DILocation(line: 2850, column: 17, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2850, column: 11)
!4434 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 2849, column: 9)
!4435 = !DILocation(line: 2850, column: 16, scope: !4433)
!4436 = !DILocation(line: 2850, column: 21, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 2850, column: 11)
!4438 = !DILocation(line: 2850, column: 25, scope: !4437)
!4439 = !DILocation(line: 2850, column: 23, scope: !4437)
!4440 = !DILocation(line: 2850, column: 11, scope: !4433)
!4441 = !DILocation(line: 2852, column: 27, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 2851, column: 11)
!4443 = !DILocation(line: 2852, column: 40, scope: !4442)
!4444 = !DILocation(line: 2852, column: 43, scope: !4442)
!4445 = !DILocation(line: 2852, column: 49, scope: !4442)
!4446 = !DILocation(line: 2852, column: 65, scope: !4442)
!4447 = !DILocation(line: 2852, column: 48, scope: !4442)
!4448 = !DILocation(line: 2853, column: 15, scope: !4442)
!4449 = !DILocation(line: 2853, column: 22, scope: !4442)
!4450 = !DILocation(line: 2852, column: 71, scope: !4442)
!4451 = !DILocation(line: 2853, column: 30, scope: !4442)
!4452 = !DILocation(line: 2853, column: 29, scope: !4442)
!4453 = !DILocation(line: 2852, column: 14, scope: !4442)
!4454 = !DILocation(line: 2854, column: 19, scope: !4442)
!4455 = !DILocation(line: 2854, column: 32, scope: !4442)
!4456 = !DILocation(line: 2854, column: 35, scope: !4442)
!4457 = !DILocation(line: 2854, column: 18, scope: !4442)
!4458 = !DILocation(line: 2855, column: 24, scope: !4442)
!4459 = !DILocation(line: 2855, column: 30, scope: !4442)
!4460 = !DILocation(line: 2855, column: 29, scope: !4442)
!4461 = !DILocation(line: 2855, column: 19, scope: !4442)
!4462 = !DILocation(line: 2855, column: 22, scope: !4442)
!4463 = !DILocation(line: 2856, column: 26, scope: !4442)
!4464 = !DILocation(line: 2856, column: 32, scope: !4442)
!4465 = !DILocation(line: 2856, column: 31, scope: !4442)
!4466 = !DILocation(line: 2856, column: 19, scope: !4442)
!4467 = !DILocation(line: 2856, column: 24, scope: !4442)
!4468 = !DILocation(line: 2857, column: 25, scope: !4442)
!4469 = !DILocation(line: 2857, column: 31, scope: !4442)
!4470 = !DILocation(line: 2857, column: 30, scope: !4442)
!4471 = !DILocation(line: 2857, column: 19, scope: !4442)
!4472 = !DILocation(line: 2857, column: 23, scope: !4442)
!4473 = !DILocation(line: 2858, column: 28, scope: !4442)
!4474 = !DILocation(line: 2858, column: 34, scope: !4442)
!4475 = !DILocation(line: 2858, column: 33, scope: !4442)
!4476 = !DILocation(line: 2858, column: 19, scope: !4442)
!4477 = !DILocation(line: 2858, column: 26, scope: !4442)
!4478 = !DILocation(line: 2859, column: 11, scope: !4442)
!4479 = !DILocation(line: 2850, column: 29, scope: !4437)
!4480 = !DILocation(line: 2850, column: 11, scope: !4437)
!4481 = distinct !{!4481, !4440, !4482}
!4482 = !DILocation(line: 2859, column: 11, scope: !4433)
!4483 = !DILocation(line: 2860, column: 11, scope: !4434)
!4484 = !DILocation(line: 2861, column: 11, scope: !4434)
!4485 = !DILocation(line: 2862, column: 11, scope: !4434)
!4486 = !DILocation(line: 2863, column: 11, scope: !4434)
!4487 = !DILocation(line: 2864, column: 16, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 2864, column: 15)
!4489 = !DILocation(line: 2864, column: 23, scope: !4488)
!4490 = !DILocation(line: 2864, column: 34, scope: !4488)
!4491 = !DILocation(line: 2864, column: 53, scope: !4488)
!4492 = !DILocation(line: 2865, column: 16, scope: !4488)
!4493 = !DILocation(line: 2865, column: 30, scope: !4488)
!4494 = !DILocation(line: 2865, column: 41, scope: !4488)
!4495 = !DILocation(line: 2864, column: 15, scope: !4434)
!4496 = !DILocation(line: 2867, column: 21, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2867, column: 15)
!4498 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 2866, column: 13)
!4499 = !DILocation(line: 2867, column: 20, scope: !4497)
!4500 = !DILocation(line: 2867, column: 25, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 2867, column: 15)
!4502 = !DILocation(line: 2867, column: 29, scope: !4501)
!4503 = !DILocation(line: 2867, column: 27, scope: !4501)
!4504 = !DILocation(line: 2867, column: 15, scope: !4497)
!4505 = !DILocation(line: 2869, column: 31, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 2868, column: 15)
!4507 = !DILocation(line: 2869, column: 44, scope: !4506)
!4508 = !DILocation(line: 2869, column: 47, scope: !4506)
!4509 = !DILocation(line: 2869, column: 53, scope: !4506)
!4510 = !DILocation(line: 2869, column: 69, scope: !4506)
!4511 = !DILocation(line: 2869, column: 52, scope: !4506)
!4512 = !DILocation(line: 2870, column: 19, scope: !4506)
!4513 = !DILocation(line: 2870, column: 26, scope: !4506)
!4514 = !DILocation(line: 2869, column: 75, scope: !4506)
!4515 = !DILocation(line: 2870, column: 34, scope: !4506)
!4516 = !DILocation(line: 2870, column: 33, scope: !4506)
!4517 = !DILocation(line: 2869, column: 18, scope: !4506)
!4518 = !DILocation(line: 2871, column: 23, scope: !4506)
!4519 = !DILocation(line: 2871, column: 36, scope: !4506)
!4520 = !DILocation(line: 2871, column: 39, scope: !4506)
!4521 = !DILocation(line: 2871, column: 22, scope: !4506)
!4522 = !DILocation(line: 2872, column: 30, scope: !4506)
!4523 = !DILocation(line: 2872, column: 36, scope: !4506)
!4524 = !DILocation(line: 2872, column: 35, scope: !4506)
!4525 = !DILocation(line: 2872, column: 23, scope: !4506)
!4526 = !DILocation(line: 2872, column: 28, scope: !4506)
!4527 = !DILocation(line: 2873, column: 15, scope: !4506)
!4528 = !DILocation(line: 2867, column: 33, scope: !4501)
!4529 = !DILocation(line: 2867, column: 15, scope: !4501)
!4530 = distinct !{!4530, !4504, !4531}
!4531 = !DILocation(line: 2873, column: 15, scope: !4497)
!4532 = !DILocation(line: 2874, column: 15, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2874, column: 15)
!4534 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2874, column: 15)
!4535 = !DILocation(line: 2874, column: 15, scope: !4534)
!4536 = !DILocation(line: 2875, column: 13, scope: !4498)
!4537 = !DILocation(line: 2876, column: 9, scope: !4434)
!4538 = !DILocalVariable(name: "gamma", scope: !4539, file: !3, line: 2880, type: !178)
!4539 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 2878, column: 9)
!4540 = !DILocation(line: 2880, column: 13, scope: !4539)
!4541 = !DILocation(line: 2882, column: 16, scope: !4539)
!4542 = !DILocation(line: 2883, column: 17, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 2883, column: 11)
!4544 = !DILocation(line: 2883, column: 16, scope: !4543)
!4545 = !DILocation(line: 2883, column: 21, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 2883, column: 11)
!4547 = !DILocation(line: 2883, column: 25, scope: !4546)
!4548 = !DILocation(line: 2883, column: 23, scope: !4546)
!4549 = !DILocation(line: 2883, column: 11, scope: !4543)
!4550 = !DILocation(line: 2885, column: 27, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 2884, column: 11)
!4552 = !DILocation(line: 2885, column: 40, scope: !4551)
!4553 = !DILocation(line: 2885, column: 43, scope: !4551)
!4554 = !DILocation(line: 2885, column: 49, scope: !4551)
!4555 = !DILocation(line: 2885, column: 65, scope: !4551)
!4556 = !DILocation(line: 2885, column: 48, scope: !4551)
!4557 = !DILocation(line: 2886, column: 15, scope: !4551)
!4558 = !DILocation(line: 2886, column: 22, scope: !4551)
!4559 = !DILocation(line: 2885, column: 71, scope: !4551)
!4560 = !DILocation(line: 2886, column: 30, scope: !4551)
!4561 = !DILocation(line: 2886, column: 29, scope: !4551)
!4562 = !DILocation(line: 2885, column: 14, scope: !4551)
!4563 = !DILocation(line: 2887, column: 19, scope: !4551)
!4564 = !DILocation(line: 2887, column: 32, scope: !4551)
!4565 = !DILocation(line: 2887, column: 35, scope: !4551)
!4566 = !DILocation(line: 2887, column: 41, scope: !4551)
!4567 = !DILocation(line: 2887, column: 55, scope: !4551)
!4568 = !DILocation(line: 2887, column: 54, scope: !4551)
!4569 = !DILocation(line: 2887, column: 18, scope: !4551)
!4570 = !DILocation(line: 2888, column: 24, scope: !4551)
!4571 = !DILocation(line: 2888, column: 30, scope: !4551)
!4572 = !DILocation(line: 2888, column: 29, scope: !4551)
!4573 = !DILocation(line: 2888, column: 19, scope: !4551)
!4574 = !DILocation(line: 2888, column: 22, scope: !4551)
!4575 = !DILocation(line: 2889, column: 26, scope: !4551)
!4576 = !DILocation(line: 2889, column: 32, scope: !4551)
!4577 = !DILocation(line: 2889, column: 31, scope: !4551)
!4578 = !DILocation(line: 2889, column: 19, scope: !4551)
!4579 = !DILocation(line: 2889, column: 24, scope: !4551)
!4580 = !DILocation(line: 2890, column: 25, scope: !4551)
!4581 = !DILocation(line: 2890, column: 31, scope: !4551)
!4582 = !DILocation(line: 2890, column: 30, scope: !4551)
!4583 = !DILocation(line: 2890, column: 19, scope: !4551)
!4584 = !DILocation(line: 2890, column: 23, scope: !4551)
!4585 = !DILocation(line: 2891, column: 28, scope: !4551)
!4586 = !DILocation(line: 2891, column: 41, scope: !4551)
!4587 = !DILocation(line: 2891, column: 44, scope: !4551)
!4588 = !DILocation(line: 2891, column: 51, scope: !4551)
!4589 = !DILocation(line: 2891, column: 50, scope: !4551)
!4590 = !DILocation(line: 2891, column: 19, scope: !4551)
!4591 = !DILocation(line: 2891, column: 26, scope: !4551)
!4592 = !DILocation(line: 2892, column: 20, scope: !4551)
!4593 = !DILocation(line: 2892, column: 18, scope: !4551)
!4594 = !DILocation(line: 2893, column: 11, scope: !4551)
!4595 = !DILocation(line: 2883, column: 29, scope: !4546)
!4596 = !DILocation(line: 2883, column: 11, scope: !4546)
!4597 = distinct !{!4597, !4549, !4598}
!4598 = !DILocation(line: 2893, column: 11, scope: !4543)
!4599 = !DILocation(line: 2895, column: 15, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 2895, column: 15)
!4601 = !DILocation(line: 2895, column: 21, scope: !4600)
!4602 = !DILocation(line: 2895, column: 15, scope: !4539)
!4603 = !DILocation(line: 2895, column: 34, scope: !4600)
!4604 = !DILocation(line: 2895, column: 28, scope: !4600)
!4605 = !DILocation(line: 2897, column: 39, scope: !4539)
!4606 = !DILocation(line: 2897, column: 17, scope: !4539)
!4607 = !DILocation(line: 2897, column: 16, scope: !4539)
!4608 = !DILocation(line: 2898, column: 11, scope: !4539)
!4609 = !DILocation(line: 2899, column: 11, scope: !4539)
!4610 = !DILocation(line: 2900, column: 11, scope: !4539)
!4611 = !DILocation(line: 2901, column: 11, scope: !4539)
!4612 = !DILocation(line: 2902, column: 16, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 2902, column: 15)
!4614 = !DILocation(line: 2902, column: 23, scope: !4613)
!4615 = !DILocation(line: 2902, column: 34, scope: !4613)
!4616 = !DILocation(line: 2902, column: 53, scope: !4613)
!4617 = !DILocation(line: 2903, column: 16, scope: !4613)
!4618 = !DILocation(line: 2903, column: 30, scope: !4613)
!4619 = !DILocation(line: 2903, column: 41, scope: !4613)
!4620 = !DILocation(line: 2902, column: 15, scope: !4539)
!4621 = !DILocation(line: 2905, column: 21, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 2905, column: 15)
!4623 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 2904, column: 13)
!4624 = !DILocation(line: 2905, column: 20, scope: !4622)
!4625 = !DILocation(line: 2905, column: 25, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 2905, column: 15)
!4627 = !DILocation(line: 2905, column: 29, scope: !4626)
!4628 = !DILocation(line: 2905, column: 27, scope: !4626)
!4629 = !DILocation(line: 2905, column: 15, scope: !4622)
!4630 = !DILocation(line: 2907, column: 31, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 2906, column: 15)
!4632 = !DILocation(line: 2907, column: 44, scope: !4631)
!4633 = !DILocation(line: 2907, column: 47, scope: !4631)
!4634 = !DILocation(line: 2907, column: 53, scope: !4631)
!4635 = !DILocation(line: 2907, column: 69, scope: !4631)
!4636 = !DILocation(line: 2907, column: 52, scope: !4631)
!4637 = !DILocation(line: 2908, column: 19, scope: !4631)
!4638 = !DILocation(line: 2908, column: 26, scope: !4631)
!4639 = !DILocation(line: 2907, column: 75, scope: !4631)
!4640 = !DILocation(line: 2908, column: 34, scope: !4631)
!4641 = !DILocation(line: 2908, column: 33, scope: !4631)
!4642 = !DILocation(line: 2907, column: 18, scope: !4631)
!4643 = !DILocation(line: 2909, column: 23, scope: !4631)
!4644 = !DILocation(line: 2909, column: 36, scope: !4631)
!4645 = !DILocation(line: 2909, column: 39, scope: !4631)
!4646 = !DILocation(line: 2909, column: 45, scope: !4631)
!4647 = !DILocation(line: 2909, column: 59, scope: !4631)
!4648 = !DILocation(line: 2909, column: 58, scope: !4631)
!4649 = !DILocation(line: 2909, column: 22, scope: !4631)
!4650 = !DILocation(line: 2910, column: 30, scope: !4631)
!4651 = !DILocation(line: 2910, column: 36, scope: !4631)
!4652 = !DILocation(line: 2910, column: 35, scope: !4631)
!4653 = !DILocation(line: 2910, column: 23, scope: !4631)
!4654 = !DILocation(line: 2910, column: 28, scope: !4631)
!4655 = !DILocation(line: 2911, column: 15, scope: !4631)
!4656 = !DILocation(line: 2905, column: 33, scope: !4626)
!4657 = !DILocation(line: 2905, column: 15, scope: !4626)
!4658 = distinct !{!4658, !4629, !4659}
!4659 = !DILocation(line: 2911, column: 15, scope: !4622)
!4660 = !DILocation(line: 2912, column: 15, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 2912, column: 15)
!4662 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 2912, column: 15)
!4663 = !DILocation(line: 2912, column: 15, scope: !4662)
!4664 = !DILocation(line: 2913, column: 13, scope: !4623)
!4665 = !DILocation(line: 2915, column: 12, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 2915, column: 11)
!4667 = !DILocation(line: 2915, column: 26, scope: !4666)
!4668 = !DILocation(line: 2915, column: 40, scope: !4666)
!4669 = !DILocation(line: 2915, column: 56, scope: !4666)
!4670 = !DILocation(line: 2916, column: 12, scope: !4666)
!4671 = !DILocation(line: 2916, column: 19, scope: !4666)
!4672 = !DILocation(line: 2916, column: 33, scope: !4666)
!4673 = !DILocation(line: 2915, column: 11, scope: !4418)
!4674 = !DILocation(line: 2918, column: 44, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 2917, column: 9)
!4676 = !DILocation(line: 2918, column: 60, scope: !4675)
!4677 = !DILocation(line: 2918, column: 51, scope: !4675)
!4678 = !DILocation(line: 2918, column: 34, scope: !4675)
!4679 = !DILocation(line: 2918, column: 76, scope: !4675)
!4680 = !DILocation(line: 2918, column: 67, scope: !4675)
!4681 = !DILocation(line: 2918, column: 80, scope: !4675)
!4682 = !DILocation(line: 2918, column: 24, scope: !4675)
!4683 = !DILocation(line: 2919, column: 17, scope: !4675)
!4684 = !DILocation(line: 2918, column: 13, scope: !4675)
!4685 = !DILocation(line: 2918, column: 12, scope: !4675)
!4686 = !DILocation(line: 2920, column: 25, scope: !4675)
!4687 = !DILocation(line: 2920, column: 38, scope: !4675)
!4688 = !DILocation(line: 2920, column: 40, scope: !4675)
!4689 = !DILocation(line: 2920, column: 39, scope: !4675)
!4690 = !DILocation(line: 2920, column: 47, scope: !4675)
!4691 = !DILocation(line: 2920, column: 53, scope: !4675)
!4692 = !DILocation(line: 2920, column: 69, scope: !4675)
!4693 = !DILocation(line: 2920, column: 52, scope: !4675)
!4694 = !DILocation(line: 2921, column: 13, scope: !4675)
!4695 = !DILocation(line: 2921, column: 20, scope: !4675)
!4696 = !DILocation(line: 2920, column: 75, scope: !4675)
!4697 = !DILocation(line: 2921, column: 28, scope: !4675)
!4698 = !DILocation(line: 2921, column: 27, scope: !4675)
!4699 = !DILocation(line: 2920, column: 12, scope: !4675)
!4700 = !DILocation(line: 2922, column: 11, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 2922, column: 11)
!4702 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 2922, column: 11)
!4703 = !DILocation(line: 2922, column: 11, scope: !4702)
!4704 = !DILocation(line: 2923, column: 9, scope: !4675)
!4705 = !DILocation(line: 2924, column: 8, scope: !4418)
!4706 = !DILocation(line: 2925, column: 5, scope: !4418)
!4707 = !DILocation(line: 2833, column: 53, scope: !4412)
!4708 = !DILocation(line: 2833, column: 5, scope: !4412)
!4709 = distinct !{!4709, !4416, !4710}
!4710 = !DILocation(line: 2925, column: 5, scope: !4409)
!4711 = !DILocation(line: 2926, column: 38, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2926, column: 9)
!4713 = !DILocation(line: 2926, column: 50, scope: !4712)
!4714 = !DILocation(line: 2926, column: 9, scope: !4712)
!4715 = !DILocation(line: 2926, column: 61, scope: !4712)
!4716 = !DILocation(line: 2926, column: 9, scope: !4238)
!4717 = !DILocation(line: 2927, column: 13, scope: !4712)
!4718 = !DILocation(line: 2927, column: 7, scope: !4712)
!4719 = !DILocation(line: 2928, column: 9, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2928, column: 9)
!4721 = !DILocation(line: 2928, column: 16, scope: !4720)
!4722 = !DILocation(line: 2928, column: 33, scope: !4720)
!4723 = !DILocation(line: 2928, column: 9, scope: !4238)
!4724 = !DILocalVariable(name: "proceed", scope: !4725, file: !3, line: 2931, type: !152)
!4725 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 2929, column: 7)
!4726 = !DILocation(line: 2931, column: 11, scope: !4725)
!4727 = !DILocation(line: 2936, column: 34, scope: !4725)
!4728 = !DILocation(line: 2936, column: 57, scope: !4725)
!4729 = !DILocation(line: 2936, column: 64, scope: !4725)
!4730 = !DILocation(line: 2936, column: 67, scope: !4725)
!4731 = !DILocation(line: 2936, column: 17, scope: !4725)
!4732 = !DILocation(line: 2936, column: 16, scope: !4725)
!4733 = !DILocation(line: 2937, column: 13, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 2937, column: 13)
!4735 = !DILocation(line: 2937, column: 21, scope: !4734)
!4736 = !DILocation(line: 2937, column: 13, scope: !4725)
!4737 = !DILocation(line: 2938, column: 17, scope: !4734)
!4738 = !DILocation(line: 2938, column: 11, scope: !4734)
!4739 = !DILocation(line: 2939, column: 7, scope: !4725)
!4740 = !DILocation(line: 2940, column: 3, scope: !4238)
!4741 = !DILocation(line: 2763, column: 48, scope: !4232)
!4742 = !DILocation(line: 2763, column: 3, scope: !4232)
!4743 = distinct !{!4743, !4236, !4744}
!4744 = !DILocation(line: 2940, column: 3, scope: !4229)
!4745 = !DILocation(line: 2941, column: 32, scope: !4130)
!4746 = !DILocation(line: 2941, column: 15, scope: !4130)
!4747 = !DILocation(line: 2941, column: 14, scope: !4130)
!4748 = !DILocation(line: 2942, column: 31, scope: !4130)
!4749 = !DILocation(line: 2942, column: 14, scope: !4130)
!4750 = !DILocation(line: 2942, column: 13, scope: !4130)
!4751 = !DILocation(line: 2943, column: 46, scope: !4130)
!4752 = !DILocation(line: 2943, column: 17, scope: !4130)
!4753 = !DILocation(line: 2943, column: 16, scope: !4130)
!4754 = !DILocation(line: 2944, column: 10, scope: !4130)
!4755 = !DILocation(line: 2944, column: 3, scope: !4130)
!4756 = !DILocation(line: 2945, column: 1, scope: !4130)
!4757 = distinct !DISubprogram(name: "SampleImage", scope: !3, file: !3, line: 3096, type: !2267, scopeLine: 3098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!4758 = !DILocalVariable(name: "image", arg: 1, scope: !4757, file: !3, line: 3096, type: !58)
!4759 = !DILocation(line: 3096, column: 46, scope: !4757)
!4760 = !DILocalVariable(name: "columns", arg: 2, scope: !4757, file: !3, line: 3096, type: !2269)
!4761 = !DILocation(line: 3096, column: 65, scope: !4757)
!4762 = !DILocalVariable(name: "rows", arg: 3, scope: !4757, file: !3, line: 3097, type: !2269)
!4763 = !DILocation(line: 3097, column: 16, scope: !4757)
!4764 = !DILocalVariable(name: "exception", arg: 4, scope: !4757, file: !3, line: 3097, type: !643)
!4765 = !DILocation(line: 3097, column: 36, scope: !4757)
!4766 = !DILocalVariable(name: "image_view", scope: !4757, file: !3, line: 3102, type: !2299)
!4767 = !DILocation(line: 3102, column: 6, scope: !4757)
!4768 = !DILocalVariable(name: "sample_view", scope: !4757, file: !3, line: 3103, type: !2299)
!4769 = !DILocation(line: 3103, column: 6, scope: !4757)
!4770 = !DILocalVariable(name: "sample_image", scope: !4757, file: !3, line: 3106, type: !803)
!4771 = !DILocation(line: 3106, column: 6, scope: !4757)
!4772 = !DILocalVariable(name: "status", scope: !4757, file: !3, line: 3109, type: !152)
!4773 = !DILocation(line: 3109, column: 5, scope: !4757)
!4774 = !DILocalVariable(name: "progress", scope: !4757, file: !3, line: 3112, type: !441)
!4775 = !DILocation(line: 3112, column: 5, scope: !4757)
!4776 = !DILocalVariable(name: "x", scope: !4757, file: !3, line: 3115, type: !218)
!4777 = !DILocation(line: 3115, column: 5, scope: !4757)
!4778 = !DILocalVariable(name: "x_offset", scope: !4757, file: !3, line: 3118, type: !810)
!4779 = !DILocation(line: 3118, column: 6, scope: !4757)
!4780 = !DILocalVariable(name: "y", scope: !4757, file: !3, line: 3119, type: !218)
!4781 = !DILocation(line: 3119, column: 5, scope: !4757)
!4782 = !DILocalVariable(name: "sample_offset", scope: !4757, file: !3, line: 3122, type: !2313)
!4783 = !DILocation(line: 3122, column: 5, scope: !4757)
!4784 = !DILocation(line: 3129, column: 7, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3129, column: 7)
!4786 = !DILocation(line: 3129, column: 14, scope: !4785)
!4787 = !DILocation(line: 3129, column: 20, scope: !4785)
!4788 = !DILocation(line: 3129, column: 7, scope: !4757)
!4789 = !DILocation(line: 3130, column: 61, scope: !4785)
!4790 = !DILocation(line: 3130, column: 68, scope: !4785)
!4791 = !DILocation(line: 3130, column: 12, scope: !4785)
!4792 = !DILocation(line: 3130, column: 5, scope: !4785)
!4793 = !DILocation(line: 3133, column: 8, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3133, column: 7)
!4795 = !DILocation(line: 3133, column: 16, scope: !4794)
!4796 = !DILocation(line: 3133, column: 22, scope: !4794)
!4797 = !DILocation(line: 3133, column: 26, scope: !4794)
!4798 = !DILocation(line: 3133, column: 31, scope: !4794)
!4799 = !DILocation(line: 3133, column: 7, scope: !4757)
!4800 = !DILocation(line: 3134, column: 5, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 3134, column: 5)
!4802 = !DILocation(line: 3135, column: 8, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3135, column: 7)
!4804 = !DILocation(line: 3135, column: 19, scope: !4803)
!4805 = !DILocation(line: 3135, column: 26, scope: !4803)
!4806 = !DILocation(line: 3135, column: 16, scope: !4803)
!4807 = !DILocation(line: 3135, column: 35, scope: !4803)
!4808 = !DILocation(line: 3135, column: 39, scope: !4803)
!4809 = !DILocation(line: 3135, column: 47, scope: !4803)
!4810 = !DILocation(line: 3135, column: 54, scope: !4803)
!4811 = !DILocation(line: 3135, column: 44, scope: !4803)
!4812 = !DILocation(line: 3135, column: 7, scope: !4757)
!4813 = !DILocation(line: 3136, column: 23, scope: !4803)
!4814 = !DILocation(line: 3136, column: 44, scope: !4803)
!4815 = !DILocation(line: 3136, column: 12, scope: !4803)
!4816 = !DILocation(line: 3136, column: 5, scope: !4803)
!4817 = !DILocation(line: 3137, column: 27, scope: !4757)
!4818 = !DILocation(line: 3137, column: 33, scope: !4757)
!4819 = !DILocation(line: 3137, column: 41, scope: !4757)
!4820 = !DILocation(line: 3137, column: 57, scope: !4757)
!4821 = !DILocation(line: 3137, column: 16, scope: !4757)
!4822 = !DILocation(line: 3137, column: 15, scope: !4757)
!4823 = !DILocation(line: 3138, column: 7, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3138, column: 7)
!4825 = !DILocation(line: 3138, column: 20, scope: !4824)
!4826 = !DILocation(line: 3138, column: 7, scope: !4757)
!4827 = !DILocation(line: 3139, column: 5, scope: !4824)
!4828 = !DILocation(line: 3144, column: 33, scope: !4757)
!4829 = !DILocation(line: 3144, column: 34, scope: !4757)
!4830 = !DILocation(line: 3144, column: 17, scope: !4757)
!4831 = !DILocation(line: 3144, column: 18, scope: !4757)
!4832 = !DILocalVariable(name: "value", scope: !4833, file: !3, line: 3147, type: !438)
!4833 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3145, column: 3)
!4834 = !DILocation(line: 3147, column: 8, scope: !4833)
!4835 = !DILocation(line: 3149, column: 28, scope: !4833)
!4836 = !DILocation(line: 3149, column: 11, scope: !4833)
!4837 = !DILocation(line: 3149, column: 10, scope: !4833)
!4838 = !DILocation(line: 3150, column: 9, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 3150, column: 9)
!4840 = !DILocation(line: 3150, column: 15, scope: !4839)
!4841 = !DILocation(line: 3150, column: 9, scope: !4833)
!4842 = !DILocalVariable(name: "geometry_info", scope: !4843, file: !3, line: 3153, type: !4844)
!4843 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 3151, column: 7)
!4844 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !227, line: 112, baseType: !4845)
!4845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !227, line: 104, size: 320, elements: !4846)
!4846 = !{!4847, !4848, !4849, !4850, !4851}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !4845, file: !227, line: 107, baseType: !178, size: 64)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !4845, file: !227, line: 108, baseType: !178, size: 64, offset: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !4845, file: !227, line: 109, baseType: !178, size: 64, offset: 128)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !4845, file: !227, line: 110, baseType: !178, size: 64, offset: 192)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !4845, file: !227, line: 111, baseType: !178, size: 64, offset: 256)
!4852 = !DILocation(line: 3153, column: 11, scope: !4843)
!4853 = !DILocalVariable(name: "flags", scope: !4843, file: !3, line: 3155, type: !3152)
!4854 = !DILocation(line: 3155, column: 11, scope: !4843)
!4855 = !DILocation(line: 3157, column: 30, scope: !4843)
!4856 = !DILocation(line: 3157, column: 16, scope: !4843)
!4857 = !DILocation(line: 3158, column: 29, scope: !4843)
!4858 = !DILocation(line: 3158, column: 15, scope: !4843)
!4859 = !DILocation(line: 3158, column: 14, scope: !4843)
!4860 = !DILocation(line: 3159, column: 55, scope: !4843)
!4861 = !DILocation(line: 3159, column: 58, scope: !4843)
!4862 = !DILocation(line: 3159, column: 64, scope: !4843)
!4863 = !DILocation(line: 3159, column: 39, scope: !4843)
!4864 = !DILocation(line: 3159, column: 40, scope: !4843)
!4865 = !DILocation(line: 3159, column: 23, scope: !4843)
!4866 = !DILocation(line: 3159, column: 24, scope: !4843)
!4867 = !DILocation(line: 3160, column: 14, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 3160, column: 13)
!4869 = !DILocation(line: 3160, column: 20, scope: !4868)
!4870 = !DILocation(line: 3160, column: 34, scope: !4868)
!4871 = !DILocation(line: 3160, column: 13, scope: !4843)
!4872 = !DILocation(line: 3161, column: 41, scope: !4868)
!4873 = !DILocation(line: 3161, column: 46, scope: !4868)
!4874 = !DILocation(line: 3161, column: 52, scope: !4868)
!4875 = !DILocation(line: 3161, column: 25, scope: !4868)
!4876 = !DILocation(line: 3161, column: 26, scope: !4868)
!4877 = !DILocation(line: 3161, column: 11, scope: !4868)
!4878 = !DILocation(line: 3162, column: 7, scope: !4843)
!4879 = !DILocation(line: 3167, column: 54, scope: !4757)
!4880 = !DILocation(line: 3167, column: 68, scope: !4757)
!4881 = !DILocation(line: 3167, column: 24, scope: !4757)
!4882 = !DILocation(line: 3167, column: 12, scope: !4757)
!4883 = !DILocation(line: 3167, column: 11, scope: !4757)
!4884 = !DILocation(line: 3169, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3169, column: 7)
!4886 = !DILocation(line: 3169, column: 16, scope: !4885)
!4887 = !DILocation(line: 3169, column: 7, scope: !4757)
!4888 = !DILocation(line: 3171, column: 33, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 3170, column: 5)
!4890 = !DILocation(line: 3171, column: 20, scope: !4889)
!4891 = !DILocation(line: 3171, column: 19, scope: !4889)
!4892 = !DILocation(line: 3172, column: 7, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3172, column: 7)
!4894 = !DILocation(line: 3174, column: 9, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3174, column: 3)
!4896 = !DILocation(line: 3174, column: 8, scope: !4895)
!4897 = !DILocation(line: 3174, column: 13, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3174, column: 3)
!4899 = !DILocation(line: 3174, column: 27, scope: !4898)
!4900 = !DILocation(line: 3174, column: 41, scope: !4898)
!4901 = !DILocation(line: 3174, column: 15, scope: !4898)
!4902 = !DILocation(line: 3174, column: 3, scope: !4895)
!4903 = !DILocation(line: 3175, column: 39, scope: !4898)
!4904 = !DILocation(line: 3175, column: 30, scope: !4898)
!4905 = !DILocation(line: 3175, column: 55, scope: !4898)
!4906 = !DILocation(line: 3175, column: 40, scope: !4898)
!4907 = !DILocation(line: 3175, column: 58, scope: !4898)
!4908 = !DILocation(line: 3175, column: 65, scope: !4898)
!4909 = !DILocation(line: 3175, column: 57, scope: !4898)
!4910 = !DILocation(line: 3176, column: 51, scope: !4898)
!4911 = !DILocation(line: 3176, column: 65, scope: !4898)
!4912 = !DILocation(line: 3175, column: 73, scope: !4898)
!4913 = !DILocation(line: 3175, column: 17, scope: !4898)
!4914 = !DILocation(line: 3175, column: 5, scope: !4898)
!4915 = !DILocation(line: 3175, column: 14, scope: !4898)
!4916 = !DILocation(line: 3175, column: 16, scope: !4898)
!4917 = !DILocation(line: 3174, column: 51, scope: !4898)
!4918 = !DILocation(line: 3174, column: 3, scope: !4898)
!4919 = distinct !{!4919, !4902, !4920}
!4920 = !DILocation(line: 3176, column: 72, scope: !4895)
!4921 = !DILocation(line: 3180, column: 9, scope: !4757)
!4922 = !DILocation(line: 3181, column: 11, scope: !4757)
!4923 = !DILocation(line: 3182, column: 38, scope: !4757)
!4924 = !DILocation(line: 3182, column: 44, scope: !4757)
!4925 = !DILocation(line: 3182, column: 14, scope: !4757)
!4926 = !DILocation(line: 3182, column: 13, scope: !4757)
!4927 = !DILocation(line: 3183, column: 41, scope: !4757)
!4928 = !DILocation(line: 3183, column: 54, scope: !4757)
!4929 = !DILocation(line: 3183, column: 15, scope: !4757)
!4930 = !DILocation(line: 3183, column: 14, scope: !4757)
!4931 = !DILocation(line: 3188, column: 9, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3188, column: 3)
!4933 = !DILocation(line: 3188, column: 8, scope: !4932)
!4934 = !DILocation(line: 3188, column: 13, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 3188, column: 3)
!4936 = !DILocation(line: 3188, column: 27, scope: !4935)
!4937 = !DILocation(line: 3188, column: 41, scope: !4935)
!4938 = !DILocation(line: 3188, column: 15, scope: !4935)
!4939 = !DILocation(line: 3188, column: 3, scope: !4932)
!4940 = !DILocalVariable(name: "indexes", scope: !4941, file: !3, line: 3191, type: !2798)
!4941 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 3189, column: 3)
!4942 = !DILocation(line: 3191, column: 17, scope: !4941)
!4943 = !DILocalVariable(name: "p", scope: !4941, file: !3, line: 3194, type: !2801)
!4944 = !DILocation(line: 3194, column: 17, scope: !4941)
!4945 = !DILocalVariable(name: "sample_indexes", scope: !4941, file: !3, line: 3197, type: !2420)
!4946 = !DILocation(line: 3197, column: 17, scope: !4941)
!4947 = !DILocalVariable(name: "q", scope: !4941, file: !3, line: 3200, type: !2423)
!4948 = !DILocation(line: 3200, column: 17, scope: !4941)
!4949 = !DILocalVariable(name: "x", scope: !4941, file: !3, line: 3203, type: !218)
!4950 = !DILocation(line: 3203, column: 7, scope: !4941)
!4951 = !DILocalVariable(name: "y_offset", scope: !4941, file: !3, line: 3206, type: !218)
!4952 = !DILocation(line: 3206, column: 7, scope: !4941)
!4953 = !DILocation(line: 3208, column: 9, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3208, column: 9)
!4955 = !DILocation(line: 3208, column: 16, scope: !4954)
!4956 = !DILocation(line: 3208, column: 9, scope: !4941)
!4957 = !DILocation(line: 3209, column: 7, scope: !4954)
!4958 = !DILocation(line: 3210, column: 36, scope: !4941)
!4959 = !DILocation(line: 3210, column: 27, scope: !4941)
!4960 = !DILocation(line: 3210, column: 52, scope: !4941)
!4961 = !DILocation(line: 3210, column: 37, scope: !4941)
!4962 = !DILocation(line: 3210, column: 55, scope: !4941)
!4963 = !DILocation(line: 3210, column: 62, scope: !4941)
!4964 = !DILocation(line: 3210, column: 54, scope: !4941)
!4965 = !DILocation(line: 3211, column: 48, scope: !4941)
!4966 = !DILocation(line: 3211, column: 62, scope: !4941)
!4967 = !DILocation(line: 3210, column: 67, scope: !4941)
!4968 = !DILocation(line: 3210, column: 14, scope: !4941)
!4969 = !DILocation(line: 3210, column: 13, scope: !4941)
!4970 = !DILocation(line: 3212, column: 33, scope: !4941)
!4971 = !DILocation(line: 3212, column: 46, scope: !4941)
!4972 = !DILocation(line: 3212, column: 55, scope: !4941)
!4973 = !DILocation(line: 3212, column: 62, scope: !4941)
!4974 = !DILocation(line: 3213, column: 7, scope: !4941)
!4975 = !DILocation(line: 3212, column: 7, scope: !4941)
!4976 = !DILocation(line: 3212, column: 6, scope: !4941)
!4977 = !DILocation(line: 3214, column: 37, scope: !4941)
!4978 = !DILocation(line: 3214, column: 51, scope: !4941)
!4979 = !DILocation(line: 3214, column: 53, scope: !4941)
!4980 = !DILocation(line: 3214, column: 67, scope: !4941)
!4981 = !DILocation(line: 3215, column: 7, scope: !4941)
!4982 = !DILocation(line: 3214, column: 7, scope: !4941)
!4983 = !DILocation(line: 3214, column: 6, scope: !4941)
!4984 = !DILocation(line: 3216, column: 10, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3216, column: 9)
!4986 = !DILocation(line: 3216, column: 12, scope: !4985)
!4987 = !DILocation(line: 3216, column: 43, scope: !4985)
!4988 = !DILocation(line: 3216, column: 47, scope: !4985)
!4989 = !DILocation(line: 3216, column: 49, scope: !4985)
!4990 = !DILocation(line: 3216, column: 9, scope: !4941)
!4991 = !DILocation(line: 3218, column: 15, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 3217, column: 7)
!4993 = !DILocation(line: 3219, column: 9, scope: !4992)
!4994 = !DILocation(line: 3221, column: 45, scope: !4941)
!4995 = !DILocation(line: 3221, column: 13, scope: !4941)
!4996 = !DILocation(line: 3221, column: 12, scope: !4941)
!4997 = !DILocation(line: 3222, column: 52, scope: !4941)
!4998 = !DILocation(line: 3222, column: 20, scope: !4941)
!4999 = !DILocation(line: 3222, column: 19, scope: !4941)
!5000 = !DILocation(line: 3226, column: 11, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3226, column: 5)
!5002 = !DILocation(line: 3226, column: 10, scope: !5001)
!5003 = !DILocation(line: 3226, column: 15, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 3226, column: 5)
!5005 = !DILocation(line: 3226, column: 29, scope: !5004)
!5006 = !DILocation(line: 3226, column: 43, scope: !5004)
!5007 = !DILocation(line: 3226, column: 17, scope: !5004)
!5008 = !DILocation(line: 3226, column: 5, scope: !5001)
!5009 = !DILocation(line: 3227, column: 9, scope: !5004)
!5010 = !DILocation(line: 3227, column: 12, scope: !5004)
!5011 = !DILocation(line: 3227, column: 14, scope: !5004)
!5012 = !DILocation(line: 3227, column: 23, scope: !5004)
!5013 = !DILocation(line: 3227, column: 7, scope: !5004)
!5014 = !DILocation(line: 3226, column: 53, scope: !5004)
!5015 = !DILocation(line: 3226, column: 5, scope: !5004)
!5016 = distinct !{!5016, !5008, !5017}
!5017 = !DILocation(line: 3227, column: 25, scope: !5001)
!5018 = !DILocation(line: 3228, column: 10, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3228, column: 9)
!5020 = !DILocation(line: 3228, column: 17, scope: !5019)
!5021 = !DILocation(line: 3228, column: 31, scope: !5019)
!5022 = !DILocation(line: 3228, column: 47, scope: !5019)
!5023 = !DILocation(line: 3229, column: 10, scope: !5019)
!5024 = !DILocation(line: 3229, column: 17, scope: !5019)
!5025 = !DILocation(line: 3229, column: 28, scope: !5019)
!5026 = !DILocation(line: 3228, column: 9, scope: !4941)
!5027 = !DILocation(line: 3230, column: 13, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3230, column: 7)
!5029 = !DILocation(line: 3230, column: 12, scope: !5028)
!5030 = !DILocation(line: 3230, column: 17, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 3230, column: 7)
!5032 = !DILocation(line: 3230, column: 31, scope: !5031)
!5033 = !DILocation(line: 3230, column: 45, scope: !5031)
!5034 = !DILocation(line: 3230, column: 19, scope: !5031)
!5035 = !DILocation(line: 3230, column: 7, scope: !5028)
!5036 = !DILocation(line: 3231, column: 9, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 3231, column: 9)
!5038 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3231, column: 9)
!5039 = !DILocation(line: 3231, column: 9, scope: !5038)
!5040 = !DILocation(line: 3230, column: 55, scope: !5031)
!5041 = !DILocation(line: 3230, column: 7, scope: !5031)
!5042 = distinct !{!5042, !5035, !5043}
!5043 = !DILocation(line: 3231, column: 9, scope: !5028)
!5044 = !DILocation(line: 3232, column: 38, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3232, column: 9)
!5046 = !DILocation(line: 3232, column: 50, scope: !5045)
!5047 = !DILocation(line: 3232, column: 9, scope: !5045)
!5048 = !DILocation(line: 3232, column: 61, scope: !5045)
!5049 = !DILocation(line: 3232, column: 9, scope: !4941)
!5050 = !DILocation(line: 3233, column: 13, scope: !5045)
!5051 = !DILocation(line: 3233, column: 7, scope: !5045)
!5052 = !DILocation(line: 3234, column: 9, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3234, column: 9)
!5054 = !DILocation(line: 3234, column: 16, scope: !5053)
!5055 = !DILocation(line: 3234, column: 33, scope: !5053)
!5056 = !DILocation(line: 3234, column: 9, scope: !4941)
!5057 = !DILocalVariable(name: "proceed", scope: !5058, file: !3, line: 3237, type: !152)
!5058 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 3235, column: 7)
!5059 = !DILocation(line: 3237, column: 11, scope: !5058)
!5060 = !DILocation(line: 3242, column: 34, scope: !5058)
!5061 = !DILocation(line: 3242, column: 63, scope: !5058)
!5062 = !DILocation(line: 3242, column: 66, scope: !5058)
!5063 = !DILocation(line: 3242, column: 73, scope: !5058)
!5064 = !DILocation(line: 3242, column: 17, scope: !5058)
!5065 = !DILocation(line: 3242, column: 16, scope: !5058)
!5066 = !DILocation(line: 3243, column: 13, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 3243, column: 13)
!5068 = !DILocation(line: 3243, column: 21, scope: !5067)
!5069 = !DILocation(line: 3243, column: 13, scope: !5058)
!5070 = !DILocation(line: 3244, column: 17, scope: !5067)
!5071 = !DILocation(line: 3244, column: 11, scope: !5067)
!5072 = !DILocation(line: 3245, column: 7, scope: !5058)
!5073 = !DILocation(line: 3246, column: 3, scope: !4941)
!5074 = !DILocation(line: 3188, column: 48, scope: !4935)
!5075 = !DILocation(line: 3188, column: 3, scope: !4935)
!5076 = distinct !{!5076, !4939, !5077}
!5077 = !DILocation(line: 3246, column: 3, scope: !4932)
!5078 = !DILocation(line: 3247, column: 31, scope: !4757)
!5079 = !DILocation(line: 3247, column: 14, scope: !4757)
!5080 = !DILocation(line: 3247, column: 13, scope: !4757)
!5081 = !DILocation(line: 3248, column: 32, scope: !4757)
!5082 = !DILocation(line: 3248, column: 15, scope: !4757)
!5083 = !DILocation(line: 3248, column: 14, scope: !4757)
!5084 = !DILocation(line: 3249, column: 47, scope: !4757)
!5085 = !DILocation(line: 3249, column: 24, scope: !4757)
!5086 = !DILocation(line: 3249, column: 12, scope: !4757)
!5087 = !DILocation(line: 3249, column: 11, scope: !4757)
!5088 = !DILocation(line: 3250, column: 22, scope: !4757)
!5089 = !DILocation(line: 3250, column: 29, scope: !4757)
!5090 = !DILocation(line: 3250, column: 3, scope: !4757)
!5091 = !DILocation(line: 3250, column: 17, scope: !4757)
!5092 = !DILocation(line: 3250, column: 21, scope: !4757)
!5093 = !DILocation(line: 3251, column: 7, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3251, column: 7)
!5095 = !DILocation(line: 3251, column: 14, scope: !5094)
!5096 = !DILocation(line: 3251, column: 7, scope: !4757)
!5097 = !DILocation(line: 3252, column: 31, scope: !5094)
!5098 = !DILocation(line: 3252, column: 18, scope: !5094)
!5099 = !DILocation(line: 3252, column: 17, scope: !5094)
!5100 = !DILocation(line: 3252, column: 5, scope: !5094)
!5101 = !DILocation(line: 3253, column: 10, scope: !4757)
!5102 = !DILocation(line: 3253, column: 3, scope: !4757)
!5103 = !DILocation(line: 3254, column: 1, scope: !4757)
!5104 = distinct !DISubprogram(name: "ScaleImage", scope: !3, file: !3, line: 3285, type: !2267, scopeLine: 3287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!5105 = !DILocalVariable(name: "image", arg: 1, scope: !5104, file: !3, line: 3285, type: !58)
!5106 = !DILocation(line: 3285, column: 45, scope: !5104)
!5107 = !DILocalVariable(name: "columns", arg: 2, scope: !5104, file: !3, line: 3285, type: !2269)
!5108 = !DILocation(line: 3285, column: 64, scope: !5104)
!5109 = !DILocalVariable(name: "rows", arg: 3, scope: !5104, file: !3, line: 3286, type: !2269)
!5110 = !DILocation(line: 3286, column: 16, scope: !5104)
!5111 = !DILocalVariable(name: "exception", arg: 4, scope: !5104, file: !3, line: 3286, type: !643)
!5112 = !DILocation(line: 3286, column: 36, scope: !5104)
!5113 = !DILocalVariable(name: "image_view", scope: !5104, file: !3, line: 3291, type: !2299)
!5114 = !DILocation(line: 3291, column: 6, scope: !5104)
!5115 = !DILocalVariable(name: "scale_view", scope: !5104, file: !3, line: 3292, type: !2299)
!5116 = !DILocation(line: 3292, column: 6, scope: !5104)
!5117 = !DILocalVariable(name: "scale_image", scope: !5104, file: !3, line: 3295, type: !803)
!5118 = !DILocation(line: 3295, column: 6, scope: !5104)
!5119 = !DILocalVariable(name: "next_column", scope: !5104, file: !3, line: 3298, type: !152)
!5120 = !DILocation(line: 3298, column: 5, scope: !5104)
!5121 = !DILocalVariable(name: "next_row", scope: !5104, file: !3, line: 3299, type: !152)
!5122 = !DILocation(line: 3299, column: 5, scope: !5104)
!5123 = !DILocalVariable(name: "proceed", scope: !5104, file: !3, line: 3300, type: !152)
!5124 = !DILocation(line: 3300, column: 5, scope: !5104)
!5125 = !DILocalVariable(name: "status", scope: !5104, file: !3, line: 3301, type: !152)
!5126 = !DILocation(line: 3301, column: 5, scope: !5104)
!5127 = !DILocalVariable(name: "pixel", scope: !5104, file: !3, line: 3304, type: !813)
!5128 = !DILocation(line: 3304, column: 5, scope: !5104)
!5129 = !DILocalVariable(name: "scale_scanline", scope: !5104, file: !3, line: 3305, type: !812)
!5130 = !DILocation(line: 3305, column: 6, scope: !5104)
!5131 = !DILocalVariable(name: "scanline", scope: !5104, file: !3, line: 3306, type: !812)
!5132 = !DILocation(line: 3306, column: 6, scope: !5104)
!5133 = !DILocalVariable(name: "x_vector", scope: !5104, file: !3, line: 3307, type: !812)
!5134 = !DILocation(line: 3307, column: 6, scope: !5104)
!5135 = !DILocalVariable(name: "y_vector", scope: !5104, file: !3, line: 3308, type: !812)
!5136 = !DILocation(line: 3308, column: 6, scope: !5104)
!5137 = !DILocalVariable(name: "zero", scope: !5104, file: !3, line: 3309, type: !813)
!5138 = !DILocation(line: 3309, column: 5, scope: !5104)
!5139 = !DILocalVariable(name: "alpha", scope: !5104, file: !3, line: 3312, type: !15)
!5140 = !DILocation(line: 3312, column: 5, scope: !5104)
!5141 = !DILocalVariable(name: "scale", scope: !5104, file: !3, line: 3315, type: !2313)
!5142 = !DILocation(line: 3315, column: 5, scope: !5104)
!5143 = !DILocalVariable(name: "span", scope: !5104, file: !3, line: 3316, type: !2313)
!5144 = !DILocation(line: 3316, column: 5, scope: !5104)
!5145 = !DILocalVariable(name: "i", scope: !5104, file: !3, line: 3319, type: !218)
!5146 = !DILocation(line: 3319, column: 5, scope: !5104)
!5147 = !DILocalVariable(name: "number_rows", scope: !5104, file: !3, line: 3322, type: !218)
!5148 = !DILocation(line: 3322, column: 5, scope: !5104)
!5149 = !DILocalVariable(name: "y", scope: !5104, file: !3, line: 3323, type: !218)
!5150 = !DILocation(line: 3323, column: 5, scope: !5104)
!5151 = !DILocation(line: 3330, column: 7, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3330, column: 7)
!5153 = !DILocation(line: 3330, column: 14, scope: !5152)
!5154 = !DILocation(line: 3330, column: 20, scope: !5152)
!5155 = !DILocation(line: 3330, column: 7, scope: !5104)
!5156 = !DILocation(line: 3331, column: 61, scope: !5152)
!5157 = !DILocation(line: 3331, column: 68, scope: !5152)
!5158 = !DILocation(line: 3331, column: 12, scope: !5152)
!5159 = !DILocation(line: 3331, column: 5, scope: !5152)
!5160 = !DILocation(line: 3334, column: 8, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3334, column: 7)
!5162 = !DILocation(line: 3334, column: 16, scope: !5161)
!5163 = !DILocation(line: 3334, column: 22, scope: !5161)
!5164 = !DILocation(line: 3334, column: 26, scope: !5161)
!5165 = !DILocation(line: 3334, column: 31, scope: !5161)
!5166 = !DILocation(line: 3334, column: 7, scope: !5104)
!5167 = !DILocation(line: 3335, column: 5, scope: !5161)
!5168 = !DILocation(line: 3336, column: 8, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3336, column: 7)
!5170 = !DILocation(line: 3336, column: 19, scope: !5169)
!5171 = !DILocation(line: 3336, column: 26, scope: !5169)
!5172 = !DILocation(line: 3336, column: 16, scope: !5169)
!5173 = !DILocation(line: 3336, column: 35, scope: !5169)
!5174 = !DILocation(line: 3336, column: 39, scope: !5169)
!5175 = !DILocation(line: 3336, column: 47, scope: !5169)
!5176 = !DILocation(line: 3336, column: 54, scope: !5169)
!5177 = !DILocation(line: 3336, column: 44, scope: !5169)
!5178 = !DILocation(line: 3336, column: 7, scope: !5104)
!5179 = !DILocation(line: 3337, column: 23, scope: !5169)
!5180 = !DILocation(line: 3337, column: 44, scope: !5169)
!5181 = !DILocation(line: 3337, column: 12, scope: !5169)
!5182 = !DILocation(line: 3337, column: 5, scope: !5169)
!5183 = !DILocation(line: 3338, column: 26, scope: !5104)
!5184 = !DILocation(line: 3338, column: 32, scope: !5104)
!5185 = !DILocation(line: 3338, column: 40, scope: !5104)
!5186 = !DILocation(line: 3338, column: 56, scope: !5104)
!5187 = !DILocation(line: 3338, column: 15, scope: !5104)
!5188 = !DILocation(line: 3338, column: 14, scope: !5104)
!5189 = !DILocation(line: 3339, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3339, column: 7)
!5191 = !DILocation(line: 3339, column: 19, scope: !5190)
!5192 = !DILocation(line: 3339, column: 7, scope: !5104)
!5193 = !DILocation(line: 3340, column: 5, scope: !5190)
!5194 = !DILocation(line: 3341, column: 28, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3341, column: 7)
!5196 = !DILocation(line: 3341, column: 7, scope: !5195)
!5197 = !DILocation(line: 3341, column: 53, scope: !5195)
!5198 = !DILocation(line: 3341, column: 7, scope: !5104)
!5199 = !DILocation(line: 3343, column: 24, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 3342, column: 5)
!5201 = !DILocation(line: 3343, column: 35, scope: !5200)
!5202 = !DILocation(line: 3343, column: 48, scope: !5200)
!5203 = !DILocation(line: 3343, column: 7, scope: !5200)
!5204 = !DILocation(line: 3344, column: 32, scope: !5200)
!5205 = !DILocation(line: 3344, column: 19, scope: !5200)
!5206 = !DILocation(line: 3344, column: 18, scope: !5200)
!5207 = !DILocation(line: 3345, column: 7, scope: !5200)
!5208 = !DILocation(line: 3350, column: 64, scope: !5104)
!5209 = !DILocation(line: 3350, column: 71, scope: !5104)
!5210 = !DILocation(line: 3350, column: 34, scope: !5104)
!5211 = !DILocation(line: 3350, column: 12, scope: !5104)
!5212 = !DILocation(line: 3350, column: 11, scope: !5104)
!5213 = !DILocation(line: 3352, column: 12, scope: !5104)
!5214 = !DILocation(line: 3352, column: 11, scope: !5104)
!5215 = !DILocation(line: 3353, column: 7, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3353, column: 7)
!5217 = !DILocation(line: 3353, column: 14, scope: !5216)
!5218 = !DILocation(line: 3353, column: 22, scope: !5216)
!5219 = !DILocation(line: 3353, column: 35, scope: !5216)
!5220 = !DILocation(line: 3353, column: 19, scope: !5216)
!5221 = !DILocation(line: 3353, column: 7, scope: !5104)
!5222 = !DILocation(line: 3354, column: 66, scope: !5216)
!5223 = !DILocation(line: 3354, column: 73, scope: !5216)
!5224 = !DILocation(line: 3354, column: 36, scope: !5216)
!5225 = !DILocation(line: 3354, column: 14, scope: !5216)
!5226 = !DILocation(line: 3354, column: 13, scope: !5216)
!5227 = !DILocation(line: 3354, column: 5, scope: !5216)
!5228 = !DILocation(line: 3357, column: 5, scope: !5104)
!5229 = !DILocation(line: 3357, column: 18, scope: !5104)
!5230 = !DILocation(line: 3356, column: 40, scope: !5104)
!5231 = !DILocation(line: 3356, column: 18, scope: !5104)
!5232 = !DILocation(line: 3356, column: 17, scope: !5104)
!5233 = !DILocation(line: 3358, column: 64, scope: !5104)
!5234 = !DILocation(line: 3358, column: 71, scope: !5104)
!5235 = !DILocation(line: 3358, column: 34, scope: !5104)
!5236 = !DILocation(line: 3358, column: 12, scope: !5104)
!5237 = !DILocation(line: 3358, column: 11, scope: !5104)
!5238 = !DILocation(line: 3360, column: 8, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3360, column: 7)
!5240 = !DILocation(line: 3360, column: 17, scope: !5239)
!5241 = !DILocation(line: 3360, column: 48, scope: !5239)
!5242 = !DILocation(line: 3361, column: 8, scope: !5239)
!5243 = !DILocation(line: 3361, column: 23, scope: !5239)
!5244 = !DILocation(line: 3361, column: 54, scope: !5239)
!5245 = !DILocation(line: 3362, column: 8, scope: !5239)
!5246 = !DILocation(line: 3362, column: 17, scope: !5239)
!5247 = !DILocation(line: 3362, column: 48, scope: !5239)
!5248 = !DILocation(line: 3363, column: 8, scope: !5239)
!5249 = !DILocation(line: 3363, column: 17, scope: !5239)
!5250 = !DILocation(line: 3360, column: 7, scope: !5104)
!5251 = !DILocation(line: 3365, column: 32, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 3364, column: 5)
!5253 = !DILocation(line: 3365, column: 19, scope: !5252)
!5254 = !DILocation(line: 3365, column: 18, scope: !5252)
!5255 = !DILocation(line: 3366, column: 7, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 3366, column: 7)
!5257 = !DILocation(line: 3371, column: 14, scope: !5104)
!5258 = !DILocation(line: 3372, column: 11, scope: !5104)
!5259 = !DILocation(line: 3373, column: 8, scope: !5104)
!5260 = !DILocation(line: 3373, column: 9, scope: !5104)
!5261 = !DILocation(line: 3374, column: 20, scope: !5104)
!5262 = !DILocation(line: 3374, column: 33, scope: !5104)
!5263 = !DILocation(line: 3374, column: 11, scope: !5104)
!5264 = !DILocation(line: 3374, column: 47, scope: !5104)
!5265 = !DILocation(line: 3374, column: 54, scope: !5104)
!5266 = !DILocation(line: 3374, column: 38, scope: !5104)
!5267 = !DILocation(line: 3374, column: 37, scope: !5104)
!5268 = !DILocation(line: 3374, column: 9, scope: !5104)
!5269 = !DILocation(line: 3374, column: 10, scope: !5104)
!5270 = !DILocation(line: 3375, column: 28, scope: !5104)
!5271 = !DILocation(line: 3375, column: 48, scope: !5104)
!5272 = !DILocation(line: 3375, column: 55, scope: !5104)
!5273 = !DILocation(line: 3375, column: 62, scope: !5104)
!5274 = !DILocation(line: 3375, column: 10, scope: !5104)
!5275 = !DILocation(line: 3377, column: 24, scope: !5104)
!5276 = !DILocation(line: 3377, column: 3, scope: !5104)
!5277 = !DILocation(line: 3378, column: 28, scope: !5104)
!5278 = !DILocation(line: 3378, column: 10, scope: !5104)
!5279 = !DILocation(line: 3379, column: 4, scope: !5104)
!5280 = !DILocation(line: 3380, column: 9, scope: !5104)
!5281 = !DILocation(line: 3381, column: 38, scope: !5104)
!5282 = !DILocation(line: 3381, column: 44, scope: !5104)
!5283 = !DILocation(line: 3381, column: 14, scope: !5104)
!5284 = !DILocation(line: 3381, column: 13, scope: !5104)
!5285 = !DILocation(line: 3382, column: 40, scope: !5104)
!5286 = !DILocation(line: 3382, column: 52, scope: !5104)
!5287 = !DILocation(line: 3382, column: 14, scope: !5104)
!5288 = !DILocation(line: 3382, column: 13, scope: !5104)
!5289 = !DILocation(line: 3383, column: 9, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3383, column: 3)
!5291 = !DILocation(line: 3383, column: 8, scope: !5290)
!5292 = !DILocation(line: 3383, column: 13, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 3383, column: 3)
!5294 = !DILocation(line: 3383, column: 27, scope: !5293)
!5295 = !DILocation(line: 3383, column: 40, scope: !5293)
!5296 = !DILocation(line: 3383, column: 15, scope: !5293)
!5297 = !DILocation(line: 3383, column: 3, scope: !5290)
!5298 = !DILocalVariable(name: "indexes", scope: !5299, file: !3, line: 3386, type: !2798)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 3384, column: 3)
!5300 = !DILocation(line: 3386, column: 17, scope: !5299)
!5301 = !DILocalVariable(name: "p", scope: !5299, file: !3, line: 3389, type: !2801)
!5302 = !DILocation(line: 3389, column: 17, scope: !5299)
!5303 = !DILocalVariable(name: "scale_indexes", scope: !5299, file: !3, line: 3392, type: !2420)
!5304 = !DILocation(line: 3392, column: 17, scope: !5299)
!5305 = !DILocalVariable(name: "s", scope: !5299, file: !3, line: 3395, type: !5306)
!5306 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !812)
!5307 = !DILocation(line: 3395, column: 17, scope: !5299)
!5308 = !DILocalVariable(name: "t", scope: !5299, file: !3, line: 3396, type: !5306)
!5309 = !DILocation(line: 3396, column: 17, scope: !5299)
!5310 = !DILocalVariable(name: "q", scope: !5299, file: !3, line: 3399, type: !2423)
!5311 = !DILocation(line: 3399, column: 17, scope: !5299)
!5312 = !DILocalVariable(name: "x", scope: !5299, file: !3, line: 3402, type: !218)
!5313 = !DILocation(line: 3402, column: 7, scope: !5299)
!5314 = !DILocation(line: 3404, column: 9, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3404, column: 9)
!5316 = !DILocation(line: 3404, column: 16, scope: !5315)
!5317 = !DILocation(line: 3404, column: 9, scope: !5299)
!5318 = !DILocation(line: 3405, column: 7, scope: !5315)
!5319 = !DILocation(line: 3406, column: 37, scope: !5299)
!5320 = !DILocation(line: 3406, column: 50, scope: !5299)
!5321 = !DILocation(line: 3406, column: 52, scope: !5299)
!5322 = !DILocation(line: 3406, column: 65, scope: !5299)
!5323 = !DILocation(line: 3407, column: 7, scope: !5299)
!5324 = !DILocation(line: 3406, column: 7, scope: !5299)
!5325 = !DILocation(line: 3406, column: 6, scope: !5299)
!5326 = !DILocation(line: 3408, column: 9, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3408, column: 9)
!5328 = !DILocation(line: 3408, column: 11, scope: !5327)
!5329 = !DILocation(line: 3408, column: 9, scope: !5299)
!5330 = !DILocation(line: 3410, column: 15, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 3409, column: 7)
!5332 = !DILocation(line: 3411, column: 9, scope: !5331)
!5333 = !DILocation(line: 3413, column: 10, scope: !5299)
!5334 = !DILocation(line: 3414, column: 51, scope: !5299)
!5335 = !DILocation(line: 3414, column: 19, scope: !5299)
!5336 = !DILocation(line: 3414, column: 18, scope: !5299)
!5337 = !DILocation(line: 3415, column: 9, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3415, column: 9)
!5339 = !DILocation(line: 3415, column: 22, scope: !5338)
!5340 = !DILocation(line: 3415, column: 30, scope: !5338)
!5341 = !DILocation(line: 3415, column: 37, scope: !5338)
!5342 = !DILocation(line: 3415, column: 27, scope: !5338)
!5343 = !DILocation(line: 3415, column: 9, scope: !5299)
!5344 = !DILocation(line: 3420, column: 37, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 3416, column: 7)
!5346 = !DILocation(line: 3420, column: 51, scope: !5345)
!5347 = !DILocation(line: 3420, column: 54, scope: !5345)
!5348 = !DILocation(line: 3420, column: 61, scope: !5345)
!5349 = !DILocation(line: 3421, column: 11, scope: !5345)
!5350 = !DILocation(line: 3420, column: 11, scope: !5345)
!5351 = !DILocation(line: 3420, column: 10, scope: !5345)
!5352 = !DILocation(line: 3422, column: 13, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 3422, column: 13)
!5354 = !DILocation(line: 3422, column: 15, scope: !5353)
!5355 = !DILocation(line: 3422, column: 13, scope: !5345)
!5356 = !DILocation(line: 3424, column: 19, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3423, column: 11)
!5358 = !DILocation(line: 3425, column: 13, scope: !5357)
!5359 = !DILocation(line: 3427, column: 47, scope: !5345)
!5360 = !DILocation(line: 3427, column: 17, scope: !5345)
!5361 = !DILocation(line: 3427, column: 16, scope: !5345)
!5362 = !DILocation(line: 3428, column: 15, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 3428, column: 9)
!5364 = !DILocation(line: 3428, column: 14, scope: !5363)
!5365 = !DILocation(line: 3428, column: 19, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 3428, column: 9)
!5367 = !DILocation(line: 3428, column: 33, scope: !5366)
!5368 = !DILocation(line: 3428, column: 40, scope: !5366)
!5369 = !DILocation(line: 3428, column: 21, scope: !5366)
!5370 = !DILocation(line: 3428, column: 9, scope: !5363)
!5371 = !DILocation(line: 3430, column: 15, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 3430, column: 15)
!5373 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 3429, column: 9)
!5374 = !DILocation(line: 3430, column: 22, scope: !5372)
!5375 = !DILocation(line: 3430, column: 28, scope: !5372)
!5376 = !DILocation(line: 3430, column: 15, scope: !5373)
!5377 = !DILocation(line: 3431, column: 32, scope: !5372)
!5378 = !DILocation(line: 3431, column: 31, scope: !5372)
!5379 = !DILocation(line: 3431, column: 19, scope: !5372)
!5380 = !DILocation(line: 3431, column: 18, scope: !5372)
!5381 = !DILocation(line: 3431, column: 13, scope: !5372)
!5382 = !DILocation(line: 3432, column: 45, scope: !5373)
!5383 = !DILocation(line: 3432, column: 51, scope: !5373)
!5384 = !DILocation(line: 3432, column: 50, scope: !5373)
!5385 = !DILocation(line: 3432, column: 11, scope: !5373)
!5386 = !DILocation(line: 3432, column: 20, scope: !5373)
!5387 = !DILocation(line: 3432, column: 23, scope: !5373)
!5388 = !DILocation(line: 3432, column: 26, scope: !5373)
!5389 = !DILocation(line: 3433, column: 47, scope: !5373)
!5390 = !DILocation(line: 3433, column: 53, scope: !5373)
!5391 = !DILocation(line: 3433, column: 52, scope: !5373)
!5392 = !DILocation(line: 3433, column: 11, scope: !5373)
!5393 = !DILocation(line: 3433, column: 20, scope: !5373)
!5394 = !DILocation(line: 3433, column: 23, scope: !5373)
!5395 = !DILocation(line: 3433, column: 28, scope: !5373)
!5396 = !DILocation(line: 3434, column: 46, scope: !5373)
!5397 = !DILocation(line: 3434, column: 52, scope: !5373)
!5398 = !DILocation(line: 3434, column: 51, scope: !5373)
!5399 = !DILocation(line: 3434, column: 11, scope: !5373)
!5400 = !DILocation(line: 3434, column: 20, scope: !5373)
!5401 = !DILocation(line: 3434, column: 23, scope: !5373)
!5402 = !DILocation(line: 3434, column: 27, scope: !5373)
!5403 = !DILocation(line: 3435, column: 15, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 3435, column: 15)
!5405 = !DILocation(line: 3435, column: 22, scope: !5404)
!5406 = !DILocation(line: 3435, column: 28, scope: !5404)
!5407 = !DILocation(line: 3435, column: 15, scope: !5373)
!5408 = !DILocation(line: 3436, column: 50, scope: !5404)
!5409 = !DILocation(line: 3436, column: 33, scope: !5404)
!5410 = !DILocation(line: 3436, column: 13, scope: !5404)
!5411 = !DILocation(line: 3436, column: 22, scope: !5404)
!5412 = !DILocation(line: 3436, column: 25, scope: !5404)
!5413 = !DILocation(line: 3436, column: 32, scope: !5404)
!5414 = !DILocation(line: 3437, column: 15, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 3437, column: 15)
!5416 = !DILocation(line: 3437, column: 23, scope: !5415)
!5417 = !DILocation(line: 3437, column: 15, scope: !5373)
!5418 = !DILocation(line: 3438, column: 49, scope: !5415)
!5419 = !DILocation(line: 3438, column: 55, scope: !5415)
!5420 = !DILocation(line: 3438, column: 54, scope: !5415)
!5421 = !DILocation(line: 3438, column: 13, scope: !5415)
!5422 = !DILocation(line: 3438, column: 22, scope: !5415)
!5423 = !DILocation(line: 3438, column: 25, scope: !5415)
!5424 = !DILocation(line: 3438, column: 30, scope: !5415)
!5425 = !DILocation(line: 3439, column: 12, scope: !5373)
!5426 = !DILocation(line: 3440, column: 9, scope: !5373)
!5427 = !DILocation(line: 3428, column: 50, scope: !5366)
!5428 = !DILocation(line: 3428, column: 9, scope: !5366)
!5429 = distinct !{!5429, !5370, !5430}
!5430 = !DILocation(line: 3440, column: 9, scope: !5363)
!5431 = !DILocation(line: 3441, column: 7, scope: !5345)
!5432 = !DILocation(line: 3447, column: 9, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 3443, column: 7)
!5434 = !DILocation(line: 3447, column: 22, scope: !5433)
!5435 = !DILocation(line: 3447, column: 31, scope: !5433)
!5436 = !DILocation(line: 3447, column: 24, scope: !5433)
!5437 = !DILocation(line: 3449, column: 16, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 3449, column: 15)
!5439 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 3448, column: 9)
!5440 = !DILocation(line: 3449, column: 25, scope: !5438)
!5441 = !DILocation(line: 3449, column: 41, scope: !5438)
!5442 = !DILocation(line: 3450, column: 16, scope: !5438)
!5443 = !DILocation(line: 3450, column: 40, scope: !5438)
!5444 = !DILocation(line: 3450, column: 47, scope: !5438)
!5445 = !DILocation(line: 3450, column: 28, scope: !5438)
!5446 = !DILocation(line: 3449, column: 15, scope: !5439)
!5447 = !DILocation(line: 3455, column: 43, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 3451, column: 13)
!5449 = !DILocation(line: 3455, column: 57, scope: !5448)
!5450 = !DILocation(line: 3455, column: 60, scope: !5448)
!5451 = !DILocation(line: 3455, column: 67, scope: !5448)
!5452 = !DILocation(line: 3456, column: 17, scope: !5448)
!5453 = !DILocation(line: 3455, column: 17, scope: !5448)
!5454 = !DILocation(line: 3455, column: 16, scope: !5448)
!5455 = !DILocation(line: 3457, column: 19, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 3457, column: 19)
!5457 = !DILocation(line: 3457, column: 21, scope: !5456)
!5458 = !DILocation(line: 3457, column: 19, scope: !5448)
!5459 = !DILocation(line: 3459, column: 25, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3458, column: 17)
!5461 = !DILocation(line: 3460, column: 19, scope: !5460)
!5462 = !DILocation(line: 3462, column: 53, scope: !5448)
!5463 = !DILocation(line: 3462, column: 23, scope: !5448)
!5464 = !DILocation(line: 3462, column: 22, scope: !5448)
!5465 = !DILocation(line: 3463, column: 21, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 3463, column: 15)
!5467 = !DILocation(line: 3463, column: 20, scope: !5466)
!5468 = !DILocation(line: 3463, column: 25, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 3463, column: 15)
!5470 = !DILocation(line: 3463, column: 39, scope: !5469)
!5471 = !DILocation(line: 3463, column: 46, scope: !5469)
!5472 = !DILocation(line: 3463, column: 27, scope: !5469)
!5473 = !DILocation(line: 3463, column: 15, scope: !5466)
!5474 = !DILocation(line: 3465, column: 21, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 3465, column: 21)
!5476 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 3464, column: 15)
!5477 = !DILocation(line: 3465, column: 28, scope: !5475)
!5478 = !DILocation(line: 3465, column: 34, scope: !5475)
!5479 = !DILocation(line: 3465, column: 21, scope: !5476)
!5480 = !DILocation(line: 3466, column: 38, scope: !5475)
!5481 = !DILocation(line: 3466, column: 37, scope: !5475)
!5482 = !DILocation(line: 3466, column: 25, scope: !5475)
!5483 = !DILocation(line: 3466, column: 24, scope: !5475)
!5484 = !DILocation(line: 3466, column: 19, scope: !5475)
!5485 = !DILocation(line: 3467, column: 51, scope: !5476)
!5486 = !DILocation(line: 3467, column: 57, scope: !5476)
!5487 = !DILocation(line: 3467, column: 56, scope: !5476)
!5488 = !DILocation(line: 3467, column: 17, scope: !5476)
!5489 = !DILocation(line: 3467, column: 26, scope: !5476)
!5490 = !DILocation(line: 3467, column: 29, scope: !5476)
!5491 = !DILocation(line: 3467, column: 32, scope: !5476)
!5492 = !DILocation(line: 3468, column: 53, scope: !5476)
!5493 = !DILocation(line: 3468, column: 59, scope: !5476)
!5494 = !DILocation(line: 3468, column: 58, scope: !5476)
!5495 = !DILocation(line: 3468, column: 17, scope: !5476)
!5496 = !DILocation(line: 3468, column: 26, scope: !5476)
!5497 = !DILocation(line: 3468, column: 29, scope: !5476)
!5498 = !DILocation(line: 3468, column: 34, scope: !5476)
!5499 = !DILocation(line: 3469, column: 52, scope: !5476)
!5500 = !DILocation(line: 3469, column: 58, scope: !5476)
!5501 = !DILocation(line: 3469, column: 57, scope: !5476)
!5502 = !DILocation(line: 3469, column: 17, scope: !5476)
!5503 = !DILocation(line: 3469, column: 26, scope: !5476)
!5504 = !DILocation(line: 3469, column: 29, scope: !5476)
!5505 = !DILocation(line: 3469, column: 33, scope: !5476)
!5506 = !DILocation(line: 3470, column: 21, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 3470, column: 21)
!5508 = !DILocation(line: 3470, column: 28, scope: !5507)
!5509 = !DILocation(line: 3470, column: 34, scope: !5507)
!5510 = !DILocation(line: 3470, column: 21, scope: !5476)
!5511 = !DILocation(line: 3471, column: 56, scope: !5507)
!5512 = !DILocation(line: 3471, column: 39, scope: !5507)
!5513 = !DILocation(line: 3471, column: 19, scope: !5507)
!5514 = !DILocation(line: 3471, column: 28, scope: !5507)
!5515 = !DILocation(line: 3471, column: 31, scope: !5507)
!5516 = !DILocation(line: 3471, column: 38, scope: !5507)
!5517 = !DILocation(line: 3472, column: 21, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 3472, column: 21)
!5519 = !DILocation(line: 3472, column: 29, scope: !5518)
!5520 = !DILocation(line: 3472, column: 21, scope: !5476)
!5521 = !DILocation(line: 3473, column: 55, scope: !5518)
!5522 = !DILocation(line: 3474, column: 21, scope: !5518)
!5523 = !DILocation(line: 3473, column: 60, scope: !5518)
!5524 = !DILocation(line: 3473, column: 19, scope: !5518)
!5525 = !DILocation(line: 3473, column: 28, scope: !5518)
!5526 = !DILocation(line: 3473, column: 31, scope: !5518)
!5527 = !DILocation(line: 3473, column: 36, scope: !5518)
!5528 = !DILocation(line: 3475, column: 18, scope: !5476)
!5529 = !DILocation(line: 3476, column: 15, scope: !5476)
!5530 = !DILocation(line: 3463, column: 56, scope: !5469)
!5531 = !DILocation(line: 3463, column: 15, scope: !5469)
!5532 = distinct !{!5532, !5473, !5533}
!5533 = !DILocation(line: 3476, column: 15, scope: !5466)
!5534 = !DILocation(line: 3477, column: 26, scope: !5448)
!5535 = !DILocation(line: 3478, column: 13, scope: !5448)
!5536 = !DILocation(line: 3479, column: 17, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 3479, column: 11)
!5538 = !DILocation(line: 3479, column: 16, scope: !5537)
!5539 = !DILocation(line: 3479, column: 21, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 3479, column: 11)
!5541 = !DILocation(line: 3479, column: 35, scope: !5540)
!5542 = !DILocation(line: 3479, column: 42, scope: !5540)
!5543 = !DILocation(line: 3479, column: 23, scope: !5540)
!5544 = !DILocation(line: 3479, column: 11, scope: !5537)
!5545 = !DILocation(line: 3481, column: 36, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 3480, column: 11)
!5547 = !DILocation(line: 3481, column: 38, scope: !5546)
!5548 = !DILocation(line: 3481, column: 47, scope: !5546)
!5549 = !DILocation(line: 3481, column: 50, scope: !5546)
!5550 = !DILocation(line: 3481, column: 37, scope: !5546)
!5551 = !DILocation(line: 3481, column: 13, scope: !5546)
!5552 = !DILocation(line: 3481, column: 22, scope: !5546)
!5553 = !DILocation(line: 3481, column: 25, scope: !5546)
!5554 = !DILocation(line: 3481, column: 28, scope: !5546)
!5555 = !DILocation(line: 3482, column: 38, scope: !5546)
!5556 = !DILocation(line: 3482, column: 40, scope: !5546)
!5557 = !DILocation(line: 3482, column: 49, scope: !5546)
!5558 = !DILocation(line: 3482, column: 52, scope: !5546)
!5559 = !DILocation(line: 3482, column: 39, scope: !5546)
!5560 = !DILocation(line: 3482, column: 13, scope: !5546)
!5561 = !DILocation(line: 3482, column: 22, scope: !5546)
!5562 = !DILocation(line: 3482, column: 25, scope: !5546)
!5563 = !DILocation(line: 3482, column: 30, scope: !5546)
!5564 = !DILocation(line: 3483, column: 37, scope: !5546)
!5565 = !DILocation(line: 3483, column: 39, scope: !5546)
!5566 = !DILocation(line: 3483, column: 48, scope: !5546)
!5567 = !DILocation(line: 3483, column: 51, scope: !5546)
!5568 = !DILocation(line: 3483, column: 38, scope: !5546)
!5569 = !DILocation(line: 3483, column: 13, scope: !5546)
!5570 = !DILocation(line: 3483, column: 22, scope: !5546)
!5571 = !DILocation(line: 3483, column: 25, scope: !5546)
!5572 = !DILocation(line: 3483, column: 29, scope: !5546)
!5573 = !DILocation(line: 3484, column: 17, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3484, column: 17)
!5575 = !DILocation(line: 3484, column: 30, scope: !5574)
!5576 = !DILocation(line: 3484, column: 36, scope: !5574)
!5577 = !DILocation(line: 3484, column: 17, scope: !5546)
!5578 = !DILocation(line: 3485, column: 42, scope: !5574)
!5579 = !DILocation(line: 3485, column: 44, scope: !5574)
!5580 = !DILocation(line: 3485, column: 53, scope: !5574)
!5581 = !DILocation(line: 3485, column: 56, scope: !5574)
!5582 = !DILocation(line: 3485, column: 43, scope: !5574)
!5583 = !DILocation(line: 3485, column: 15, scope: !5574)
!5584 = !DILocation(line: 3485, column: 24, scope: !5574)
!5585 = !DILocation(line: 3485, column: 27, scope: !5574)
!5586 = !DILocation(line: 3485, column: 34, scope: !5574)
!5587 = !DILocation(line: 3486, column: 17, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3486, column: 17)
!5589 = !DILocation(line: 3486, column: 31, scope: !5588)
!5590 = !DILocation(line: 3486, column: 17, scope: !5546)
!5591 = !DILocation(line: 3487, column: 40, scope: !5588)
!5592 = !DILocation(line: 3487, column: 42, scope: !5588)
!5593 = !DILocation(line: 3487, column: 51, scope: !5588)
!5594 = !DILocation(line: 3487, column: 54, scope: !5588)
!5595 = !DILocation(line: 3487, column: 41, scope: !5588)
!5596 = !DILocation(line: 3487, column: 15, scope: !5588)
!5597 = !DILocation(line: 3487, column: 24, scope: !5588)
!5598 = !DILocation(line: 3487, column: 27, scope: !5588)
!5599 = !DILocation(line: 3487, column: 32, scope: !5588)
!5600 = !DILocation(line: 3488, column: 11, scope: !5546)
!5601 = !DILocation(line: 3479, column: 52, scope: !5540)
!5602 = !DILocation(line: 3479, column: 11, scope: !5540)
!5603 = distinct !{!5603, !5544, !5604}
!5604 = !DILocation(line: 3488, column: 11, scope: !5537)
!5605 = !DILocation(line: 3489, column: 25, scope: !5439)
!5606 = !DILocation(line: 3489, column: 16, scope: !5439)
!5607 = !DILocation(line: 3489, column: 17, scope: !5439)
!5608 = !DILocation(line: 3490, column: 28, scope: !5439)
!5609 = !DILocation(line: 3490, column: 41, scope: !5439)
!5610 = !DILocation(line: 3490, column: 19, scope: !5439)
!5611 = !DILocation(line: 3490, column: 55, scope: !5439)
!5612 = !DILocation(line: 3490, column: 62, scope: !5439)
!5613 = !DILocation(line: 3490, column: 46, scope: !5439)
!5614 = !DILocation(line: 3490, column: 45, scope: !5439)
!5615 = !DILocation(line: 3490, column: 17, scope: !5439)
!5616 = !DILocation(line: 3490, column: 18, scope: !5439)
!5617 = !DILocation(line: 3491, column: 19, scope: !5439)
!5618 = distinct !{!5618, !5432, !5619}
!5619 = !DILocation(line: 3492, column: 9, scope: !5433)
!5620 = !DILocation(line: 3493, column: 14, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 3493, column: 13)
!5622 = !DILocation(line: 3493, column: 23, scope: !5621)
!5623 = !DILocation(line: 3493, column: 39, scope: !5621)
!5624 = !DILocation(line: 3493, column: 43, scope: !5621)
!5625 = !DILocation(line: 3493, column: 67, scope: !5621)
!5626 = !DILocation(line: 3493, column: 74, scope: !5621)
!5627 = !DILocation(line: 3493, column: 55, scope: !5621)
!5628 = !DILocation(line: 3493, column: 13, scope: !5433)
!5629 = !DILocation(line: 3498, column: 41, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3494, column: 11)
!5631 = !DILocation(line: 3498, column: 55, scope: !5630)
!5632 = !DILocation(line: 3498, column: 58, scope: !5630)
!5633 = !DILocation(line: 3498, column: 65, scope: !5630)
!5634 = !DILocation(line: 3499, column: 15, scope: !5630)
!5635 = !DILocation(line: 3498, column: 15, scope: !5630)
!5636 = !DILocation(line: 3498, column: 14, scope: !5630)
!5637 = !DILocation(line: 3500, column: 17, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 3500, column: 17)
!5639 = !DILocation(line: 3500, column: 19, scope: !5638)
!5640 = !DILocation(line: 3500, column: 17, scope: !5630)
!5641 = !DILocation(line: 3502, column: 23, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3501, column: 15)
!5643 = !DILocation(line: 3503, column: 17, scope: !5642)
!5644 = !DILocation(line: 3505, column: 51, scope: !5630)
!5645 = !DILocation(line: 3505, column: 21, scope: !5630)
!5646 = !DILocation(line: 3505, column: 20, scope: !5630)
!5647 = !DILocation(line: 3506, column: 19, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 3506, column: 13)
!5649 = !DILocation(line: 3506, column: 18, scope: !5648)
!5650 = !DILocation(line: 3506, column: 23, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 3506, column: 13)
!5652 = !DILocation(line: 3506, column: 37, scope: !5651)
!5653 = !DILocation(line: 3506, column: 44, scope: !5651)
!5654 = !DILocation(line: 3506, column: 25, scope: !5651)
!5655 = !DILocation(line: 3506, column: 13, scope: !5648)
!5656 = !DILocation(line: 3508, column: 19, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 3508, column: 19)
!5658 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 3507, column: 13)
!5659 = !DILocation(line: 3508, column: 26, scope: !5657)
!5660 = !DILocation(line: 3508, column: 32, scope: !5657)
!5661 = !DILocation(line: 3508, column: 19, scope: !5658)
!5662 = !DILocation(line: 3509, column: 36, scope: !5657)
!5663 = !DILocation(line: 3509, column: 35, scope: !5657)
!5664 = !DILocation(line: 3509, column: 23, scope: !5657)
!5665 = !DILocation(line: 3509, column: 22, scope: !5657)
!5666 = !DILocation(line: 3509, column: 17, scope: !5657)
!5667 = !DILocation(line: 3510, column: 49, scope: !5658)
!5668 = !DILocation(line: 3510, column: 55, scope: !5658)
!5669 = !DILocation(line: 3510, column: 54, scope: !5658)
!5670 = !DILocation(line: 3510, column: 15, scope: !5658)
!5671 = !DILocation(line: 3510, column: 24, scope: !5658)
!5672 = !DILocation(line: 3510, column: 27, scope: !5658)
!5673 = !DILocation(line: 3510, column: 30, scope: !5658)
!5674 = !DILocation(line: 3511, column: 51, scope: !5658)
!5675 = !DILocation(line: 3511, column: 57, scope: !5658)
!5676 = !DILocation(line: 3511, column: 56, scope: !5658)
!5677 = !DILocation(line: 3511, column: 15, scope: !5658)
!5678 = !DILocation(line: 3511, column: 24, scope: !5658)
!5679 = !DILocation(line: 3511, column: 27, scope: !5658)
!5680 = !DILocation(line: 3511, column: 32, scope: !5658)
!5681 = !DILocation(line: 3512, column: 50, scope: !5658)
!5682 = !DILocation(line: 3512, column: 56, scope: !5658)
!5683 = !DILocation(line: 3512, column: 55, scope: !5658)
!5684 = !DILocation(line: 3512, column: 15, scope: !5658)
!5685 = !DILocation(line: 3512, column: 24, scope: !5658)
!5686 = !DILocation(line: 3512, column: 27, scope: !5658)
!5687 = !DILocation(line: 3512, column: 31, scope: !5658)
!5688 = !DILocation(line: 3513, column: 19, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 3513, column: 19)
!5690 = !DILocation(line: 3513, column: 26, scope: !5689)
!5691 = !DILocation(line: 3513, column: 32, scope: !5689)
!5692 = !DILocation(line: 3513, column: 19, scope: !5658)
!5693 = !DILocation(line: 3514, column: 54, scope: !5689)
!5694 = !DILocation(line: 3514, column: 37, scope: !5689)
!5695 = !DILocation(line: 3514, column: 17, scope: !5689)
!5696 = !DILocation(line: 3514, column: 26, scope: !5689)
!5697 = !DILocation(line: 3514, column: 29, scope: !5689)
!5698 = !DILocation(line: 3514, column: 36, scope: !5689)
!5699 = !DILocation(line: 3515, column: 19, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 3515, column: 19)
!5701 = !DILocation(line: 3515, column: 27, scope: !5700)
!5702 = !DILocation(line: 3515, column: 19, scope: !5658)
!5703 = !DILocation(line: 3516, column: 53, scope: !5700)
!5704 = !DILocation(line: 3517, column: 19, scope: !5700)
!5705 = !DILocation(line: 3516, column: 58, scope: !5700)
!5706 = !DILocation(line: 3516, column: 17, scope: !5700)
!5707 = !DILocation(line: 3516, column: 26, scope: !5700)
!5708 = !DILocation(line: 3516, column: 29, scope: !5700)
!5709 = !DILocation(line: 3516, column: 34, scope: !5700)
!5710 = !DILocation(line: 3518, column: 16, scope: !5658)
!5711 = !DILocation(line: 3519, column: 13, scope: !5658)
!5712 = !DILocation(line: 3506, column: 54, scope: !5651)
!5713 = !DILocation(line: 3506, column: 13, scope: !5651)
!5714 = distinct !{!5714, !5655, !5715}
!5715 = !DILocation(line: 3519, column: 13, scope: !5648)
!5716 = !DILocation(line: 3520, column: 24, scope: !5630)
!5717 = !DILocation(line: 3521, column: 21, scope: !5630)
!5718 = !DILocation(line: 3522, column: 11, scope: !5630)
!5719 = !DILocation(line: 3523, column: 11, scope: !5433)
!5720 = !DILocation(line: 3523, column: 10, scope: !5433)
!5721 = !DILocation(line: 3524, column: 15, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 3524, column: 9)
!5723 = !DILocation(line: 3524, column: 14, scope: !5722)
!5724 = !DILocation(line: 3524, column: 19, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 3524, column: 9)
!5726 = !DILocation(line: 3524, column: 33, scope: !5725)
!5727 = !DILocation(line: 3524, column: 40, scope: !5725)
!5728 = !DILocation(line: 3524, column: 21, scope: !5725)
!5729 = !DILocation(line: 3524, column: 9, scope: !5722)
!5730 = !DILocation(line: 3526, column: 21, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 3525, column: 9)
!5732 = !DILocation(line: 3526, column: 30, scope: !5731)
!5733 = !DILocation(line: 3526, column: 33, scope: !5731)
!5734 = !DILocation(line: 3526, column: 42, scope: !5731)
!5735 = !DILocation(line: 3526, column: 44, scope: !5731)
!5736 = !DILocation(line: 3526, column: 53, scope: !5731)
!5737 = !DILocation(line: 3526, column: 56, scope: !5731)
!5738 = !DILocation(line: 3526, column: 43, scope: !5731)
!5739 = !DILocation(line: 3526, column: 36, scope: !5731)
!5740 = !DILocation(line: 3526, column: 17, scope: !5731)
!5741 = !DILocation(line: 3526, column: 20, scope: !5731)
!5742 = !DILocation(line: 3527, column: 23, scope: !5731)
!5743 = !DILocation(line: 3527, column: 32, scope: !5731)
!5744 = !DILocation(line: 3527, column: 35, scope: !5731)
!5745 = !DILocation(line: 3527, column: 46, scope: !5731)
!5746 = !DILocation(line: 3527, column: 48, scope: !5731)
!5747 = !DILocation(line: 3527, column: 57, scope: !5731)
!5748 = !DILocation(line: 3527, column: 60, scope: !5731)
!5749 = !DILocation(line: 3527, column: 47, scope: !5731)
!5750 = !DILocation(line: 3527, column: 40, scope: !5731)
!5751 = !DILocation(line: 3527, column: 17, scope: !5731)
!5752 = !DILocation(line: 3527, column: 22, scope: !5731)
!5753 = !DILocation(line: 3528, column: 22, scope: !5731)
!5754 = !DILocation(line: 3528, column: 31, scope: !5731)
!5755 = !DILocation(line: 3528, column: 34, scope: !5731)
!5756 = !DILocation(line: 3528, column: 44, scope: !5731)
!5757 = !DILocation(line: 3528, column: 46, scope: !5731)
!5758 = !DILocation(line: 3528, column: 55, scope: !5731)
!5759 = !DILocation(line: 3528, column: 58, scope: !5731)
!5760 = !DILocation(line: 3528, column: 45, scope: !5731)
!5761 = !DILocation(line: 3528, column: 38, scope: !5731)
!5762 = !DILocation(line: 3528, column: 17, scope: !5731)
!5763 = !DILocation(line: 3528, column: 21, scope: !5731)
!5764 = !DILocation(line: 3529, column: 15, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3529, column: 15)
!5766 = !DILocation(line: 3529, column: 22, scope: !5765)
!5767 = !DILocation(line: 3529, column: 28, scope: !5765)
!5768 = !DILocation(line: 3529, column: 15, scope: !5731)
!5769 = !DILocation(line: 3530, column: 27, scope: !5765)
!5770 = !DILocation(line: 3530, column: 36, scope: !5765)
!5771 = !DILocation(line: 3530, column: 39, scope: !5765)
!5772 = !DILocation(line: 3530, column: 52, scope: !5765)
!5773 = !DILocation(line: 3530, column: 54, scope: !5765)
!5774 = !DILocation(line: 3530, column: 63, scope: !5765)
!5775 = !DILocation(line: 3530, column: 66, scope: !5765)
!5776 = !DILocation(line: 3530, column: 53, scope: !5765)
!5777 = !DILocation(line: 3530, column: 46, scope: !5765)
!5778 = !DILocation(line: 3530, column: 19, scope: !5765)
!5779 = !DILocation(line: 3530, column: 26, scope: !5765)
!5780 = !DILocation(line: 3530, column: 13, scope: !5765)
!5781 = !DILocation(line: 3531, column: 15, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3531, column: 15)
!5783 = !DILocation(line: 3531, column: 29, scope: !5782)
!5784 = !DILocation(line: 3531, column: 15, scope: !5731)
!5785 = !DILocation(line: 3532, column: 25, scope: !5782)
!5786 = !DILocation(line: 3532, column: 34, scope: !5782)
!5787 = !DILocation(line: 3532, column: 37, scope: !5782)
!5788 = !DILocation(line: 3532, column: 48, scope: !5782)
!5789 = !DILocation(line: 3532, column: 50, scope: !5782)
!5790 = !DILocation(line: 3532, column: 59, scope: !5782)
!5791 = !DILocation(line: 3532, column: 62, scope: !5782)
!5792 = !DILocation(line: 3532, column: 49, scope: !5782)
!5793 = !DILocation(line: 3532, column: 42, scope: !5782)
!5794 = !DILocation(line: 3532, column: 19, scope: !5782)
!5795 = !DILocation(line: 3532, column: 24, scope: !5782)
!5796 = !DILocation(line: 3532, column: 13, scope: !5782)
!5797 = !DILocation(line: 3533, column: 24, scope: !5731)
!5798 = !DILocation(line: 3533, column: 11, scope: !5731)
!5799 = !DILocation(line: 3533, column: 14, scope: !5731)
!5800 = !DILocation(line: 3533, column: 17, scope: !5731)
!5801 = !DILocation(line: 3534, column: 26, scope: !5731)
!5802 = !DILocation(line: 3534, column: 11, scope: !5731)
!5803 = !DILocation(line: 3534, column: 14, scope: !5731)
!5804 = !DILocation(line: 3534, column: 19, scope: !5731)
!5805 = !DILocation(line: 3535, column: 25, scope: !5731)
!5806 = !DILocation(line: 3535, column: 11, scope: !5731)
!5807 = !DILocation(line: 3535, column: 14, scope: !5731)
!5808 = !DILocation(line: 3535, column: 18, scope: !5731)
!5809 = !DILocation(line: 3536, column: 15, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3536, column: 15)
!5811 = !DILocation(line: 3536, column: 28, scope: !5810)
!5812 = !DILocation(line: 3536, column: 34, scope: !5810)
!5813 = !DILocation(line: 3536, column: 15, scope: !5731)
!5814 = !DILocation(line: 3537, column: 30, scope: !5810)
!5815 = !DILocation(line: 3537, column: 13, scope: !5810)
!5816 = !DILocation(line: 3537, column: 16, scope: !5810)
!5817 = !DILocation(line: 3537, column: 23, scope: !5810)
!5818 = !DILocation(line: 3538, column: 15, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3538, column: 15)
!5820 = !DILocation(line: 3538, column: 29, scope: !5819)
!5821 = !DILocation(line: 3538, column: 15, scope: !5731)
!5822 = !DILocation(line: 3539, column: 28, scope: !5819)
!5823 = !DILocation(line: 3539, column: 13, scope: !5819)
!5824 = !DILocation(line: 3539, column: 16, scope: !5819)
!5825 = !DILocation(line: 3539, column: 21, scope: !5819)
!5826 = !DILocation(line: 3540, column: 12, scope: !5731)
!5827 = !DILocation(line: 3541, column: 11, scope: !5731)
!5828 = !DILocation(line: 3541, column: 20, scope: !5731)
!5829 = !DILocation(line: 3541, column: 23, scope: !5731)
!5830 = !DILocation(line: 3542, column: 9, scope: !5731)
!5831 = !DILocation(line: 3524, column: 50, scope: !5725)
!5832 = !DILocation(line: 3524, column: 9, scope: !5725)
!5833 = distinct !{!5833, !5729, !5834}
!5834 = !DILocation(line: 3542, column: 9, scope: !5722)
!5835 = !DILocation(line: 3543, column: 23, scope: !5433)
!5836 = !DILocation(line: 3543, column: 15, scope: !5433)
!5837 = !DILocation(line: 3543, column: 16, scope: !5433)
!5838 = !DILocation(line: 3544, column: 19, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 3544, column: 13)
!5840 = !DILocation(line: 3544, column: 21, scope: !5839)
!5841 = !DILocation(line: 3544, column: 13, scope: !5433)
!5842 = !DILocation(line: 3546, column: 30, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 3545, column: 11)
!5844 = !DILocation(line: 3546, column: 43, scope: !5843)
!5845 = !DILocation(line: 3546, column: 21, scope: !5843)
!5846 = !DILocation(line: 3546, column: 57, scope: !5843)
!5847 = !DILocation(line: 3546, column: 64, scope: !5843)
!5848 = !DILocation(line: 3546, column: 48, scope: !5843)
!5849 = !DILocation(line: 3546, column: 47, scope: !5843)
!5850 = !DILocation(line: 3546, column: 19, scope: !5843)
!5851 = !DILocation(line: 3546, column: 20, scope: !5843)
!5852 = !DILocation(line: 3547, column: 21, scope: !5843)
!5853 = !DILocation(line: 3548, column: 11, scope: !5843)
!5854 = !DILocation(line: 3549, column: 14, scope: !5433)
!5855 = !DILocation(line: 3549, column: 15, scope: !5433)
!5856 = !DILocation(line: 3551, column: 9, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3551, column: 9)
!5858 = !DILocation(line: 3551, column: 22, scope: !5857)
!5859 = !DILocation(line: 3551, column: 33, scope: !5857)
!5860 = !DILocation(line: 3551, column: 40, scope: !5857)
!5861 = !DILocation(line: 3551, column: 30, scope: !5857)
!5862 = !DILocation(line: 3551, column: 9, scope: !5299)
!5863 = !DILocation(line: 3556, column: 11, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 3552, column: 7)
!5865 = !DILocation(line: 3556, column: 10, scope: !5864)
!5866 = !DILocation(line: 3557, column: 15, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 3557, column: 9)
!5868 = !DILocation(line: 3557, column: 14, scope: !5867)
!5869 = !DILocation(line: 3557, column: 19, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 3557, column: 9)
!5871 = !DILocation(line: 3557, column: 33, scope: !5870)
!5872 = !DILocation(line: 3557, column: 46, scope: !5870)
!5873 = !DILocation(line: 3557, column: 21, scope: !5870)
!5874 = !DILocation(line: 3557, column: 9, scope: !5867)
!5875 = !DILocation(line: 3559, column: 15, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 3559, column: 15)
!5877 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 3558, column: 9)
!5878 = !DILocation(line: 3559, column: 28, scope: !5876)
!5879 = !DILocation(line: 3559, column: 34, scope: !5876)
!5880 = !DILocation(line: 3559, column: 15, scope: !5877)
!5881 = !DILocation(line: 3560, column: 46, scope: !5876)
!5882 = !DILocation(line: 3560, column: 49, scope: !5876)
!5883 = !DILocation(line: 3560, column: 45, scope: !5876)
!5884 = !DILocation(line: 3560, column: 32, scope: !5876)
!5885 = !DILocation(line: 3560, column: 31, scope: !5876)
!5886 = !DILocation(line: 3560, column: 19, scope: !5876)
!5887 = !DILocation(line: 3560, column: 18, scope: !5876)
!5888 = !DILocation(line: 3560, column: 13, scope: !5876)
!5889 = !DILocation(line: 3561, column: 39, scope: !5877)
!5890 = !DILocation(line: 3561, column: 17, scope: !5877)
!5891 = !DILocation(line: 3561, column: 16, scope: !5877)
!5892 = !DILocation(line: 3562, column: 11, scope: !5877)
!5893 = !DILocation(line: 3563, column: 11, scope: !5877)
!5894 = !DILocation(line: 3564, column: 11, scope: !5877)
!5895 = !DILocation(line: 3565, column: 15, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 3565, column: 15)
!5897 = !DILocation(line: 3565, column: 28, scope: !5896)
!5898 = !DILocation(line: 3565, column: 34, scope: !5896)
!5899 = !DILocation(line: 3565, column: 15, scope: !5877)
!5900 = !DILocation(line: 3566, column: 13, scope: !5896)
!5901 = !DILocation(line: 3567, column: 15, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 3567, column: 15)
!5903 = !DILocation(line: 3567, column: 29, scope: !5902)
!5904 = !DILocation(line: 3567, column: 15, scope: !5877)
!5905 = !DILocation(line: 3568, column: 13, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3568, column: 13)
!5907 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 3568, column: 13)
!5908 = !DILocation(line: 3568, column: 13, scope: !5907)
!5909 = !DILocation(line: 3569, column: 12, scope: !5877)
!5910 = !DILocation(line: 3570, column: 12, scope: !5877)
!5911 = !DILocation(line: 3571, column: 9, scope: !5877)
!5912 = !DILocation(line: 3557, column: 56, scope: !5870)
!5913 = !DILocation(line: 3557, column: 9, scope: !5870)
!5914 = distinct !{!5914, !5874, !5915}
!5915 = !DILocation(line: 3571, column: 9, scope: !5867)
!5916 = !DILocation(line: 3572, column: 7, scope: !5864)
!5917 = !DILocation(line: 3578, column: 15, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 3574, column: 7)
!5919 = !DILocation(line: 3579, column: 20, scope: !5918)
!5920 = !DILocation(line: 3580, column: 14, scope: !5918)
!5921 = !DILocation(line: 3580, column: 15, scope: !5918)
!5922 = !DILocation(line: 3581, column: 11, scope: !5918)
!5923 = !DILocation(line: 3581, column: 10, scope: !5918)
!5924 = !DILocation(line: 3582, column: 11, scope: !5918)
!5925 = !DILocation(line: 3582, column: 10, scope: !5918)
!5926 = !DILocation(line: 3583, column: 15, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3583, column: 9)
!5928 = !DILocation(line: 3583, column: 14, scope: !5927)
!5929 = !DILocation(line: 3583, column: 19, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 3583, column: 9)
!5931 = !DILocation(line: 3583, column: 33, scope: !5930)
!5932 = !DILocation(line: 3583, column: 40, scope: !5930)
!5933 = !DILocation(line: 3583, column: 21, scope: !5930)
!5934 = !DILocation(line: 3583, column: 9, scope: !5927)
!5935 = !DILocation(line: 3585, column: 28, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 3584, column: 9)
!5937 = !DILocation(line: 3585, column: 41, scope: !5936)
!5938 = !DILocation(line: 3585, column: 19, scope: !5936)
!5939 = !DILocation(line: 3585, column: 58, scope: !5936)
!5940 = !DILocation(line: 3585, column: 65, scope: !5936)
!5941 = !DILocation(line: 3585, column: 49, scope: !5936)
!5942 = !DILocation(line: 3585, column: 48, scope: !5936)
!5943 = !DILocation(line: 3585, column: 17, scope: !5936)
!5944 = !DILocation(line: 3585, column: 18, scope: !5936)
!5945 = !DILocation(line: 3586, column: 11, scope: !5936)
!5946 = !DILocation(line: 3586, column: 24, scope: !5936)
!5947 = !DILocation(line: 3586, column: 34, scope: !5936)
!5948 = !DILocation(line: 3586, column: 26, scope: !5936)
!5949 = !DILocation(line: 3588, column: 17, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 3588, column: 17)
!5951 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 3587, column: 11)
!5952 = !DILocation(line: 3588, column: 29, scope: !5950)
!5953 = !DILocation(line: 3588, column: 17, scope: !5951)
!5954 = !DILocation(line: 3590, column: 23, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3589, column: 15)
!5956 = !DILocation(line: 3591, column: 18, scope: !5955)
!5957 = !DILocation(line: 3592, column: 15, scope: !5955)
!5958 = !DILocation(line: 3593, column: 29, scope: !5951)
!5959 = !DILocation(line: 3593, column: 31, scope: !5951)
!5960 = !DILocation(line: 3593, column: 34, scope: !5951)
!5961 = !DILocation(line: 3593, column: 30, scope: !5951)
!5962 = !DILocation(line: 3593, column: 19, scope: !5951)
!5963 = !DILocation(line: 3593, column: 22, scope: !5951)
!5964 = !DILocation(line: 3594, column: 31, scope: !5951)
!5965 = !DILocation(line: 3594, column: 33, scope: !5951)
!5966 = !DILocation(line: 3594, column: 36, scope: !5951)
!5967 = !DILocation(line: 3594, column: 32, scope: !5951)
!5968 = !DILocation(line: 3594, column: 19, scope: !5951)
!5969 = !DILocation(line: 3594, column: 24, scope: !5951)
!5970 = !DILocation(line: 3595, column: 30, scope: !5951)
!5971 = !DILocation(line: 3595, column: 32, scope: !5951)
!5972 = !DILocation(line: 3595, column: 35, scope: !5951)
!5973 = !DILocation(line: 3595, column: 31, scope: !5951)
!5974 = !DILocation(line: 3595, column: 19, scope: !5951)
!5975 = !DILocation(line: 3595, column: 23, scope: !5951)
!5976 = !DILocation(line: 3596, column: 17, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 3596, column: 17)
!5978 = !DILocation(line: 3596, column: 24, scope: !5977)
!5979 = !DILocation(line: 3596, column: 30, scope: !5977)
!5980 = !DILocation(line: 3596, column: 17, scope: !5951)
!5981 = !DILocation(line: 3597, column: 35, scope: !5977)
!5982 = !DILocation(line: 3597, column: 37, scope: !5977)
!5983 = !DILocation(line: 3597, column: 40, scope: !5977)
!5984 = !DILocation(line: 3597, column: 36, scope: !5977)
!5985 = !DILocation(line: 3597, column: 21, scope: !5977)
!5986 = !DILocation(line: 3597, column: 28, scope: !5977)
!5987 = !DILocation(line: 3597, column: 15, scope: !5977)
!5988 = !DILocation(line: 3598, column: 17, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 3598, column: 17)
!5990 = !DILocation(line: 3598, column: 31, scope: !5989)
!5991 = !DILocation(line: 3598, column: 17, scope: !5951)
!5992 = !DILocation(line: 3599, column: 33, scope: !5989)
!5993 = !DILocation(line: 3599, column: 35, scope: !5989)
!5994 = !DILocation(line: 3599, column: 38, scope: !5989)
!5995 = !DILocation(line: 3599, column: 34, scope: !5989)
!5996 = !DILocation(line: 3599, column: 21, scope: !5989)
!5997 = !DILocation(line: 3599, column: 26, scope: !5989)
!5998 = !DILocation(line: 3599, column: 15, scope: !5989)
!5999 = !DILocation(line: 3600, column: 26, scope: !5951)
!6000 = !DILocation(line: 3600, column: 13, scope: !5951)
!6001 = !DILocation(line: 3600, column: 16, scope: !5951)
!6002 = !DILocation(line: 3600, column: 19, scope: !5951)
!6003 = !DILocation(line: 3601, column: 28, scope: !5951)
!6004 = !DILocation(line: 3601, column: 13, scope: !5951)
!6005 = !DILocation(line: 3601, column: 16, scope: !5951)
!6006 = !DILocation(line: 3601, column: 21, scope: !5951)
!6007 = !DILocation(line: 3602, column: 27, scope: !5951)
!6008 = !DILocation(line: 3602, column: 13, scope: !5951)
!6009 = !DILocation(line: 3602, column: 16, scope: !5951)
!6010 = !DILocation(line: 3602, column: 20, scope: !5951)
!6011 = !DILocation(line: 3603, column: 17, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 3603, column: 17)
!6013 = !DILocation(line: 3603, column: 30, scope: !6012)
!6014 = !DILocation(line: 3603, column: 36, scope: !6012)
!6015 = !DILocation(line: 3603, column: 17, scope: !5951)
!6016 = !DILocation(line: 3604, column: 32, scope: !6012)
!6017 = !DILocation(line: 3604, column: 15, scope: !6012)
!6018 = !DILocation(line: 3604, column: 18, scope: !6012)
!6019 = !DILocation(line: 3604, column: 25, scope: !6012)
!6020 = !DILocation(line: 3605, column: 17, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 3605, column: 17)
!6022 = !DILocation(line: 3605, column: 31, scope: !6021)
!6023 = !DILocation(line: 3605, column: 17, scope: !5951)
!6024 = !DILocation(line: 3606, column: 30, scope: !6021)
!6025 = !DILocation(line: 3606, column: 15, scope: !6021)
!6026 = !DILocation(line: 3606, column: 18, scope: !6021)
!6027 = !DILocation(line: 3606, column: 23, scope: !6021)
!6028 = !DILocation(line: 3607, column: 27, scope: !5951)
!6029 = !DILocation(line: 3607, column: 19, scope: !5951)
!6030 = !DILocation(line: 3607, column: 20, scope: !5951)
!6031 = !DILocation(line: 3608, column: 18, scope: !5951)
!6032 = !DILocation(line: 3608, column: 19, scope: !5951)
!6033 = !DILocation(line: 3609, column: 24, scope: !5951)
!6034 = distinct !{!6034, !5945, !6035}
!6035 = !DILocation(line: 3610, column: 11, scope: !5936)
!6036 = !DILocation(line: 3611, column: 19, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 3611, column: 13)
!6038 = !DILocation(line: 3611, column: 21, scope: !6037)
!6039 = !DILocation(line: 3611, column: 13, scope: !5936)
!6040 = !DILocation(line: 3613, column: 17, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3613, column: 17)
!6042 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 3612, column: 11)
!6043 = !DILocation(line: 3613, column: 29, scope: !6041)
!6044 = !DILocation(line: 3613, column: 17, scope: !6042)
!6045 = !DILocation(line: 3615, column: 23, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3614, column: 15)
!6047 = !DILocation(line: 3616, column: 28, scope: !6046)
!6048 = !DILocation(line: 3617, column: 18, scope: !6046)
!6049 = !DILocation(line: 3618, column: 15, scope: !6046)
!6050 = !DILocation(line: 3619, column: 30, scope: !6042)
!6051 = !DILocation(line: 3619, column: 32, scope: !6042)
!6052 = !DILocation(line: 3619, column: 35, scope: !6042)
!6053 = !DILocation(line: 3619, column: 31, scope: !6042)
!6054 = !DILocation(line: 3619, column: 19, scope: !6042)
!6055 = !DILocation(line: 3619, column: 22, scope: !6042)
!6056 = !DILocation(line: 3620, column: 32, scope: !6042)
!6057 = !DILocation(line: 3620, column: 34, scope: !6042)
!6058 = !DILocation(line: 3620, column: 37, scope: !6042)
!6059 = !DILocation(line: 3620, column: 33, scope: !6042)
!6060 = !DILocation(line: 3620, column: 19, scope: !6042)
!6061 = !DILocation(line: 3620, column: 24, scope: !6042)
!6062 = !DILocation(line: 3621, column: 31, scope: !6042)
!6063 = !DILocation(line: 3621, column: 33, scope: !6042)
!6064 = !DILocation(line: 3621, column: 36, scope: !6042)
!6065 = !DILocation(line: 3621, column: 32, scope: !6042)
!6066 = !DILocation(line: 3621, column: 19, scope: !6042)
!6067 = !DILocation(line: 3621, column: 23, scope: !6042)
!6068 = !DILocation(line: 3622, column: 17, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3622, column: 17)
!6070 = !DILocation(line: 3622, column: 30, scope: !6069)
!6071 = !DILocation(line: 3622, column: 36, scope: !6069)
!6072 = !DILocation(line: 3622, column: 17, scope: !6042)
!6073 = !DILocation(line: 3623, column: 36, scope: !6069)
!6074 = !DILocation(line: 3623, column: 38, scope: !6069)
!6075 = !DILocation(line: 3623, column: 41, scope: !6069)
!6076 = !DILocation(line: 3623, column: 37, scope: !6069)
!6077 = !DILocation(line: 3623, column: 21, scope: !6069)
!6078 = !DILocation(line: 3623, column: 28, scope: !6069)
!6079 = !DILocation(line: 3623, column: 15, scope: !6069)
!6080 = !DILocation(line: 3624, column: 17, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3624, column: 17)
!6082 = !DILocation(line: 3624, column: 31, scope: !6081)
!6083 = !DILocation(line: 3624, column: 17, scope: !6042)
!6084 = !DILocation(line: 3625, column: 34, scope: !6081)
!6085 = !DILocation(line: 3625, column: 36, scope: !6081)
!6086 = !DILocation(line: 3625, column: 39, scope: !6081)
!6087 = !DILocation(line: 3625, column: 35, scope: !6081)
!6088 = !DILocation(line: 3625, column: 21, scope: !6081)
!6089 = !DILocation(line: 3625, column: 26, scope: !6081)
!6090 = !DILocation(line: 3625, column: 15, scope: !6081)
!6091 = !DILocation(line: 3626, column: 27, scope: !6042)
!6092 = !DILocation(line: 3626, column: 18, scope: !6042)
!6093 = !DILocation(line: 3626, column: 19, scope: !6042)
!6094 = !DILocation(line: 3627, column: 11, scope: !6042)
!6095 = !DILocation(line: 3628, column: 10, scope: !5936)
!6096 = !DILocation(line: 3629, column: 7, scope: !5936)
!6097 = !DILocation(line: 3583, column: 50, scope: !5930)
!6098 = !DILocation(line: 3583, column: 9, scope: !5930)
!6099 = distinct !{!6099, !5934, !6100}
!6100 = !DILocation(line: 3629, column: 7, scope: !5927)
!6101 = !DILocation(line: 3630, column: 16, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3630, column: 11)
!6103 = !DILocation(line: 3630, column: 18, scope: !6102)
!6104 = !DILocation(line: 3630, column: 11, scope: !5918)
!6105 = !DILocation(line: 3632, column: 12, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 3631, column: 9)
!6107 = !DILocation(line: 3633, column: 27, scope: !6106)
!6108 = !DILocation(line: 3633, column: 29, scope: !6106)
!6109 = !DILocation(line: 3633, column: 32, scope: !6106)
!6110 = !DILocation(line: 3633, column: 28, scope: !6106)
!6111 = !DILocation(line: 3633, column: 17, scope: !6106)
!6112 = !DILocation(line: 3633, column: 20, scope: !6106)
!6113 = !DILocation(line: 3634, column: 29, scope: !6106)
!6114 = !DILocation(line: 3634, column: 31, scope: !6106)
!6115 = !DILocation(line: 3634, column: 34, scope: !6106)
!6116 = !DILocation(line: 3634, column: 30, scope: !6106)
!6117 = !DILocation(line: 3634, column: 17, scope: !6106)
!6118 = !DILocation(line: 3634, column: 22, scope: !6106)
!6119 = !DILocation(line: 3635, column: 28, scope: !6106)
!6120 = !DILocation(line: 3635, column: 30, scope: !6106)
!6121 = !DILocation(line: 3635, column: 33, scope: !6106)
!6122 = !DILocation(line: 3635, column: 29, scope: !6106)
!6123 = !DILocation(line: 3635, column: 17, scope: !6106)
!6124 = !DILocation(line: 3635, column: 21, scope: !6106)
!6125 = !DILocation(line: 3636, column: 15, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 3636, column: 15)
!6127 = !DILocation(line: 3636, column: 28, scope: !6126)
!6128 = !DILocation(line: 3636, column: 34, scope: !6126)
!6129 = !DILocation(line: 3636, column: 15, scope: !6106)
!6130 = !DILocation(line: 3637, column: 33, scope: !6126)
!6131 = !DILocation(line: 3637, column: 35, scope: !6126)
!6132 = !DILocation(line: 3637, column: 38, scope: !6126)
!6133 = !DILocation(line: 3637, column: 34, scope: !6126)
!6134 = !DILocation(line: 3637, column: 19, scope: !6126)
!6135 = !DILocation(line: 3637, column: 26, scope: !6126)
!6136 = !DILocation(line: 3637, column: 13, scope: !6126)
!6137 = !DILocation(line: 3638, column: 15, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 3638, column: 15)
!6139 = !DILocation(line: 3638, column: 29, scope: !6138)
!6140 = !DILocation(line: 3638, column: 15, scope: !6106)
!6141 = !DILocation(line: 3639, column: 31, scope: !6138)
!6142 = !DILocation(line: 3639, column: 33, scope: !6138)
!6143 = !DILocation(line: 3639, column: 36, scope: !6138)
!6144 = !DILocation(line: 3639, column: 32, scope: !6138)
!6145 = !DILocation(line: 3639, column: 19, scope: !6138)
!6146 = !DILocation(line: 3639, column: 24, scope: !6138)
!6147 = !DILocation(line: 3639, column: 13, scope: !6138)
!6148 = !DILocation(line: 3640, column: 9, scope: !6106)
!6149 = !DILocation(line: 3641, column: 12, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3641, column: 11)
!6151 = !DILocation(line: 3641, column: 24, scope: !6150)
!6152 = !DILocation(line: 3641, column: 40, scope: !6150)
!6153 = !DILocation(line: 3642, column: 23, scope: !6150)
!6154 = !DILocation(line: 3642, column: 25, scope: !6150)
!6155 = !DILocation(line: 3642, column: 24, scope: !6150)
!6156 = !DILocation(line: 3642, column: 53, scope: !6150)
!6157 = !DILocation(line: 3642, column: 66, scope: !6150)
!6158 = !DILocation(line: 3642, column: 41, scope: !6150)
!6159 = !DILocation(line: 3641, column: 11, scope: !5918)
!6160 = !DILocation(line: 3644, column: 24, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 3643, column: 9)
!6162 = !DILocation(line: 3644, column: 11, scope: !6161)
!6163 = !DILocation(line: 3644, column: 14, scope: !6161)
!6164 = !DILocation(line: 3644, column: 17, scope: !6161)
!6165 = !DILocation(line: 3645, column: 26, scope: !6161)
!6166 = !DILocation(line: 3645, column: 11, scope: !6161)
!6167 = !DILocation(line: 3645, column: 14, scope: !6161)
!6168 = !DILocation(line: 3645, column: 19, scope: !6161)
!6169 = !DILocation(line: 3646, column: 25, scope: !6161)
!6170 = !DILocation(line: 3646, column: 11, scope: !6161)
!6171 = !DILocation(line: 3646, column: 14, scope: !6161)
!6172 = !DILocation(line: 3646, column: 18, scope: !6161)
!6173 = !DILocation(line: 3647, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 3647, column: 15)
!6175 = !DILocation(line: 3647, column: 28, scope: !6174)
!6176 = !DILocation(line: 3647, column: 34, scope: !6174)
!6177 = !DILocation(line: 3647, column: 15, scope: !6161)
!6178 = !DILocation(line: 3648, column: 30, scope: !6174)
!6179 = !DILocation(line: 3648, column: 13, scope: !6174)
!6180 = !DILocation(line: 3648, column: 16, scope: !6174)
!6181 = !DILocation(line: 3648, column: 23, scope: !6174)
!6182 = !DILocation(line: 3649, column: 15, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 3649, column: 15)
!6184 = !DILocation(line: 3649, column: 29, scope: !6183)
!6185 = !DILocation(line: 3649, column: 15, scope: !6161)
!6186 = !DILocation(line: 3650, column: 28, scope: !6183)
!6187 = !DILocation(line: 3650, column: 13, scope: !6183)
!6188 = !DILocation(line: 3650, column: 16, scope: !6183)
!6189 = !DILocation(line: 3650, column: 21, scope: !6183)
!6190 = !DILocation(line: 3651, column: 9, scope: !6161)
!6191 = !DILocation(line: 3655, column: 9, scope: !5918)
!6192 = !DILocation(line: 3655, column: 8, scope: !5918)
!6193 = !DILocation(line: 3656, column: 13, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3656, column: 7)
!6195 = !DILocation(line: 3656, column: 12, scope: !6194)
!6196 = !DILocation(line: 3656, column: 17, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 3656, column: 7)
!6198 = !DILocation(line: 3656, column: 31, scope: !6197)
!6199 = !DILocation(line: 3656, column: 44, scope: !6197)
!6200 = !DILocation(line: 3656, column: 19, scope: !6197)
!6201 = !DILocation(line: 3656, column: 7, scope: !6194)
!6202 = !DILocation(line: 3658, column: 13, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3658, column: 13)
!6204 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 3657, column: 7)
!6205 = !DILocation(line: 3658, column: 26, scope: !6203)
!6206 = !DILocation(line: 3658, column: 32, scope: !6203)
!6207 = !DILocation(line: 3658, column: 13, scope: !6204)
!6208 = !DILocation(line: 3659, column: 44, scope: !6203)
!6209 = !DILocation(line: 3659, column: 47, scope: !6203)
!6210 = !DILocation(line: 3659, column: 43, scope: !6203)
!6211 = !DILocation(line: 3659, column: 30, scope: !6203)
!6212 = !DILocation(line: 3659, column: 29, scope: !6203)
!6213 = !DILocation(line: 3659, column: 17, scope: !6203)
!6214 = !DILocation(line: 3659, column: 16, scope: !6203)
!6215 = !DILocation(line: 3659, column: 11, scope: !6203)
!6216 = !DILocation(line: 3660, column: 37, scope: !6204)
!6217 = !DILocation(line: 3660, column: 15, scope: !6204)
!6218 = !DILocation(line: 3660, column: 14, scope: !6204)
!6219 = !DILocation(line: 3661, column: 9, scope: !6204)
!6220 = !DILocation(line: 3662, column: 9, scope: !6204)
!6221 = !DILocation(line: 3663, column: 9, scope: !6204)
!6222 = !DILocation(line: 3664, column: 13, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3664, column: 13)
!6224 = !DILocation(line: 3664, column: 26, scope: !6223)
!6225 = !DILocation(line: 3664, column: 32, scope: !6223)
!6226 = !DILocation(line: 3664, column: 13, scope: !6204)
!6227 = !DILocation(line: 3665, column: 11, scope: !6223)
!6228 = !DILocation(line: 3666, column: 13, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3666, column: 13)
!6230 = !DILocation(line: 3666, column: 27, scope: !6229)
!6231 = !DILocation(line: 3666, column: 13, scope: !6204)
!6232 = !DILocation(line: 3667, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3667, column: 11)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3667, column: 11)
!6235 = !DILocation(line: 3667, column: 11, scope: !6234)
!6236 = !DILocation(line: 3668, column: 10, scope: !6204)
!6237 = !DILocation(line: 3669, column: 10, scope: !6204)
!6238 = !DILocation(line: 3670, column: 7, scope: !6204)
!6239 = !DILocation(line: 3656, column: 54, scope: !6197)
!6240 = !DILocation(line: 3656, column: 7, scope: !6197)
!6241 = distinct !{!6241, !6201, !6242}
!6242 = !DILocation(line: 3670, column: 7, scope: !6194)
!6243 = !DILocation(line: 3672, column: 38, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3672, column: 9)
!6245 = !DILocation(line: 3672, column: 49, scope: !6244)
!6246 = !DILocation(line: 3672, column: 9, scope: !6244)
!6247 = !DILocation(line: 3672, column: 60, scope: !6244)
!6248 = !DILocation(line: 3672, column: 9, scope: !5299)
!6249 = !DILocation(line: 3674, column: 15, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3673, column: 7)
!6251 = !DILocation(line: 3675, column: 9, scope: !6250)
!6252 = !DILocation(line: 3677, column: 30, scope: !5299)
!6253 = !DILocation(line: 3677, column: 69, scope: !5299)
!6254 = !DILocation(line: 3678, column: 7, scope: !5299)
!6255 = !DILocation(line: 3678, column: 14, scope: !5299)
!6256 = !DILocation(line: 3677, column: 13, scope: !5299)
!6257 = !DILocation(line: 3677, column: 12, scope: !5299)
!6258 = !DILocation(line: 3679, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 3679, column: 9)
!6260 = !DILocation(line: 3679, column: 17, scope: !6259)
!6261 = !DILocation(line: 3679, column: 9, scope: !5299)
!6262 = !DILocation(line: 3681, column: 15, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 3680, column: 7)
!6264 = !DILocation(line: 3682, column: 9, scope: !6263)
!6265 = !DILocation(line: 3684, column: 3, scope: !5299)
!6266 = !DILocation(line: 3383, column: 47, scope: !5293)
!6267 = !DILocation(line: 3383, column: 3, scope: !5293)
!6268 = distinct !{!6268, !5297, !6269}
!6269 = !DILocation(line: 3684, column: 3, scope: !5290)
!6270 = !DILocation(line: 3685, column: 31, scope: !5104)
!6271 = !DILocation(line: 3685, column: 14, scope: !5104)
!6272 = !DILocation(line: 3685, column: 13, scope: !5104)
!6273 = !DILocation(line: 3686, column: 31, scope: !5104)
!6274 = !DILocation(line: 3686, column: 14, scope: !5104)
!6275 = !DILocation(line: 3686, column: 13, scope: !5104)
!6276 = !DILocation(line: 3690, column: 57, scope: !5104)
!6277 = !DILocation(line: 3690, column: 34, scope: !5104)
!6278 = !DILocation(line: 3690, column: 12, scope: !5104)
!6279 = !DILocation(line: 3690, column: 11, scope: !5104)
!6280 = !DILocation(line: 3691, column: 63, scope: !5104)
!6281 = !DILocation(line: 3691, column: 40, scope: !5104)
!6282 = !DILocation(line: 3691, column: 18, scope: !5104)
!6283 = !DILocation(line: 3691, column: 17, scope: !5104)
!6284 = !DILocation(line: 3692, column: 7, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3692, column: 7)
!6286 = !DILocation(line: 3692, column: 20, scope: !6285)
!6287 = !DILocation(line: 3692, column: 28, scope: !6285)
!6288 = !DILocation(line: 3692, column: 35, scope: !6285)
!6289 = !DILocation(line: 3692, column: 25, scope: !6285)
!6290 = !DILocation(line: 3692, column: 7, scope: !5104)
!6291 = !DILocation(line: 3693, column: 59, scope: !6285)
!6292 = !DILocation(line: 3693, column: 36, scope: !6285)
!6293 = !DILocation(line: 3693, column: 14, scope: !6285)
!6294 = !DILocation(line: 3693, column: 13, scope: !6285)
!6295 = !DILocation(line: 3693, column: 5, scope: !6285)
!6296 = !DILocation(line: 3694, column: 57, scope: !5104)
!6297 = !DILocation(line: 3694, column: 34, scope: !5104)
!6298 = !DILocation(line: 3694, column: 12, scope: !5104)
!6299 = !DILocation(line: 3694, column: 11, scope: !5104)
!6300 = !DILocation(line: 3695, column: 21, scope: !5104)
!6301 = !DILocation(line: 3695, column: 28, scope: !5104)
!6302 = !DILocation(line: 3695, column: 3, scope: !5104)
!6303 = !DILocation(line: 3695, column: 16, scope: !5104)
!6304 = !DILocation(line: 3695, column: 20, scope: !5104)
!6305 = !DILocation(line: 3696, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 3696, column: 7)
!6307 = !DILocation(line: 3696, column: 14, scope: !6306)
!6308 = !DILocation(line: 3696, column: 7, scope: !5104)
!6309 = !DILocation(line: 3697, column: 30, scope: !6306)
!6310 = !DILocation(line: 3697, column: 17, scope: !6306)
!6311 = !DILocation(line: 3697, column: 16, scope: !6306)
!6312 = !DILocation(line: 3697, column: 5, scope: !6306)
!6313 = !DILocation(line: 3698, column: 10, scope: !5104)
!6314 = !DILocation(line: 3698, column: 3, scope: !5104)
!6315 = !DILocation(line: 3699, column: 1, scope: !5104)
!6316 = distinct !DISubprogram(name: "ClampToQuantum", scope: !290, file: !290, line: 87, type: !6317, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!169, !18}
!6319 = !DILocalVariable(name: "value", arg: 1, scope: !6316, file: !290, line: 87, type: !18)
!6320 = !DILocation(line: 87, column: 59, scope: !6316)
!6321 = !DILocation(line: 92, column: 7, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6316, file: !290, line: 92, column: 7)
!6323 = !DILocation(line: 92, column: 13, scope: !6322)
!6324 = !DILocation(line: 92, column: 7, scope: !6316)
!6325 = !DILocation(line: 93, column: 5, scope: !6322)
!6326 = !DILocation(line: 94, column: 7, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6316, file: !290, line: 94, column: 7)
!6328 = !DILocation(line: 94, column: 13, scope: !6327)
!6329 = !DILocation(line: 94, column: 7, scope: !6316)
!6330 = !DILocation(line: 95, column: 5, scope: !6327)
!6331 = !DILocation(line: 96, column: 21, scope: !6316)
!6332 = !DILocation(line: 96, column: 26, scope: !6316)
!6333 = !DILocation(line: 96, column: 10, scope: !6316)
!6334 = !DILocation(line: 96, column: 3, scope: !6316)
!6335 = !DILocation(line: 98, column: 1, scope: !6316)
!6336 = distinct !DISubprogram(name: "ThumbnailImage", scope: !3, file: !3, line: 3732, type: !2267, scopeLine: 3734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6337 = !DILocalVariable(name: "image", arg: 1, scope: !6336, file: !3, line: 3732, type: !58)
!6338 = !DILocation(line: 3732, column: 49, scope: !6336)
!6339 = !DILocalVariable(name: "columns", arg: 2, scope: !6336, file: !3, line: 3732, type: !2269)
!6340 = !DILocation(line: 3732, column: 68, scope: !6336)
!6341 = !DILocalVariable(name: "rows", arg: 3, scope: !6336, file: !3, line: 3733, type: !2269)
!6342 = !DILocation(line: 3733, column: 16, scope: !6336)
!6343 = !DILocalVariable(name: "exception", arg: 4, scope: !6336, file: !3, line: 3733, type: !643)
!6344 = !DILocation(line: 3733, column: 36, scope: !6336)
!6345 = !DILocalVariable(name: "value", scope: !6336, file: !3, line: 3738, type: !458)
!6346 = !DILocation(line: 3738, column: 5, scope: !6336)
!6347 = !DILocalVariable(name: "name", scope: !6336, file: !3, line: 3741, type: !438)
!6348 = !DILocation(line: 3741, column: 6, scope: !6336)
!6349 = !DILocalVariable(name: "thumbnail_image", scope: !6336, file: !3, line: 3744, type: !803)
!6350 = !DILocation(line: 3744, column: 6, scope: !6336)
!6351 = !DILocalVariable(name: "x_factor", scope: !6336, file: !3, line: 3747, type: !15)
!6352 = !DILocation(line: 3747, column: 5, scope: !6336)
!6353 = !DILocalVariable(name: "y_factor", scope: !6336, file: !3, line: 3748, type: !15)
!6354 = !DILocation(line: 3748, column: 5, scope: !6336)
!6355 = !DILocalVariable(name: "version", scope: !6336, file: !3, line: 3751, type: !55)
!6356 = !DILocation(line: 3751, column: 5, scope: !6336)
!6357 = !DILocalVariable(name: "attributes", scope: !6336, file: !3, line: 3754, type: !6358)
!6358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !6359, line: 46, size: 1152, elements: !6360)
!6359 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!6360 = !{!6361, !6363, !6365, !6367, !6369, !6371, !6373, !6374, !6375, !6377, !6379, !6381, !6388, !6389, !6390}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !6358, file: !6359, line: 48, baseType: !6362, size: 64)
!6362 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !221, line: 145, baseType: !57)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !6358, file: !6359, line: 53, baseType: !6364, size: 64, offset: 64)
!6364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !221, line: 148, baseType: !57)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !6358, file: !6359, line: 61, baseType: !6366, size: 64, offset: 128)
!6366 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !221, line: 151, baseType: !57)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !6358, file: !6359, line: 62, baseType: !6368, size: 32, offset: 192)
!6368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !221, line: 150, baseType: !34)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !6358, file: !6359, line: 64, baseType: !6370, size: 32, offset: 224)
!6370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !221, line: 146, baseType: !34)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !6358, file: !6359, line: 65, baseType: !6372, size: 32, offset: 256)
!6372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !221, line: 147, baseType: !34)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !6358, file: !6359, line: 67, baseType: !545, size: 32, offset: 288)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !6358, file: !6359, line: 69, baseType: !6362, size: 64, offset: 320)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !6358, file: !6359, line: 74, baseType: !6376, size: 64, offset: 384)
!6376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !221, line: 152, baseType: !222)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !6358, file: !6359, line: 78, baseType: !6378, size: 64, offset: 448)
!6378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !221, line: 174, baseType: !222)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !6358, file: !6359, line: 80, baseType: !6380, size: 64, offset: 512)
!6380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !221, line: 179, baseType: !222)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !6358, file: !6359, line: 91, baseType: !6382, size: 128, offset: 576)
!6382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !6383, line: 10, size: 128, elements: !6384)
!6383 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!6384 = !{!6385, !6386}
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6382, file: !6383, line: 12, baseType: !625, size: 64)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6382, file: !6383, line: 16, baseType: !6387, size: 64, offset: 64)
!6387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !221, line: 196, baseType: !222)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !6358, file: !6359, line: 92, baseType: !6382, size: 128, offset: 704)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !6358, file: !6359, line: 93, baseType: !6382, size: 128, offset: 832)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6358, file: !6359, line: 106, baseType: !6391, size: 192, offset: 960)
!6391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6387, size: 192, elements: !6392)
!6392 = !{!6393}
!6393 = !DISubrange(count: 3)
!6394 = !DILocation(line: 3754, column: 5, scope: !6336)
!6395 = !DILocation(line: 3758, column: 7, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3758, column: 7)
!6397 = !DILocation(line: 3758, column: 14, scope: !6396)
!6398 = !DILocation(line: 3758, column: 20, scope: !6396)
!6399 = !DILocation(line: 3758, column: 7, scope: !6336)
!6400 = !DILocation(line: 3759, column: 61, scope: !6396)
!6401 = !DILocation(line: 3759, column: 68, scope: !6396)
!6402 = !DILocation(line: 3759, column: 12, scope: !6396)
!6403 = !DILocation(line: 3759, column: 5, scope: !6396)
!6404 = !DILocation(line: 3762, column: 29, scope: !6336)
!6405 = !DILocation(line: 3762, column: 12, scope: !6336)
!6406 = !DILocation(line: 3762, column: 54, scope: !6336)
!6407 = !DILocation(line: 3762, column: 61, scope: !6336)
!6408 = !DILocation(line: 3762, column: 37, scope: !6336)
!6409 = !DILocation(line: 3762, column: 36, scope: !6336)
!6410 = !DILocation(line: 3762, column: 11, scope: !6336)
!6411 = !DILocation(line: 3763, column: 29, scope: !6336)
!6412 = !DILocation(line: 3763, column: 12, scope: !6336)
!6413 = !DILocation(line: 3763, column: 51, scope: !6336)
!6414 = !DILocation(line: 3763, column: 58, scope: !6336)
!6415 = !DILocation(line: 3763, column: 34, scope: !6336)
!6416 = !DILocation(line: 3763, column: 33, scope: !6336)
!6417 = !DILocation(line: 3763, column: 11, scope: !6336)
!6418 = !DILocation(line: 3764, column: 8, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3764, column: 7)
!6420 = !DILocation(line: 3764, column: 17, scope: !6419)
!6421 = !DILocation(line: 3764, column: 16, scope: !6419)
!6422 = !DILocation(line: 3764, column: 7, scope: !6419)
!6423 = !DILocation(line: 3764, column: 27, scope: !6419)
!6424 = !DILocation(line: 3764, column: 7, scope: !6336)
!6425 = !DILocation(line: 3765, column: 33, scope: !6419)
!6426 = !DILocation(line: 3765, column: 39, scope: !6419)
!6427 = !DILocation(line: 3765, column: 47, scope: !6419)
!6428 = !DILocation(line: 3765, column: 52, scope: !6419)
!6429 = !DILocation(line: 3765, column: 59, scope: !6419)
!6430 = !DILocation(line: 3765, column: 66, scope: !6419)
!6431 = !DILocation(line: 3765, column: 73, scope: !6419)
!6432 = !DILocation(line: 3766, column: 7, scope: !6419)
!6433 = !DILocation(line: 3765, column: 21, scope: !6419)
!6434 = !DILocation(line: 3765, column: 20, scope: !6419)
!6435 = !DILocation(line: 3765, column: 5, scope: !6419)
!6436 = !DILocation(line: 3768, column: 24, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 3768, column: 9)
!6438 = !DILocation(line: 3768, column: 23, scope: !6437)
!6439 = !DILocation(line: 3768, column: 33, scope: !6437)
!6440 = !DILocation(line: 3768, column: 40, scope: !6437)
!6441 = !DILocation(line: 3768, column: 58, scope: !6437)
!6442 = !DILocation(line: 3768, column: 57, scope: !6437)
!6443 = !DILocation(line: 3768, column: 64, scope: !6437)
!6444 = !DILocation(line: 3768, column: 9, scope: !6419)
!6445 = !DILocation(line: 3769, column: 35, scope: !6437)
!6446 = !DILocation(line: 3769, column: 41, scope: !6437)
!6447 = !DILocation(line: 3769, column: 49, scope: !6437)
!6448 = !DILocation(line: 3769, column: 54, scope: !6437)
!6449 = !DILocation(line: 3769, column: 61, scope: !6437)
!6450 = !DILocation(line: 3770, column: 9, scope: !6437)
!6451 = !DILocation(line: 3770, column: 16, scope: !6437)
!6452 = !DILocation(line: 3770, column: 21, scope: !6437)
!6453 = !DILocation(line: 3769, column: 23, scope: !6437)
!6454 = !DILocation(line: 3769, column: 22, scope: !6437)
!6455 = !DILocation(line: 3769, column: 7, scope: !6437)
!6456 = !DILocalVariable(name: "sample_image", scope: !6457, file: !3, line: 3774, type: !803)
!6457 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 3772, column: 7)
!6458 = !DILocation(line: 3774, column: 12, scope: !6457)
!6459 = !DILocation(line: 3776, column: 34, scope: !6457)
!6460 = !DILocation(line: 3776, column: 53, scope: !6457)
!6461 = !DILocation(line: 3776, column: 52, scope: !6457)
!6462 = !DILocation(line: 3776, column: 74, scope: !6457)
!6463 = !DILocation(line: 3776, column: 73, scope: !6457)
!6464 = !DILocation(line: 3777, column: 11, scope: !6457)
!6465 = !DILocation(line: 3776, column: 22, scope: !6457)
!6466 = !DILocation(line: 3776, column: 21, scope: !6457)
!6467 = !DILocation(line: 3778, column: 13, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 3778, column: 13)
!6469 = !DILocation(line: 3778, column: 26, scope: !6468)
!6470 = !DILocation(line: 3778, column: 13, scope: !6457)
!6471 = !DILocation(line: 3779, column: 11, scope: !6468)
!6472 = !DILocation(line: 3780, column: 37, scope: !6457)
!6473 = !DILocation(line: 3780, column: 50, scope: !6457)
!6474 = !DILocation(line: 3780, column: 58, scope: !6457)
!6475 = !DILocation(line: 3780, column: 63, scope: !6457)
!6476 = !DILocation(line: 3780, column: 70, scope: !6457)
!6477 = !DILocation(line: 3781, column: 11, scope: !6457)
!6478 = !DILocation(line: 3781, column: 18, scope: !6457)
!6479 = !DILocation(line: 3781, column: 23, scope: !6457)
!6480 = !DILocation(line: 3780, column: 25, scope: !6457)
!6481 = !DILocation(line: 3780, column: 24, scope: !6457)
!6482 = !DILocation(line: 3782, column: 35, scope: !6457)
!6483 = !DILocation(line: 3782, column: 22, scope: !6457)
!6484 = !DILocation(line: 3782, column: 21, scope: !6457)
!6485 = !DILocation(line: 3784, column: 7, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3784, column: 7)
!6487 = !DILocation(line: 3784, column: 23, scope: !6486)
!6488 = !DILocation(line: 3784, column: 7, scope: !6336)
!6489 = !DILocation(line: 3785, column: 12, scope: !6486)
!6490 = !DILocation(line: 3785, column: 5, scope: !6486)
!6491 = !DILocation(line: 3786, column: 43, scope: !6336)
!6492 = !DILocation(line: 3786, column: 60, scope: !6336)
!6493 = !DILocation(line: 3786, column: 10, scope: !6336)
!6494 = !DILocation(line: 3787, column: 7, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3787, column: 7)
!6496 = !DILocation(line: 3787, column: 24, scope: !6495)
!6497 = !DILocation(line: 3787, column: 30, scope: !6495)
!6498 = !DILocation(line: 3787, column: 7, scope: !6336)
!6499 = !DILocation(line: 3788, column: 33, scope: !6495)
!6500 = !DILocation(line: 3788, column: 12, scope: !6495)
!6501 = !DILocation(line: 3788, column: 5, scope: !6495)
!6502 = !DILocation(line: 3789, column: 3, scope: !6336)
!6503 = !DILocation(line: 3789, column: 20, scope: !6336)
!6504 = !DILocation(line: 3789, column: 25, scope: !6336)
!6505 = !DILocation(line: 3790, column: 3, scope: !6336)
!6506 = !DILocation(line: 3790, column: 20, scope: !6336)
!6507 = !DILocation(line: 3790, column: 29, scope: !6336)
!6508 = !DILocation(line: 3794, column: 29, scope: !6336)
!6509 = !DILocation(line: 3794, column: 3, scope: !6336)
!6510 = !DILocation(line: 3795, column: 33, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3795, column: 3)
!6512 = !DILocation(line: 3795, column: 13, scope: !6511)
!6513 = !DILocation(line: 3795, column: 12, scope: !6511)
!6514 = !DILocation(line: 3795, column: 8, scope: !6511)
!6515 = !DILocation(line: 3795, column: 51, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 3795, column: 3)
!6517 = !DILocation(line: 3795, column: 56, scope: !6516)
!6518 = !DILocation(line: 3795, column: 3, scope: !6511)
!6519 = !DILocation(line: 3797, column: 24, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 3797, column: 9)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 3796, column: 3)
!6522 = !DILocation(line: 3797, column: 10, scope: !6520)
!6523 = !DILocation(line: 3797, column: 36, scope: !6520)
!6524 = !DILocation(line: 3797, column: 42, scope: !6520)
!6525 = !DILocation(line: 3797, column: 60, scope: !6520)
!6526 = !DILocation(line: 3797, column: 46, scope: !6520)
!6527 = !DILocation(line: 3797, column: 72, scope: !6520)
!6528 = !DILocation(line: 3797, column: 9, scope: !6521)
!6529 = !DILocation(line: 3799, column: 34, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 3798, column: 6)
!6531 = !DILocation(line: 3799, column: 50, scope: !6530)
!6532 = !DILocation(line: 3799, column: 15, scope: !6530)
!6533 = !DILocation(line: 3800, column: 34, scope: !6530)
!6534 = !DILocation(line: 3800, column: 8, scope: !6530)
!6535 = !DILocation(line: 3801, column: 6, scope: !6530)
!6536 = !DILocation(line: 3802, column: 30, scope: !6521)
!6537 = !DILocation(line: 3802, column: 10, scope: !6521)
!6538 = !DILocation(line: 3802, column: 9, scope: !6521)
!6539 = !DILocation(line: 3795, column: 3, scope: !6516)
!6540 = distinct !{!6540, !6518, !6541}
!6541 = !DILocation(line: 3803, column: 3, scope: !6511)
!6542 = !DILocation(line: 3804, column: 30, scope: !6336)
!6543 = !DILocation(line: 3804, column: 10, scope: !6336)
!6544 = !DILocation(line: 3805, column: 27, scope: !6336)
!6545 = !DILocation(line: 3805, column: 33, scope: !6336)
!6546 = !DILocation(line: 3805, column: 40, scope: !6336)
!6547 = !DILocation(line: 3805, column: 10, scope: !6336)
!6548 = !DILocation(line: 3806, column: 14, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3806, column: 7)
!6550 = !DILocation(line: 3806, column: 21, scope: !6549)
!6551 = !DILocation(line: 3806, column: 7, scope: !6549)
!6552 = !DILocation(line: 3806, column: 43, scope: !6549)
!6553 = !DILocation(line: 3806, column: 7, scope: !6336)
!6554 = !DILocation(line: 3807, column: 31, scope: !6549)
!6555 = !DILocation(line: 3808, column: 7, scope: !6549)
!6556 = !DILocation(line: 3808, column: 14, scope: !6549)
!6557 = !DILocation(line: 3807, column: 12, scope: !6549)
!6558 = !DILocation(line: 3807, column: 5, scope: !6549)
!6559 = !DILocation(line: 3809, column: 27, scope: !6336)
!6560 = !DILocation(line: 3809, column: 56, scope: !6336)
!6561 = !DILocation(line: 3809, column: 10, scope: !6336)
!6562 = !DILocation(line: 3810, column: 27, scope: !6336)
!6563 = !DILocation(line: 3810, column: 33, scope: !6336)
!6564 = !DILocation(line: 3810, column: 40, scope: !6336)
!6565 = !DILocation(line: 3810, column: 10, scope: !6336)
!6566 = !DILocation(line: 3811, column: 25, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 3811, column: 7)
!6568 = !DILocation(line: 3811, column: 32, scope: !6567)
!6569 = !DILocation(line: 3811, column: 41, scope: !6567)
!6570 = !DILocation(line: 3811, column: 7, scope: !6567)
!6571 = !DILocation(line: 3811, column: 54, scope: !6567)
!6572 = !DILocation(line: 3811, column: 7, scope: !6336)
!6573 = !DILocation(line: 3813, column: 33, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 3812, column: 5)
!6575 = !DILocation(line: 3814, column: 20, scope: !6574)
!6576 = !DILocation(line: 3813, column: 61, scope: !6574)
!6577 = !DILocation(line: 3813, column: 14, scope: !6574)
!6578 = !DILocation(line: 3815, column: 31, scope: !6574)
!6579 = !DILocation(line: 3815, column: 62, scope: !6574)
!6580 = !DILocation(line: 3815, column: 14, scope: !6574)
!6581 = !DILocation(line: 3816, column: 5, scope: !6574)
!6582 = !DILocation(line: 3817, column: 29, scope: !6336)
!6583 = !DILocation(line: 3818, column: 16, scope: !6336)
!6584 = !DILocation(line: 3817, column: 57, scope: !6336)
!6585 = !DILocation(line: 3817, column: 10, scope: !6336)
!6586 = !DILocation(line: 3819, column: 39, scope: !6336)
!6587 = !DILocation(line: 3819, column: 27, scope: !6336)
!6588 = !DILocation(line: 3819, column: 58, scope: !6336)
!6589 = !DILocation(line: 3819, column: 10, scope: !6336)
!6590 = !DILocation(line: 3820, column: 34, scope: !6336)
!6591 = !DILocation(line: 3820, column: 10, scope: !6336)
!6592 = !DILocation(line: 3821, column: 27, scope: !6336)
!6593 = !DILocation(line: 3821, column: 57, scope: !6336)
!6594 = !DILocation(line: 3821, column: 10, scope: !6336)
!6595 = !DILocation(line: 3822, column: 29, scope: !6336)
!6596 = !DILocation(line: 3822, column: 60, scope: !6336)
!6597 = !DILocation(line: 3822, column: 67, scope: !6336)
!6598 = !DILocation(line: 3822, column: 10, scope: !6336)
!6599 = !DILocation(line: 3823, column: 15, scope: !6336)
!6600 = !DILocation(line: 3823, column: 3, scope: !6336)
!6601 = !DILocation(line: 3824, column: 27, scope: !6336)
!6602 = !DILocation(line: 3824, column: 61, scope: !6336)
!6603 = !DILocation(line: 3824, column: 10, scope: !6336)
!6604 = !DILocation(line: 3825, column: 27, scope: !6336)
!6605 = !DILocation(line: 3826, column: 5, scope: !6336)
!6606 = !DILocation(line: 3825, column: 10, scope: !6336)
!6607 = !DILocation(line: 3827, column: 29, scope: !6336)
!6608 = !DILocation(line: 3828, column: 5, scope: !6336)
!6609 = !DILocation(line: 3828, column: 12, scope: !6336)
!6610 = !DILocation(line: 3827, column: 57, scope: !6336)
!6611 = !DILocation(line: 3827, column: 10, scope: !6336)
!6612 = !DILocation(line: 3829, column: 27, scope: !6336)
!6613 = !DILocation(line: 3829, column: 65, scope: !6336)
!6614 = !DILocation(line: 3829, column: 10, scope: !6336)
!6615 = !DILocation(line: 3830, column: 29, scope: !6336)
!6616 = !DILocation(line: 3831, column: 5, scope: !6336)
!6617 = !DILocation(line: 3831, column: 12, scope: !6336)
!6618 = !DILocation(line: 3830, column: 57, scope: !6336)
!6619 = !DILocation(line: 3830, column: 10, scope: !6336)
!6620 = !DILocation(line: 3832, column: 27, scope: !6336)
!6621 = !DILocation(line: 3832, column: 66, scope: !6336)
!6622 = !DILocation(line: 3832, column: 10, scope: !6336)
!6623 = !DILocation(line: 3833, column: 29, scope: !6336)
!6624 = !DILocation(line: 3834, column: 24, scope: !6336)
!6625 = !DILocation(line: 3834, column: 5, scope: !6336)
!6626 = !DILocation(line: 3833, column: 57, scope: !6336)
!6627 = !DILocation(line: 3833, column: 10, scope: !6336)
!6628 = !DILocation(line: 3835, column: 27, scope: !6336)
!6629 = !DILocation(line: 3835, column: 68, scope: !6336)
!6630 = !DILocation(line: 3835, column: 10, scope: !6336)
!6631 = !DILocation(line: 3836, column: 10, scope: !6336)
!6632 = !DILocation(line: 3836, column: 3, scope: !6336)
!6633 = !DILocation(line: 3837, column: 1, scope: !6336)
!6634 = distinct !DISubprogram(name: "BesselOrderOne", scope: !3, file: !3, line: 1452, type: !856, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6635 = !DILocalVariable(name: "x", arg: 1, scope: !6634, file: !3, line: 1452, type: !15)
!6636 = !DILocation(line: 1452, column: 53, scope: !6634)
!6637 = !DILocalVariable(name: "p", scope: !6634, file: !3, line: 1455, type: !15)
!6638 = !DILocation(line: 1455, column: 5, scope: !6634)
!6639 = !DILocalVariable(name: "q", scope: !6634, file: !3, line: 1456, type: !15)
!6640 = !DILocation(line: 1456, column: 5, scope: !6634)
!6641 = !DILocation(line: 1458, column: 7, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1458, column: 7)
!6643 = !DILocation(line: 1458, column: 9, scope: !6642)
!6644 = !DILocation(line: 1458, column: 7, scope: !6634)
!6645 = !DILocation(line: 1459, column: 5, scope: !6642)
!6646 = !DILocation(line: 1460, column: 5, scope: !6634)
!6647 = !DILocation(line: 1460, column: 4, scope: !6634)
!6648 = !DILocation(line: 1461, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1461, column: 7)
!6650 = !DILocation(line: 1461, column: 9, scope: !6649)
!6651 = !DILocation(line: 1461, column: 7, scope: !6634)
!6652 = !DILocation(line: 1462, column: 9, scope: !6649)
!6653 = !DILocation(line: 1462, column: 8, scope: !6649)
!6654 = !DILocation(line: 1462, column: 6, scope: !6649)
!6655 = !DILocation(line: 1462, column: 5, scope: !6649)
!6656 = !DILocation(line: 1463, column: 7, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1463, column: 7)
!6658 = !DILocation(line: 1463, column: 9, scope: !6657)
!6659 = !DILocation(line: 1463, column: 7, scope: !6634)
!6660 = !DILocation(line: 1464, column: 12, scope: !6657)
!6661 = !DILocation(line: 1464, column: 17, scope: !6657)
!6662 = !DILocation(line: 1464, column: 14, scope: !6657)
!6663 = !DILocation(line: 1464, column: 13, scope: !6657)
!6664 = !DILocation(line: 1464, column: 5, scope: !6657)
!6665 = !DILocation(line: 1465, column: 34, scope: !6634)
!6666 = !DILocation(line: 1465, column: 33, scope: !6634)
!6667 = !DILocation(line: 1465, column: 23, scope: !6634)
!6668 = !DILocation(line: 1465, column: 5, scope: !6634)
!6669 = !DILocation(line: 1465, column: 43, scope: !6634)
!6670 = !DILocation(line: 1465, column: 40, scope: !6634)
!6671 = !DILocation(line: 1465, column: 51, scope: !6634)
!6672 = !DILocation(line: 1465, column: 50, scope: !6634)
!6673 = !DILocation(line: 1465, column: 75, scope: !6634)
!6674 = !DILocation(line: 1465, column: 66, scope: !6634)
!6675 = !DILocation(line: 1465, column: 62, scope: !6634)
!6676 = !DILocation(line: 1466, column: 18, scope: !6634)
!6677 = !DILocation(line: 1466, column: 9, scope: !6634)
!6678 = !DILocation(line: 1466, column: 5, scope: !6634)
!6679 = !DILocation(line: 1465, column: 77, scope: !6634)
!6680 = !DILocation(line: 1465, column: 60, scope: !6634)
!6681 = !DILocation(line: 1465, column: 45, scope: !6634)
!6682 = !DILocation(line: 1466, column: 27, scope: !6634)
!6683 = !DILocation(line: 1466, column: 26, scope: !6634)
!6684 = !DILocation(line: 1466, column: 32, scope: !6634)
!6685 = !DILocation(line: 1466, column: 29, scope: !6634)
!6686 = !DILocation(line: 1466, column: 28, scope: !6634)
!6687 = !DILocation(line: 1466, column: 41, scope: !6634)
!6688 = !DILocation(line: 1466, column: 40, scope: !6634)
!6689 = !DILocation(line: 1466, column: 65, scope: !6634)
!6690 = !DILocation(line: 1466, column: 56, scope: !6634)
!6691 = !DILocation(line: 1466, column: 52, scope: !6634)
!6692 = !DILocation(line: 1467, column: 18, scope: !6634)
!6693 = !DILocation(line: 1467, column: 9, scope: !6634)
!6694 = !DILocation(line: 1467, column: 5, scope: !6634)
!6695 = !DILocation(line: 1466, column: 67, scope: !6634)
!6696 = !DILocation(line: 1466, column: 50, scope: !6634)
!6697 = !DILocation(line: 1466, column: 34, scope: !6634)
!6698 = !DILocation(line: 1466, column: 22, scope: !6634)
!6699 = !DILocation(line: 1465, column: 38, scope: !6634)
!6700 = !DILocation(line: 1465, column: 4, scope: !6634)
!6701 = !DILocation(line: 1468, column: 7, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1468, column: 7)
!6703 = !DILocation(line: 1468, column: 9, scope: !6702)
!6704 = !DILocation(line: 1468, column: 7, scope: !6634)
!6705 = !DILocation(line: 1469, column: 9, scope: !6702)
!6706 = !DILocation(line: 1469, column: 8, scope: !6702)
!6707 = !DILocation(line: 1469, column: 6, scope: !6702)
!6708 = !DILocation(line: 1469, column: 5, scope: !6702)
!6709 = !DILocation(line: 1470, column: 10, scope: !6634)
!6710 = !DILocation(line: 1470, column: 3, scope: !6634)
!6711 = !DILocation(line: 1471, column: 1, scope: !6634)
!6712 = !DILocalVariable(name: "x", arg: 1, scope: !855, file: !3, line: 1327, type: !15)
!6713 = !DILocation(line: 1327, column: 41, scope: !855)
!6714 = !DILocalVariable(name: "p", scope: !855, file: !3, line: 1330, type: !15)
!6715 = !DILocation(line: 1330, column: 5, scope: !855)
!6716 = !DILocalVariable(name: "q", scope: !855, file: !3, line: 1331, type: !15)
!6717 = !DILocation(line: 1331, column: 5, scope: !855)
!6718 = !DILocalVariable(name: "i", scope: !855, file: !3, line: 1334, type: !218)
!6719 = !DILocation(line: 1334, column: 5, scope: !855)
!6720 = !DILocation(line: 1362, column: 5, scope: !855)
!6721 = !DILocation(line: 1362, column: 4, scope: !855)
!6722 = !DILocation(line: 1363, column: 5, scope: !855)
!6723 = !DILocation(line: 1363, column: 4, scope: !855)
!6724 = !DILocation(line: 1364, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !855, file: !3, line: 1364, column: 3)
!6726 = !DILocation(line: 1364, column: 8, scope: !6725)
!6727 = !DILocation(line: 1364, column: 13, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1364, column: 3)
!6729 = !DILocation(line: 1364, column: 15, scope: !6728)
!6730 = !DILocation(line: 1364, column: 3, scope: !6725)
!6731 = !DILocation(line: 1366, column: 7, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1365, column: 3)
!6733 = !DILocation(line: 1366, column: 9, scope: !6732)
!6734 = !DILocation(line: 1366, column: 8, scope: !6732)
!6735 = !DILocation(line: 1366, column: 11, scope: !6732)
!6736 = !DILocation(line: 1366, column: 10, scope: !6732)
!6737 = !DILocation(line: 1366, column: 18, scope: !6732)
!6738 = !DILocation(line: 1366, column: 13, scope: !6732)
!6739 = !DILocation(line: 1366, column: 12, scope: !6732)
!6740 = !DILocation(line: 1366, column: 6, scope: !6732)
!6741 = !DILocation(line: 1367, column: 7, scope: !6732)
!6742 = !DILocation(line: 1367, column: 9, scope: !6732)
!6743 = !DILocation(line: 1367, column: 8, scope: !6732)
!6744 = !DILocation(line: 1367, column: 11, scope: !6732)
!6745 = !DILocation(line: 1367, column: 10, scope: !6732)
!6746 = !DILocation(line: 1367, column: 18, scope: !6732)
!6747 = !DILocation(line: 1367, column: 13, scope: !6732)
!6748 = !DILocation(line: 1367, column: 12, scope: !6732)
!6749 = !DILocation(line: 1367, column: 6, scope: !6732)
!6750 = !DILocation(line: 1368, column: 3, scope: !6732)
!6751 = !DILocation(line: 1364, column: 22, scope: !6728)
!6752 = !DILocation(line: 1364, column: 3, scope: !6728)
!6753 = distinct !{!6753, !6730, !6754}
!6754 = !DILocation(line: 1368, column: 3, scope: !6725)
!6755 = !DILocation(line: 1369, column: 10, scope: !855)
!6756 = !DILocation(line: 1369, column: 12, scope: !855)
!6757 = !DILocation(line: 1369, column: 11, scope: !855)
!6758 = !DILocation(line: 1369, column: 3, scope: !855)
!6759 = !DILocalVariable(name: "x", arg: 1, scope: !867, file: !3, line: 1373, type: !15)
!6760 = !DILocation(line: 1373, column: 41, scope: !867)
!6761 = !DILocalVariable(name: "p", scope: !867, file: !3, line: 1376, type: !15)
!6762 = !DILocation(line: 1376, column: 5, scope: !867)
!6763 = !DILocalVariable(name: "q", scope: !867, file: !3, line: 1377, type: !15)
!6764 = !DILocation(line: 1377, column: 5, scope: !867)
!6765 = !DILocalVariable(name: "i", scope: !867, file: !3, line: 1380, type: !218)
!6766 = !DILocation(line: 1380, column: 5, scope: !867)
!6767 = !DILocation(line: 1402, column: 5, scope: !867)
!6768 = !DILocation(line: 1402, column: 4, scope: !867)
!6769 = !DILocation(line: 1403, column: 5, scope: !867)
!6770 = !DILocation(line: 1403, column: 4, scope: !867)
!6771 = !DILocation(line: 1404, column: 9, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !867, file: !3, line: 1404, column: 3)
!6773 = !DILocation(line: 1404, column: 8, scope: !6772)
!6774 = !DILocation(line: 1404, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 1404, column: 3)
!6776 = !DILocation(line: 1404, column: 15, scope: !6775)
!6777 = !DILocation(line: 1404, column: 3, scope: !6772)
!6778 = !DILocation(line: 1406, column: 7, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1405, column: 3)
!6780 = !DILocation(line: 1406, column: 14, scope: !6779)
!6781 = !DILocation(line: 1406, column: 13, scope: !6779)
!6782 = !DILocation(line: 1406, column: 8, scope: !6779)
!6783 = !DILocation(line: 1406, column: 22, scope: !6779)
!6784 = !DILocation(line: 1406, column: 21, scope: !6779)
!6785 = !DILocation(line: 1406, column: 16, scope: !6779)
!6786 = !DILocation(line: 1406, column: 30, scope: !6779)
!6787 = !DILocation(line: 1406, column: 25, scope: !6779)
!6788 = !DILocation(line: 1406, column: 24, scope: !6779)
!6789 = !DILocation(line: 1406, column: 6, scope: !6779)
!6790 = !DILocation(line: 1407, column: 7, scope: !6779)
!6791 = !DILocation(line: 1407, column: 14, scope: !6779)
!6792 = !DILocation(line: 1407, column: 13, scope: !6779)
!6793 = !DILocation(line: 1407, column: 8, scope: !6779)
!6794 = !DILocation(line: 1407, column: 22, scope: !6779)
!6795 = !DILocation(line: 1407, column: 21, scope: !6779)
!6796 = !DILocation(line: 1407, column: 16, scope: !6779)
!6797 = !DILocation(line: 1407, column: 30, scope: !6779)
!6798 = !DILocation(line: 1407, column: 25, scope: !6779)
!6799 = !DILocation(line: 1407, column: 24, scope: !6779)
!6800 = !DILocation(line: 1407, column: 6, scope: !6779)
!6801 = !DILocation(line: 1408, column: 3, scope: !6779)
!6802 = !DILocation(line: 1404, column: 22, scope: !6775)
!6803 = !DILocation(line: 1404, column: 3, scope: !6775)
!6804 = distinct !{!6804, !6777, !6805}
!6805 = !DILocation(line: 1408, column: 3, scope: !6772)
!6806 = !DILocation(line: 1409, column: 10, scope: !867)
!6807 = !DILocation(line: 1409, column: 12, scope: !867)
!6808 = !DILocation(line: 1409, column: 11, scope: !867)
!6809 = !DILocation(line: 1409, column: 3, scope: !867)
!6810 = !DILocalVariable(name: "x", arg: 1, scope: !875, file: !3, line: 1413, type: !15)
!6811 = !DILocation(line: 1413, column: 41, scope: !875)
!6812 = !DILocalVariable(name: "p", scope: !875, file: !3, line: 1416, type: !15)
!6813 = !DILocation(line: 1416, column: 5, scope: !875)
!6814 = !DILocalVariable(name: "q", scope: !875, file: !3, line: 1417, type: !15)
!6815 = !DILocation(line: 1417, column: 5, scope: !875)
!6816 = !DILocalVariable(name: "i", scope: !875, file: !3, line: 1420, type: !218)
!6817 = !DILocation(line: 1420, column: 5, scope: !875)
!6818 = !DILocation(line: 1442, column: 5, scope: !875)
!6819 = !DILocation(line: 1442, column: 4, scope: !875)
!6820 = !DILocation(line: 1443, column: 5, scope: !875)
!6821 = !DILocation(line: 1443, column: 4, scope: !875)
!6822 = !DILocation(line: 1444, column: 9, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !875, file: !3, line: 1444, column: 3)
!6824 = !DILocation(line: 1444, column: 8, scope: !6823)
!6825 = !DILocation(line: 1444, column: 13, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 1444, column: 3)
!6827 = !DILocation(line: 1444, column: 15, scope: !6826)
!6828 = !DILocation(line: 1444, column: 3, scope: !6823)
!6829 = !DILocation(line: 1446, column: 7, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1445, column: 3)
!6831 = !DILocation(line: 1446, column: 14, scope: !6830)
!6832 = !DILocation(line: 1446, column: 13, scope: !6830)
!6833 = !DILocation(line: 1446, column: 8, scope: !6830)
!6834 = !DILocation(line: 1446, column: 22, scope: !6830)
!6835 = !DILocation(line: 1446, column: 21, scope: !6830)
!6836 = !DILocation(line: 1446, column: 16, scope: !6830)
!6837 = !DILocation(line: 1446, column: 30, scope: !6830)
!6838 = !DILocation(line: 1446, column: 25, scope: !6830)
!6839 = !DILocation(line: 1446, column: 24, scope: !6830)
!6840 = !DILocation(line: 1446, column: 6, scope: !6830)
!6841 = !DILocation(line: 1447, column: 7, scope: !6830)
!6842 = !DILocation(line: 1447, column: 14, scope: !6830)
!6843 = !DILocation(line: 1447, column: 13, scope: !6830)
!6844 = !DILocation(line: 1447, column: 8, scope: !6830)
!6845 = !DILocation(line: 1447, column: 22, scope: !6830)
!6846 = !DILocation(line: 1447, column: 21, scope: !6830)
!6847 = !DILocation(line: 1447, column: 16, scope: !6830)
!6848 = !DILocation(line: 1447, column: 30, scope: !6830)
!6849 = !DILocation(line: 1447, column: 25, scope: !6830)
!6850 = !DILocation(line: 1447, column: 24, scope: !6830)
!6851 = !DILocation(line: 1447, column: 6, scope: !6830)
!6852 = !DILocation(line: 1448, column: 3, scope: !6830)
!6853 = !DILocation(line: 1444, column: 22, scope: !6826)
!6854 = !DILocation(line: 1444, column: 3, scope: !6826)
!6855 = distinct !{!6855, !6828, !6856}
!6856 = !DILocation(line: 1448, column: 3, scope: !6823)
!6857 = !DILocation(line: 1449, column: 10, scope: !875)
!6858 = !DILocation(line: 1449, column: 12, scope: !875)
!6859 = !DILocation(line: 1449, column: 11, scope: !875)
!6860 = !DILocation(line: 1449, column: 3, scope: !875)
!6861 = distinct !DISubprogram(name: "MagickMax", scope: !3, file: !3, line: 2438, type: !6862, scopeLine: 2439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!178, !860, !860}
!6864 = !DILocalVariable(name: "x", arg: 1, scope: !6861, file: !3, line: 2438, type: !860)
!6865 = !DILocation(line: 2438, column: 45, scope: !6861)
!6866 = !DILocalVariable(name: "y", arg: 2, scope: !6861, file: !3, line: 2438, type: !860)
!6867 = !DILocation(line: 2438, column: 60, scope: !6861)
!6868 = !DILocation(line: 2440, column: 7, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 2440, column: 7)
!6870 = !DILocation(line: 2440, column: 11, scope: !6869)
!6871 = !DILocation(line: 2440, column: 9, scope: !6869)
!6872 = !DILocation(line: 2440, column: 7, scope: !6861)
!6873 = !DILocation(line: 2441, column: 12, scope: !6869)
!6874 = !DILocation(line: 2441, column: 5, scope: !6869)
!6875 = !DILocation(line: 2442, column: 10, scope: !6861)
!6876 = !DILocation(line: 2442, column: 3, scope: !6861)
!6877 = !DILocation(line: 2443, column: 1, scope: !6861)
!6878 = distinct !DISubprogram(name: "AcquireContributionThreadSet", scope: !3, file: !3, line: 2411, type: !6879, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{!826, !2269}
!6881 = !DILocalVariable(name: "count", arg: 1, scope: !6878, file: !3, line: 2411, type: !2269)
!6882 = !DILocation(line: 2411, column: 69, scope: !6878)
!6883 = !DILocalVariable(name: "i", scope: !6878, file: !3, line: 2414, type: !218)
!6884 = !DILocation(line: 2414, column: 5, scope: !6878)
!6885 = !DILocalVariable(name: "contribution", scope: !6878, file: !3, line: 2417, type: !826)
!6886 = !DILocation(line: 2417, column: 7, scope: !6878)
!6887 = !DILocalVariable(name: "number_threads", scope: !6878, file: !3, line: 2420, type: !55)
!6888 = !DILocation(line: 2420, column: 5, scope: !6878)
!6889 = !DILocation(line: 2422, column: 27, scope: !6878)
!6890 = !DILocation(line: 2422, column: 17, scope: !6878)
!6891 = !DILocation(line: 2423, column: 59, scope: !6878)
!6892 = !DILocation(line: 2423, column: 38, scope: !6878)
!6893 = !DILocation(line: 2423, column: 16, scope: !6878)
!6894 = !DILocation(line: 2423, column: 15, scope: !6878)
!6895 = !DILocation(line: 2425, column: 7, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2425, column: 7)
!6897 = !DILocation(line: 2425, column: 20, scope: !6896)
!6898 = !DILocation(line: 2425, column: 7, scope: !6878)
!6899 = !DILocation(line: 2426, column: 5, scope: !6896)
!6900 = !DILocation(line: 2427, column: 28, scope: !6878)
!6901 = !DILocation(line: 2427, column: 43, scope: !6878)
!6902 = !DILocation(line: 2427, column: 57, scope: !6878)
!6903 = !DILocation(line: 2427, column: 10, scope: !6878)
!6904 = !DILocation(line: 2428, column: 9, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2428, column: 3)
!6906 = !DILocation(line: 2428, column: 8, scope: !6905)
!6907 = !DILocation(line: 2428, column: 13, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 2428, column: 3)
!6909 = !DILocation(line: 2428, column: 27, scope: !6908)
!6910 = !DILocation(line: 2428, column: 15, scope: !6908)
!6911 = !DILocation(line: 2428, column: 3, scope: !6905)
!6912 = !DILocation(line: 2430, column: 42, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 2429, column: 3)
!6914 = !DILocation(line: 2430, column: 21, scope: !6913)
!6915 = !DILocation(line: 2430, column: 5, scope: !6913)
!6916 = !DILocation(line: 2430, column: 18, scope: !6913)
!6917 = !DILocation(line: 2430, column: 20, scope: !6913)
!6918 = !DILocation(line: 2432, column: 9, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 2432, column: 9)
!6920 = !DILocation(line: 2432, column: 22, scope: !6919)
!6921 = !DILocation(line: 2432, column: 25, scope: !6919)
!6922 = !DILocation(line: 2432, column: 9, scope: !6913)
!6923 = !DILocation(line: 2433, column: 43, scope: !6919)
!6924 = !DILocation(line: 2433, column: 14, scope: !6919)
!6925 = !DILocation(line: 2433, column: 7, scope: !6919)
!6926 = !DILocation(line: 2434, column: 3, scope: !6913)
!6927 = !DILocation(line: 2428, column: 44, scope: !6908)
!6928 = !DILocation(line: 2428, column: 3, scope: !6908)
!6929 = distinct !{!6929, !6911, !6930}
!6930 = !DILocation(line: 2434, column: 3, scope: !6905)
!6931 = !DILocation(line: 2435, column: 10, scope: !6878)
!6932 = !DILocation(line: 2435, column: 3, scope: !6878)
!6933 = !DILocation(line: 2436, column: 1, scope: !6878)
!6934 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !6935, file: !6935, line: 117, type: !6936, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6935 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6936 = !DISubroutineType(types: !6937)
!6937 = !{!545}
!6938 = !DILocation(line: 122, column: 3, scope: !6934)
!6939 = distinct !DISubprogram(name: "MagickMin", scope: !3, file: !3, line: 2445, type: !6862, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6940 = !DILocalVariable(name: "x", arg: 1, scope: !6939, file: !3, line: 2445, type: !860)
!6941 = !DILocation(line: 2445, column: 45, scope: !6939)
!6942 = !DILocalVariable(name: "y", arg: 2, scope: !6939, file: !3, line: 2445, type: !860)
!6943 = !DILocation(line: 2445, column: 60, scope: !6939)
!6944 = !DILocation(line: 2447, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 2447, column: 7)
!6946 = !DILocation(line: 2447, column: 11, scope: !6945)
!6947 = !DILocation(line: 2447, column: 9, scope: !6945)
!6948 = !DILocation(line: 2447, column: 7, scope: !6939)
!6949 = !DILocation(line: 2448, column: 12, scope: !6945)
!6950 = !DILocation(line: 2448, column: 5, scope: !6945)
!6951 = !DILocation(line: 2449, column: 10, scope: !6939)
!6952 = !DILocation(line: 2449, column: 3, scope: !6939)
!6953 = !DILocation(line: 2450, column: 1, scope: !6939)
!6954 = distinct !DISubprogram(name: "DestroyContributionThreadSet", scope: !3, file: !3, line: 2396, type: !6955, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !644, retainedNodes: !858)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{!826, !826}
!6957 = !DILocalVariable(name: "contribution", arg: 1, scope: !6954, file: !3, line: 2397, type: !826)
!6958 = !DILocation(line: 2397, column: 22, scope: !6954)
!6959 = !DILocalVariable(name: "i", scope: !6954, file: !3, line: 2400, type: !218)
!6960 = !DILocation(line: 2400, column: 5, scope: !6954)
!6961 = !DILocation(line: 2403, column: 9, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2403, column: 3)
!6963 = !DILocation(line: 2403, column: 8, scope: !6962)
!6964 = !DILocation(line: 2403, column: 13, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 2403, column: 3)
!6966 = !DILocation(line: 2403, column: 27, scope: !6965)
!6967 = !DILocation(line: 2403, column: 15, scope: !6965)
!6968 = !DILocation(line: 2403, column: 3, scope: !6962)
!6969 = !DILocation(line: 2404, column: 9, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 2404, column: 9)
!6971 = !DILocation(line: 2404, column: 22, scope: !6970)
!6972 = !DILocation(line: 2404, column: 25, scope: !6970)
!6973 = !DILocation(line: 2404, column: 9, scope: !6965)
!6974 = !DILocation(line: 2406, column: 9, scope: !6970)
!6975 = !DILocation(line: 2406, column: 22, scope: !6970)
!6976 = !DILocation(line: 2405, column: 44, scope: !6970)
!6977 = !DILocation(line: 2405, column: 23, scope: !6970)
!6978 = !DILocation(line: 2405, column: 7, scope: !6970)
!6979 = !DILocation(line: 2405, column: 20, scope: !6970)
!6980 = !DILocation(line: 2405, column: 22, scope: !6970)
!6981 = !DILocation(line: 2404, column: 49, scope: !6970)
!6982 = !DILocation(line: 2403, column: 68, scope: !6965)
!6983 = !DILocation(line: 2403, column: 3, scope: !6965)
!6984 = distinct !{!6984, !6968, !6985}
!6985 = !DILocation(line: 2406, column: 24, scope: !6962)
!6986 = !DILocation(line: 2407, column: 61, scope: !6954)
!6987 = !DILocation(line: 2407, column: 38, scope: !6954)
!6988 = !DILocation(line: 2407, column: 16, scope: !6954)
!6989 = !DILocation(line: 2407, column: 15, scope: !6954)
!6990 = !DILocation(line: 2408, column: 10, scope: !6954)
!6991 = !DILocation(line: 2408, column: 3, scope: !6954)
